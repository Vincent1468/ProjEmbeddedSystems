

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 10 12:34:48 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_handle_remote
  1182                           	FNCALL	_main,_update_input
  1183                           	FNCALL	_main,_update_volume
  1184                           	FNCALL	_update_volume,_display_write_end
  1185                           	FNCALL	_update_volume,_display_write_start
  1186                           	FNCALL	_update_volume,_write_int
  1187                           	FNCALL	_update_volume,_write_space
  1188                           	FNCALL	_update_volume,_write_text
  1189                           	FNCALL	_update_input,_display_write_end
  1190                           	FNCALL	_update_input,_display_write_start
  1191                           	FNCALL	_update_input,_write_int
  1192                           	FNCALL	_update_input,_write_space
  1193                           	FNCALL	_update_input,_write_text
  1194                           	FNCALL	_write_space,_spiWrite
  1195                           	FNCALL	_write_int,_sprintf
  1196                           	FNCALL	_write_int,_write_char
  1197                           	FNCALL	_write_int,_write_text
  1198                           	FNCALL	_write_text,_write_char
  1199                           	FNCALL	_write_char,_write_font
  1200                           	FNCALL	_write_font,___wmul
  1201                           	FNCALL	_write_font,_spiWrite
  1202                           	FNCALL	_sprintf,___lwdiv
  1203                           	FNCALL	_sprintf,___lwmod
  1204                           	FNCALL	_config,_display_init
  1205                           	FNCALL	_config,_init_adc
  1206                           	FNCALL	_config,_init_remote
  1207                           	FNCALL	_display_init,_spiWrite
  1208                           	FNROOT	_main
  1209                           	FNCALL	_isr,_handle_potmeter
  1210                           	FNCALL	_isr,_handle_rotary
  1211                           	FNCALL	_isr,_poll_receiver
  1212                           	FNCALL	_isr,_start_receive
  1213                           	FNCALL	_start_receive,_poll_receiver
  1214                           	FNCALL	_handle_potmeter,_is_deadzone
  1215                           	FNCALL	_handle_potmeter,i1___lwdiv
  1216                           	FNCALL	_is_deadzone,___fladd
  1217                           	FNCALL	_is_deadzone,___fltol
  1218                           	FNCALL	_is_deadzone,___xxtofl
  1219                           	FNCALL	_is_deadzone,i1___wmul
  1220                           	FNCALL	intlevel1,_isr
  1221                           	global	intlevel1
  1222                           	FNROOT	intlevel1
  1223                           	global	_font
  1224                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1225                           global __pstringtext
  1226                           __pstringtext:
  1227  0800                     stringtab:
  1228  0800                     	global    __stringtab
  1229                           __stringtab:
  1230  0800                     ;	String table - string pointers are 2 bytes each
  1231                           	btfsc	(btemp+1),7
  1232  0800  1BFF               	ljmp	stringcode
  1233  0801  280A               	bcf	status,7
  1234  0802  1383               	btfsc	(btemp+1),0
  1235  0803  187F               	bsf	status,7
  1236  0804  1783               	movf	indf,w
  1237  0805  0800               	incf fsr
  1238  0806  0A84               skipnz
  1239  0807  1903               incf btemp+1
  1240  0808  0AFF               	return
  1241  0809  0008               stringcode:
  1242  080A                     	movf btemp+1,w
  1243  080A  087F               andlw 7Fh
  1244  080B  397F               movwf	pclath
  1245  080C  008A               	movf	fsr,w
  1246  080D  0804               incf fsr
  1247  080E  0A84               skipnz
  1248  080F  1903               incf btemp+1
  1249  0810  0AFF               	movwf pc
  1250  0811  0082               	global __stringbase
  1251                           __stringbase:
  1252  0812                     	global    __end_of__stringtab
  1253                           __end_of__stringtab:
  1254  0812                     	file	"./Font.h"
  1255                           	line	4
  1256                           _font:
  1257  0812                     	retlw	03Eh
  1258  0812  343E               	retlw	0
  1259  0813  3400               
  1260                           	retlw	051h
  1261  0814  3451               	retlw	0
  1262  0815  3400               
  1263                           	retlw	049h
  1264  0816  3449               	retlw	0
  1265  0817  3400               
  1266                           	retlw	045h
  1267  0818  3445               	retlw	0
  1268  0819  3400               
  1269                           	retlw	03Eh
  1270  081A  343E               	retlw	0
  1271  081B  3400               
  1272                           	retlw	low(0)
  1273  081C  3400               	retlw	high(0)
  1274  081D  3400               
  1275                           	retlw	042h
  1276  081E  3442               	retlw	0
  1277  081F  3400               
  1278                           	retlw	07Fh
  1279  0820  347F               	retlw	0
  1280  0821  3400               
  1281                           	retlw	040h
  1282  0822  3440               	retlw	0
  1283  0823  3400               
  1284                           	retlw	low(0)
  1285  0824  3400               	retlw	high(0)
  1286  0825  3400               
  1287                           	retlw	042h
  1288  0826  3442               	retlw	0
  1289  0827  3400               
  1290                           	retlw	061h
  1291  0828  3461               	retlw	0
  1292  0829  3400               
  1293                           	retlw	051h
  1294  082A  3451               	retlw	0
  1295  082B  3400               
  1296                           	retlw	049h
  1297  082C  3449               	retlw	0
  1298  082D  3400               
  1299                           	retlw	046h
  1300  082E  3446               	retlw	0
  1301  082F  3400               
  1302                           	retlw	021h
  1303  0830  3421               	retlw	0
  1304  0831  3400               
  1305                           	retlw	041h
  1306  0832  3441               	retlw	0
  1307  0833  3400               
  1308                           	retlw	045h
  1309  0834  3445               	retlw	0
  1310  0835  3400               
  1311                           	retlw	04Bh
  1312  0836  344B               	retlw	0
  1313  0837  3400               
  1314                           	retlw	031h
  1315  0838  3431               	retlw	0
  1316  0839  3400               
  1317                           	retlw	018h
  1318  083A  3418               	retlw	0
  1319  083B  3400               
  1320                           	retlw	014h
  1321  083C  3414               	retlw	0
  1322  083D  3400               
  1323                           	retlw	012h
  1324  083E  3412               	retlw	0
  1325  083F  3400               
  1326                           	retlw	07Fh
  1327  0840  347F               	retlw	0
  1328  0841  3400               
  1329                           	retlw	010h
  1330  0842  3410               	retlw	0
  1331  0843  3400               
  1332                           	retlw	027h
  1333  0844  3427               	retlw	0
  1334  0845  3400               
  1335                           	retlw	045h
  1336  0846  3445               	retlw	0
  1337  0847  3400               
  1338                           	retlw	045h
  1339  0848  3445               	retlw	0
  1340  0849  3400               
  1341                           	retlw	045h
  1342  084A  3445               	retlw	0
  1343  084B  3400               
  1344                           	retlw	039h
  1345  084C  3439               	retlw	0
  1346  084D  3400               
  1347                           	retlw	03Ch
  1348  084E  343C               	retlw	0
  1349  084F  3400               
  1350                           	retlw	04Ah
  1351  0850  344A               	retlw	0
  1352  0851  3400               
  1353                           	retlw	049h
  1354  0852  3449               	retlw	0
  1355  0853  3400               
  1356                           	retlw	049h
  1357  0854  3449               	retlw	0
  1358  0855  3400               
  1359                           	retlw	030h
  1360  0856  3430               	retlw	0
  1361  0857  3400               
  1362                           	retlw	01h
  1363  0858  3401               	retlw	0
  1364  0859  3400               
  1365                           	retlw	071h
  1366  085A  3471               	retlw	0
  1367  085B  3400               
  1368                           	retlw	09h
  1369  085C  3409               	retlw	0
  1370  085D  3400               
  1371                           	retlw	05h
  1372  085E  3405               	retlw	0
  1373  085F  3400               
  1374                           	retlw	03h
  1375  0860  3403               	retlw	0
  1376  0861  3400               
  1377                           	retlw	036h
  1378  0862  3436               	retlw	0
  1379  0863  3400               
  1380                           	retlw	049h
  1381  0864  3449               	retlw	0
  1382  0865  3400               
  1383                           	retlw	049h
  1384  0866  3449               	retlw	0
  1385  0867  3400               
  1386                           	retlw	049h
  1387  0868  3449               	retlw	0
  1388  0869  3400               
  1389                           	retlw	036h
  1390  086A  3436               	retlw	0
  1391  086B  3400               
  1392                           	retlw	06h
  1393  086C  3406               	retlw	0
  1394  086D  3400               
  1395                           	retlw	049h
  1396  086E  3449               	retlw	0
  1397  086F  3400               
  1398                           	retlw	049h
  1399  0870  3449               	retlw	0
  1400  0871  3400               
  1401                           	retlw	029h
  1402  0872  3429               	retlw	0
  1403  0873  3400               
  1404                           	retlw	01Eh
  1405  0874  341E               	retlw	0
  1406  0875  3400               
  1407                           	retlw	07Eh
  1408  0876  347E               	retlw	0
  1409  0877  3400               
  1410                           	retlw	011h
  1411  0878  3411               	retlw	0
  1412  0879  3400               
  1413                           	retlw	011h
  1414  087A  3411               	retlw	0
  1415  087B  3400               
  1416                           	retlw	011h
  1417  087C  3411               	retlw	0
  1418  087D  3400               
  1419                           	retlw	07Eh
  1420  087E  347E               	retlw	0
  1421  087F  3400               
  1422                           	retlw	07Fh
  1423  0880  347F               	retlw	0
  1424  0881  3400               
  1425                           	retlw	049h
  1426  0882  3449               	retlw	0
  1427  0883  3400               
  1428                           	retlw	049h
  1429  0884  3449               	retlw	0
  1430  0885  3400               
  1431                           	retlw	049h
  1432  0886  3449               	retlw	0
  1433  0887  3400               
  1434                           	retlw	036h
  1435  0888  3436               	retlw	0
  1436  0889  3400               
  1437                           	retlw	03Eh
  1438  088A  343E               	retlw	0
  1439  088B  3400               
  1440                           	retlw	041h
  1441  088C  3441               	retlw	0
  1442  088D  3400               
  1443                           	retlw	041h
  1444  088E  3441               	retlw	0
  1445  088F  3400               
  1446                           	retlw	041h
  1447  0890  3441               	retlw	0
  1448  0891  3400               
  1449                           	retlw	022h
  1450  0892  3422               	retlw	0
  1451  0893  3400               
  1452                           	retlw	07Fh
  1453  0894  347F               	retlw	0
  1454  0895  3400               
  1455                           	retlw	041h
  1456  0896  3441               	retlw	0
  1457  0897  3400               
  1458                           	retlw	041h
  1459  0898  3441               	retlw	0
  1460  0899  3400               
  1461                           	retlw	022h
  1462  089A  3422               	retlw	0
  1463  089B  3400               
  1464                           	retlw	01Ch
  1465  089C  341C               	retlw	0
  1466  089D  3400               
  1467                           	retlw	07Fh
  1468  089E  347F               	retlw	0
  1469  089F  3400               
  1470                           	retlw	049h
  1471  08A0  3449               	retlw	0
  1472  08A1  3400               
  1473                           	retlw	049h
  1474  08A2  3449               	retlw	0
  1475  08A3  3400               
  1476                           	retlw	049h
  1477  08A4  3449               	retlw	0
  1478  08A5  3400               
  1479                           	retlw	041h
  1480  08A6  3441               	retlw	0
  1481  08A7  3400               
  1482                           	retlw	07Fh
  1483  08A8  347F               	retlw	0
  1484  08A9  3400               
  1485                           	retlw	09h
  1486  08AA  3409               	retlw	0
  1487  08AB  3400               
  1488                           	retlw	09h
  1489  08AC  3409               	retlw	0
  1490  08AD  3400               
  1491                           	retlw	01h
  1492  08AE  3401               	retlw	0
  1493  08AF  3400               
  1494                           	retlw	01h
  1495  08B0  3401               	retlw	0
  1496  08B1  3400               
  1497                           	retlw	03Eh
  1498  08B2  343E               	retlw	0
  1499  08B3  3400               
  1500                           	retlw	041h
  1501  08B4  3441               	retlw	0
  1502  08B5  3400               
  1503                           	retlw	041h
  1504  08B6  3441               	retlw	0
  1505  08B7  3400               
  1506                           	retlw	051h
  1507  08B8  3451               	retlw	0
  1508  08B9  3400               
  1509                           	retlw	032h
  1510  08BA  3432               	retlw	0
  1511  08BB  3400               
  1512                           	retlw	07Fh
  1513  08BC  347F               	retlw	0
  1514  08BD  3400               
  1515                           	retlw	08h
  1516  08BE  3408               	retlw	0
  1517  08BF  3400               
  1518                           	retlw	08h
  1519  08C0  3408               	retlw	0
  1520  08C1  3400               
  1521                           	retlw	08h
  1522  08C2  3408               	retlw	0
  1523  08C3  3400               
  1524                           	retlw	07Fh
  1525  08C4  347F               	retlw	0
  1526  08C5  3400               
  1527                           	retlw	low(0)
  1528  08C6  3400               	retlw	high(0)
  1529  08C7  3400               
  1530                           	retlw	041h
  1531  08C8  3441               	retlw	0
  1532  08C9  3400               
  1533                           	retlw	07Fh
  1534  08CA  347F               	retlw	0
  1535  08CB  3400               
  1536                           	retlw	041h
  1537  08CC  3441               	retlw	0
  1538  08CD  3400               
  1539                           	retlw	low(0)
  1540  08CE  3400               	retlw	high(0)
  1541  08CF  3400               
  1542                           	retlw	020h
  1543  08D0  3420               	retlw	0
  1544  08D1  3400               
  1545                           	retlw	040h
  1546  08D2  3440               	retlw	0
  1547  08D3  3400               
  1548                           	retlw	041h
  1549  08D4  3441               	retlw	0
  1550  08D5  3400               
  1551                           	retlw	03Fh
  1552  08D6  343F               	retlw	0
  1553  08D7  3400               
  1554                           	retlw	01h
  1555  08D8  3401               	retlw	0
  1556  08D9  3400               
  1557                           	retlw	07Fh
  1558  08DA  347F               	retlw	0
  1559  08DB  3400               
  1560                           	retlw	08h
  1561  08DC  3408               	retlw	0
  1562  08DD  3400               
  1563                           	retlw	014h
  1564  08DE  3414               	retlw	0
  1565  08DF  3400               
  1566                           	retlw	022h
  1567  08E0  3422               	retlw	0
  1568  08E1  3400               
  1569                           	retlw	041h
  1570  08E2  3441               	retlw	0
  1571  08E3  3400               
  1572                           	retlw	07Fh
  1573  08E4  347F               	retlw	0
  1574  08E5  3400               
  1575                           	retlw	040h
  1576  08E6  3440               	retlw	0
  1577  08E7  3400               
  1578                           	retlw	040h
  1579  08E8  3440               	retlw	0
  1580  08E9  3400               
  1581                           	retlw	040h
  1582  08EA  3440               	retlw	0
  1583  08EB  3400               
  1584                           	retlw	040h
  1585  08EC  3440               	retlw	0
  1586  08ED  3400               
  1587                           	retlw	07Fh
  1588  08EE  347F               	retlw	0
  1589  08EF  3400               
  1590                           	retlw	02h
  1591  08F0  3402               	retlw	0
  1592  08F1  3400               
  1593                           	retlw	04h
  1594  08F2  3404               	retlw	0
  1595  08F3  3400               
  1596                           	retlw	02h
  1597  08F4  3402               	retlw	0
  1598  08F5  3400               
  1599                           	retlw	07Fh
  1600  08F6  347F               	retlw	0
  1601  08F7  3400               
  1602                           	retlw	07Fh
  1603  08F8  347F               	retlw	0
  1604  08F9  3400               
  1605                           	retlw	04h
  1606  08FA  3404               	retlw	0
  1607  08FB  3400               
  1608                           	retlw	08h
  1609  08FC  3408               	retlw	0
  1610  08FD  3400               
  1611                           	retlw	010h
  1612  08FE  3410               	retlw	0
  1613  08FF  3400               
  1614                           	retlw	07Fh
  1615  0900  347F               	retlw	0
  1616  0901  3400               
  1617                           	retlw	03Eh
  1618  0902  343E               	retlw	0
  1619  0903  3400               
  1620                           	retlw	041h
  1621  0904  3441               	retlw	0
  1622  0905  3400               
  1623                           	retlw	041h
  1624  0906  3441               	retlw	0
  1625  0907  3400               
  1626                           	retlw	041h
  1627  0908  3441               	retlw	0
  1628  0909  3400               
  1629                           	retlw	03Eh
  1630  090A  343E               	retlw	0
  1631  090B  3400               
  1632                           	retlw	07Fh
  1633  090C  347F               	retlw	0
  1634  090D  3400               
  1635                           	retlw	09h
  1636  090E  3409               	retlw	0
  1637  090F  3400               
  1638                           	retlw	09h
  1639  0910  3409               	retlw	0
  1640  0911  3400               
  1641                           	retlw	09h
  1642  0912  3409               	retlw	0
  1643  0913  3400               
  1644                           	retlw	06h
  1645  0914  3406               	retlw	0
  1646  0915  3400               
  1647                           	retlw	03Eh
  1648  0916  343E               	retlw	0
  1649  0917  3400               
  1650                           	retlw	041h
  1651  0918  3441               	retlw	0
  1652  0919  3400               
  1653                           	retlw	051h
  1654  091A  3451               	retlw	0
  1655  091B  3400               
  1656                           	retlw	021h
  1657  091C  3421               	retlw	0
  1658  091D  3400               
  1659                           	retlw	05Eh
  1660  091E  345E               	retlw	0
  1661  091F  3400               
  1662                           	retlw	07Fh
  1663  0920  347F               	retlw	0
  1664  0921  3400               
  1665                           	retlw	09h
  1666  0922  3409               	retlw	0
  1667  0923  3400               
  1668                           	retlw	019h
  1669  0924  3419               	retlw	0
  1670  0925  3400               
  1671                           	retlw	029h
  1672  0926  3429               	retlw	0
  1673  0927  3400               
  1674                           	retlw	046h
  1675  0928  3446               	retlw	0
  1676  0929  3400               
  1677                           	retlw	046h
  1678  092A  3446               	retlw	0
  1679  092B  3400               
  1680                           	retlw	049h
  1681  092C  3449               	retlw	0
  1682  092D  3400               
  1683                           	retlw	049h
  1684  092E  3449               	retlw	0
  1685  092F  3400               
  1686                           	retlw	049h
  1687  0930  3449               	retlw	0
  1688  0931  3400               
  1689                           	retlw	031h
  1690  0932  3431               	retlw	0
  1691  0933  3400               
  1692                           	retlw	01h
  1693  0934  3401               	retlw	0
  1694  0935  3400               
  1695                           	retlw	01h
  1696  0936  3401               	retlw	0
  1697  0937  3400               
  1698                           	retlw	07Fh
  1699  0938  347F               	retlw	0
  1700  0939  3400               
  1701                           	retlw	01h
  1702  093A  3401               	retlw	0
  1703  093B  3400               
  1704                           	retlw	01h
  1705  093C  3401               	retlw	0
  1706  093D  3400               
  1707                           	retlw	03Fh
  1708  093E  343F               	retlw	0
  1709  093F  3400               
  1710                           	retlw	040h
  1711  0940  3440               	retlw	0
  1712  0941  3400               
  1713                           	retlw	040h
  1714  0942  3440               	retlw	0
  1715  0943  3400               
  1716                           	retlw	040h
  1717  0944  3440               	retlw	0
  1718  0945  3400               
  1719                           	retlw	03Fh
  1720  0946  343F               	retlw	0
  1721  0947  3400               
  1722                           	retlw	01Fh
  1723  0948  341F               	retlw	0
  1724  0949  3400               
  1725                           	retlw	020h
  1726  094A  3420               	retlw	0
  1727  094B  3400               
  1728                           	retlw	040h
  1729  094C  3440               	retlw	0
  1730  094D  3400               
  1731                           	retlw	020h
  1732  094E  3420               	retlw	0
  1733  094F  3400               
  1734                           	retlw	01Fh
  1735  0950  341F               	retlw	0
  1736  0951  3400               
  1737                           	retlw	07Fh
  1738  0952  347F               	retlw	0
  1739  0953  3400               
  1740                           	retlw	020h
  1741  0954  3420               	retlw	0
  1742  0955  3400               
  1743                           	retlw	018h
  1744  0956  3418               	retlw	0
  1745  0957  3400               
  1746                           	retlw	020h
  1747  0958  3420               	retlw	0
  1748  0959  3400               
  1749                           	retlw	07Fh
  1750  095A  347F               	retlw	0
  1751  095B  3400               
  1752                           	retlw	063h
  1753  095C  3463               	retlw	0
  1754  095D  3400               
  1755                           	retlw	014h
  1756  095E  3414               	retlw	0
  1757  095F  3400               
  1758                           	retlw	08h
  1759  0960  3408               	retlw	0
  1760  0961  3400               
  1761                           	retlw	014h
  1762  0962  3414               	retlw	0
  1763  0963  3400               
  1764                           	retlw	063h
  1765  0964  3463               	retlw	0
  1766  0965  3400               
  1767                           	retlw	03h
  1768  0966  3403               	retlw	0
  1769  0967  3400               
  1770                           	retlw	04h
  1771  0968  3404               	retlw	0
  1772  0969  3400               
  1773                           	retlw	078h
  1774  096A  3478               	retlw	0
  1775  096B  3400               
  1776                           	retlw	04h
  1777  096C  3404               	retlw	0
  1778  096D  3400               
  1779                           	retlw	03h
  1780  096E  3403               	retlw	0
  1781  096F  3400               
  1782                           	retlw	061h
  1783  0970  3461               	retlw	0
  1784  0971  3400               
  1785                           	retlw	051h
  1786  0972  3451               	retlw	0
  1787  0973  3400               
  1788                           	retlw	049h
  1789  0974  3449               	retlw	0
  1790  0975  3400               
  1791                           	retlw	045h
  1792  0976  3445               	retlw	0
  1793  0977  3400               
  1794                           	retlw	043h
  1795  0978  3443               	retlw	0
  1796  0979  3400               
  1797                           	retlw	low(0)
  1798  097A  3400               	retlw	high(0)
  1799  097B  3400               
  1800                           	retlw	low(0)
  1801  097C  3400               	retlw	high(0)
  1802  097D  3400               
  1803                           	retlw	low(0)
  1804  097E  3400               	retlw	high(0)
  1805  097F  3400               
  1806                           	retlw	low(0)
  1807  0980  3400               	retlw	high(0)
  1808  0981  3400               
  1809                           	retlw	low(0)
  1810  0982  3400               	retlw	high(0)
  1811  0983  3400               
  1812                           	global __end_of_font
  1813                           __end_of_font:
  1814  0984                     	global	_dpowers
  1815                           psect	stringtext
  1816                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  1817                           	line	358
  1818                           _dpowers:
  1819  0984                     	retlw	01h
  1820  0984  3401               	retlw	0
  1821  0985  3400               
  1822                           	retlw	0Ah
  1823  0986  340A               	retlw	0
  1824  0987  3400               
  1825                           	retlw	064h
  1826  0988  3464               	retlw	0
  1827  0989  3400               
  1828                           	retlw	0E8h
  1829  098A  34E8               	retlw	03h
  1830  098B  3403               
  1831                           	retlw	010h
  1832  098C  3410               	retlw	027h
  1833  098D  3427               
  1834                           	global __end_of_dpowers
  1835                           __end_of_dpowers:
  1836  098E                     	global	_step_size
  1837                           psect	stringtext
  1838                           	file	"./Volume.h"
  1839                           	line	5
  1840                           _step_size:
  1841  098E                     	retlw	019h
  1842  098E  3419               	retlw	0
  1843  098F  3400               
  1844                           	global __end_of_step_size
  1845                           __end_of_step_size:
  1846  0990                     	global	_font
  1847                           	global	_dpowers
  1848                           	global	_step_size
  1849                           	global	_receive_count
  1850                           	global	__lastB
  1851                           	global	__lastA
  1852                           	global	_ir_input
  1853                           	global	_lastInput
  1854                           	global	_lastVolume
  1855                           	global	_volume
  1856                           	global	__selectedInput
  1857                           	global	__selectedDisplay
  1858                           	global	__inputUpdateRequired
  1859                           	global	_T2CONbits
  1860                           _T2CONbits	set	0x12
  1861  0012                     	global	_ADRESH
  1862                           _ADRESH	set	0x1E
  1863  001E                     	global	_PORTC
  1864                           _PORTC	set	0x7
  1865  0007                     	global	_PORTA
  1866                           _PORTA	set	0x5
  1867  0005                     	global	_SSPBUF
  1868                           _SSPBUF	set	0x13
  1869  0013                     	global	_PORTCbits
  1870                           _PORTCbits	set	0x7
  1871  0007                     	global	_PORTDbits
  1872                           _PORTDbits	set	0x8
  1873  0008                     	global	_SSPCON
  1874                           _SSPCON	set	0x14
  1875  0014                     	global	_PIR1bits
  1876                           _PIR1bits	set	0xC
  1877  000C                     	global	_PORTBbits
  1878                           _PORTBbits	set	0x6
  1879  0006                     	global	_INTCONbits
  1880                           _INTCONbits	set	0xB
  1881  000B                     	global	_ADCON0bits
  1882                           _ADCON0bits	set	0x1F
  1883  001F                     	global	_ADRESL
  1884                           _ADRESL	set	0x9E
  1885  009E                     	global	_PIE1bits
  1886                           _PIE1bits	set	0x8C
  1887  008C                     	global	_ADCON1bits
  1888                           _ADCON1bits	set	0x9F
  1889  009F                     	global	_IOCBbits
  1890                           _IOCBbits	set	0x96
  1891  0096                     	global	_TRISCbits
  1892                           _TRISCbits	set	0x87
  1893  0087                     	global	_TRISEbits
  1894                           _TRISEbits	set	0x89
  1895  0089                     	global	_TRISBbits
  1896                           _TRISBbits	set	0x86
  1897  0086                     	global	_TRISAbits
  1898                           _TRISAbits	set	0x85
  1899  0085                     	global	_OSCCONbits
  1900                           _OSCCONbits	set	0x8F
  1901  008F                     	global	_SSPSTATbits
  1902                           _SSPSTATbits	set	0x94
  1903  0094                     	global	_TRISC
  1904                           _TRISC	set	0x87
  1905  0087                     	global	_TRISD
  1906                           _TRISD	set	0x88
  1907  0088                     	global	_SSPSTAT
  1908                           _SSPSTAT	set	0x94
  1909  0094                     	global	_PR2
  1910                           _PR2	set	0x92
  1911  0092                     	global	_ANSELbits
  1912                           _ANSELbits	set	0x188
  1913  0188                     	global	_ANSELHbits
  1914                           _ANSELHbits	set	0x189
  1915  0189                     	
  1916                           STR_1:	
  1917  0990                     	retlw	73	;'I'
  1918  0990  3449               	retlw	78	;'N'
  1919  0991  344E               	retlw	80	;'P'
  1920  0992  3450               	retlw	85	;'U'
  1921  0993  3455               	retlw	84	;'T'
  1922  0994  3454               	retlw	0
  1923  0995  3400               psect	stringtext
  1924                           	
  1925                           STR_2:	
  1926  0996                     	retlw	86	;'V'
  1927  0996  3456               	retlw	79	;'O'
  1928  0997  344F               	retlw	76	;'L'
  1929  0998  344C               	retlw	0
  1930  0999  3400               psect	stringtext
  1931                           	
  1932                           STR_3:	
  1933  099A                     	retlw	37	;'%'
  1934  099A  3425               	retlw	100	;'d'
  1935  099B  3464               	retlw	0
  1936  099C  3400               psect	stringtext
  1937                           ; #config settings
  1938                           global __CFG_FOSC$INTRC_CLKOUT
  1939                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1940  0000                     global __CFG_WDTE$OFF
  1941                           __CFG_WDTE$OFF equ 0x0
  1942  0000                     global __CFG_PWRTE$OFF
  1943                           __CFG_PWRTE$OFF equ 0x0
  1944  0000                     global __CFG_MCLRE$OFF
  1945                           __CFG_MCLRE$OFF equ 0x0
  1946  0000                     global __CFG_CP$OFF
  1947                           __CFG_CP$OFF equ 0x0
  1948  0000                     global __CFG_CPD$OFF
  1949                           __CFG_CPD$OFF equ 0x0
  1950  0000                     global __CFG_BOREN$ON
  1951                           __CFG_BOREN$ON equ 0x0
  1952  0000                     global __CFG_IESO$OFF
  1953                           __CFG_IESO$OFF equ 0x0
  1954  0000                     global __CFG_FCMEN$OFF
  1955                           __CFG_FCMEN$OFF equ 0x0
  1956  0000                     global __CFG_LVP$OFF
  1957                           __CFG_LVP$OFF equ 0x0
  1958  0000                     global __CFG_BOR4V$BOR21V
  1959                           __CFG_BOR4V$BOR21V equ 0x0
  1960  0000                     global __CFG_WRT$OFF
  1961                           __CFG_WRT$OFF equ 0x0
  1962  0000                     	file	"/tmp/xcXotvf22"
  1963                           	line	#
  1964                           psect cinit,class=CODE,delta=2
  1965                           global start_initialization
  1966                           start_initialization:
  1967  07E4                     
  1968                           global __initialization
  1969                           __initialization:
  1970  07E4                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1971                           global __pbssCOMMON
  1972                           __pbssCOMMON:
  1973  007D                     _receive_count:
  1974  007D                            ds      1
  1975  007D                     
  1976                           psect	bssBANK0,class=BANK0,space=1,noexec
  1977                           global __pbssBANK0
  1978                           __pbssBANK0:
  1979  005C                     __lastB:
  1980  005C                            ds      2
  1981  005C                     
  1982                           __lastA:
  1983  005E                            ds      2
  1984  005E                     
  1985                           _ignore_poll:
  1986  0060                            ds      1
  1987  0060                     
  1988                           psect	bssBANK1,class=BANK1,space=1,noexec
  1989                           global __pbssBANK1
  1990                           __pbssBANK1:
  1991  00C5                     _ir_input:
  1992  00C5                            ds      4
  1993  00C5                     
  1994                           _lastInput:
  1995  00C9                            ds      2
  1996  00C9                     
  1997                           _lastVolume:
  1998  00CB                            ds      2
  1999  00CB                     
  2000                           _volume:
  2001  00CD                            ds      2
  2002  00CD                     
  2003                           __selectedInput:
  2004  00CF                            ds      2
  2005  00CF                     
  2006                           __selectedDisplay:
  2007  00D1                            ds      1
  2008  00D1                     
  2009                           __inputUpdateRequired:
  2010  00D2                            ds      1
  2011  00D2                     
  2012                           	file	"/tmp/xcXotvf22"
  2013                           	line	#
  2014                           ; Clear objects allocated to COMMON
  2015                           psect cinit,class=CODE,delta=2,merge=1
  2016                           	clrf	((__pbssCOMMON)+0)&07Fh
  2017  07E4  01FD               ; Clear objects allocated to BANK0
  2018                           psect cinit,class=CODE,delta=2,merge=1
  2019                           	bcf	status, 5	;RP0=0, select bank0
  2020  07E5  1283               	bcf	status, 6	;RP1=0, select bank0
  2021  07E6  1303               	clrf	((__pbssBANK0)+0)&07Fh
  2022  07E7  01DC               	clrf	((__pbssBANK0)+1)&07Fh
  2023  07E8  01DD               	clrf	((__pbssBANK0)+2)&07Fh
  2024  07E9  01DE               	clrf	((__pbssBANK0)+3)&07Fh
  2025  07EA  01DF               	clrf	((__pbssBANK0)+4)&07Fh
  2026  07EB  01E0               ; Clear objects allocated to BANK1
  2027                           psect cinit,class=CODE,delta=2,merge=1
  2028                           	bsf	status, 5	;RP0=1, select bank1
  2029  07EC  1683               	bcf	status, 6	;RP1=0, select bank1
  2030  07ED  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2031  07EE  01C5               	clrf	((__pbssBANK1)+1)&07Fh
  2032  07EF  01C6               	clrf	((__pbssBANK1)+2)&07Fh
  2033  07F0  01C7               	clrf	((__pbssBANK1)+3)&07Fh
  2034  07F1  01C8               	clrf	((__pbssBANK1)+4)&07Fh
  2035  07F2  01C9               	clrf	((__pbssBANK1)+5)&07Fh
  2036  07F3  01CA               	clrf	((__pbssBANK1)+6)&07Fh
  2037  07F4  01CB               	clrf	((__pbssBANK1)+7)&07Fh
  2038  07F5  01CC               	clrf	((__pbssBANK1)+8)&07Fh
  2039  07F6  01CD               	clrf	((__pbssBANK1)+9)&07Fh
  2040  07F7  01CE               	clrf	((__pbssBANK1)+10)&07Fh
  2041  07F8  01CF               	clrf	((__pbssBANK1)+11)&07Fh
  2042  07F9  01D0               	clrf	((__pbssBANK1)+12)&07Fh
  2043  07FA  01D1               	clrf	((__pbssBANK1)+13)&07Fh
  2044  07FB  01D2               psect cinit,class=CODE,delta=2,merge=1
  2045                           global end_of_initialization,__end_of__initialization
  2046                           
  2047                           ;End of C runtime variable initialization code
  2048                           
  2049                           end_of_initialization:
  2050  07FC                     __end_of__initialization:
  2051  07FC                     clrf status
  2052  07FC  0183               ljmp _main	;jump to C main() function
  2053  07FD  120A  158A  2B4C   psect	cstackBANK1,class=BANK1,space=1,noexec
  2054                           global __pcstackBANK1
  2055                           __pcstackBANK1:
  2056  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2057  00A0                     ??_handle_remote:	; 1 bytes @ 0x0
  2058  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2059  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2060  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2061  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2062  00A0                     ??_init_remote:	; 1 bytes @ 0x0
  2063  00A0                     	global	?___wmul
  2064                           ?___wmul:	; 2 bytes @ 0x0
  2065  00A0                     	global	?___lwdiv
  2066                           ?___lwdiv:	; 2 bytes @ 0x0
  2067  00A0                     	global	spiWrite@data
  2068                           spiWrite@data:	; 1 bytes @ 0x0
  2069  00A0                     	global	handle_remote@mask
  2070                           handle_remote@mask:	; 2 bytes @ 0x0
  2071  00A0                     	global	___wmul@multiplier
  2072                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2073  00A0                     	global	___lwdiv@divisor
  2074                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2075  00A0                     	ds	1
  2076  00A0                     ??_config:	; 1 bytes @ 0x1
  2077  00A1                     ?_write_space:	; 1 bytes @ 0x1
  2078  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2079  00A1                     	global	write_space@count
  2080                           write_space@count:	; 2 bytes @ 0x1
  2081  00A1                     	ds	1
  2082  00A1                     	global	handle_remote@data
  2083                           handle_remote@data:	; 2 bytes @ 0x2
  2084  00A2                     	global	___wmul@multiplicand
  2085                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2086  00A2                     	global	___lwdiv@dividend
  2087                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2088  00A2                     	ds	1
  2089  00A2                     ??_write_space:	; 1 bytes @ 0x3
  2090  00A3                     	ds	1
  2091  00A3                     ??___wmul:	; 1 bytes @ 0x4
  2092  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2093  00A4                     	global	handle_remote@found
  2094                           handle_remote@found:	; 1 bytes @ 0x4
  2095  00A4                     	global	write_space@i
  2096                           write_space@i:	; 2 bytes @ 0x4
  2097  00A4                     	global	___wmul@product
  2098                           ___wmul@product:	; 2 bytes @ 0x4
  2099  00A4                     	ds	1
  2100  00A4                     	global	___lwdiv@quotient
  2101                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2102  00A5                     	ds	1
  2103  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2104  00A6                     	global	write_space@x
  2105                           write_space@x:	; 2 bytes @ 0x6
  2106  00A6                     	global	write_font@fontPos
  2107                           write_font@fontPos:	; 2 bytes @ 0x6
  2108  00A6                     	ds	1
  2109  00A6                     	global	___lwdiv@counter
  2110                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2111  00A7                     	ds	1
  2112  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2113  00A8                     	global	?___lwmod
  2114                           ?___lwmod:	; 2 bytes @ 0x8
  2115  00A8                     	global	___lwmod@divisor
  2116                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2117  00A8                     	ds	2
  2118  00A8                     	global	___lwmod@dividend
  2119                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2120  00AA                     	ds	2
  2121  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2122  00AC                     	ds	1
  2123  00AC                     	global	___lwmod@counter
  2124                           ___lwmod@counter:	; 1 bytes @ 0xD
  2125  00AD                     	ds	1
  2126  00AD                     	global	?_sprintf
  2127                           ?_sprintf:	; 2 bytes @ 0xE
  2128  00AE                     	global	write_font@x
  2129                           write_font@x:	; 2 bytes @ 0xE
  2130  00AE                     	global	sprintf@f
  2131                           sprintf@f:	; 2 bytes @ 0xE
  2132  00AE                     	ds	2
  2133  00AE                     ??_write_char:	; 1 bytes @ 0x10
  2134  00B0                     	global	write_char@pos
  2135                           write_char@pos:	; 2 bytes @ 0x10
  2136  00B0                     	ds	2
  2137  00B0                     ??_sprintf:	; 1 bytes @ 0x12
  2138  00B2                     	global	write_char@c
  2139                           write_char@c:	; 1 bytes @ 0x12
  2140  00B2                     	ds	1
  2141  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2142  00B3                     	global	write_text@text
  2143                           write_text@text:	; 2 bytes @ 0x13
  2144  00B3                     	ds	2
  2145  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2146  00B5                     	global	write_text@c
  2147                           write_text@c:	; 2 bytes @ 0x15
  2148  00B5                     	ds	1
  2149  00B5                     	global	sprintf@ap
  2150                           sprintf@ap:	; 1 bytes @ 0x16
  2151  00B6                     	ds	1
  2152  00B6                     	global	sprintf@flag
  2153                           sprintf@flag:	; 1 bytes @ 0x17
  2154  00B7                     	ds	1
  2155  00B7                     	global	sprintf@prec
  2156                           sprintf@prec:	; 1 bytes @ 0x18
  2157  00B8                     	ds	1
  2158  00B8                     	global	sprintf@val
  2159                           sprintf@val:	; 2 bytes @ 0x19
  2160  00B9                     	ds	2
  2161  00B9                     	global	sprintf@sp
  2162                           sprintf@sp:	; 1 bytes @ 0x1B
  2163  00BB                     	ds	1
  2164  00BB                     	global	sprintf@c
  2165                           sprintf@c:	; 1 bytes @ 0x1C
  2166  00BC                     	ds	1
  2167  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2168  00BD                     	global	write_int@number
  2169                           write_int@number:	; 2 bytes @ 0x1D
  2170  00BD                     	ds	2
  2171  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2172  00BF                     	global	write_int@num
  2173                           write_int@num:	; 2 bytes @ 0x1F
  2174  00BF                     	ds	2
  2175  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2176  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2177  00C1                     	global	update_volume@spaces
  2178                           update_volume@spaces:	; 2 bytes @ 0x21
  2179  00C1                     	ds	2
  2180  00C1                     ??_main:	; 1 bytes @ 0x23
  2181  00C3                     	ds	2
  2182  00C3                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2183                           global __pcstackCOMMON
  2184                           __pcstackCOMMON:
  2185  0071                     ?_config:	; 1 bytes @ 0x0
  2186  0071                     ?_update_volume:	; 1 bytes @ 0x0
  2187  0071                     ?_update_input:	; 1 bytes @ 0x0
  2188  0071                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2189  0071                     ?_handle_remote:	; 1 bytes @ 0x0
  2190  0071                     ?_handle_rotary:	; 1 bytes @ 0x0
  2191  0071                     ??_handle_rotary:	; 1 bytes @ 0x0
  2192  0071                     ?_start_receive:	; 1 bytes @ 0x0
  2193  0071                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2194  0071                     ?_poll_receiver:	; 1 bytes @ 0x0
  2195  0071                     ??_poll_receiver:	; 1 bytes @ 0x0
  2196  0071                     ?_spiWrite:	; 1 bytes @ 0x0
  2197  0071                     ?_display_write_start:	; 1 bytes @ 0x0
  2198  0071                     ?_display_write_end:	; 1 bytes @ 0x0
  2199  0071                     ?_write_char:	; 1 bytes @ 0x0
  2200  0071                     ?_init_adc:	; 1 bytes @ 0x0
  2201  0071                     ?_init_remote:	; 1 bytes @ 0x0
  2202  0071                     ?_main:	; 1 bytes @ 0x0
  2203  0071                     ?_isr:	; 1 bytes @ 0x0
  2204  0071                     ?_display_init:	; 1 bytes @ 0x0
  2205  0071                     	global	?i1___wmul
  2206                           ?i1___wmul:	; 2 bytes @ 0x0
  2207  0071                     	global	?i1___lwdiv
  2208                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2209  0071                     	global	?___xxtofl
  2210                           ?___xxtofl:	; 4 bytes @ 0x0
  2211  0071                     	global	i1___wmul@multiplier
  2212                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2213  0071                     	global	i1___lwdiv@divisor
  2214                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2215  0071                     	global	___xxtofl@val
  2216                           ___xxtofl@val:	; 4 bytes @ 0x0
  2217  0071                     	ds	2
  2218  0071                     	global	i1___wmul@multiplicand
  2219                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2220  0073                     	global	i1___lwdiv@dividend
  2221                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2222  0073                     	ds	1
  2223  0073                     	global	handle_rotary@portA
  2224                           handle_rotary@portA:	; 2 bytes @ 0x3
  2225  0074                     	ds	1
  2226  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  2227  0075                     ??i1___wmul:	; 1 bytes @ 0x4
  2228  0075                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2229  0075                     	global	i1___wmul@product
  2230                           i1___wmul@product:	; 2 bytes @ 0x4
  2231  0075                     	ds	1
  2232  0075                     	global	handle_rotary@portB
  2233                           handle_rotary@portB:	; 2 bytes @ 0x5
  2234  0076                     	global	i1___lwdiv@quotient
  2235                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2236  0076                     	ds	2
  2237  0076                     	global	i1___lwdiv@counter
  2238                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2239  0078                     	ds	1
  2240  0078                     ??_start_receive:	; 1 bytes @ 0x8
  2241  0079                     	global	___fladd@signs
  2242                           ___fladd@signs:	; 1 bytes @ 0x8
  2243  0079                     	ds	1
  2244  0079                     	global	___fladd@aexp
  2245                           ___fladd@aexp:	; 1 bytes @ 0x9
  2246  007A                     	ds	1
  2247  007A                     	global	___fladd@bexp
  2248                           ___fladd@bexp:	; 1 bytes @ 0xA
  2249  007B                     	ds	1
  2250  007B                     	global	___fladd@grs
  2251                           ___fladd@grs:	; 1 bytes @ 0xB
  2252  007C                     	ds	1
  2253  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2254                           global __pcstackBANK0
  2255                           __pcstackBANK0:
  2256  0020                     	global	___xxtofl@sign
  2257                           ___xxtofl@sign:	; 1 bytes @ 0x0
  2258  0020                     	ds	1
  2259  0020                     	global	___xxtofl@exp
  2260                           ___xxtofl@exp:	; 1 bytes @ 0x1
  2261  0021                     	ds	1
  2262  0021                     	global	___xxtofl@arg
  2263                           ___xxtofl@arg:	; 4 bytes @ 0x2
  2264  0022                     	ds	4
  2265  0022                     	global	?___fladd
  2266                           ?___fladd:	; 4 bytes @ 0x6
  2267  0026                     	global	___fladd@b
  2268                           ___fladd@b:	; 4 bytes @ 0x6
  2269  0026                     	ds	4
  2270  0026                     	global	___fladd@a
  2271                           ___fladd@a:	; 4 bytes @ 0xA
  2272  002A                     	ds	4
  2273  002A                     ??___fladd:	; 1 bytes @ 0xE
  2274  002E                     	ds	12
  2275  002E                     	global	?___fltol
  2276                           ?___fltol:	; 4 bytes @ 0x1A
  2277  003A                     	global	___fltol@f1
  2278                           ___fltol@f1:	; 4 bytes @ 0x1A
  2279  003A                     	ds	4
  2280  003A                     ??___fltol:	; 1 bytes @ 0x1E
  2281  003E                     	ds	5
  2282  003E                     	global	___fltol@sign1
  2283                           ___fltol@sign1:	; 1 bytes @ 0x23
  2284  0043                     	ds	1
  2285  0043                     	global	___fltol@exp1
  2286                           ___fltol@exp1:	; 1 bytes @ 0x24
  2287  0044                     	ds	1
  2288  0044                     	global	?_is_deadzone
  2289                           ?_is_deadzone:	; 2 bytes @ 0x25
  2290  0045                     	global	is_deadzone@currentStep
  2291                           is_deadzone@currentStep:	; 2 bytes @ 0x25
  2292  0045                     	ds	2
  2293  0045                     	global	is_deadzone@adcResult
  2294                           is_deadzone@adcResult:	; 2 bytes @ 0x27
  2295  0047                     	ds	2
  2296  0047                     ??_is_deadzone:	; 1 bytes @ 0x29
  2297  0049                     	ds	2
  2298  0049                     	global	is_deadzone@deadzoneLow
  2299                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x2B
  2300  004B                     	ds	2
  2301  004B                     	global	is_deadzone@deadzoneHigh
  2302                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2D
  2303  004D                     	ds	2
  2304  004D                     	global	_is_deadzone$890
  2305                           _is_deadzone$890:	; 1 bytes @ 0x2F
  2306  004F                     	ds	1
  2307  004F                     	global	is_deadzone@turnPoint
  2308                           is_deadzone@turnPoint:	; 2 bytes @ 0x30
  2309  0050                     	ds	2
  2310  0050                     ??_handle_potmeter:	; 1 bytes @ 0x32
  2311  0052                     	ds	2
  2312  0052                     	global	handle_potmeter@currentStep
  2313                           handle_potmeter@currentStep:	; 2 bytes @ 0x34
  2314  0054                     	ds	2
  2315  0054                     	global	handle_potmeter@ad_result
  2316                           handle_potmeter@ad_result:	; 2 bytes @ 0x36
  2317  0056                     	ds	2
  2318  0056                     ??_isr:	; 1 bytes @ 0x38
  2319  0058                     	ds	4
  2320  0058                     ;!
  2321                           ;!Data Sizes:
  2322                           ;!    Strings     13
  2323                           ;!    Constant    382
  2324                           ;!    Data        0
  2325                           ;!    BSS         20
  2326                           ;!    Persistent  0
  2327                           ;!    Stack       0
  2328                           ;!
  2329                           ;!Auto Spaces:
  2330                           ;!    Space          Size  Autos    Used
  2331                           ;!    COMMON           13     12      13
  2332                           ;!    BANK0            80     60      65
  2333                           ;!    BANK1            80     37      51
  2334                           ;!    BANK3            85      0       0
  2335                           ;!    BANK2            96      0       0
  2336                           
  2337                           ;!
  2338                           ;!Pointer List with Targets:
  2339                           ;!
  2340                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2341                           ;!		 -> STR_3(CODE[3]), 
  2342                           ;!
  2343                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2344                           ;!		 -> write_int@num(BANK1[2]), 
  2345                           ;!
  2346                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2347                           ;!		 -> ?_sprintf(BANK1[2]), 
  2348                           ;!
  2349                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2350                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2351                           ;!
  2352                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2353                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2354                           ;!
  2355                           
  2356                           
  2357                           ;!
  2358                           ;!Critical Paths under _main in COMMON
  2359                           ;!
  2360                           ;!    None.
  2361                           ;!
  2362                           ;!Critical Paths under _isr in COMMON
  2363                           ;!
  2364                           ;!    _start_receive->_poll_receiver
  2365                           ;!    _is_deadzone->___fladd
  2366                           ;!    ___fltol->___fladd
  2367                           ;!    ___fladd->___xxtofl
  2368                           ;!
  2369                           ;!Critical Paths under _main in BANK0
  2370                           ;!
  2371                           ;!    None.
  2372                           ;!
  2373                           ;!Critical Paths under _isr in BANK0
  2374                           ;!
  2375                           ;!    _isr->_handle_potmeter
  2376                           ;!    _handle_potmeter->_is_deadzone
  2377                           ;!    _is_deadzone->___fltol
  2378                           ;!    ___fltol->___fladd
  2379                           ;!    ___fladd->___xxtofl
  2380                           ;!
  2381                           ;!Critical Paths under _main in BANK1
  2382                           ;!
  2383                           ;!    _main->_update_volume
  2384                           ;!    _update_volume->_write_int
  2385                           ;!    _update_input->_write_int
  2386                           ;!    _write_space->_spiWrite
  2387                           ;!    _write_int->_sprintf
  2388                           ;!    _write_text->_write_char
  2389                           ;!    _write_char->_write_font
  2390                           ;!    _write_font->___wmul
  2391                           ;!    _sprintf->___lwmod
  2392                           ;!    ___lwmod->___lwdiv
  2393                           ;!    _display_init->_spiWrite
  2394                           ;!
  2395                           ;!Critical Paths under _isr in BANK1
  2396                           ;!
  2397                           ;!    None.
  2398                           ;!
  2399                           ;!Critical Paths under _main in BANK3
  2400                           ;!
  2401                           ;!    None.
  2402                           ;!
  2403                           ;!Critical Paths under _isr in BANK3
  2404                           ;!
  2405                           ;!    None.
  2406                           ;!
  2407                           ;!Critical Paths under _main in BANK2
  2408                           ;!
  2409                           ;!    None.
  2410                           ;!
  2411                           ;!Critical Paths under _isr in BANK2
  2412                           ;!
  2413                           ;!    None.
  2414                           
  2415 ;;
  2416 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2417 ;;
  2418                           
  2419                           ;!
  2420                           ;!Call Graph Tables:
  2421                           ;!
  2422                           ;! ---------------------------------------------------------------------------------
  2423                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2424                           ;! ---------------------------------------------------------------------------------
  2425                           ;! (0) _main                                                 2     2      0   11621
  2426                           ;!                                             35 BANK1      2     2      0
  2427                           ;!              _activateSelectedRelay
  2428                           ;!                             _config
  2429                           ;!                      _handle_remote
  2430                           ;!                       _update_input
  2431                           ;!                      _update_volume
  2432                           ;! ---------------------------------------------------------------------------------
  2433                           ;! (1) _update_volume                                        2     2      0    5774
  2434                           ;!                                             33 BANK1      2     2      0
  2435                           ;!                  _display_write_end
  2436                           ;!                _display_write_start
  2437                           ;!                          _write_int
  2438                           ;!                        _write_space
  2439                           ;!                         _write_text
  2440                           ;! ---------------------------------------------------------------------------------
  2441                           ;! (1) _update_input                                         0     0      0    5750
  2442                           ;!                  _display_write_end
  2443                           ;!                _display_write_start
  2444                           ;!                          _write_int
  2445                           ;!                        _write_space
  2446                           ;!                         _write_text
  2447                           ;! ---------------------------------------------------------------------------------
  2448                           ;! (2) _write_space                                          7     5      2     266
  2449                           ;!                                              1 BANK1      7     5      2
  2450                           ;!                           _spiWrite
  2451                           ;! ---------------------------------------------------------------------------------
  2452                           ;! (2) _write_int                                            4     2      2    4085
  2453                           ;!                                             29 BANK1      4     2      2
  2454                           ;!                            _sprintf
  2455                           ;!                         _write_char
  2456                           ;!                         _write_text
  2457                           ;! ---------------------------------------------------------------------------------
  2458                           ;! (2) _write_text                                           4     2      2    1399
  2459                           ;!                                             19 BANK1      4     2      2
  2460                           ;!                         _write_char
  2461                           ;! ---------------------------------------------------------------------------------
  2462                           ;! (3) _write_char                                           3     3      0    1103
  2463                           ;!                                             16 BANK1      3     3      0
  2464                           ;!                         _write_font
  2465                           ;! ---------------------------------------------------------------------------------
  2466                           ;! (4) _write_font                                          10     8      2     836
  2467                           ;!                                              6 BANK1     10     8      2
  2468                           ;!                             ___wmul
  2469                           ;!                           _spiWrite
  2470                           ;! ---------------------------------------------------------------------------------
  2471                           ;! (5) ___wmul                                               6     2      4     496
  2472                           ;!                                              0 BANK1      6     2      4
  2473                           ;! ---------------------------------------------------------------------------------
  2474                           ;! (3) _sprintf                                             23    19      4    1311
  2475                           ;!                                             14 BANK1     15    11      4
  2476                           ;!                            ___lwdiv
  2477                           ;!                            ___lwmod
  2478                           ;! ---------------------------------------------------------------------------------
  2479                           ;! (4) ___lwmod                                              6     2      4     311
  2480                           ;!                                              8 BANK1      6     2      4
  2481                           ;!                            ___lwdiv (ARG)
  2482                           ;! ---------------------------------------------------------------------------------
  2483                           ;! (4) ___lwdiv                                              8     4      4     414
  2484                           ;!                                              0 BANK1      8     4      4
  2485                           ;! ---------------------------------------------------------------------------------
  2486                           ;! (2) _display_write_start                                  0     0      0       0
  2487                           ;! ---------------------------------------------------------------------------------
  2488                           ;! (2) _display_write_end                                    0     0      0       0
  2489                           ;! ---------------------------------------------------------------------------------
  2490                           ;! (1) _handle_remote                                        5     5      0      75
  2491                           ;!                                              0 BANK1      5     5      0
  2492                           ;! ---------------------------------------------------------------------------------
  2493                           ;! (1) _config                                               3     3      0      22
  2494                           ;!                                              1 BANK1      3     3      0
  2495                           ;!                       _display_init
  2496                           ;!                           _init_adc
  2497                           ;!                        _init_remote
  2498                           ;! ---------------------------------------------------------------------------------
  2499                           ;! (2) _init_remote                                          0     0      0       0
  2500                           ;! ---------------------------------------------------------------------------------
  2501                           ;! (2) _init_adc                                             0     0      0       0
  2502                           ;! ---------------------------------------------------------------------------------
  2503                           ;! (2) _display_init                                         0     0      0      22
  2504                           ;!                           _spiWrite
  2505                           ;! ---------------------------------------------------------------------------------
  2506                           ;! (5) _spiWrite                                             1     1      0      22
  2507                           ;!                                              0 BANK1      1     1      0
  2508                           ;! ---------------------------------------------------------------------------------
  2509                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2510                           ;! ---------------------------------------------------------------------------------
  2511                           ;! Estimated maximum stack depth 5
  2512                           ;! ---------------------------------------------------------------------------------
  2513                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2514                           ;! ---------------------------------------------------------------------------------
  2515                           ;! (7) _isr                                                  4     4      0    4228
  2516                           ;!                                             56 BANK0      4     4      0
  2517                           ;!                    _handle_potmeter
  2518                           ;!                      _handle_rotary
  2519                           ;!                      _poll_receiver
  2520                           ;!                      _start_receive
  2521                           ;! ---------------------------------------------------------------------------------
  2522                           ;! (8) _start_receive                                        0     0      0       0
  2523                           ;!                      _poll_receiver
  2524                           ;! ---------------------------------------------------------------------------------
  2525                           ;! (9) _poll_receiver                                        8     8      0       0
  2526                           ;!                                              0 COMMON     8     8      0
  2527                           ;! ---------------------------------------------------------------------------------
  2528                           ;! (8) _handle_rotary                                        7     7      0     134
  2529                           ;!                                              0 COMMON     7     7      0
  2530                           ;! ---------------------------------------------------------------------------------
  2531                           ;! (8) _handle_potmeter                                      6     6      0    4094
  2532                           ;!                                             50 BANK0      6     6      0
  2533                           ;!                        _is_deadzone
  2534                           ;!                          i1___lwdiv
  2535                           ;! ---------------------------------------------------------------------------------
  2536                           ;! (9) i1___lwdiv                                            8     4      4     214
  2537                           ;!                                              0 COMMON     8     4      4
  2538                           ;! ---------------------------------------------------------------------------------
  2539                           ;! (9) _is_deadzone                                         13     9      4    3746
  2540                           ;!                                             37 BANK0     13     9      4
  2541                           ;!                            ___fladd
  2542                           ;!                            ___fltol
  2543                           ;!                           ___xxtofl
  2544                           ;!                           i1___wmul
  2545                           ;! ---------------------------------------------------------------------------------
  2546                           ;! (10) i1___wmul                                            6     2      4     144
  2547                           ;!                                              0 COMMON     6     2      4
  2548                           ;! ---------------------------------------------------------------------------------
  2549                           ;! (10) ___xxtofl                                           14    10      4     474
  2550                           ;!                                              0 COMMON     8     4      4
  2551                           ;!                                              0 BANK0      6     6      0
  2552                           ;! ---------------------------------------------------------------------------------
  2553                           ;! (10) ___fltol                                            11     7      4     381
  2554                           ;!                                             26 BANK0     11     7      4
  2555                           ;!                            ___fladd (ARG)
  2556                           ;!                           ___xxtofl (ARG)
  2557                           ;! ---------------------------------------------------------------------------------
  2558                           ;! (10) ___fladd                                            24    16      8    2414
  2559                           ;!                                              8 COMMON     4     4      0
  2560                           ;!                                              6 BANK0     20    12      8
  2561                           ;!                           ___xxtofl (ARG)
  2562                           ;! ---------------------------------------------------------------------------------
  2563                           ;! Estimated maximum stack depth 10
  2564                           ;! ---------------------------------------------------------------------------------
  2565                           ;!
  2566                           ;! Call Graph Graphs:
  2567                           ;!
  2568                           ;! _main (ROOT)
  2569                           ;!   _activateSelectedRelay
  2570                           ;!   _config
  2571                           ;!     _display_init
  2572                           ;!       _spiWrite
  2573                           ;!     _init_adc
  2574                           ;!     _init_remote
  2575                           ;!   _handle_remote
  2576                           ;!   _update_input
  2577                           ;!     _display_write_end
  2578                           ;!     _display_write_start
  2579                           ;!     _write_int
  2580                           ;!       _sprintf
  2581                           ;!         ___lwdiv
  2582                           ;!         ___lwmod
  2583                           ;!           ___lwdiv (ARG)
  2584                           ;!       _write_char
  2585                           ;!         _write_font
  2586                           ;!           ___wmul
  2587                           ;!           _spiWrite
  2588                           ;!       _write_text
  2589                           ;!         _write_char
  2590                           ;!           _write_font
  2591                           ;!             ___wmul
  2592                           ;!             _spiWrite
  2593                           ;!     _write_space
  2594                           ;!       _spiWrite
  2595                           ;!     _write_text
  2596                           ;!       _write_char
  2597                           ;!         _write_font
  2598                           ;!           ___wmul
  2599                           ;!           _spiWrite
  2600                           ;!   _update_volume
  2601                           ;!     _display_write_end
  2602                           ;!     _display_write_start
  2603                           ;!     _write_int
  2604                           ;!       _sprintf
  2605                           ;!         ___lwdiv
  2606                           ;!         ___lwmod
  2607                           ;!           ___lwdiv (ARG)
  2608                           ;!       _write_char
  2609                           ;!         _write_font
  2610                           ;!           ___wmul
  2611                           ;!           _spiWrite
  2612                           ;!       _write_text
  2613                           ;!         _write_char
  2614                           ;!           _write_font
  2615                           ;!             ___wmul
  2616                           ;!             _spiWrite
  2617                           ;!     _write_space
  2618                           ;!       _spiWrite
  2619                           ;!     _write_text
  2620                           ;!       _write_char
  2621                           ;!         _write_font
  2622                           ;!           ___wmul
  2623                           ;!           _spiWrite
  2624                           ;!
  2625                           ;! _isr (ROOT)
  2626                           ;!   _handle_potmeter
  2627                           ;!     _is_deadzone
  2628                           ;!       ___fladd
  2629                           ;!         ___xxtofl (ARG)
  2630                           ;!       ___fltol
  2631                           ;!         ___fladd (ARG)
  2632                           ;!           ___xxtofl (ARG)
  2633                           ;!         ___xxtofl (ARG)
  2634                           ;!       ___xxtofl
  2635                           ;!       i1___wmul
  2636                           ;!     i1___lwdiv
  2637                           ;!   _handle_rotary
  2638                           ;!   _poll_receiver
  2639                           ;!   _start_receive
  2640                           ;!     _poll_receiver
  2641                           ;!
  2642                           
  2643                           ;! Address spaces:
  2644                           
  2645                           ;!Name               Size   Autos  Total    Cost      Usage
  2646                           ;!BITCOMMON            D      0       0       0        0.0%
  2647                           ;!EEDATA             100      0       0       0        0.0%
  2648                           ;!NULL                 0      0       0       0        0.0%
  2649                           ;!CODE                 0      0       0       0        0.0%
  2650                           ;!COMMON               D      C       D       1      100.0%
  2651                           ;!BITSFR0              0      0       0       1        0.0%
  2652                           ;!SFR0                 0      0       0       1        0.0%
  2653                           ;!BITSFR1              0      0       0       2        0.0%
  2654                           ;!SFR1                 0      0       0       2        0.0%
  2655                           ;!STACK                0      0       0       2        0.0%
  2656                           ;!ABS                  0      0      81       3        0.0%
  2657                           ;!BITBANK0            50      0       0       4        0.0%
  2658                           ;!BITSFR3              0      0       0       4        0.0%
  2659                           ;!SFR3                 0      0       0       4        0.0%
  2660                           ;!BANK0               50     3C      41       5       81.2%
  2661                           ;!BITSFR2              0      0       0       5        0.0%
  2662                           ;!SFR2                 0      0       0       5        0.0%
  2663                           ;!BITBANK1            50      0       0       6        0.0%
  2664                           ;!BANK1               50     25      33       7       63.8%
  2665                           ;!BITBANK3            55      0       0       8        0.0%
  2666                           ;!BANK3               55      0       0       9        0.0%
  2667                           ;!BITBANK2            60      0       0      10        0.0%
  2668                           ;!BANK2               60      0       0      11        0.0%
  2669                           ;!DATA                 0      0      81      12        0.0%
  2670                           
  2671                           	global	_main
  2672                           
  2673 ;; *************** function _main *****************
  2674 ;; Defined at:
  2675 ;;		line 28 in file "main.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : B00/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0
  2691 ;;      Temps:          0       0       2       0       0
  2692 ;;      Totals:         0       0       2       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels required when called:   10
  2695 ;; This function calls:
  2696 ;;		_activateSelectedRelay
  2697 ;;		_config
  2698 ;;		_handle_remote
  2699 ;;		_update_input
  2700 ;;		_update_volume
  2701 ;; This function is called by:
  2702 ;;		Startup code after reset
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2706                           	file	"main.c"
  2707                           	line	28
  2708                           global __pmaintext
  2709                           __pmaintext:	;psect for function _main
  2710  0B4C                     psect	maintext
  2711                           	file	"main.c"
  2712                           	line	28
  2713                           	global	__size_of_main
  2714                           	__size_of_main	equ	__end_of_main-_main
  2715  0031                     	
  2716                           _main:	
  2717  0B4C                     ;incstack = 0
  2718 ;; hardware stack exceeded
  2719                           	opt	stack 0
  2720                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2721                           	line	30
  2722                           	
  2723                           l2922:	
  2724  0B4C                     ;main.c: 30:     config();
  2725                           	fcall	_config
  2726  0B4C  120A  158A  2796  120A  158A  	goto	l2924
  2727  0B51  2B52               	line	33
  2728                           ;main.c: 33:     while(1)
  2729                           	
  2730                           l59:	
  2731  0B52                     	line	37
  2732                           	
  2733                           l2924:	
  2734  0B52                     ;main.c: 34:     {;main.c: 37:         if (!ADCON0bits.GO)
  2735                           	bcf	status, 5	;RP0=0, select bank0
  2736  0B52  1283               	bcf	status, 6	;RP1=0, select bank0
  2737  0B53  1303               	btfsc	(31),1	;volatile
  2738  0B54  189F               	goto	u3041
  2739  0B55  2B57               	goto	u3040
  2740  0B56  2B58               u3041:
  2741  0B57                     	goto	l2928
  2742  0B57  2B5A               u3040:
  2743  0B58                     	line	38
  2744                           	
  2745                           l2926:	
  2746  0B58                     ;main.c: 38:             ADCON0bits.GO = 1;
  2747                           	bsf	(31),1	;volatile
  2748  0B58  149F               	goto	l2928
  2749  0B59  2B5A               	
  2750                           l60:	
  2751  0B5A                     	line	40
  2752                           	
  2753                           l2928:	
  2754  0B5A                     ;main.c: 40:         update_volume();
  2755                           	fcall	_update_volume
  2756  0B5A  120A  158A  2677  120A  158A  	line	41
  2757                           ;main.c: 41:         update_input();
  2758                           	fcall	_update_input
  2759  0B5F  120A  158A  24AE  120A  158A  	line	42
  2760                           	
  2761                           l2930:	
  2762  0B64                     ;main.c: 42:         activateSelectedRelay();
  2763                           	fcall	_activateSelectedRelay
  2764  0B64  120A  158A  23ED  120A  158A  	line	43
  2765                           	
  2766                           l2932:	
  2767  0B69                     ;main.c: 43:         handle_remote();
  2768                           	fcall	_handle_remote
  2769  0B69  120A  118A  2136  120A  158A  	line	45
  2770                           	
  2771                           l2934:	
  2772  0B6E                     ;main.c: 45:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2773                           	opt asmopt_push
  2774                           opt asmopt_off
  2775                           movlw	13
  2776  0B6E  300D               	bsf	status, 5	;RP0=1, select bank1
  2777  0B6F  1683               	bcf	status, 6	;RP1=0, select bank1
  2778  0B70  1303               movwf	((??_main+0)^080h+0+1),f
  2779  0B71  00C4               	movlw	251
  2780  0B72  30FB               movwf	((??_main+0)^080h+0),f
  2781  0B73  00C3               	u3157:
  2782  0B74                     decfsz	((??_main+0)^080h+0),f
  2783  0B74  0BC3               	goto	u3157
  2784  0B75  2B74               	decfsz	((??_main+0)^080h+0+1),f
  2785  0B76  0BC4               	goto	u3157
  2786  0B77  2B74               opt asmopt_pop
  2787                           
  2788                           	goto	l2924
  2789  0B78  2B52               	line	47
  2790                           ;main.c: 47:     }
  2791                           	
  2792                           l61:	
  2793  0B79                     	goto	l2924
  2794  0B79  2B52               	
  2795                           l62:	
  2796  0B7A                     	line	49
  2797                           	
  2798                           l63:	
  2799  0B7A                     	global	start
  2800                           	ljmp	start
  2801  0B7A  120A  118A  2812   	opt stack 0
  2802                           GLOBAL	__end_of_main
  2803                           	__end_of_main:
  2804  0B7D                     	signat	_main,89
  2805                           	global	_update_volume
  2806                           
  2807 ;; *************** function _update_volume *****************
  2808 ;; Defined at:
  2809 ;;		line 152 in file "Display.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;		None
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  spaces          2   33[BANK1 ] int 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2823 ;;      Params:         0       0       0       0       0
  2824 ;;      Locals:         0       0       2       0       0
  2825 ;;      Temps:          0       0       0       0       0
  2826 ;;      Totals:         0       0       2       0       0
  2827 ;;Total ram usage:        2 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    9
  2830 ;; This function calls:
  2831 ;;		_display_write_end
  2832 ;;		_display_write_start
  2833 ;;		_write_int
  2834 ;;		_write_space
  2835 ;;		_write_text
  2836 ;; This function is called by:
  2837 ;;		_main
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2841                           	file	"Display.c"
  2842                           	line	152
  2843                           global __ptext1
  2844                           __ptext1:	;psect for function _update_volume
  2845  0E77                     psect	text1
  2846                           	file	"Display.c"
  2847                           	line	152
  2848                           	global	__size_of_update_volume
  2849                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2850  005B                     	
  2851                           _update_volume:	
  2852  0E77                     ;incstack = 0
  2853 ;; hardware stack exceeded
  2854                           	opt	stack 0
  2855                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2856                           	line	154
  2857                           	
  2858                           l2732:	
  2859  0E77                     ;Display.c: 154:     if (lastVolume == volume) return;
  2860                           	bsf	status, 5	;RP0=1, select bank1
  2861  0E77  1683               	bcf	status, 6	;RP1=0, select bank1
  2862  0E78  1303               	movf	(_volume+1)^080h,w
  2863  0E79  084E               	xorwf	(_lastVolume+1)^080h,w
  2864  0E7A  064C               	skipz
  2865  0E7B  1D03               	goto	u2845
  2866  0E7C  2E7F               	movf	(_volume)^080h,w
  2867  0E7D  084D               	xorwf	(_lastVolume)^080h,w
  2868  0E7E  064B               u2845:
  2869  0E7F                     
  2870                           	skipz
  2871  0E7F  1D03               	goto	u2841
  2872  0E80  2E82               	goto	u2840
  2873  0E81  2E83               u2841:
  2874  0E82                     	goto	l2736
  2875  0E82  2E85               u2840:
  2876  0E83                     	goto	l154
  2877  0E83  2ED1               	
  2878                           l2734:	
  2879  0E84                     	goto	l154
  2880  0E84  2ED1               	
  2881                           l153:	
  2882  0E85                     	line	158
  2883                           	
  2884                           l2736:	
  2885  0E85                     ;Display.c: 158:     _selectedDisplay = 0;
  2886                           	clrf	(__selectedDisplay)^080h
  2887  0E85  01D1               	line	159
  2888                           	
  2889                           l2738:	
  2890  0E86                     ;Display.c: 159:     display_write_start();
  2891                           	fcall	_display_write_start
  2892  0E86  120A  158A  22DD  120A  158A  	line	161
  2893                           	
  2894                           l2740:	
  2895  0E8B                     ;Display.c: 161:     write_text("VOL");
  2896                           	movlw	low(((STR_2)|8000h))
  2897  0E8B  3096               	bsf	status, 5	;RP0=1, select bank1
  2898  0E8C  1683               	bcf	status, 6	;RP1=0, select bank1
  2899  0E8D  1303               	movwf	(write_text@text)^080h
  2900  0E8E  00B3               	movlw	high(((STR_2)|8000h))
  2901  0E8F  3089               	movwf	((write_text@text)^080h)+1
  2902  0E90  00B4               	fcall	_write_text
  2903  0E91  120A  158A  23B3  120A  158A  	line	164
  2904                           	
  2905                           l2742:	
  2906  0E96                     ;Display.c: 164:     int spaces = 3;
  2907                           	movlw	03h
  2908  0E96  3003               	bsf	status, 5	;RP0=1, select bank1
  2909  0E97  1683               	bcf	status, 6	;RP1=0, select bank1
  2910  0E98  1303               	movwf	(update_volume@spaces)^080h
  2911  0E99  00C1               	movlw	0
  2912  0E9A  3000               	movwf	((update_volume@spaces)^080h)+1
  2913  0E9B  00C2               	line	165
  2914                           	
  2915                           l2744:	
  2916  0E9C                     ;Display.c: 165:     if (volume < 10)
  2917                           	movf	(_volume+1)^080h,w
  2918  0E9C  084E               	xorlw	80h
  2919  0E9D  3A80               	movwf	btemp+1
  2920  0E9E  00FF               	movlw	(0)^80h
  2921  0E9F  3080               	subwf	btemp+1,w
  2922  0EA0  027F               	skipz
  2923  0EA1  1D03               	goto	u2855
  2924  0EA2  2EA5               	movlw	0Ah
  2925  0EA3  300A               	subwf	(_volume)^080h,w
  2926  0EA4  024D               u2855:
  2927  0EA5                     
  2928                           	skipnc
  2929  0EA5  1803               	goto	u2851
  2930  0EA6  2EA8               	goto	u2850
  2931  0EA7  2EA9               u2851:
  2932  0EA8                     	goto	l2748
  2933  0EA8  2EB0               u2850:
  2934  0EA9                     	line	166
  2935                           	
  2936                           l2746:	
  2937  0EA9                     ;Display.c: 166:         spaces = 4;
  2938                           	movlw	04h
  2939  0EA9  3004               	bsf	status, 5	;RP0=1, select bank1
  2940  0EAA  1683               	bcf	status, 6	;RP1=0, select bank1
  2941  0EAB  1303               	movwf	(update_volume@spaces)^080h
  2942  0EAC  00C1               	movlw	0
  2943  0EAD  3000               	movwf	((update_volume@spaces)^080h)+1
  2944  0EAE  00C2               	goto	l2748
  2945  0EAF  2EB0               	
  2946                           l155:	
  2947  0EB0                     	line	169
  2948                           	
  2949                           l2748:	
  2950  0EB0                     ;Display.c: 169:     write_space(spaces);
  2951                           	bsf	status, 5	;RP0=1, select bank1
  2952  0EB0  1683               	bcf	status, 6	;RP1=0, select bank1
  2953  0EB1  1303               	movf	(update_volume@spaces+1)^080h,w
  2954  0EB2  0842               	movwf	(write_space@count+1)^080h
  2955  0EB3  00A2               	movf	(update_volume@spaces)^080h,w
  2956  0EB4  0841               	movwf	(write_space@count)^080h
  2957  0EB5  00A1               	fcall	_write_space
  2958  0EB6  120A  158A  253F  120A  158A  	line	171
  2959                           	
  2960                           l2750:	
  2961  0EBB                     ;Display.c: 171:     write_int(volume);
  2962                           	bsf	status, 5	;RP0=1, select bank1
  2963  0EBB  1683               	bcf	status, 6	;RP1=0, select bank1
  2964  0EBC  1303               	movf	(_volume+1)^080h,w
  2965  0EBD  084E               	movwf	(write_int@number+1)^080h
  2966  0EBE  00BE               	movf	(_volume)^080h,w
  2967  0EBF  084D               	movwf	(write_int@number)^080h
  2968  0EC0  00BD               	fcall	_write_int
  2969  0EC1  120A  158A  237D  120A  158A  	line	172
  2970                           	
  2971                           l2752:	
  2972  0EC6                     ;Display.c: 172:     display_write_end();
  2973                           	fcall	_display_write_end
  2974  0EC6  120A  158A  22CE  120A  158A  	line	174
  2975                           	
  2976                           l2754:	
  2977  0ECB                     ;Display.c: 174:     lastVolume = volume;
  2978                           	bsf	status, 5	;RP0=1, select bank1
  2979  0ECB  1683               	bcf	status, 6	;RP1=0, select bank1
  2980  0ECC  1303               	movf	(_volume+1)^080h,w
  2981  0ECD  084E               	movwf	(_lastVolume+1)^080h
  2982  0ECE  00CC               	movf	(_volume)^080h,w
  2983  0ECF  084D               	movwf	(_lastVolume)^080h
  2984  0ED0  00CB               	line	176
  2985                           	
  2986                           l154:	
  2987  0ED1                     	return
  2988  0ED1  0008               	opt stack 0
  2989                           GLOBAL	__end_of_update_volume
  2990                           	__end_of_update_volume:
  2991  0ED2                     	signat	_update_volume,89
  2992                           	global	_update_input
  2993                           
  2994 ;; *************** function _update_input *****************
  2995 ;; Defined at:
  2996 ;;		line 134 in file "Display.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0
  3013 ;;      Totals:         0       0       0       0       0
  3014 ;;Total ram usage:        0 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    9
  3017 ;; This function calls:
  3018 ;;		_display_write_end
  3019 ;;		_display_write_start
  3020 ;;		_write_int
  3021 ;;		_write_space
  3022 ;;		_write_text
  3023 ;; This function is called by:
  3024 ;;		_main
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3028                           	line	134
  3029                           global __ptext2
  3030                           __ptext2:	;psect for function _update_input
  3031  0CAE                     psect	text2
  3032                           	file	"Display.c"
  3033                           	line	134
  3034                           	global	__size_of_update_input
  3035                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  3036  0046                     	
  3037                           _update_input:	
  3038  0CAE                     ;incstack = 0
  3039 ;; hardware stack exceeded
  3040                           	opt	stack 0
  3041                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3042                           	line	136
  3043                           	
  3044                           l2756:	
  3045  0CAE                     ;Display.c: 136:     if (lastInput == _selectedInput) return;
  3046                           	bsf	status, 5	;RP0=1, select bank1
  3047  0CAE  1683               	bcf	status, 6	;RP1=0, select bank1
  3048  0CAF  1303               	movf	(__selectedInput+1)^080h,w
  3049  0CB0  0850               	xorwf	(_lastInput+1)^080h,w
  3050  0CB1  064A               	skipz
  3051  0CB2  1D03               	goto	u2865
  3052  0CB3  2CB6               	movf	(__selectedInput)^080h,w
  3053  0CB4  084F               	xorwf	(_lastInput)^080h,w
  3054  0CB5  0649               u2865:
  3055  0CB6                     
  3056                           	skipz
  3057  0CB6  1D03               	goto	u2861
  3058  0CB7  2CB9               	goto	u2860
  3059  0CB8  2CBA               u2861:
  3060  0CB9                     	goto	l149
  3061  0CB9  2CBC               u2860:
  3062  0CBA                     	goto	l150
  3063  0CBA  2CF3               	
  3064                           l2758:	
  3065  0CBB                     	goto	l150
  3066  0CBB  2CF3               	
  3067                           l149:	
  3068  0CBC                     	line	138
  3069                           ;Display.c: 138:     _selectedDisplay = 1;
  3070                           	clrf	(__selectedDisplay)^080h
  3071  0CBC  01D1               	incf	(__selectedDisplay)^080h,f
  3072  0CBD  0AD1               	line	139
  3073                           	
  3074                           l2760:	
  3075  0CBE                     ;Display.c: 139:     display_write_start();
  3076                           	fcall	_display_write_start
  3077  0CBE  120A  158A  22DD  120A  158A  	line	141
  3078                           	
  3079                           l2762:	
  3080  0CC3                     ;Display.c: 141:     write_text("INPUT");
  3081                           	movlw	low(((STR_1)|8000h))
  3082  0CC3  3090               	bsf	status, 5	;RP0=1, select bank1
  3083  0CC4  1683               	bcf	status, 6	;RP1=0, select bank1
  3084  0CC5  1303               	movwf	(write_text@text)^080h
  3085  0CC6  00B3               	movlw	high(((STR_1)|8000h))
  3086  0CC7  3089               	movwf	((write_text@text)^080h)+1
  3087  0CC8  00B4               	fcall	_write_text
  3088  0CC9  120A  158A  23B3  120A  158A  	line	143
  3089                           	
  3090                           l2764:	
  3091  0CCE                     ;Display.c: 143:     write_space(2);
  3092                           	movlw	02h
  3093  0CCE  3002               	bsf	status, 5	;RP0=1, select bank1
  3094  0CCF  1683               	bcf	status, 6	;RP1=0, select bank1
  3095  0CD0  1303               	movwf	(write_space@count)^080h
  3096  0CD1  00A1               	movlw	0
  3097  0CD2  3000               	movwf	((write_space@count)^080h)+1
  3098  0CD3  00A2               	fcall	_write_space
  3099  0CD4  120A  158A  253F  120A  158A  	line	145
  3100                           	
  3101                           l2766:	
  3102  0CD9                     ;Display.c: 145:     write_int(_selectedInput+1);
  3103                           	bsf	status, 5	;RP0=1, select bank1
  3104  0CD9  1683               	bcf	status, 6	;RP1=0, select bank1
  3105  0CDA  1303               	movf	(__selectedInput)^080h,w
  3106  0CDB  084F               	addlw	low(01h)
  3107  0CDC  3E01               	movwf	(write_int@number)^080h
  3108  0CDD  00BD               	movf	(__selectedInput+1)^080h,w
  3109  0CDE  0850               	skipnc
  3110  0CDF  1803               	addlw	1
  3111  0CE0  3E01               	addlw	high(01h)
  3112  0CE1  3E00               	movwf	1+(write_int@number)^080h
  3113  0CE2  00BE               	fcall	_write_int
  3114  0CE3  120A  158A  237D  120A  158A  	line	146
  3115                           	
  3116                           l2768:	
  3117  0CE8                     ;Display.c: 146:     display_write_end();
  3118                           	fcall	_display_write_end
  3119  0CE8  120A  158A  22CE  120A  158A  	line	148
  3120                           	
  3121                           l2770:	
  3122  0CED                     ;Display.c: 148:     lastInput = _selectedInput;
  3123                           	bsf	status, 5	;RP0=1, select bank1
  3124  0CED  1683               	bcf	status, 6	;RP1=0, select bank1
  3125  0CEE  1303               	movf	(__selectedInput+1)^080h,w
  3126  0CEF  0850               	movwf	(_lastInput+1)^080h
  3127  0CF0  00CA               	movf	(__selectedInput)^080h,w
  3128  0CF1  084F               	movwf	(_lastInput)^080h
  3129  0CF2  00C9               	line	150
  3130                           	
  3131                           l150:	
  3132  0CF3                     	return
  3133  0CF3  0008               	opt stack 0
  3134                           GLOBAL	__end_of_update_input
  3135                           	__end_of_update_input:
  3136  0CF4                     	signat	_update_input,89
  3137                           	global	_write_space
  3138                           
  3139 ;; *************** function _write_space *****************
  3140 ;; Defined at:
  3141 ;;		line 178 in file "Display.c"
  3142 ;; Parameters:    Size  Location     Type
  3143 ;;  count           2    1[BANK1 ] int 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  x               2    6[BANK1 ] int 
  3146 ;;  i               2    4[BANK1 ] int 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3156 ;;      Params:         0       0       2       0       0
  3157 ;;      Locals:         0       0       4       0       0
  3158 ;;      Temps:          0       0       1       0       0
  3159 ;;      Totals:         0       0       7       0       0
  3160 ;;Total ram usage:        7 bytes
  3161 ;; Hardware stack levels used:    1
  3162 ;; Hardware stack levels required when called:    5
  3163 ;; This function calls:
  3164 ;;		_spiWrite
  3165 ;; This function is called by:
  3166 ;;		_update_input
  3167 ;;		_update_volume
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3171                           	line	178
  3172                           global __ptext3
  3173                           __ptext3:	;psect for function _write_space
  3174  0D3F                     psect	text3
  3175                           	file	"Display.c"
  3176                           	line	178
  3177                           	global	__size_of_write_space
  3178                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  3179  004C                     	
  3180                           _write_space:	
  3181  0D3F                     ;incstack = 0
  3182                           	opt	stack 1
  3183                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3184                           	line	180
  3185                           	
  3186                           l2580:	
  3187  0D3F                     ;Display.c: 178: void write_space(int count);Display.c: 179: {;Display.c: 180:     for (
                                 int i = 0; i < count; i++) {
  3188                           	bsf	status, 5	;RP0=1, select bank1
  3189  0D3F  1683               	bcf	status, 6	;RP1=0, select bank1
  3190  0D40  1303               	clrf	(write_space@i)^080h
  3191  0D41  01A4               	clrf	(write_space@i+1)^080h
  3192  0D42  01A5               	goto	l158
  3193  0D43  2D7B               	
  3194                           l159:	
  3195  0D44                     	line	183
  3196                           	
  3197                           l2582:	
  3198  0D44                     ;Display.c: 183:         for (int x = 0; x < 5; x++) {
  3199                           	bsf	status, 5	;RP0=1, select bank1
  3200  0D44  1683               	bcf	status, 6	;RP1=0, select bank1
  3201  0D45  1303               	clrf	(write_space@x)^080h
  3202  0D46  01A6               	clrf	(write_space@x+1)^080h
  3203  0D47  01A7               	
  3204                           l2584:	
  3205  0D48                     	movf	(write_space@x+1)^080h,w
  3206  0D48  0827               	xorlw	80h
  3207  0D49  3A80               	movwf	btemp+1
  3208  0D4A  00FF               	movlw	(0)^80h
  3209  0D4B  3080               	subwf	btemp+1,w
  3210  0D4C  027F               	skipz
  3211  0D4D  1D03               	goto	u2705
  3212  0D4E  2D51               	movlw	05h
  3213  0D4F  3005               	subwf	(write_space@x)^080h,w
  3214  0D50  0226               u2705:
  3215  0D51                     
  3216                           	skipc
  3217  0D51  1C03               	goto	u2701
  3218  0D52  2D54               	goto	u2700
  3219  0D53  2D55               u2701:
  3220  0D54                     	goto	l2588
  3221  0D54  2D57               u2700:
  3222  0D55                     	goto	l2594
  3223  0D55  2D73               	
  3224                           l2586:	
  3225  0D56                     	goto	l2594
  3226  0D56  2D73               	
  3227                           l160:	
  3228  0D57                     	line	185
  3229                           	
  3230                           l2588:	
  3231  0D57                     ;Display.c: 185:             spiWrite(0x00);
  3232                           	movlw	low(0)
  3233  0D57  3000               	fcall	_spiWrite
  3234  0D58  120A  158A  22EC  120A  158A  	line	187
  3235                           	
  3236                           l2590:	
  3237  0D5D                     ;Display.c: 187:         }
  3238                           	movlw	01h
  3239  0D5D  3001               	bsf	status, 5	;RP0=1, select bank1
  3240  0D5E  1683               	bcf	status, 6	;RP1=0, select bank1
  3241  0D5F  1303               	addwf	(write_space@x)^080h,f
  3242  0D60  07A6               	skipnc
  3243  0D61  1803               	incf	(write_space@x+1)^080h,f
  3244  0D62  0AA7               	movlw	0
  3245  0D63  3000               	addwf	(write_space@x+1)^080h,f
  3246  0D64  07A7               	
  3247                           l2592:	
  3248  0D65                     	movf	(write_space@x+1)^080h,w
  3249  0D65  0827               	xorlw	80h
  3250  0D66  3A80               	movwf	btemp+1
  3251  0D67  00FF               	movlw	(0)^80h
  3252  0D68  3080               	subwf	btemp+1,w
  3253  0D69  027F               	skipz
  3254  0D6A  1D03               	goto	u2715
  3255  0D6B  2D6E               	movlw	05h
  3256  0D6C  3005               	subwf	(write_space@x)^080h,w
  3257  0D6D  0226               u2715:
  3258  0D6E                     
  3259                           	skipc
  3260  0D6E  1C03               	goto	u2711
  3261  0D6F  2D71               	goto	u2710
  3262  0D70  2D72               u2711:
  3263  0D71                     	goto	l2588
  3264  0D71  2D57               u2710:
  3265  0D72                     	goto	l2594
  3266  0D72  2D73               	
  3267                           l161:	
  3268  0D73                     	line	188
  3269                           	
  3270                           l2594:	
  3271  0D73                     ;Display.c: 188:     }
  3272                           	movlw	01h
  3273  0D73  3001               	bsf	status, 5	;RP0=1, select bank1
  3274  0D74  1683               	bcf	status, 6	;RP1=0, select bank1
  3275  0D75  1303               	addwf	(write_space@i)^080h,f
  3276  0D76  07A4               	skipnc
  3277  0D77  1803               	incf	(write_space@i+1)^080h,f
  3278  0D78  0AA5               	movlw	0
  3279  0D79  3000               	addwf	(write_space@i+1)^080h,f
  3280  0D7A  07A5               	
  3281                           l158:	
  3282  0D7B                     	movf	(write_space@i+1)^080h,w
  3283  0D7B  0825               	xorlw	80h
  3284  0D7C  3A80               	movwf	(??_write_space+0)^080h+0
  3285  0D7D  00A3               	movf	(write_space@count+1)^080h,w
  3286  0D7E  0822               	xorlw	80h
  3287  0D7F  3A80               	subwf	(??_write_space+0)^080h+0,w
  3288  0D80  0223               	skipz
  3289  0D81  1D03               	goto	u2725
  3290  0D82  2D85               	movf	(write_space@count)^080h,w
  3291  0D83  0821               	subwf	(write_space@i)^080h,w
  3292  0D84  0224               u2725:
  3293  0D85                     
  3294                           	skipc
  3295  0D85  1C03               	goto	u2721
  3296  0D86  2D88               	goto	u2720
  3297  0D87  2D89               u2721:
  3298  0D88                     	goto	l2582
  3299  0D88  2D44               u2720:
  3300  0D89                     	goto	l163
  3301  0D89  2D8A               	
  3302                           l162:	
  3303  0D8A                     	line	189
  3304                           	
  3305                           l163:	
  3306  0D8A                     	return
  3307  0D8A  0008               	opt stack 0
  3308                           GLOBAL	__end_of_write_space
  3309                           	__end_of_write_space:
  3310  0D8B                     	signat	_write_space,4217
  3311                           	global	_write_int
  3312                           
  3313 ;; *************** function _write_int *****************
  3314 ;; Defined at:
  3315 ;;		line 201 in file "Display.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  number          2   29[BANK1 ] int 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  num             2   31[BANK1 ] unsigned char [2]
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3329 ;;      Params:         0       0       2       0       0
  3330 ;;      Locals:         0       0       2       0       0
  3331 ;;      Temps:          0       0       0       0       0
  3332 ;;      Totals:         0       0       4       0       0
  3333 ;;Total ram usage:        4 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    8
  3336 ;; This function calls:
  3337 ;;		_sprintf
  3338 ;;		_write_char
  3339 ;;		_write_text
  3340 ;; This function is called by:
  3341 ;;		_update_input
  3342 ;;		_update_volume
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3346                           	line	201
  3347                           global __ptext4
  3348                           __ptext4:	;psect for function _write_int
  3349  0B7D                     psect	text4
  3350                           	file	"Display.c"
  3351                           	line	201
  3352                           	global	__size_of_write_int
  3353                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  3354  0036                     	
  3355                           _write_int:	
  3356  0B7D                     ;incstack = 0
  3357 ;; hardware stack exceeded
  3358                           	opt	stack 0
  3359                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3360                           	line	203
  3361                           	
  3362                           l2596:	
  3363  0B7D                     ;Display.c: 201: void write_int(int number);Display.c: 202: {;Display.c: 203:     if (nu
                                 mber < 10) {
  3364                           	bsf	status, 5	;RP0=1, select bank1
  3365  0B7D  1683               	bcf	status, 6	;RP1=0, select bank1
  3366  0B7E  1303               	movf	(write_int@number+1)^080h,w
  3367  0B7F  083E               	xorlw	80h
  3368  0B80  3A80               	movwf	btemp+1
  3369  0B81  00FF               	movlw	(0)^80h
  3370  0B82  3080               	subwf	btemp+1,w
  3371  0B83  027F               	skipz
  3372  0B84  1D03               	goto	u2735
  3373  0B85  2B88               	movlw	0Ah
  3374  0B86  300A               	subwf	(write_int@number)^080h,w
  3375  0B87  023D               u2735:
  3376  0B88                     
  3377                           	skipnc
  3378  0B88  1803               	goto	u2731
  3379  0B89  2B8B               	goto	u2730
  3380  0B8A  2B8C               u2731:
  3381  0B8B                     	goto	l2602
  3382  0B8B  2B97               u2730:
  3383  0B8C                     	line	204
  3384                           	
  3385                           l2598:	
  3386  0B8C                     ;Display.c: 204:         write_char(number + 48);
  3387                           	bsf	status, 5	;RP0=1, select bank1
  3388  0B8C  1683               	bcf	status, 6	;RP1=0, select bank1
  3389  0B8D  1303               	movf	(write_int@number)^080h,w
  3390  0B8E  083D               	addlw	030h
  3391  0B8F  3E30               	fcall	_write_char
  3392  0B90  120A  158A  2734  120A  158A  	goto	l173
  3393  0B95  2BB2               	line	205
  3394                           	
  3395                           l2600:	
  3396  0B96                     ;Display.c: 205:         return;
  3397                           	goto	l173
  3398  0B96  2BB2               	line	206
  3399                           ;Display.c: 206:     }
  3400                           	
  3401                           l172:	
  3402  0B97                     	line	209
  3403                           	
  3404                           l2602:	
  3405  0B97                     ;Display.c: 208:     char num[2];;Display.c: 209:     sprintf(num, "%d", number);
  3406                           	movlw	low(((STR_3)|8000h))
  3407  0B97  309A               	bsf	status, 5	;RP0=1, select bank1
  3408  0B98  1683               	bcf	status, 6	;RP1=0, select bank1
  3409  0B99  1303               	movwf	(sprintf@f)^080h
  3410  0B9A  00AE               	movlw	high(((STR_3)|8000h))
  3411  0B9B  3089               	movwf	((sprintf@f)^080h)+1
  3412  0B9C  00AF               	movf	(write_int@number+1)^080h,w
  3413  0B9D  083E               	movwf	1+(?_sprintf)^080h+02h
  3414  0B9E  00B1               	movf	(write_int@number)^080h,w
  3415  0B9F  083D               	movwf	0+(?_sprintf)^080h+02h
  3416  0BA0  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  3417  0BA1  30BF               	fcall	_sprintf
  3418  0BA2  120A  118A  23EA  120A  158A  	line	211
  3419                           ;Display.c: 211:     write_text(num);
  3420                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  3421  0BA7  30BF               	bsf	status, 5	;RP0=1, select bank1
  3422  0BA8  1683               	bcf	status, 6	;RP1=0, select bank1
  3423  0BA9  1303               	movwf	(write_text@text)^080h
  3424  0BAA  00B3               	movlw	(0x0)
  3425  0BAB  3000               	movwf	(write_text@text+1)^080h
  3426  0BAC  00B4               	fcall	_write_text
  3427  0BAD  120A  158A  23B3  120A  158A  	line	212
  3428                           	
  3429                           l173:	
  3430  0BB2                     	return
  3431  0BB2  0008               	opt stack 0
  3432                           GLOBAL	__end_of_write_int
  3433                           	__end_of_write_int:
  3434  0BB3                     	signat	_write_int,4217
  3435                           	global	_write_text
  3436                           
  3437 ;; *************** function _write_text *****************
  3438 ;; Defined at:
  3439 ;;		line 191 in file "Display.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  text            2   19[BANK1 ] PTR unsigned char 
  3442 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  c               2   21[BANK1 ] PTR unsigned char 
  3445 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3455 ;;      Params:         0       0       2       0       0
  3456 ;;      Locals:         0       0       2       0       0
  3457 ;;      Temps:          0       0       0       0       0
  3458 ;;      Totals:         0       0       4       0       0
  3459 ;;Total ram usage:        4 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    7
  3462 ;; This function calls:
  3463 ;;		_write_char
  3464 ;; This function is called by:
  3465 ;;		_update_input
  3466 ;;		_update_volume
  3467 ;;		_write_int
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3471                           	line	191
  3472                           global __ptext5
  3473                           __ptext5:	;psect for function _write_text
  3474  0BB3                     psect	text5
  3475                           	file	"Display.c"
  3476                           	line	191
  3477                           	global	__size_of_write_text
  3478                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  3479  003A                     	
  3480                           _write_text:	
  3481  0BB3                     ;incstack = 0
  3482 ;; hardware stack exceeded
  3483                           	opt	stack 0
  3484                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3485                           	line	195
  3486                           	
  3487                           l2142:	
  3488  0BB3                     ;Display.c: 191: void write_text(char* text);Display.c: 192: {;Display.c: 193:     char*
                                  c;;Display.c: 195:     for (c = text; *c != '\0'; c++) {
  3489                           	bsf	status, 5	;RP0=1, select bank1
  3490  0BB3  1683               	bcf	status, 6	;RP1=0, select bank1
  3491  0BB4  1303               		movf	(write_text@text)^080h,w
  3492  0BB5  0833               	movwf	(write_text@c)^080h
  3493  0BB6  00B5               movf	(write_text@text+1)^080h,w
  3494  0BB7  0834               movwf	(write_text@c+1)^080h
  3495  0BB8  00B6               
  3496                           	goto	l2148
  3497  0BB9  2BD7               	
  3498                           l167:	
  3499  0BBA                     	line	196
  3500                           	
  3501                           l2144:	
  3502  0BBA                     ;Display.c: 196:         write_char(*c);
  3503                           	bsf	status, 5	;RP0=1, select bank1
  3504  0BBA  1683               	bcf	status, 6	;RP1=0, select bank1
  3505  0BBB  1303               	movf	(write_text@c+1)^080h,w
  3506  0BBC  0836               	bcf	status, 5	;RP0=0, select bank0
  3507  0BBD  1283               	bcf	status, 6	;RP1=0, select bank0
  3508  0BBE  1303               	movwf	btemp+1
  3509  0BBF  00FF               	bsf	status, 5	;RP0=1, select bank1
  3510  0BC0  1683               	bcf	status, 6	;RP1=0, select bank1
  3511  0BC1  1303               	movf	(write_text@c)^080h,w
  3512  0BC2  0835               	movwf	fsr0
  3513  0BC3  0084               	bcf	status, 5	;RP0=0, select bank0
  3514  0BC4  1283               	bcf	status, 6	;RP1=0, select bank0
  3515  0BC5  1303               	fcall	stringtab
  3516  0BC6  120A  158A  2000  120A  158A  	fcall	_write_char
  3517  0BCB  120A  158A  2734  120A  158A  	line	197
  3518                           	
  3519                           l2146:	
  3520  0BD0                     ;Display.c: 197:     }
  3521                           	movlw	01h
  3522  0BD0  3001               	bsf	status, 5	;RP0=1, select bank1
  3523  0BD1  1683               	bcf	status, 6	;RP1=0, select bank1
  3524  0BD2  1303               	addwf	(write_text@c)^080h,f
  3525  0BD3  07B5               	skipnc
  3526  0BD4  1803               	incf	(write_text@c+1)^080h,f
  3527  0BD5  0AB6               	goto	l2148
  3528  0BD6  2BD7               	
  3529                           l166:	
  3530  0BD7                     	
  3531                           l2148:	
  3532  0BD7                     	movf	(write_text@c+1)^080h,w
  3533  0BD7  0836               	bcf	status, 5	;RP0=0, select bank0
  3534  0BD8  1283               	bcf	status, 6	;RP1=0, select bank0
  3535  0BD9  1303               	movwf	btemp+1
  3536  0BDA  00FF               	bsf	status, 5	;RP0=1, select bank1
  3537  0BDB  1683               	bcf	status, 6	;RP1=0, select bank1
  3538  0BDC  1303               	movf	(write_text@c)^080h,w
  3539  0BDD  0835               	movwf	fsr0
  3540  0BDE  0084               	bcf	status, 5	;RP0=0, select bank0
  3541  0BDF  1283               	bcf	status, 6	;RP1=0, select bank0
  3542  0BE0  1303               	fcall	stringtab
  3543  0BE1  120A  158A  2000  120A  158A  	xorlw	0
  3544  0BE6  3A00               	skipz
  3545  0BE7  1D03               	goto	u1841
  3546  0BE8  2BEA               	goto	u1840
  3547  0BE9  2BEB               u1841:
  3548  0BEA                     	goto	l2144
  3549  0BEA  2BBA               u1840:
  3550  0BEB                     	goto	l169
  3551  0BEB  2BEC               	
  3552                           l168:	
  3553  0BEC                     	line	199
  3554                           	
  3555                           l169:	
  3556  0BEC                     	return
  3557  0BEC  0008               	opt stack 0
  3558                           GLOBAL	__end_of_write_text
  3559                           	__end_of_write_text:
  3560  0BED                     	signat	_write_text,4217
  3561                           	global	_write_char
  3562                           
  3563 ;; *************** function _write_char *****************
  3564 ;; Defined at:
  3565 ;;		line 214 in file "Display.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  c               1    wreg     unsigned char 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  c               1   18[BANK1 ] unsigned char 
  3570 ;;  pos             2   16[BANK1 ] int 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3580 ;;      Params:         0       0       0       0       0
  3581 ;;      Locals:         0       0       3       0       0
  3582 ;;      Temps:          0       0       0       0       0
  3583 ;;      Totals:         0       0       3       0       0
  3584 ;;Total ram usage:        3 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:    6
  3587 ;; This function calls:
  3588 ;;		_write_font
  3589 ;; This function is called by:
  3590 ;;		_write_text
  3591 ;;		_write_int
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3595                           	line	214
  3596                           global __ptext6
  3597                           __ptext6:	;psect for function _write_char
  3598  0F34                     psect	text6
  3599                           	file	"Display.c"
  3600                           	line	214
  3601                           	global	__size_of_write_char
  3602                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  3603  0062                     	
  3604                           _write_char:	
  3605  0F34                     ;incstack = 0
  3606 ;; hardware stack exceeded
  3607                           	opt	stack 0
  3608                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3609                           ;write_char@c stored from wreg
  3610                           	bsf	status, 5	;RP0=1, select bank1
  3611  0F34  1683               	bcf	status, 6	;RP1=0, select bank1
  3612  0F35  1303               	movwf	(write_char@c)^080h
  3613  0F36  00B2               	line	219
  3614                           	
  3615                           l2070:	
  3616  0F37                     ;Display.c: 214: void write_char(char c);Display.c: 215: {;Display.c: 216:     int pos;;
                                 Display.c: 219:     if (c >= 48 && c <= 57) {
  3617                           	movlw	low(030h)
  3618  0F37  3030               	subwf	(write_char@c)^080h,w
  3619  0F38  0232               	skipc
  3620  0F39  1C03               	goto	u1651
  3621  0F3A  2F3C               	goto	u1650
  3622  0F3B  2F3D               u1651:
  3623  0F3C                     	goto	l2078
  3624  0F3C  2F54               u1650:
  3625  0F3D                     	
  3626                           l2072:	
  3627  0F3D                     	movlw	low(03Ah)
  3628  0F3D  303A               	subwf	(write_char@c)^080h,w
  3629  0F3E  0232               	skipnc
  3630  0F3F  1803               	goto	u1661
  3631  0F40  2F42               	goto	u1660
  3632  0F41  2F43               u1661:
  3633  0F42                     	goto	l2078
  3634  0F42  2F54               u1660:
  3635  0F43                     	line	220
  3636                           	
  3637                           l2074:	
  3638  0F43                     ;Display.c: 220:         pos = c - 48;
  3639                           	movf	(write_char@c)^080h,w
  3640  0F43  0832               	addlw	low(-48)
  3641  0F44  3ED0               	movwf	(write_char@pos)^080h
  3642  0F45  00B0               	movlw	high(-48)
  3643  0F46  30FF               	skipnc
  3644  0F47  1803               	movlw	(high(-48)+1)&0ffh
  3645  0F48  3000               	movwf	((write_char@pos)^080h)+1
  3646  0F49  00B1               	line	221
  3647                           	
  3648                           l2076:	
  3649  0F4A                     ;Display.c: 221:         write_font(pos);
  3650                           	movf	(write_char@pos+1)^080h,w
  3651  0F4A  0831               	movwf	(write_font@fontPos+1)^080h
  3652  0F4B  00A7               	movf	(write_char@pos)^080h,w
  3653  0F4C  0830               	movwf	(write_font@fontPos)^080h
  3654  0F4D  00A6               	fcall	_write_font
  3655  0F4E  120A  158A  26D2  120A  158A  	line	222
  3656                           ;Display.c: 222:     } else if (c >= 65 && c <= 90) {
  3657                           	goto	l182
  3658  0F53  2F95               	
  3659                           l176:	
  3660  0F54                     	
  3661                           l2078:	
  3662  0F54                     	movlw	low(041h)
  3663  0F54  3041               	bsf	status, 5	;RP0=1, select bank1
  3664  0F55  1683               	bcf	status, 6	;RP1=0, select bank1
  3665  0F56  1303               	subwf	(write_char@c)^080h,w
  3666  0F57  0232               	skipc
  3667  0F58  1C03               	goto	u1671
  3668  0F59  2F5B               	goto	u1670
  3669  0F5A  2F5C               u1671:
  3670  0F5B                     	goto	l2086
  3671  0F5B  2F73               u1670:
  3672  0F5C                     	
  3673                           l2080:	
  3674  0F5C                     	movlw	low(05Bh)
  3675  0F5C  305B               	subwf	(write_char@c)^080h,w
  3676  0F5D  0232               	skipnc
  3677  0F5E  1803               	goto	u1681
  3678  0F5F  2F61               	goto	u1680
  3679  0F60  2F62               u1681:
  3680  0F61                     	goto	l2086
  3681  0F61  2F73               u1680:
  3682  0F62                     	line	223
  3683                           	
  3684                           l2082:	
  3685  0F62                     ;Display.c: 223:         pos = (c - 65) + 10;
  3686                           	movf	(write_char@c)^080h,w
  3687  0F62  0832               	addlw	low(-55)
  3688  0F63  3EC9               	movwf	(write_char@pos)^080h
  3689  0F64  00B0               	movlw	high(-55)
  3690  0F65  30FF               	skipnc
  3691  0F66  1803               	movlw	(high(-55)+1)&0ffh
  3692  0F67  3000               	movwf	((write_char@pos)^080h)+1
  3693  0F68  00B1               	line	224
  3694                           	
  3695                           l2084:	
  3696  0F69                     ;Display.c: 224:         write_font(pos);
  3697                           	movf	(write_char@pos+1)^080h,w
  3698  0F69  0831               	movwf	(write_font@fontPos+1)^080h
  3699  0F6A  00A7               	movf	(write_char@pos)^080h,w
  3700  0F6B  0830               	movwf	(write_font@fontPos)^080h
  3701  0F6C  00A6               	fcall	_write_font
  3702  0F6D  120A  158A  26D2  120A  158A  	line	225
  3703                           ;Display.c: 225:     } else if (c >= 97 && c <= 122) {
  3704                           	goto	l182
  3705  0F72  2F95               	
  3706                           l178:	
  3707  0F73                     	
  3708                           l2086:	
  3709  0F73                     	movlw	low(061h)
  3710  0F73  3061               	bsf	status, 5	;RP0=1, select bank1
  3711  0F74  1683               	bcf	status, 6	;RP1=0, select bank1
  3712  0F75  1303               	subwf	(write_char@c)^080h,w
  3713  0F76  0232               	skipc
  3714  0F77  1C03               	goto	u1691
  3715  0F78  2F7A               	goto	u1690
  3716  0F79  2F7B               u1691:
  3717  0F7A                     	goto	l182
  3718  0F7A  2F95               u1690:
  3719  0F7B                     	
  3720                           l2088:	
  3721  0F7B                     	movlw	low(07Bh)
  3722  0F7B  307B               	subwf	(write_char@c)^080h,w
  3723  0F7C  0232               	skipnc
  3724  0F7D  1803               	goto	u1701
  3725  0F7E  2F80               	goto	u1700
  3726  0F7F  2F81               u1701:
  3727  0F80                     	goto	l182
  3728  0F80  2F95               u1700:
  3729  0F81                     	line	226
  3730                           	
  3731                           l2090:	
  3732  0F81                     ;Display.c: 226:         pos = (c - 97) + 10;
  3733                           	movf	(write_char@c)^080h,w
  3734  0F81  0832               	addlw	low(-87)
  3735  0F82  3EA9               	movwf	(write_char@pos)^080h
  3736  0F83  00B0               	movlw	high(-87)
  3737  0F84  30FF               	skipnc
  3738  0F85  1803               	movlw	(high(-87)+1)&0ffh
  3739  0F86  3000               	movwf	((write_char@pos)^080h)+1
  3740  0F87  00B1               	line	227
  3741                           	
  3742                           l2092:	
  3743  0F88                     ;Display.c: 227:         write_font(pos);
  3744                           	movf	(write_char@pos+1)^080h,w
  3745  0F88  0831               	movwf	(write_font@fontPos+1)^080h
  3746  0F89  00A7               	movf	(write_char@pos)^080h,w
  3747  0F8A  0830               	movwf	(write_font@fontPos)^080h
  3748  0F8B  00A6               	fcall	_write_font
  3749  0F8C  120A  158A  26D2  120A  158A  	line	228
  3750                           ;Display.c: 228:     } else {
  3751                           	goto	l182
  3752  0F91  2F95               	
  3753                           l180:	
  3754  0F92                     	goto	l182
  3755  0F92  2F95               	line	231
  3756                           ;Display.c: 231:     }
  3757                           	
  3758                           l181:	
  3759  0F93                     	goto	l182
  3760  0F93  2F95               	
  3761                           l179:	
  3762  0F94                     	goto	l182
  3763  0F94  2F95               	
  3764                           l177:	
  3765  0F95                     	line	232
  3766                           	
  3767                           l182:	
  3768  0F95                     	return
  3769  0F95  0008               	opt stack 0
  3770                           GLOBAL	__end_of_write_char
  3771                           	__end_of_write_char:
  3772  0F96                     	signat	_write_char,4217
  3773                           	global	_write_font
  3774                           
  3775 ;; *************** function _write_font *****************
  3776 ;; Defined at:
  3777 ;;		line 234 in file "Display.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  fontPos         2    6[BANK1 ] int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  x               2   14[BANK1 ] int 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      void 
  3784 ;; Registers used:
  3785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3791 ;;      Params:         0       0       2       0       0
  3792 ;;      Locals:         0       0       2       0       0
  3793 ;;      Temps:          0       0       6       0       0
  3794 ;;      Totals:         0       0      10       0       0
  3795 ;;Total ram usage:       10 bytes
  3796 ;; Hardware stack levels used:    1
  3797 ;; Hardware stack levels required when called:    5
  3798 ;; This function calls:
  3799 ;;		___wmul
  3800 ;;		_spiWrite
  3801 ;; This function is called by:
  3802 ;;		_write_char
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3806                           	line	234
  3807                           global __ptext7
  3808                           __ptext7:	;psect for function _write_font
  3809  0ED2                     psect	text7
  3810                           	file	"Display.c"
  3811                           	line	234
  3812                           	global	__size_of_write_font
  3813                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  3814  0062                     	
  3815                           _write_font:	
  3816  0ED2                     ;incstack = 0
  3817 ;; hardware stack exceeded
  3818                           	opt	stack 0
  3819                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3820                           	line	237
  3821                           	
  3822                           l2058:	
  3823  0ED2                     ;Display.c: 234: void write_font(int fontPos);Display.c: 235: {;Display.c: 237:     for(
                                 int x=0; x < 5; x++){
  3824                           	bsf	status, 5	;RP0=1, select bank1
  3825  0ED2  1683               	bcf	status, 6	;RP1=0, select bank1
  3826  0ED3  1303               	clrf	(write_font@x)^080h
  3827  0ED4  01AE               	clrf	(write_font@x+1)^080h
  3828  0ED5  01AF               	
  3829                           l2060:	
  3830  0ED6                     	movf	(write_font@x+1)^080h,w
  3831  0ED6  082F               	xorlw	80h
  3832  0ED7  3A80               	movwf	btemp+1
  3833  0ED8  00FF               	movlw	(0)^80h
  3834  0ED9  3080               	subwf	btemp+1,w
  3835  0EDA  027F               	skipz
  3836  0EDB  1D03               	goto	u1635
  3837  0EDC  2EDF               	movlw	05h
  3838  0EDD  3005               	subwf	(write_font@x)^080h,w
  3839  0EDE  022E               u1635:
  3840  0EDF                     
  3841                           	skipc
  3842  0EDF  1C03               	goto	u1631
  3843  0EE0  2EE2               	goto	u1630
  3844  0EE1  2EE3               u1631:
  3845  0EE2                     	goto	l2064
  3846  0EE2  2EE5               u1630:
  3847  0EE3                     	goto	l187
  3848  0EE3  2F33               	
  3849                           l2062:	
  3850  0EE4                     	goto	l187
  3851  0EE4  2F33               	
  3852                           l185:	
  3853  0EE5                     	line	238
  3854                           	
  3855                           l2064:	
  3856  0EE5                     ;Display.c: 238:         spiWrite(font[fontPos][x]);
  3857                           	bsf	status, 5	;RP0=1, select bank1
  3858  0EE5  1683               	bcf	status, 6	;RP1=0, select bank1
  3859  0EE6  1303               	movf	(write_font@x+1)^080h,w
  3860  0EE7  082F               	movwf	(??_write_font+0)^080h+0+1
  3861  0EE8  00A9               	movf	(write_font@x)^080h,w
  3862  0EE9  082E               	movwf	(??_write_font+0)^080h+0
  3863  0EEA  00A8               	clrc
  3864  0EEB  1003               	rlf	(??_write_font+0)^080h+0,f
  3865  0EEC  0DA8               	rlf	(??_write_font+0)^080h+1,f
  3866  0EED  0DA9               	movf	(write_font@fontPos+1)^080h,w
  3867  0EEE  0827               	movwf	(___wmul@multiplier+1)^080h
  3868  0EEF  00A1               	movf	(write_font@fontPos)^080h,w
  3869  0EF0  0826               	movwf	(___wmul@multiplier)^080h
  3870  0EF1  00A0               	movlw	0Ah
  3871  0EF2  300A               	movwf	(___wmul@multiplicand)^080h
  3872  0EF3  00A2               	movlw	0
  3873  0EF4  3000               	movwf	((___wmul@multiplicand)^080h)+1
  3874  0EF5  00A3               	fcall	___wmul
  3875  0EF6  120A  118A  2017  120A  158A  	movlw	low(((_font)|8000h))
  3876  0EFB  3012               	bsf	status, 5	;RP0=1, select bank1
  3877  0EFC  1683               	bcf	status, 6	;RP1=0, select bank1
  3878  0EFD  1303               	movwf	(??_write_font+2)^080h+0
  3879  0EFE  00AA               	movlw	high(((_font)|8000h))
  3880  0EFF  3088               	movwf	(??_write_font+2)^080h+0+1
  3881  0F00  00AB               	movf	(0+(?___wmul))^080h,w
  3882  0F01  0820               	addwf	0+(??_write_font+2)^080h+0,w
  3883  0F02  072A               	movwf	(??_write_font+4)^080h+0
  3884  0F03  00AC               	movf	(1+(?___wmul))^080h,w
  3885  0F04  0821               	skipnc
  3886  0F05  1803               	incf	(1+(?___wmul))^080h,w
  3887  0F06  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  3888  0F07  072B               	movwf	1+(??_write_font+4)^080h+0
  3889  0F08  00AD               	movf	0+(??_write_font+0)^080h+0,w
  3890  0F09  0828               	addwf	0+(??_write_font+4)^080h+0,w
  3891  0F0A  072C               	movwf	fsr0
  3892  0F0B  0084               	movf	1+(??_write_font+0)^080h+0,w
  3893  0F0C  0829               	skipnc
  3894  0F0D  1803               	incf	1+(??_write_font+0)^080h+0,w
  3895  0F0E  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  3896  0F0F  072D               	bcf	status, 5	;RP0=0, select bank0
  3897  0F10  1283               	bcf	status, 6	;RP1=0, select bank0
  3898  0F11  1303               	movwf	btemp+1
  3899  0F12  00FF               	fcall	stringtab
  3900  0F13  120A  158A  2000  120A  158A  	fcall	_spiWrite
  3901  0F18  120A  158A  22EC  120A  158A  	line	239
  3902                           	
  3903                           l2066:	
  3904  0F1D                     ;Display.c: 239:     }
  3905                           	movlw	01h
  3906  0F1D  3001               	bsf	status, 5	;RP0=1, select bank1
  3907  0F1E  1683               	bcf	status, 6	;RP1=0, select bank1
  3908  0F1F  1303               	addwf	(write_font@x)^080h,f
  3909  0F20  07AE               	skipnc
  3910  0F21  1803               	incf	(write_font@x+1)^080h,f
  3911  0F22  0AAF               	movlw	0
  3912  0F23  3000               	addwf	(write_font@x+1)^080h,f
  3913  0F24  07AF               	
  3914                           l2068:	
  3915  0F25                     	movf	(write_font@x+1)^080h,w
  3916  0F25  082F               	xorlw	80h
  3917  0F26  3A80               	movwf	btemp+1
  3918  0F27  00FF               	movlw	(0)^80h
  3919  0F28  3080               	subwf	btemp+1,w
  3920  0F29  027F               	skipz
  3921  0F2A  1D03               	goto	u1645
  3922  0F2B  2F2E               	movlw	05h
  3923  0F2C  3005               	subwf	(write_font@x)^080h,w
  3924  0F2D  022E               u1645:
  3925  0F2E                     
  3926                           	skipc
  3927  0F2E  1C03               	goto	u1641
  3928  0F2F  2F31               	goto	u1640
  3929  0F30  2F32               u1641:
  3930  0F31                     	goto	l2064
  3931  0F31  2EE5               u1640:
  3932  0F32                     	goto	l187
  3933  0F32  2F33               	
  3934                           l186:	
  3935  0F33                     	line	243
  3936                           	
  3937                           l187:	
  3938  0F33                     	return
  3939  0F33  0008               	opt stack 0
  3940                           GLOBAL	__end_of_write_font
  3941                           	__end_of_write_font:
  3942  0F34                     	signat	_write_font,4217
  3943                           	global	___wmul
  3944                           
  3945 ;; *************** function ___wmul *****************
  3946 ;; Defined at:
  3947 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;  multiplier      2    0[BANK1 ] unsigned int 
  3950 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  product         2    4[BANK1 ] unsigned int 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2    0[BANK1 ] unsigned int 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       0       4       0       0
  3963 ;;      Locals:         0       0       2       0       0
  3964 ;;      Temps:          0       0       0       0       0
  3965 ;;      Totals:         0       0       6       0       0
  3966 ;;Total ram usage:        6 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    4
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_write_font
  3973 ;;		_write_volume
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3977                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  3978                           	line	15
  3979                           global __ptext8
  3980                           __ptext8:	;psect for function ___wmul
  3981  0017                     psect	text8
  3982                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  3983                           	line	15
  3984                           	global	__size_of___wmul
  3985                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3986  002A                     	
  3987                           ___wmul:	
  3988  0017                     ;incstack = 0
  3989 ;; hardware stack exceeded
  3990                           	opt	stack 0
  3991                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3992                           	line	43
  3993                           	
  3994                           l2044:	
  3995  0017                     	bsf	status, 5	;RP0=1, select bank1
  3996  0017  1683               	bcf	status, 6	;RP1=0, select bank1
  3997  0018  1303               	clrf	(___wmul@product)^080h
  3998  0019  01A4               	clrf	(___wmul@product+1)^080h
  3999  001A  01A5               	goto	l2046
  4000  001B  281C               	line	44
  4001                           	
  4002                           l498:	
  4003  001C                     	line	45
  4004                           	
  4005                           l2046:	
  4006  001C                     	btfss	(___wmul@multiplier)^080h,(0)&7
  4007  001C  1C20               	goto	u1591
  4008  001D  281F               	goto	u1590
  4009  001E  2820               u1591:
  4010  001F                     	goto	l499
  4011  001F  2826               u1590:
  4012  0020                     	line	46
  4013                           	
  4014                           l2048:	
  4015  0020                     	movf	(___wmul@multiplicand)^080h,w
  4016  0020  0822               	addwf	(___wmul@product)^080h,f
  4017  0021  07A4               	skipnc
  4018  0022  1803               	incf	(___wmul@product+1)^080h,f
  4019  0023  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  4020  0024  0823               	addwf	(___wmul@product+1)^080h,f
  4021  0025  07A5               	
  4022                           l499:	
  4023  0026                     	line	47
  4024                           	movlw	01h
  4025  0026  3001               	
  4026                           u1605:
  4027  0027                     	clrc
  4028  0027  1003               	rlf	(___wmul@multiplicand)^080h,f
  4029  0028  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  4030  0029  0DA3               	addlw	-1
  4031  002A  3EFF               	skipz
  4032  002B  1D03               	goto	u1605
  4033  002C  2827               	line	48
  4034                           	
  4035                           l2050:	
  4036  002D                     	movlw	01h
  4037  002D  3001               	
  4038                           u1615:
  4039  002E                     	clrc
  4040  002E  1003               	rrf	(___wmul@multiplier+1)^080h,f
  4041  002F  0CA1               	rrf	(___wmul@multiplier)^080h,f
  4042  0030  0CA0               	addlw	-1
  4043  0031  3EFF               	skipz
  4044  0032  1D03               	goto	u1615
  4045  0033  282E               	line	49
  4046                           	
  4047                           l2052:	
  4048  0034                     	movf	((___wmul@multiplier)^080h),w
  4049  0034  0820               iorwf	((___wmul@multiplier+1)^080h),w
  4050  0035  0421               	btfss	status,2
  4051  0036  1D03               	goto	u1621
  4052  0037  2839               	goto	u1620
  4053  0038  283A               u1621:
  4054  0039                     	goto	l2046
  4055  0039  281C               u1620:
  4056  003A                     	goto	l2054
  4057  003A  283B               	
  4058                           l500:	
  4059  003B                     	line	52
  4060                           	
  4061                           l2054:	
  4062  003B                     	movf	(___wmul@product+1)^080h,w
  4063  003B  0825               	movwf	(?___wmul+1)^080h
  4064  003C  00A1               	movf	(___wmul@product)^080h,w
  4065  003D  0824               	movwf	(?___wmul)^080h
  4066  003E  00A0               	goto	l501
  4067  003F  2840               	
  4068                           l2056:	
  4069  0040                     	line	53
  4070                           	
  4071                           l501:	
  4072  0040                     	return
  4073  0040  0008               	opt stack 0
  4074                           GLOBAL	__end_of___wmul
  4075                           	__end_of___wmul:
  4076  0041                     	signat	___wmul,8314
  4077                           	global	_sprintf
  4078                           
  4079 ;; *************** function _sprintf *****************
  4080 ;; Defined at:
  4081 ;;		line 500 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  sp              1    wreg     PTR unsigned char 
  4084 ;;		 -> write_int@num(2), 
  4085 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4086 ;;		 -> STR_3(3), 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  4089 ;;		 -> write_int@num(2), 
  4090 ;;  tmpval          4    0        struct .
  4091 ;;  val             2   25[BANK1 ] unsigned int 
  4092 ;;  cp              2    0        PTR const unsigned char 
  4093 ;;  len             2    0        unsigned int 
  4094 ;;  c               1   28[BANK1 ] unsigned char 
  4095 ;;  prec            1   24[BANK1 ] char 
  4096 ;;  flag            1   23[BANK1 ] unsigned char 
  4097 ;;  ap              1   22[BANK1 ] PTR void [1]
  4098 ;;		 -> ?_sprintf(2), 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2   14[BANK1 ] int 
  4101 ;; Registers used:
  4102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4108 ;;      Params:         0       0       4       0       0
  4109 ;;      Locals:         0       0       7       0       0
  4110 ;;      Temps:          0       0       4       0       0
  4111 ;;      Totals:         0       0      15       0       0
  4112 ;;Total ram usage:       15 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    5
  4115 ;; This function calls:
  4116 ;;		___lwdiv
  4117 ;;		___lwmod
  4118 ;; This function is called by:
  4119 ;;		_write_int
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4123                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4124                           	line	500
  4125                           global __ptext9
  4126                           __ptext9:	;psect for function _sprintf
  4127  03EA                     psect	text9
  4128                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4129                           	line	500
  4130                           	global	__size_of_sprintf
  4131                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4132  0136                     	
  4133                           _sprintf:	
  4134  03EA                     ;incstack = 0
  4135 ;; using string table level
  4136                           	opt	stack 1
  4137                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4138                           ;sprintf@sp stored from wreg
  4139                           	bsf	status, 5	;RP0=1, select bank1
  4140  03EA  1683               	bcf	status, 6	;RP1=0, select bank1
  4141  03EB  1303               	movwf	(sprintf@sp)^080h
  4142  03EC  00BB               	line	545
  4143                           	
  4144                           l2150:	
  4145  03ED                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
                                  char * f, ...);/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
                                 crochip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.00/pic/source
                                 s/c90/common/doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.00/pic/sources/c90/
                                 common/doprnt.c: 520:  unsigned char flag;;/opt/microchip/xc8/v2.00/pic/sources/c90/comm
                                 on/doprnt.c: 538:  } tmpval;
  4146                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  4147  03ED  30B0               	movwf	(??_sprintf+0)^080h+0
  4148  03EE  00B2               	movf	(??_sprintf+0)^080h+0,w
  4149  03EF  0832               	movwf	(sprintf@ap)^080h
  4150  03F0  00B6               	line	548
  4151                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4152                           	goto	l2202
  4153  03F1  2CF8               	
  4154                           l477:	
  4155  03F2                     	line	550
  4156                           	
  4157                           l2152:	
  4158  03F2                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  4159                           		movlw	37
  4160  03F2  3025               	xorwf	((sprintf@c)^080h),w
  4161  03F3  063C               	btfsc	status,2
  4162  03F4  1903               	goto	u1851
  4163  03F5  2BF7               	goto	u1850
  4164  03F6  2BF8               u1851:
  4165  03F7                     	goto	l2158
  4166  03F7  2C04               u1850:
  4167  03F8                     	line	553
  4168                           	
  4169                           l2154:	
  4170  03F8                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
                                 2.00/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  4171                           	movf	(sprintf@c)^080h,w
  4172  03F8  083C               	movwf	(??_sprintf+0)^080h+0
  4173  03F9  00B2               	movf	(sprintf@sp)^080h,w
  4174  03FA  083B               	movwf	fsr0
  4175  03FB  0084               	movf	(??_sprintf+0)^080h+0,w
  4176  03FC  0832               	bcf	status, 7	;select IRP bank0
  4177  03FD  1383               	movwf	indf
  4178  03FE  0080               	
  4179                           l2156:	
  4180  03FF                     	movlw	low(01h)
  4181  03FF  3001               	movwf	(??_sprintf+0)^080h+0
  4182  0400  00B2               	movf	(??_sprintf+0)^080h+0,w
  4183  0401  0832               	addwf	(sprintf@sp)^080h,f
  4184  0402  07BB               	line	554
  4185                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 554:    continue;
  4186                           	goto	l2202
  4187  0403  2CF8               	line	555
  4188                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 555:   }
  4189                           	
  4190                           l478:	
  4191  0404                     	line	560
  4192                           	
  4193                           l2158:	
  4194  0404                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  4195                           	clrf	(sprintf@flag)^080h
  4196  0404  01B7               	line	654
  4197                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 654:   switch(c = *f++) {
  4198                           	goto	l2162
  4199  0405  2C0B               	line	656
  4200                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 656:   case 0:
  4201                           	
  4202                           l480:	
  4203  0406                     	line	657
  4204                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 657:    goto alldone;
  4205                           	goto	l2204
  4206  0406  2D1A               	line	716
  4207                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 716:   case 'd':
  4208                           	
  4209                           l482:	
  4210  0407                     	goto	l2164
  4211  0407  2C36               	line	717
  4212                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 717:   case 'i':
  4213                           	
  4214                           l483:	
  4215  0408                     	line	718
  4216                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 718:    break;
  4217                           	goto	l2164
  4218  0408  2C36               	line	821
  4219                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 821:   default:
  4220                           	
  4221                           l485:	
  4222  0409                     	line	832
  4223                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 832:    continue;
  4224                           	goto	l2202
  4225  0409  2CF8               	line	841
  4226                           	
  4227                           l2160:	
  4228  040A                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 841:   }
  4229                           	goto	l2164
  4230  040A  2C36               	
  4231                           l479:	
  4232  040B                     	
  4233                           l2162:	
  4234  040B                     	movf	(sprintf@f+1)^080h,w
  4235  040B  082F               	movwf	(??_sprintf+0)^080h+0+1
  4236  040C  00B3               	movf	(sprintf@f)^080h,w
  4237  040D  082E               	movwf	(??_sprintf+0)^080h+0
  4238  040E  00B2               	incf	(sprintf@f)^080h,f
  4239  040F  0AAE               	skipnz
  4240  0410  1903               	incf	(sprintf@f+1)^080h,f
  4241  0411  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4242  0412  0833               	bcf	status, 5	;RP0=0, select bank0
  4243  0413  1283               	bcf	status, 6	;RP1=0, select bank0
  4244  0414  1303               	movwf	btemp+1
  4245  0415  00FF               	bsf	status, 5	;RP0=1, select bank1
  4246  0416  1683               	bcf	status, 6	;RP1=0, select bank1
  4247  0417  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4248  0418  0832               	movwf	fsr0
  4249  0419  0084               	bcf	status, 5	;RP0=0, select bank0
  4250  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  4251  041B  1303               	fcall	stringtab
  4252  041C  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4253  0421  1683               	bcf	status, 6	;RP1=0, select bank1
  4254  0422  1303               	movwf	(sprintf@c)^080h
  4255  0423  00BC               	movwf	(??_sprintf+2)^080h+0
  4256  0424  00B4               	clrf	(??_sprintf+2)^080h+0+1
  4257  0425  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4258                           ; Switch size 1, requested type "space"
  4259                           ; Number of cases is 1, Range of values is 0 to 0
  4260                           ; switch strategies available:
  4261                           ; Name         Instructions Cycles
  4262                           ; simple_byte            4     3 (average)
  4263                           ; direct_byte           11     8 (fixed)
  4264                           ; jumptable            260     6 (fixed)
  4265                           ;	Chosen strategy is simple_byte
  4266                           
  4267                           	movf 1+(??_sprintf+2)^080h+0,w
  4268  0426  0835               	opt asmopt_push
  4269                           	opt asmopt_off
  4270                           	xorlw	0^0	; case 0
  4271  0427  3A00               	skipnz
  4272  0428  1903               	goto	l3074
  4273  0429  2C2B               	goto	l2202
  4274  042A  2CF8               	opt asmopt_pop
  4275                           	
  4276                           l3074:	
  4277  042B                     ; Switch size 1, requested type "space"
  4278                           ; Number of cases is 3, Range of values is 0 to 105
  4279                           ; switch strategies available:
  4280                           ; Name         Instructions Cycles
  4281                           ; simple_byte           10     6 (average)
  4282                           ; jumptable            260     6 (fixed)
  4283                           ;	Chosen strategy is simple_byte
  4284                           
  4285                           	movf 0+(??_sprintf+2)^080h+0,w
  4286  042B  0834               	opt asmopt_push
  4287                           	opt asmopt_off
  4288                           	xorlw	0^0	; case 0
  4289  042C  3A00               	skipnz
  4290  042D  1903               	goto	l2204
  4291  042E  2D1A               	xorlw	100^0	; case 100
  4292  042F  3A64               	skipnz
  4293  0430  1903               	goto	l2164
  4294  0431  2C36               	xorlw	105^100	; case 105
  4295  0432  3A0D               	skipnz
  4296  0433  1903               	goto	l2164
  4297  0434  2C36               	goto	l2202
  4298  0435  2CF8               	opt asmopt_pop
  4299                           
  4300                           	
  4301                           l484:	
  4302  0436                     	line	1278
  4303                           	
  4304                           l2164:	
  4305  0436                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
                                 ap), (int)0));
  4306                           	movf	(sprintf@ap)^080h,w
  4307  0436  0836               	movwf	fsr0
  4308  0437  0084               	bcf	status, 7	;select IRP bank0
  4309  0438  1383               	movf	indf,w
  4310  0439  0800               	movwf	(sprintf@val)^080h
  4311  043A  00B9               	incf	fsr0,f
  4312  043B  0A84               	movf	indf,w
  4313  043C  0800               	movwf	(sprintf@val+1)^080h
  4314  043D  00BA               	
  4315                           l2166:	
  4316  043E                     	movlw	low(02h)
  4317  043E  3002               	movwf	(??_sprintf+0)^080h+0
  4318  043F  00B2               	movf	(??_sprintf+0)^080h+0,w
  4319  0440  0832               	addwf	(sprintf@ap)^080h,f
  4320  0441  07B6               	line	1280
  4321                           	
  4322                           l2168:	
  4323  0442                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  4324                           	btfss	(sprintf@val+1)^080h,7
  4325  0442  1FBA               	goto	u1861
  4326  0443  2C45               	goto	u1860
  4327  0444  2C46               u1861:
  4328  0445                     	goto	l2174
  4329  0445  2C50               u1860:
  4330  0446                     	line	1281
  4331                           	
  4332                           l2170:	
  4333  0446                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  4334                           	movlw	low(03h)
  4335  0446  3003               	movwf	(??_sprintf+0)^080h+0
  4336  0447  00B2               	movf	(??_sprintf+0)^080h+0,w
  4337  0448  0832               	iorwf	(sprintf@flag)^080h,f
  4338  0449  04B7               	line	1282
  4339                           	
  4340                           l2172:	
  4341  044A                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  4342                           	comf	(sprintf@val)^080h,f
  4343  044A  09B9               	comf	(sprintf@val+1)^080h,f
  4344  044B  09BA               	incf	(sprintf@val)^080h,f
  4345  044C  0AB9               	skipnz
  4346  044D  1903               	incf	(sprintf@val+1)^080h,f
  4347  044E  0ABA               	goto	l2174
  4348  044F  2C50               	line	1283
  4349                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1283:    }
  4350                           	
  4351                           l486:	
  4352  0450                     	line	1324
  4353                           	
  4354                           l2174:	
  4355  0450                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
                                 powers[0] ; c++)
  4356                           	clrf	(sprintf@c)^080h
  4357  0450  01BC               	incf	(sprintf@c)^080h,f
  4358  0451  0ABC               	
  4359                           l2176:	
  4360  0452                     		movlw	5
  4361  0452  3005               	xorwf	((sprintf@c)^080h),w
  4362  0453  063C               	btfss	status,2
  4363  0454  1D03               	goto	u1871
  4364  0455  2C57               	goto	u1870
  4365  0456  2C58               u1871:
  4366  0457                     	goto	l2180
  4367  0457  2C5A               u1870:
  4368  0458                     	goto	l2186
  4369  0458  2C8E               	
  4370                           l2178:	
  4371  0459                     	goto	l2186
  4372  0459  2C8E               	
  4373                           l487:	
  4374  045A                     	line	1325
  4375                           	
  4376                           l2180:	
  4377  045A                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
                                 )
  4378                           	movf	(sprintf@c)^080h,w
  4379  045A  083C               	movwf	(??_sprintf+0)^080h+0
  4380  045B  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4381  045C  0732               	addlw	low(((_dpowers)|8000h))
  4382  045D  3E84               	movwf	fsr0
  4383  045E  0084               	movlw	high(((_dpowers)|8000h))
  4384  045F  3089               	skipnc
  4385  0460  1803               	addlw	1
  4386  0461  3E01               	bcf	status, 5	;RP0=0, select bank0
  4387  0462  1283               	bcf	status, 6	;RP1=0, select bank0
  4388  0463  1303               	movwf	btemp+1
  4389  0464  00FF               	fcall	stringtab
  4390  0465  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4391  046A  1683               	bcf	status, 6	;RP1=0, select bank1
  4392  046B  1303               	movwf	(??_sprintf+1)^080h+0
  4393  046C  00B3               	bcf	status, 5	;RP0=0, select bank0
  4394  046D  1283               	bcf	status, 6	;RP1=0, select bank0
  4395  046E  1303               	fcall	stringtab
  4396  046F  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4397  0474  1683               	bcf	status, 6	;RP1=0, select bank1
  4398  0475  1303               	movwf	(??_sprintf+1)^080h+0+1
  4399  0476  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  4400  0477  0834               	subwf	(sprintf@val+1)^080h,w
  4401  0478  023A               	skipz
  4402  0479  1D03               	goto	u1885
  4403  047A  2C7D               	movf	0+(??_sprintf+1)^080h+0,w
  4404  047B  0833               	subwf	(sprintf@val)^080h,w
  4405  047C  0239               u1885:
  4406  047D                     	skipnc
  4407  047D  1803               	goto	u1881
  4408  047E  2C80               	goto	u1880
  4409  047F  2C81               u1881:
  4410  0480                     	goto	l2184
  4411  0480  2C83               u1880:
  4412  0481                     	goto	l2186
  4413  0481  2C8E               	line	1326
  4414                           	
  4415                           l2182:	
  4416  0482                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1326:      break;
  4417                           	goto	l2186
  4418  0482  2C8E               	
  4419                           l489:	
  4420  0483                     	
  4421                           l2184:	
  4422  0483                     	movlw	low(01h)
  4423  0483  3001               	movwf	(??_sprintf+0)^080h+0
  4424  0484  00B2               	movf	(??_sprintf+0)^080h+0,w
  4425  0485  0832               	addwf	(sprintf@c)^080h,f
  4426  0486  07BC               		movlw	5
  4427  0487  3005               	xorwf	((sprintf@c)^080h),w
  4428  0488  063C               	btfss	status,2
  4429  0489  1D03               	goto	u1891
  4430  048A  2C8C               	goto	u1890
  4431  048B  2C8D               u1891:
  4432  048C                     	goto	l2180
  4433  048C  2C5A               u1890:
  4434  048D                     	goto	l2186
  4435  048D  2C8E               	
  4436                           l488:	
  4437  048E                     	line	1457
  4438                           	
  4439                           l2186:	
  4440  048E                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  4441                           	movf	(sprintf@flag)^080h,w
  4442  048E  0837               	andlw	03h
  4443  048F  3903               	btfsc	status,2
  4444  0490  1903               	goto	u1901
  4445  0491  2C93               	goto	u1900
  4446  0492  2C94               u1901:
  4447  0493                     	goto	l2192
  4448  0493  2CA0               u1900:
  4449  0494                     	line	1458
  4450                           	
  4451                           l2188:	
  4452  0494                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));

  4453                           	movlw	low(02Dh)
  4454  0494  302D               	movwf	(??_sprintf+0)^080h+0
  4455  0495  00B2               	movf	(sprintf@sp)^080h,w
  4456  0496  083B               	movwf	fsr0
  4457  0497  0084               	movf	(??_sprintf+0)^080h+0,w
  4458  0498  0832               	bcf	status, 7	;select IRP bank0
  4459  0499  1383               	movwf	indf
  4460  049A  0080               	
  4461                           l2190:	
  4462  049B                     	movlw	low(01h)
  4463  049B  3001               	movwf	(??_sprintf+0)^080h+0
  4464  049C  00B2               	movf	(??_sprintf+0)^080h+0,w
  4465  049D  0832               	addwf	(sprintf@sp)^080h,f
  4466  049E  07BB               	goto	l2192
  4467  049F  2CA0               	
  4468                           l490:	
  4469  04A0                     	line	1491
  4470                           	
  4471                           l2192:	
  4472  04A0                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  4473                           	movf	(sprintf@c)^080h,w
  4474  04A0  083C               	movwf	(??_sprintf+0)^080h+0
  4475  04A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4476  04A2  0832               	movwf	(sprintf@prec)^080h
  4477  04A3  00B8               	line	1493
  4478                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4479                           	goto	l2200
  4480  04A4  2CED               	
  4481                           l492:	
  4482  04A5                     	line	1508
  4483                           	
  4484                           l2194:	
  4485  04A5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';

  4486                           	movlw	0Ah
  4487  04A5  300A               	movwf	(___lwmod@divisor)^080h
  4488  04A6  00A8               	movlw	0
  4489  04A7  3000               	movwf	((___lwmod@divisor)^080h)+1
  4490  04A8  00A9               	movf	(sprintf@prec)^080h,w
  4491  04A9  0838               	movwf	(??_sprintf+0)^080h+0
  4492  04AA  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4493  04AB  0732               	addlw	low(((_dpowers)|8000h))
  4494  04AC  3E84               	movwf	fsr0
  4495  04AD  0084               	movlw	high(((_dpowers)|8000h))
  4496  04AE  3089               	skipnc
  4497  04AF  1803               	addlw	1
  4498  04B0  3E01               	bcf	status, 5	;RP0=0, select bank0
  4499  04B1  1283               	bcf	status, 6	;RP1=0, select bank0
  4500  04B2  1303               	movwf	btemp+1
  4501  04B3  00FF               	fcall	stringtab
  4502  04B4  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4503  04B9  1683               	bcf	status, 6	;RP1=0, select bank1
  4504  04BA  1303               	movwf	(___lwdiv@divisor)^080h
  4505  04BB  00A0               	bcf	status, 5	;RP0=0, select bank0
  4506  04BC  1283               	bcf	status, 6	;RP1=0, select bank0
  4507  04BD  1303               	fcall	stringtab
  4508  04BE  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4509  04C3  1683               	bcf	status, 6	;RP1=0, select bank1
  4510  04C4  1303               	movwf	(___lwdiv@divisor+1)^080h
  4511  04C5  00A1               	movf	(sprintf@val+1)^080h,w
  4512  04C6  083A               	movwf	(___lwdiv@dividend+1)^080h
  4513  04C7  00A3               	movf	(sprintf@val)^080h,w
  4514  04C8  0839               	movwf	(___lwdiv@dividend)^080h
  4515  04C9  00A2               	fcall	___lwdiv
  4516  04CA  120A  158A  258B  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4517  04CF  1683               	bcf	status, 6	;RP1=0, select bank1
  4518  04D0  1303               	movf	(1+(?___lwdiv))^080h,w
  4519  04D1  0821               	movwf	(___lwmod@dividend+1)^080h
  4520  04D2  00AB               	movf	(0+(?___lwdiv))^080h,w
  4521  04D3  0820               	movwf	(___lwmod@dividend)^080h
  4522  04D4  00AA               	fcall	___lwmod
  4523  04D5  120A  158A  246B  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4524  04DA  1683               	bcf	status, 6	;RP1=0, select bank1
  4525  04DB  1303               	movf	(0+(?___lwmod))^080h,w
  4526  04DC  0828               	addlw	030h
  4527  04DD  3E30               	movwf	(??_sprintf+1)^080h+0
  4528  04DE  00B3               	movf	(??_sprintf+1)^080h+0,w
  4529  04DF  0833               	movwf	(sprintf@c)^080h
  4530  04E0  00BC               	line	1543
  4531                           	
  4532                           l2196:	
  4533  04E1                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  4534                           	movf	(sprintf@c)^080h,w
  4535  04E1  083C               	movwf	(??_sprintf+0)^080h+0
  4536  04E2  00B2               	movf	(sprintf@sp)^080h,w
  4537  04E3  083B               	movwf	fsr0
  4538  04E4  0084               	movf	(??_sprintf+0)^080h+0,w
  4539  04E5  0832               	bcf	status, 7	;select IRP bank0
  4540  04E6  1383               	movwf	indf
  4541  04E7  0080               	
  4542                           l2198:	
  4543  04E8                     	movlw	low(01h)
  4544  04E8  3001               	movwf	(??_sprintf+0)^080h+0
  4545  04E9  00B2               	movf	(??_sprintf+0)^080h+0,w
  4546  04EA  0832               	addwf	(sprintf@sp)^080h,f
  4547  04EB  07BB               	goto	l2200
  4548  04EC  2CED               	line	1544
  4549                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1544:   }
  4550                           	
  4551                           l491:	
  4552  04ED                     	line	1493
  4553                           	
  4554                           l2200:	
  4555  04ED                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4556                           	movlw	low(-1)
  4557  04ED  30FF               	movwf	(??_sprintf+0)^080h+0
  4558  04EE  00B2               	movf	(??_sprintf+0)^080h+0,w
  4559  04EF  0832               	addwf	(sprintf@prec)^080h,f
  4560  04F0  07B8               		incf	(((sprintf@prec)^080h)),w
  4561  04F1  0A38               	btfss	status,2
  4562  04F2  1D03               	goto	u1911
  4563  04F3  2CF5               	goto	u1910
  4564  04F4  2CF6               u1911:
  4565  04F5                     	goto	l2194
  4566  04F5  2CA5               u1910:
  4567  04F6                     	goto	l2202
  4568  04F6  2CF8               	
  4569                           l493:	
  4570  04F7                     	goto	l2202
  4571  04F7  2CF8               	line	1552
  4572                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1552:  }
  4573                           	
  4574                           l476:	
  4575  04F8                     	line	548
  4576                           	
  4577                           l2202:	
  4578  04F8                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4579                           	movf	(sprintf@f+1)^080h,w
  4580  04F8  082F               	movwf	(??_sprintf+0)^080h+0+1
  4581  04F9  00B3               	movf	(sprintf@f)^080h,w
  4582  04FA  082E               	movwf	(??_sprintf+0)^080h+0
  4583  04FB  00B2               	incf	(sprintf@f)^080h,f
  4584  04FC  0AAE               	skipnz
  4585  04FD  1903               	incf	(sprintf@f+1)^080h,f
  4586  04FE  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4587  04FF  0833               	bcf	status, 5	;RP0=0, select bank0
  4588  0500  1283               	bcf	status, 6	;RP1=0, select bank0
  4589  0501  1303               	movwf	btemp+1
  4590  0502  00FF               	bsf	status, 5	;RP0=1, select bank1
  4591  0503  1683               	bcf	status, 6	;RP1=0, select bank1
  4592  0504  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4593  0505  0832               	movwf	fsr0
  4594  0506  0084               	bcf	status, 5	;RP0=0, select bank0
  4595  0507  1283               	bcf	status, 6	;RP1=0, select bank0
  4596  0508  1303               	fcall	stringtab
  4597  0509  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4598  050E  1683               	bcf	status, 6	;RP1=0, select bank1
  4599  050F  1303               	movwf	(??_sprintf+2)^080h+0
  4600  0510  00B4               	movf	(??_sprintf+2)^080h+0,w
  4601  0511  0834               	movwf	(sprintf@c)^080h
  4602  0512  00BC               	movf	(((sprintf@c)^080h)),w
  4603  0513  083C               	btfss	status,2
  4604  0514  1D03               	goto	u1921
  4605  0515  2D17               	goto	u1920
  4606  0516  2D18               u1921:
  4607  0517                     	goto	l2152
  4608  0517  2BF2               u1920:
  4609  0518                     	goto	l2204
  4610  0518  2D1A               	
  4611                           l494:	
  4612  0519                     	goto	l2204
  4613  0519  2D1A               	line	1554
  4614                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1554: alldone:
  4615                           	
  4616                           l481:	
  4617  051A                     	line	1557
  4618                           	
  4619                           l2204:	
  4620  051A                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  4621                           	movf	(sprintf@sp)^080h,w
  4622  051A  083B               	movwf	fsr0
  4623  051B  0084               	bcf	status, 7	;select IRP bank0
  4624  051C  1383               	clrf	indf
  4625  051D  0180               	goto	l495
  4626  051E  2D1F               	line	1559
  4627                           	
  4628                           l2206:	
  4629  051F                     	line	1560
  4630                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1559:  return 0;;	Return valu
                                 e of _sprintf is never used
  4631                           	
  4632                           l495:	
  4633  051F                     	return
  4634  051F  0008               	opt stack 0
  4635                           GLOBAL	__end_of_sprintf
  4636                           	__end_of_sprintf:
  4637  0520                     	signat	_sprintf,4698
  4638                           	global	___lwmod
  4639                           
  4640 ;; *************** function ___lwmod *****************
  4641 ;; Defined at:
  4642 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  divisor         2    8[BANK1 ] unsigned int 
  4645 ;;  dividend        2   10[BANK1 ] unsigned int 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;  counter         1   13[BANK1 ] unsigned char 
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  2    8[BANK1 ] unsigned int 
  4650 ;; Registers used:
  4651 ;;		wreg, status,2, status,0
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4657 ;;      Params:         0       0       4       0       0
  4658 ;;      Locals:         0       0       1       0       0
  4659 ;;      Temps:          0       0       1       0       0
  4660 ;;      Totals:         0       0       6       0       0
  4661 ;;Total ram usage:        6 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    4
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_sprintf
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4671                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4672                           	line	5
  4673                           global __ptext10
  4674                           __ptext10:	;psect for function ___lwmod
  4675  0C6B                     psect	text10
  4676                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4677                           	line	5
  4678                           	global	__size_of___lwmod
  4679                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4680  0043                     	
  4681                           ___lwmod:	
  4682  0C6B                     ;incstack = 0
  4683                           	opt	stack 0
  4684                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4685                           	line	12
  4686                           	
  4687                           l2120:	
  4688  0C6B                     	bsf	status, 5	;RP0=1, select bank1
  4689  0C6B  1683               	bcf	status, 6	;RP1=0, select bank1
  4690  0C6C  1303               	movf	((___lwmod@divisor)^080h),w
  4691  0C6D  0828               iorwf	((___lwmod@divisor+1)^080h),w
  4692  0C6E  0429               	btfsc	status,2
  4693  0C6F  1903               	goto	u1781
  4694  0C70  2C72               	goto	u1780
  4695  0C71  2C73               u1781:
  4696  0C72                     	goto	l2138
  4697  0C72  2CA8               u1780:
  4698  0C73                     	line	13
  4699                           	
  4700                           l2122:	
  4701  0C73                     	clrf	(___lwmod@counter)^080h
  4702  0C73  01AD               	incf	(___lwmod@counter)^080h,f
  4703  0C74  0AAD               	line	14
  4704                           	goto	l2128
  4705  0C75  2C82               	
  4706                           l776:	
  4707  0C76                     	line	15
  4708                           	
  4709                           l2124:	
  4710  0C76                     	movlw	01h
  4711  0C76  3001               	
  4712                           u1795:
  4713  0C77                     	clrc
  4714  0C77  1003               	rlf	(___lwmod@divisor)^080h,f
  4715  0C78  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  4716  0C79  0DA9               	addlw	-1
  4717  0C7A  3EFF               	skipz
  4718  0C7B  1D03               	goto	u1795
  4719  0C7C  2C77               	line	16
  4720                           	
  4721                           l2126:	
  4722  0C7D                     	movlw	low(01h)
  4723  0C7D  3001               	movwf	(??___lwmod+0)^080h+0
  4724  0C7E  00AC               	movf	(??___lwmod+0)^080h+0,w
  4725  0C7F  082C               	addwf	(___lwmod@counter)^080h,f
  4726  0C80  07AD               	goto	l2128
  4727  0C81  2C82               	line	17
  4728                           	
  4729                           l775:	
  4730  0C82                     	line	14
  4731                           	
  4732                           l2128:	
  4733  0C82                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  4734  0C82  1FA9               	goto	u1801
  4735  0C83  2C85               	goto	u1800
  4736  0C84  2C86               u1801:
  4737  0C85                     	goto	l2124
  4738  0C85  2C76               u1800:
  4739  0C86                     	goto	l2130
  4740  0C86  2C88               	
  4741                           l777:	
  4742  0C87                     	goto	l2130
  4743  0C87  2C88               	line	18
  4744                           	
  4745                           l778:	
  4746  0C88                     	line	19
  4747                           	
  4748                           l2130:	
  4749  0C88                     	movf	(___lwmod@divisor+1)^080h,w
  4750  0C88  0829               	subwf	(___lwmod@dividend+1)^080h,w
  4751  0C89  022B               	skipz
  4752  0C8A  1D03               	goto	u1815
  4753  0C8B  2C8E               	movf	(___lwmod@divisor)^080h,w
  4754  0C8C  0828               	subwf	(___lwmod@dividend)^080h,w
  4755  0C8D  022A               u1815:
  4756  0C8E                     	skipc
  4757  0C8E  1C03               	goto	u1811
  4758  0C8F  2C91               	goto	u1810
  4759  0C90  2C92               u1811:
  4760  0C91                     	goto	l2134
  4761  0C91  2C99               u1810:
  4762  0C92                     	line	20
  4763                           	
  4764                           l2132:	
  4765  0C92                     	movf	(___lwmod@divisor)^080h,w
  4766  0C92  0828               	subwf	(___lwmod@dividend)^080h,f
  4767  0C93  02AA               	movf	(___lwmod@divisor+1)^080h,w
  4768  0C94  0829               	skipc
  4769  0C95  1C03               	decf	(___lwmod@dividend+1)^080h,f
  4770  0C96  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  4771  0C97  02AB               	goto	l2134
  4772  0C98  2C99               	
  4773                           l779:	
  4774  0C99                     	line	21
  4775                           	
  4776                           l2134:	
  4777  0C99                     	movlw	01h
  4778  0C99  3001               	
  4779                           u1825:
  4780  0C9A                     	clrc
  4781  0C9A  1003               	rrf	(___lwmod@divisor+1)^080h,f
  4782  0C9B  0CA9               	rrf	(___lwmod@divisor)^080h,f
  4783  0C9C  0CA8               	addlw	-1
  4784  0C9D  3EFF               	skipz
  4785  0C9E  1D03               	goto	u1825
  4786  0C9F  2C9A               	line	22
  4787                           	
  4788                           l2136:	
  4789  0CA0                     	movlw	01h
  4790  0CA0  3001               	subwf	(___lwmod@counter)^080h,f
  4791  0CA1  02AD               	btfss	status,2
  4792  0CA2  1D03               	goto	u1831
  4793  0CA3  2CA5               	goto	u1830
  4794  0CA4  2CA6               u1831:
  4795  0CA5                     	goto	l2130
  4796  0CA5  2C88               u1830:
  4797  0CA6                     	goto	l2138
  4798  0CA6  2CA8               	
  4799                           l780:	
  4800  0CA7                     	goto	l2138
  4801  0CA7  2CA8               	line	23
  4802                           	
  4803                           l774:	
  4804  0CA8                     	line	24
  4805                           	
  4806                           l2138:	
  4807  0CA8                     	movf	(___lwmod@dividend+1)^080h,w
  4808  0CA8  082B               	movwf	(?___lwmod+1)^080h
  4809  0CA9  00A9               	movf	(___lwmod@dividend)^080h,w
  4810  0CAA  082A               	movwf	(?___lwmod)^080h
  4811  0CAB  00A8               	goto	l781
  4812  0CAC  2CAD               	
  4813                           l2140:	
  4814  0CAD                     	line	25
  4815                           	
  4816                           l781:	
  4817  0CAD                     	return
  4818  0CAD  0008               	opt stack 0
  4819                           GLOBAL	__end_of___lwmod
  4820                           	__end_of___lwmod:
  4821  0CAE                     	signat	___lwmod,8314
  4822                           	global	___lwdiv
  4823                           
  4824 ;; *************** function ___lwdiv *****************
  4825 ;; Defined at:
  4826 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4827 ;; Parameters:    Size  Location     Type
  4828 ;;  divisor         2    0[BANK1 ] unsigned int 
  4829 ;;  dividend        2    2[BANK1 ] unsigned int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  quotient        2    5[BANK1 ] unsigned int 
  4832 ;;  counter         1    7[BANK1 ] unsigned char 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  2    0[BANK1 ] unsigned int 
  4835 ;; Registers used:
  4836 ;;		wreg, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4842 ;;      Params:         0       0       4       0       0
  4843 ;;      Locals:         0       0       3       0       0
  4844 ;;      Temps:          0       0       1       0       0
  4845 ;;      Totals:         0       0       8       0       0
  4846 ;;Total ram usage:        8 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:    4
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_sprintf
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  4856                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4857                           	line	5
  4858                           global __ptext11
  4859                           __ptext11:	;psect for function ___lwdiv
  4860  0D8B                     psect	text11
  4861                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4862                           	line	5
  4863                           	global	__size_of___lwdiv
  4864                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4865  004D                     	
  4866                           ___lwdiv:	
  4867  0D8B                     ;incstack = 0
  4868                           	opt	stack 0
  4869                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4870                           	line	13
  4871                           	
  4872                           l2094:	
  4873  0D8B                     	bsf	status, 5	;RP0=1, select bank1
  4874  0D8B  1683               	bcf	status, 6	;RP1=0, select bank1
  4875  0D8C  1303               	clrf	(___lwdiv@quotient)^080h
  4876  0D8D  01A5               	clrf	(___lwdiv@quotient+1)^080h
  4877  0D8E  01A6               	line	14
  4878                           	
  4879                           l2096:	
  4880  0D8F                     	movf	((___lwdiv@divisor)^080h),w
  4881  0D8F  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  4882  0D90  0421               	btfsc	status,2
  4883  0D91  1903               	goto	u1711
  4884  0D92  2D94               	goto	u1710
  4885  0D93  2D95               u1711:
  4886  0D94                     	goto	l2116
  4887  0D94  2DD2               u1710:
  4888  0D95                     	line	15
  4889                           	
  4890                           l2098:	
  4891  0D95                     	clrf	(___lwdiv@counter)^080h
  4892  0D95  01A7               	incf	(___lwdiv@counter)^080h,f
  4893  0D96  0AA7               	line	16
  4894                           	goto	l2104
  4895  0D97  2DA4               	
  4896                           l766:	
  4897  0D98                     	line	17
  4898                           	
  4899                           l2100:	
  4900  0D98                     	movlw	01h
  4901  0D98  3001               	
  4902                           u1725:
  4903  0D99                     	clrc
  4904  0D99  1003               	rlf	(___lwdiv@divisor)^080h,f
  4905  0D9A  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  4906  0D9B  0DA1               	addlw	-1
  4907  0D9C  3EFF               	skipz
  4908  0D9D  1D03               	goto	u1725
  4909  0D9E  2D99               	line	18
  4910                           	
  4911                           l2102:	
  4912  0D9F                     	movlw	low(01h)
  4913  0D9F  3001               	movwf	(??___lwdiv+0)^080h+0
  4914  0DA0  00A4               	movf	(??___lwdiv+0)^080h+0,w
  4915  0DA1  0824               	addwf	(___lwdiv@counter)^080h,f
  4916  0DA2  07A7               	goto	l2104
  4917  0DA3  2DA4               	line	19
  4918                           	
  4919                           l765:	
  4920  0DA4                     	line	16
  4921                           	
  4922                           l2104:	
  4923  0DA4                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  4924  0DA4  1FA1               	goto	u1731
  4925  0DA5  2DA7               	goto	u1730
  4926  0DA6  2DA8               u1731:
  4927  0DA7                     	goto	l2100
  4928  0DA7  2D98               u1730:
  4929  0DA8                     	goto	l2106
  4930  0DA8  2DAA               	
  4931                           l767:	
  4932  0DA9                     	goto	l2106
  4933  0DA9  2DAA               	line	20
  4934                           	
  4935                           l768:	
  4936  0DAA                     	line	21
  4937                           	
  4938                           l2106:	
  4939  0DAA                     	movlw	01h
  4940  0DAA  3001               	
  4941                           u1745:
  4942  0DAB                     	clrc
  4943  0DAB  1003               	rlf	(___lwdiv@quotient)^080h,f
  4944  0DAC  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  4945  0DAD  0DA6               	addlw	-1
  4946  0DAE  3EFF               	skipz
  4947  0DAF  1D03               	goto	u1745
  4948  0DB0  2DAB               	line	22
  4949                           	movf	(___lwdiv@divisor+1)^080h,w
  4950  0DB1  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  4951  0DB2  0223               	skipz
  4952  0DB3  1D03               	goto	u1755
  4953  0DB4  2DB7               	movf	(___lwdiv@divisor)^080h,w
  4954  0DB5  0820               	subwf	(___lwdiv@dividend)^080h,w
  4955  0DB6  0222               u1755:
  4956  0DB7                     	skipc
  4957  0DB7  1C03               	goto	u1751
  4958  0DB8  2DBA               	goto	u1750
  4959  0DB9  2DBB               u1751:
  4960  0DBA                     	goto	l2112
  4961  0DBA  2DC3               u1750:
  4962  0DBB                     	line	23
  4963                           	
  4964                           l2108:	
  4965  0DBB                     	movf	(___lwdiv@divisor)^080h,w
  4966  0DBB  0820               	subwf	(___lwdiv@dividend)^080h,f
  4967  0DBC  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  4968  0DBD  0821               	skipc
  4969  0DBE  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  4970  0DBF  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  4971  0DC0  02A3               	line	24
  4972                           	
  4973                           l2110:	
  4974  0DC1                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  4975  0DC1  1425               	goto	l2112
  4976  0DC2  2DC3               	line	25
  4977                           	
  4978                           l769:	
  4979  0DC3                     	line	26
  4980                           	
  4981                           l2112:	
  4982  0DC3                     	movlw	01h
  4983  0DC3  3001               	
  4984                           u1765:
  4985  0DC4                     	clrc
  4986  0DC4  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  4987  0DC5  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  4988  0DC6  0CA0               	addlw	-1
  4989  0DC7  3EFF               	skipz
  4990  0DC8  1D03               	goto	u1765
  4991  0DC9  2DC4               	line	27
  4992                           	
  4993                           l2114:	
  4994  0DCA                     	movlw	01h
  4995  0DCA  3001               	subwf	(___lwdiv@counter)^080h,f
  4996  0DCB  02A7               	btfss	status,2
  4997  0DCC  1D03               	goto	u1771
  4998  0DCD  2DCF               	goto	u1770
  4999  0DCE  2DD0               u1771:
  5000  0DCF                     	goto	l2106
  5001  0DCF  2DAA               u1770:
  5002  0DD0                     	goto	l2116
  5003  0DD0  2DD2               	
  5004                           l770:	
  5005  0DD1                     	goto	l2116
  5006  0DD1  2DD2               	line	28
  5007                           	
  5008                           l764:	
  5009  0DD2                     	line	29
  5010                           	
  5011                           l2116:	
  5012  0DD2                     	movf	(___lwdiv@quotient+1)^080h,w
  5013  0DD2  0826               	movwf	(?___lwdiv+1)^080h
  5014  0DD3  00A1               	movf	(___lwdiv@quotient)^080h,w
  5015  0DD4  0825               	movwf	(?___lwdiv)^080h
  5016  0DD5  00A0               	goto	l771
  5017  0DD6  2DD7               	
  5018                           l2118:	
  5019  0DD7                     	line	30
  5020                           	
  5021                           l771:	
  5022  0DD7                     	return
  5023  0DD7  0008               	opt stack 0
  5024                           GLOBAL	__end_of___lwdiv
  5025                           	__end_of___lwdiv:
  5026  0DD8                     	signat	___lwdiv,8314
  5027                           	global	_display_write_start
  5028                           
  5029 ;; *************** function _display_write_start *****************
  5030 ;; Defined at:
  5031 ;;		line 246 in file "Display.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;		None
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, status,2, status,0
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5045 ;;      Params:         0       0       0       0       0
  5046 ;;      Locals:         0       0       0       0       0
  5047 ;;      Temps:          0       0       0       0       0
  5048 ;;      Totals:         0       0       0       0       0
  5049 ;;Total ram usage:        0 bytes
  5050 ;; Hardware stack levels used:    1
  5051 ;; Hardware stack levels required when called:    4
  5052 ;; This function calls:
  5053 ;;		Nothing
  5054 ;; This function is called by:
  5055 ;;		_update_input
  5056 ;;		_update_volume
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5060                           	file	"Display.c"
  5061                           	line	246
  5062                           global __ptext12
  5063                           __ptext12:	;psect for function _display_write_start
  5064  0ADD                     psect	text12
  5065                           	file	"Display.c"
  5066                           	line	246
  5067                           	global	__size_of_display_write_start
  5068                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  5069  000F                     	
  5070                           _display_write_start:	
  5071  0ADD                     ;incstack = 0
  5072                           	opt	stack 2
  5073                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  5074                           	line	248
  5075                           	
  5076                           l2576:	
  5077  0ADD                     ;Display.c: 248:     if (_selectedDisplay == 0) {
  5078                           	bsf	status, 5	;RP0=1, select bank1
  5079  0ADD  1683               	bcf	status, 6	;RP1=0, select bank1
  5080  0ADE  1303               	movf	((__selectedDisplay)^080h),w
  5081  0ADF  0851               	btfss	status,2
  5082  0AE0  1D03               	goto	u2691
  5083  0AE1  2AE3               	goto	u2690
  5084  0AE2  2AE4               u2691:
  5085  0AE3                     	goto	l190
  5086  0AE3  2AE8               u2690:
  5087  0AE4                     	line	249
  5088                           	
  5089                           l2578:	
  5090  0AE4                     ;Display.c: 249:         PORTCbits.RC4 = 0;
  5091                           	bcf	status, 5	;RP0=0, select bank0
  5092  0AE4  1283               	bcf	status, 6	;RP1=0, select bank0
  5093  0AE5  1303               	bcf	(7),4	;volatile
  5094  0AE6  1207               	line	250
  5095                           ;Display.c: 250:         return;
  5096                           	goto	l191
  5097  0AE7  2AEB               	line	251
  5098                           ;Display.c: 251:     }
  5099                           	
  5100                           l190:	
  5101  0AE8                     	line	253
  5102                           ;Display.c: 253:     PORTDbits.RD4 = 0;
  5103                           	bcf	status, 5	;RP0=0, select bank0
  5104  0AE8  1283               	bcf	status, 6	;RP1=0, select bank0
  5105  0AE9  1303               	bcf	(8),4	;volatile
  5106  0AEA  1208               	line	254
  5107                           	
  5108                           l191:	
  5109  0AEB                     	return
  5110  0AEB  0008               	opt stack 0
  5111                           GLOBAL	__end_of_display_write_start
  5112                           	__end_of_display_write_start:
  5113  0AEC                     	signat	_display_write_start,89
  5114                           	global	_display_write_end
  5115                           
  5116 ;; *************** function _display_write_end *****************
  5117 ;; Defined at:
  5118 ;;		line 257 in file "Display.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5132 ;;      Params:         0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0
  5135 ;;      Totals:         0       0       0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    4
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_update_input
  5143 ;;		_update_volume
  5144 ;; This function uses a non-reentrant model
  5145 ;;
  5146                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5147                           	line	257
  5148                           global __ptext13
  5149                           __ptext13:	;psect for function _display_write_end
  5150  0ACE                     psect	text13
  5151                           	file	"Display.c"
  5152                           	line	257
  5153                           	global	__size_of_display_write_end
  5154                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  5155  000F                     	
  5156                           _display_write_end:	
  5157  0ACE                     ;incstack = 0
  5158                           	opt	stack 2
  5159                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  5160                           	line	259
  5161                           	
  5162                           l2604:	
  5163  0ACE                     ;Display.c: 259:     if (_selectedDisplay == 0) {
  5164                           	bsf	status, 5	;RP0=1, select bank1
  5165  0ACE  1683               	bcf	status, 6	;RP1=0, select bank1
  5166  0ACF  1303               	movf	((__selectedDisplay)^080h),w
  5167  0AD0  0851               	btfss	status,2
  5168  0AD1  1D03               	goto	u2741
  5169  0AD2  2AD4               	goto	u2740
  5170  0AD3  2AD5               u2741:
  5171  0AD4                     	goto	l194
  5172  0AD4  2AD9               u2740:
  5173  0AD5                     	line	260
  5174                           	
  5175                           l2606:	
  5176  0AD5                     ;Display.c: 260:         PORTCbits.RC4 = 1;
  5177                           	bcf	status, 5	;RP0=0, select bank0
  5178  0AD5  1283               	bcf	status, 6	;RP1=0, select bank0
  5179  0AD6  1303               	bsf	(7),4	;volatile
  5180  0AD7  1607               	line	261
  5181                           ;Display.c: 261:         return;
  5182                           	goto	l195
  5183  0AD8  2ADC               	line	262
  5184                           ;Display.c: 262:     }
  5185                           	
  5186                           l194:	
  5187  0AD9                     	line	264
  5188                           ;Display.c: 264:     PORTDbits.RD4 = 1;
  5189                           	bcf	status, 5	;RP0=0, select bank0
  5190  0AD9  1283               	bcf	status, 6	;RP1=0, select bank0
  5191  0ADA  1303               	bsf	(8),4	;volatile
  5192  0ADB  1608               	line	265
  5193                           	
  5194                           l195:	
  5195  0ADC                     	return
  5196  0ADC  0008               	opt stack 0
  5197                           GLOBAL	__end_of_display_write_end
  5198                           	__end_of_display_write_end:
  5199  0ADD                     	signat	_display_write_end,89
  5200                           	global	_handle_remote
  5201                           
  5202 ;; *************** function _handle_remote *****************
  5203 ;; Defined at:
  5204 ;;		line 40 in file "Remote.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;  data            2    2[BANK1 ] unsigned int 
  5209 ;;  mask            2    0[BANK1 ] unsigned int 
  5210 ;;  found           1    4[BANK1 ] unsigned char 
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5220 ;;      Params:         0       0       0       0       0
  5221 ;;      Locals:         0       0       5       0       0
  5222 ;;      Temps:          0       0       0       0       0
  5223 ;;      Totals:         0       0       5       0       0
  5224 ;;Total ram usage:        5 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    4
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_main
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5234                           	file	"Remote.c"
  5235                           	line	40
  5236                           global __ptext14
  5237                           __ptext14:	;psect for function _handle_remote
  5238  0136                     psect	text14
  5239                           	file	"Remote.c"
  5240                           	line	40
  5241                           	global	__size_of_handle_remote
  5242                           	__size_of_handle_remote	equ	__end_of_handle_remote-_handle_remote
  5243  008E                     	
  5244                           _handle_remote:	
  5245  0136                     ;incstack = 0
  5246                           	opt	stack 3
  5247                           ; Regs used in _handle_remote: [wreg-fsr0h+status,2+status,0]
  5248                           	line	42
  5249                           	
  5250                           l2798:	
  5251  0136                     ;Remote.c: 42:     char found = 0;
  5252                           	bsf	status, 5	;RP0=1, select bank1
  5253  0136  1683               	bcf	status, 6	;RP1=0, select bank1
  5254  0137  1303               	clrf	(handle_remote@found)^080h
  5255  0138  01A4               	line	51
  5256                           	
  5257                           l2800:	
  5258  0139                     ;Remote.c: 51:     if (ir_input == 0xC01) {
  5259                           		decf	((_ir_input)^080h),w
  5260  0139  0345               	movlw	12
  5261  013A  300C               	skipnz
  5262  013B  1903               	xorwf	((_ir_input+1)^080h),w
  5263  013C  0646               iorwf	((_ir_input+2)^080h),w
  5264  013D  0447               iorwf	((_ir_input+3)^080h),w
  5265  013E  0448               	btfss	status,2
  5266  013F  1D03               	goto	u2881
  5267  0140  2942               	goto	u2880
  5268  0141  2943               u2881:
  5269  0142                     	goto	l376
  5270  0142  29C3               u2880:
  5271  0143                     	line	52
  5272                           	
  5273                           l2802:	
  5274  0143                     ;Remote.c: 52:                     _selectedInput = 0;
  5275                           	clrf	(__selectedInput)^080h
  5276  0143  01CF               	clrf	(__selectedInput+1)^080h
  5277  0144  01D0               	line	53
  5278                           	
  5279                           l2804:	
  5280  0145                     ;Remote.c: 53:             _inputUpdateRequired = 1;
  5281                           	clrf	(__inputUpdateRequired)^080h
  5282  0145  01D2               	incf	(__inputUpdateRequired)^080h,f
  5283  0146  0AD2               	line	55
  5284                           	
  5285                           l2806:	
  5286  0147                     ;Remote.c: 55:             ir_input = 0;
  5287                           	movlw	high highword(0)
  5288  0147  3000               	movwf	(_ir_input+3)^080h
  5289  0148  00C8               	movlw	low highword(0)
  5290  0149  3000               	movwf	(_ir_input+2)^080h
  5291  014A  00C7               	movlw	high(0)
  5292  014B  3000               	movwf	(_ir_input+1)^080h
  5293  014C  00C6               	movlw	low(0)
  5294  014D  3000               	movwf	(_ir_input)^080h
  5295  014E  00C5               
  5296                           	goto	l376
  5297  014F  29C3               	line	56
  5298                           ;Remote.c: 56:     }
  5299                           	
  5300                           l375:	
  5301  0150                     	goto	l376
  5302  0150  29C3               	line	58
  5303                           	
  5304                           l2808:	
  5305  0151                     ;Remote.c: 58:     return;
  5306                           	goto	l376
  5307  0151  29C3               	line	60
  5308                           	
  5309                           l2810:	
  5310  0152                     ;Remote.c: 60:     unsigned int mask = 0b0000000111111111;
  5311                           	movlw	0FFh
  5312  0152  30FF               	movwf	(handle_remote@mask)^080h
  5313  0153  00A0               	movlw	01h
  5314  0154  3001               	movwf	((handle_remote@mask)^080h)+1
  5315  0155  00A1               	line	62
  5316                           ;Remote.c: 62:     unsigned int data = ir_input & mask;
  5317                           	movf	(_ir_input)^080h,w
  5318  0156  0845               	andwf	(handle_remote@mask)^080h,w
  5319  0157  0520               	movwf	(handle_remote@data)^080h
  5320  0158  00A2               	movf	(_ir_input+1)^080h,w
  5321  0159  0846               	andwf	(handle_remote@mask+1)^080h,w
  5322  015A  0521               	movwf	1+(handle_remote@data)^080h
  5323  015B  00A3               	line	65
  5324                           ;Remote.c: 65:     switch (data) {
  5325                           	goto	l2846
  5326  015C  2992               	line	66
  5327                           ;Remote.c: 66:         case 72:
  5328                           	
  5329                           l378:	
  5330  015D                     	line	67
  5331                           	
  5332                           l2812:	
  5333  015D                     ;Remote.c: 67:             _selectedInput = 0;
  5334                           	clrf	(__selectedInput)^080h
  5335  015D  01CF               	clrf	(__selectedInput+1)^080h
  5336  015E  01D0               	line	68
  5337                           	
  5338                           l2814:	
  5339  015F                     ;Remote.c: 68:             _inputUpdateRequired = 1;
  5340                           	clrf	(__inputUpdateRequired)^080h
  5341  015F  01D2               	incf	(__inputUpdateRequired)^080h,f
  5342  0160  0AD2               	line	69
  5343                           	
  5344                           l2816:	
  5345  0161                     ;Remote.c: 69:             found = 1;
  5346                           	clrf	(handle_remote@found)^080h
  5347  0161  01A4               	incf	(handle_remote@found)^080h,f
  5348  0162  0AA4               	line	70
  5349                           ;Remote.c: 70:             break;
  5350                           	goto	l2848
  5351  0163  29B0               	line	71
  5352                           ;Remote.c: 71:         case 264:
  5353                           	
  5354                           l380:	
  5355  0164                     	line	72
  5356                           	
  5357                           l2818:	
  5358  0164                     ;Remote.c: 72:             _selectedInput = 1;
  5359                           	movlw	01h
  5360  0164  3001               	movwf	(__selectedInput)^080h
  5361  0165  00CF               	movlw	0
  5362  0166  3000               	movwf	((__selectedInput)^080h)+1
  5363  0167  00D0               	line	73
  5364                           	
  5365                           l2820:	
  5366  0168                     ;Remote.c: 73:             _inputUpdateRequired = 1;
  5367                           	clrf	(__inputUpdateRequired)^080h
  5368  0168  01D2               	incf	(__inputUpdateRequired)^080h,f
  5369  0169  0AD2               	line	74
  5370                           	
  5371                           l2822:	
  5372  016A                     ;Remote.c: 74:             found = 1;
  5373                           	clrf	(handle_remote@found)^080h
  5374  016A  01A4               	incf	(handle_remote@found)^080h,f
  5375  016B  0AA4               	line	75
  5376                           ;Remote.c: 75:             break;
  5377                           	goto	l2848
  5378  016C  29B0               	line	76
  5379                           ;Remote.c: 76:         case 160:
  5380                           	
  5381                           l381:	
  5382  016D                     	line	77
  5383                           	
  5384                           l2824:	
  5385  016D                     ;Remote.c: 77:             _selectedInput = 2;
  5386                           	movlw	02h
  5387  016D  3002               	movwf	(__selectedInput)^080h
  5388  016E  00CF               	movlw	0
  5389  016F  3000               	movwf	((__selectedInput)^080h)+1
  5390  0170  00D0               	line	78
  5391                           	
  5392                           l2826:	
  5393  0171                     ;Remote.c: 78:             _inputUpdateRequired = 1;
  5394                           	clrf	(__inputUpdateRequired)^080h
  5395  0171  01D2               	incf	(__inputUpdateRequired)^080h,f
  5396  0172  0AD2               	line	79
  5397                           	
  5398                           l2828:	
  5399  0173                     ;Remote.c: 79:             found = 1;
  5400                           	clrf	(handle_remote@found)^080h
  5401  0173  01A4               	incf	(handle_remote@found)^080h,f
  5402  0174  0AA4               	line	80
  5403                           ;Remote.c: 80:             break;
  5404                           	goto	l2848
  5405  0175  29B0               	line	81
  5406                           ;Remote.c: 81:         case 136:
  5407                           	
  5408                           l382:	
  5409  0176                     	line	82
  5410                           	
  5411                           l2830:	
  5412  0176                     ;Remote.c: 82:             _selectedInput = 3;
  5413                           	movlw	03h
  5414  0176  3003               	movwf	(__selectedInput)^080h
  5415  0177  00CF               	movlw	0
  5416  0178  3000               	movwf	((__selectedInput)^080h)+1
  5417  0179  00D0               	line	83
  5418                           	
  5419                           l2832:	
  5420  017A                     ;Remote.c: 83:             _inputUpdateRequired = 1;
  5421                           	clrf	(__inputUpdateRequired)^080h
  5422  017A  01D2               	incf	(__inputUpdateRequired)^080h,f
  5423  017B  0AD2               	line	84
  5424                           	
  5425                           l2834:	
  5426  017C                     ;Remote.c: 84:             found = 1;
  5427                           	clrf	(handle_remote@found)^080h
  5428  017C  01A4               	incf	(handle_remote@found)^080h,f
  5429  017D  0AA4               	line	85
  5430                           ;Remote.c: 85:             break;
  5431                           	goto	l2848
  5432  017E  29B0               	line	86
  5433                           ;Remote.c: 86:         case 288:
  5434                           	
  5435                           l383:	
  5436  017F                     	line	87
  5437                           	
  5438                           l2836:	
  5439  017F                     ;Remote.c: 87:             volume++;
  5440                           	movlw	01h
  5441  017F  3001               	addwf	(_volume)^080h,f
  5442  0180  07CD               	skipnc
  5443  0181  1803               	incf	(_volume+1)^080h,f
  5444  0182  0ACE               	movlw	0
  5445  0183  3000               	addwf	(_volume+1)^080h,f
  5446  0184  07CE               	line	88
  5447                           	
  5448                           l2838:	
  5449  0185                     ;Remote.c: 88:             found = 1;
  5450                           	clrf	(handle_remote@found)^080h
  5451  0185  01A4               	incf	(handle_remote@found)^080h,f
  5452  0186  0AA4               	line	89
  5453                           ;Remote.c: 89:             break;
  5454                           	goto	l2848
  5455  0187  29B0               	line	90
  5456                           ;Remote.c: 90:         case 272:
  5457                           	
  5458                           l384:	
  5459  0188                     	line	91
  5460                           	
  5461                           l2840:	
  5462  0188                     ;Remote.c: 91:             volume--;
  5463                           	movlw	0FFh
  5464  0188  30FF               	addwf	(_volume)^080h,f
  5465  0189  07CD               	skipnc
  5466  018A  1803               	incf	(_volume+1)^080h,f
  5467  018B  0ACE               	movlw	0FFh
  5468  018C  30FF               	addwf	(_volume+1)^080h,f
  5469  018D  07CE               	line	92
  5470                           	
  5471                           l2842:	
  5472  018E                     ;Remote.c: 92:             found = 1;
  5473                           	clrf	(handle_remote@found)^080h
  5474  018E  01A4               	incf	(handle_remote@found)^080h,f
  5475  018F  0AA4               	line	93
  5476                           ;Remote.c: 93:             break;
  5477                           	goto	l2848
  5478  0190  29B0               	line	94
  5479                           	
  5480                           l2844:	
  5481  0191                     ;Remote.c: 94:     }
  5482                           	goto	l2848
  5483  0191  29B0               	
  5484                           l377:	
  5485  0192                     	
  5486                           l2846:	
  5487  0192                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  5488                           ; Switch size 1, requested type "space"
  5489                           ; Number of cases is 2, Range of values is 0 to 1
  5490                           ; switch strategies available:
  5491                           ; Name         Instructions Cycles
  5492                           ; simple_byte            7     4 (average)
  5493                           ; direct_byte           14     8 (fixed)
  5494                           ; jumptable            260     6 (fixed)
  5495                           ;	Chosen strategy is simple_byte
  5496                           
  5497                           	movf (handle_remote@data+1)^080h,w
  5498  0192  0823               	opt asmopt_push
  5499                           	opt asmopt_off
  5500                           	xorlw	0^0	; case 0
  5501  0193  3A00               	skipnz
  5502  0194  1903               	goto	l3076
  5503  0195  299A               	xorlw	1^0	; case 1
  5504  0196  3A01               	skipnz
  5505  0197  1903               	goto	l3078
  5506  0198  29A5               	goto	l2848
  5507  0199  29B0               	opt asmopt_pop
  5508                           	
  5509                           l3076:	
  5510  019A                     ; Switch size 1, requested type "space"
  5511                           ; Number of cases is 3, Range of values is 72 to 160
  5512                           ; switch strategies available:
  5513                           ; Name         Instructions Cycles
  5514                           ; simple_byte           10     6 (average)
  5515                           ; jumptable            263     9 (fixed)
  5516                           ;	Chosen strategy is simple_byte
  5517                           
  5518                           	movf (handle_remote@data)^080h,w
  5519  019A  0822               	opt asmopt_push
  5520                           	opt asmopt_off
  5521                           	xorlw	72^0	; case 72
  5522  019B  3A48               	skipnz
  5523  019C  1903               	goto	l2812
  5524  019D  295D               	xorlw	136^72	; case 136
  5525  019E  3AC0               	skipnz
  5526  019F  1903               	goto	l2830
  5527  01A0  2976               	xorlw	160^136	; case 160
  5528  01A1  3A28               	skipnz
  5529  01A2  1903               	goto	l2824
  5530  01A3  296D               	goto	l2848
  5531  01A4  29B0               	opt asmopt_pop
  5532                           	
  5533                           l3078:	
  5534  01A5                     ; Switch size 1, requested type "space"
  5535                           ; Number of cases is 3, Range of values is 8 to 32
  5536                           ; switch strategies available:
  5537                           ; Name         Instructions Cycles
  5538                           ; simple_byte           10     6 (average)
  5539                           ; direct_byte           86    11 (fixed)
  5540                           ; jumptable            263     9 (fixed)
  5541                           ;	Chosen strategy is simple_byte
  5542                           
  5543                           	movf (handle_remote@data)^080h,w
  5544  01A5  0822               	opt asmopt_push
  5545                           	opt asmopt_off
  5546                           	xorlw	8^0	; case 8
  5547  01A6  3A08               	skipnz
  5548  01A7  1903               	goto	l2818
  5549  01A8  2964               	xorlw	16^8	; case 16
  5550  01A9  3A18               	skipnz
  5551  01AA  1903               	goto	l2840
  5552  01AB  2988               	xorlw	32^16	; case 32
  5553  01AC  3A30               	skipnz
  5554  01AD  1903               	goto	l2836
  5555  01AE  297F               	goto	l2848
  5556  01AF  29B0               	opt asmopt_pop
  5557                           
  5558                           	
  5559                           l379:	
  5560  01B0                     	line	95
  5561                           	
  5562                           l2848:	
  5563  01B0                     ;Remote.c: 95:     if (found) {
  5564                           	movf	((handle_remote@found)^080h),w
  5565  01B0  0824               	btfsc	status,2
  5566  01B1  1903               	goto	u2891
  5567  01B2  29B4               	goto	u2890
  5568  01B3  29B5               u2891:
  5569  01B4                     	goto	l376
  5570  01B4  29C3               u2890:
  5571  01B5                     	line	96
  5572                           	
  5573                           l2850:	
  5574  01B5                     ;Remote.c: 96:         T2CONbits.TMR2ON = 0;
  5575                           	bcf	status, 5	;RP0=0, select bank0
  5576  01B5  1283               	bcf	status, 6	;RP1=0, select bank0
  5577  01B6  1303               	bcf	(18),2	;volatile
  5578  01B7  1112               	line	98
  5579                           	
  5580                           l2852:	
  5581  01B8                     ;Remote.c: 98:         ir_input = 0;
  5582                           	movlw	high highword(0)
  5583  01B8  3000               	bsf	status, 5	;RP0=1, select bank1
  5584  01B9  1683               	bcf	status, 6	;RP1=0, select bank1
  5585  01BA  1303               	movwf	(_ir_input+3)^080h
  5586  01BB  00C8               	movlw	low highword(0)
  5587  01BC  3000               	movwf	(_ir_input+2)^080h
  5588  01BD  00C7               	movlw	high(0)
  5589  01BE  3000               	movwf	(_ir_input+1)^080h
  5590  01BF  00C6               	movlw	low(0)
  5591  01C0  3000               	movwf	(_ir_input)^080h
  5592  01C1  00C5               
  5593                           	goto	l376
  5594  01C2  29C3               	line	99
  5595                           ;Remote.c: 99:     }
  5596                           	
  5597                           l385:	
  5598  01C3                     	line	102
  5599                           	
  5600                           l376:	
  5601  01C3                     	return
  5602  01C3  0008               	opt stack 0
  5603                           GLOBAL	__end_of_handle_remote
  5604                           	__end_of_handle_remote:
  5605  01C4                     	signat	_handle_remote,89
  5606                           	global	_config
  5607                           
  5608 ;; *************** function _config *****************
  5609 ;; Defined at:
  5610 ;;		line 3 in file "Config.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;		None
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;		None
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  1    wreg      void 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0, pclath, cstack
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5624 ;;      Params:         0       0       0       0       0
  5625 ;;      Locals:         0       0       0       0       0
  5626 ;;      Temps:          0       0       3       0       0
  5627 ;;      Totals:         0       0       3       0       0
  5628 ;;Total ram usage:        3 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; Hardware stack levels required when called:    6
  5631 ;; This function calls:
  5632 ;;		_display_init
  5633 ;;		_init_adc
  5634 ;;		_init_remote
  5635 ;; This function is called by:
  5636 ;;		_main
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5640                           	file	"Config.c"
  5641                           	line	3
  5642                           global __ptext15
  5643                           __ptext15:	;psect for function _config
  5644  0F96                     psect	text15
  5645                           	file	"Config.c"
  5646                           	line	3
  5647                           	global	__size_of_config
  5648                           	__size_of_config	equ	__end_of_config-_config
  5649  006A                     	
  5650                           _config:	
  5651  0F96                     ;incstack = 0
  5652                           	opt	stack 1
  5653                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5654                           	line	5
  5655                           	
  5656                           l2670:	
  5657  0F96                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  5658                           	bsf	status, 5	;RP0=1, select bank1
  5659  0F96  1683               	bcf	status, 6	;RP1=0, select bank1
  5660  0F97  1303               	movf	(143)^080h,w	;volatile
  5661  0F98  080F               	andlw	not (((1<<3)-1)<<4)
  5662  0F99  398F               	iorlw	(06h & ((1<<3)-1))<<4
  5663  0F9A  3860               	movwf	(143)^080h	;volatile
  5664  0F9B  008F               	line	6
  5665                           	
  5666                           l2672:	
  5667  0F9C                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  5668                           	bcf	(143)^080h,3	;volatile
  5669  0F9C  118F               	line	13
  5670                           	
  5671                           l2674:	
  5672  0F9D                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  5673                           	bcf	(133)^080h,0	;volatile
  5674  0F9D  1005               	line	14
  5675                           	
  5676                           l2676:	
  5677  0F9E                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  5678                           	bcf	(133)^080h,1	;volatile
  5679  0F9E  1085               	line	15
  5680                           	
  5681                           l2678:	
  5682  0F9F                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  5683                           	bcf	(133)^080h,2	;volatile
  5684  0F9F  1105               	line	16
  5685                           	
  5686                           l2680:	
  5687  0FA0                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  5688                           	bcf	(133)^080h,3	;volatile
  5689  0FA0  1185               	line	18
  5690                           	
  5691                           l2682:	
  5692  0FA1                     ;Config.c: 18:     PORTA = 0x0F;
  5693                           	movlw	low(0Fh)
  5694  0FA1  300F               	bcf	status, 5	;RP0=0, select bank0
  5695  0FA2  1283               	bcf	status, 6	;RP1=0, select bank0
  5696  0FA3  1303               	movwf	(5)	;volatile
  5697  0FA4  0085               	line	25
  5698                           	
  5699                           l2684:	
  5700  0FA5                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  5701                           	bsf	status, 5	;RP0=1, select bank1
  5702  0FA5  1683               	bcf	status, 6	;RP1=0, select bank1
  5703  0FA6  1303               	bsf	(134)^080h,4	;volatile
  5704  0FA7  1606               	line	26
  5705                           	
  5706                           l2686:	
  5707  0FA8                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  5708                           	bsf	(134)^080h,5	;volatile
  5709  0FA8  1686               	line	28
  5710                           	
  5711                           l2688:	
  5712  0FA9                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  5713                           	bsf	status, 5	;RP0=1, select bank3
  5714  0FA9  1683               	bsf	status, 6	;RP1=1, select bank3
  5715  0FAA  1703               	bcf	(393)^0180h,3	;volatile
  5716  0FAB  1189               	line	29
  5717                           	
  5718                           l2690:	
  5719  0FAC                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  5720                           	bcf	(393)^0180h,5	;volatile
  5721  0FAC  1289               	line	35
  5722                           	
  5723                           l2692:	
  5724  0FAD                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  5725                           	bsf	status, 5	;RP0=1, select bank1
  5726  0FAD  1683               	bcf	status, 6	;RP1=0, select bank1
  5727  0FAE  1303               	bsf	(137)^080h,2	;volatile
  5728  0FAF  1509               	line	36
  5729                           	
  5730                           l2694:	
  5731  0FB0                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  5732                           	bsf	status, 5	;RP0=1, select bank3
  5733  0FB0  1683               	bsf	status, 6	;RP1=1, select bank3
  5734  0FB1  1703               	bsf	(392)^0180h,7	;volatile
  5735  0FB2  1788               	line	41
  5736                           	
  5737                           l2696:	
  5738  0FB3                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  5739                           	bsf	status, 5	;RP0=1, select bank1
  5740  0FB3  1683               	bcf	status, 6	;RP1=0, select bank1
  5741  0FB4  1303               	bsf	(134)^080h,0	;volatile
  5742  0FB5  1406               	line	42
  5743                           	
  5744                           l2698:	
  5745  0FB6                     ;Config.c: 42:     ANSELHbits.ANS12 = 0;
  5746                           	bsf	status, 5	;RP0=1, select bank3
  5747  0FB6  1683               	bsf	status, 6	;RP1=1, select bank3
  5748  0FB7  1703               	bcf	(393)^0180h,4	;volatile
  5749  0FB8  1209               	line	48
  5750                           	
  5751                           l2700:	
  5752  0FB9                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  5753                           	bsf	status, 5	;RP0=1, select bank1
  5754  0FB9  1683               	bcf	status, 6	;RP1=0, select bank1
  5755  0FBA  1303               	bcf	(135)^080h,0	;volatile
  5756  0FBB  1007               	line	49
  5757                           	
  5758                           l2702:	
  5759  0FBC                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  5760                           	bcf	(135)^080h,1	;volatile
  5761  0FBC  1087               	line	51
  5762                           	
  5763                           l2704:	
  5764  0FBD                     ;Config.c: 51:     PORTC = 0x00;
  5765                           	bcf	status, 5	;RP0=0, select bank0
  5766  0FBD  1283               	bcf	status, 6	;RP1=0, select bank0
  5767  0FBE  1303               	clrf	(7)	;volatile
  5768  0FBF  0187               	line	57
  5769                           	
  5770                           l2706:	
  5771  0FC0                     ;Config.c: 57:     display_init();
  5772                           	fcall	_display_init
  5773  0FC0  120A  158A  25D8  120A  158A  	line	60
  5774                           	
  5775                           l2708:	
  5776  0FC5                     ;Config.c: 60:     init_adc();
  5777                           	fcall	_init_adc
  5778  0FC5  120A  158A  230D  120A  158A  	line	62
  5779                           	
  5780                           l2710:	
  5781  0FCA                     ;Config.c: 62:     init_remote();
  5782                           	fcall	_init_remote
  5783  0FCA  120A  158A  22FC  120A  158A  	line	70
  5784                           	
  5785                           l2712:	
  5786  0FCF                     ;Config.c: 70:     IOCBbits.IOCB0 = 1;
  5787                           	bsf	status, 5	;RP0=1, select bank1
  5788  0FCF  1683               	bcf	status, 6	;RP1=0, select bank1
  5789  0FD0  1303               	bsf	(150)^080h,0	;volatile
  5790  0FD1  1416               	line	71
  5791                           	
  5792                           l2714:	
  5793  0FD2                     ;Config.c: 71:     IOCBbits.IOCB4 = 1;
  5794                           	bsf	(150)^080h,4	;volatile
  5795  0FD2  1616               	line	72
  5796                           	
  5797                           l2716:	
  5798  0FD3                     ;Config.c: 72:     IOCBbits.IOCB5 = 1;
  5799                           	bsf	(150)^080h,5	;volatile
  5800  0FD3  1696               	line	74
  5801                           	
  5802                           l2718:	
  5803  0FD4                     ;Config.c: 74:     INTCONbits.PEIE = 1;
  5804                           	bsf	(11),6	;volatile
  5805  0FD4  170B               	line	75
  5806                           	
  5807                           l2720:	
  5808  0FD5                     ;Config.c: 75:     INTCONbits.RBIE = 1;
  5809                           	bsf	(11),3	;volatile
  5810  0FD5  158B               	line	77
  5811                           	
  5812                           l2722:	
  5813  0FD6                     ;Config.c: 77:     INTCONbits.GIE = 1;
  5814                           	bsf	(11),7	;volatile
  5815  0FD6  178B               	line	86
  5816                           	
  5817                           l2724:	
  5818  0FD7                     ;Config.c: 86:     _inputUpdateRequired = 1;
  5819                           	clrf	(__inputUpdateRequired)^080h
  5820  0FD7  01D2               	incf	(__inputUpdateRequired)^080h,f
  5821  0FD8  0AD2               	line	87
  5822                           	
  5823                           l2726:	
  5824  0FD9                     ;Config.c: 87:     _selectedInput = 0;
  5825                           	clrf	(__selectedInput)^080h
  5826  0FD9  01CF               	clrf	(__selectedInput+1)^080h
  5827  0FDA  01D0               	line	88
  5828                           	
  5829                           l2728:	
  5830  0FDB                     ;Config.c: 88:     _lastA = PORTBbits.RB4;
  5831                           	bcf	status, 5	;RP0=0, select bank0
  5832  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  5833  0FDC  1303               	swapf	(6),w	;volatile
  5834  0FDD  0E06               	andlw	(1<<1)-1
  5835  0FDE  3901               	bsf	status, 5	;RP0=1, select bank1
  5836  0FDF  1683               	bcf	status, 6	;RP1=0, select bank1
  5837  0FE0  1303               	movwf	(??_config+0)^080h+0
  5838  0FE1  00A1               	clrf	(??_config+0)^080h+0+1
  5839  0FE2  01A2               	movf	0+(??_config+0)^080h+0,w
  5840  0FE3  0821               	bcf	status, 5	;RP0=0, select bank0
  5841  0FE4  1283               	bcf	status, 6	;RP1=0, select bank0
  5842  0FE5  1303               	movwf	(__lastA)
  5843  0FE6  00DE               	bsf	status, 5	;RP0=1, select bank1
  5844  0FE7  1683               	bcf	status, 6	;RP1=0, select bank1
  5845  0FE8  1303               	movf	1+(??_config+0)^080h+0,w
  5846  0FE9  0822               	bcf	status, 5	;RP0=0, select bank0
  5847  0FEA  1283               	bcf	status, 6	;RP1=0, select bank0
  5848  0FEB  1303               	movwf	(__lastA+1)
  5849  0FEC  00DF               	line	89
  5850                           	
  5851                           l2730:	
  5852  0FED                     ;Config.c: 89:     _lastB = PORTBbits.RB5;
  5853                           	swapf	(6),w	;volatile
  5854  0FED  0E06               	bsf	status, 5	;RP0=1, select bank1
  5855  0FEE  1683               	bcf	status, 6	;RP1=0, select bank1
  5856  0FEF  1303               	movwf	(??_config+0)^080h+0
  5857  0FF0  00A1               	rrf	(??_config+0)^080h+0,w
  5858  0FF1  0C21               	andlw	(1<<1)-1
  5859  0FF2  3901               	movwf	(??_config+1)^080h+0
  5860  0FF3  00A2               	clrf	(??_config+1)^080h+0+1
  5861  0FF4  01A3               	movf	0+(??_config+1)^080h+0,w
  5862  0FF5  0822               	bcf	status, 5	;RP0=0, select bank0
  5863  0FF6  1283               	bcf	status, 6	;RP1=0, select bank0
  5864  0FF7  1303               	movwf	(__lastB)
  5865  0FF8  00DC               	bsf	status, 5	;RP0=1, select bank1
  5866  0FF9  1683               	bcf	status, 6	;RP1=0, select bank1
  5867  0FFA  1303               	movf	1+(??_config+1)^080h+0,w
  5868  0FFB  0823               	bcf	status, 5	;RP0=0, select bank0
  5869  0FFC  1283               	bcf	status, 6	;RP1=0, select bank0
  5870  0FFD  1303               	movwf	(__lastB+1)
  5871  0FFE  00DD               	line	90
  5872                           	
  5873                           l294:	
  5874  0FFF                     	return
  5875  0FFF  0008               	opt stack 0
  5876                           GLOBAL	__end_of_config
  5877                           	__end_of_config:
  5878  1000                     	signat	_config,89
  5879                           	global	_init_remote
  5880                           
  5881 ;; *************** function _init_remote *****************
  5882 ;; Defined at:
  5883 ;;		line 3 in file "Remote.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      void 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5897 ;;      Params:         0       0       0       0       0
  5898 ;;      Locals:         0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0
  5900 ;;      Totals:         0       0       0       0       0
  5901 ;;Total ram usage:        0 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    4
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_config
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5911                           	file	"Remote.c"
  5912                           	line	3
  5913                           global __ptext16
  5914                           __ptext16:	;psect for function _init_remote
  5915  0AFC                     psect	text16
  5916                           	file	"Remote.c"
  5917                           	line	3
  5918                           	global	__size_of_init_remote
  5919                           	__size_of_init_remote	equ	__end_of_init_remote-_init_remote
  5920  0011                     	
  5921                           _init_remote:	
  5922  0AFC                     ;incstack = 0
  5923                           	opt	stack 2
  5924                           ; Regs used in _init_remote: [wreg+status,2+status,0]
  5925                           	line	6
  5926                           	
  5927                           l2618:	
  5928  0AFC                     ;Remote.c: 6:     T2CONbits.TOUTPS = 0b0000;
  5929                           	movlw	((0 & ((1<<4)-1))<<3)|not (((1<<4)-1)<<3)
  5930  0AFC  3087               	bcf	status, 5	;RP0=0, select bank0
  5931  0AFD  1283               	bcf	status, 6	;RP1=0, select bank0
  5932  0AFE  1303               	andwf	(18),f	;volatile
  5933  0AFF  0592               	line	7
  5934                           ;Remote.c: 7:     T2CONbits.T2CKPS = 0b00;
  5935                           	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  5936  0B00  30FC               	andwf	(18),f	;volatile
  5937  0B01  0592               	line	9
  5938                           	
  5939                           l2620:	
  5940  0B02                     ;Remote.c: 9:     PR2 = 25;
  5941                           	movlw	low(019h)
  5942  0B02  3019               	bsf	status, 5	;RP0=1, select bank1
  5943  0B03  1683               	bcf	status, 6	;RP1=0, select bank1
  5944  0B04  1303               	movwf	(146)^080h	;volatile
  5945  0B05  0092               	line	12
  5946                           	
  5947                           l2622:	
  5948  0B06                     ;Remote.c: 12:     PIR1bits.TMR2IF = 0;
  5949                           	bcf	status, 5	;RP0=0, select bank0
  5950  0B06  1283               	bcf	status, 6	;RP1=0, select bank0
  5951  0B07  1303               	bcf	(12),1	;volatile
  5952  0B08  108C               	line	13
  5953                           	
  5954                           l2624:	
  5955  0B09                     ;Remote.c: 13:     PIE1bits.TMR2IE = 1;
  5956                           	bsf	status, 5	;RP0=1, select bank1
  5957  0B09  1683               	bcf	status, 6	;RP1=0, select bank1
  5958  0B0A  1303               	bsf	(140)^080h,1	;volatile
  5959  0B0B  148C               	line	16
  5960                           	
  5961                           l365:	
  5962  0B0C                     	return
  5963  0B0C  0008               	opt stack 0
  5964                           GLOBAL	__end_of_init_remote
  5965                           	__end_of_init_remote:
  5966  0B0D                     	signat	_init_remote,89
  5967                           	global	_init_adc
  5968                           
  5969 ;; *************** function _init_adc *****************
  5970 ;; Defined at:
  5971 ;;		line 5 in file "Volume.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0
  5988 ;;      Totals:         0       0       0       0       0
  5989 ;;Total ram usage:        0 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    4
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_config
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5999                           	file	"Volume.c"
  6000                           	line	5
  6001                           global __ptext17
  6002                           __ptext17:	;psect for function _init_adc
  6003  0B0D                     psect	text17
  6004                           	file	"Volume.c"
  6005                           	line	5
  6006                           	global	__size_of_init_adc
  6007                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  6008  0017                     	
  6009                           _init_adc:	
  6010  0B0D                     ;incstack = 0
  6011                           	opt	stack 2
  6012                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  6013                           	line	7
  6014                           	
  6015                           l2608:	
  6016  0B0D                     ;Volume.c: 7:     ADCON0bits.CHS = 0b0111;
  6017                           	bcf	status, 5	;RP0=0, select bank0
  6018  0B0D  1283               	bcf	status, 6	;RP1=0, select bank0
  6019  0B0E  1303               	movf	(31),w	;volatile
  6020  0B0F  081F               	andlw	not (((1<<4)-1)<<2)
  6021  0B10  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  6022  0B11  381C               	movwf	(31)	;volatile
  6023  0B12  009F               	line	8
  6024                           ;Volume.c: 8:     ADCON0bits.ADCS = 0b001;
  6025                           	movf	(31),w	;volatile
  6026  0B13  081F               	andlw	not (((1<<2)-1)<<6)
  6027  0B14  393F               	iorlw	(01h & ((1<<2)-1))<<6
  6028  0B15  3840               	movwf	(31)	;volatile
  6029  0B16  009F               	line	9
  6030                           	
  6031                           l2610:	
  6032  0B17                     ;Volume.c: 9:     ADCON1bits.ADFM = 1;
  6033                           	bsf	status, 5	;RP0=1, select bank1
  6034  0B17  1683               	bcf	status, 6	;RP1=0, select bank1
  6035  0B18  1303               	bsf	(159)^080h,7	;volatile
  6036  0B19  179F               	line	11
  6037                           	
  6038                           l2612:	
  6039  0B1A                     ;Volume.c: 11:     PIR1bits.ADIF = 0;
  6040                           	bcf	status, 5	;RP0=0, select bank0
  6041  0B1A  1283               	bcf	status, 6	;RP1=0, select bank0
  6042  0B1B  1303               	bcf	(12),6	;volatile
  6043  0B1C  130C               	line	12
  6044                           	
  6045                           l2614:	
  6046  0B1D                     ;Volume.c: 12:     PIE1bits.ADIE = 1;
  6047                           	bsf	status, 5	;RP0=1, select bank1
  6048  0B1D  1683               	bcf	status, 6	;RP1=0, select bank1
  6049  0B1E  1303               	bsf	(140)^080h,6	;volatile
  6050  0B1F  170C               	line	14
  6051                           	
  6052                           l2616:	
  6053  0B20                     ;Volume.c: 14:     ADCON0bits.ADON = 1;
  6054                           	bcf	status, 5	;RP0=0, select bank0
  6055  0B20  1283               	bcf	status, 6	;RP1=0, select bank0
  6056  0B21  1303               	bsf	(31),0	;volatile
  6057  0B22  141F               	line	15
  6058                           	
  6059                           l321:	
  6060  0B23                     	return
  6061  0B23  0008               	opt stack 0
  6062                           GLOBAL	__end_of_init_adc
  6063                           	__end_of_init_adc:
  6064  0B24                     	signat	_init_adc,89
  6065                           	global	_display_init
  6066                           
  6067 ;; *************** function _display_init *****************
  6068 ;; Defined at:
  6069 ;;		line 26 in file "Display.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, pclath, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6083 ;;      Params:         0       0       0       0       0
  6084 ;;      Locals:         0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0
  6086 ;;      Totals:         0       0       0       0       0
  6087 ;;Total ram usage:        0 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    5
  6090 ;; This function calls:
  6091 ;;		_spiWrite
  6092 ;; This function is called by:
  6093 ;;		_config
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6097                           	file	"Display.c"
  6098                           	line	26
  6099                           global __ptext18
  6100                           __ptext18:	;psect for function _display_init
  6101  0DD8                     psect	text18
  6102                           	file	"Display.c"
  6103                           	line	26
  6104                           	global	__size_of_display_init
  6105                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  6106  004E                     	
  6107                           _display_init:	
  6108  0DD8                     ;incstack = 0
  6109                           	opt	stack 1
  6110                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  6111                           	line	30
  6112                           	
  6113                           l2512:	
  6114  0DD8                     ;Display.c: 30:     SSPCON = 0b00100000;
  6115                           	movlw	low(020h)
  6116  0DD8  3020               	bcf	status, 5	;RP0=0, select bank0
  6117  0DD9  1283               	bcf	status, 6	;RP1=0, select bank0
  6118  0DDA  1303               	movwf	(20)	;volatile
  6119  0DDB  0094               	line	31
  6120                           ;Display.c: 31:     SSPSTAT = 0b01000000;
  6121                           	movlw	low(040h)
  6122  0DDC  3040               	bsf	status, 5	;RP0=1, select bank1
  6123  0DDD  1683               	bcf	status, 6	;RP1=0, select bank1
  6124  0DDE  1303               	movwf	(148)^080h	;volatile
  6125  0DDF  0094               	line	34
  6126                           	
  6127                           l2514:	
  6128  0DE0                     ;Display.c: 34:     TRISD = 0x00;
  6129                           	clrf	(136)^080h	;volatile
  6130  0DE0  0188               	line	35
  6131                           	
  6132                           l2516:	
  6133  0DE1                     ;Display.c: 35:     TRISC = 0x00;
  6134                           	clrf	(135)^080h	;volatile
  6135  0DE1  0187               	line	38
  6136                           	
  6137                           l2518:	
  6138  0DE2                     ;Display.c: 38:     PORTDbits.RD2 = 1;
  6139                           	bcf	status, 5	;RP0=0, select bank0
  6140  0DE2  1283               	bcf	status, 6	;RP1=0, select bank0
  6141  0DE3  1303               	bsf	(8),2	;volatile
  6142  0DE4  1508               	line	39
  6143                           	
  6144                           l2520:	
  6145  0DE5                     ;Display.c: 39:     PORTDbits.RD6 = 0;
  6146                           	bcf	(8),6	;volatile
  6147  0DE5  1308               	line	40
  6148                           	
  6149                           l2522:	
  6150  0DE6                     ;Display.c: 40:     PORTDbits.RD4 = 1;
  6151                           	bsf	(8),4	;volatile
  6152  0DE6  1608               	line	41
  6153                           	
  6154                           l2524:	
  6155  0DE7                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  6156                           	bcf	(7),3	;volatile
  6157  0DE7  1187               	line	44
  6158                           	
  6159                           l2526:	
  6160  0DE8                     ;Display.c: 44:     PORTDbits.RD7 = 1;
  6161                           	bsf	(8),7	;volatile
  6162  0DE8  1788               	line	45
  6163                           	
  6164                           l2528:	
  6165  0DE9                     ;Display.c: 45:     PORTDbits.RD4 = 0;
  6166                           	bcf	(8),4	;volatile
  6167  0DE9  1208               	line	46
  6168                           	
  6169                           l2530:	
  6170  0DEA                     ;Display.c: 46:     spiWrite(0b01001111);
  6171                           	movlw	low(04Fh)
  6172  0DEA  304F               	fcall	_spiWrite
  6173  0DEB  120A  158A  22EC  120A  158A  	line	47
  6174                           	
  6175                           l2532:	
  6176  0DF0                     ;Display.c: 47:     PORTDbits.RD4 = 1;
  6177                           	bcf	status, 5	;RP0=0, select bank0
  6178  0DF0  1283               	bcf	status, 6	;RP1=0, select bank0
  6179  0DF1  1303               	bsf	(8),4	;volatile
  6180  0DF2  1608               	line	50
  6181                           	
  6182                           l2534:	
  6183  0DF3                     ;Display.c: 50:     PORTDbits.RD7 = 1;
  6184                           	bsf	(8),7	;volatile
  6185  0DF3  1788               	line	51
  6186                           	
  6187                           l2536:	
  6188  0DF4                     ;Display.c: 51:     PORTDbits.RD4 = 0;
  6189                           	bcf	(8),4	;volatile
  6190  0DF4  1208               	line	52
  6191                           	
  6192                           l2538:	
  6193  0DF5                     ;Display.c: 52:     spiWrite(0b10000001);
  6194                           	movlw	low(081h)
  6195  0DF5  3081               	fcall	_spiWrite
  6196  0DF6  120A  158A  22EC  120A  158A  	line	53
  6197                           	
  6198                           l2540:	
  6199  0DFB                     ;Display.c: 53:     PORTDbits.RD4 = 1;
  6200                           	bcf	status, 5	;RP0=0, select bank0
  6201  0DFB  1283               	bcf	status, 6	;RP1=0, select bank0
  6202  0DFC  1303               	bsf	(8),4	;volatile
  6203  0DFD  1608               	line	57
  6204                           	
  6205                           l2542:	
  6206  0DFE                     ;Display.c: 57:     PORTDbits.RD7 = 0;
  6207                           	bcf	(8),7	;volatile
  6208  0DFE  1388               	line	61
  6209                           	
  6210                           l2544:	
  6211  0DFF                     ;Display.c: 61:     PORTCbits.RC2 = 1;
  6212                           	bsf	(7),2	;volatile
  6213  0DFF  1507               	line	62
  6214                           	
  6215                           l2546:	
  6216  0E00                     ;Display.c: 62:     PORTCbits.RC6 = 0;
  6217                           	bcf	(7),6	;volatile
  6218  0E00  1307               	line	63
  6219                           	
  6220                           l2548:	
  6221  0E01                     ;Display.c: 63:     PORTCbits.RC4 = 1;
  6222                           	bsf	(7),4	;volatile
  6223  0E01  1607               	line	64
  6224                           	
  6225                           l2550:	
  6226  0E02                     ;Display.c: 64:     PORTCbits.RC3 = 0;
  6227                           	bcf	(7),3	;volatile
  6228  0E02  1187               	line	66
  6229                           	
  6230                           l2552:	
  6231  0E03                     ;Display.c: 66:     PORTCbits.RC7 = 1;
  6232                           	bsf	(7),7	;volatile
  6233  0E03  1787               	line	67
  6234                           	
  6235                           l2554:	
  6236  0E04                     ;Display.c: 67:     PORTCbits.RC4 = 0;
  6237                           	bcf	(7),4	;volatile
  6238  0E04  1207               	line	68
  6239                           	
  6240                           l2556:	
  6241  0E05                     ;Display.c: 68:     spiWrite(0b01001111);
  6242                           	movlw	low(04Fh)
  6243  0E05  304F               	fcall	_spiWrite
  6244  0E06  120A  158A  22EC  120A  158A  	line	70
  6245                           	
  6246                           l2558:	
  6247  0E0B                     ;Display.c: 70:     PORTCbits.RC4 = 1;
  6248                           	bcf	status, 5	;RP0=0, select bank0
  6249  0E0B  1283               	bcf	status, 6	;RP1=0, select bank0
  6250  0E0C  1303               	bsf	(7),4	;volatile
  6251  0E0D  1607               	line	72
  6252                           	
  6253                           l2560:	
  6254  0E0E                     ;Display.c: 72:     PORTCbits.RC7 = 1;
  6255                           	bsf	(7),7	;volatile
  6256  0E0E  1787               	line	73
  6257                           	
  6258                           l2562:	
  6259  0E0F                     ;Display.c: 73:     PORTCbits.RC4 = 0;
  6260                           	bcf	(7),4	;volatile
  6261  0E0F  1207               	line	75
  6262                           	
  6263                           l2564:	
  6264  0E10                     ;Display.c: 75:     spiWrite(0b10000001);
  6265                           	movlw	low(081h)
  6266  0E10  3081               	fcall	_spiWrite
  6267  0E11  120A  158A  22EC  120A  158A  	line	76
  6268                           	
  6269                           l2566:	
  6270  0E16                     ;Display.c: 76:     PORTCbits.RC4 = 1;
  6271                           	bcf	status, 5	;RP0=0, select bank0
  6272  0E16  1283               	bcf	status, 6	;RP1=0, select bank0
  6273  0E17  1303               	bsf	(7),4	;volatile
  6274  0E18  1607               	line	79
  6275                           	
  6276                           l2568:	
  6277  0E19                     ;Display.c: 79:     PORTCbits.RC7 = 0;
  6278                           	bcf	(7),7	;volatile
  6279  0E19  1387               	line	82
  6280                           	
  6281                           l2570:	
  6282  0E1A                     ;Display.c: 82:     _selectedDisplay = 0;
  6283                           	bsf	status, 5	;RP0=1, select bank1
  6284  0E1A  1683               	bcf	status, 6	;RP1=0, select bank1
  6285  0E1B  1303               	clrf	(__selectedDisplay)^080h
  6286  0E1C  01D1               	line	83
  6287                           	
  6288                           l2572:	
  6289  0E1D                     ;Display.c: 83:     lastVolume = 99;
  6290                           	movlw	063h
  6291  0E1D  3063               	movwf	(_lastVolume)^080h
  6292  0E1E  00CB               	movlw	0
  6293  0E1F  3000               	movwf	((_lastVolume)^080h)+1
  6294  0E20  00CC               	line	84
  6295                           	
  6296                           l2574:	
  6297  0E21                     ;Display.c: 84:     lastInput = 99;
  6298                           	movlw	063h
  6299  0E21  3063               	movwf	(_lastInput)^080h
  6300  0E22  00C9               	movlw	0
  6301  0E23  3000               	movwf	((_lastInput)^080h)+1
  6302  0E24  00CA               	line	86
  6303                           	
  6304                           l129:	
  6305  0E25                     	return
  6306  0E25  0008               	opt stack 0
  6307                           GLOBAL	__end_of_display_init
  6308                           	__end_of_display_init:
  6309  0E26                     	signat	_display_init,89
  6310                           	global	_spiWrite
  6311                           
  6312 ;; *************** function _spiWrite *****************
  6313 ;; Defined at:
  6314 ;;		line 267 in file "Display.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  data            1    wreg     unsigned char 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  data            1    0[BANK1 ] unsigned char 
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6328 ;;      Params:         0       0       0       0       0
  6329 ;;      Locals:         0       0       1       0       0
  6330 ;;      Temps:          0       0       0       0       0
  6331 ;;      Totals:         0       0       1       0       0
  6332 ;;Total ram usage:        1 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    4
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_display_init
  6339 ;;		_write_space
  6340 ;;		_write_font
  6341 ;;		_white_space
  6342 ;;		_write_volume
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6346                           	line	267
  6347                           global __ptext19
  6348                           __ptext19:	;psect for function _spiWrite
  6349  0AEC                     psect	text19
  6350                           	file	"Display.c"
  6351                           	line	267
  6352                           	global	__size_of_spiWrite
  6353                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  6354  0010                     	
  6355                           _spiWrite:	
  6356  0AEC                     ;incstack = 0
  6357 ;; hardware stack exceeded
  6358                           	opt	stack 0
  6359                           ; Regs used in _spiWrite: [wreg]
  6360                           ;spiWrite@data stored from wreg
  6361                           	bsf	status, 5	;RP0=1, select bank1
  6362  0AEC  1683               	bcf	status, 6	;RP1=0, select bank1
  6363  0AED  1303               	movwf	(spiWrite@data)^080h
  6364  0AEE  00A0               	line	269
  6365                           	
  6366                           l2042:	
  6367  0AEF                     ;Display.c: 267: void spiWrite(char data);Display.c: 268: {;Display.c: 269:     SSPBUF =
                                  data;
  6368                           	movf	(spiWrite@data)^080h,w
  6369  0AEF  0820               	bcf	status, 5	;RP0=0, select bank0
  6370  0AF0  1283               	bcf	status, 6	;RP1=0, select bank0
  6371  0AF1  1303               	movwf	(19)	;volatile
  6372  0AF2  0093               	line	271
  6373                           ;Display.c: 271:     while(!SSPSTATbits.BF)
  6374                           	goto	l198
  6375  0AF3  2AF4               	
  6376                           l199:	
  6377  0AF4                     	line	274
  6378                           ;Display.c: 272:     {;Display.c: 274:     }
  6379                           	
  6380                           l198:	
  6381  0AF4                     	line	271
  6382                           ;Display.c: 271:     while(!SSPSTATbits.BF)
  6383                           	bsf	status, 5	;RP0=1, select bank1
  6384  0AF4  1683               	bcf	status, 6	;RP1=0, select bank1
  6385  0AF5  1303               	btfss	(148)^080h,0	;volatile
  6386  0AF6  1C14               	goto	u1581
  6387  0AF7  2AF9               	goto	u1580
  6388  0AF8  2AFA               u1581:
  6389  0AF9                     	goto	l198
  6390  0AF9  2AF4               u1580:
  6391  0AFA                     	goto	l201
  6392  0AFA  2AFB               	
  6393                           l200:	
  6394  0AFB                     	line	277
  6395                           	
  6396                           l201:	
  6397  0AFB                     	return
  6398  0AFB  0008               	opt stack 0
  6399                           GLOBAL	__end_of_spiWrite
  6400                           	__end_of_spiWrite:
  6401  0AFC                     	signat	_spiWrite,4217
  6402                           	global	_activateSelectedRelay
  6403                           
  6404 ;; *************** function _activateSelectedRelay *****************
  6405 ;; Defined at:
  6406 ;;		line 3 in file "Input.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;		None
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1    wreg      void 
  6413 ;; Registers used:
  6414 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6420 ;;      Params:         0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0
  6423 ;;      Totals:         0       0       0       0       0
  6424 ;;Total ram usage:        0 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:    4
  6427 ;; This function calls:
  6428 ;;		Nothing
  6429 ;; This function is called by:
  6430 ;;		_main
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6434                           	file	"Input.c"
  6435                           	line	3
  6436                           global __ptext20
  6437                           __ptext20:	;psect for function _activateSelectedRelay
  6438  0BED                     psect	text20
  6439                           	file	"Input.c"
  6440                           	line	3
  6441                           	global	__size_of_activateSelectedRelay
  6442                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  6443  003C                     	
  6444                           _activateSelectedRelay:	
  6445  0BED                     ;incstack = 0
  6446                           	opt	stack 3
  6447                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  6448                           	line	5
  6449                           	
  6450                           l2772:	
  6451  0BED                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  6452                           	bsf	status, 5	;RP0=1, select bank1
  6453  0BED  1683               	bcf	status, 6	;RP1=0, select bank1
  6454  0BEE  1303               	movf	((__inputUpdateRequired)^080h),w
  6455  0BEF  0852               	btfss	status,2
  6456  0BF0  1D03               	goto	u2871
  6457  0BF1  2BF3               	goto	u2870
  6458  0BF2  2BF4               u2871:
  6459  0BF3                     	goto	l2776
  6460  0BF3  2BF6               u2870:
  6461  0BF4                     	goto	l219
  6462  0BF4  2C28               	
  6463                           l2774:	
  6464  0BF5                     	goto	l219
  6465  0BF5  2C28               	
  6466                           l218:	
  6467  0BF6                     	line	7
  6468                           	
  6469                           l2776:	
  6470  0BF6                     ;Input.c: 7:     PORTA = 0x0F;
  6471                           	movlw	low(0Fh)
  6472  0BF6  300F               	bcf	status, 5	;RP0=0, select bank0
  6473  0BF7  1283               	bcf	status, 6	;RP1=0, select bank0
  6474  0BF8  1303               	movwf	(5)	;volatile
  6475  0BF9  0085               	line	9
  6476                           ;Input.c: 9:     switch (_selectedInput) {
  6477                           	goto	l2790
  6478  0BFA  2C10               	line	10
  6479                           ;Input.c: 10:         case 0:
  6480                           	
  6481                           l221:	
  6482  0BFB                     	line	11
  6483                           	
  6484                           l2778:	
  6485  0BFB                     ;Input.c: 11:             PORTA = ~0x01;
  6486                           	movlw	low(0FEh)
  6487  0BFB  30FE               	bcf	status, 5	;RP0=0, select bank0
  6488  0BFC  1283               	movwf	(5)	;volatile
  6489  0BFD  0085               	line	12
  6490                           ;Input.c: 12:             break;
  6491                           	goto	l2792
  6492  0BFE  2C25               	line	13
  6493                           ;Input.c: 13:         case 1:
  6494                           	
  6495                           l223:	
  6496  0BFF                     	line	14
  6497                           	
  6498                           l2780:	
  6499  0BFF                     ;Input.c: 14:             PORTA = ~0x02;
  6500                           	movlw	low(0FDh)
  6501  0BFF  30FD               	bcf	status, 5	;RP0=0, select bank0
  6502  0C00  1283               	movwf	(5)	;volatile
  6503  0C01  0085               	line	15
  6504                           ;Input.c: 15:             break;
  6505                           	goto	l2792
  6506  0C02  2C25               	line	16
  6507                           ;Input.c: 16:         case 2:
  6508                           	
  6509                           l224:	
  6510  0C03                     	line	17
  6511                           	
  6512                           l2782:	
  6513  0C03                     ;Input.c: 17:             PORTA = ~0x04;
  6514                           	movlw	low(0FBh)
  6515  0C03  30FB               	bcf	status, 5	;RP0=0, select bank0
  6516  0C04  1283               	movwf	(5)	;volatile
  6517  0C05  0085               	line	18
  6518                           ;Input.c: 18:             break;
  6519                           	goto	l2792
  6520  0C06  2C25               	line	19
  6521                           ;Input.c: 19:         case 3:
  6522                           	
  6523                           l225:	
  6524  0C07                     	line	20
  6525                           	
  6526                           l2784:	
  6527  0C07                     ;Input.c: 20:             PORTA = ~0x08;
  6528                           	movlw	low(0F7h)
  6529  0C07  30F7               	bcf	status, 5	;RP0=0, select bank0
  6530  0C08  1283               	movwf	(5)	;volatile
  6531  0C09  0085               	line	21
  6532                           ;Input.c: 21:             break;
  6533                           	goto	l2792
  6534  0C0A  2C25               	line	22
  6535                           ;Input.c: 22:         default:
  6536                           	
  6537                           l226:	
  6538  0C0B                     	line	23
  6539                           	
  6540                           l2786:	
  6541  0C0B                     ;Input.c: 23:             PORTA = ~0x01;
  6542                           	movlw	low(0FEh)
  6543  0C0B  30FE               	bcf	status, 5	;RP0=0, select bank0
  6544  0C0C  1283               	movwf	(5)	;volatile
  6545  0C0D  0085               	line	24
  6546                           ;Input.c: 24:             break;
  6547                           	goto	l2792
  6548  0C0E  2C25               	line	25
  6549                           	
  6550                           l2788:	
  6551  0C0F                     ;Input.c: 25:     }
  6552                           	goto	l2792
  6553  0C0F  2C25               	
  6554                           l220:	
  6555  0C10                     	
  6556                           l2790:	
  6557  0C10                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6558                           ; Switch size 1, requested type "space"
  6559                           ; Number of cases is 1, Range of values is 0 to 0
  6560                           ; switch strategies available:
  6561                           ; Name         Instructions Cycles
  6562                           ; simple_byte            4     3 (average)
  6563                           ; direct_byte           11     8 (fixed)
  6564                           ; jumptable            260     6 (fixed)
  6565                           ;	Chosen strategy is simple_byte
  6566                           
  6567                           	bsf	status, 5	;RP0=1, select bank1
  6568  0C10  1683               	bcf	status, 6	;RP1=0, select bank1
  6569  0C11  1303               	movf (__selectedInput+1)^080h,w
  6570  0C12  0850               	opt asmopt_push
  6571                           	opt asmopt_off
  6572                           	xorlw	0^0	; case 0
  6573  0C13  3A00               	skipnz
  6574  0C14  1903               	goto	l3080
  6575  0C15  2C17               	goto	l2786
  6576  0C16  2C0B               	opt asmopt_pop
  6577                           	
  6578                           l3080:	
  6579  0C17                     ; Switch size 1, requested type "space"
  6580                           ; Number of cases is 4, Range of values is 0 to 3
  6581                           ; switch strategies available:
  6582                           ; Name         Instructions Cycles
  6583                           ; simple_byte           13     7 (average)
  6584                           ; direct_byte           20     8 (fixed)
  6585                           ; jumptable            260     6 (fixed)
  6586                           ;	Chosen strategy is simple_byte
  6587                           
  6588                           	movf (__selectedInput)^080h,w
  6589  0C17  084F               	opt asmopt_push
  6590                           	opt asmopt_off
  6591                           	xorlw	0^0	; case 0
  6592  0C18  3A00               	skipnz
  6593  0C19  1903               	goto	l2778
  6594  0C1A  2BFB               	xorlw	1^0	; case 1
  6595  0C1B  3A01               	skipnz
  6596  0C1C  1903               	goto	l2780
  6597  0C1D  2BFF               	xorlw	2^1	; case 2
  6598  0C1E  3A03               	skipnz
  6599  0C1F  1903               	goto	l2782
  6600  0C20  2C03               	xorlw	3^2	; case 3
  6601  0C21  3A01               	skipnz
  6602  0C22  1903               	goto	l2784
  6603  0C23  2C07               	goto	l2786
  6604  0C24  2C0B               	opt asmopt_pop
  6605                           
  6606                           	
  6607                           l222:	
  6608  0C25                     	line	27
  6609                           	
  6610                           l2792:	
  6611  0C25                     ;Input.c: 27:     _inputUpdateRequired = 0;
  6612                           	bsf	status, 5	;RP0=1, select bank1
  6613  0C25  1683               	bcf	status, 6	;RP1=0, select bank1
  6614  0C26  1303               	clrf	(__inputUpdateRequired)^080h
  6615  0C27  01D2               	line	28
  6616                           	
  6617                           l219:	
  6618  0C28                     	return
  6619  0C28  0008               	opt stack 0
  6620                           GLOBAL	__end_of_activateSelectedRelay
  6621                           	__end_of_activateSelectedRelay:
  6622  0C29                     	signat	_activateSelectedRelay,89
  6623                           	global	_isr
  6624                           
  6625 ;; *************** function _isr *****************
  6626 ;; Defined at:
  6627 ;;		line 51 in file "main.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;		None
  6630 ;; Auto vars:     Size  Location     Type
  6631 ;;		None
  6632 ;; Return value:  Size  Location     Type
  6633 ;;                  1    wreg      void 
  6634 ;; Registers used:
  6635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6636 ;; Tracked objects:
  6637 ;;		On entry : 0/0
  6638 ;;		On exit  : 0/0
  6639 ;;		Unchanged: 0/0
  6640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6641 ;;      Params:         0       0       0       0       0
  6642 ;;      Locals:         0       0       0       0       0
  6643 ;;      Temps:          0       4       0       0       0
  6644 ;;      Totals:         0       4       0       0       0
  6645 ;;Total ram usage:        4 bytes
  6646 ;; Hardware stack levels used:    1
  6647 ;; Hardware stack levels required when called:    3
  6648 ;; This function calls:
  6649 ;;		_handle_potmeter
  6650 ;;		_handle_rotary
  6651 ;;		_poll_receiver
  6652 ;;		_start_receive
  6653 ;; This function is called by:
  6654 ;;		Interrupt level 1
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6658                           	file	"main.c"
  6659                           	line	51
  6660                           global __ptext21
  6661                           __ptext21:	;psect for function _isr
  6662  0C29                     psect	text21
  6663                           	file	"main.c"
  6664                           	line	51
  6665                           	global	__size_of_isr
  6666                           	__size_of_isr	equ	__end_of_isr-_isr
  6667  0042                     	
  6668                           _isr:	
  6669  0C29                     ;incstack = 0
  6670 ;; hardware stack exceeded
  6671                           	opt	stack 0
  6672                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6673                           psect	intentry,class=CODE,delta=2
  6674                           global __pintentry
  6675                           __pintentry:
  6676  0004                     global interrupt_function
  6677                           interrupt_function:
  6678  0004                     	global saved_w
  6679                           	saved_w	set	btemp+0
  6680  007E                     	movwf	saved_w
  6681  0004  00FE               	swapf	status,w
  6682  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  6683  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  6684  0007  1303               	movwf	(??_isr+0)
  6685  0008  00D8               	movf	fsr0,w
  6686  0009  0804               	movwf	(??_isr+1)
  6687  000A  00D9               	movf	pclath,w
  6688  000B  080A               	movwf	(??_isr+2)
  6689  000C  00DA               	movf	btemp+1,w
  6690  000D  087F               	movwf	(??_isr+3)
  6691  000E  00DB               	ljmp	_isr
  6692  000F  120A  158A  2C29   psect	text21
  6693                           	line	53
  6694                           	
  6695                           i1l2936:	
  6696  0C29                     ;main.c: 53:     if (INTCONbits.RBIF) {
  6697                           	btfss	(11),0	;volatile
  6698  0C29  1C0B               	goto	u305_21
  6699  0C2A  2C2C               	goto	u305_20
  6700  0C2B  2C2D               u305_21:
  6701  0C2C                     	goto	i1l2946
  6702  0C2C  2C40               u305_20:
  6703  0C2D                     	line	55
  6704                           	
  6705                           i1l2938:	
  6706  0C2D                     ;main.c: 55:         handle_rotary();
  6707                           	fcall	_handle_rotary
  6708  0C2D  120A  118A  20B3  120A  158A  	line	57
  6709                           	
  6710                           i1l2940:	
  6711  0C32                     ;main.c: 57:         if (PORTBbits.RB0 == 0) {
  6712                           	bcf	status, 5	;RP0=0, select bank0
  6713  0C32  1283               	bcf	status, 6	;RP1=0, select bank0
  6714  0C33  1303               	btfsc	(6),0	;volatile
  6715  0C34  1806               	goto	u306_21
  6716  0C35  2C37               	goto	u306_20
  6717  0C36  2C38               u306_21:
  6718  0C37                     	goto	i1l2944
  6719  0C37  2C3E               u306_20:
  6720  0C38                     	line	58
  6721                           	
  6722                           i1l2942:	
  6723  0C38                     ;main.c: 58:             start_receive();
  6724                           	fcall	_start_receive
  6725  0C38  120A  158A  22C5  120A  158A  	goto	i1l2944
  6726  0C3D  2C3E               	line	59
  6727                           ;main.c: 59:         }
  6728                           	
  6729                           i1l69:	
  6730  0C3E                     	line	61
  6731                           	
  6732                           i1l2944:	
  6733  0C3E                     ;main.c: 61:         INTCONbits.RBIF = 0;
  6734                           	bcf	(11),0	;volatile
  6735  0C3E  100B               	goto	i1l2946
  6736  0C3F  2C40               	line	62
  6737                           ;main.c: 62:     }
  6738                           	
  6739                           i1l68:	
  6740  0C40                     	line	64
  6741                           	
  6742                           i1l2946:	
  6743  0C40                     ;main.c: 64:     if (PIR1bits.ADIF) {
  6744                           	bcf	status, 5	;RP0=0, select bank0
  6745  0C40  1283               	bcf	status, 6	;RP1=0, select bank0
  6746  0C41  1303               	btfss	(12),6	;volatile
  6747  0C42  1F0C               	goto	u307_21
  6748  0C43  2C45               	goto	u307_20
  6749  0C44  2C46               u307_21:
  6750  0C45                     	goto	i1l2952
  6751  0C45  2C4F               u307_20:
  6752  0C46                     	line	66
  6753                           	
  6754                           i1l2948:	
  6755  0C46                     ;main.c: 66:         handle_potmeter();
  6756                           	fcall	_handle_potmeter
  6757  0C46  120A  118A  2041  120A  158A  	line	68
  6758                           	
  6759                           i1l2950:	
  6760  0C4B                     ;main.c: 68:         PIR1bits.ADIF = 0;
  6761                           	bcf	status, 5	;RP0=0, select bank0
  6762  0C4B  1283               	bcf	status, 6	;RP1=0, select bank0
  6763  0C4C  1303               	bcf	(12),6	;volatile
  6764  0C4D  130C               	goto	i1l2952
  6765  0C4E  2C4F               	line	69
  6766                           ;main.c: 69:     }
  6767                           	
  6768                           i1l70:	
  6769  0C4F                     	line	71
  6770                           	
  6771                           i1l2952:	
  6772  0C4F                     ;main.c: 71:     if (PIR1bits.TMR2IF) {
  6773                           	btfss	(12),1	;volatile
  6774  0C4F  1C8C               	goto	u308_21
  6775  0C50  2C52               	goto	u308_20
  6776  0C51  2C53               u308_21:
  6777  0C52                     	goto	i1l72
  6778  0C52  2C60               u308_20:
  6779  0C53                     	line	72
  6780                           	
  6781                           i1l2954:	
  6782  0C53                     ;main.c: 72:         PR2 = 25;
  6783                           	movlw	low(019h)
  6784  0C53  3019               	bsf	status, 5	;RP0=1, select bank1
  6785  0C54  1683               	bcf	status, 6	;RP1=0, select bank1
  6786  0C55  1303               	movwf	(146)^080h	;volatile
  6787  0C56  0092               	line	74
  6788                           	
  6789                           i1l2956:	
  6790  0C57                     ;main.c: 74:         poll_receiver();
  6791                           	fcall	_poll_receiver
  6792  0C57  120A  158A  2626  120A  158A  	line	76
  6793                           	
  6794                           i1l2958:	
  6795  0C5C                     ;main.c: 76:         PIR1bits.TMR2IF = 0;
  6796                           	bcf	status, 5	;RP0=0, select bank0
  6797  0C5C  1283               	bcf	status, 6	;RP1=0, select bank0
  6798  0C5D  1303               	bcf	(12),1	;volatile
  6799  0C5E  108C               	goto	i1l72
  6800  0C5F  2C60               	line	78
  6801                           ;main.c: 78:     }
  6802                           	
  6803                           i1l71:	
  6804  0C60                     	line	79
  6805                           	
  6806                           i1l72:	
  6807  0C60                     	movf	(??_isr+3),w
  6808  0C60  085B               	movwf	btemp+1
  6809  0C61  00FF               	movf	(??_isr+2),w
  6810  0C62  085A               	movwf	pclath
  6811  0C63  008A               	movf	(??_isr+1),w
  6812  0C64  0859               	movwf	fsr0
  6813  0C65  0084               	swapf	(??_isr+0)^00h,w
  6814  0C66  0E58               	movwf	status
  6815  0C67  0083               	swapf	saved_w,f
  6816  0C68  0EFE               	swapf	saved_w,w
  6817  0C69  0E7E               	retfie
  6818  0C6A  0009               	opt stack 0
  6819                           GLOBAL	__end_of_isr
  6820                           	__end_of_isr:
  6821  0C6B                     	signat	_isr,89
  6822                           	global	_start_receive
  6823                           
  6824 ;; *************** function _start_receive *****************
  6825 ;; Defined at:
  6826 ;;		line 18 in file "Remote.c"
  6827 ;; Parameters:    Size  Location     Type
  6828 ;;		None
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0, pclath, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6840 ;;      Params:         0       0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0
  6843 ;;      Totals:         0       0       0       0       0
  6844 ;;Total ram usage:        0 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    1
  6847 ;; This function calls:
  6848 ;;		_poll_receiver
  6849 ;; This function is called by:
  6850 ;;		_isr
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6854                           	file	"Remote.c"
  6855                           	line	18
  6856                           global __ptext22
  6857                           __ptext22:	;psect for function _start_receive
  6858  0AC5                     psect	text22
  6859                           	file	"Remote.c"
  6860                           	line	18
  6861                           	global	__size_of_start_receive
  6862                           	__size_of_start_receive	equ	__end_of_start_receive-_start_receive
  6863  0009                     	
  6864                           _start_receive:	
  6865  0AC5                     ;incstack = 0
  6866 ;; hardware stack exceeded
  6867                           	opt	stack 0
  6868                           ; Regs used in _start_receive: [wreg+status,2+status,0+pclath+cstack]
  6869                           	line	20
  6870                           	
  6871                           i1l2890:	
  6872  0AC5                     ;Remote.c: 20:     poll_receiver();
  6873                           	fcall	_poll_receiver
  6874  0AC5  120A  158A  2626  120A  158A  	line	21
  6875                           	
  6876                           i1l2892:	
  6877  0ACA                     ;Remote.c: 21:     T2CONbits.TMR2ON = 1;
  6878                           	bcf	status, 5	;RP0=0, select bank0
  6879  0ACA  1283               	bcf	status, 6	;RP1=0, select bank0
  6880  0ACB  1303               	bsf	(18),2	;volatile
  6881  0ACC  1512               	line	23
  6882                           	
  6883                           i1l368:	
  6884  0ACD                     	return
  6885  0ACD  0008               	opt stack 0
  6886                           GLOBAL	__end_of_start_receive
  6887                           	__end_of_start_receive:
  6888  0ACE                     	signat	_start_receive,89
  6889                           	global	_poll_receiver
  6890                           
  6891 ;; *************** function _poll_receiver *****************
  6892 ;; Defined at:
  6893 ;;		line 25 in file "Remote.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;		None
  6896 ;; Auto vars:     Size  Location     Type
  6897 ;;		None
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  1    wreg      void 
  6900 ;; Registers used:
  6901 ;;		wreg, status,2, status,0
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/0
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6907 ;;      Params:         0       0       0       0       0
  6908 ;;      Locals:         0       0       0       0       0
  6909 ;;      Temps:          8       0       0       0       0
  6910 ;;      Totals:         8       0       0       0       0
  6911 ;;Total ram usage:        8 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; This function calls:
  6914 ;;		Nothing
  6915 ;; This function is called by:
  6916 ;;		_isr
  6917 ;;		_start_receive
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6921                           	line	25
  6922                           global __ptext23
  6923                           __ptext23:	;psect for function _poll_receiver
  6924  0E26                     psect	text23
  6925                           	file	"Remote.c"
  6926                           	line	25
  6927                           	global	__size_of_poll_receiver
  6928                           	__size_of_poll_receiver	equ	__end_of_poll_receiver-_poll_receiver
  6929  0051                     	
  6930                           _poll_receiver:	
  6931  0E26                     ;incstack = 0
  6932 ;; hardware stack exceeded
  6933                           	opt	stack 0
  6934                           ; Regs used in _poll_receiver: [wreg+status,2+status,0]
  6935                           	line	28
  6936                           	
  6937                           i1l2500:	
  6938  0E26                     ;Remote.c: 28:     ir_input = ir_input << 1;
  6939                           	bsf	status, 5	;RP0=1, select bank1
  6940  0E26  1683               	bcf	status, 6	;RP1=0, select bank1
  6941  0E27  1303               	movf	(_ir_input)^080h,w
  6942  0E28  0845               	movwf	(??_poll_receiver+0)+0
  6943  0E29  00F1               	movf	(_ir_input+1)^080h,w
  6944  0E2A  0846               	movwf	((??_poll_receiver+0)+0+1)
  6945  0E2B  00F2               	movf	(_ir_input+2)^080h,w
  6946  0E2C  0847               	movwf	((??_poll_receiver+0)+0+2)
  6947  0E2D  00F3               	movf	(_ir_input+3)^080h,w
  6948  0E2E  0848               	movwf	((??_poll_receiver+0)+0+3)
  6949  0E2F  00F4               	movlw	01h
  6950  0E30  3001               u267_25:
  6951  0E31                     	clrc
  6952  0E31  1003               	rlf	(??_poll_receiver+0)+0,f
  6953  0E32  0DF1               	rlf	(??_poll_receiver+0)+1,f
  6954  0E33  0DF2               	rlf	(??_poll_receiver+0)+2,f
  6955  0E34  0DF3               	rlf	(??_poll_receiver+0)+3,f
  6956  0E35  0DF4               u267_20:
  6957  0E36                     	addlw	-1
  6958  0E36  3EFF               	skipz
  6959  0E37  1D03               	goto	u267_25
  6960  0E38  2E31               	movf	3+(??_poll_receiver+0)+0,w
  6961  0E39  0874               	movwf	(_ir_input+3)^080h
  6962  0E3A  00C8               	movf	2+(??_poll_receiver+0)+0,w
  6963  0E3B  0873               	movwf	(_ir_input+2)^080h
  6964  0E3C  00C7               	movf	1+(??_poll_receiver+0)+0,w
  6965  0E3D  0872               	movwf	(_ir_input+1)^080h
  6966  0E3E  00C6               	movf	0+(??_poll_receiver+0)+0,w
  6967  0E3F  0871               	movwf	(_ir_input)^080h
  6968  0E40  00C5               
  6969                           	line	29
  6970                           	
  6971                           i1l2502:	
  6972  0E41                     ;Remote.c: 29:     ir_input = ir_input | !PORTBbits.RB0;
  6973                           	movf	(_ir_input)^080h,w
  6974  0E41  0845               	movwf	(??_poll_receiver+0)+0
  6975  0E42  00F1               	movf	(_ir_input+1)^080h,w
  6976  0E43  0846               	movwf	((??_poll_receiver+0)+0+1)
  6977  0E44  00F2               	movf	(_ir_input+2)^080h,w
  6978  0E45  0847               	movwf	((??_poll_receiver+0)+0+2)
  6979  0E46  00F3               	movf	(_ir_input+3)^080h,w
  6980  0E47  0848               	movwf	((??_poll_receiver+0)+0+3)
  6981  0E48  00F4               	clrc
  6982  0E49  1003               	bcf	status, 5	;RP0=0, select bank0
  6983  0E4A  1283               	bcf	status, 6	;RP1=0, select bank0
  6984  0E4B  1303               	btfss	(6),0	;volatile
  6985  0E4C  1C06               	setc
  6986  0E4D  1403               	movlw	0
  6987  0E4E  3000               	skipnc
  6988  0E4F  1803               	movlw	1
  6989  0E50  3001               
  6990                           	movwf	(??_poll_receiver+4)+0
  6991  0E51  00F5               	clrf	((??_poll_receiver+4)+0+1)
  6992  0E52  01F6               	clrf	((??_poll_receiver+4)+0+2)
  6993  0E53  01F7               	clrf	((??_poll_receiver+4)+0+3)
  6994  0E54  01F8               	movf	0+(??_poll_receiver+4)+0,w
  6995  0E55  0875               	iorwf	(??_poll_receiver+0)+0,f
  6996  0E56  04F1               	movf	1+(??_poll_receiver+4)+0,w
  6997  0E57  0876               	iorwf	(??_poll_receiver+0)+1,f
  6998  0E58  04F2               	movf	2+(??_poll_receiver+4)+0,w
  6999  0E59  0877               	iorwf	(??_poll_receiver+0)+2,f
  7000  0E5A  04F3               	movf	3+(??_poll_receiver+4)+0,w
  7001  0E5B  0878               	iorwf	(??_poll_receiver+0)+3,f
  7002  0E5C  04F4               	movf	3+(??_poll_receiver+0)+0,w
  7003  0E5D  0874               	bsf	status, 5	;RP0=1, select bank1
  7004  0E5E  1683               	bcf	status, 6	;RP1=0, select bank1
  7005  0E5F  1303               	movwf	(_ir_input+3)^080h
  7006  0E60  00C8               	movf	2+(??_poll_receiver+0)+0,w
  7007  0E61  0873               	movwf	(_ir_input+2)^080h
  7008  0E62  00C7               	movf	1+(??_poll_receiver+0)+0,w
  7009  0E63  0872               	movwf	(_ir_input+1)^080h
  7010  0E64  00C6               	movf	0+(??_poll_receiver+0)+0,w
  7011  0E65  0871               	movwf	(_ir_input)^080h
  7012  0E66  00C5               
  7013                           	line	31
  7014                           	
  7015                           i1l2504:	
  7016  0E67                     ;Remote.c: 31:     receive_count++;
  7017                           	movlw	low(01h)
  7018  0E67  3001               	movwf	(??_poll_receiver+0)+0
  7019  0E68  00F1               	movf	(??_poll_receiver+0)+0,w
  7020  0E69  0871               	addwf	(_receive_count),f
  7021  0E6A  07FD               	line	33
  7022                           	
  7023                           i1l2506:	
  7024  0E6B                     ;Remote.c: 33:     if (receive_count > 24) {
  7025                           	movlw	low(019h)
  7026  0E6B  3019               	subwf	(_receive_count),w
  7027  0E6C  027D               	skipc
  7028  0E6D  1C03               	goto	u268_21
  7029  0E6E  2E70               	goto	u268_20
  7030  0E6F  2E71               u268_21:
  7031  0E70                     	goto	i1l372
  7032  0E70  2E76               u268_20:
  7033  0E71                     	line	34
  7034                           	
  7035                           i1l2508:	
  7036  0E71                     ;Remote.c: 34:                 T2CONbits.TMR2ON = 0;
  7037                           	bcf	status, 5	;RP0=0, select bank0
  7038  0E71  1283               	bcf	status, 6	;RP1=0, select bank0
  7039  0E72  1303               	bcf	(18),2	;volatile
  7040  0E73  1112               	line	35
  7041                           	
  7042                           i1l2510:	
  7043  0E74                     ;Remote.c: 35:                 receive_count = 0;
  7044                           	clrf	(_receive_count)
  7045  0E74  01FD               	goto	i1l372
  7046  0E75  2E76               	line	36
  7047                           ;Remote.c: 36:     }
  7048                           	
  7049                           i1l371:	
  7050  0E76                     	line	38
  7051                           	
  7052                           i1l372:	
  7053  0E76                     	return
  7054  0E76  0008               	opt stack 0
  7055                           GLOBAL	__end_of_poll_receiver
  7056                           	__end_of_poll_receiver:
  7057  0E77                     	signat	_poll_receiver,89
  7058                           	global	_handle_rotary
  7059                           
  7060 ;; *************** function _handle_rotary *****************
  7061 ;; Defined at:
  7062 ;;		line 30 in file "Input.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;		None
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  portB           2    5[COMMON] int 
  7067 ;;  portA           2    3[COMMON] int 
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  1    wreg      void 
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7077 ;;      Params:         0       0       0       0       0
  7078 ;;      Locals:         4       0       0       0       0
  7079 ;;      Temps:          3       0       0       0       0
  7080 ;;      Totals:         7       0       0       0       0
  7081 ;;Total ram usage:        7 bytes
  7082 ;; Hardware stack levels used:    1
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_isr
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7090                           	file	"Input.c"
  7091                           	line	30
  7092                           global __ptext24
  7093                           __ptext24:	;psect for function _handle_rotary
  7094  00B3                     psect	text24
  7095                           	file	"Input.c"
  7096                           	line	30
  7097                           	global	__size_of_handle_rotary
  7098                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  7099  0083                     	
  7100                           _handle_rotary:	
  7101  00B3                     ;incstack = 0
  7102                           	opt	stack 0
  7103                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  7104                           	line	32
  7105                           	
  7106                           i1l2862:	
  7107  00B3                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  7108                           	bcf	status, 5	;RP0=0, select bank0
  7109  00B3  1283               	bcf	status, 6	;RP1=0, select bank0
  7110  00B4  1303               	swapf	(6),w	;volatile
  7111  00B5  0E06               	andlw	(1<<1)-1
  7112  00B6  3901               	movwf	(??_handle_rotary+0)+0
  7113  00B7  00F1               	clrf	(??_handle_rotary+0)+0+1
  7114  00B8  01F2               	movf	0+(??_handle_rotary+0)+0,w
  7115  00B9  0871               	movwf	(handle_rotary@portA)
  7116  00BA  00F4               	movf	1+(??_handle_rotary+0)+0,w
  7117  00BB  0872               	movwf	(handle_rotary@portA+1)
  7118  00BC  00F5               	line	33
  7119                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  7120                           	swapf	(6),w	;volatile
  7121  00BD  0E06               	movwf	(??_handle_rotary+0)+0
  7122  00BE  00F1               	rrf	(??_handle_rotary+0)+0,w
  7123  00BF  0C71               	andlw	(1<<1)-1
  7124  00C0  3901               	movwf	(??_handle_rotary+1)+0
  7125  00C1  00F2               	clrf	(??_handle_rotary+1)+0+1
  7126  00C2  01F3               	movf	0+(??_handle_rotary+1)+0,w
  7127  00C3  0872               	movwf	(handle_rotary@portB)
  7128  00C4  00F6               	movf	1+(??_handle_rotary+1)+0,w
  7129  00C5  0873               	movwf	(handle_rotary@portB+1)
  7130  00C6  00F7               	line	35
  7131                           	
  7132                           i1l2864:	
  7133  00C7                     ;Input.c: 35:         if (_lastA != portA) {
  7134                           	movf	(__lastA+1),w
  7135  00C7  085F               	xorwf	(handle_rotary@portA+1),w
  7136  00C8  0675               	skipz
  7137  00C9  1D03               	goto	u290_25
  7138  00CA  28CD               	movf	(__lastA),w
  7139  00CB  085E               	xorwf	(handle_rotary@portA),w
  7140  00CC  0674               u290_25:
  7141  00CD                     
  7142                           	skipnz
  7143  00CD  1903               	goto	u290_21
  7144  00CE  28D0               	goto	u290_20
  7145  00CF  28D1               u290_21:
  7146  00D0                     	goto	i1l2876
  7147  00D0  28F8               u290_20:
  7148  00D1                     	line	36
  7149                           	
  7150                           i1l2866:	
  7151  00D1                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  7152                           	movf	(__lastB+1),w
  7153  00D1  085D               	xorwf	(__lastA+1),w
  7154  00D2  065F               	skipz
  7155  00D3  1D03               	goto	u291_25
  7156  00D4  28D7               	movf	(__lastB),w
  7157  00D5  085C               	xorwf	(__lastA),w
  7158  00D6  065E               u291_25:
  7159  00D7                     
  7160                           	skipz
  7161  00D7  1D03               	goto	u291_21
  7162  00D8  28DA               	goto	u291_20
  7163  00D9  28DB               u291_21:
  7164  00DA                     	goto	i1l2876
  7165  00DA  28F8               u291_20:
  7166  00DB                     	
  7167                           i1l2868:	
  7168  00DB                     	movf	((handle_rotary@portA)),w
  7169  00DB  0874               iorwf	((handle_rotary@portA+1)),w
  7170  00DC  0475               	btfsc	status,2
  7171  00DD  1903               	goto	u292_21
  7172  00DE  28E0               	goto	u292_20
  7173  00DF  28E1               u292_21:
  7174  00E0                     	goto	i1l2876
  7175  00E0  28F8               u292_20:
  7176  00E1                     	line	37
  7177                           	
  7178                           i1l2870:	
  7179  00E1                     ;Input.c: 37:                 if (_selectedInput < 3) {
  7180                           	movlw	0
  7181  00E1  3000               	bsf	status, 5	;RP0=1, select bank1
  7182  00E2  1683               	bcf	status, 6	;RP1=0, select bank1
  7183  00E3  1303               	subwf	(__selectedInput+1)^080h,w
  7184  00E4  0250               	movlw	03h
  7185  00E5  3003               	skipnz
  7186  00E6  1903               	subwf	(__selectedInput)^080h,w
  7187  00E7  024F               	skipnc
  7188  00E8  1803               	goto	u293_21
  7189  00E9  28EB               	goto	u293_20
  7190  00EA  28EC               u293_21:
  7191  00EB                     	goto	i1l2874
  7192  00EB  28F3               u293_20:
  7193  00EC                     	line	38
  7194                           	
  7195                           i1l2872:	
  7196  00EC                     ;Input.c: 38:                     _selectedInput++;
  7197                           	movlw	01h
  7198  00EC  3001               	addwf	(__selectedInput)^080h,f
  7199  00ED  07CF               	skipnc
  7200  00EE  1803               	incf	(__selectedInput+1)^080h,f
  7201  00EF  0AD0               	movlw	0
  7202  00F0  3000               	addwf	(__selectedInput+1)^080h,f
  7203  00F1  07D0               	line	39
  7204                           ;Input.c: 39:                 } else {
  7205                           	goto	i1l2876
  7206  00F2  28F8               	
  7207                           i1l231:	
  7208  00F3                     	line	40
  7209                           	
  7210                           i1l2874:	
  7211  00F3                     ;Input.c: 40:                     _selectedInput = 0;
  7212                           	clrf	(__selectedInput)^080h
  7213  00F3  01CF               	clrf	(__selectedInput+1)^080h
  7214  00F4  01D0               	goto	i1l2876
  7215  00F5  28F8               	line	41
  7216                           ;Input.c: 41:                 }
  7217                           	
  7218                           i1l232:	
  7219  00F6                     	goto	i1l2876
  7220  00F6  28F8               	line	42
  7221                           ;Input.c: 42:             }
  7222                           	
  7223                           i1l230:	
  7224  00F7                     	goto	i1l2876
  7225  00F7  28F8               	line	43
  7226                           ;Input.c: 43:         }
  7227                           	
  7228                           i1l229:	
  7229  00F8                     	line	45
  7230                           	
  7231                           i1l2876:	
  7232  00F8                     ;Input.c: 45:         if (_lastB != portB) {
  7233                           	bcf	status, 5	;RP0=0, select bank0
  7234  00F8  1283               	movf	(__lastB+1),w
  7235  00F9  085D               	xorwf	(handle_rotary@portB+1),w
  7236  00FA  0677               	skipz
  7237  00FB  1D03               	goto	u294_25
  7238  00FC  28FF               	movf	(__lastB),w
  7239  00FD  085C               	xorwf	(handle_rotary@portB),w
  7240  00FE  0676               u294_25:
  7241  00FF                     
  7242                           	skipnz
  7243  00FF  1903               	goto	u294_21
  7244  0100  2902               	goto	u294_20
  7245  0101  2903               u294_21:
  7246  0102                     	goto	i1l233
  7247  0102  2928               u294_20:
  7248  0103                     	line	46
  7249                           	
  7250                           i1l2878:	
  7251  0103                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
  7252                           	movf	(__lastB+1),w
  7253  0103  085D               	xorwf	(__lastA+1),w
  7254  0104  065F               	skipz
  7255  0105  1D03               	goto	u295_25
  7256  0106  2909               	movf	(__lastB),w
  7257  0107  085C               	xorwf	(__lastA),w
  7258  0108  065E               u295_25:
  7259  0109                     
  7260                           	skipz
  7261  0109  1D03               	goto	u295_21
  7262  010A  290C               	goto	u295_20
  7263  010B  290D               u295_21:
  7264  010C                     	goto	i1l233
  7265  010C  2928               u295_20:
  7266  010D                     	
  7267                           i1l2880:	
  7268  010D                     	movf	((handle_rotary@portB)),w
  7269  010D  0876               iorwf	((handle_rotary@portB+1)),w
  7270  010E  0477               	btfsc	status,2
  7271  010F  1903               	goto	u296_21
  7272  0110  2912               	goto	u296_20
  7273  0111  2913               u296_21:
  7274  0112                     	goto	i1l233
  7275  0112  2928               u296_20:
  7276  0113                     	line	47
  7277                           	
  7278                           i1l2882:	
  7279  0113                     ;Input.c: 47:                 if (_selectedInput > 0) {
  7280                           	bsf	status, 5	;RP0=1, select bank1
  7281  0113  1683               	bcf	status, 6	;RP1=0, select bank1
  7282  0114  1303               	movf	((__selectedInput)^080h),w
  7283  0115  084F               iorwf	((__selectedInput+1)^080h),w
  7284  0116  0450               	btfsc	status,2
  7285  0117  1903               	goto	u297_21
  7286  0118  291A               	goto	u297_20
  7287  0119  291B               u297_21:
  7288  011A                     	goto	i1l2886
  7289  011A  2922               u297_20:
  7290  011B                     	line	48
  7291                           	
  7292                           i1l2884:	
  7293  011B                     ;Input.c: 48:                     _selectedInput--;
  7294                           	movlw	01h
  7295  011B  3001               	subwf	(__selectedInput)^080h,f
  7296  011C  02CF               	movlw	0
  7297  011D  3000               	skipc
  7298  011E  1C03               	decf	(__selectedInput+1)^080h,f
  7299  011F  03D0               	subwf	(__selectedInput+1)^080h,f
  7300  0120  02D0               	line	49
  7301                           ;Input.c: 49:                 } else {
  7302                           	goto	i1l233
  7303  0121  2928               	
  7304                           i1l235:	
  7305  0122                     	line	50
  7306                           	
  7307                           i1l2886:	
  7308  0122                     ;Input.c: 50:                     _selectedInput = 3;
  7309                           	movlw	03h
  7310  0122  3003               	movwf	(__selectedInput)^080h
  7311  0123  00CF               	movlw	0
  7312  0124  3000               	movwf	((__selectedInput)^080h)+1
  7313  0125  00D0               	goto	i1l233
  7314  0126  2928               	line	51
  7315                           ;Input.c: 51:                 }
  7316                           	
  7317                           i1l236:	
  7318  0127                     	goto	i1l233
  7319  0127  2928               	line	52
  7320                           ;Input.c: 52:             }
  7321                           	
  7322                           i1l234:	
  7323  0128                     	line	53
  7324                           ;Input.c: 53:         }
  7325                           	
  7326                           i1l233:	
  7327  0128                     	line	55
  7328                           ;Input.c: 55:         _lastA = portA;
  7329                           	movf	(handle_rotary@portA+1),w
  7330  0128  0875               	bcf	status, 5	;RP0=0, select bank0
  7331  0129  1283               	movwf	(__lastA+1)
  7332  012A  00DF               	movf	(handle_rotary@portA),w
  7333  012B  0874               	movwf	(__lastA)
  7334  012C  00DE               	line	56
  7335                           ;Input.c: 56:         _lastB = portB;
  7336                           	movf	(handle_rotary@portB+1),w
  7337  012D  0877               	movwf	(__lastB+1)
  7338  012E  00DD               	movf	(handle_rotary@portB),w
  7339  012F  0876               	movwf	(__lastB)
  7340  0130  00DC               	line	57
  7341                           	
  7342                           i1l2888:	
  7343  0131                     ;Input.c: 57:         _inputUpdateRequired = 1;
  7344                           	bsf	status, 5	;RP0=1, select bank1
  7345  0131  1683               	bcf	status, 6	;RP1=0, select bank1
  7346  0132  1303               	clrf	(__inputUpdateRequired)^080h
  7347  0133  01D2               	incf	(__inputUpdateRequired)^080h,f
  7348  0134  0AD2               	line	58
  7349                           	
  7350                           i1l237:	
  7351  0135                     	return
  7352  0135  0008               	opt stack 0
  7353                           GLOBAL	__end_of_handle_rotary
  7354                           	__end_of_handle_rotary:
  7355  0136                     	signat	_handle_rotary,89
  7356                           	global	_handle_potmeter
  7357                           
  7358 ;; *************** function _handle_potmeter *****************
  7359 ;; Defined at:
  7360 ;;		line 30 in file "Volume.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  currentStep     2   52[BANK0 ] unsigned int 
  7365 ;;  ad_result       2   54[BANK0 ] unsigned int 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      void 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7375 ;;      Params:         0       0       0       0       0
  7376 ;;      Locals:         0       4       0       0       0
  7377 ;;      Temps:          0       2       0       0       0
  7378 ;;      Totals:         0       6       0       0       0
  7379 ;;Total ram usage:        6 bytes
  7380 ;; Hardware stack levels used:    1
  7381 ;; Hardware stack levels required when called:    2
  7382 ;; This function calls:
  7383 ;;		_is_deadzone
  7384 ;;		i1___lwdiv
  7385 ;; This function is called by:
  7386 ;;		_isr
  7387 ;; This function uses a non-reentrant model
  7388 ;;
  7389                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7390                           	file	"Volume.c"
  7391                           	line	30
  7392                           global __ptext25
  7393                           __ptext25:	;psect for function _handle_potmeter
  7394  0041                     psect	text25
  7395                           	file	"Volume.c"
  7396                           	line	30
  7397                           	global	__size_of_handle_potmeter
  7398                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
  7399  0072                     	
  7400                           _handle_potmeter:	
  7401  0041                     ;incstack = 0
  7402 ;; hardware stack exceeded
  7403                           	opt	stack 0
  7404                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7405                           	line	32
  7406                           	
  7407                           i1l2894:	
  7408  0041                     ;Volume.c: 32:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
  7409                           	bcf	status, 5	;RP0=0, select bank0
  7410  0041  1283               	bcf	status, 6	;RP1=0, select bank0
  7411  0042  1303               	movf	(30),w	;volatile
  7412  0043  081E               	movwf	(handle_potmeter@ad_result+1)
  7413  0044  00D7               	bsf	status, 5	;RP0=1, select bank1
  7414  0045  1683               	bcf	status, 6	;RP1=0, select bank1
  7415  0046  1303               	movf	(158)^080h,w	;volatile
  7416  0047  081E               	bcf	status, 5	;RP0=0, select bank0
  7417  0048  1283               	bcf	status, 6	;RP1=0, select bank0
  7418  0049  1303               	movwf	(handle_potmeter@ad_result)
  7419  004A  00D6               	line	34
  7420                           	
  7421                           i1l2896:	
  7422  004B                     ;Volume.c: 34:     if (ad_result == 0 || ad_result < step_size) {
  7423                           	movf	((handle_potmeter@ad_result)),w
  7424  004B  0856               iorwf	((handle_potmeter@ad_result+1)),w
  7425  004C  0457               	btfsc	status,2
  7426  004D  1903               	goto	u298_21
  7427  004E  2850               	goto	u298_20
  7428  004F  2851               u298_21:
  7429  0050                     	goto	i1l2900
  7430  0050  286C               u298_20:
  7431  0051                     	
  7432                           i1l2898:	
  7433  0051                     	movlw	low(_step_size|8000h)
  7434  0051  308E               	movwf	fsr0
  7435  0052  0084               	movlw	high(_step_size|8000h)
  7436  0053  3089               	movwf	btemp+1
  7437  0054  00FF               	fcall	stringtab
  7438  0055  120A  158A  2000  120A  118A  	movwf	(??_handle_potmeter+0)+0
  7439  005A  00D2               	fcall	stringtab
  7440  005B  120A  158A  2000  120A  118A  	movwf	(??_handle_potmeter+0)+0+1
  7441  0060  00D3               	movf	1+(??_handle_potmeter+0)+0,w
  7442  0061  0853               	subwf	(handle_potmeter@ad_result+1),w
  7443  0062  0257               	skipz
  7444  0063  1D03               	goto	u299_25
  7445  0064  2867               	movf	0+(??_handle_potmeter+0)+0,w
  7446  0065  0852               	subwf	(handle_potmeter@ad_result),w
  7447  0066  0256               u299_25:
  7448  0067                     	skipnc
  7449  0067  1803               	goto	u299_21
  7450  0068  286A               	goto	u299_20
  7451  0069  286B               u299_21:
  7452  006A                     	goto	i1l2902
  7453  006A  2871               u299_20:
  7454  006B                     	goto	i1l2900
  7455  006B  286C               	
  7456                           i1l331:	
  7457  006C                     	line	35
  7458                           	
  7459                           i1l2900:	
  7460  006C                     ;Volume.c: 35:             volume = 0;
  7461                           	bsf	status, 5	;RP0=1, select bank1
  7462  006C  1683               	bcf	status, 6	;RP1=0, select bank1
  7463  006D  1303               	clrf	(_volume)^080h
  7464  006E  01CD               	clrf	(_volume+1)^080h
  7465  006F  01CE               	line	36
  7466                           ;Volume.c: 36:     } else {
  7467                           	goto	i1l334
  7468  0070  28B2               	
  7469                           i1l329:	
  7470  0071                     	line	37
  7471                           	
  7472                           i1l2902:	
  7473  0071                     ;Volume.c: 37:         unsigned int currentStep = ad_result / step_size;
  7474                           	movlw	low(_step_size|8000h)
  7475  0071  308E               	movwf	fsr0
  7476  0072  0084               	movlw	high(_step_size|8000h)
  7477  0073  3089               	bcf	status, 5	;RP0=0, select bank0
  7478  0074  1283               	movwf	btemp+1
  7479  0075  00FF               	fcall	stringtab
  7480  0076  120A  158A  2000  120A  118A  	movwf	(i1___lwdiv@divisor)
  7481  007B  00F1               	fcall	stringtab
  7482  007C  120A  158A  2000  120A  118A  	movwf	(i1___lwdiv@divisor+1)
  7483  0081  00F2               	movf	(handle_potmeter@ad_result+1),w
  7484  0082  0857               	movwf	(i1___lwdiv@dividend+1)
  7485  0083  00F4               	movf	(handle_potmeter@ad_result),w
  7486  0084  0856               	movwf	(i1___lwdiv@dividend)
  7487  0085  00F3               	fcall	i1___lwdiv
  7488  0086  120A  158A  24F4  120A  118A  	movf	(1+(?i1___lwdiv)),w
  7489  008B  0872               	bcf	status, 5	;RP0=0, select bank0
  7490  008C  1283               	bcf	status, 6	;RP1=0, select bank0
  7491  008D  1303               	movwf	(handle_potmeter@currentStep+1)
  7492  008E  00D5               	movf	(0+(?i1___lwdiv)),w
  7493  008F  0871               	movwf	(handle_potmeter@currentStep)
  7494  0090  00D4               	line	39
  7495                           ;Volume.c: 39:         if (!is_deadzone(currentStep, ad_result))
  7496                           	movf	(handle_potmeter@currentStep+1),w
  7497  0091  0855               	movwf	(is_deadzone@currentStep+1)
  7498  0092  00C6               	movf	(handle_potmeter@currentStep),w
  7499  0093  0854               	movwf	(is_deadzone@currentStep)
  7500  0094  00C5               	movf	(handle_potmeter@ad_result+1),w
  7501  0095  0857               	movwf	(is_deadzone@adcResult+1)
  7502  0096  00C8               	movf	(handle_potmeter@ad_result),w
  7503  0097  0856               	movwf	(is_deadzone@adcResult)
  7504  0098  00C7               	fcall	_is_deadzone
  7505  0099  120A  118A  2324  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7506  009E  1283               	bcf	status, 6	;RP1=0, select bank0
  7507  009F  1303               	movf	((0+(?_is_deadzone))),w
  7508  00A0  0845               iorwf	((1+(?_is_deadzone))),w
  7509  00A1  0446               	btfss	status,2
  7510  00A2  1D03               	goto	u300_21
  7511  00A3  28A5               	goto	u300_20
  7512  00A4  28A6               u300_21:
  7513  00A5                     	goto	i1l334
  7514  00A5  28B2               u300_20:
  7515  00A6                     	line	40
  7516                           	
  7517                           i1l2904:	
  7518  00A6                     ;Volume.c: 40:             volume = currentStep;
  7519                           	movf	(handle_potmeter@currentStep+1),w
  7520  00A6  0855               	bsf	status, 5	;RP0=1, select bank1
  7521  00A7  1683               	bcf	status, 6	;RP1=0, select bank1
  7522  00A8  1303               	movwf	(_volume+1)^080h
  7523  00A9  00CE               	bcf	status, 5	;RP0=0, select bank0
  7524  00AA  1283               	bcf	status, 6	;RP1=0, select bank0
  7525  00AB  1303               	movf	(handle_potmeter@currentStep),w
  7526  00AC  0854               	bsf	status, 5	;RP0=1, select bank1
  7527  00AD  1683               	bcf	status, 6	;RP1=0, select bank1
  7528  00AE  1303               	movwf	(_volume)^080h
  7529  00AF  00CD               	goto	i1l334
  7530  00B0  28B2               	
  7531                           i1l333:	
  7532  00B1                     	goto	i1l334
  7533  00B1  28B2               	line	41
  7534                           ;Volume.c: 41:     }
  7535                           	
  7536                           i1l332:	
  7537  00B2                     	line	43
  7538                           	
  7539                           i1l334:	
  7540  00B2                     	return
  7541  00B2  0008               	opt stack 0
  7542                           GLOBAL	__end_of_handle_potmeter
  7543                           	__end_of_handle_potmeter:
  7544  00B3                     	signat	_handle_potmeter,89
  7545                           	global	i1___lwdiv
  7546                           
  7547 ;; *************** function i1___lwdiv *****************
  7548 ;; Defined at:
  7549 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;  divisor         2    0[COMMON] unsigned int 
  7552 ;;  dividend        2    2[COMMON] unsigned int 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7555 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7556 ;; Return value:  Size  Location     Type
  7557 ;;                  2    0[COMMON] unsigned int 
  7558 ;; Registers used:
  7559 ;;		wreg, status,2, status,0
  7560 ;; Tracked objects:
  7561 ;;		On entry : 0/0
  7562 ;;		On exit  : 0/0
  7563 ;;		Unchanged: 0/0
  7564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7565 ;;      Params:         4       0       0       0       0
  7566 ;;      Locals:         3       0       0       0       0
  7567 ;;      Temps:          1       0       0       0       0
  7568 ;;      Totals:         8       0       0       0       0
  7569 ;;Total ram usage:        8 bytes
  7570 ;; Hardware stack levels used:    1
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_handle_potmeter
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7578                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7579                           	line	5
  7580                           global __ptext26
  7581                           __ptext26:	;psect for function i1___lwdiv
  7582  0CF4                     psect	text26
  7583                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7584                           	line	5
  7585                           	global	__size_ofi1___lwdiv
  7586                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
  7587  004B                     	
  7588                           i1___lwdiv:	
  7589  0CF4                     ;incstack = 0
  7590 ;; hardware stack exceeded
  7591                           	opt	stack 0
  7592                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7593                           	line	13
  7594                           	
  7595                           i1l2644:	
  7596  0CF4                     	clrf	(i1___lwdiv@quotient)
  7597  0CF4  01F6               	clrf	(i1___lwdiv@quotient+1)
  7598  0CF5  01F7               	line	14
  7599                           	
  7600                           i1l2646:	
  7601  0CF6                     	movf	((i1___lwdiv@divisor)),w
  7602  0CF6  0871               iorwf	((i1___lwdiv@divisor+1)),w
  7603  0CF7  0472               	btfsc	status,2
  7604  0CF8  1903               	goto	u277_21
  7605  0CF9  2CFB               	goto	u277_20
  7606  0CFA  2CFC               u277_21:
  7607  0CFB                     	goto	i1l2666
  7608  0CFB  2D39               u277_20:
  7609  0CFC                     	line	15
  7610                           	
  7611                           i1l2648:	
  7612  0CFC                     	clrf	(i1___lwdiv@counter)
  7613  0CFC  01F8               	incf	(i1___lwdiv@counter),f
  7614  0CFD  0AF8               	line	16
  7615                           	goto	i1l2654
  7616  0CFE  2D0B               	
  7617                           i1l766:	
  7618  0CFF                     	line	17
  7619                           	
  7620                           i1l2650:	
  7621  0CFF                     	movlw	01h
  7622  0CFF  3001               	
  7623                           u278_25:
  7624  0D00                     	clrc
  7625  0D00  1003               	rlf	(i1___lwdiv@divisor),f
  7626  0D01  0DF1               	rlf	(i1___lwdiv@divisor+1),f
  7627  0D02  0DF2               	addlw	-1
  7628  0D03  3EFF               	skipz
  7629  0D04  1D03               	goto	u278_25
  7630  0D05  2D00               	line	18
  7631                           	
  7632                           i1l2652:	
  7633  0D06                     	movlw	low(01h)
  7634  0D06  3001               	movwf	(??i1___lwdiv+0)+0
  7635  0D07  00F5               	movf	(??i1___lwdiv+0)+0,w
  7636  0D08  0875               	addwf	(i1___lwdiv@counter),f
  7637  0D09  07F8               	goto	i1l2654
  7638  0D0A  2D0B               	line	19
  7639                           	
  7640                           i1l765:	
  7641  0D0B                     	line	16
  7642                           	
  7643                           i1l2654:	
  7644  0D0B                     	btfss	(i1___lwdiv@divisor+1),(15)&7
  7645  0D0B  1FF2               	goto	u279_21
  7646  0D0C  2D0E               	goto	u279_20
  7647  0D0D  2D0F               u279_21:
  7648  0D0E                     	goto	i1l2650
  7649  0D0E  2CFF               u279_20:
  7650  0D0F                     	goto	i1l2656
  7651  0D0F  2D11               	
  7652                           i1l767:	
  7653  0D10                     	goto	i1l2656
  7654  0D10  2D11               	line	20
  7655                           	
  7656                           i1l768:	
  7657  0D11                     	line	21
  7658                           	
  7659                           i1l2656:	
  7660  0D11                     	movlw	01h
  7661  0D11  3001               	
  7662                           u280_25:
  7663  0D12                     	clrc
  7664  0D12  1003               	rlf	(i1___lwdiv@quotient),f
  7665  0D13  0DF6               	rlf	(i1___lwdiv@quotient+1),f
  7666  0D14  0DF7               	addlw	-1
  7667  0D15  3EFF               	skipz
  7668  0D16  1D03               	goto	u280_25
  7669  0D17  2D12               	line	22
  7670                           	movf	(i1___lwdiv@divisor+1),w
  7671  0D18  0872               	subwf	(i1___lwdiv@dividend+1),w
  7672  0D19  0274               	skipz
  7673  0D1A  1D03               	goto	u281_25
  7674  0D1B  2D1E               	movf	(i1___lwdiv@divisor),w
  7675  0D1C  0871               	subwf	(i1___lwdiv@dividend),w
  7676  0D1D  0273               u281_25:
  7677  0D1E                     	skipc
  7678  0D1E  1C03               	goto	u281_21
  7679  0D1F  2D21               	goto	u281_20
  7680  0D20  2D22               u281_21:
  7681  0D21                     	goto	i1l2662
  7682  0D21  2D2A               u281_20:
  7683  0D22                     	line	23
  7684                           	
  7685                           i1l2658:	
  7686  0D22                     	movf	(i1___lwdiv@divisor),w
  7687  0D22  0871               	subwf	(i1___lwdiv@dividend),f
  7688  0D23  02F3               	movf	(i1___lwdiv@divisor+1),w
  7689  0D24  0872               	skipc
  7690  0D25  1C03               	decf	(i1___lwdiv@dividend+1),f
  7691  0D26  03F4               	subwf	(i1___lwdiv@dividend+1),f
  7692  0D27  02F4               	line	24
  7693                           	
  7694                           i1l2660:	
  7695  0D28                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
  7696  0D28  1476               	goto	i1l2662
  7697  0D29  2D2A               	line	25
  7698                           	
  7699                           i1l769:	
  7700  0D2A                     	line	26
  7701                           	
  7702                           i1l2662:	
  7703  0D2A                     	movlw	01h
  7704  0D2A  3001               	
  7705                           u282_25:
  7706  0D2B                     	clrc
  7707  0D2B  1003               	rrf	(i1___lwdiv@divisor+1),f
  7708  0D2C  0CF2               	rrf	(i1___lwdiv@divisor),f
  7709  0D2D  0CF1               	addlw	-1
  7710  0D2E  3EFF               	skipz
  7711  0D2F  1D03               	goto	u282_25
  7712  0D30  2D2B               	line	27
  7713                           	
  7714                           i1l2664:	
  7715  0D31                     	movlw	01h
  7716  0D31  3001               	subwf	(i1___lwdiv@counter),f
  7717  0D32  02F8               	btfss	status,2
  7718  0D33  1D03               	goto	u283_21
  7719  0D34  2D36               	goto	u283_20
  7720  0D35  2D37               u283_21:
  7721  0D36                     	goto	i1l2656
  7722  0D36  2D11               u283_20:
  7723  0D37                     	goto	i1l2666
  7724  0D37  2D39               	
  7725                           i1l770:	
  7726  0D38                     	goto	i1l2666
  7727  0D38  2D39               	line	28
  7728                           	
  7729                           i1l764:	
  7730  0D39                     	line	29
  7731                           	
  7732                           i1l2666:	
  7733  0D39                     	movf	(i1___lwdiv@quotient+1),w
  7734  0D39  0877               	movwf	(?i1___lwdiv+1)
  7735  0D3A  00F2               	movf	(i1___lwdiv@quotient),w
  7736  0D3B  0876               	movwf	(?i1___lwdiv)
  7737  0D3C  00F1               	goto	i1l771
  7738  0D3D  2D3E               	
  7739                           i1l2668:	
  7740  0D3E                     	line	30
  7741                           	
  7742                           i1l771:	
  7743  0D3E                     	return
  7744  0D3E  0008               	opt stack 0
  7745                           GLOBAL	__end_ofi1___lwdiv
  7746                           	__end_ofi1___lwdiv:
  7747  0D3F                     	signat	i1___lwdiv,90
  7748                           	global	_is_deadzone
  7749                           
  7750 ;; *************** function _is_deadzone *****************
  7751 ;; Defined at:
  7752 ;;		line 20 in file "Volume.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  currentStep     2   37[BANK0 ] int 
  7755 ;;  adcResult       2   39[BANK0 ] int 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  turnPoint       2   48[BANK0 ] int 
  7758 ;;  deadzoneHigh    2   45[BANK0 ] int 
  7759 ;;  deadzoneLow     2   43[BANK0 ] int 
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  2   37[BANK0 ] int 
  7762 ;; Registers used:
  7763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7769 ;;      Params:         0       4       0       0       0
  7770 ;;      Locals:         0       7       0       0       0
  7771 ;;      Temps:          0       2       0       0       0
  7772 ;;      Totals:         0      13       0       0       0
  7773 ;;Total ram usage:       13 bytes
  7774 ;; Hardware stack levels used:    1
  7775 ;; Hardware stack levels required when called:    1
  7776 ;; This function calls:
  7777 ;;		___fladd
  7778 ;;		___fltol
  7779 ;;		___xxtofl
  7780 ;;		i1___wmul
  7781 ;; This function is called by:
  7782 ;;		_handle_potmeter
  7783 ;; This function uses a non-reentrant model
  7784 ;;
  7785                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  7786                           	file	"Volume.c"
  7787                           	line	20
  7788                           global __ptext27
  7789                           __ptext27:	;psect for function _is_deadzone
  7790  0324                     psect	text27
  7791                           	file	"Volume.c"
  7792                           	line	20
  7793                           	global	__size_of_is_deadzone
  7794                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  7795  00C6                     	
  7796                           _is_deadzone:	
  7797  0324                     ;incstack = 0
  7798 ;; hardware stack exceeded
  7799                           	opt	stack 0
  7800                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7801                           	line	22
  7802                           	
  7803                           i1l2626:	
  7804  0324                     ;Volume.c: 20: int is_deadzone(int currentStep, int adcResult);Volume.c: 21: {;Volume.c:
                                  22:     int turnPoint = step_size * currentStep;
  7805                           	movlw	low(_step_size|8000h)
  7806  0324  308E               	movwf	fsr0
  7807  0325  0084               	movlw	high(_step_size|8000h)
  7808  0326  3089               	bcf	status, 5	;RP0=0, select bank0
  7809  0327  1283               	bcf	status, 6	;RP1=0, select bank0
  7810  0328  1303               	movwf	btemp+1
  7811  0329  00FF               	fcall	stringtab
  7812  032A  120A  158A  2000  120A  118A  	movwf	(i1___wmul@multiplier)
  7813  032F  00F1               	fcall	stringtab
  7814  0330  120A  158A  2000  120A  118A  	movwf	(i1___wmul@multiplier+1)
  7815  0335  00F2               	movf	(is_deadzone@currentStep+1),w
  7816  0336  0846               	movwf	(i1___wmul@multiplicand+1)
  7817  0337  00F4               	movf	(is_deadzone@currentStep),w
  7818  0338  0845               	movwf	(i1___wmul@multiplicand)
  7819  0339  00F3               	fcall	i1___wmul
  7820  033A  120A  158A  2324  120A  118A  	movf	(1+(?i1___wmul)),w
  7821  033F  0872               	bcf	status, 5	;RP0=0, select bank0
  7822  0340  1283               	bcf	status, 6	;RP1=0, select bank0
  7823  0341  1303               	movwf	(is_deadzone@turnPoint+1)
  7824  0342  00D1               	movf	(0+(?i1___wmul)),w
  7825  0343  0871               	movwf	(is_deadzone@turnPoint)
  7826  0344  00D0               	line	24
  7827                           	
  7828                           i1l2628:	
  7829  0345                     ;Volume.c: 24:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  7830                           	movf	(is_deadzone@turnPoint),w
  7831  0345  0850               	movwf	(___xxtofl@val)
  7832  0346  00F1               	movf	(is_deadzone@turnPoint+1),w
  7833  0347  0851               	movwf	(___xxtofl@val+1)
  7834  0348  00F2               	movlw	0
  7835  0349  3000               	btfsc	(___xxtofl@val+1),7
  7836  034A  1BF2               	movlw	255
  7837  034B  30FF               	movwf	(___xxtofl@val+2)
  7838  034C  00F3               	movwf	(___xxtofl@val+3)
  7839  034D  00F4               	movlw	low(01h)
  7840  034E  3001               	fcall	___xxtofl
  7841  034F  120A  118A  2260  120A  118A  	movf	(3+(?___xxtofl)),w
  7842  0354  0874               	bcf	status, 5	;RP0=0, select bank0
  7843  0355  1283               	bcf	status, 6	;RP1=0, select bank0
  7844  0356  1303               	movwf	(___fladd@a+3)
  7845  0357  00AD               	movf	(2+(?___xxtofl)),w
  7846  0358  0873               	movwf	(___fladd@a+2)
  7847  0359  00AC               	movf	(1+(?___xxtofl)),w
  7848  035A  0872               	movwf	(___fladd@a+1)
  7849  035B  00AB               	movf	(0+(?___xxtofl)),w
  7850  035C  0871               	movwf	(___fladd@a)
  7851  035D  00AA               
  7852                           	movlw	0xc1
  7853  035E  30C1               	movwf	(___fladd@b+3)
  7854  035F  00A9               	movlw	0x23
  7855  0360  3023               	movwf	(___fladd@b+2)
  7856  0361  00A8               	movlw	0xae
  7857  0362  30AE               	movwf	(___fladd@b+1)
  7858  0363  00A7               	movlw	0x14
  7859  0364  3014               	movwf	(___fladd@b)
  7860  0365  00A6               
  7861                           	fcall	___fladd
  7862  0366  120A  118A  2520  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7863  036B  1283               	bcf	status, 6	;RP1=0, select bank0
  7864  036C  1303               	movf	(3+(?___fladd)),w
  7865  036D  0829               	movwf	(___fltol@f1+3)
  7866  036E  00BD               	movf	(2+(?___fladd)),w
  7867  036F  0828               	movwf	(___fltol@f1+2)
  7868  0370  00BC               	movf	(1+(?___fladd)),w
  7869  0371  0827               	movwf	(___fltol@f1+1)
  7870  0372  00BB               	movf	(0+(?___fladd)),w
  7871  0373  0826               	movwf	(___fltol@f1)
  7872  0374  00BA               
  7873                           	fcall	___fltol
  7874  0375  120A  118A  21C4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7875  037A  1283               	bcf	status, 6	;RP1=0, select bank0
  7876  037B  1303               	movf	(1+(?___fltol)),w
  7877  037C  083B               	movwf	(is_deadzone@deadzoneLow+1)
  7878  037D  00CC               	movf	(0+(?___fltol)),w
  7879  037E  083A               	movwf	(is_deadzone@deadzoneLow)
  7880  037F  00CB               	line	25
  7881                           	
  7882                           i1l2630:	
  7883  0380                     ;Volume.c: 25:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  7884                           	movf	(is_deadzone@turnPoint),w
  7885  0380  0850               	movwf	(___xxtofl@val)
  7886  0381  00F1               	movf	(is_deadzone@turnPoint+1),w
  7887  0382  0851               	movwf	(___xxtofl@val+1)
  7888  0383  00F2               	movlw	0
  7889  0384  3000               	btfsc	(___xxtofl@val+1),7
  7890  0385  1BF2               	movlw	255
  7891  0386  30FF               	movwf	(___xxtofl@val+2)
  7892  0387  00F3               	movwf	(___xxtofl@val+3)
  7893  0388  00F4               	movlw	low(01h)
  7894  0389  3001               	fcall	___xxtofl
  7895  038A  120A  118A  2260  120A  118A  	movf	(3+(?___xxtofl)),w
  7896  038F  0874               	bcf	status, 5	;RP0=0, select bank0
  7897  0390  1283               	bcf	status, 6	;RP1=0, select bank0
  7898  0391  1303               	movwf	(___fladd@a+3)
  7899  0392  00AD               	movf	(2+(?___xxtofl)),w
  7900  0393  0873               	movwf	(___fladd@a+2)
  7901  0394  00AC               	movf	(1+(?___xxtofl)),w
  7902  0395  0872               	movwf	(___fladd@a+1)
  7903  0396  00AB               	movf	(0+(?___xxtofl)),w
  7904  0397  0871               	movwf	(___fladd@a)
  7905  0398  00AA               
  7906                           	movlw	0x41
  7907  0399  3041               	movwf	(___fladd@b+3)
  7908  039A  00A9               	movlw	0x23
  7909  039B  3023               	movwf	(___fladd@b+2)
  7910  039C  00A8               	movlw	0xae
  7911  039D  30AE               	movwf	(___fladd@b+1)
  7912  039E  00A7               	movlw	0x14
  7913  039F  3014               	movwf	(___fladd@b)
  7914  03A0  00A6               
  7915                           	fcall	___fladd
  7916  03A1  120A  118A  2520  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7917  03A6  1283               	bcf	status, 6	;RP1=0, select bank0
  7918  03A7  1303               	movf	(3+(?___fladd)),w
  7919  03A8  0829               	movwf	(___fltol@f1+3)
  7920  03A9  00BD               	movf	(2+(?___fladd)),w
  7921  03AA  0828               	movwf	(___fltol@f1+2)
  7922  03AB  00BC               	movf	(1+(?___fladd)),w
  7923  03AC  0827               	movwf	(___fltol@f1+1)
  7924  03AD  00BB               	movf	(0+(?___fladd)),w
  7925  03AE  0826               	movwf	(___fltol@f1)
  7926  03AF  00BA               
  7927                           	fcall	___fltol
  7928  03B0  120A  118A  21C4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7929  03B5  1283               	bcf	status, 6	;RP1=0, select bank0
  7930  03B6  1303               	movf	(1+(?___fltol)),w
  7931  03B7  083B               	movwf	(is_deadzone@deadzoneHigh+1)
  7932  03B8  00CE               	movf	(0+(?___fltol)),w
  7933  03B9  083A               	movwf	(is_deadzone@deadzoneHigh)
  7934  03BA  00CD               	line	27
  7935                           	
  7936                           i1l2632:	
  7937  03BB                     ;Volume.c: 27:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  7938                           	clrf	(_is_deadzone$890)
  7939  03BB  01CF               	
  7940                           i1l2634:	
  7941  03BC                     	movf	(is_deadzone@deadzoneLow+1),w
  7942  03BC  084C               	xorlw	80h
  7943  03BD  3A80               	movwf	(??_is_deadzone+0)+0
  7944  03BE  00C9               	movf	(is_deadzone@adcResult+1),w
  7945  03BF  0848               	xorlw	80h
  7946  03C0  3A80               	subwf	(??_is_deadzone+0)+0,w
  7947  03C1  0249               	skipz
  7948  03C2  1D03               	goto	u275_25
  7949  03C3  2BC6               	movf	(is_deadzone@adcResult),w
  7950  03C4  0847               	subwf	(is_deadzone@deadzoneLow),w
  7951  03C5  024B               u275_25:
  7952  03C6                     
  7953                           	skipnc
  7954  03C6  1803               	goto	u275_21
  7955  03C7  2BC9               	goto	u275_20
  7956  03C8  2BCA               u275_21:
  7957  03C9                     	goto	i1l2640
  7958  03C9  2BDF               u275_20:
  7959  03CA                     	
  7960                           i1l2636:	
  7961  03CA                     	bcf	status, 5	;RP0=0, select bank0
  7962  03CA  1283               	bcf	status, 6	;RP1=0, select bank0
  7963  03CB  1303               	movf	(is_deadzone@adcResult+1),w
  7964  03CC  0848               	xorlw	80h
  7965  03CD  3A80               	movwf	(??_is_deadzone+0)+0
  7966  03CE  00C9               	movf	(is_deadzone@deadzoneHigh+1),w
  7967  03CF  084E               	xorlw	80h
  7968  03D0  3A80               	subwf	(??_is_deadzone+0)+0,w
  7969  03D1  0249               	skipz
  7970  03D2  1D03               	goto	u276_25
  7971  03D3  2BD6               	movf	(is_deadzone@deadzoneHigh),w
  7972  03D4  084D               	subwf	(is_deadzone@adcResult),w
  7973  03D5  0247               u276_25:
  7974  03D6                     
  7975                           	skipnc
  7976  03D6  1803               	goto	u276_21
  7977  03D7  2BD9               	goto	u276_20
  7978  03D8  2BDA               u276_21:
  7979  03D9                     	goto	i1l2640
  7980  03D9  2BDF               u276_20:
  7981  03DA                     	
  7982                           i1l2638:	
  7983  03DA                     	bcf	status, 5	;RP0=0, select bank0
  7984  03DA  1283               	bcf	status, 6	;RP1=0, select bank0
  7985  03DB  1303               	clrf	(_is_deadzone$890)
  7986  03DC  01CF               	incf	(_is_deadzone$890),f
  7987  03DD  0ACF               	goto	i1l2640
  7988  03DE  2BDF               	
  7989                           i1l325:	
  7990  03DF                     	
  7991                           i1l2640:	
  7992  03DF                     	bcf	status, 5	;RP0=0, select bank0
  7993  03DF  1283               	bcf	status, 6	;RP1=0, select bank0
  7994  03E0  1303               	movf	(_is_deadzone$890),w
  7995  03E1  084F               	movwf	(??_is_deadzone+0)+0
  7996  03E2  00C9               	clrf	(??_is_deadzone+0)+0+1
  7997  03E3  01CA               	movf	0+(??_is_deadzone+0)+0,w
  7998  03E4  0849               	movwf	(?_is_deadzone)
  7999  03E5  00C5               	movf	1+(??_is_deadzone+0)+0,w
  8000  03E6  084A               	movwf	(?_is_deadzone+1)
  8001  03E7  00C6               	goto	i1l326
  8002  03E8  2BE9               	
  8003                           i1l2642:	
  8004  03E9                     	line	28
  8005                           	
  8006                           i1l326:	
  8007  03E9                     	return
  8008  03E9  0008               	opt stack 0
  8009                           GLOBAL	__end_of_is_deadzone
  8010                           	__end_of_is_deadzone:
  8011  03EA                     	signat	_is_deadzone,8314
  8012                           	global	i1___wmul
  8013                           
  8014 ;; *************** function i1___wmul *****************
  8015 ;; Defined at:
  8016 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  multiplier      2    0[COMMON] unsigned int 
  8019 ;;  multiplicand    2    2[COMMON] unsigned int 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  __wmul          2    4[COMMON] unsigned int 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2    0[COMMON] unsigned int 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8031 ;;      Params:         4       0       0       0       0
  8032 ;;      Locals:         2       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0
  8034 ;;      Totals:         6       0       0       0       0
  8035 ;;Total ram usage:        6 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_is_deadzone
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  8044                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  8045                           	line	15
  8046                           global __ptext28
  8047                           __ptext28:	;psect for function i1___wmul
  8048  0B24                     psect	text28
  8049                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  8050                           	line	15
  8051                           	global	__size_ofi1___wmul
  8052                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  8053  0028                     	
  8054                           i1___wmul:	
  8055  0B24                     ;incstack = 0
  8056 ;; hardware stack exceeded
  8057                           	opt	stack 0
  8058                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  8059                           	line	43
  8060                           	
  8061                           i1l2486:	
  8062  0B24                     	clrf	(i1___wmul@product)
  8063  0B24  01F5               	clrf	(i1___wmul@product+1)
  8064  0B25  01F6               	goto	i1l2488
  8065  0B26  2B27               	line	44
  8066                           	
  8067                           i1l498:	
  8068  0B27                     	line	45
  8069                           	
  8070                           i1l2488:	
  8071  0B27                     	btfss	(i1___wmul@multiplier),(0)&7
  8072  0B27  1C71               	goto	u263_21
  8073  0B28  2B2A               	goto	u263_20
  8074  0B29  2B2B               u263_21:
  8075  0B2A                     	goto	i1l499
  8076  0B2A  2B31               u263_20:
  8077  0B2B                     	line	46
  8078                           	
  8079                           i1l2490:	
  8080  0B2B                     	movf	(i1___wmul@multiplicand),w
  8081  0B2B  0873               	addwf	(i1___wmul@product),f
  8082  0B2C  07F5               	skipnc
  8083  0B2D  1803               	incf	(i1___wmul@product+1),f
  8084  0B2E  0AF6               	movf	(i1___wmul@multiplicand+1),w
  8085  0B2F  0874               	addwf	(i1___wmul@product+1),f
  8086  0B30  07F6               	
  8087                           i1l499:	
  8088  0B31                     	line	47
  8089                           	movlw	01h
  8090  0B31  3001               	
  8091                           u264_25:
  8092  0B32                     	clrc
  8093  0B32  1003               	rlf	(i1___wmul@multiplicand),f
  8094  0B33  0DF3               	rlf	(i1___wmul@multiplicand+1),f
  8095  0B34  0DF4               	addlw	-1
  8096  0B35  3EFF               	skipz
  8097  0B36  1D03               	goto	u264_25
  8098  0B37  2B32               	line	48
  8099                           	
  8100                           i1l2492:	
  8101  0B38                     	movlw	01h
  8102  0B38  3001               	
  8103                           u265_25:
  8104  0B39                     	clrc
  8105  0B39  1003               	rrf	(i1___wmul@multiplier+1),f
  8106  0B3A  0CF2               	rrf	(i1___wmul@multiplier),f
  8107  0B3B  0CF1               	addlw	-1
  8108  0B3C  3EFF               	skipz
  8109  0B3D  1D03               	goto	u265_25
  8110  0B3E  2B39               	line	49
  8111                           	
  8112                           i1l2494:	
  8113  0B3F                     	movf	((i1___wmul@multiplier)),w
  8114  0B3F  0871               iorwf	((i1___wmul@multiplier+1)),w
  8115  0B40  0472               	btfss	status,2
  8116  0B41  1D03               	goto	u266_21
  8117  0B42  2B44               	goto	u266_20
  8118  0B43  2B45               u266_21:
  8119  0B44                     	goto	i1l2488
  8120  0B44  2B27               u266_20:
  8121  0B45                     	goto	i1l2496
  8122  0B45  2B46               	
  8123                           i1l500:	
  8124  0B46                     	line	52
  8125                           	
  8126                           i1l2496:	
  8127  0B46                     	movf	(i1___wmul@product+1),w
  8128  0B46  0876               	movwf	(?i1___wmul+1)
  8129  0B47  00F2               	movf	(i1___wmul@product),w
  8130  0B48  0875               	movwf	(?i1___wmul)
  8131  0B49  00F1               	goto	i1l501
  8132  0B4A  2B4B               	
  8133                           i1l2498:	
  8134  0B4B                     	line	53
  8135                           	
  8136                           i1l501:	
  8137  0B4B                     	return
  8138  0B4B  0008               	opt stack 0
  8139                           GLOBAL	__end_ofi1___wmul
  8140                           	__end_ofi1___wmul:
  8141  0B4C                     	signat	i1___wmul,90
  8142                           	global	___xxtofl
  8143                           
  8144 ;; *************** function ___xxtofl *****************
  8145 ;; Defined at:
  8146 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  8147 ;; Parameters:    Size  Location     Type
  8148 ;;  sign            1    wreg     unsigned char 
  8149 ;;  val             4    0[COMMON] long 
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;  sign            1    0[BANK0 ] unsigned char 
  8152 ;;  arg             4    2[BANK0 ] unsigned long 
  8153 ;;  exp             1    1[BANK0 ] unsigned char 
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  4    0[COMMON] unsigned char 
  8156 ;; Registers used:
  8157 ;;		wreg, status,2, status,0
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8163 ;;      Params:         4       0       0       0       0
  8164 ;;      Locals:         0       6       0       0       0
  8165 ;;      Temps:          4       0       0       0       0
  8166 ;;      Totals:         8       6       0       0       0
  8167 ;;Total ram usage:       14 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; This function calls:
  8170 ;;		Nothing
  8171 ;; This function is called by:
  8172 ;;		_is_deadzone
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
  8176                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  8177                           	line	10
  8178                           global __ptext29
  8179                           __ptext29:	;psect for function ___xxtofl
  8180  0260                     psect	text29
  8181                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  8182                           	line	10
  8183                           	global	__size_of___xxtofl
  8184                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  8185  00C4                     	
  8186                           ___xxtofl:	
  8187  0260                     ;incstack = 0
  8188 ;; hardware stack exceeded
  8189                           	opt	stack 0
  8190                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8191                           ;___xxtofl@sign stored from wreg
  8192                           	bcf	status, 5	;RP0=0, select bank0
  8193  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  8194  0261  1303               	movwf	(___xxtofl@sign)
  8195  0262  00A0               	line	15
  8196                           	
  8197                           i1l2442:	
  8198  0263                     	movf	((___xxtofl@sign)),w
  8199  0263  0820               	btfsc	status,2
  8200  0264  1903               	goto	u249_21
  8201  0265  2A67               	goto	u249_20
  8202  0266  2A68               u249_21:
  8203  0267                     	goto	i1l2448
  8204  0267  2A7C               u249_20:
  8205  0268                     	
  8206                           i1l2444:	
  8207  0268                     	btfss	(___xxtofl@val+3),7
  8208  0268  1FF4               	goto	u250_21
  8209  0269  2A6B               	goto	u250_20
  8210  026A  2A6C               u250_21:
  8211  026B                     	goto	i1l2448
  8212  026B  2A7C               u250_20:
  8213  026C                     	line	16
  8214                           	
  8215                           i1l2446:	
  8216  026C                     	comf	(___xxtofl@val)+0,w
  8217  026C  0971               	movwf	(___xxtofl@arg)
  8218  026D  00A2               	comf	(___xxtofl@val)+1,w
  8219  026E  0972               	movwf	(___xxtofl@arg+1)
  8220  026F  00A3               	comf	(___xxtofl@val)+2,w
  8221  0270  0973               	movwf	(___xxtofl@arg+2)
  8222  0271  00A4               	comf	(___xxtofl@val)+3,w
  8223  0272  0974               	movwf	(___xxtofl@arg+3)
  8224  0273  00A5               	incf	(___xxtofl@arg),f
  8225  0274  0AA2               	skipnz
  8226  0275  1903               	incf	(___xxtofl@arg+1),f
  8227  0276  0AA3               	skipnz
  8228  0277  1903               	incf	(___xxtofl@arg+2),f
  8229  0278  0AA4               	skipnz
  8230  0279  1903               	incf	(___xxtofl@arg+3),f
  8231  027A  0AA5               	line	17
  8232                           	goto	i1l907
  8233  027B  2A84               	line	18
  8234                           	
  8235                           i1l906:	
  8236  027C                     	line	19
  8237                           	
  8238                           i1l2448:	
  8239  027C                     	movf	(___xxtofl@val+3),w
  8240  027C  0874               	movwf	(___xxtofl@arg+3)
  8241  027D  00A5               	movf	(___xxtofl@val+2),w
  8242  027E  0873               	movwf	(___xxtofl@arg+2)
  8243  027F  00A4               	movf	(___xxtofl@val+1),w
  8244  0280  0872               	movwf	(___xxtofl@arg+1)
  8245  0281  00A3               	movf	(___xxtofl@val),w
  8246  0282  0871               	movwf	(___xxtofl@arg)
  8247  0283  00A2               
  8248                           	line	20
  8249                           	
  8250                           i1l907:	
  8251  0284                     	line	21
  8252                           	movf	(___xxtofl@val+3),w
  8253  0284  0874               	iorwf	(___xxtofl@val+2),w
  8254  0285  0473               	iorwf	(___xxtofl@val+1),w
  8255  0286  0472               	iorwf	(___xxtofl@val),w
  8256  0287  0471               	skipz
  8257  0288  1D03               	goto	u251_21
  8258  0289  2A8B               	goto	u251_20
  8259  028A  2A8C               u251_21:
  8260  028B                     	goto	i1l2454
  8261  028B  2A96               u251_20:
  8262  028C                     	line	22
  8263                           	
  8264                           i1l2450:	
  8265  028C                     	movlw	0x0
  8266  028C  3000               	movwf	(?___xxtofl+3)
  8267  028D  00F4               	movlw	0x0
  8268  028E  3000               	movwf	(?___xxtofl+2)
  8269  028F  00F3               	movlw	0x0
  8270  0290  3000               	movwf	(?___xxtofl+1)
  8271  0291  00F2               	movlw	0x0
  8272  0292  3000               	movwf	(?___xxtofl)
  8273  0293  00F1               
  8274                           	goto	i1l909
  8275  0294  2B23               	
  8276                           i1l2452:	
  8277  0295                     	goto	i1l909
  8278  0295  2B23               	
  8279                           i1l908:	
  8280  0296                     	line	23
  8281                           	
  8282                           i1l2454:	
  8283  0296                     	movlw	low(096h)
  8284  0296  3096               	movwf	(??___xxtofl+0)+0
  8285  0297  00F5               	movf	(??___xxtofl+0)+0,w
  8286  0298  0875               	movwf	(___xxtofl@exp)
  8287  0299  00A1               	line	24
  8288                           	goto	i1l2458
  8289  029A  2AA9               	
  8290                           i1l911:	
  8291  029B                     	line	25
  8292                           	
  8293                           i1l2456:	
  8294  029B                     	movlw	low(01h)
  8295  029B  3001               	movwf	(??___xxtofl+0)+0
  8296  029C  00F5               	movf	(??___xxtofl+0)+0,w
  8297  029D  0875               	addwf	(___xxtofl@exp),f
  8298  029E  07A1               	line	26
  8299                           	movlw	01h
  8300  029F  3001               u252_25:
  8301  02A0                     	clrc
  8302  02A0  1003               	rrf	(___xxtofl@arg+3),f
  8303  02A1  0CA5               	rrf	(___xxtofl@arg+2),f
  8304  02A2  0CA4               	rrf	(___xxtofl@arg+1),f
  8305  02A3  0CA3               	rrf	(___xxtofl@arg),f
  8306  02A4  0CA2               	addlw	-1
  8307  02A5  3EFF               	skipz
  8308  02A6  1D03               	goto	u252_25
  8309  02A7  2AA0               
  8310                           	goto	i1l2458
  8311  02A8  2AA9               	line	27
  8312                           	
  8313                           i1l910:	
  8314  02A9                     	line	24
  8315                           	
  8316                           i1l2458:	
  8317  02A9                     	movlw	high highword(0FE000000h)
  8318  02A9  30FE               	andwf	(___xxtofl@arg+3),w
  8319  02AA  0525               	btfss	status,2
  8320  02AB  1D03               	goto	u253_21
  8321  02AC  2AAE               	goto	u253_20
  8322  02AD  2AAF               u253_21:
  8323  02AE                     	goto	i1l2456
  8324  02AE  2A9B               u253_20:
  8325  02AF                     	goto	i1l913
  8326  02AF  2ACC               	
  8327                           i1l912:	
  8328  02B0                     	line	28
  8329                           	goto	i1l913
  8330  02B0  2ACC               	
  8331                           i1l914:	
  8332  02B1                     	line	29
  8333                           	
  8334                           i1l2460:	
  8335  02B1                     	movlw	low(01h)
  8336  02B1  3001               	movwf	(??___xxtofl+0)+0
  8337  02B2  00F5               	movf	(??___xxtofl+0)+0,w
  8338  02B3  0875               	addwf	(___xxtofl@exp),f
  8339  02B4  07A1               	line	30
  8340                           	
  8341                           i1l2462:	
  8342  02B5                     	movlw	01h
  8343  02B5  3001               	addwf	(___xxtofl@arg),f
  8344  02B6  07A2               	movlw	0
  8345  02B7  3000               	skipnc
  8346  02B8  1803               movlw 1
  8347  02B9  3001               	addwf	(___xxtofl@arg+1),f
  8348  02BA  07A3               	movlw	0
  8349  02BB  3000               	skipnc
  8350  02BC  1803               movlw 1
  8351  02BD  3001               	addwf	(___xxtofl@arg+2),f
  8352  02BE  07A4               	movlw	0
  8353  02BF  3000               	skipnc
  8354  02C0  1803               movlw 1
  8355  02C1  3001               	addwf	(___xxtofl@arg+3),f
  8356  02C2  07A5               	line	31
  8357                           	
  8358                           i1l2464:	
  8359  02C3                     	movlw	01h
  8360  02C3  3001               u254_25:
  8361  02C4                     	clrc
  8362  02C4  1003               	rrf	(___xxtofl@arg+3),f
  8363  02C5  0CA5               	rrf	(___xxtofl@arg+2),f
  8364  02C6  0CA4               	rrf	(___xxtofl@arg+1),f
  8365  02C7  0CA3               	rrf	(___xxtofl@arg),f
  8366  02C8  0CA2               	addlw	-1
  8367  02C9  3EFF               	skipz
  8368  02CA  1D03               	goto	u254_25
  8369  02CB  2AC4               
  8370                           	line	32
  8371                           	
  8372                           i1l913:	
  8373  02CC                     	line	28
  8374                           	movlw	high highword(0FF000000h)
  8375  02CC  30FF               	andwf	(___xxtofl@arg+3),w
  8376  02CD  0525               	btfss	status,2
  8377  02CE  1D03               	goto	u255_21
  8378  02CF  2AD1               	goto	u255_20
  8379  02D0  2AD2               u255_21:
  8380  02D1                     	goto	i1l2460
  8381  02D1  2AB1               u255_20:
  8382  02D2                     	goto	i1l2468
  8383  02D2  2AE0               	
  8384                           i1l915:	
  8385  02D3                     	line	33
  8386                           	goto	i1l2468
  8387  02D3  2AE0               	
  8388                           i1l917:	
  8389  02D4                     	line	34
  8390                           	
  8391                           i1l2466:	
  8392  02D4                     	movlw	01h
  8393  02D4  3001               	subwf	(___xxtofl@exp),f
  8394  02D5  02A1               	line	35
  8395                           	movlw	01h
  8396  02D6  3001               	movwf	(??___xxtofl+0)+0
  8397  02D7  00F5               u256_25:
  8398  02D8                     	clrc
  8399  02D8  1003               	rlf	(___xxtofl@arg),f
  8400  02D9  0DA2               	rlf	(___xxtofl@arg+1),f
  8401  02DA  0DA3               	rlf	(___xxtofl@arg+2),f
  8402  02DB  0DA4               	rlf	(___xxtofl@arg+3),f
  8403  02DC  0DA5               	decfsz	(??___xxtofl+0)+0
  8404  02DD  0BF5               	goto	u256_25
  8405  02DE  2AD8               	goto	i1l2468
  8406  02DF  2AE0               	line	36
  8407                           	
  8408                           i1l916:	
  8409  02E0                     	line	33
  8410                           	
  8411                           i1l2468:	
  8412  02E0                     	btfsc	(___xxtofl@arg+2),(23)&7
  8413  02E0  1BA4               	goto	u257_21
  8414  02E1  2AE3               	goto	u257_20
  8415  02E2  2AE4               u257_21:
  8416  02E3                     	goto	i1l920
  8417  02E3  2AEB               u257_20:
  8418  02E4                     	
  8419                           i1l2470:	
  8420  02E4                     	movlw	low(02h)
  8421  02E4  3002               	subwf	(___xxtofl@exp),w
  8422  02E5  0221               	skipnc
  8423  02E6  1803               	goto	u258_21
  8424  02E7  2AE9               	goto	u258_20
  8425  02E8  2AEA               u258_21:
  8426  02E9                     	goto	i1l2466
  8427  02E9  2AD4               u258_20:
  8428  02EA                     	goto	i1l920
  8429  02EA  2AEB               	
  8430                           i1l919:	
  8431  02EB                     	
  8432                           i1l920:	
  8433  02EB                     	line	37
  8434                           	btfsc	(___xxtofl@exp),(0)&7
  8435  02EB  1821               	goto	u259_21
  8436  02EC  2AEE               	goto	u259_20
  8437  02ED  2AEF               u259_21:
  8438  02EE                     	goto	i1l921
  8439  02EE  2AF7               u259_20:
  8440  02EF                     	line	38
  8441                           	
  8442                           i1l2472:	
  8443  02EF                     	movlw	0FFh
  8444  02EF  30FF               	andwf	(___xxtofl@arg),f
  8445  02F0  05A2               	movlw	0FFh
  8446  02F1  30FF               	andwf	(___xxtofl@arg+1),f
  8447  02F2  05A3               	movlw	07Fh
  8448  02F3  307F               	andwf	(___xxtofl@arg+2),f
  8449  02F4  05A4               	movlw	0FFh
  8450  02F5  30FF               	andwf	(___xxtofl@arg+3),f
  8451  02F6  05A5               	
  8452                           i1l921:	
  8453  02F7                     	line	39
  8454                           	clrc
  8455  02F7  1003               	rrf	(___xxtofl@exp),f
  8456  02F8  0CA1               
  8457                           	line	40
  8458                           	
  8459                           i1l2474:	
  8460  02F9                     	movf	(___xxtofl@exp),w
  8461  02F9  0821               	movwf	(??___xxtofl+0)+0
  8462  02FA  00F5               	clrf	(??___xxtofl+0)+0+1
  8463  02FB  01F6               	clrf	(??___xxtofl+0)+0+2
  8464  02FC  01F7               	clrf	(??___xxtofl+0)+0+3
  8465  02FD  01F8               	movlw	018h
  8466  02FE  3018               u260_25:
  8467  02FF                     	clrc
  8468  02FF  1003               	rlf	(??___xxtofl+0)+0,f
  8469  0300  0DF5               	rlf	(??___xxtofl+0)+1,f
  8470  0301  0DF6               	rlf	(??___xxtofl+0)+2,f
  8471  0302  0DF7               	rlf	(??___xxtofl+0)+3,f
  8472  0303  0DF8               u260_20:
  8473  0304                     	addlw	-1
  8474  0304  3EFF               	skipz
  8475  0305  1D03               	goto	u260_25
  8476  0306  2AFF               	movf	0+(??___xxtofl+0)+0,w
  8477  0307  0875               	iorwf	(___xxtofl@arg),f
  8478  0308  04A2               	movf	1+(??___xxtofl+0)+0,w
  8479  0309  0876               	iorwf	(___xxtofl@arg+1),f
  8480  030A  04A3               	movf	2+(??___xxtofl+0)+0,w
  8481  030B  0877               	iorwf	(___xxtofl@arg+2),f
  8482  030C  04A4               	movf	3+(??___xxtofl+0)+0,w
  8483  030D  0878               	iorwf	(___xxtofl@arg+3),f
  8484  030E  04A5               	line	41
  8485                           	
  8486                           i1l2476:	
  8487  030F                     	movf	((___xxtofl@sign)),w
  8488  030F  0820               	btfsc	status,2
  8489  0310  1903               	goto	u261_21
  8490  0311  2B13               	goto	u261_20
  8491  0312  2B14               u261_21:
  8492  0313                     	goto	i1l2482
  8493  0313  2B1A               u261_20:
  8494  0314                     	
  8495                           i1l2478:	
  8496  0314                     	btfss	(___xxtofl@val+3),7
  8497  0314  1FF4               	goto	u262_21
  8498  0315  2B17               	goto	u262_20
  8499  0316  2B18               u262_21:
  8500  0317                     	goto	i1l2482
  8501  0317  2B1A               u262_20:
  8502  0318                     	line	42
  8503                           	
  8504                           i1l2480:	
  8505  0318                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  8506  0318  17A5               	goto	i1l2482
  8507  0319  2B1A               	
  8508                           i1l922:	
  8509  031A                     	line	43
  8510                           	
  8511                           i1l2482:	
  8512  031A                     	movf	(___xxtofl@arg+3),w
  8513  031A  0825               	movwf	(?___xxtofl+3)
  8514  031B  00F4               	movf	(___xxtofl@arg+2),w
  8515  031C  0824               	movwf	(?___xxtofl+2)
  8516  031D  00F3               	movf	(___xxtofl@arg+1),w
  8517  031E  0823               	movwf	(?___xxtofl+1)
  8518  031F  00F2               	movf	(___xxtofl@arg),w
  8519  0320  0822               	movwf	(?___xxtofl)
  8520  0321  00F1               
  8521                           	goto	i1l909
  8522  0322  2B23               	
  8523                           i1l2484:	
  8524  0323                     	line	44
  8525                           	
  8526                           i1l909:	
  8527  0323                     	return
  8528  0323  0008               	opt stack 0
  8529                           GLOBAL	__end_of___xxtofl
  8530                           	__end_of___xxtofl:
  8531  0324                     	signat	___xxtofl,8316
  8532                           	global	___fltol
  8533                           
  8534 ;; *************** function ___fltol *****************
  8535 ;; Defined at:
  8536 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  f1              4   26[BANK0 ] unsigned char 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;  exp1            1   36[BANK0 ] unsigned char 
  8541 ;;  sign1           1   35[BANK0 ] unsigned char 
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  4   26[BANK0 ] long 
  8544 ;; Registers used:
  8545 ;;		wreg, status,2, status,0
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/0
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8551 ;;      Params:         0       4       0       0       0
  8552 ;;      Locals:         0       2       0       0       0
  8553 ;;      Temps:          0       5       0       0       0
  8554 ;;      Totals:         0      11       0       0       0
  8555 ;;Total ram usage:       11 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; This function calls:
  8558 ;;		Nothing
  8559 ;; This function is called by:
  8560 ;;		_is_deadzone
  8561 ;; This function uses a non-reentrant model
  8562 ;;
  8563                           psect	text30,local,class=CODE,delta=2,merge=1,group=1
  8564                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  8565                           	line	43
  8566                           global __ptext30
  8567                           __ptext30:	;psect for function ___fltol
  8568  01C4                     psect	text30
  8569                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  8570                           	line	43
  8571                           	global	__size_of___fltol
  8572                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  8573  009C                     	
  8574                           ___fltol:	
  8575  01C4                     ;incstack = 0
  8576 ;; hardware stack exceeded
  8577                           	opt	stack 0
  8578                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8579                           	line	47
  8580                           	
  8581                           i1l2212:	
  8582  01C4                     	bcf	status, 5	;RP0=0, select bank0
  8583  01C4  1283               	bcf	status, 6	;RP1=0, select bank0
  8584  01C5  1303               	movf	(___fltol@f1),w
  8585  01C6  083A               	movwf	(??___fltol+0)+0
  8586  01C7  00BE               	movf	(___fltol@f1+1),w
  8587  01C8  083B               	movwf	((??___fltol+0)+0+1)
  8588  01C9  00BF               	movf	(___fltol@f1+2),w
  8589  01CA  083C               	movwf	((??___fltol+0)+0+2)
  8590  01CB  00C0               	movf	(___fltol@f1+3),w
  8591  01CC  083D               	movwf	((??___fltol+0)+0+3)
  8592  01CD  00C1               	clrc
  8593  01CE  1003               	rlf	(??___fltol+0)+2,w
  8594  01CF  0D40               	rlf	(??___fltol+0)+3,w
  8595  01D0  0D41               	movwf	(??___fltol+4)+0
  8596  01D1  00C2               	movf	(??___fltol+4)+0,w
  8597  01D2  0842               	movwf	(___fltol@exp1)
  8598  01D3  00C4               	movf	(((___fltol@exp1))),w
  8599  01D4  0844               	btfss	status,2
  8600  01D5  1D03               	goto	u193_21
  8601  01D6  29D8               	goto	u193_20
  8602  01D7  29D9               u193_21:
  8603  01D8                     	goto	i1l2218
  8604  01D8  29E3               u193_20:
  8605  01D9                     	line	48
  8606                           	
  8607                           i1l2214:	
  8608  01D9                     	movlw	high highword(0)
  8609  01D9  3000               	movwf	(?___fltol+3)
  8610  01DA  00BD               	movlw	low highword(0)
  8611  01DB  3000               	movwf	(?___fltol+2)
  8612  01DC  00BC               	movlw	high(0)
  8613  01DD  3000               	movwf	(?___fltol+1)
  8614  01DE  00BB               	movlw	low(0)
  8615  01DF  3000               	movwf	(?___fltol)
  8616  01E0  00BA               
  8617                           	goto	i1l685
  8618  01E1  2A5F               	
  8619                           i1l2216:	
  8620  01E2                     	goto	i1l685
  8621  01E2  2A5F               	
  8622                           i1l684:	
  8623  01E3                     	line	49
  8624                           	
  8625                           i1l2218:	
  8626  01E3                     	movf	(___fltol@f1),w
  8627  01E3  083A               	movwf	(??___fltol+0)+0
  8628  01E4  00BE               	movf	(___fltol@f1+1),w
  8629  01E5  083B               	movwf	((??___fltol+0)+0+1)
  8630  01E6  00BF               	movf	(___fltol@f1+2),w
  8631  01E7  083C               	movwf	((??___fltol+0)+0+2)
  8632  01E8  00C0               	movf	(___fltol@f1+3),w
  8633  01E9  083D               	movwf	((??___fltol+0)+0+3)
  8634  01EA  00C1               	movlw	01Fh
  8635  01EB  301F               u194_25:
  8636  01EC                     	clrc
  8637  01EC  1003               	rrf	(??___fltol+0)+3,f
  8638  01ED  0CC1               	rrf	(??___fltol+0)+2,f
  8639  01EE  0CC0               	rrf	(??___fltol+0)+1,f
  8640  01EF  0CBF               	rrf	(??___fltol+0)+0,f
  8641  01F0  0CBE               u194_20:
  8642  01F1                     	addlw	-1
  8643  01F1  3EFF               	skipz
  8644  01F2  1D03               	goto	u194_25
  8645  01F3  29EC               	movf	0+(??___fltol+0)+0,w
  8646  01F4  083E               	movwf	(??___fltol+4)+0
  8647  01F5  00C2               	movf	(??___fltol+4)+0,w
  8648  01F6  0842               	movwf	(___fltol@sign1)
  8649  01F7  00C3               	line	50
  8650                           	
  8651                           i1l2220:	
  8652  01F8                     	bsf	(___fltol@f1)+(23/8),(23)&7
  8653  01F8  17BC               	line	51
  8654                           	
  8655                           i1l2222:	
  8656  01F9                     	movlw	0FFh
  8657  01F9  30FF               	andwf	(___fltol@f1),f
  8658  01FA  05BA               	movlw	0FFh
  8659  01FB  30FF               	andwf	(___fltol@f1+1),f
  8660  01FC  05BB               	movlw	0FFh
  8661  01FD  30FF               	andwf	(___fltol@f1+2),f
  8662  01FE  05BC               	movlw	0
  8663  01FF  3000               	andwf	(___fltol@f1+3),f
  8664  0200  05BD               	line	52
  8665                           	
  8666                           i1l2224:	
  8667  0201                     	movlw	096h
  8668  0201  3096               	subwf	(___fltol@exp1),f
  8669  0202  02C4               	line	53
  8670                           	
  8671                           i1l2226:	
  8672  0203                     	btfss	(___fltol@exp1),7
  8673  0203  1FC4               	goto	u195_21
  8674  0204  2A06               	goto	u195_20
  8675  0205  2A07               u195_21:
  8676  0206                     	goto	i1l2236
  8677  0206  2A2C               u195_20:
  8678  0207                     	line	54
  8679                           	
  8680                           i1l2228:	
  8681  0207                     	movf	(___fltol@exp1),w
  8682  0207  0844               	xorlw	80h
  8683  0208  3A80               	addlw	-((-23)^80h)
  8684  0209  3E97               	skipnc
  8685  020A  1803               	goto	u196_21
  8686  020B  2A0D               	goto	u196_20
  8687  020C  2A0E               u196_21:
  8688  020D                     	goto	i1l2234
  8689  020D  2A19               u196_20:
  8690  020E                     	line	55
  8691                           	
  8692                           i1l2230:	
  8693  020E                     	movlw	high highword(0)
  8694  020E  3000               	movwf	(?___fltol+3)
  8695  020F  00BD               	movlw	low highword(0)
  8696  0210  3000               	movwf	(?___fltol+2)
  8697  0211  00BC               	movlw	high(0)
  8698  0212  3000               	movwf	(?___fltol+1)
  8699  0213  00BB               	movlw	low(0)
  8700  0214  3000               	movwf	(?___fltol)
  8701  0215  00BA               
  8702                           	goto	i1l685
  8703  0216  2A5F               	
  8704                           i1l2232:	
  8705  0217                     	goto	i1l685
  8706  0217  2A5F               	
  8707                           i1l687:	
  8708  0218                     	goto	i1l2234
  8709  0218  2A19               	line	56
  8710                           	
  8711                           i1l688:	
  8712  0219                     	line	57
  8713                           	
  8714                           i1l2234:	
  8715  0219                     	movlw	01h
  8716  0219  3001               u197_25:
  8717  021A                     	clrc
  8718  021A  1003               	rrf	(___fltol@f1+3),f
  8719  021B  0CBD               	rrf	(___fltol@f1+2),f
  8720  021C  0CBC               	rrf	(___fltol@f1+1),f
  8721  021D  0CBB               	rrf	(___fltol@f1),f
  8722  021E  0CBA               	addlw	-1
  8723  021F  3EFF               	skipz
  8724  0220  1D03               	goto	u197_25
  8725  0221  2A1A               
  8726                           	line	58
  8727                           	movlw	low(01h)
  8728  0222  3001               	movwf	(??___fltol+0)+0
  8729  0223  00BE               	movf	(??___fltol+0)+0,w
  8730  0224  083E               	addwf	(___fltol@exp1),f
  8731  0225  07C4               	btfss	status,2
  8732  0226  1D03               	goto	u198_21
  8733  0227  2A29               	goto	u198_20
  8734  0228  2A2A               u198_21:
  8735  0229                     	goto	i1l2234
  8736  0229  2A19               u198_20:
  8737  022A                     	goto	i1l2244
  8738  022A  2A4F               	
  8739                           i1l689:	
  8740  022B                     	line	59
  8741                           	goto	i1l2244
  8742  022B  2A4F               	
  8743                           i1l686:	
  8744  022C                     	line	60
  8745                           	
  8746                           i1l2236:	
  8747  022C                     	movlw	low(020h)
  8748  022C  3020               	subwf	(___fltol@exp1),w
  8749  022D  0244               	skipc
  8750  022E  1C03               	goto	u199_21
  8751  022F  2A31               	goto	u199_20
  8752  0230  2A32               u199_21:
  8753  0231                     	goto	i1l692
  8754  0231  2A48               u199_20:
  8755  0232                     	line	61
  8756                           	
  8757                           i1l2238:	
  8758  0232                     	movlw	high highword(0)
  8759  0232  3000               	movwf	(?___fltol+3)
  8760  0233  00BD               	movlw	low highword(0)
  8761  0234  3000               	movwf	(?___fltol+2)
  8762  0235  00BC               	movlw	high(0)
  8763  0236  3000               	movwf	(?___fltol+1)
  8764  0237  00BB               	movlw	low(0)
  8765  0238  3000               	movwf	(?___fltol)
  8766  0239  00BA               
  8767                           	goto	i1l685
  8768  023A  2A5F               	
  8769                           i1l2240:	
  8770  023B                     	goto	i1l685
  8771  023B  2A5F               	
  8772                           i1l691:	
  8773  023C                     	line	62
  8774                           	goto	i1l692
  8775  023C  2A48               	
  8776                           i1l693:	
  8777  023D                     	line	63
  8778                           	
  8779                           i1l2242:	
  8780  023D                     	movlw	01h
  8781  023D  3001               	movwf	(??___fltol+0)+0
  8782  023E  00BE               u200_25:
  8783  023F                     	clrc
  8784  023F  1003               	rlf	(___fltol@f1),f
  8785  0240  0DBA               	rlf	(___fltol@f1+1),f
  8786  0241  0DBB               	rlf	(___fltol@f1+2),f
  8787  0242  0DBC               	rlf	(___fltol@f1+3),f
  8788  0243  0DBD               	decfsz	(??___fltol+0)+0
  8789  0244  0BBE               	goto	u200_25
  8790  0245  2A3F               	line	64
  8791                           	movlw	01h
  8792  0246  3001               	subwf	(___fltol@exp1),f
  8793  0247  02C4               	line	65
  8794                           	
  8795                           i1l692:	
  8796  0248                     	line	62
  8797                           	movf	((___fltol@exp1)),w
  8798  0248  0844               	btfss	status,2
  8799  0249  1D03               	goto	u201_21
  8800  024A  2A4C               	goto	u201_20
  8801  024B  2A4D               u201_21:
  8802  024C                     	goto	i1l2242
  8803  024C  2A3D               u201_20:
  8804  024D                     	goto	i1l2244
  8805  024D  2A4F               	
  8806                           i1l694:	
  8807  024E                     	goto	i1l2244
  8808  024E  2A4F               	line	66
  8809                           	
  8810                           i1l690:	
  8811  024F                     	line	67
  8812                           	
  8813                           i1l2244:	
  8814  024F                     	movf	((___fltol@sign1)),w
  8815  024F  0843               	btfsc	status,2
  8816  0250  1903               	goto	u202_21
  8817  0251  2A53               	goto	u202_20
  8818  0252  2A54               u202_21:
  8819  0253                     	goto	i1l695
  8820  0253  2A5F               u202_20:
  8821  0254                     	line	68
  8822                           	
  8823                           i1l2246:	
  8824  0254                     	comf	(___fltol@f1),f
  8825  0254  09BA               	comf	(___fltol@f1+1),f
  8826  0255  09BB               	comf	(___fltol@f1+2),f
  8827  0256  09BC               	comf	(___fltol@f1+3),f
  8828  0257  09BD               	incf	(___fltol@f1),f
  8829  0258  0ABA               	skipnz
  8830  0259  1903               	incf	(___fltol@f1+1),f
  8831  025A  0ABB               	skipnz
  8832  025B  1903               	incf	(___fltol@f1+2),f
  8833  025C  0ABC               	skipnz
  8834  025D  1903               	incf	(___fltol@f1+3),f
  8835  025E  0ABD               	
  8836                           i1l695:	
  8837  025F                     	line	69
  8838                           	line	70
  8839                           	
  8840                           i1l685:	
  8841  025F                     	return
  8842  025F  0008               	opt stack 0
  8843                           GLOBAL	__end_of___fltol
  8844                           	__end_of___fltol:
  8845  0260                     	signat	___fltol,4220
  8846                           	global	___fladd
  8847                           
  8848 ;; *************** function ___fladd *****************
  8849 ;; Defined at:
  8850 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;  b               4    6[BANK0 ] long 
  8853 ;;  a               4   10[BANK0 ] long 
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;  grs             1   11[COMMON] unsigned char 
  8856 ;;  bexp            1   10[COMMON] unsigned char 
  8857 ;;  aexp            1    9[COMMON] unsigned char 
  8858 ;;  signs           1    8[COMMON] unsigned char 
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  4    6[BANK0 ] unsigned char 
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0, btemp+1
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8868 ;;      Params:         0       8       0       0       0
  8869 ;;      Locals:         4       0       0       0       0
  8870 ;;      Temps:          0      12       0       0       0
  8871 ;;      Totals:         4      20       0       0       0
  8872 ;;Total ram usage:       24 bytes
  8873 ;; Hardware stack levels used:    1
  8874 ;; This function calls:
  8875 ;;		Nothing
  8876 ;; This function is called by:
  8877 ;;		_is_deadzone
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           psect	text31,local,class=CODE,delta=2,merge=1,group=1
  8881                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8882                           	line	10
  8883                           global __ptext31
  8884                           __ptext31:	;psect for function ___fladd
  8885  0520                     psect	text31
  8886                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8887                           	line	10
  8888                           	global	__size_of___fladd
  8889                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8890  02C4                     	
  8891                           ___fladd:	
  8892  0520                     ;incstack = 0
  8893 ;; hardware stack exceeded
  8894                           	opt	stack 0
  8895                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8896                           	line	21
  8897                           	
  8898                           i1l2248:	
  8899  0520                     	bcf	status, 5	;RP0=0, select bank0
  8900  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  8901  0521  1303               	movf	0+(___fladd@b)+03h,w
  8902  0522  0829               	andlw	080h
  8903  0523  3980               	movwf	(??___fladd+0)+0
  8904  0524  00AE               	movf	(??___fladd+0)+0,w
  8905  0525  082E               	movwf	(___fladd@signs)
  8906  0526  00F9               	line	22
  8907                           	
  8908                           i1l2250:	
  8909  0527                     	movf	0+(___fladd@b)+03h,w
  8910  0527  0829               	movwf	(??___fladd+0)+0
  8911  0528  00AE               	addwf	(??___fladd+0)+0,w
  8912  0529  072E               	movwf	(??___fladd+1)+0
  8913  052A  00AF               	movf	(??___fladd+1)+0,w
  8914  052B  082F               	movwf	(___fladd@bexp)
  8915  052C  00FB               	line	23
  8916                           	
  8917                           i1l2252:	
  8918  052D                     	btfss	0+(___fladd@b)+02h,(7)&7
  8919  052D  1FA8               	goto	u203_21
  8920  052E  2D30               	goto	u203_20
  8921  052F  2D31               u203_21:
  8922  0530                     	goto	i1l2256
  8923  0530  2D33               u203_20:
  8924  0531                     	line	24
  8925                           	
  8926                           i1l2254:	
  8927  0531                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8928  0531  147B               	goto	i1l2256
  8929  0532  2D33               	line	25
  8930                           	
  8931                           i1l784:	
  8932  0533                     	line	28
  8933                           	
  8934                           i1l2256:	
  8935  0533                     	movf	((___fladd@bexp)),w
  8936  0533  087B               	btfsc	status,2
  8937  0534  1903               	goto	u204_21
  8938  0535  2D37               	goto	u204_20
  8939  0536  2D38               u204_21:
  8940  0537                     	goto	i1l2266
  8941  0537  2D49               u204_20:
  8942  0538                     	line	30
  8943                           	
  8944                           i1l2258:	
  8945  0538                     		incf	((___fladd@bexp)),w
  8946  0538  0A7B               	btfss	status,2
  8947  0539  1D03               	goto	u205_21
  8948  053A  2D3C               	goto	u205_20
  8949  053B  2D3D               u205_21:
  8950  053C                     	goto	i1l2262
  8951  053C  2D46               u205_20:
  8952  053D                     	line	32
  8953                           	
  8954                           i1l2260:	
  8955  053D                     	movlw	0x0
  8956  053D  3000               	movwf	(___fladd@b+3)
  8957  053E  00A9               	movlw	0x0
  8958  053F  3000               	movwf	(___fladd@b+2)
  8959  0540  00A8               	movlw	0x0
  8960  0541  3000               	movwf	(___fladd@b+1)
  8961  0542  00A7               	movlw	0x0
  8962  0543  3000               	movwf	(___fladd@b)
  8963  0544  00A6               
  8964                           	goto	i1l2262
  8965  0545  2D46               	line	33
  8966                           	
  8967                           i1l786:	
  8968  0546                     	line	35
  8969                           	
  8970                           i1l2262:	
  8971  0546                     	bsf	(___fladd@b)+(23/8),(23)&7
  8972  0546  17A8               	line	37
  8973                           	
  8974                           i1l2264:	
  8975  0547                     	clrf	0+(___fladd@b)+03h
  8976  0547  01A9               	line	38
  8977                           	goto	i1l2268
  8978  0548  2D52               	line	39
  8979                           	
  8980                           i1l785:	
  8981  0549                     	line	41
  8982                           	
  8983                           i1l2266:	
  8984  0549                     	movlw	0x0
  8985  0549  3000               	movwf	(___fladd@b+3)
  8986  054A  00A9               	movlw	0x0
  8987  054B  3000               	movwf	(___fladd@b+2)
  8988  054C  00A8               	movlw	0x0
  8989  054D  3000               	movwf	(___fladd@b+1)
  8990  054E  00A7               	movlw	0x0
  8991  054F  3000               	movwf	(___fladd@b)
  8992  0550  00A6               
  8993                           	goto	i1l2268
  8994  0551  2D52               	line	42
  8995                           	
  8996                           i1l787:	
  8997  0552                     	line	44
  8998                           	
  8999                           i1l2268:	
  9000  0552                     	movf	0+(___fladd@a)+03h,w
  9001  0552  082D               	andlw	080h
  9002  0553  3980               	movwf	(??___fladd+0)+0
  9003  0554  00AE               	movf	(??___fladd+0)+0,w
  9004  0555  082E               	movwf	(___fladd@aexp)
  9005  0556  00FA               	line	46
  9006                           	
  9007                           i1l2270:	
  9008  0557                     	movf	(___fladd@aexp),w
  9009  0557  087A               	xorwf	(___fladd@signs),w
  9010  0558  0679               	skipnz
  9011  0559  1903               	goto	u206_21
  9012  055A  2D5C               	goto	u206_20
  9013  055B  2D5D               u206_21:
  9014  055C                     	goto	i1l2274
  9015  055C  2D5F               u206_20:
  9016  055D                     	line	47
  9017                           	
  9018                           i1l2272:	
  9019  055D                     	bsf	(___fladd@signs)+(6/8),(6)&7
  9020  055D  1779               	goto	i1l2274
  9021  055E  2D5F               	line	48
  9022                           	
  9023                           i1l788:	
  9024  055F                     	line	49
  9025                           	
  9026                           i1l2274:	
  9027  055F                     	movf	0+(___fladd@a)+03h,w
  9028  055F  082D               	movwf	(??___fladd+0)+0
  9029  0560  00AE               	addwf	(??___fladd+0)+0,w
  9030  0561  072E               	movwf	(??___fladd+1)+0
  9031  0562  00AF               	movf	(??___fladd+1)+0,w
  9032  0563  082F               	movwf	(___fladd@aexp)
  9033  0564  00FA               	line	50
  9034                           	
  9035                           i1l2276:	
  9036  0565                     	btfss	0+(___fladd@a)+02h,(7)&7
  9037  0565  1FAC               	goto	u207_21
  9038  0566  2D68               	goto	u207_20
  9039  0567  2D69               u207_21:
  9040  0568                     	goto	i1l2280
  9041  0568  2D6B               u207_20:
  9042  0569                     	line	51
  9043                           	
  9044                           i1l2278:	
  9045  0569                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  9046  0569  147A               	goto	i1l2280
  9047  056A  2D6B               	line	52
  9048                           	
  9049                           i1l789:	
  9050  056B                     	line	55
  9051                           	
  9052                           i1l2280:	
  9053  056B                     	movf	((___fladd@aexp)),w
  9054  056B  087A               	btfsc	status,2
  9055  056C  1903               	goto	u208_21
  9056  056D  2D6F               	goto	u208_20
  9057  056E  2D70               u208_21:
  9058  056F                     	goto	i1l2290
  9059  056F  2D81               u208_20:
  9060  0570                     	line	57
  9061                           	
  9062                           i1l2282:	
  9063  0570                     		incf	((___fladd@aexp)),w
  9064  0570  0A7A               	btfss	status,2
  9065  0571  1D03               	goto	u209_21
  9066  0572  2D74               	goto	u209_20
  9067  0573  2D75               u209_21:
  9068  0574                     	goto	i1l2286
  9069  0574  2D7E               u209_20:
  9070  0575                     	line	59
  9071                           	
  9072                           i1l2284:	
  9073  0575                     	movlw	0x0
  9074  0575  3000               	movwf	(___fladd@a+3)
  9075  0576  00AD               	movlw	0x0
  9076  0577  3000               	movwf	(___fladd@a+2)
  9077  0578  00AC               	movlw	0x0
  9078  0579  3000               	movwf	(___fladd@a+1)
  9079  057A  00AB               	movlw	0x0
  9080  057B  3000               	movwf	(___fladd@a)
  9081  057C  00AA               
  9082                           	goto	i1l2286
  9083  057D  2D7E               	line	60
  9084                           	
  9085                           i1l791:	
  9086  057E                     	line	62
  9087                           	
  9088                           i1l2286:	
  9089  057E                     	bsf	(___fladd@a)+(23/8),(23)&7
  9090  057E  17AC               	line	64
  9091                           	
  9092                           i1l2288:	
  9093  057F                     	clrf	0+(___fladd@a)+03h
  9094  057F  01AD               	line	65
  9095                           	goto	i1l792
  9096  0580  2D89               	line	66
  9097                           	
  9098                           i1l790:	
  9099  0581                     	line	68
  9100                           	
  9101                           i1l2290:	
  9102  0581                     	movlw	0x0
  9103  0581  3000               	movwf	(___fladd@a+3)
  9104  0582  00AD               	movlw	0x0
  9105  0583  3000               	movwf	(___fladd@a+2)
  9106  0584  00AC               	movlw	0x0
  9107  0585  3000               	movwf	(___fladd@a+1)
  9108  0586  00AB               	movlw	0x0
  9109  0587  3000               	movwf	(___fladd@a)
  9110  0588  00AA               
  9111                           	line	69
  9112                           	
  9113                           i1l792:	
  9114  0589                     	line	75
  9115                           	movf	(___fladd@bexp),w
  9116  0589  087B               	subwf	(___fladd@aexp),w
  9117  058A  027A               	skipnc
  9118  058B  1803               	goto	u210_21
  9119  058C  2D8E               	goto	u210_20
  9120  058D  2D8F               u210_21:
  9121  058E                     	goto	i1l2326
  9122  058E  2DD5               u210_20:
  9123  058F                     	line	77
  9124                           	
  9125                           i1l2292:	
  9126  058F                     	btfss	(___fladd@signs),(6)&7
  9127  058F  1F79               	goto	u211_21
  9128  0590  2D92               	goto	u211_20
  9129  0591  2D93               u211_21:
  9130  0592                     	goto	i1l2296
  9131  0592  2D98               u211_20:
  9132  0593                     	line	78
  9133                           	
  9134                           i1l2294:	
  9135  0593                     	movlw	low(080h)
  9136  0593  3080               	movwf	(??___fladd+0)+0
  9137  0594  00AE               	movf	(??___fladd+0)+0,w
  9138  0595  082E               	xorwf	(___fladd@signs),f
  9139  0596  06F9               	goto	i1l2296
  9140  0597  2D98               	line	79
  9141                           	
  9142                           i1l794:	
  9143  0598                     	line	81
  9144                           	
  9145                           i1l2296:	
  9146  0598                     	movf	(___fladd@bexp),w
  9147  0598  087B               	movwf	(??___fladd+0)+0
  9148  0599  00AE               	movf	(??___fladd+0)+0,w
  9149  059A  082E               	movwf	(___fladd@grs)
  9150  059B  00FC               	line	82
  9151                           	
  9152                           i1l2298:	
  9153  059C                     	movf	(___fladd@aexp),w
  9154  059C  087A               	movwf	(??___fladd+0)+0
  9155  059D  00AE               	movf	(??___fladd+0)+0,w
  9156  059E  082E               	movwf	(___fladd@bexp)
  9157  059F  00FB               	line	83
  9158                           	
  9159                           i1l2300:	
  9160  05A0                     	movf	(___fladd@grs),w
  9161  05A0  087C               	movwf	(??___fladd+0)+0
  9162  05A1  00AE               	movf	(??___fladd+0)+0,w
  9163  05A2  082E               	movwf	(___fladd@aexp)
  9164  05A3  00FA               	line	84
  9165                           	
  9166                           i1l2302:	
  9167  05A4                     	movf	(___fladd@b),w
  9168  05A4  0826               	movwf	(??___fladd+0)+0
  9169  05A5  00AE               	movf	(??___fladd+0)+0,w
  9170  05A6  082E               	movwf	(___fladd@grs)
  9171  05A7  00FC               	line	85
  9172                           	
  9173                           i1l2304:	
  9174  05A8                     	movf	(___fladd@a),w
  9175  05A8  082A               	movwf	(??___fladd+0)+0
  9176  05A9  00AE               	movf	(??___fladd+0)+0,w
  9177  05AA  082E               	movwf	(___fladd@b)
  9178  05AB  00A6               	line	86
  9179                           	
  9180                           i1l2306:	
  9181  05AC                     	movf	(___fladd@grs),w
  9182  05AC  087C               	movwf	(??___fladd+0)+0
  9183  05AD  00AE               	movf	(??___fladd+0)+0,w
  9184  05AE  082E               	movwf	(___fladd@a)
  9185  05AF  00AA               	line	87
  9186                           	
  9187                           i1l2308:	
  9188  05B0                     	movf	0+(___fladd@b)+01h,w
  9189  05B0  0827               	movwf	(??___fladd+0)+0
  9190  05B1  00AE               	movf	(??___fladd+0)+0,w
  9191  05B2  082E               	movwf	(___fladd@grs)
  9192  05B3  00FC               	line	88
  9193                           	
  9194                           i1l2310:	
  9195  05B4                     	movf	0+(___fladd@a)+01h,w
  9196  05B4  082B               	movwf	(??___fladd+0)+0
  9197  05B5  00AE               	movf	(??___fladd+0)+0,w
  9198  05B6  082E               	movwf	0+(___fladd@b)+01h
  9199  05B7  00A7               	line	89
  9200                           	
  9201                           i1l2312:	
  9202  05B8                     	movf	(___fladd@grs),w
  9203  05B8  087C               	movwf	(??___fladd+0)+0
  9204  05B9  00AE               	movf	(??___fladd+0)+0,w
  9205  05BA  082E               	movwf	0+(___fladd@a)+01h
  9206  05BB  00AB               	line	90
  9207                           	
  9208                           i1l2314:	
  9209  05BC                     	movf	0+(___fladd@b)+02h,w
  9210  05BC  0828               	movwf	(??___fladd+0)+0
  9211  05BD  00AE               	movf	(??___fladd+0)+0,w
  9212  05BE  082E               	movwf	(___fladd@grs)
  9213  05BF  00FC               	line	91
  9214                           	
  9215                           i1l2316:	
  9216  05C0                     	movf	0+(___fladd@a)+02h,w
  9217  05C0  082C               	movwf	(??___fladd+0)+0
  9218  05C1  00AE               	movf	(??___fladd+0)+0,w
  9219  05C2  082E               	movwf	0+(___fladd@b)+02h
  9220  05C3  00A8               	line	92
  9221                           	
  9222                           i1l2318:	
  9223  05C4                     	movf	(___fladd@grs),w
  9224  05C4  087C               	movwf	(??___fladd+0)+0
  9225  05C5  00AE               	movf	(??___fladd+0)+0,w
  9226  05C6  082E               	movwf	0+(___fladd@a)+02h
  9227  05C7  00AC               	line	93
  9228                           	
  9229                           i1l2320:	
  9230  05C8                     	movf	0+(___fladd@b)+03h,w
  9231  05C8  0829               	movwf	(??___fladd+0)+0
  9232  05C9  00AE               	movf	(??___fladd+0)+0,w
  9233  05CA  082E               	movwf	(___fladd@grs)
  9234  05CB  00FC               	line	94
  9235                           	
  9236                           i1l2322:	
  9237  05CC                     	movf	0+(___fladd@a)+03h,w
  9238  05CC  082D               	movwf	(??___fladd+0)+0
  9239  05CD  00AE               	movf	(??___fladd+0)+0,w
  9240  05CE  082E               	movwf	0+(___fladd@b)+03h
  9241  05CF  00A9               	line	95
  9242                           	
  9243                           i1l2324:	
  9244  05D0                     	movf	(___fladd@grs),w
  9245  05D0  087C               	movwf	(??___fladd+0)+0
  9246  05D1  00AE               	movf	(??___fladd+0)+0,w
  9247  05D2  082E               	movwf	0+(___fladd@a)+03h
  9248  05D3  00AD               	goto	i1l2326
  9249  05D4  2DD5               	line	96
  9250                           	
  9251                           i1l793:	
  9252  05D5                     	line	98
  9253                           	
  9254                           i1l2326:	
  9255  05D5                     	clrf	(___fladd@grs)
  9256  05D5  01FC               	line	100
  9257                           	
  9258                           i1l2328:	
  9259  05D6                     	movf	(___fladd@bexp),w
  9260  05D6  087B               	movwf	(??___fladd+0)+0
  9261  05D7  00AE               	clrf	(??___fladd+0)+0+1
  9262  05D8  01AF               	comf	(??___fladd+0)+0,f
  9263  05D9  09AE               	comf	(??___fladd+0)+1,f
  9264  05DA  09AF               	incf	(??___fladd+0)+0,f
  9265  05DB  0AAE               	skipnz
  9266  05DC  1903               	incf	(??___fladd+0)+1,f
  9267  05DD  0AAF               	movf	(___fladd@aexp),w
  9268  05DE  087A               	addwf	0+(??___fladd+0)+0,w
  9269  05DF  072E               	movwf	(??___fladd+2)+0
  9270  05E0  00B0               	movf	1+(??___fladd+0)+0,w
  9271  05E1  082F               	skipnc
  9272  05E2  1803               	incf	1+(??___fladd+0)+0,w
  9273  05E3  0A2F               	movwf	((??___fladd+2)+0)+1
  9274  05E4  00B1               	movf	1+(??___fladd+2)+0,w
  9275  05E5  0831               	xorlw	80h
  9276  05E6  3A80               	movwf	btemp+1
  9277  05E7  00FF               	movlw	(0)^80h
  9278  05E8  3080               	subwf	btemp+1,w
  9279  05E9  027F               	skipz
  9280  05EA  1D03               	goto	u212_25
  9281  05EB  2DEE               	movlw	01Ah
  9282  05EC  301A               	subwf	0+(??___fladd+2)+0,w
  9283  05ED  0230               u212_25:
  9284  05EE                     
  9285                           	skipc
  9286  05EE  1C03               	goto	u212_21
  9287  05EF  2DF1               	goto	u212_20
  9288  05F0  2DF2               u212_21:
  9289  05F1                     	goto	i1l2344
  9290  05F1  2E37               u212_20:
  9291  05F2                     	line	101
  9292                           	
  9293                           i1l2330:	
  9294  05F2                     	bcf	status, 5	;RP0=0, select bank0
  9295  05F2  1283               	bcf	status, 6	;RP1=0, select bank0
  9296  05F3  1303               	movf	(___fladd@b+3),w
  9297  05F4  0829               	iorwf	(___fladd@b+2),w
  9298  05F5  0428               	iorwf	(___fladd@b+1),w
  9299  05F6  0427               	iorwf	(___fladd@b),w
  9300  05F7  0426               	skipz
  9301  05F8  1D03               	goto	u213_21
  9302  05F9  2DFB               	goto	u213_20
  9303  05FA  2DFD               u213_21:
  9304  05FB                     	movlw	1
  9305  05FB  3001               	goto	u214_20
  9306  05FC  2DFE               u213_20:
  9307  05FD                     	movlw	0
  9308  05FD  3000               u214_20:
  9309  05FE                     	movwf	(??___fladd+0)+0
  9310  05FE  00AE               	movf	(??___fladd+0)+0,w
  9311  05FF  082E               	movwf	(___fladd@grs)
  9312  0600  00FC               	line	102
  9313                           	movlw	high highword(0)
  9314  0601  3000               	movwf	(___fladd@b+3)
  9315  0602  00A9               	movlw	low highword(0)
  9316  0603  3000               	movwf	(___fladd@b+2)
  9317  0604  00A8               	movlw	high(0)
  9318  0605  3000               	movwf	(___fladd@b+1)
  9319  0606  00A7               	movlw	low(0)
  9320  0607  3000               	movwf	(___fladd@b)
  9321  0608  00A6               
  9322                           	line	103
  9323                           	movf	(___fladd@aexp),w
  9324  0609  087A               	movwf	(??___fladd+0)+0
  9325  060A  00AE               	movf	(??___fladd+0)+0,w
  9326  060B  082E               	movwf	(___fladd@bexp)
  9327  060C  00FB               	line	104
  9328                           	goto	i1l796
  9329  060D  2E3E               	line	105
  9330                           	
  9331                           i1l795:	
  9332  060E                     	line	106
  9333                           	goto	i1l2344
  9334  060E  2E37               	
  9335                           i1l798:	
  9336  060F                     	line	109
  9337                           	btfss	(___fladd@grs),(0)&7
  9338  060F  1C7C               	goto	u215_21
  9339  0610  2E12               	goto	u215_20
  9340  0611  2E13               u215_21:
  9341  0612                     	goto	i1l2334
  9342  0612  2E1E               u215_20:
  9343  0613                     	line	110
  9344                           	
  9345                           i1l2332:	
  9346  0613                     	movf	(___fladd@grs),w
  9347  0613  087C               	bcf	status, 5	;RP0=0, select bank0
  9348  0614  1283               	bcf	status, 6	;RP1=0, select bank0
  9349  0615  1303               	movwf	(??___fladd+0)+0
  9350  0616  00AE               	clrc
  9351  0617  1003               	rrf	(??___fladd+0)+0,w
  9352  0618  0C2E               	iorlw	01h
  9353  0619  3801               	movwf	(??___fladd+1)+0
  9354  061A  00AF               	movf	(??___fladd+1)+0,w
  9355  061B  082F               	movwf	(___fladd@grs)
  9356  061C  00FC               	line	111
  9357                           	goto	i1l2336
  9358  061D  2E21               	line	112
  9359                           	
  9360                           i1l799:	
  9361  061E                     	line	113
  9362                           	
  9363                           i1l2334:	
  9364  061E                     	clrc
  9365  061E  1003               	rrf	(___fladd@grs),f
  9366  061F  0CFC               
  9367                           	goto	i1l2336
  9368  0620  2E21               	line	114
  9369                           	
  9370                           i1l800:	
  9371  0621                     	line	115
  9372                           	
  9373                           i1l2336:	
  9374  0621                     	bcf	status, 5	;RP0=0, select bank0
  9375  0621  1283               	bcf	status, 6	;RP1=0, select bank0
  9376  0622  1303               	btfss	(___fladd@b),(0)&7
  9377  0623  1C26               	goto	u216_21
  9378  0624  2E26               	goto	u216_20
  9379  0625  2E27               u216_21:
  9380  0626                     	goto	i1l2340
  9381  0626  2E29               u216_20:
  9382  0627                     	line	116
  9383                           	
  9384                           i1l2338:	
  9385  0627                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9386  0627  17FC               	goto	i1l2340
  9387  0628  2E29               	line	117
  9388                           	
  9389                           i1l801:	
  9390  0629                     	line	118
  9391                           	
  9392                           i1l2340:	
  9393  0629                     	movlw	01h
  9394  0629  3001               	movwf	(??___fladd+0)+0
  9395  062A  00AE               u217_25:
  9396  062B                     	rlf	(___fladd@b+3),w
  9397  062B  0D29               	rrf	(___fladd@b+3),f
  9398  062C  0CA9               	rrf	(___fladd@b+2),f
  9399  062D  0CA8               	rrf	(___fladd@b+1),f
  9400  062E  0CA7               	rrf	(___fladd@b),f
  9401  062F  0CA6               	decfsz	(??___fladd+0)+0&07fh,f
  9402  0630  0BAE               	goto	u217_25
  9403  0631  2E2B               
  9404                           	line	119
  9405                           	
  9406                           i1l2342:	
  9407  0632                     	movlw	low(01h)
  9408  0632  3001               	movwf	(??___fladd+0)+0
  9409  0633  00AE               	movf	(??___fladd+0)+0,w
  9410  0634  082E               	addwf	(___fladd@bexp),f
  9411  0635  07FB               	goto	i1l2344
  9412  0636  2E37               	line	120
  9413                           	
  9414                           i1l797:	
  9415  0637                     	line	106
  9416                           	
  9417                           i1l2344:	
  9418  0637                     	movf	(___fladd@aexp),w
  9419  0637  087A               	subwf	(___fladd@bexp),w
  9420  0638  027B               	skipc
  9421  0639  1C03               	goto	u218_21
  9422  063A  2E3C               	goto	u218_20
  9423  063B  2E3D               u218_21:
  9424  063C                     	goto	i1l798
  9425  063C  2E0F               u218_20:
  9426  063D                     	goto	i1l796
  9427  063D  2E3E               	
  9428                           i1l802:	
  9429  063E                     	line	121
  9430                           	
  9431                           i1l796:	
  9432  063E                     	line	124
  9433                           	btfsc	(___fladd@signs),(6)&7
  9434  063E  1B79               	goto	u219_21
  9435  063F  2E41               	goto	u219_20
  9436  0640  2E42               u219_21:
  9437  0641                     	goto	i1l2370
  9438  0641  2E95               u219_20:
  9439  0642                     	line	127
  9440                           	
  9441                           i1l2346:	
  9442  0642                     	movf	((___fladd@bexp)),w
  9443  0642  087B               	btfss	status,2
  9444  0643  1D03               	goto	u220_21
  9445  0644  2E46               	goto	u220_20
  9446  0645  2E47               u220_21:
  9447  0646                     	goto	i1l2352
  9448  0646  2E53               u220_20:
  9449  0647                     	line	128
  9450                           	
  9451                           i1l2348:	
  9452  0647                     	movlw	0x0
  9453  0647  3000               	bcf	status, 5	;RP0=0, select bank0
  9454  0648  1283               	bcf	status, 6	;RP1=0, select bank0
  9455  0649  1303               	movwf	(?___fladd+3)
  9456  064A  00A9               	movlw	0x0
  9457  064B  3000               	movwf	(?___fladd+2)
  9458  064C  00A8               	movlw	0x0
  9459  064D  3000               	movwf	(?___fladd+1)
  9460  064E  00A7               	movlw	0x0
  9461  064F  3000               	movwf	(?___fladd)
  9462  0650  00A6               
  9463                           	goto	i1l805
  9464  0651  2FE3               	
  9465                           i1l2350:	
  9466  0652                     	goto	i1l805
  9467  0652  2FE3               	line	129
  9468                           	
  9469                           i1l804:	
  9470  0653                     	line	132
  9471                           	
  9472                           i1l2352:	
  9473  0653                     	bcf	status, 5	;RP0=0, select bank0
  9474  0653  1283               	bcf	status, 6	;RP1=0, select bank0
  9475  0654  1303               	movf	(___fladd@a),w
  9476  0655  082A               	addwf	(___fladd@b),f
  9477  0656  07A6               	movf	(___fladd@a+1),w
  9478  0657  082B               	clrz
  9479  0658  1103               	skipnc
  9480  0659  1803               	addlw	1
  9481  065A  3E01               	skipnz
  9482  065B  1903               	goto	u221_21
  9483  065C  2E5E               	addwf	(___fladd@b+1),f
  9484  065D  07A7               u221_21:
  9485  065E                     	movf	(___fladd@a+2),w
  9486  065E  082C               	clrz
  9487  065F  1103               	skipnc
  9488  0660  1803               	addlw	1
  9489  0661  3E01               	skipnz
  9490  0662  1903               	goto	u221_22
  9491  0663  2E65               	addwf	(___fladd@b+2),f
  9492  0664  07A8               u221_22:
  9493  0665                     	movf	(___fladd@a+3),w
  9494  0665  082D               	clrz
  9495  0666  1103               	skipnc
  9496  0667  1803               	addlw	1
  9497  0668  3E01               	skipnz
  9498  0669  1903               	goto	u221_23
  9499  066A  2E6C               	addwf	(___fladd@b+3),f
  9500  066B  07A9               u221_23:
  9501  066C                     
  9502                           	line	134
  9503                           	
  9504                           i1l2354:	
  9505  066C                     	btfss	(___fladd@b+3),(24)&7
  9506  066C  1C29               	goto	u222_21
  9507  066D  2E6F               	goto	u222_20
  9508  066E  2E70               u222_21:
  9509  066F                     	goto	i1l2404
  9510  066F  2F60               u222_20:
  9511  0670                     	line	135
  9512                           	
  9513                           i1l2356:	
  9514  0670                     	btfss	(___fladd@grs),(0)&7
  9515  0670  1C7C               	goto	u223_21
  9516  0671  2E73               	goto	u223_20
  9517  0672  2E74               u223_21:
  9518  0673                     	goto	i1l2360
  9519  0673  2E7D               u223_20:
  9520  0674                     	line	136
  9521                           	
  9522                           i1l2358:	
  9523  0674                     	movf	(___fladd@grs),w
  9524  0674  087C               	movwf	(??___fladd+0)+0
  9525  0675  00AE               	clrc
  9526  0676  1003               	rrf	(??___fladd+0)+0,w
  9527  0677  0C2E               	iorlw	01h
  9528  0678  3801               	movwf	(??___fladd+1)+0
  9529  0679  00AF               	movf	(??___fladd+1)+0,w
  9530  067A  082F               	movwf	(___fladd@grs)
  9531  067B  00FC               	line	137
  9532                           	goto	i1l2362
  9533  067C  2E80               	line	138
  9534                           	
  9535                           i1l807:	
  9536  067D                     	line	139
  9537                           	
  9538                           i1l2360:	
  9539  067D                     	clrc
  9540  067D  1003               	rrf	(___fladd@grs),f
  9541  067E  0CFC               
  9542                           	goto	i1l2362
  9543  067F  2E80               	line	140
  9544                           	
  9545                           i1l808:	
  9546  0680                     	line	141
  9547                           	
  9548                           i1l2362:	
  9549  0680                     	btfss	(___fladd@b),(0)&7
  9550  0680  1C26               	goto	u224_21
  9551  0681  2E83               	goto	u224_20
  9552  0682  2E84               u224_21:
  9553  0683                     	goto	i1l2366
  9554  0683  2E86               u224_20:
  9555  0684                     	line	142
  9556                           	
  9557                           i1l2364:	
  9558  0684                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9559  0684  17FC               	goto	i1l2366
  9560  0685  2E86               	line	143
  9561                           	
  9562                           i1l809:	
  9563  0686                     	line	144
  9564                           	
  9565                           i1l2366:	
  9566  0686                     	movlw	01h
  9567  0686  3001               	movwf	(??___fladd+0)+0
  9568  0687  00AE               u225_25:
  9569  0688                     	rlf	(___fladd@b+3),w
  9570  0688  0D29               	rrf	(___fladd@b+3),f
  9571  0689  0CA9               	rrf	(___fladd@b+2),f
  9572  068A  0CA8               	rrf	(___fladd@b+1),f
  9573  068B  0CA7               	rrf	(___fladd@b),f
  9574  068C  0CA6               	decfsz	(??___fladd+0)+0&07fh,f
  9575  068D  0BAE               	goto	u225_25
  9576  068E  2E88               
  9577                           	line	145
  9578                           	
  9579                           i1l2368:	
  9580  068F                     	movlw	low(01h)
  9581  068F  3001               	movwf	(??___fladd+0)+0
  9582  0690  00AE               	movf	(??___fladd+0)+0,w
  9583  0691  082E               	addwf	(___fladd@bexp),f
  9584  0692  07FB               	goto	i1l2404
  9585  0693  2F60               	line	146
  9586                           	
  9587                           i1l806:	
  9588  0694                     	line	148
  9589                           	goto	i1l2404
  9590  0694  2F60               	line	149
  9591                           	
  9592                           i1l803:	
  9593  0695                     	line	153
  9594                           	
  9595                           i1l2370:	
  9596  0695                     	bcf	status, 5	;RP0=0, select bank0
  9597  0695  1283               	bcf	status, 6	;RP1=0, select bank0
  9598  0696  1303               	movf	(___fladd@b+3),w
  9599  0697  0829               	xorlw	80h
  9600  0698  3A80               	movwf	btemp+1
  9601  0699  00FF               	movf	(___fladd@a+3),w
  9602  069A  082D               	xorlw	80h
  9603  069B  3A80               	subwf	btemp+1,w
  9604  069C  027F               	
  9605                           	skipz
  9606  069D  1D03               	goto	u226_23
  9607  069E  2EA9               	movf	(___fladd@a+2),w
  9608  069F  082C               	subwf	(___fladd@b+2),w
  9609  06A0  0228               	skipz
  9610  06A1  1D03               	goto	u226_23
  9611  06A2  2EA9               	movf	(___fladd@a+1),w
  9612  06A3  082B               	subwf	(___fladd@b+1),w
  9613  06A4  0227               	skipz
  9614  06A5  1D03               	goto	u226_23
  9615  06A6  2EA9               	movf	(___fladd@a),w
  9616  06A7  082A               	subwf	(___fladd@b),w
  9617  06A8  0226               u226_23:
  9618  06A9                     	skipnc
  9619  06A9  1803               	goto	u226_21
  9620  06AA  2EAC               	goto	u226_20
  9621  06AB  2EAD               u226_21:
  9622  06AC                     	goto	i1l2380
  9623  06AC  2F13               u226_20:
  9624  06AD                     	line	154
  9625                           	
  9626                           i1l2372:	
  9627  06AD                     	movlw	0FFh
  9628  06AD  30FF               	movwf	((??___fladd+0)+0)
  9629  06AE  00AE               	movlw	0FFh
  9630  06AF  30FF               	movwf	((??___fladd+0)+0+1)
  9631  06B0  00AF               	movlw	0FFh
  9632  06B1  30FF               	movwf	((??___fladd+0)+0+2)
  9633  06B2  00B0               	movlw	0FFh
  9634  06B3  30FF               	movwf	((??___fladd+0)+0+3)
  9635  06B4  00B1               	movf	(___fladd@a),w
  9636  06B5  082A               	movwf	(??___fladd+4)+0
  9637  06B6  00B2               	movf	(___fladd@a+1),w
  9638  06B7  082B               	movwf	((??___fladd+4)+0+1)
  9639  06B8  00B3               	movf	(___fladd@a+2),w
  9640  06B9  082C               	movwf	((??___fladd+4)+0+2)
  9641  06BA  00B4               	movf	(___fladd@a+3),w
  9642  06BB  082D               	movwf	((??___fladd+4)+0+3)
  9643  06BC  00B5               	comf	(___fladd@b),w
  9644  06BD  0926               	movwf	(??___fladd+8)+0
  9645  06BE  00B6               	comf	(___fladd@b+1),w
  9646  06BF  0927               	movwf	((??___fladd+8)+0+1)
  9647  06C0  00B7               	comf	(___fladd@b+2),w
  9648  06C1  0928               	movwf	((??___fladd+8)+0+2)
  9649  06C2  00B8               	comf	(___fladd@b+3),w
  9650  06C3  0929               	movwf	((??___fladd+8)+0+3)
  9651  06C4  00B9               	incf	(??___fladd+8)+0,f
  9652  06C5  0AB6               	skipnz
  9653  06C6  1903               	incf	((??___fladd+8)+0+1),f
  9654  06C7  0AB7               	skipnz
  9655  06C8  1903               	incf	((??___fladd+8)+0+2),f
  9656  06C9  0AB8               	skipnz
  9657  06CA  1903               	incf	((??___fladd+8)+0+3),f
  9658  06CB  0AB9               	movf	0+(??___fladd+8)+0,w
  9659  06CC  0836               	addwf	(??___fladd+4)+0,f
  9660  06CD  07B2               	movf	1+(??___fladd+8)+0,w
  9661  06CE  0837               	skipnc
  9662  06CF  1803               	incfsz	1+(??___fladd+8)+0,w
  9663  06D0  0F37               	goto	u227_20
  9664  06D1  2ED3               	goto	u227_21
  9665  06D2  2ED4               u227_20:
  9666  06D3                     	addwf	(??___fladd+4)+1,f
  9667  06D3  07B3               u227_21:
  9668  06D4                     	movf	2+(??___fladd+8)+0,w
  9669  06D4  0838               	skipnc
  9670  06D5  1803               	incfsz	2+(??___fladd+8)+0,w
  9671  06D6  0F38               	goto	u227_22
  9672  06D7  2ED9               	goto	u227_23
  9673  06D8  2EDA               u227_22:
  9674  06D9                     	addwf	(??___fladd+4)+2,f
  9675  06D9  07B4               u227_23:
  9676  06DA                     	movf	3+(??___fladd+8)+0,w
  9677  06DA  0839               	skipnc
  9678  06DB  1803               	incf	3+(??___fladd+8)+0,w
  9679  06DC  0A39               	addwf	(??___fladd+4)+3,f
  9680  06DD  07B5               	movf	0+(??___fladd+4)+0,w
  9681  06DE  0832               	addwf	(??___fladd+0)+0,f
  9682  06DF  07AE               	movf	1+(??___fladd+4)+0,w
  9683  06E0  0833               	skipnc
  9684  06E1  1803               	incfsz	1+(??___fladd+4)+0,w
  9685  06E2  0F33               	goto	u228_20
  9686  06E3  2EE5               	goto	u228_21
  9687  06E4  2EE6               u228_20:
  9688  06E5                     	addwf	(??___fladd+0)+1,f
  9689  06E5  07AF               u228_21:
  9690  06E6                     	movf	2+(??___fladd+4)+0,w
  9691  06E6  0834               	skipnc
  9692  06E7  1803               	incfsz	2+(??___fladd+4)+0,w
  9693  06E8  0F34               	goto	u228_22
  9694  06E9  2EEB               	goto	u228_23
  9695  06EA  2EEC               u228_22:
  9696  06EB                     	addwf	(??___fladd+0)+2,f
  9697  06EB  07B0               u228_23:
  9698  06EC                     	movf	3+(??___fladd+4)+0,w
  9699  06EC  0835               	skipnc
  9700  06ED  1803               	incf	3+(??___fladd+4)+0,w
  9701  06EE  0A35               	addwf	(??___fladd+0)+3,f
  9702  06EF  07B1               	movf	3+(??___fladd+0)+0,w
  9703  06F0  0831               	movwf	(___fladd@b+3)
  9704  06F1  00A9               	movf	2+(??___fladd+0)+0,w
  9705  06F2  0830               	movwf	(___fladd@b+2)
  9706  06F3  00A8               	movf	1+(??___fladd+0)+0,w
  9707  06F4  082F               	movwf	(___fladd@b+1)
  9708  06F5  00A7               	movf	0+(??___fladd+0)+0,w
  9709  06F6  082E               	movwf	(___fladd@b)
  9710  06F7  00A6               
  9711                           	line	155
  9712                           	movlw	low(080h)
  9713  06F8  3080               	movwf	(??___fladd+0)+0
  9714  06F9  00AE               	movf	(??___fladd+0)+0,w
  9715  06FA  082E               	xorwf	(___fladd@signs),f
  9716  06FB  06F9               	line	156
  9717                           	
  9718                           i1l2374:	
  9719  06FC                     	comf	(___fladd@grs),f
  9720  06FC  09FC               	incf	(___fladd@grs),f
  9721  06FD  0AFC               	line	157
  9722                           	
  9723                           i1l2376:	
  9724  06FE                     	movf	((___fladd@grs)),w
  9725  06FE  087C               	btfss	status,2
  9726  06FF  1D03               	goto	u229_21
  9727  0700  2F02               	goto	u229_20
  9728  0701  2F03               u229_21:
  9729  0702                     	goto	i1l813
  9730  0702  2F21               u229_20:
  9731  0703                     	line	158
  9732                           	
  9733                           i1l2378:	
  9734  0703                     	movlw	01h
  9735  0703  3001               	addwf	(___fladd@b),f
  9736  0704  07A6               	movlw	0
  9737  0705  3000               	skipnc
  9738  0706  1803               movlw 1
  9739  0707  3001               	addwf	(___fladd@b+1),f
  9740  0708  07A7               	movlw	0
  9741  0709  3000               	skipnc
  9742  070A  1803               movlw 1
  9743  070B  3001               	addwf	(___fladd@b+2),f
  9744  070C  07A8               	movlw	0
  9745  070D  3000               	skipnc
  9746  070E  1803               movlw 1
  9747  070F  3001               	addwf	(___fladd@b+3),f
  9748  0710  07A9               	goto	i1l813
  9749  0711  2F21               	line	159
  9750                           	
  9751                           i1l812:	
  9752  0712                     	line	160
  9753                           	goto	i1l813
  9754  0712  2F21               	line	161
  9755                           	
  9756                           i1l811:	
  9757  0713                     	line	162
  9758                           	
  9759                           i1l2380:	
  9760  0713                     	movf	(___fladd@a),w
  9761  0713  082A               	subwf	(___fladd@b),f
  9762  0714  02A6               	movf	(___fladd@a+1),w
  9763  0715  082B               	skipc
  9764  0716  1C03               	incfsz	(___fladd@a+1),w
  9765  0717  0F2B               	subwf	(___fladd@b+1),f
  9766  0718  02A7               	movf	(___fladd@a+2),w
  9767  0719  082C               	skipc
  9768  071A  1C03               	incfsz	(___fladd@a+2),w
  9769  071B  0F2C               	subwf	(___fladd@b+2),f
  9770  071C  02A8               	movf	(___fladd@a+3),w
  9771  071D  082D               	skipc
  9772  071E  1C03               	incfsz	(___fladd@a+3),w
  9773  071F  0F2D               	subwf	(___fladd@b+3),f
  9774  0720  02A9               	line	163
  9775                           	
  9776                           i1l813:	
  9777  0721                     	line	166
  9778                           	movf	(___fladd@b+3),w
  9779  0721  0829               	iorwf	(___fladd@b+2),w
  9780  0722  0428               	iorwf	(___fladd@b+1),w
  9781  0723  0427               	iorwf	(___fladd@b),w
  9782  0724  0426               	skipz
  9783  0725  1D03               	goto	u230_21
  9784  0726  2F28               	goto	u230_20
  9785  0727  2F29               u230_21:
  9786  0728                     	goto	i1l2402
  9787  0728  2F5A               u230_20:
  9788  0729                     	
  9789                           i1l2382:	
  9790  0729                     	movf	((___fladd@grs)),w
  9791  0729  087C               	btfss	status,2
  9792  072A  1D03               	goto	u231_21
  9793  072B  2F2D               	goto	u231_20
  9794  072C  2F2E               u231_21:
  9795  072D                     	goto	i1l2402
  9796  072D  2F5A               u231_20:
  9797  072E                     	line	167
  9798                           	
  9799                           i1l2384:	
  9800  072E                     	movlw	0x0
  9801  072E  3000               	movwf	(?___fladd+3)
  9802  072F  00A9               	movlw	0x0
  9803  0730  3000               	movwf	(?___fladd+2)
  9804  0731  00A8               	movlw	0x0
  9805  0732  3000               	movwf	(?___fladd+1)
  9806  0733  00A7               	movlw	0x0
  9807  0734  3000               	movwf	(?___fladd)
  9808  0735  00A6               
  9809                           	goto	i1l805
  9810  0736  2FE3               	
  9811                           i1l2386:	
  9812  0737                     	goto	i1l805
  9813  0737  2FE3               	line	168
  9814                           	
  9815                           i1l814:	
  9816  0738                     	line	171
  9817                           	goto	i1l2402
  9818  0738  2F5A               	
  9819                           i1l816:	
  9820  0739                     	line	172
  9821                           	
  9822                           i1l2388:	
  9823  0739                     	movlw	01h
  9824  0739  3001               	movwf	(??___fladd+0)+0
  9825  073A  00AE               u232_25:
  9826  073B                     	clrc
  9827  073B  1003               	rlf	(___fladd@b),f
  9828  073C  0DA6               	rlf	(___fladd@b+1),f
  9829  073D  0DA7               	rlf	(___fladd@b+2),f
  9830  073E  0DA8               	rlf	(___fladd@b+3),f
  9831  073F  0DA9               	decfsz	(??___fladd+0)+0
  9832  0740  0BAE               	goto	u232_25
  9833  0741  2F3B               	line	173
  9834                           	
  9835                           i1l2390:	
  9836  0742                     	btfss	(___fladd@grs),(7)&7
  9837  0742  1FFC               	goto	u233_21
  9838  0743  2F45               	goto	u233_20
  9839  0744  2F46               u233_21:
  9840  0745                     	goto	i1l817
  9841  0745  2F47               u233_20:
  9842  0746                     	line	174
  9843                           	
  9844                           i1l2392:	
  9845  0746                     	bsf	(___fladd@b)+(0/8),(0)&7
  9846  0746  1426               	line	175
  9847                           	
  9848                           i1l817:	
  9849  0747                     	line	176
  9850                           	btfss	(___fladd@grs),(0)&7
  9851  0747  1C7C               	goto	u234_21
  9852  0748  2F4A               	goto	u234_20
  9853  0749  2F4B               u234_21:
  9854  074A                     	goto	i1l2396
  9855  074A  2F4E               u234_20:
  9856  074B                     	line	177
  9857                           	
  9858                           i1l2394:	
  9859  074B                     	setc
  9860  074B  1403               	rlf	(___fladd@grs),f
  9861  074C  0DFC               	line	178
  9862                           	goto	i1l2398
  9863  074D  2F51               	line	179
  9864                           	
  9865                           i1l818:	
  9866  074E                     	line	180
  9867                           	
  9868                           i1l2396:	
  9869  074E                     	clrc
  9870  074E  1003               	rlf	(___fladd@grs),f
  9871  074F  0DFC               
  9872                           	goto	i1l2398
  9873  0750  2F51               	line	181
  9874                           	
  9875                           i1l819:	
  9876  0751                     	line	182
  9877                           	
  9878                           i1l2398:	
  9879  0751                     	movf	((___fladd@bexp)),w
  9880  0751  087B               	btfsc	status,2
  9881  0752  1903               	goto	u235_21
  9882  0753  2F55               	goto	u235_20
  9883  0754  2F56               u235_21:
  9884  0755                     	goto	i1l2402
  9885  0755  2F5A               u235_20:
  9886  0756                     	line	183
  9887                           	
  9888                           i1l2400:	
  9889  0756                     	movlw	01h
  9890  0756  3001               	subwf	(___fladd@bexp),f
  9891  0757  02FB               	goto	i1l2402
  9892  0758  2F5A               	line	184
  9893                           	
  9894                           i1l820:	
  9895  0759                     	goto	i1l2402
  9896  0759  2F5A               	line	185
  9897                           	
  9898                           i1l815:	
  9899  075A                     	line	171
  9900                           	
  9901                           i1l2402:	
  9902  075A                     	btfss	(___fladd@b+2),(23)&7
  9903  075A  1FA8               	goto	u236_21
  9904  075B  2F5D               	goto	u236_20
  9905  075C  2F5E               u236_21:
  9906  075D                     	goto	i1l2388
  9907  075D  2F39               u236_20:
  9908  075E                     	goto	i1l2404
  9909  075E  2F60               	
  9910                           i1l821:	
  9911  075F                     	goto	i1l2404
  9912  075F  2F60               	line	186
  9913                           	
  9914                           i1l810:	
  9915  0760                     	line	192
  9916                           	
  9917                           i1l2404:	
  9918  0760                     	clrf	(___fladd@aexp)
  9919  0760  01FA               	line	193
  9920                           	
  9921                           i1l2406:	
  9922  0761                     	btfss	(___fladd@grs),(7)&7
  9923  0761  1FFC               	goto	u237_21
  9924  0762  2F64               	goto	u237_20
  9925  0763  2F65               u237_21:
  9926  0764                     	goto	i1l2414
  9927  0764  2F77               u237_20:
  9928  0765                     	line	194
  9929                           	
  9930                           i1l2408:	
  9931  0765                     	movf	(___fladd@grs),w
  9932  0765  087C               	andlw	07Fh
  9933  0766  397F               	btfsc	status,2
  9934  0767  1903               	goto	u238_21
  9935  0768  2F6A               	goto	u238_20
  9936  0769  2F6B               u238_21:
  9937  076A                     	goto	i1l823
  9938  076A  2F6E               u238_20:
  9939  076B                     	line	195
  9940                           	
  9941                           i1l2410:	
  9942  076B                     	clrf	(___fladd@aexp)
  9943  076B  01FA               	incf	(___fladd@aexp),f
  9944  076C  0AFA               	line	196
  9945                           	goto	i1l2414
  9946  076D  2F77               	line	197
  9947                           	
  9948                           i1l823:	
  9949  076E                     	line	198
  9950                           	btfss	(___fladd@b),(0)&7
  9951  076E  1C26               	goto	u239_21
  9952  076F  2F71               	goto	u239_20
  9953  0770  2F72               u239_21:
  9954  0771                     	goto	i1l2414
  9955  0771  2F77               u239_20:
  9956  0772                     	line	199
  9957                           	
  9958                           i1l2412:	
  9959  0772                     	clrf	(___fladd@aexp)
  9960  0772  01FA               	incf	(___fladd@aexp),f
  9961  0773  0AFA               	goto	i1l2414
  9962  0774  2F77               	line	200
  9963                           	
  9964                           i1l825:	
  9965  0775                     	goto	i1l2414
  9966  0775  2F77               	line	201
  9967                           	
  9968                           i1l824:	
  9969  0776                     	goto	i1l2414
  9970  0776  2F77               	line	202
  9971                           	
  9972                           i1l822:	
  9973  0777                     	line	203
  9974                           	
  9975                           i1l2414:	
  9976  0777                     	movf	((___fladd@aexp)),w
  9977  0777  087A               	btfsc	status,2
  9978  0778  1903               	goto	u240_21
  9979  0779  2F7B               	goto	u240_20
  9980  077A  2F7C               u240_21:
  9981  077B                     	goto	i1l826
  9982  077B  2FB2               u240_20:
  9983  077C                     	line	204
  9984                           	
  9985                           i1l2416:	
  9986  077C                     	movlw	01h
  9987  077C  3001               	addwf	(___fladd@b),f
  9988  077D  07A6               	movlw	0
  9989  077E  3000               	skipnc
  9990  077F  1803               movlw 1
  9991  0780  3001               	addwf	(___fladd@b+1),f
  9992  0781  07A7               	movlw	0
  9993  0782  3000               	skipnc
  9994  0783  1803               movlw 1
  9995  0784  3001               	addwf	(___fladd@b+2),f
  9996  0785  07A8               	movlw	0
  9997  0786  3000               	skipnc
  9998  0787  1803               movlw 1
  9999  0788  3001               	addwf	(___fladd@b+3),f
 10000  0789  07A9               	line	205
 10001                           	
 10002                           i1l2418:	
 10003  078A                     	btfss	(___fladd@b+3),(24)&7
 10004  078A  1C29               	goto	u241_21
 10005  078B  2F8D               	goto	u241_20
 10006  078C  2F8E               u241_21:
 10007  078D                     	goto	i1l826
 10008  078D  2FB2               u241_20:
 10009  078E                     	line	206
 10010                           	
 10011                           i1l2420:	
 10012  078E                     	movf	(___fladd@b),w
 10013  078E  0826               	movwf	(??___fladd+0)+0
 10014  078F  00AE               	movf	(___fladd@b+1),w
 10015  0790  0827               	movwf	((??___fladd+0)+0+1)
 10016  0791  00AF               	movf	(___fladd@b+2),w
 10017  0792  0828               	movwf	((??___fladd+0)+0+2)
 10018  0793  00B0               	movf	(___fladd@b+3),w
 10019  0794  0829               	movwf	((??___fladd+0)+0+3)
 10020  0795  00B1               	movlw	01h
 10021  0796  3001               	movwf	(??___fladd+4)+0
 10022  0797  00B2               u242_25:
 10023  0798                     	rlf	(??___fladd+0)+3,w
 10024  0798  0D31               	rrf	(??___fladd+0)+3,f
 10025  0799  0CB1               	rrf	(??___fladd+0)+2,f
 10026  079A  0CB0               	rrf	(??___fladd+0)+1,f
 10027  079B  0CAF               	rrf	(??___fladd+0)+0,f
 10028  079C  0CAE               u242_20:
 10029  079D                     	decfsz	(??___fladd+4)+0,f
 10030  079D  0BB2               	goto	u242_25
 10031  079E  2F98               	movf	3+(??___fladd+0)+0,w
 10032  079F  0831               	movwf	(___fladd@b+3)
 10033  07A0  00A9               	movf	2+(??___fladd+0)+0,w
 10034  07A1  0830               	movwf	(___fladd@b+2)
 10035  07A2  00A8               	movf	1+(??___fladd+0)+0,w
 10036  07A3  082F               	movwf	(___fladd@b+1)
 10037  07A4  00A7               	movf	0+(??___fladd+0)+0,w
 10038  07A5  082E               	movwf	(___fladd@b)
 10039  07A6  00A6               
 10040                           	line	207
 10041                           		incf	((___fladd@bexp)),w
 10042  07A7  0A7B               	btfsc	status,2
 10043  07A8  1903               	goto	u243_21
 10044  07A9  2FAB               	goto	u243_20
 10045  07AA  2FAC               u243_21:
 10046  07AB                     	goto	i1l826
 10047  07AB  2FB2               u243_20:
 10048  07AC                     	line	208
 10049                           	
 10050                           i1l2422:	
 10051  07AC                     	movlw	low(01h)
 10052  07AC  3001               	movwf	(??___fladd+0)+0
 10053  07AD  00AE               	movf	(??___fladd+0)+0,w
 10054  07AE  082E               	addwf	(___fladd@bexp),f
 10055  07AF  07FB               	goto	i1l826
 10056  07B0  2FB2               	line	209
 10057                           	
 10058                           i1l828:	
 10059  07B1                     	goto	i1l826
 10060  07B1  2FB2               	line	210
 10061                           	
 10062                           i1l827:	
 10063  07B2                     	line	211
 10064                           	
 10065                           i1l826:	
 10066  07B2                     	line	215
 10067                           		incf	((___fladd@bexp)),w
 10068  07B2  0A7B               	btfsc	status,2
 10069  07B3  1903               	goto	u244_21
 10070  07B4  2FB6               	goto	u244_20
 10071  07B5  2FB7               u244_21:
 10072  07B6                     	goto	i1l2426
 10073  07B6  2FBD               u244_20:
 10074  07B7                     	
 10075                           i1l2424:	
 10076  07B7                     	movf	((___fladd@bexp)),w
 10077  07B7  087B               	btfss	status,2
 10078  07B8  1D03               	goto	u245_21
 10079  07B9  2FBB               	goto	u245_20
 10080  07BA  2FBC               u245_21:
 10081  07BB                     	goto	i1l2432
 10082  07BB  2FCD               u245_20:
 10083  07BC                     	goto	i1l2426
 10084  07BC  2FBD               	
 10085                           i1l831:	
 10086  07BD                     	line	216
 10087                           	
 10088                           i1l2426:	
 10089  07BD                     	movlw	high highword(0)
 10090  07BD  3000               	movwf	(___fladd@b+3)
 10091  07BE  00A9               	movlw	low highword(0)
 10092  07BF  3000               	movwf	(___fladd@b+2)
 10093  07C0  00A8               	movlw	high(0)
 10094  07C1  3000               	movwf	(___fladd@b+1)
 10095  07C2  00A7               	movlw	low(0)
 10096  07C3  3000               	movwf	(___fladd@b)
 10097  07C4  00A6               
 10098                           	line	218
 10099                           	
 10100                           i1l2428:	
 10101  07C5                     	movf	((___fladd@bexp)),w
 10102  07C5  087B               	btfss	status,2
 10103  07C6  1D03               	goto	u246_21
 10104  07C7  2FC9               	goto	u246_20
 10105  07C8  2FCA               u246_21:
 10106  07C9                     	goto	i1l2432
 10107  07C9  2FCD               u246_20:
 10108  07CA                     	line	219
 10109                           	
 10110                           i1l2430:	
 10111  07CA                     	clrf	(___fladd@signs)
 10112  07CA  01F9               	goto	i1l2432
 10113  07CB  2FCD               	line	220
 10114                           	
 10115                           i1l832:	
 10116  07CC                     	goto	i1l2432
 10117  07CC  2FCD               	line	221
 10118                           	
 10119                           i1l829:	
 10120  07CD                     	line	225
 10121                           	
 10122                           i1l2432:	
 10123  07CD                     	btfss	(___fladd@bexp),(0)&7
 10124  07CD  1C7B               	goto	u247_21
 10125  07CE  2FD0               	goto	u247_20
 10126  07CF  2FD1               u247_21:
 10127  07D0                     	goto	i1l2436
 10128  07D0  2FD3               u247_20:
 10129  07D1                     	line	226
 10130                           	
 10131                           i1l2434:	
 10132  07D1                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 10133  07D1  17A8               	line	227
 10134                           	goto	i1l834
 10135  07D2  2FD7               	line	229
 10136                           	
 10137                           i1l833:	
 10138  07D3                     	line	230
 10139                           	
 10140                           i1l2436:	
 10141  07D3                     	movlw	low(07Fh)
 10142  07D3  307F               	movwf	(??___fladd+0)+0
 10143  07D4  00AE               	movf	(??___fladd+0)+0,w
 10144  07D5  082E               	andwf	0+(___fladd@b)+02h,f
 10145  07D6  05A8               	line	231
 10146                           	
 10147                           i1l834:	
 10148  07D7                     	line	232
 10149                           	movf	(___fladd@bexp),w
 10150  07D7  087B               	movwf	(??___fladd+0)+0
 10151  07D8  00AE               	clrc
 10152  07D9  1003               	rrf	(??___fladd+0)+0,w
 10153  07DA  0C2E               	movwf	(??___fladd+1)+0
 10154  07DB  00AF               	movf	(??___fladd+1)+0,w
 10155  07DC  082F               	movwf	0+(___fladd@b)+03h
 10156  07DD  00A9               	line	233
 10157                           	
 10158                           i1l2438:	
 10159  07DE                     	btfss	(___fladd@signs),(7)&7
 10160  07DE  1FF9               	goto	u248_21
 10161  07DF  2FE1               	goto	u248_20
 10162  07E0  2FE2               u248_21:
 10163  07E1                     	goto	i1l835
 10164  07E1  2FE3               u248_20:
 10165  07E2                     	line	234
 10166                           	
 10167                           i1l2440:	
 10168  07E2                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 10169  07E2  17A9               	line	235
 10170                           	
 10171                           i1l835:	
 10172  07E3                     	line	236
 10173                           	line	237
 10174                           	
 10175                           i1l805:	
 10176  07E3                     	return
 10177  07E3  0008               	opt stack 0
 10178                           GLOBAL	__end_of___fladd
 10179                           	__end_of___fladd:
 10180  07E4                     	signat	___fladd,8316
 10181                           global	___latbits
 10182                           ___latbits	equ	2
 10183  0002                     	global	btemp
 10184                           	btemp set 07Eh
 10185  007E                     
 10186                           	DABS	1,126,2	;btemp
 10187                           	global	wtemp0
 10188                           	wtemp0 set btemp+0
 10189  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     12      13
    BANK0            80     60      65
    BANK1            80     37      51
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _start_receive->_poll_receiver
    _is_deadzone->___fladd
    ___fltol->___fladd
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd
    ___fladd->___xxtofl

Critical Paths under _main in BANK1

    _main->_update_volume
    _update_volume->_write_int
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11621
                                             35 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                      _handle_remote
                       _update_input
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5774
                                             33 BANK1      2     2      0
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5750
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    4085
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1399
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0    1103
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     836
                                              6 BANK1     10     8      2
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     496
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1311
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handle_remote                                        5     5      0      75
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
                        _init_remote
 ---------------------------------------------------------------------------------
 (2) _init_remote                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    4228
                                             56 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _poll_receiver
                      _start_receive
 ---------------------------------------------------------------------------------
 (8) _start_receive                                        0     0      0       0
                      _poll_receiver
 ---------------------------------------------------------------------------------
 (9) _poll_receiver                                        8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      6     6      0    4094
                                             50 BANK0      6     6      0
                        _is_deadzone
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _is_deadzone                                         13     9      4    3746
                                             37 BANK0     13     9      4
                            ___fladd
                            ___fltol
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     474
                                              0 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            11     7      4     381
                                             26 BANK0     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            24    16      8    2414
                                              8 COMMON     4     4      0
                                              6 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
     _init_remote
   _handle_remote
   _update_input
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite
   _update_volume
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     _is_deadzone
       ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       i1___wmul
     i1___lwdiv
   _handle_rotary
   _poll_receiver
   _start_receive
     _poll_receiver

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      C       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      81       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      41       5       81.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     25      33       7       63.8%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      81      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 10 12:34:48 2019

                  _update_input 0CAE          __size_of_start_receive 0009                               pc 0002  
                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              l60 0B5A  
                            l61 0B79                              l62 0B7A                              l63 0B7A  
                            l59 0B52                              fsr 0004             ___wmul@multiplicand 00A2  
              i1___wmul@product 0075                    spiWrite@data 00A0                   _update_volume 0E77  
                           l200 0AFB                             l201 0AFB                             l220 0C10  
                           l221 0BFB                             l222 0C25                             l150 0CF3  
                           l223 0BFF                             l224 0C03                             l160 0D57  
                           l225 0C07                             l129 0E25                             l321 0B23  
                           l161 0D73                             l153 0E85                             l226 0C0B  
                           l218 0BF6                             l162 0D8A                             l154 0ED1  
                           l219 0C28                             l163 0D8A                             l155 0EB0  
                           l500 003B                             l180 0F92                             l172 0B97  
                           l501 0040                             l181 0F93                             l173 0BB2  
                           l149 0CBC                             l190 0AE8                             l182 0F95  
                           l166 0BD7                             l158 0D7B                             l191 0AEB  
                           l167 0BBA                             l159 0D44                             l176 0F54  
                           l168 0BEC                             l185 0EE5                             l177 0F95  
                           l169 0BEC                             l194 0AD9                             l186 0F33  
                           l178 0F73                             l195 0ADC                             l187 0F33  
                           l179 0F94                             l380 0164                             l365 0B0C  
                           l381 016D                             l198 0AF4                             l294 0FFF  
                           l382 0176                             l199 0AF4                             l383 017F  
                           l375 0150                             l384 0188                             l376 01C3  
                           l480 0406                             l385 01C3                             l377 0192  
                           l481 051A                             l378 015D                             l490 04A0  
                           l482 0407                             l379 01B0                             l491 04ED  
                           l483 0408                             l476 04F8                             l492 04A5  
                           l484 0436                             l493 04F7                             l485 0409  
                           l477 03F2                             l494 0519                             l486 0450  
                           l478 0404                             l495 051F                             l487 045A  
                           l479 040B                             l488 048E                             l489 0483  
                           l770 0DD1                             l498 001C                             l771 0DD7  
                           l499 0026                             l764 0DD2                             l780 0CA7  
                           l765 0DA4                             l781 0CAD                             l766 0D98  
                           l774 0CA8                             l767 0DA9                             l775 0C82  
                           l768 0DAA                             l776 0C76                             l769 0DC3  
                           l777 0C87                             l778 0C88                             l779 0C99  
                 ?_display_init 0071                             _PR2 0092                    __CFG_CPD$OFF 0000  
                           _isr 0C29                             fsr0 0004                             indf 0000  
                 write_char@pos 00B0                    __CFG_LVP$OFF 0000                    ___fltol@exp1 0044  
                          l2100 0D98                            l2110 0DC1                            l2102 0D9F  
                          l2112 0DC3                            l2104 0DA4                            l2120 0C6B  
                          l2200 04ED                            l2042 0AEF                            l2114 0DCA  
                          l2106 0DAA                            l2130 0C88                            l2122 0C73  
                          l2202 04F8                            l2050 002D                            l2108 0DBB  
                          l2116 0DD2                            l2140 0CAD                            l2132 0C92  
                          l2124 0C76                            l2204 051A                            l2052 0034  
                          l2044 0017                            l2060 0ED6                            l2118 0DD7  
                          l2134 0C99                            l2126 0C7D                            l2206 051F  
                          l2150 03ED                            l2054 003B                            l2046 001C  
                          l2062 0EE4                            l2070 0F37                            l2142 0BB3  
                          l2136 0CA0                            l2128 0C82                            l2160 040A  
                          l2152 03F2                            l2056 0040                            l2048 0020  
                          l2064 0EE5                            l2080 0F5C                            l2072 0F3D  
                          l2144 0BBA                            l2138 0CA8                            l2170 0446  
                          l2162 040B                            l2154 03F8                            l2066 0F1D  
                          l2058 0ED2                            l2090 0F81                            l2082 0F62  
                          l2074 0F43                            l2146 0BD0                            l2180 045A  
                          l2172 044A                            l2164 0436                            l2156 03FF  
                          l2068 0F25                            l2092 0F88                            l2084 0F69  
                          l2076 0F4A                            l2148 0BD7                            l2094 0D8B  
                          l2190 049B                            l2182 0482                            l2174 0450  
                          l2166 043E                            l2158 0404                            l2086 0F73  
                          l2078 0F54                            l3080 0C17                            l2520 0DE5  
                          l2512 0DD8                            l2096 0D8F                            l2192 04A0  
                          l2184 0483                            l2176 0452                            l2168 0442  
                          l2088 0F7B                            l2600 0B96                            l2530 0DEA  
                          l2522 0DE6                            l2514 0DE0                            l2610 0B17  
                          l2098 0D95                            l2194 04A5                            l2178 0459  
                          l2186 048E                            l3074 042B                            l2602 0B97  
                          l2540 0DFB                            l2532 0DF0                            l2524 0DE7  
                          l2516 0DE1                            l2612 0B1A                            l2620 0B02  
                          l2700 0FB9                            l3076 019A                            l2604 0ACE  
                          l2196 04E1                            l2188 0494                            l2550 0E02  
                          l2542 0DFE                            l2534 0DF3                            l2526 0DE8  
                          l2518 0DE2                            l2614 0B1D                            l2622 0B06  
                          l2710 0FCA                            l2702 0FBC                            l3078 01A5  
                          l2606 0AD5                            l2198 04E8                            l2560 0E0E  
                          l2552 0E03                            l2544 0DFF                            l2536 0DF4  
                          l2528 0DE9                            l2616 0B20                            l2608 0B0D  
                          l2624 0B09                            l2720 0FD5                            l2712 0FCF  
                          l2704 0FBD                            l2800 0139                            l2570 0E1A  
                          l2562 0E0F                            l2554 0E04                            l2546 0E00  
                          l2538 0DF5                            l2618 0AFC                            l2730 0FED  
                          l2722 0FD6                            l2714 0FD2                            l2706 0FC0  
                          l2810 0152                            l2802 0143                            l2572 0E1D  
                          l2564 0E10                            l2556 0E05                            l2548 0E01  
                          l2724 0FD7                            l2716 0FD3                            l2708 0FC5  
                          l2820 0168                            l2812 015D                            l2804 0145  
                          l2580 0D3F                            l2740 0E8B                            l2732 0E77  
                          l2574 0E21                            l2566 0E16                            l2558 0E0B  
                          l2726 0FD9                            l2718 0FD4                            l2670 0F96  
                          l2830 0176                            l2822 016A                            l2814 015F  
                          l2806 0147                            l2590 0D5D                            l2582 0D44  
                          l2750 0EBB                            l2742 0E96                            l2734 0E84  
                          l2568 0E19                            l2728 0FDB                            l2680 0FA0  
                          l2672 0F9C                            l2840 0188                            l2832 017A  
                          l2824 016D                            l2816 0161                            l2808 0151  
                          l2576 0ADD                            l2592 0D65                            l2584 0D48  
                          l2760 0CBE                            l2752 0EC6                            l2744 0E9C  
                          l2736 0E85                            l2690 0FAC                            l2682 0FA1  
                          l2674 0F9D                            l2850 01B5                            l2842 018E  
                          l2834 017C                            l2826 0171                            l2818 0164  
                          l2578 0AE4                            l2586 0D56                            l2594 0D73  
                          l2770 0CED                            l2762 0CC3                            l2754 0ECB  
                          l2746 0EA9                            l2738 0E86                            l2930 0B64  
                          l2922 0B4C                            l2780 0BFF                            l2772 0BED  
                          l2692 0FAD                            l2684 0FA5                            l2676 0F9E  
                          l2852 01B8                            l2844 0191                            l2836 017F  
                          l2828 0173                            l2596 0B7D                            l2588 0D57  
                          l2764 0CCE                            l2756 0CAE                            l2748 0EB0  
                          l2932 0B69                            l2924 0B52                            l2782 0C03  
                          l2790 0C10                            l2774 0BF5                            l2694 0FB0  
                          l2686 0FA8                            l2678 0F9F                            l2838 0185  
                          l2846 0192                            l2598 0B8C                            l2766 0CD9  
                          l2758 0CBB                            l2934 0B6E                            l2926 0B58  
                          l2784 0C07                            l2792 0C25                            l2776 0BF6  
                          l2696 0FB3                            l2688 0FA9                            l2848 01B0  
                          l2768 0CE8                            l2928 0B5A                            l2786 0C0B  
                          l2778 0BFB                            l2698 0FB6                            l2788 0C0F  
                          l2798 0136                            ?_isr 0071                            STR_1 0990  
                          STR_2 0996                            STR_3 099A                            u3040 0B58  
                          u3041 0B57                            u1620 003A                            u1700 0F81  
                          u1621 0039                            u1605 0027                            u1701 0F80  
                          u1710 0D95                            u1630 0EE3                            u1711 0D94  
                          u1615 002E                            u1631 0EE2                            u1800 0C86  
                          u1640 0F32                            u1801 0C85                            u1641 0F31  
                          u1730 0DA8                            u1810 0C92                            u1650 0F3D  
                          u1731 0DA7                            u1811 0C91                            u1635 0EDF  
                          u1651 0F3C                            u1580 0AFA                            u1900 0494  
                          u1660 0F43                            u2700 0D55                            u1581 0AF9  
                          u1725 0D99                            u1901 0493                            u1645 0F2E  
                          u1661 0F42                            u2701 0D54                            u3157 0B74  
                          u1750 0DBB                            u1830 0CA6                            u1910 04F6  
                          u1590 0020                            u1670 0F5C                            u2710 0D72  
                          u1751 0DBA                            u1831 0CA5                            u1815 0C8E  
                          u1911 04F5                            u1591 001F                            u1671 0F5B  
                          u2711 0D71                            u1920 0518                            u1680 0F62  
                          u1840 0BEB                            u2720 0D89                            u1745 0DAB  
                          u1825 0C9A                            u1921 0517                            u1681 0F61  
                          u1841 0BEA                            u2721 0D88                            u2705 0D51  
                          u1770 0DD0                            u1850 03F8                            u1690 0F7B  
                          u2730 0B8C                            u1771 0DCF                            u1755 0DB7  
                          u1851 03F7                            u1691 0F7A                            u2731 0B8B  
                          u2715 0D6E                            u2740 0AD5                            u1780 0C73  
                          u1860 0446                            u2741 0AD4                            u1765 0DC4  
                          u1781 0C72                            u1861 0445                            u2725 0D85  
                          u1870 0458                            u1871 0457                            u2735 0B88  
                          u1880 0481                            u2840 0E83                            u1881 0480  
                          u2841 0E82                            u2690 0AE4                            u1890 048D  
                          u2850 0EA9                            u2691 0AE3                            u1795 0C77  
                          u1891 048C                            u2851 0EA8                            u2860 0CBA  
                          u1885 047D                            u2861 0CB9                            u2845 0E7F  
                          u2870 0BF4                            u2871 0BF3                            u2855 0EA5  
                          u2880 0143                            u2881 0142                            u2865 0CB6  
                          u2890 01B5                            u2891 01B4                            i1l70 0C4F  
                          i1l71 0C60                            i1l72 0C60                            i1l68 0C40  
                          i1l69 0C3E                    __CFG_WRT$OFF 0000                            _main 0B4C  
                          _font 0812          is_deadzone@deadzoneLow 004B                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0012                   __CFG_IESO$OFF 0000  
                  ?_is_deadzone 0045                           ??_isr 0058                  ?_update_volume 0071  
                 ___fltol@sign1 0043                  ??_display_init 00A1                 __end_of___fladd 07E4  
                         ?_main 0071                   __CFG_WDTE$OFF 0000                 __end_of___fltol 0260  
               __end_of___lwdiv 0DD8                           i1l230 00F7                           i1l231 00F3  
                         i1l232 00F6                           i1l233 0128                           i1l234 0128  
                         i1l331 006C                           i1l235 0122                           i1l500 0B46  
                         i1l332 00B2                           i1l236 0127                           i1l501 0B4B  
                         i1l325 03DF                           i1l333 00B1                           i1l237 0135  
                         i1l229 00F8                           i1l326 03E9                           i1l334 00B2  
                         i1l329 0071                 __end_of___lwmod 0CAE                           i1l371 0E76  
                         i1l372 0E76                           i1l800 0621                           i1l368 0ACD  
                         i1l801 0629                           i1l810 0760                           i1l802 063E  
                         i1l811 0713                           i1l803 0695                           i1l820 0759  
                         i1l812 0712                           i1l804 0653                           i1l821 075F  
                         i1l813 0721                           i1l805 07E3                           i1l822 0777  
                         i1l814 0738                           i1l806 0694                           i1l910 02A9  
                         i1l831 07BD                           i1l823 076E                           i1l815 075A  
                         i1l807 067D                           i1l911 029B                           i1l832 07CC  
                         i1l824 0776                           i1l816 0739                           i1l808 0680  
                         i1l920 02EB                           i1l912 02B0                           i1l833 07D3  
                         i1l825 0775                           i1l817 0747                           i1l809 0686  
                         i1l921 02F7                           i1l913 02CC                           i1l834 07D7  
                         i1l826 07B2                           i1l818 074E                           i1l690 024F  
                         i1l922 031A                           i1l914 02B1                           i1l906 027C  
                         i1l498 0B27                           i1l770 0D38                           i1l835 07E3  
                         i1l827 07B2                           i1l819 0751                           i1l691 023C  
                         i1l915 02D3                           i1l907 0284                           i1l499 0B31  
                         i1l771 0D3E                           i1l828 07B1                           i1l692 0248  
                         i1l684 01E3                           i1l916 02E0                           i1l908 0296  
                         i1l764 0D39                           i1l829 07CD                           i1l693 023D  
                         i1l685 025F                           i1l917 02D4                           i1l909 0323  
                         i1l765 0D0B                           i1l790 0581                           i1l694 024E  
                         i1l686 022C                           i1l766 0CFF                           i1l791 057E  
                         i1l695 025F                           i1l687 0218                           i1l919 02EB  
                         i1l767 0D10                           i1l792 0589                           i1l784 0533  
                         i1l688 0219                           i1l768 0D11                           i1l793 05D5  
                         i1l785 0549                           i1l689 022B                           i1l769 0D2A  
                         i1l794 0598                           i1l786 0546                           i1l795 060E  
                         i1l787 0552                           i1l796 063E                           i1l788 055F  
                         i1l797 0637                           i1l789 056B                           i1l798 060F  
                         i1l799 061E                           _PORTA 0005                           _PORTC 0007  
                         _TRISC 0087                           _TRISD 0088           _activateSelectedRelay 0BED  
                  ?_init_remote 0071                  __CFG_FCMEN$OFF 0000                     _write_space 0D3F  
               __end_of_dpowers 098E                   _start_receive 0AC5         is_deadzone@deadzoneHigh 004D  
                         pclath 000A                __end_ofi1___wmul 0B4C                           status 0003  
           i1___wmul@multiplier 0071                           wtemp0 007E                 __end_of_sprintf 0520  
            __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 0050                  __CFG_MCLRE$OFF 0000  
               __initialization 07E4                    __end_of_main 0B7D                    __end_of_font 0984  
            handle_rotary@portA 0074              handle_rotary@portB 0076             _display_write_start 0ADD  
                        ??_main 00C3                 _handle_potmeter 0041                  write_text@text 00B3  
                ?_start_receive 0071                          _ADRESH 001E                          _ADRESL 009E  
          ?_display_write_start 0071                          i1l2300 05A0                          i1l2220 01F8  
                        i1l2212 01C4                          i1l2310 05B4                          i1l2302 05A4  
                        i1l2230 020E                          i1l2222 01F9                          i1l2214 01D9  
                        i1l2400 0756                          i1l2320 05C8                          i1l2312 05B8  
                        i1l2304 05A8                          i1l2240 023B                          i1l2232 0217  
                        i1l2224 0201                          i1l2216 01E2                          i1l2410 076B  
                        i1l2402 075A                          i1l2330 05F2                          i1l2322 05CC  
                        i1l2314 05BC                          i1l2306 05AC                          i1l2250 0527  
                        i1l2242 023D                          i1l2234 0219                          i1l2226 0203  
                        i1l2218 01E3                          i1l2420 078E                          i1l2412 0772  
                        i1l2404 0760                          i1l2340 0629                          i1l2332 0613  
                        i1l2324 05D0                          i1l2316 05C0                          i1l2308 05B0  
                        i1l2260 053D                          i1l2252 052D                          i1l2244 024F  
                        i1l2228 0207                          i1l2236 022C                          i1l2500 0E26  
                        u200_25 023F                          i1l2430 07CA                          i1l2422 07AC  
                        i1l2414 0777                          i1l2406 0761                          i1l2350 0652  
                        i1l2342 0632                          i1l2334 061E                          i1l2318 05C4  
                        i1l2326 05D5                          i1l2270 0557                          i1l2262 0546  
                        i1l2254 0531                          i1l2246 0254                          i1l2238 0232  
                        i1l2510 0E74                          i1l2502 0E41                          i1l2440 07E2  
                        i1l2432 07CD                          i1l2424 07B7                          i1l2416 077C  
                        i1l2408 0765                          i1l2360 067D                          i1l2352 0653  
                        i1l2336 0621                          i1l2344 0637                          i1l2328 05D6  
                        i1l2280 056B                          i1l2272 055D                          i1l2264 0547  
                        i1l2256 0533                          i1l2248 0520                          u201_20 024D  
                        i1l2504 0E67                          u201_21 024C                          i1l2434 07D1  
                        i1l2426 07BD                          i1l2418 078A                          i1l2362 0680  
                        i1l2354 066C                          i1l2346 0642                          i1l2370 0695  
                        i1l2338 0627                          i1l2282 0570                          i1l2290 0581  
                        i1l2274 055F                          i1l2258 0538                          i1l2266 0549  
                        i1l2450 028C                          i1l2442 0263                          i1l2506 0E6B  
                        i1l2436 07D3                          i1l2428 07C5                          i1l2372 06AD  
                        i1l2380 0713                          i1l2364 0684                          i1l2356 0670  
                        i1l2348 0647                          i1l2292 058F                          i1l2284 0575  
                        i1l2276 0565                          i1l2268 0552                          i1l2460 02B1  
                        i1l2452 0295                          i1l2444 0268                          i1l2508 0E71  
                        i1l2438 07DE                          i1l2390 0742                          i1l2382 0729  
                        i1l2374 06FC                          i1l2366 0686                          i1l2358 0674  
                        i1l2294 0593                          i1l2286 057E                          i1l2278 0569  
                        i1l2470 02E4                          i1l2462 02B5                          i1l2454 0296  
                        i1l2446 026C                          i1l2630 0380                          i1l2392 0746  
                        i1l2384 072E                          i1l2376 06FE                          i1l2368 068F  
                        i1l2296 0598                          u210_20 058F                          i1l2288 057F  
                        u202_20 0254                          i1l2480 0318                          i1l2472 02EF  
                        i1l2464 02C3                          i1l2456 029B                          i1l2448 027C  
                        i1l2640 03DF                          i1l2632 03BB                          u210_21 058E  
                        u202_21 0253                          i1l2394 074B                          i1l2386 0737  
                        i1l2378 0703                          i1l2298 059C                          i1l2482 031A  
                        i1l2474 02F9                          i1l2466 02D4                          i1l2458 02A9  
                        i1l2490 0B2B                          i1l2642 03E9                          i1l2634 03BC  
                        i1l2626 0324                          i1l2650 0CFF                          i1l2396 074E  
                        i1l2388 0739                          i1l2484 0323                          i1l2476 030F  
                        i1l2468 02E0                          i1l2492 0B38                          i1l2636 03CA  
                        i1l2628 0345                          i1l2660 0D28                          i1l2652 0D06  
                        i1l2644 0CF4                          i1l2900 006C                          i1l2398 0751  
                        i1l2478 0314                          i1l2494 0B3F                          i1l2486 0B24  
                        i1l2638 03DA                          i1l2662 0D2A                          i1l2654 0D0B  
                        i1l2646 0CF6                          i1l2902 0071                          u211_20 0593  
                        u203_20 0531                          i1l2496 0B46                          i1l2488 0B27  
                        i1l2664 0D31                          i1l2656 0D11                          i1l2648 0CFC  
                        i1l2904 00A6                          u211_21 0592                          u203_21 0530  
                        i1l2498 0B4B                          i1l2658 0D22                          i1l2666 0D39  
                        i1l2668 0D3E                          i1l2940 0C32                          i1l2870 00E1  
                        i1l2862 00B3                          i1l2950 0C4B                          i1l2942 0C38  
                        u220_20 0647                          u212_20 05F2                          u204_20 0538  
                        u300_20 00A6                          i1l2880 010D                          i1l2872 00EC  
                        i1l2864 00C7                          i1l2952 0C4F                          i1l2944 0C3E  
                        i1l2936 0C29                          u220_21 0646                          u212_21 05F1  
                        u204_21 0537                          u300_21 00A5                          i1l2882 0113  
                        i1l2874 00F3                          i1l2866 00D1                          i1l2890 0AC5  
                        i1l2954 0C53                          i1l2938 0C2D                          i1l2946 0C40  
                        i1l2884 011B                          i1l2868 00DB                          i1l2876 00F8  
                        i1l2892 0ACA                          i1l2956 0C57                          i1l2948 0C46  
                        u212_25 05EE                          i1l2894 0041                          i1l2886 0122  
                        i1l2878 0103                          i1l2958 0C5C                          u213_20 05FD  
                        u205_20 053D                          i1l2896 004B                          i1l2888 0131  
                        u221_21 065E                          u213_21 05FB                          u205_21 053C  
                        u221_22 0665                          i1l2898 0051                          u221_23 066C  
                        u230_20 0729                          u222_20 0670                          u214_20 05FE  
                        u206_20 055D                          u230_21 0728                          u222_21 066F  
                        u206_21 055C                          u231_20 072E                          u223_20 0674  
                        u215_20 0613                          u207_20 0569                          u231_21 072D  
                        u223_21 0673                          u215_21 0612                          u207_21 0568  
                        u240_20 077C                          u224_20 0684                          u216_20 0627  
                        u208_20 0570                          u240_21 077B                          u224_21 0683  
                        u216_21 0626                          u208_21 056F                          u232_25 073B  
                        u241_20 078E                          u233_20 0746                          u209_20 0575  
                        u305_20 0C2D                          u241_21 078D                          u233_21 0745  
                        u209_21 0574                          u305_21 0C2C                          u225_25 0688  
                        u217_25 062B                          u242_20 079D                          u234_20 074B  
                        u226_20 06AD                          u218_20 063D                          u250_20 026C  
                        u306_20 0C38                          u234_21 074A                          u226_21 06AC  
                        u218_21 063C                          u250_21 026B                          u306_21 0C37  
                        u226_23 06A9                          u242_25 0798                          u243_20 07AC  
                        u235_20 0756                          u227_20 06D3                          u219_20 0642  
                        u251_20 028C                          u307_20 0C46                          u243_21 07AB  
                        u235_21 0755                          u227_21 06D4                          u219_21 0641  
                        u251_21 028B                          u307_21 0C45                          u227_22 06D9  
                        u227_23 06DA                          u244_20 07B7                          u236_20 075E  
                        u228_20 06E5                          u260_20 0304                          u308_20 0C53  
                        u244_21 07B6                          u236_21 075D                          u228_21 06E6  
                        u308_21 0C52                          u228_22 06EB                          u228_23 06EC  
                        u260_25 02FF                          u252_25 02A0                          u245_20 07BC  
                        u237_20 0765                          u229_20 0703                          u261_20 0314  
                        u253_20 02AF                          u245_21 07BB                          u237_21 0764  
                        u229_21 0702                          u261_21 0313                          u253_21 02AE  
                        u246_20 07CA                          u238_20 076B                          u262_20 0318  
                        u246_21 07C9                          u238_21 076A                          u262_21 0317  
                        u254_25 02C4                          u247_20 07D1                          u239_20 0772  
                        u255_20 02D2                          u263_20 0B2B                          u247_21 07D0  
                        u239_21 0771                          u255_21 02D1                          u263_21 0B2A  
                        u248_20 07E2                          u248_21 07E1                          u256_25 02D8  
                        u264_25 0B32                          u280_25 0D12                          u193_20 01D9  
                        u257_20 02E4                          u249_20 0268                          u281_20 0D22  
                        u193_21 01D8                          u257_21 02E3                          u249_21 0267  
                        u281_21 0D21                          u265_25 0B39                          u281_25 0D1E  
                        u194_20 01F1                          u258_20 02EA                          u266_20 0B45  
                        u290_20 00D1                          u258_21 02E9                          u266_21 0B44  
                        u290_21 00D0                          u194_25 01EC                          u282_25 0D2B  
                        u290_25 00CD                          u195_20 0207                          u259_20 02EF  
                        u275_20 03CA                          u283_20 0D37                          u291_20 00DB  
                        u267_20 0E36                          u195_21 0206                          u259_21 02EE  
                        u275_21 03C9                          u283_21 0D36                          u291_21 00DA  
                        u275_25 03C6                          u291_25 00D7                          u267_25 0E31  
                        u196_20 020E                          u276_20 03DA                          u292_20 00E1  
                        u268_20 0E71                          u196_21 020D                          u276_21 03D9  
                        u292_21 00E0                          u268_21 0E70                          u276_25 03D6  
                        u277_20 0CFC                          u293_20 00EC                          u277_21 0CFB  
                        u293_21 00EB                          u197_25 021A                          u198_20 022A  
                        u294_20 0103                          u198_21 0229                          u294_21 0102  
                        u278_25 0D00                          u294_25 00FF                          u199_20 0232  
                        u279_20 0D0F                          u295_20 010D                          u199_21 0231  
                        u279_21 0D0E                          u295_21 010C                          u295_25 0109  
                        u296_20 0113                          u296_21 0112                          u297_20 011B  
                        u297_21 011A                          u298_20 0051                          u298_21 0050  
                        u299_20 006B                          u299_21 006A                          u299_25 0067  
                        _SSPCON 0014                          _SSPBUF 0013                __end_of___xxtofl 0324  
                __CFG_PWRTE$OFF 0000                       ??___fladd 002E                          ___wmul 0017  
                        __lastA 005E                          __lastB 005C                 ??_update_volume 00C1  
                     ??___fltol 003E                       ??___lwdiv 00A4                       ??___lwmod 00AC  
                        _config 0F96                __end_of_init_adc 0B24                          _volume 00CD  
               write_int@number 00BD          ?_activateSelectedRelay 0071               __end_ofi1___lwdiv 0D3F  
                        saved_w 007E                __end_of_spiWrite 0AFC                       ??_sprintf 00B2  
         ??_display_write_start 00A0                    ___xxtofl@arg 0022                    ___xxtofl@exp 0021  
                  ___xxtofl@val 0071         __end_of__initialization 07FC          is_deadzone@currentStep 0045  
          __end_of_display_init 0E26                      ___fltol@f1 003A                  __pcstackCOMMON 0071  
          __size_of_is_deadzone 00C6         __end_of_handle_potmeter 00B3                       ?i1___wmul 0071  
               ??_start_receive 0079            __size_of_init_remote 0011                      __pbssBANK0 005C  
                    __pbssBANK1 00C5           __end_of_handle_remote 01C4           __end_of_handle_rotary 0136  
                    __pmaintext 0B4C           __end_of_poll_receiver 0E77                         ?___wmul 00A0  
                    __pintentry 0004                         ?_config 0071                      ??i1___wmul 0075  
                __selectedInput 00CF                       ?___xxtofl 0071                    ?_write_space 00A1  
                       _SSPSTAT 0094                      __stringtab 0800                       ?_init_adc 0071  
            __size_of_write_int 0036                      _lastVolume 00CB                       ?_spiWrite 0071  
                       ___fladd 0520                ?_handle_potmeter 0071                         ___fltol 01C4  
               __size_of___wmul 002A                         ___lwdiv 0D8B                         ___lwmod 0C6B  
               __size_of_config 006A                       _ANSELbits 0188                         __ptext1 0E77  
                       __ptext2 0CAE                         __ptext3 0D3F                         __ptext4 0B7D  
                       __ptext5 0BB3                         __ptext6 0F34                         __ptext7 0ED2  
                       __ptext8 0017                         __ptext9 03EA                __selectedDisplay 00D1  
                       _dpowers 0984               i1___lwdiv@divisor 0071                       _T2CONbits 0012  
                  __size_of_isr 0042               i1___lwdiv@counter 0078                      ??___xxtofl 0075  
                       _sprintf 03EA                   _receive_count 007D           __size_of_display_init 004E  
          end_of_initialization 07FC                      ??_init_adc 00A0                      ??_spiWrite 00A0  
                  __pstringtext 0800               handle_remote@data 00A2               __end_of_step_size 0990  
             handle_remote@mask 00A0           i1___wmul@multiplicand 0073         ??_activateSelectedRelay 00A0  
                     _PORTBbits 0006                       _PORTCbits 0007                       _PORTDbits 0008  
          __inputUpdateRequired 00D2      handle_potmeter@currentStep 0054                    _display_init 0DD8  
                   ___fladd@grs 007C               __end_of_write_int 0BB3                   ___xxtofl@sign 0020  
                     _TRISAbits 0085                       _TRISBbits 0086                       _TRISCbits 0087  
                     _TRISEbits 0089                       i1___lwdiv 0CF4                    write_int@num 00BF  
                  write_space@i 00A4                    write_space@x 00A6                   ?_update_input 0071  
                __end_of___wmul 0041           __end_of_update_volume 0ED2                      _write_char 0F34  
                    _write_font 0ED2                  __end_of_config 1000                      _write_text 0BB3  
   __end_of_display_write_start 0AEC             start_initialization 07E4               __size_ofi1___wmul 0028  
                   __end_of_isr 0C6B                      ?i1___lwdiv 0071            __size_of_write_space 004C  
              write_space@count 00A1                   ??_is_deadzone 0049                  ??_update_input 00C1  
                      ??___wmul 00A4                        ??_config 00A1             update_volume@spaces 00C1  
                     ___fladd@a 002A                       ___fladd@b 0026                   ??_init_remote 00A0  
                   __pbssCOMMON 007D                       ___latbits 0002                   __pcstackBANK0 0020  
                 __pcstackBANK1 00A0           __end_of_start_receive 0ACE               __size_of___xxtofl 00C4  
        __CFG_FOSC$INTRC_CLKOUT 0000                     sprintf@flag 00B7                     sprintf@prec 00B8  
             __size_of_init_adc 0017                ___lwdiv@dividend 00A2                        ?___fladd 0026  
                      ?___fltol 003A                        ?___lwdiv 00A0                        ?___lwmod 00A8  
           __end_of_is_deadzone 03EA                     ?_write_char 0071               __size_of_spiWrite 0010  
                   ?_write_font 00A6                     ?_write_text 00B3          __size_of_handle_remote 008E  
        __size_of_handle_rotary 0083                       _lastInput 00C9                ___lwdiv@quotient 00A5  
                   ??i1___lwdiv 0075                        ?_sprintf 00AE          __size_of_poll_receiver 0051  
           __end_of_init_remote 0B0D                 _is_deadzone$890 004F               interrupt_function 0004  
                ___wmul@product 00A4                        _IOCBbits 0096                        _PIE1bits 008C  
                      _PIR1bits 000C  __size_of_activateSelectedRelay 003C                      _ADCON0bits 001F  
                   __stringbase 0812                      _ADCON1bits 009F               ___wmul@multiplier 00A0  
 __end_of_activateSelectedRelay 0C29                        i1___wmul 0B24                       _step_size 098E  
                   write_char@c 00B2        __size_of_handle_potmeter 0072                     write_font@x 00AE  
                   write_text@c 00B5            __end_of_update_input 0CF4                       _write_int 0B7D  
             _display_write_end 0ACE             __size_of_write_char 0062                   _handle_remote 0136  
           __size_of_write_font 0062             __size_of_write_text 003A                   _handle_rotary 00B3  
            ?_display_write_end 0071                     _ignore_poll 0060                     _is_deadzone 0324  
                 _poll_receiver 0E26             ??_display_write_end 00A0                __size_of___fladd 02C4  
              __size_of___fltol 009C                __size_of___lwdiv 004D                __size_of___lwmod 0043  
            __end_of__stringtab 0812                      _ANSELHbits 0189                      sprintf@val 00B9  
                      ___xxtofl 0260                     _init_remote 0AFC                 ___lwdiv@divisor 00A0  
               ___lwdiv@counter 00A7                        __ptext10 0C6B                        __ptext11 0D8B  
                      __ptext20 0BED                        __ptext12 0ADD                        __ptext21 0C29  
                      __ptext13 0ACE                        __ptext30 01C4                        __ptext22 0AC5  
                      __ptext14 0136                        __ptext31 0520                        __ptext23 0E26  
                      __ptext15 0F96                        __ptext24 00B3                        __ptext16 0AFC  
                      __ptext25 0041                        __ptext17 0B0D                        __ptext26 0CF4  
                      __ptext18 0DD8                        __ptext27 0324                        __ptext19 0AEC  
                      __ptext28 0B24                        __ptext29 0260               __CFG_BOR4V$BOR21V 0000  
                    ?_write_int 00BD       __end_of_display_write_end 0ADD                __size_of_sprintf 0136  
            i1___lwdiv@dividend 0073                  ?_handle_remote 0071                        _ir_input 00C5  
                ?_handle_rotary 0071                        _init_adc 0B0D                   __size_of_main 0031  
             write_font@fontPos 00A6        handle_potmeter@ad_result 0056                  ?_poll_receiver 0071  
                      _spiWrite 0AEC              i1___lwdiv@quotient 0076                      _INTCONbits 000B  
                 ??_write_space 00A3               ??_handle_potmeter 0052                        intlevel1 0000  
                     sprintf@ap 00B6    __size_of_display_write_start 000F                       sprintf@sp 00BB  
              ___lwmod@dividend 00AA          __size_of_update_volume 005B                       stringcode 080A  
                    _OSCCONbits 008F                    ??_write_char 00B0                    ??_write_font 00A8  
                  ??_write_text 00B5              handle_remote@found 00A4                        sprintf@c 00BC  
                      sprintf@f 00AE           __size_of_update_input 0046                 ___lwmod@divisor 00A8  
               ___lwmod@counter 00AD                        stringtab 0800                     ??_write_int 00BF  
                 ___fladd@signs 0079                 ??_handle_remote 00A0      __size_of_display_write_end 000F  
               ??_handle_rotary 0071             __end_of_write_space 0D8B                    ___fladd@aexp 007A  
                  ___fladd@bexp 007B            is_deadzone@adcResult 0047              __end_of_write_char 0F96  
            __end_of_write_font 0F34              __end_of_write_text 0BED                 ??_poll_receiver 0071  
