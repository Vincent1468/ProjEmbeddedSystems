

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 27 12:58:13 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_update_input
  1182                           	FNCALL	_main,_update_volume
  1183                           	FNCALL	_update_volume,_display_write_end
  1184                           	FNCALL	_update_volume,_display_write_start
  1185                           	FNCALL	_update_volume,_write_int
  1186                           	FNCALL	_update_volume,_write_space
  1187                           	FNCALL	_update_volume,_write_text
  1188                           	FNCALL	_update_input,_display_write_end
  1189                           	FNCALL	_update_input,_display_write_start
  1190                           	FNCALL	_update_input,_write_int
  1191                           	FNCALL	_update_input,_write_space
  1192                           	FNCALL	_update_input,_write_text
  1193                           	FNCALL	_write_space,_spiWrite
  1194                           	FNCALL	_write_int,_sprintf
  1195                           	FNCALL	_write_int,_write_char
  1196                           	FNCALL	_write_int,_write_text
  1197                           	FNCALL	_write_text,_write_char
  1198                           	FNCALL	_write_char,_write_font
  1199                           	FNCALL	_write_font,___wmul
  1200                           	FNCALL	_write_font,_spiWrite
  1201                           	FNCALL	_sprintf,___lwdiv
  1202                           	FNCALL	_sprintf,___lwmod
  1203                           	FNCALL	_config,_display_init
  1204                           	FNCALL	_config,_init_adc
  1205                           	FNCALL	_display_init,_spiWrite
  1206                           	FNROOT	_main
  1207                           	FNCALL	_isr,_handle_potmeter
  1208                           	FNCALL	_isr,_handle_rotary
  1209                           	FNCALL	_isr,_start_receive
  1210                           	FNCALL	_start_receive,_handle_remote
  1211                           	FNCALL	_handle_potmeter,_is_deadzone
  1212                           	FNCALL	_handle_potmeter,i1___lwdiv
  1213                           	FNCALL	_is_deadzone,___fladd
  1214                           	FNCALL	_is_deadzone,___fltol
  1215                           	FNCALL	_is_deadzone,___xxtofl
  1216                           	FNCALL	_is_deadzone,i1___wmul
  1217                           	FNCALL	intlevel1,_isr
  1218                           	global	intlevel1
  1219                           	FNROOT	intlevel1
  1220                           	global	_font
  1221                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1222                           global __pstringtext
  1223                           __pstringtext:
  1224  0800                     stringtab:
  1225  0800                     	global    __stringtab
  1226                           __stringtab:
  1227  0800                     ;	String table - string pointers are 2 bytes each
  1228                           	btfsc	(btemp+1),7
  1229  0800  1BFF               	ljmp	stringcode
  1230  0801  280A               	bcf	status,7
  1231  0802  1383               	btfsc	(btemp+1),0
  1232  0803  187F               	bsf	status,7
  1233  0804  1783               	movf	indf,w
  1234  0805  0800               	incf fsr
  1235  0806  0A84               skipnz
  1236  0807  1903               incf btemp+1
  1237  0808  0AFF               	return
  1238  0809  0008               stringcode:
  1239  080A                     	movf btemp+1,w
  1240  080A  087F               andlw 7Fh
  1241  080B  397F               movwf	pclath
  1242  080C  008A               	movf	fsr,w
  1243  080D  0804               incf fsr
  1244  080E  0A84               skipnz
  1245  080F  1903               incf btemp+1
  1246  0810  0AFF               	movwf pc
  1247  0811  0082               	global __stringbase
  1248                           __stringbase:
  1249  0812                     	global    __end_of__stringtab
  1250                           __end_of__stringtab:
  1251  0812                     	file	"./Font.h"
  1252                           	line	4
  1253                           _font:
  1254  0812                     	retlw	03Eh
  1255  0812  343E               	retlw	0
  1256  0813  3400               
  1257                           	retlw	051h
  1258  0814  3451               	retlw	0
  1259  0815  3400               
  1260                           	retlw	049h
  1261  0816  3449               	retlw	0
  1262  0817  3400               
  1263                           	retlw	045h
  1264  0818  3445               	retlw	0
  1265  0819  3400               
  1266                           	retlw	03Eh
  1267  081A  343E               	retlw	0
  1268  081B  3400               
  1269                           	retlw	low(0)
  1270  081C  3400               	retlw	high(0)
  1271  081D  3400               
  1272                           	retlw	042h
  1273  081E  3442               	retlw	0
  1274  081F  3400               
  1275                           	retlw	07Fh
  1276  0820  347F               	retlw	0
  1277  0821  3400               
  1278                           	retlw	040h
  1279  0822  3440               	retlw	0
  1280  0823  3400               
  1281                           	retlw	low(0)
  1282  0824  3400               	retlw	high(0)
  1283  0825  3400               
  1284                           	retlw	042h
  1285  0826  3442               	retlw	0
  1286  0827  3400               
  1287                           	retlw	061h
  1288  0828  3461               	retlw	0
  1289  0829  3400               
  1290                           	retlw	051h
  1291  082A  3451               	retlw	0
  1292  082B  3400               
  1293                           	retlw	049h
  1294  082C  3449               	retlw	0
  1295  082D  3400               
  1296                           	retlw	046h
  1297  082E  3446               	retlw	0
  1298  082F  3400               
  1299                           	retlw	021h
  1300  0830  3421               	retlw	0
  1301  0831  3400               
  1302                           	retlw	041h
  1303  0832  3441               	retlw	0
  1304  0833  3400               
  1305                           	retlw	045h
  1306  0834  3445               	retlw	0
  1307  0835  3400               
  1308                           	retlw	04Bh
  1309  0836  344B               	retlw	0
  1310  0837  3400               
  1311                           	retlw	031h
  1312  0838  3431               	retlw	0
  1313  0839  3400               
  1314                           	retlw	018h
  1315  083A  3418               	retlw	0
  1316  083B  3400               
  1317                           	retlw	014h
  1318  083C  3414               	retlw	0
  1319  083D  3400               
  1320                           	retlw	012h
  1321  083E  3412               	retlw	0
  1322  083F  3400               
  1323                           	retlw	07Fh
  1324  0840  347F               	retlw	0
  1325  0841  3400               
  1326                           	retlw	010h
  1327  0842  3410               	retlw	0
  1328  0843  3400               
  1329                           	retlw	027h
  1330  0844  3427               	retlw	0
  1331  0845  3400               
  1332                           	retlw	045h
  1333  0846  3445               	retlw	0
  1334  0847  3400               
  1335                           	retlw	045h
  1336  0848  3445               	retlw	0
  1337  0849  3400               
  1338                           	retlw	045h
  1339  084A  3445               	retlw	0
  1340  084B  3400               
  1341                           	retlw	039h
  1342  084C  3439               	retlw	0
  1343  084D  3400               
  1344                           	retlw	03Ch
  1345  084E  343C               	retlw	0
  1346  084F  3400               
  1347                           	retlw	04Ah
  1348  0850  344A               	retlw	0
  1349  0851  3400               
  1350                           	retlw	049h
  1351  0852  3449               	retlw	0
  1352  0853  3400               
  1353                           	retlw	049h
  1354  0854  3449               	retlw	0
  1355  0855  3400               
  1356                           	retlw	030h
  1357  0856  3430               	retlw	0
  1358  0857  3400               
  1359                           	retlw	01h
  1360  0858  3401               	retlw	0
  1361  0859  3400               
  1362                           	retlw	071h
  1363  085A  3471               	retlw	0
  1364  085B  3400               
  1365                           	retlw	09h
  1366  085C  3409               	retlw	0
  1367  085D  3400               
  1368                           	retlw	05h
  1369  085E  3405               	retlw	0
  1370  085F  3400               
  1371                           	retlw	03h
  1372  0860  3403               	retlw	0
  1373  0861  3400               
  1374                           	retlw	036h
  1375  0862  3436               	retlw	0
  1376  0863  3400               
  1377                           	retlw	049h
  1378  0864  3449               	retlw	0
  1379  0865  3400               
  1380                           	retlw	049h
  1381  0866  3449               	retlw	0
  1382  0867  3400               
  1383                           	retlw	049h
  1384  0868  3449               	retlw	0
  1385  0869  3400               
  1386                           	retlw	036h
  1387  086A  3436               	retlw	0
  1388  086B  3400               
  1389                           	retlw	06h
  1390  086C  3406               	retlw	0
  1391  086D  3400               
  1392                           	retlw	049h
  1393  086E  3449               	retlw	0
  1394  086F  3400               
  1395                           	retlw	049h
  1396  0870  3449               	retlw	0
  1397  0871  3400               
  1398                           	retlw	029h
  1399  0872  3429               	retlw	0
  1400  0873  3400               
  1401                           	retlw	01Eh
  1402  0874  341E               	retlw	0
  1403  0875  3400               
  1404                           	retlw	07Eh
  1405  0876  347E               	retlw	0
  1406  0877  3400               
  1407                           	retlw	011h
  1408  0878  3411               	retlw	0
  1409  0879  3400               
  1410                           	retlw	011h
  1411  087A  3411               	retlw	0
  1412  087B  3400               
  1413                           	retlw	011h
  1414  087C  3411               	retlw	0
  1415  087D  3400               
  1416                           	retlw	07Eh
  1417  087E  347E               	retlw	0
  1418  087F  3400               
  1419                           	retlw	07Fh
  1420  0880  347F               	retlw	0
  1421  0881  3400               
  1422                           	retlw	049h
  1423  0882  3449               	retlw	0
  1424  0883  3400               
  1425                           	retlw	049h
  1426  0884  3449               	retlw	0
  1427  0885  3400               
  1428                           	retlw	049h
  1429  0886  3449               	retlw	0
  1430  0887  3400               
  1431                           	retlw	036h
  1432  0888  3436               	retlw	0
  1433  0889  3400               
  1434                           	retlw	03Eh
  1435  088A  343E               	retlw	0
  1436  088B  3400               
  1437                           	retlw	041h
  1438  088C  3441               	retlw	0
  1439  088D  3400               
  1440                           	retlw	041h
  1441  088E  3441               	retlw	0
  1442  088F  3400               
  1443                           	retlw	041h
  1444  0890  3441               	retlw	0
  1445  0891  3400               
  1446                           	retlw	022h
  1447  0892  3422               	retlw	0
  1448  0893  3400               
  1449                           	retlw	07Fh
  1450  0894  347F               	retlw	0
  1451  0895  3400               
  1452                           	retlw	041h
  1453  0896  3441               	retlw	0
  1454  0897  3400               
  1455                           	retlw	041h
  1456  0898  3441               	retlw	0
  1457  0899  3400               
  1458                           	retlw	022h
  1459  089A  3422               	retlw	0
  1460  089B  3400               
  1461                           	retlw	01Ch
  1462  089C  341C               	retlw	0
  1463  089D  3400               
  1464                           	retlw	07Fh
  1465  089E  347F               	retlw	0
  1466  089F  3400               
  1467                           	retlw	049h
  1468  08A0  3449               	retlw	0
  1469  08A1  3400               
  1470                           	retlw	049h
  1471  08A2  3449               	retlw	0
  1472  08A3  3400               
  1473                           	retlw	049h
  1474  08A4  3449               	retlw	0
  1475  08A5  3400               
  1476                           	retlw	041h
  1477  08A6  3441               	retlw	0
  1478  08A7  3400               
  1479                           	retlw	07Fh
  1480  08A8  347F               	retlw	0
  1481  08A9  3400               
  1482                           	retlw	09h
  1483  08AA  3409               	retlw	0
  1484  08AB  3400               
  1485                           	retlw	09h
  1486  08AC  3409               	retlw	0
  1487  08AD  3400               
  1488                           	retlw	01h
  1489  08AE  3401               	retlw	0
  1490  08AF  3400               
  1491                           	retlw	01h
  1492  08B0  3401               	retlw	0
  1493  08B1  3400               
  1494                           	retlw	03Eh
  1495  08B2  343E               	retlw	0
  1496  08B3  3400               
  1497                           	retlw	041h
  1498  08B4  3441               	retlw	0
  1499  08B5  3400               
  1500                           	retlw	041h
  1501  08B6  3441               	retlw	0
  1502  08B7  3400               
  1503                           	retlw	051h
  1504  08B8  3451               	retlw	0
  1505  08B9  3400               
  1506                           	retlw	032h
  1507  08BA  3432               	retlw	0
  1508  08BB  3400               
  1509                           	retlw	07Fh
  1510  08BC  347F               	retlw	0
  1511  08BD  3400               
  1512                           	retlw	08h
  1513  08BE  3408               	retlw	0
  1514  08BF  3400               
  1515                           	retlw	08h
  1516  08C0  3408               	retlw	0
  1517  08C1  3400               
  1518                           	retlw	08h
  1519  08C2  3408               	retlw	0
  1520  08C3  3400               
  1521                           	retlw	07Fh
  1522  08C4  347F               	retlw	0
  1523  08C5  3400               
  1524                           	retlw	low(0)
  1525  08C6  3400               	retlw	high(0)
  1526  08C7  3400               
  1527                           	retlw	041h
  1528  08C8  3441               	retlw	0
  1529  08C9  3400               
  1530                           	retlw	07Fh
  1531  08CA  347F               	retlw	0
  1532  08CB  3400               
  1533                           	retlw	041h
  1534  08CC  3441               	retlw	0
  1535  08CD  3400               
  1536                           	retlw	low(0)
  1537  08CE  3400               	retlw	high(0)
  1538  08CF  3400               
  1539                           	retlw	020h
  1540  08D0  3420               	retlw	0
  1541  08D1  3400               
  1542                           	retlw	040h
  1543  08D2  3440               	retlw	0
  1544  08D3  3400               
  1545                           	retlw	041h
  1546  08D4  3441               	retlw	0
  1547  08D5  3400               
  1548                           	retlw	03Fh
  1549  08D6  343F               	retlw	0
  1550  08D7  3400               
  1551                           	retlw	01h
  1552  08D8  3401               	retlw	0
  1553  08D9  3400               
  1554                           	retlw	07Fh
  1555  08DA  347F               	retlw	0
  1556  08DB  3400               
  1557                           	retlw	08h
  1558  08DC  3408               	retlw	0
  1559  08DD  3400               
  1560                           	retlw	014h
  1561  08DE  3414               	retlw	0
  1562  08DF  3400               
  1563                           	retlw	022h
  1564  08E0  3422               	retlw	0
  1565  08E1  3400               
  1566                           	retlw	041h
  1567  08E2  3441               	retlw	0
  1568  08E3  3400               
  1569                           	retlw	07Fh
  1570  08E4  347F               	retlw	0
  1571  08E5  3400               
  1572                           	retlw	040h
  1573  08E6  3440               	retlw	0
  1574  08E7  3400               
  1575                           	retlw	040h
  1576  08E8  3440               	retlw	0
  1577  08E9  3400               
  1578                           	retlw	040h
  1579  08EA  3440               	retlw	0
  1580  08EB  3400               
  1581                           	retlw	040h
  1582  08EC  3440               	retlw	0
  1583  08ED  3400               
  1584                           	retlw	07Fh
  1585  08EE  347F               	retlw	0
  1586  08EF  3400               
  1587                           	retlw	02h
  1588  08F0  3402               	retlw	0
  1589  08F1  3400               
  1590                           	retlw	04h
  1591  08F2  3404               	retlw	0
  1592  08F3  3400               
  1593                           	retlw	02h
  1594  08F4  3402               	retlw	0
  1595  08F5  3400               
  1596                           	retlw	07Fh
  1597  08F6  347F               	retlw	0
  1598  08F7  3400               
  1599                           	retlw	07Fh
  1600  08F8  347F               	retlw	0
  1601  08F9  3400               
  1602                           	retlw	04h
  1603  08FA  3404               	retlw	0
  1604  08FB  3400               
  1605                           	retlw	08h
  1606  08FC  3408               	retlw	0
  1607  08FD  3400               
  1608                           	retlw	010h
  1609  08FE  3410               	retlw	0
  1610  08FF  3400               
  1611                           	retlw	07Fh
  1612  0900  347F               	retlw	0
  1613  0901  3400               
  1614                           	retlw	03Eh
  1615  0902  343E               	retlw	0
  1616  0903  3400               
  1617                           	retlw	041h
  1618  0904  3441               	retlw	0
  1619  0905  3400               
  1620                           	retlw	041h
  1621  0906  3441               	retlw	0
  1622  0907  3400               
  1623                           	retlw	041h
  1624  0908  3441               	retlw	0
  1625  0909  3400               
  1626                           	retlw	03Eh
  1627  090A  343E               	retlw	0
  1628  090B  3400               
  1629                           	retlw	07Fh
  1630  090C  347F               	retlw	0
  1631  090D  3400               
  1632                           	retlw	09h
  1633  090E  3409               	retlw	0
  1634  090F  3400               
  1635                           	retlw	09h
  1636  0910  3409               	retlw	0
  1637  0911  3400               
  1638                           	retlw	09h
  1639  0912  3409               	retlw	0
  1640  0913  3400               
  1641                           	retlw	06h
  1642  0914  3406               	retlw	0
  1643  0915  3400               
  1644                           	retlw	03Eh
  1645  0916  343E               	retlw	0
  1646  0917  3400               
  1647                           	retlw	041h
  1648  0918  3441               	retlw	0
  1649  0919  3400               
  1650                           	retlw	051h
  1651  091A  3451               	retlw	0
  1652  091B  3400               
  1653                           	retlw	021h
  1654  091C  3421               	retlw	0
  1655  091D  3400               
  1656                           	retlw	05Eh
  1657  091E  345E               	retlw	0
  1658  091F  3400               
  1659                           	retlw	07Fh
  1660  0920  347F               	retlw	0
  1661  0921  3400               
  1662                           	retlw	09h
  1663  0922  3409               	retlw	0
  1664  0923  3400               
  1665                           	retlw	019h
  1666  0924  3419               	retlw	0
  1667  0925  3400               
  1668                           	retlw	029h
  1669  0926  3429               	retlw	0
  1670  0927  3400               
  1671                           	retlw	046h
  1672  0928  3446               	retlw	0
  1673  0929  3400               
  1674                           	retlw	046h
  1675  092A  3446               	retlw	0
  1676  092B  3400               
  1677                           	retlw	049h
  1678  092C  3449               	retlw	0
  1679  092D  3400               
  1680                           	retlw	049h
  1681  092E  3449               	retlw	0
  1682  092F  3400               
  1683                           	retlw	049h
  1684  0930  3449               	retlw	0
  1685  0931  3400               
  1686                           	retlw	031h
  1687  0932  3431               	retlw	0
  1688  0933  3400               
  1689                           	retlw	01h
  1690  0934  3401               	retlw	0
  1691  0935  3400               
  1692                           	retlw	01h
  1693  0936  3401               	retlw	0
  1694  0937  3400               
  1695                           	retlw	07Fh
  1696  0938  347F               	retlw	0
  1697  0939  3400               
  1698                           	retlw	01h
  1699  093A  3401               	retlw	0
  1700  093B  3400               
  1701                           	retlw	01h
  1702  093C  3401               	retlw	0
  1703  093D  3400               
  1704                           	retlw	03Fh
  1705  093E  343F               	retlw	0
  1706  093F  3400               
  1707                           	retlw	040h
  1708  0940  3440               	retlw	0
  1709  0941  3400               
  1710                           	retlw	040h
  1711  0942  3440               	retlw	0
  1712  0943  3400               
  1713                           	retlw	040h
  1714  0944  3440               	retlw	0
  1715  0945  3400               
  1716                           	retlw	03Fh
  1717  0946  343F               	retlw	0
  1718  0947  3400               
  1719                           	retlw	01Fh
  1720  0948  341F               	retlw	0
  1721  0949  3400               
  1722                           	retlw	020h
  1723  094A  3420               	retlw	0
  1724  094B  3400               
  1725                           	retlw	040h
  1726  094C  3440               	retlw	0
  1727  094D  3400               
  1728                           	retlw	020h
  1729  094E  3420               	retlw	0
  1730  094F  3400               
  1731                           	retlw	01Fh
  1732  0950  341F               	retlw	0
  1733  0951  3400               
  1734                           	retlw	07Fh
  1735  0952  347F               	retlw	0
  1736  0953  3400               
  1737                           	retlw	020h
  1738  0954  3420               	retlw	0
  1739  0955  3400               
  1740                           	retlw	018h
  1741  0956  3418               	retlw	0
  1742  0957  3400               
  1743                           	retlw	020h
  1744  0958  3420               	retlw	0
  1745  0959  3400               
  1746                           	retlw	07Fh
  1747  095A  347F               	retlw	0
  1748  095B  3400               
  1749                           	retlw	063h
  1750  095C  3463               	retlw	0
  1751  095D  3400               
  1752                           	retlw	014h
  1753  095E  3414               	retlw	0
  1754  095F  3400               
  1755                           	retlw	08h
  1756  0960  3408               	retlw	0
  1757  0961  3400               
  1758                           	retlw	014h
  1759  0962  3414               	retlw	0
  1760  0963  3400               
  1761                           	retlw	063h
  1762  0964  3463               	retlw	0
  1763  0965  3400               
  1764                           	retlw	03h
  1765  0966  3403               	retlw	0
  1766  0967  3400               
  1767                           	retlw	04h
  1768  0968  3404               	retlw	0
  1769  0969  3400               
  1770                           	retlw	078h
  1771  096A  3478               	retlw	0
  1772  096B  3400               
  1773                           	retlw	04h
  1774  096C  3404               	retlw	0
  1775  096D  3400               
  1776                           	retlw	03h
  1777  096E  3403               	retlw	0
  1778  096F  3400               
  1779                           	retlw	061h
  1780  0970  3461               	retlw	0
  1781  0971  3400               
  1782                           	retlw	051h
  1783  0972  3451               	retlw	0
  1784  0973  3400               
  1785                           	retlw	049h
  1786  0974  3449               	retlw	0
  1787  0975  3400               
  1788                           	retlw	045h
  1789  0976  3445               	retlw	0
  1790  0977  3400               
  1791                           	retlw	043h
  1792  0978  3443               	retlw	0
  1793  0979  3400               
  1794                           	retlw	low(0)
  1795  097A  3400               	retlw	high(0)
  1796  097B  3400               
  1797                           	retlw	low(0)
  1798  097C  3400               	retlw	high(0)
  1799  097D  3400               
  1800                           	retlw	low(0)
  1801  097E  3400               	retlw	high(0)
  1802  097F  3400               
  1803                           	retlw	low(0)
  1804  0980  3400               	retlw	high(0)
  1805  0981  3400               
  1806                           	retlw	low(0)
  1807  0982  3400               	retlw	high(0)
  1808  0983  3400               
  1809                           	global __end_of_font
  1810                           __end_of_font:
  1811  0984                     	global	_dpowers
  1812                           psect	stringtext
  1813                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1814                           	line	358
  1815                           _dpowers:
  1816  0984                     	retlw	01h
  1817  0984  3401               	retlw	0
  1818  0985  3400               
  1819                           	retlw	0Ah
  1820  0986  340A               	retlw	0
  1821  0987  3400               
  1822                           	retlw	064h
  1823  0988  3464               	retlw	0
  1824  0989  3400               
  1825                           	retlw	0E8h
  1826  098A  34E8               	retlw	03h
  1827  098B  3403               
  1828                           	retlw	010h
  1829  098C  3410               	retlw	027h
  1830  098D  3427               
  1831                           	global __end_of_dpowers
  1832                           __end_of_dpowers:
  1833  098E                     	global	_step_size
  1834                           psect	stringtext
  1835                           	file	"./Volume.h"
  1836                           	line	5
  1837                           _step_size:
  1838  098E                     	retlw	019h
  1839  098E  3419               	retlw	0
  1840  098F  3400               
  1841                           	global __end_of_step_size
  1842                           __end_of_step_size:
  1843  0990                     	global	_font
  1844                           	global	_dpowers
  1845                           	global	_step_size
  1846                           	global	_ir_input
  1847                           	global	__lastAdcResult
  1848                           	global	__lastB
  1849                           	global	__lastA
  1850                           	global	__inputUpdateRequired
  1851                           	global	_lastInput
  1852                           	global	_lastVolume
  1853                           	global	_volume
  1854                           	global	__selectedInput
  1855                           	global	__selectedDisplay
  1856                           	global	_ADRESH
  1857                           _ADRESH	set	0x1E
  1858  001E                     	global	_PORTC
  1859                           _PORTC	set	0x7
  1860  0007                     	global	_PORTA
  1861                           _PORTA	set	0x5
  1862  0005                     	global	_SSPBUF
  1863                           _SSPBUF	set	0x13
  1864  0013                     	global	_PORTCbits
  1865                           _PORTCbits	set	0x7
  1866  0007                     	global	_PORTDbits
  1867                           _PORTDbits	set	0x8
  1868  0008                     	global	_SSPCON
  1869                           _SSPCON	set	0x14
  1870  0014                     	global	_PIR1bits
  1871                           _PIR1bits	set	0xC
  1872  000C                     	global	_PORTBbits
  1873                           _PORTBbits	set	0x6
  1874  0006                     	global	_INTCONbits
  1875                           _INTCONbits	set	0xB
  1876  000B                     	global	_ADCON0bits
  1877                           _ADCON0bits	set	0x1F
  1878  001F                     	global	_ADRESL
  1879                           _ADRESL	set	0x9E
  1880  009E                     	global	_PIE1bits
  1881                           _PIE1bits	set	0x8C
  1882  008C                     	global	_ADCON1bits
  1883                           _ADCON1bits	set	0x9F
  1884  009F                     	global	_IOCBbits
  1885                           _IOCBbits	set	0x96
  1886  0096                     	global	_TRISCbits
  1887                           _TRISCbits	set	0x87
  1888  0087                     	global	_TRISEbits
  1889                           _TRISEbits	set	0x89
  1890  0089                     	global	_TRISBbits
  1891                           _TRISBbits	set	0x86
  1892  0086                     	global	_TRISAbits
  1893                           _TRISAbits	set	0x85
  1894  0085                     	global	_OSCCONbits
  1895                           _OSCCONbits	set	0x8F
  1896  008F                     	global	_SSPSTATbits
  1897                           _SSPSTATbits	set	0x94
  1898  0094                     	global	_TRISC
  1899                           _TRISC	set	0x87
  1900  0087                     	global	_TRISD
  1901                           _TRISD	set	0x88
  1902  0088                     	global	_SSPSTAT
  1903                           _SSPSTAT	set	0x94
  1904  0094                     	global	_ANSELbits
  1905                           _ANSELbits	set	0x188
  1906  0188                     	global	_ANSELHbits
  1907                           _ANSELHbits	set	0x189
  1908  0189                     	
  1909                           STR_1:	
  1910  0990                     	retlw	73	;'I'
  1911  0990  3449               	retlw	78	;'N'
  1912  0991  344E               	retlw	80	;'P'
  1913  0992  3450               	retlw	85	;'U'
  1914  0993  3455               	retlw	84	;'T'
  1915  0994  3454               	retlw	0
  1916  0995  3400               psect	stringtext
  1917                           	
  1918                           STR_2:	
  1919  0996                     	retlw	86	;'V'
  1920  0996  3456               	retlw	79	;'O'
  1921  0997  344F               	retlw	76	;'L'
  1922  0998  344C               	retlw	0
  1923  0999  3400               psect	stringtext
  1924                           	
  1925                           STR_3:	
  1926  099A                     	retlw	37	;'%'
  1927  099A  3425               	retlw	100	;'d'
  1928  099B  3464               	retlw	0
  1929  099C  3400               psect	stringtext
  1930                           ; #config settings
  1931                           global __CFG_FOSC$INTRC_CLKOUT
  1932                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1933  0000                     global __CFG_WDTE$OFF
  1934                           __CFG_WDTE$OFF equ 0x0
  1935  0000                     global __CFG_PWRTE$OFF
  1936                           __CFG_PWRTE$OFF equ 0x0
  1937  0000                     global __CFG_MCLRE$OFF
  1938                           __CFG_MCLRE$OFF equ 0x0
  1939  0000                     global __CFG_CP$OFF
  1940                           __CFG_CP$OFF equ 0x0
  1941  0000                     global __CFG_CPD$OFF
  1942                           __CFG_CPD$OFF equ 0x0
  1943  0000                     global __CFG_BOREN$ON
  1944                           __CFG_BOREN$ON equ 0x0
  1945  0000                     global __CFG_IESO$OFF
  1946                           __CFG_IESO$OFF equ 0x0
  1947  0000                     global __CFG_FCMEN$OFF
  1948                           __CFG_FCMEN$OFF equ 0x0
  1949  0000                     global __CFG_LVP$OFF
  1950                           __CFG_LVP$OFF equ 0x0
  1951  0000                     global __CFG_BOR4V$BOR21V
  1952                           __CFG_BOR4V$BOR21V equ 0x0
  1953  0000                     global __CFG_WRT$OFF
  1954                           __CFG_WRT$OFF equ 0x0
  1955  0000                     	file	"C:\Users\Vincent\AppData\Local\Temp\skck."
  1956                           	line	#
  1957                           psect cinit,class=CODE,delta=2
  1958                           global start_initialization
  1959                           start_initialization:
  1960  07E4                     
  1961                           global __initialization
  1962                           __initialization:
  1963  07E4                     psect	bssBANK0,class=BANK0,space=1,noexec
  1964                           global __pbssBANK0
  1965                           __pbssBANK0:
  1966  005C                     _ir_input:
  1967  005C                            ds      4
  1968  005C                     
  1969                           __lastAdcResult:
  1970  0060                            ds      2
  1971  0060                     
  1972                           __lastB:
  1973  0062                            ds      2
  1974  0062                     
  1975                           __lastA:
  1976  0064                            ds      2
  1977  0064                     
  1978                           __inputUpdateRequired:
  1979  0066                            ds      1
  1980  0066                     
  1981                           psect	bssBANK1,class=BANK1,space=1,noexec
  1982                           global __pbssBANK1
  1983                           __pbssBANK1:
  1984  00C5                     _lastInput:
  1985  00C5                            ds      2
  1986  00C5                     
  1987                           _lastVolume:
  1988  00C7                            ds      2
  1989  00C7                     
  1990                           _volume:
  1991  00C9                            ds      2
  1992  00C9                     
  1993                           __selectedInput:
  1994  00CB                            ds      2
  1995  00CB                     
  1996                           __selectedDisplay:
  1997  00CD                            ds      1
  1998  00CD                     
  1999                           	file	"C:\Users\Vincent\AppData\Local\Temp\skck."
  2000                           	line	#
  2001                           ; Clear objects allocated to BANK0
  2002                           psect cinit,class=CODE,delta=2,merge=1
  2003                           	bcf	status, 5	;RP0=0, select bank0
  2004  07E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2005  07E5  1303               	clrf	((__pbssBANK0)+0)&07Fh
  2006  07E6  01DC               	clrf	((__pbssBANK0)+1)&07Fh
  2007  07E7  01DD               	clrf	((__pbssBANK0)+2)&07Fh
  2008  07E8  01DE               	clrf	((__pbssBANK0)+3)&07Fh
  2009  07E9  01DF               	clrf	((__pbssBANK0)+4)&07Fh
  2010  07EA  01E0               	clrf	((__pbssBANK0)+5)&07Fh
  2011  07EB  01E1               	clrf	((__pbssBANK0)+6)&07Fh
  2012  07EC  01E2               	clrf	((__pbssBANK0)+7)&07Fh
  2013  07ED  01E3               	clrf	((__pbssBANK0)+8)&07Fh
  2014  07EE  01E4               	clrf	((__pbssBANK0)+9)&07Fh
  2015  07EF  01E5               	clrf	((__pbssBANK0)+10)&07Fh
  2016  07F0  01E6               ; Clear objects allocated to BANK1
  2017                           psect cinit,class=CODE,delta=2,merge=1
  2018                           	bsf	status, 5	;RP0=1, select bank1
  2019  07F1  1683               	bcf	status, 6	;RP1=0, select bank1
  2020  07F2  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2021  07F3  01C5               	clrf	((__pbssBANK1)+1)&07Fh
  2022  07F4  01C6               	clrf	((__pbssBANK1)+2)&07Fh
  2023  07F5  01C7               	clrf	((__pbssBANK1)+3)&07Fh
  2024  07F6  01C8               	clrf	((__pbssBANK1)+4)&07Fh
  2025  07F7  01C9               	clrf	((__pbssBANK1)+5)&07Fh
  2026  07F8  01CA               	clrf	((__pbssBANK1)+6)&07Fh
  2027  07F9  01CB               	clrf	((__pbssBANK1)+7)&07Fh
  2028  07FA  01CC               	clrf	((__pbssBANK1)+8)&07Fh
  2029  07FB  01CD               psect cinit,class=CODE,delta=2,merge=1
  2030                           global end_of_initialization,__end_of__initialization
  2031                           
  2032                           ;End of C runtime variable initialization code
  2033                           
  2034                           end_of_initialization:
  2035  07FC                     __end_of__initialization:
  2036  07FC                     clrf status
  2037  07FC  0183               ljmp _main	;jump to C main() function
  2038  07FD  120A  118A  2816   psect	cstackBANK1,class=BANK1,space=1,noexec
  2039                           global __pcstackBANK1
  2040                           __pcstackBANK1:
  2041  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2042  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2043  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2044  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2045  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2046  00A0                     	global	?___wmul
  2047                           ?___wmul:	; 2 bytes @ 0x0
  2048  00A0                     	global	?___lwdiv
  2049                           ?___lwdiv:	; 2 bytes @ 0x0
  2050  00A0                     	global	spiWrite@data
  2051                           spiWrite@data:	; 1 bytes @ 0x0
  2052  00A0                     	global	___wmul@multiplier
  2053                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2054  00A0                     	global	___lwdiv@divisor
  2055                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2056  00A0                     	ds	1
  2057  00A0                     ??_config:	; 1 bytes @ 0x1
  2058  00A1                     ?_write_space:	; 1 bytes @ 0x1
  2059  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2060  00A1                     	global	write_space@count
  2061                           write_space@count:	; 2 bytes @ 0x1
  2062  00A1                     	ds	1
  2063  00A1                     	global	___wmul@multiplicand
  2064                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2065  00A2                     	global	___lwdiv@dividend
  2066                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2067  00A2                     	ds	1
  2068  00A2                     ??_write_space:	; 1 bytes @ 0x3
  2069  00A3                     	ds	1
  2070  00A3                     ??___wmul:	; 1 bytes @ 0x4
  2071  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2072  00A4                     	global	write_space@i
  2073                           write_space@i:	; 2 bytes @ 0x4
  2074  00A4                     	global	___wmul@product
  2075                           ___wmul@product:	; 2 bytes @ 0x4
  2076  00A4                     	ds	1
  2077  00A4                     	global	___lwdiv@quotient
  2078                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2079  00A5                     	ds	1
  2080  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2081  00A6                     	global	write_space@x
  2082                           write_space@x:	; 2 bytes @ 0x6
  2083  00A6                     	global	write_font@fontPos
  2084                           write_font@fontPos:	; 2 bytes @ 0x6
  2085  00A6                     	ds	1
  2086  00A6                     	global	___lwdiv@counter
  2087                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2088  00A7                     	ds	1
  2089  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2090  00A8                     	global	?___lwmod
  2091                           ?___lwmod:	; 2 bytes @ 0x8
  2092  00A8                     	global	___lwmod@divisor
  2093                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2094  00A8                     	ds	2
  2095  00A8                     	global	___lwmod@dividend
  2096                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2097  00AA                     	ds	2
  2098  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2099  00AC                     	ds	1
  2100  00AC                     	global	___lwmod@counter
  2101                           ___lwmod@counter:	; 1 bytes @ 0xD
  2102  00AD                     	ds	1
  2103  00AD                     	global	?_sprintf
  2104                           ?_sprintf:	; 2 bytes @ 0xE
  2105  00AE                     	global	write_font@x
  2106                           write_font@x:	; 2 bytes @ 0xE
  2107  00AE                     	global	sprintf@f
  2108                           sprintf@f:	; 2 bytes @ 0xE
  2109  00AE                     	ds	2
  2110  00AE                     ??_write_char:	; 1 bytes @ 0x10
  2111  00B0                     	global	write_char@pos
  2112                           write_char@pos:	; 2 bytes @ 0x10
  2113  00B0                     	ds	2
  2114  00B0                     ??_sprintf:	; 1 bytes @ 0x12
  2115  00B2                     	global	write_char@c
  2116                           write_char@c:	; 1 bytes @ 0x12
  2117  00B2                     	ds	1
  2118  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2119  00B3                     	global	write_text@text
  2120                           write_text@text:	; 2 bytes @ 0x13
  2121  00B3                     	ds	2
  2122  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2123  00B5                     	global	write_text@c
  2124                           write_text@c:	; 2 bytes @ 0x15
  2125  00B5                     	ds	1
  2126  00B5                     	global	sprintf@ap
  2127                           sprintf@ap:	; 1 bytes @ 0x16
  2128  00B6                     	ds	1
  2129  00B6                     	global	sprintf@flag
  2130                           sprintf@flag:	; 1 bytes @ 0x17
  2131  00B7                     	ds	1
  2132  00B7                     	global	sprintf@prec
  2133                           sprintf@prec:	; 1 bytes @ 0x18
  2134  00B8                     	ds	1
  2135  00B8                     	global	sprintf@val
  2136                           sprintf@val:	; 2 bytes @ 0x19
  2137  00B9                     	ds	2
  2138  00B9                     	global	sprintf@sp
  2139                           sprintf@sp:	; 1 bytes @ 0x1B
  2140  00BB                     	ds	1
  2141  00BB                     	global	sprintf@c
  2142                           sprintf@c:	; 1 bytes @ 0x1C
  2143  00BC                     	ds	1
  2144  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2145  00BD                     	global	write_int@number
  2146                           write_int@number:	; 2 bytes @ 0x1D
  2147  00BD                     	ds	2
  2148  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2149  00BF                     	global	write_int@num
  2150                           write_int@num:	; 2 bytes @ 0x1F
  2151  00BF                     	ds	2
  2152  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2153  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2154  00C1                     	global	update_volume@spaces
  2155                           update_volume@spaces:	; 2 bytes @ 0x21
  2156  00C1                     	ds	2
  2157  00C1                     ??_main:	; 1 bytes @ 0x23
  2158  00C3                     	ds	2
  2159  00C3                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2160                           global __pcstackCOMMON
  2161                           __pcstackCOMMON:
  2162  0071                     ?_config:	; 1 bytes @ 0x0
  2163  0071                     ?_update_volume:	; 1 bytes @ 0x0
  2164  0071                     ?_update_input:	; 1 bytes @ 0x0
  2165  0071                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2166  0071                     ?_handle_rotary:	; 1 bytes @ 0x0
  2167  0071                     ??_handle_rotary:	; 1 bytes @ 0x0
  2168  0071                     ?_start_receive:	; 1 bytes @ 0x0
  2169  0071                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2170  0071                     ?_spiWrite:	; 1 bytes @ 0x0
  2171  0071                     ?_display_write_start:	; 1 bytes @ 0x0
  2172  0071                     ?_display_write_end:	; 1 bytes @ 0x0
  2173  0071                     ?_write_char:	; 1 bytes @ 0x0
  2174  0071                     ?_init_adc:	; 1 bytes @ 0x0
  2175  0071                     ?_handle_remote:	; 1 bytes @ 0x0
  2176  0071                     ??_handle_remote:	; 1 bytes @ 0x0
  2177  0071                     ?_main:	; 1 bytes @ 0x0
  2178  0071                     ?_isr:	; 1 bytes @ 0x0
  2179  0071                     ?_display_init:	; 1 bytes @ 0x0
  2180  0071                     	global	?i1___wmul
  2181                           ?i1___wmul:	; 2 bytes @ 0x0
  2182  0071                     	global	?i1___lwdiv
  2183                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2184  0071                     	global	?___xxtofl
  2185                           ?___xxtofl:	; 4 bytes @ 0x0
  2186  0071                     	global	handle_remote@mask
  2187                           handle_remote@mask:	; 2 bytes @ 0x0
  2188  0071                     	global	i1___wmul@multiplier
  2189                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2190  0071                     	global	i1___lwdiv@divisor
  2191                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2192  0071                     	global	___xxtofl@val
  2193                           ___xxtofl@val:	; 4 bytes @ 0x0
  2194  0071                     	ds	2
  2195  0071                     	global	handle_remote@data
  2196                           handle_remote@data:	; 2 bytes @ 0x2
  2197  0073                     	global	i1___wmul@multiplicand
  2198                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2199  0073                     	global	i1___lwdiv@dividend
  2200                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2201  0073                     	ds	1
  2202  0073                     	global	handle_rotary@portA
  2203                           handle_rotary@portA:	; 2 bytes @ 0x3
  2204  0074                     	ds	1
  2205  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  2206  0075                     ??i1___wmul:	; 1 bytes @ 0x4
  2207  0075                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2208  0075                     	global	handle_remote@found
  2209                           handle_remote@found:	; 1 bytes @ 0x4
  2210  0075                     	global	i1___wmul@product
  2211                           i1___wmul@product:	; 2 bytes @ 0x4
  2212  0075                     	ds	1
  2213  0075                     ??_start_receive:	; 1 bytes @ 0x5
  2214  0076                     	global	handle_rotary@portB
  2215                           handle_rotary@portB:	; 2 bytes @ 0x5
  2216  0076                     	global	i1___lwdiv@quotient
  2217                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2218  0076                     	ds	2
  2219  0076                     	global	i1___lwdiv@counter
  2220                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2221  0078                     	ds	1
  2222  0078                     	global	___fladd@signs
  2223                           ___fladd@signs:	; 1 bytes @ 0x8
  2224  0079                     	ds	1
  2225  0079                     	global	___fladd@aexp
  2226                           ___fladd@aexp:	; 1 bytes @ 0x9
  2227  007A                     	ds	1
  2228  007A                     	global	___fladd@bexp
  2229                           ___fladd@bexp:	; 1 bytes @ 0xA
  2230  007B                     	ds	1
  2231  007B                     	global	___fladd@grs
  2232                           ___fladd@grs:	; 1 bytes @ 0xB
  2233  007C                     	ds	2
  2234  007C                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2235                           global __pcstackBANK0
  2236                           __pcstackBANK0:
  2237  0020                     	global	___xxtofl@sign
  2238                           ___xxtofl@sign:	; 1 bytes @ 0x0
  2239  0020                     	global	start_receive@i
  2240                           start_receive@i:	; 2 bytes @ 0x0
  2241  0020                     	ds	1
  2242  0020                     	global	___xxtofl@exp
  2243                           ___xxtofl@exp:	; 1 bytes @ 0x1
  2244  0021                     	ds	1
  2245  0021                     	global	___xxtofl@arg
  2246                           ___xxtofl@arg:	; 4 bytes @ 0x2
  2247  0022                     	ds	4
  2248  0022                     	global	?___fladd
  2249                           ?___fladd:	; 4 bytes @ 0x6
  2250  0026                     	global	___fladd@b
  2251                           ___fladd@b:	; 4 bytes @ 0x6
  2252  0026                     	ds	4
  2253  0026                     	global	___fladd@a
  2254                           ___fladd@a:	; 4 bytes @ 0xA
  2255  002A                     	ds	4
  2256  002A                     ??___fladd:	; 1 bytes @ 0xE
  2257  002E                     	ds	12
  2258  002E                     	global	?___fltol
  2259                           ?___fltol:	; 4 bytes @ 0x1A
  2260  003A                     	global	___fltol@f1
  2261                           ___fltol@f1:	; 4 bytes @ 0x1A
  2262  003A                     	ds	4
  2263  003A                     ??___fltol:	; 1 bytes @ 0x1E
  2264  003E                     	ds	5
  2265  003E                     	global	___fltol@sign1
  2266                           ___fltol@sign1:	; 1 bytes @ 0x23
  2267  0043                     	ds	1
  2268  0043                     	global	___fltol@exp1
  2269                           ___fltol@exp1:	; 1 bytes @ 0x24
  2270  0044                     	ds	1
  2271  0044                     	global	?_is_deadzone
  2272                           ?_is_deadzone:	; 2 bytes @ 0x25
  2273  0045                     	global	is_deadzone@currentStep
  2274                           is_deadzone@currentStep:	; 2 bytes @ 0x25
  2275  0045                     	ds	2
  2276  0045                     	global	is_deadzone@adcResult
  2277                           is_deadzone@adcResult:	; 2 bytes @ 0x27
  2278  0047                     	ds	2
  2279  0047                     ??_is_deadzone:	; 1 bytes @ 0x29
  2280  0049                     	ds	2
  2281  0049                     	global	is_deadzone@deadzoneLow
  2282                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x2B
  2283  004B                     	ds	2
  2284  004B                     	global	is_deadzone@deadzoneHigh
  2285                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2D
  2286  004D                     	ds	2
  2287  004D                     	global	_is_deadzone$867
  2288                           _is_deadzone$867:	; 1 bytes @ 0x2F
  2289  004F                     	ds	1
  2290  004F                     	global	is_deadzone@turnPoint
  2291                           is_deadzone@turnPoint:	; 2 bytes @ 0x30
  2292  0050                     	ds	2
  2293  0050                     ??_handle_potmeter:	; 1 bytes @ 0x32
  2294  0052                     	ds	2
  2295  0052                     	global	handle_potmeter@currentStep
  2296                           handle_potmeter@currentStep:	; 2 bytes @ 0x34
  2297  0054                     	ds	2
  2298  0054                     	global	handle_potmeter@ad_result
  2299                           handle_potmeter@ad_result:	; 2 bytes @ 0x36
  2300  0056                     	ds	2
  2301  0056                     ??_isr:	; 1 bytes @ 0x38
  2302  0058                     	ds	4
  2303  0058                     ;!
  2304                           ;!Data Sizes:
  2305                           ;!    Strings     13
  2306                           ;!    Constant    382
  2307                           ;!    Data        0
  2308                           ;!    BSS         20
  2309                           ;!    Persistent  0
  2310                           ;!    Stack       0
  2311                           ;!
  2312                           ;!Auto Spaces:
  2313                           ;!    Space          Size  Autos    Used
  2314                           ;!    COMMON           13     13      13
  2315                           ;!    BANK0            80     60      71
  2316                           ;!    BANK1            80     37      46
  2317                           ;!    BANK3            85      0       0
  2318                           ;!    BANK2            96      0       0
  2319                           
  2320                           ;!
  2321                           ;!Pointer List with Targets:
  2322                           ;!
  2323                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2324                           ;!		 -> STR_3(CODE[3]), 
  2325                           ;!
  2326                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2327                           ;!		 -> write_int@num(BANK1[2]), 
  2328                           ;!
  2329                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2330                           ;!		 -> ?_sprintf(BANK1[2]), 
  2331                           ;!
  2332                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2333                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2334                           ;!
  2335                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2336                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2337                           ;!
  2338                           
  2339                           
  2340                           ;!
  2341                           ;!Critical Paths under _main in COMMON
  2342                           ;!
  2343                           ;!    None.
  2344                           ;!
  2345                           ;!Critical Paths under _isr in COMMON
  2346                           ;!
  2347                           ;!    _isr->_start_receive
  2348                           ;!    _start_receive->_handle_remote
  2349                           ;!    _is_deadzone->___fladd
  2350                           ;!    ___fltol->___fladd
  2351                           ;!    ___fladd->___xxtofl
  2352                           ;!
  2353                           ;!Critical Paths under _main in BANK0
  2354                           ;!
  2355                           ;!    None.
  2356                           ;!
  2357                           ;!Critical Paths under _isr in BANK0
  2358                           ;!
  2359                           ;!    _isr->_handle_potmeter
  2360                           ;!    _handle_potmeter->_is_deadzone
  2361                           ;!    _is_deadzone->___fltol
  2362                           ;!    ___fltol->___fladd
  2363                           ;!    ___fladd->___xxtofl
  2364                           ;!
  2365                           ;!Critical Paths under _main in BANK1
  2366                           ;!
  2367                           ;!    _main->_update_volume
  2368                           ;!    _update_volume->_write_int
  2369                           ;!    _update_input->_write_int
  2370                           ;!    _write_space->_spiWrite
  2371                           ;!    _write_int->_sprintf
  2372                           ;!    _write_text->_write_char
  2373                           ;!    _write_char->_write_font
  2374                           ;!    _write_font->___wmul
  2375                           ;!    _sprintf->___lwmod
  2376                           ;!    ___lwmod->___lwdiv
  2377                           ;!    _display_init->_spiWrite
  2378                           ;!
  2379                           ;!Critical Paths under _isr in BANK1
  2380                           ;!
  2381                           ;!    None.
  2382                           ;!
  2383                           ;!Critical Paths under _main in BANK3
  2384                           ;!
  2385                           ;!    None.
  2386                           ;!
  2387                           ;!Critical Paths under _isr in BANK3
  2388                           ;!
  2389                           ;!    None.
  2390                           ;!
  2391                           ;!Critical Paths under _main in BANK2
  2392                           ;!
  2393                           ;!    None.
  2394                           ;!
  2395                           ;!Critical Paths under _isr in BANK2
  2396                           ;!
  2397                           ;!    None.
  2398                           
  2399 ;;
  2400 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2401 ;;
  2402                           
  2403                           ;!
  2404                           ;!Call Graph Tables:
  2405                           ;!
  2406                           ;! ---------------------------------------------------------------------------------
  2407                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2408                           ;! ---------------------------------------------------------------------------------
  2409                           ;! (0) _main                                                 2     2      0   10634
  2410                           ;!                                             35 BANK1      2     2      0
  2411                           ;!              _activateSelectedRelay
  2412                           ;!                             _config
  2413                           ;!                       _update_input
  2414                           ;!                      _update_volume
  2415                           ;! ---------------------------------------------------------------------------------
  2416                           ;! (1) _update_volume                                        2     2      0    5318
  2417                           ;!                                             33 BANK1      2     2      0
  2418                           ;!                  _display_write_end
  2419                           ;!                _display_write_start
  2420                           ;!                          _write_int
  2421                           ;!                        _write_space
  2422                           ;!                         _write_text
  2423                           ;! ---------------------------------------------------------------------------------
  2424                           ;! (1) _update_input                                         0     0      0    5294
  2425                           ;!                  _display_write_end
  2426                           ;!                _display_write_start
  2427                           ;!                          _write_int
  2428                           ;!                        _write_space
  2429                           ;!                         _write_text
  2430                           ;! ---------------------------------------------------------------------------------
  2431                           ;! (2) _write_space                                          7     5      2     266
  2432                           ;!                                              1 BANK1      7     5      2
  2433                           ;!                           _spiWrite
  2434                           ;! ---------------------------------------------------------------------------------
  2435                           ;! (2) _write_int                                            4     2      2    3781
  2436                           ;!                                             29 BANK1      4     2      2
  2437                           ;!                            _sprintf
  2438                           ;!                         _write_char
  2439                           ;!                         _write_text
  2440                           ;! ---------------------------------------------------------------------------------
  2441                           ;! (2) _write_text                                           4     2      2    1247
  2442                           ;!                                             19 BANK1      4     2      2
  2443                           ;!                         _write_char
  2444                           ;! ---------------------------------------------------------------------------------
  2445                           ;! (3) _write_char                                           3     3      0     951
  2446                           ;!                                             16 BANK1      3     3      0
  2447                           ;!                         _write_font
  2448                           ;! ---------------------------------------------------------------------------------
  2449                           ;! (4) _write_font                                          10     8      2     684
  2450                           ;!                                              6 BANK1     10     8      2
  2451                           ;!                             ___wmul
  2452                           ;!                           _spiWrite
  2453                           ;! ---------------------------------------------------------------------------------
  2454                           ;! (5) ___wmul                                               6     2      4     344
  2455                           ;!                                              0 BANK1      6     2      4
  2456                           ;! ---------------------------------------------------------------------------------
  2457                           ;! (3) _sprintf                                             23    19      4    1311
  2458                           ;!                                             14 BANK1     15    11      4
  2459                           ;!                            ___lwdiv
  2460                           ;!                            ___lwmod
  2461                           ;! ---------------------------------------------------------------------------------
  2462                           ;! (4) ___lwmod                                              6     2      4     311
  2463                           ;!                                              8 BANK1      6     2      4
  2464                           ;!                            ___lwdiv (ARG)
  2465                           ;! ---------------------------------------------------------------------------------
  2466                           ;! (4) ___lwdiv                                              8     4      4     414
  2467                           ;!                                              0 BANK1      8     4      4
  2468                           ;! ---------------------------------------------------------------------------------
  2469                           ;! (2) _display_write_start                                  0     0      0       0
  2470                           ;! ---------------------------------------------------------------------------------
  2471                           ;! (2) _display_write_end                                    0     0      0       0
  2472                           ;! ---------------------------------------------------------------------------------
  2473                           ;! (1) _config                                               3     3      0      22
  2474                           ;!                                              1 BANK1      3     3      0
  2475                           ;!                       _display_init
  2476                           ;!                           _init_adc
  2477                           ;! ---------------------------------------------------------------------------------
  2478                           ;! (2) _init_adc                                             0     0      0       0
  2479                           ;! ---------------------------------------------------------------------------------
  2480                           ;! (2) _display_init                                         0     0      0      22
  2481                           ;!                           _spiWrite
  2482                           ;! ---------------------------------------------------------------------------------
  2483                           ;! (5) _spiWrite                                             1     1      0      22
  2484                           ;!                                              0 BANK1      1     1      0
  2485                           ;! ---------------------------------------------------------------------------------
  2486                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2487                           ;! ---------------------------------------------------------------------------------
  2488                           ;! Estimated maximum stack depth 5
  2489                           ;! ---------------------------------------------------------------------------------
  2490                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2491                           ;! ---------------------------------------------------------------------------------
  2492                           ;! (7) _isr                                                  4     4      0    4371
  2493                           ;!                                             56 BANK0      4     4      0
  2494                           ;!                    _handle_potmeter
  2495                           ;!                      _handle_rotary
  2496                           ;!                      _start_receive
  2497                           ;! ---------------------------------------------------------------------------------
  2498                           ;! (8) _start_receive                                       10    10      0      99
  2499                           ;!                                              5 COMMON     8     8      0
  2500                           ;!                                              0 BANK0      2     2      0
  2501                           ;!                      _handle_remote
  2502                           ;! ---------------------------------------------------------------------------------
  2503                           ;! (9) _handle_remote                                        5     5      0      53
  2504                           ;!                                              0 COMMON     5     5      0
  2505                           ;! ---------------------------------------------------------------------------------
  2506                           ;! (8) _handle_rotary                                        7     7      0     134
  2507                           ;!                                              0 COMMON     7     7      0
  2508                           ;! ---------------------------------------------------------------------------------
  2509                           ;! (8) _handle_potmeter                                      6     6      0    4138
  2510                           ;!                                             50 BANK0      6     6      0
  2511                           ;!                        _is_deadzone
  2512                           ;!                          i1___lwdiv
  2513                           ;! ---------------------------------------------------------------------------------
  2514                           ;! (9) i1___lwdiv                                            8     4      4     214
  2515                           ;!                                              0 COMMON     8     4      4
  2516                           ;! ---------------------------------------------------------------------------------
  2517                           ;! (9) _is_deadzone                                         13     9      4    3746
  2518                           ;!                                             37 BANK0     13     9      4
  2519                           ;!                            ___fladd
  2520                           ;!                            ___fltol
  2521                           ;!                           ___xxtofl
  2522                           ;!                           i1___wmul
  2523                           ;! ---------------------------------------------------------------------------------
  2524                           ;! (10) i1___wmul                                            6     2      4     144
  2525                           ;!                                              0 COMMON     6     2      4
  2526                           ;! ---------------------------------------------------------------------------------
  2527                           ;! (10) ___xxtofl                                           14    10      4     474
  2528                           ;!                                              0 COMMON     8     4      4
  2529                           ;!                                              0 BANK0      6     6      0
  2530                           ;! ---------------------------------------------------------------------------------
  2531                           ;! (10) ___fltol                                            11     7      4     381
  2532                           ;!                                             26 BANK0     11     7      4
  2533                           ;!                            ___fladd (ARG)
  2534                           ;!                           ___xxtofl (ARG)
  2535                           ;! ---------------------------------------------------------------------------------
  2536                           ;! (10) ___fladd                                            24    16      8    2414
  2537                           ;!                                              8 COMMON     4     4      0
  2538                           ;!                                              6 BANK0     20    12      8
  2539                           ;!                           ___xxtofl (ARG)
  2540                           ;! ---------------------------------------------------------------------------------
  2541                           ;! Estimated maximum stack depth 10
  2542                           ;! ---------------------------------------------------------------------------------
  2543                           ;!
  2544                           ;! Call Graph Graphs:
  2545                           ;!
  2546                           ;! _main (ROOT)
  2547                           ;!   _activateSelectedRelay
  2548                           ;!   _config
  2549                           ;!     _display_init
  2550                           ;!       _spiWrite
  2551                           ;!     _init_adc
  2552                           ;!   _update_input
  2553                           ;!     _display_write_end
  2554                           ;!     _display_write_start
  2555                           ;!     _write_int
  2556                           ;!       _sprintf
  2557                           ;!         ___lwdiv
  2558                           ;!         ___lwmod
  2559                           ;!           ___lwdiv (ARG)
  2560                           ;!       _write_char
  2561                           ;!         _write_font
  2562                           ;!           ___wmul
  2563                           ;!           _spiWrite
  2564                           ;!       _write_text
  2565                           ;!         _write_char
  2566                           ;!           _write_font
  2567                           ;!             ___wmul
  2568                           ;!             _spiWrite
  2569                           ;!     _write_space
  2570                           ;!       _spiWrite
  2571                           ;!     _write_text
  2572                           ;!       _write_char
  2573                           ;!         _write_font
  2574                           ;!           ___wmul
  2575                           ;!           _spiWrite
  2576                           ;!   _update_volume
  2577                           ;!     _display_write_end
  2578                           ;!     _display_write_start
  2579                           ;!     _write_int
  2580                           ;!       _sprintf
  2581                           ;!         ___lwdiv
  2582                           ;!         ___lwmod
  2583                           ;!           ___lwdiv (ARG)
  2584                           ;!       _write_char
  2585                           ;!         _write_font
  2586                           ;!           ___wmul
  2587                           ;!           _spiWrite
  2588                           ;!       _write_text
  2589                           ;!         _write_char
  2590                           ;!           _write_font
  2591                           ;!             ___wmul
  2592                           ;!             _spiWrite
  2593                           ;!     _write_space
  2594                           ;!       _spiWrite
  2595                           ;!     _write_text
  2596                           ;!       _write_char
  2597                           ;!         _write_font
  2598                           ;!           ___wmul
  2599                           ;!           _spiWrite
  2600                           ;!
  2601                           ;! _isr (ROOT)
  2602                           ;!   _handle_potmeter
  2603                           ;!     _is_deadzone
  2604                           ;!       ___fladd
  2605                           ;!         ___xxtofl (ARG)
  2606                           ;!       ___fltol
  2607                           ;!         ___fladd (ARG)
  2608                           ;!           ___xxtofl (ARG)
  2609                           ;!         ___xxtofl (ARG)
  2610                           ;!       ___xxtofl
  2611                           ;!       i1___wmul
  2612                           ;!     i1___lwdiv
  2613                           ;!   _handle_rotary
  2614                           ;!   _start_receive
  2615                           ;!     _handle_remote
  2616                           ;!
  2617                           
  2618                           ;! Address spaces:
  2619                           
  2620                           ;!Name               Size   Autos  Total    Cost      Usage
  2621                           ;!BITCOMMON            D      0       0       0        0.0%
  2622                           ;!EEDATA             100      0       0       0        0.0%
  2623                           ;!NULL                 0      0       0       0        0.0%
  2624                           ;!CODE                 0      0       0       0        0.0%
  2625                           ;!COMMON               D      D       D       1      100.0%
  2626                           ;!BITSFR0              0      0       0       1        0.0%
  2627                           ;!SFR0                 0      0       0       1        0.0%
  2628                           ;!BITSFR1              0      0       0       2        0.0%
  2629                           ;!SFR1                 0      0       0       2        0.0%
  2630                           ;!STACK                0      0       0       2        0.0%
  2631                           ;!ABS                  0      0      82       3        0.0%
  2632                           ;!BITBANK0            50      0       0       4        0.0%
  2633                           ;!BITSFR3              0      0       0       4        0.0%
  2634                           ;!SFR3                 0      0       0       4        0.0%
  2635                           ;!BANK0               50     3C      47       5       88.8%
  2636                           ;!BITSFR2              0      0       0       5        0.0%
  2637                           ;!SFR2                 0      0       0       5        0.0%
  2638                           ;!BITBANK1            50      0       0       6        0.0%
  2639                           ;!BANK1               50     25      2E       7       57.5%
  2640                           ;!BITBANK3            55      0       0       8        0.0%
  2641                           ;!BANK3               55      0       0       9        0.0%
  2642                           ;!BITBANK2            60      0       0      10        0.0%
  2643                           ;!BANK2               60      0       0      11        0.0%
  2644                           ;!DATA                 0      0      82      12        0.0%
  2645                           
  2646                           	global	_main
  2647                           
  2648 ;; *************** function _main *****************
  2649 ;; Defined at:
  2650 ;;		line 28 in file "main.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : B00/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0
  2666 ;;      Temps:          0       0       2       0       0
  2667 ;;      Totals:         0       0       2       0       0
  2668 ;;Total ram usage:        2 bytes
  2669 ;; Hardware stack levels required when called:   10
  2670 ;; This function calls:
  2671 ;;		_activateSelectedRelay
  2672 ;;		_config
  2673 ;;		_update_input
  2674 ;;		_update_volume
  2675 ;; This function is called by:
  2676 ;;		Startup code after reset
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2680                           	file	"main.c"
  2681                           	line	28
  2682                           global __pmaintext
  2683                           __pmaintext:	;psect for function _main
  2684  0016                     psect	maintext
  2685                           	file	"main.c"
  2686                           	line	28
  2687                           	global	__size_of_main
  2688                           	__size_of_main	equ	__end_of_main-_main
  2689  002C                     	
  2690                           _main:	
  2691  0016                     ;incstack = 0
  2692 ;; hardware stack exceeded
  2693                           	opt	stack 0
  2694                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2695                           	line	30
  2696                           	
  2697                           l2744:	
  2698  0016                     ;main.c: 30:     config();
  2699                           	fcall	_config
  2700  0016  120A  158A  2727  120A  118A  	goto	l2746
  2701  001B  281C               	line	32
  2702                           ;main.c: 32:     while(1)
  2703                           	
  2704                           l53:	
  2705  001C                     	line	34
  2706                           	
  2707                           l2746:	
  2708  001C                     ;main.c: 33:     {;main.c: 34:         if (!ADCON0bits.GO)
  2709                           	bcf	status, 5	;RP0=0, select bank0
  2710  001C  1283               	bcf	status, 6	;RP1=0, select bank0
  2711  001D  1303               	btfsc	(31),1	;volatile
  2712  001E  189F               	goto	u2911
  2713  001F  2821               	goto	u2910
  2714  0020  2822               u2911:
  2715  0021                     	goto	l2750
  2716  0021  2824               u2910:
  2717  0022                     	line	35
  2718                           	
  2719                           l2748:	
  2720  0022                     ;main.c: 35:             ADCON0bits.GO = 1;
  2721                           	bsf	(31),1	;volatile
  2722  0022  149F               	goto	l2750
  2723  0023  2824               	
  2724                           l54:	
  2725  0024                     	line	37
  2726                           	
  2727                           l2750:	
  2728  0024                     ;main.c: 37:         update_volume();
  2729                           	fcall	_update_volume
  2730  0024  120A  158A  2608  120A  118A  	line	38
  2731                           ;main.c: 38:         update_input();
  2732                           	fcall	_update_input
  2733  0029  120A  158A  2490  120A  118A  	line	39
  2734                           	
  2735                           l2752:	
  2736  002E                     ;main.c: 39:         activateSelectedRelay();
  2737                           	fcall	_activateSelectedRelay
  2738  002E  120A  158A  23DA  120A  118A  	line	41
  2739                           	
  2740                           l2754:	
  2741  0033                     ;main.c: 41:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2742                           	opt asmopt_push
  2743                           opt asmopt_off
  2744                           movlw	13
  2745  0033  300D               	bsf	status, 5	;RP0=1, select bank1
  2746  0034  1683               	bcf	status, 6	;RP1=0, select bank1
  2747  0035  1303               movwf	((??_main+0)^080h+0+1),f
  2748  0036  00C4               	movlw	251
  2749  0037  30FB               movwf	((??_main+0)^080h+0),f
  2750  0038  00C3               	u2957:
  2751  0039                     decfsz	((??_main+0)^080h+0),f
  2752  0039  0BC3               	goto	u2957
  2753  003A  2839               	decfsz	((??_main+0)^080h+0+1),f
  2754  003B  0BC4               	goto	u2957
  2755  003C  2839               opt asmopt_pop
  2756                           
  2757                           	goto	l2746
  2758  003D  281C               	line	42
  2759                           ;main.c: 42:     }
  2760                           	
  2761                           l55:	
  2762  003E                     	goto	l2746
  2763  003E  281C               	
  2764                           l56:	
  2765  003F                     	line	44
  2766                           	
  2767                           l57:	
  2768  003F                     	global	start
  2769                           	ljmp	start
  2770  003F  120A  118A  2812   	opt stack 0
  2771                           GLOBAL	__end_of_main
  2772                           	__end_of_main:
  2773  0042                     	signat	_main,89
  2774                           	global	_update_volume
  2775                           
  2776 ;; *************** function _update_volume *****************
  2777 ;; Defined at:
  2778 ;;		line 83 in file "Display.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  spaces          2   33[BANK1 ] int 
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2792 ;;      Params:         0       0       0       0       0
  2793 ;;      Locals:         0       0       2       0       0
  2794 ;;      Temps:          0       0       0       0       0
  2795 ;;      Totals:         0       0       2       0       0
  2796 ;;Total ram usage:        2 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    9
  2799 ;; This function calls:
  2800 ;;		_display_write_end
  2801 ;;		_display_write_start
  2802 ;;		_write_int
  2803 ;;		_write_space
  2804 ;;		_write_text
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2810                           	file	"Display.c"
  2811                           	line	83
  2812                           global __ptext1
  2813                           __ptext1:	;psect for function _update_volume
  2814  0E08                     psect	text1
  2815                           	file	"Display.c"
  2816                           	line	83
  2817                           	global	__size_of_update_volume
  2818                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2819  005B                     	
  2820                           _update_volume:	
  2821  0E08                     ;incstack = 0
  2822 ;; hardware stack exceeded
  2823                           	opt	stack 0
  2824                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2825                           	line	85
  2826                           	
  2827                           l2618:	
  2828  0E08                     ;Display.c: 85:     if (lastVolume == volume) return;
  2829                           	bsf	status, 5	;RP0=1, select bank1
  2830  0E08  1683               	bcf	status, 6	;RP1=0, select bank1
  2831  0E09  1303               	movf	(_volume+1)^080h,w
  2832  0E0A  084A               	xorwf	(_lastVolume+1)^080h,w
  2833  0E0B  0648               	skipz
  2834  0E0C  1D03               	goto	u2725
  2835  0E0D  2E10               	movf	(_volume)^080h,w
  2836  0E0E  0849               	xorwf	(_lastVolume)^080h,w
  2837  0E0F  0647               u2725:
  2838  0E10                     
  2839                           	skipz
  2840  0E10  1D03               	goto	u2721
  2841  0E11  2E13               	goto	u2720
  2842  0E12  2E14               u2721:
  2843  0E13                     	goto	l2622
  2844  0E13  2E16               u2720:
  2845  0E14                     	goto	l128
  2846  0E14  2E62               	
  2847                           l2620:	
  2848  0E15                     	goto	l128
  2849  0E15  2E62               	
  2850                           l127:	
  2851  0E16                     	line	87
  2852                           	
  2853                           l2622:	
  2854  0E16                     ;Display.c: 87:     _selectedDisplay = 0;
  2855                           	clrf	(__selectedDisplay)^080h
  2856  0E16  01CD               	line	88
  2857                           	
  2858                           l2624:	
  2859  0E17                     ;Display.c: 88:     display_write_start();
  2860                           	fcall	_display_write_start
  2861  0E17  120A  158A  22EB  120A  158A  	line	90
  2862                           	
  2863                           l2626:	
  2864  0E1C                     ;Display.c: 90:     write_text("VOL");
  2865                           	movlw	low(((STR_2)|8000h))
  2866  0E1C  3096               	bsf	status, 5	;RP0=1, select bank1
  2867  0E1D  1683               	bcf	status, 6	;RP1=0, select bank1
  2868  0E1E  1303               	movwf	(write_text@text)^080h
  2869  0E1F  00B3               	movlw	high(((STR_2)|8000h))
  2870  0E20  3089               	movwf	((write_text@text)^080h)+1
  2871  0E21  00B4               	fcall	_write_text
  2872  0E22  120A  158A  2413  120A  158A  	line	93
  2873                           	
  2874                           l2628:	
  2875  0E27                     ;Display.c: 93:     int spaces = 3;
  2876                           	movlw	03h
  2877  0E27  3003               	bsf	status, 5	;RP0=1, select bank1
  2878  0E28  1683               	bcf	status, 6	;RP1=0, select bank1
  2879  0E29  1303               	movwf	(update_volume@spaces)^080h
  2880  0E2A  00C1               	movlw	0
  2881  0E2B  3000               	movwf	((update_volume@spaces)^080h)+1
  2882  0E2C  00C2               	line	94
  2883                           	
  2884                           l2630:	
  2885  0E2D                     ;Display.c: 94:     if (volume < 10)
  2886                           	movf	(_volume+1)^080h,w
  2887  0E2D  084A               	xorlw	80h
  2888  0E2E  3A80               	movwf	btemp+1
  2889  0E2F  00FF               	movlw	(0)^80h
  2890  0E30  3080               	subwf	btemp+1,w
  2891  0E31  027F               	skipz
  2892  0E32  1D03               	goto	u2735
  2893  0E33  2E36               	movlw	0Ah
  2894  0E34  300A               	subwf	(_volume)^080h,w
  2895  0E35  0249               u2735:
  2896  0E36                     
  2897                           	skipnc
  2898  0E36  1803               	goto	u2731
  2899  0E37  2E39               	goto	u2730
  2900  0E38  2E3A               u2731:
  2901  0E39                     	goto	l2634
  2902  0E39  2E41               u2730:
  2903  0E3A                     	line	95
  2904                           	
  2905                           l2632:	
  2906  0E3A                     ;Display.c: 95:         spaces = 4;
  2907                           	movlw	04h
  2908  0E3A  3004               	bsf	status, 5	;RP0=1, select bank1
  2909  0E3B  1683               	bcf	status, 6	;RP1=0, select bank1
  2910  0E3C  1303               	movwf	(update_volume@spaces)^080h
  2911  0E3D  00C1               	movlw	0
  2912  0E3E  3000               	movwf	((update_volume@spaces)^080h)+1
  2913  0E3F  00C2               	goto	l2634
  2914  0E40  2E41               	
  2915                           l129:	
  2916  0E41                     	line	98
  2917                           	
  2918                           l2634:	
  2919  0E41                     ;Display.c: 98:     write_space(spaces);
  2920                           	bsf	status, 5	;RP0=1, select bank1
  2921  0E41  1683               	bcf	status, 6	;RP1=0, select bank1
  2922  0E42  1303               	movf	(update_volume@spaces+1)^080h,w
  2923  0E43  0842               	movwf	(write_space@count+1)^080h
  2924  0E44  00A2               	movf	(update_volume@spaces)^080h,w
  2925  0E45  0841               	movwf	(write_space@count)^080h
  2926  0E46  00A1               	fcall	_write_space
  2927  0E47  120A  158A  2521  120A  158A  	line	100
  2928                           	
  2929                           l2636:	
  2930  0E4C                     ;Display.c: 100:     write_int(volume);
  2931                           	bsf	status, 5	;RP0=1, select bank1
  2932  0E4C  1683               	bcf	status, 6	;RP1=0, select bank1
  2933  0E4D  1303               	movf	(_volume+1)^080h,w
  2934  0E4E  084A               	movwf	(write_int@number+1)^080h
  2935  0E4F  00BE               	movf	(_volume)^080h,w
  2936  0E50  0849               	movwf	(write_int@number)^080h
  2937  0E51  00BD               	fcall	_write_int
  2938  0E52  120A  158A  23A4  120A  158A  	line	101
  2939                           	
  2940                           l2638:	
  2941  0E57                     ;Display.c: 101:     display_write_end();
  2942                           	fcall	_display_write_end
  2943  0E57  120A  158A  22DC  120A  158A  	line	103
  2944                           	
  2945                           l2640:	
  2946  0E5C                     ;Display.c: 103:     lastVolume = volume;
  2947                           	bsf	status, 5	;RP0=1, select bank1
  2948  0E5C  1683               	bcf	status, 6	;RP1=0, select bank1
  2949  0E5D  1303               	movf	(_volume+1)^080h,w
  2950  0E5E  084A               	movwf	(_lastVolume+1)^080h
  2951  0E5F  00C8               	movf	(_volume)^080h,w
  2952  0E60  0849               	movwf	(_lastVolume)^080h
  2953  0E61  00C7               	line	105
  2954                           	
  2955                           l128:	
  2956  0E62                     	return
  2957  0E62  0008               	opt stack 0
  2958                           GLOBAL	__end_of_update_volume
  2959                           	__end_of_update_volume:
  2960  0E63                     	signat	_update_volume,89
  2961                           	global	_update_input
  2962                           
  2963 ;; *************** function _update_input *****************
  2964 ;; Defined at:
  2965 ;;		line 65 in file "Display.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;		None
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;		None
  2970 ;; Return value:  Size  Location     Type
  2971 ;;                  1    wreg      void 
  2972 ;; Registers used:
  2973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2979 ;;      Params:         0       0       0       0       0
  2980 ;;      Locals:         0       0       0       0       0
  2981 ;;      Temps:          0       0       0       0       0
  2982 ;;      Totals:         0       0       0       0       0
  2983 ;;Total ram usage:        0 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    9
  2986 ;; This function calls:
  2987 ;;		_display_write_end
  2988 ;;		_display_write_start
  2989 ;;		_write_int
  2990 ;;		_write_space
  2991 ;;		_write_text
  2992 ;; This function is called by:
  2993 ;;		_main
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2997                           	line	65
  2998                           global __ptext2
  2999                           __ptext2:	;psect for function _update_input
  3000  0C90                     psect	text2
  3001                           	file	"Display.c"
  3002                           	line	65
  3003                           	global	__size_of_update_input
  3004                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  3005  0046                     	
  3006                           _update_input:	
  3007  0C90                     ;incstack = 0
  3008 ;; hardware stack exceeded
  3009                           	opt	stack 0
  3010                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3011                           	line	67
  3012                           	
  3013                           l2642:	
  3014  0C90                     ;Display.c: 67:     if (lastInput == _selectedInput) return;
  3015                           	bsf	status, 5	;RP0=1, select bank1
  3016  0C90  1683               	bcf	status, 6	;RP1=0, select bank1
  3017  0C91  1303               	movf	(__selectedInput+1)^080h,w
  3018  0C92  084C               	xorwf	(_lastInput+1)^080h,w
  3019  0C93  0646               	skipz
  3020  0C94  1D03               	goto	u2745
  3021  0C95  2C98               	movf	(__selectedInput)^080h,w
  3022  0C96  084B               	xorwf	(_lastInput)^080h,w
  3023  0C97  0645               u2745:
  3024  0C98                     
  3025                           	skipz
  3026  0C98  1D03               	goto	u2741
  3027  0C99  2C9B               	goto	u2740
  3028  0C9A  2C9C               u2741:
  3029  0C9B                     	goto	l123
  3030  0C9B  2C9E               u2740:
  3031  0C9C                     	goto	l124
  3032  0C9C  2CD5               	
  3033                           l2644:	
  3034  0C9D                     	goto	l124
  3035  0C9D  2CD5               	
  3036                           l123:	
  3037  0C9E                     	line	69
  3038                           ;Display.c: 69:     _selectedDisplay = 1;
  3039                           	clrf	(__selectedDisplay)^080h
  3040  0C9E  01CD               	incf	(__selectedDisplay)^080h,f
  3041  0C9F  0ACD               	line	70
  3042                           	
  3043                           l2646:	
  3044  0CA0                     ;Display.c: 70:     display_write_start();
  3045                           	fcall	_display_write_start
  3046  0CA0  120A  158A  22EB  120A  158A  	line	72
  3047                           	
  3048                           l2648:	
  3049  0CA5                     ;Display.c: 72:     write_text("INPUT");
  3050                           	movlw	low(((STR_1)|8000h))
  3051  0CA5  3090               	bsf	status, 5	;RP0=1, select bank1
  3052  0CA6  1683               	bcf	status, 6	;RP1=0, select bank1
  3053  0CA7  1303               	movwf	(write_text@text)^080h
  3054  0CA8  00B3               	movlw	high(((STR_1)|8000h))
  3055  0CA9  3089               	movwf	((write_text@text)^080h)+1
  3056  0CAA  00B4               	fcall	_write_text
  3057  0CAB  120A  158A  2413  120A  158A  	line	74
  3058                           	
  3059                           l2650:	
  3060  0CB0                     ;Display.c: 74:     write_space(2);
  3061                           	movlw	02h
  3062  0CB0  3002               	bsf	status, 5	;RP0=1, select bank1
  3063  0CB1  1683               	bcf	status, 6	;RP1=0, select bank1
  3064  0CB2  1303               	movwf	(write_space@count)^080h
  3065  0CB3  00A1               	movlw	0
  3066  0CB4  3000               	movwf	((write_space@count)^080h)+1
  3067  0CB5  00A2               	fcall	_write_space
  3068  0CB6  120A  158A  2521  120A  158A  	line	76
  3069                           	
  3070                           l2652:	
  3071  0CBB                     ;Display.c: 76:     write_int(_selectedInput+1);
  3072                           	bsf	status, 5	;RP0=1, select bank1
  3073  0CBB  1683               	bcf	status, 6	;RP1=0, select bank1
  3074  0CBC  1303               	movf	(__selectedInput)^080h,w
  3075  0CBD  084B               	addlw	low(01h)
  3076  0CBE  3E01               	movwf	(write_int@number)^080h
  3077  0CBF  00BD               	movf	(__selectedInput+1)^080h,w
  3078  0CC0  084C               	skipnc
  3079  0CC1  1803               	addlw	1
  3080  0CC2  3E01               	addlw	high(01h)
  3081  0CC3  3E00               	movwf	1+(write_int@number)^080h
  3082  0CC4  00BE               	fcall	_write_int
  3083  0CC5  120A  158A  23A4  120A  158A  	line	77
  3084                           	
  3085                           l2654:	
  3086  0CCA                     ;Display.c: 77:     display_write_end();
  3087                           	fcall	_display_write_end
  3088  0CCA  120A  158A  22DC  120A  158A  	line	79
  3089                           	
  3090                           l2656:	
  3091  0CCF                     ;Display.c: 79:     lastInput = _selectedInput;
  3092                           	bsf	status, 5	;RP0=1, select bank1
  3093  0CCF  1683               	bcf	status, 6	;RP1=0, select bank1
  3094  0CD0  1303               	movf	(__selectedInput+1)^080h,w
  3095  0CD1  084C               	movwf	(_lastInput+1)^080h
  3096  0CD2  00C6               	movf	(__selectedInput)^080h,w
  3097  0CD3  084B               	movwf	(_lastInput)^080h
  3098  0CD4  00C5               	line	81
  3099                           	
  3100                           l124:	
  3101  0CD5                     	return
  3102  0CD5  0008               	opt stack 0
  3103                           GLOBAL	__end_of_update_input
  3104                           	__end_of_update_input:
  3105  0CD6                     	signat	_update_input,89
  3106                           	global	_write_space
  3107                           
  3108 ;; *************** function _write_space *****************
  3109 ;; Defined at:
  3110 ;;		line 107 in file "Display.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;  count           2    1[BANK1 ] int 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  x               2    6[BANK1 ] int 
  3115 ;;  i               2    4[BANK1 ] int 
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3125 ;;      Params:         0       0       2       0       0
  3126 ;;      Locals:         0       0       4       0       0
  3127 ;;      Temps:          0       0       1       0       0
  3128 ;;      Totals:         0       0       7       0       0
  3129 ;;Total ram usage:        7 bytes
  3130 ;; Hardware stack levels used:    1
  3131 ;; Hardware stack levels required when called:    5
  3132 ;; This function calls:
  3133 ;;		_spiWrite
  3134 ;; This function is called by:
  3135 ;;		_update_input
  3136 ;;		_update_volume
  3137 ;; This function uses a non-reentrant model
  3138 ;;
  3139                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3140                           	line	107
  3141                           global __ptext3
  3142                           __ptext3:	;psect for function _write_space
  3143  0D21                     psect	text3
  3144                           	file	"Display.c"
  3145                           	line	107
  3146                           	global	__size_of_write_space
  3147                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  3148  004C                     	
  3149                           _write_space:	
  3150  0D21                     ;incstack = 0
  3151                           	opt	stack 1
  3152                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3153                           	line	109
  3154                           	
  3155                           l2424:	
  3156  0D21                     ;Display.c: 107: void write_space(int count);Display.c: 108: {;Display.c: 109:     for (
                                 int i = 0; i < count; i++) {
  3157                           	bsf	status, 5	;RP0=1, select bank1
  3158  0D21  1683               	bcf	status, 6	;RP1=0, select bank1
  3159  0D22  1303               	clrf	(write_space@i)^080h
  3160  0D23  01A4               	clrf	(write_space@i+1)^080h
  3161  0D24  01A5               	goto	l132
  3162  0D25  2D5D               	
  3163                           l133:	
  3164  0D26                     	line	111
  3165                           	
  3166                           l2426:	
  3167  0D26                     ;Display.c: 111:         for (int x = 0; x < 5; x++) {
  3168                           	bsf	status, 5	;RP0=1, select bank1
  3169  0D26  1683               	bcf	status, 6	;RP1=0, select bank1
  3170  0D27  1303               	clrf	(write_space@x)^080h
  3171  0D28  01A6               	clrf	(write_space@x+1)^080h
  3172  0D29  01A7               	
  3173                           l2428:	
  3174  0D2A                     	movf	(write_space@x+1)^080h,w
  3175  0D2A  0827               	xorlw	80h
  3176  0D2B  3A80               	movwf	btemp+1
  3177  0D2C  00FF               	movlw	(0)^80h
  3178  0D2D  3080               	subwf	btemp+1,w
  3179  0D2E  027F               	skipz
  3180  0D2F  1D03               	goto	u2585
  3181  0D30  2D33               	movlw	05h
  3182  0D31  3005               	subwf	(write_space@x)^080h,w
  3183  0D32  0226               u2585:
  3184  0D33                     
  3185                           	skipc
  3186  0D33  1C03               	goto	u2581
  3187  0D34  2D36               	goto	u2580
  3188  0D35  2D37               u2581:
  3189  0D36                     	goto	l2432
  3190  0D36  2D39               u2580:
  3191  0D37                     	goto	l2438
  3192  0D37  2D55               	
  3193                           l2430:	
  3194  0D38                     	goto	l2438
  3195  0D38  2D55               	
  3196                           l134:	
  3197  0D39                     	line	113
  3198                           	
  3199                           l2432:	
  3200  0D39                     ;Display.c: 113:             spiWrite(0x00);
  3201                           	movlw	low(0)
  3202  0D39  3000               	fcall	_spiWrite
  3203  0D3A  120A  158A  22FA  120A  158A  	line	115
  3204                           	
  3205                           l2434:	
  3206  0D3F                     ;Display.c: 115:         }
  3207                           	movlw	01h
  3208  0D3F  3001               	bsf	status, 5	;RP0=1, select bank1
  3209  0D40  1683               	bcf	status, 6	;RP1=0, select bank1
  3210  0D41  1303               	addwf	(write_space@x)^080h,f
  3211  0D42  07A6               	skipnc
  3212  0D43  1803               	incf	(write_space@x+1)^080h,f
  3213  0D44  0AA7               	movlw	0
  3214  0D45  3000               	addwf	(write_space@x+1)^080h,f
  3215  0D46  07A7               	
  3216                           l2436:	
  3217  0D47                     	movf	(write_space@x+1)^080h,w
  3218  0D47  0827               	xorlw	80h
  3219  0D48  3A80               	movwf	btemp+1
  3220  0D49  00FF               	movlw	(0)^80h
  3221  0D4A  3080               	subwf	btemp+1,w
  3222  0D4B  027F               	skipz
  3223  0D4C  1D03               	goto	u2595
  3224  0D4D  2D50               	movlw	05h
  3225  0D4E  3005               	subwf	(write_space@x)^080h,w
  3226  0D4F  0226               u2595:
  3227  0D50                     
  3228                           	skipc
  3229  0D50  1C03               	goto	u2591
  3230  0D51  2D53               	goto	u2590
  3231  0D52  2D54               u2591:
  3232  0D53                     	goto	l2432
  3233  0D53  2D39               u2590:
  3234  0D54                     	goto	l2438
  3235  0D54  2D55               	
  3236                           l135:	
  3237  0D55                     	line	116
  3238                           	
  3239                           l2438:	
  3240  0D55                     ;Display.c: 116:     }
  3241                           	movlw	01h
  3242  0D55  3001               	bsf	status, 5	;RP0=1, select bank1
  3243  0D56  1683               	bcf	status, 6	;RP1=0, select bank1
  3244  0D57  1303               	addwf	(write_space@i)^080h,f
  3245  0D58  07A4               	skipnc
  3246  0D59  1803               	incf	(write_space@i+1)^080h,f
  3247  0D5A  0AA5               	movlw	0
  3248  0D5B  3000               	addwf	(write_space@i+1)^080h,f
  3249  0D5C  07A5               	
  3250                           l132:	
  3251  0D5D                     	movf	(write_space@i+1)^080h,w
  3252  0D5D  0825               	xorlw	80h
  3253  0D5E  3A80               	movwf	(??_write_space+0)^080h+0
  3254  0D5F  00A3               	movf	(write_space@count+1)^080h,w
  3255  0D60  0822               	xorlw	80h
  3256  0D61  3A80               	subwf	(??_write_space+0)^080h+0,w
  3257  0D62  0223               	skipz
  3258  0D63  1D03               	goto	u2605
  3259  0D64  2D67               	movf	(write_space@count)^080h,w
  3260  0D65  0821               	subwf	(write_space@i)^080h,w
  3261  0D66  0224               u2605:
  3262  0D67                     
  3263                           	skipc
  3264  0D67  1C03               	goto	u2601
  3265  0D68  2D6A               	goto	u2600
  3266  0D69  2D6B               u2601:
  3267  0D6A                     	goto	l2426
  3268  0D6A  2D26               u2600:
  3269  0D6B                     	goto	l137
  3270  0D6B  2D6C               	
  3271                           l136:	
  3272  0D6C                     	line	117
  3273                           	
  3274                           l137:	
  3275  0D6C                     	return
  3276  0D6C  0008               	opt stack 0
  3277                           GLOBAL	__end_of_write_space
  3278                           	__end_of_write_space:
  3279  0D6D                     	signat	_write_space,4217
  3280                           	global	_write_int
  3281                           
  3282 ;; *************** function _write_int *****************
  3283 ;; Defined at:
  3284 ;;		line 129 in file "Display.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  number          2   29[BANK1 ] int 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  num             2   31[BANK1 ] unsigned char [2]
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       0       2       0       0
  3299 ;;      Locals:         0       0       2       0       0
  3300 ;;      Temps:          0       0       0       0       0
  3301 ;;      Totals:         0       0       4       0       0
  3302 ;;Total ram usage:        4 bytes
  3303 ;; Hardware stack levels used:    1
  3304 ;; Hardware stack levels required when called:    8
  3305 ;; This function calls:
  3306 ;;		_sprintf
  3307 ;;		_write_char
  3308 ;;		_write_text
  3309 ;; This function is called by:
  3310 ;;		_update_input
  3311 ;;		_update_volume
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3315                           	line	129
  3316                           global __ptext4
  3317                           __ptext4:	;psect for function _write_int
  3318  0BA4                     psect	text4
  3319                           	file	"Display.c"
  3320                           	line	129
  3321                           	global	__size_of_write_int
  3322                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  3323  0036                     	
  3324                           _write_int:	
  3325  0BA4                     ;incstack = 0
  3326 ;; hardware stack exceeded
  3327                           	opt	stack 0
  3328                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3329                           	line	131
  3330                           	
  3331                           l2440:	
  3332  0BA4                     ;Display.c: 129: void write_int(int number);Display.c: 130: {;Display.c: 131:     if (nu
                                 mber < 10) {
  3333                           	bsf	status, 5	;RP0=1, select bank1
  3334  0BA4  1683               	bcf	status, 6	;RP1=0, select bank1
  3335  0BA5  1303               	movf	(write_int@number+1)^080h,w
  3336  0BA6  083E               	xorlw	80h
  3337  0BA7  3A80               	movwf	btemp+1
  3338  0BA8  00FF               	movlw	(0)^80h
  3339  0BA9  3080               	subwf	btemp+1,w
  3340  0BAA  027F               	skipz
  3341  0BAB  1D03               	goto	u2615
  3342  0BAC  2BAF               	movlw	0Ah
  3343  0BAD  300A               	subwf	(write_int@number)^080h,w
  3344  0BAE  023D               u2615:
  3345  0BAF                     
  3346                           	skipnc
  3347  0BAF  1803               	goto	u2611
  3348  0BB0  2BB2               	goto	u2610
  3349  0BB1  2BB3               u2611:
  3350  0BB2                     	goto	l2446
  3351  0BB2  2BBE               u2610:
  3352  0BB3                     	line	132
  3353                           	
  3354                           l2442:	
  3355  0BB3                     ;Display.c: 132:         write_char(number + 48);
  3356                           	bsf	status, 5	;RP0=1, select bank1
  3357  0BB3  1683               	bcf	status, 6	;RP1=0, select bank1
  3358  0BB4  1303               	movf	(write_int@number)^080h,w
  3359  0BB5  083D               	addlw	030h
  3360  0BB6  3E30               	fcall	_write_char
  3361  0BB7  120A  158A  26C5  120A  158A  	goto	l147
  3362  0BBC  2BD9               	line	133
  3363                           	
  3364                           l2444:	
  3365  0BBD                     ;Display.c: 133:         return;
  3366                           	goto	l147
  3367  0BBD  2BD9               	line	134
  3368                           ;Display.c: 134:     }
  3369                           	
  3370                           l146:	
  3371  0BBE                     	line	137
  3372                           	
  3373                           l2446:	
  3374  0BBE                     ;Display.c: 136:     char num[2];;Display.c: 137:     sprintf(num, "%d", number);
  3375                           	movlw	low(((STR_3)|8000h))
  3376  0BBE  309A               	bsf	status, 5	;RP0=1, select bank1
  3377  0BBF  1683               	bcf	status, 6	;RP1=0, select bank1
  3378  0BC0  1303               	movwf	(sprintf@f)^080h
  3379  0BC1  00AE               	movlw	high(((STR_3)|8000h))
  3380  0BC2  3089               	movwf	((sprintf@f)^080h)+1
  3381  0BC3  00AF               	movf	(write_int@number+1)^080h,w
  3382  0BC4  083E               	movwf	1+(?_sprintf)^080h+02h
  3383  0BC5  00B1               	movf	(write_int@number)^080h,w
  3384  0BC6  083D               	movwf	0+(?_sprintf)^080h+02h
  3385  0BC7  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  3386  0BC8  30BF               	fcall	_sprintf
  3387  0BC9  120A  118A  23EA  120A  158A  	line	139
  3388                           ;Display.c: 139:     write_text(num);
  3389                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  3390  0BCE  30BF               	bsf	status, 5	;RP0=1, select bank1
  3391  0BCF  1683               	bcf	status, 6	;RP1=0, select bank1
  3392  0BD0  1303               	movwf	(write_text@text)^080h
  3393  0BD1  00B3               	movlw	(0x0)
  3394  0BD2  3000               	movwf	(write_text@text+1)^080h
  3395  0BD3  00B4               	fcall	_write_text
  3396  0BD4  120A  158A  2413  120A  158A  	line	140
  3397                           	
  3398                           l147:	
  3399  0BD9                     	return
  3400  0BD9  0008               	opt stack 0
  3401                           GLOBAL	__end_of_write_int
  3402                           	__end_of_write_int:
  3403  0BDA                     	signat	_write_int,4217
  3404                           	global	_write_text
  3405                           
  3406 ;; *************** function _write_text *****************
  3407 ;; Defined at:
  3408 ;;		line 119 in file "Display.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  text            2   19[BANK1 ] PTR unsigned char 
  3411 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  c               2   21[BANK1 ] PTR unsigned char 
  3414 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3424 ;;      Params:         0       0       2       0       0
  3425 ;;      Locals:         0       0       2       0       0
  3426 ;;      Temps:          0       0       0       0       0
  3427 ;;      Totals:         0       0       4       0       0
  3428 ;;Total ram usage:        4 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    7
  3431 ;; This function calls:
  3432 ;;		_write_char
  3433 ;; This function is called by:
  3434 ;;		_update_input
  3435 ;;		_update_volume
  3436 ;;		_write_int
  3437 ;; This function uses a non-reentrant model
  3438 ;;
  3439                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3440                           	line	119
  3441                           global __ptext5
  3442                           __ptext5:	;psect for function _write_text
  3443  0C13                     psect	text5
  3444                           	file	"Display.c"
  3445                           	line	119
  3446                           	global	__size_of_write_text
  3447                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  3448  003A                     	
  3449                           _write_text:	
  3450  0C13                     ;incstack = 0
  3451 ;; hardware stack exceeded
  3452                           	opt	stack 0
  3453                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3454                           	line	123
  3455                           	
  3456                           l1998:	
  3457  0C13                     ;Display.c: 119: void write_text(char* text);Display.c: 120: {;Display.c: 121:     char*
                                  c;;Display.c: 123:     for (c = text; *c != '\0'; c++) {
  3458                           	bsf	status, 5	;RP0=1, select bank1
  3459  0C13  1683               	bcf	status, 6	;RP1=0, select bank1
  3460  0C14  1303               		movf	(write_text@text)^080h,w
  3461  0C15  0833               	movwf	(write_text@c)^080h
  3462  0C16  00B5               movf	(write_text@text+1)^080h,w
  3463  0C17  0834               movwf	(write_text@c+1)^080h
  3464  0C18  00B6               
  3465                           	goto	l2004
  3466  0C19  2C37               	
  3467                           l141:	
  3468  0C1A                     	line	124
  3469                           	
  3470                           l2000:	
  3471  0C1A                     ;Display.c: 124:         write_char(*c);
  3472                           	bsf	status, 5	;RP0=1, select bank1
  3473  0C1A  1683               	bcf	status, 6	;RP1=0, select bank1
  3474  0C1B  1303               	movf	(write_text@c+1)^080h,w
  3475  0C1C  0836               	bcf	status, 5	;RP0=0, select bank0
  3476  0C1D  1283               	bcf	status, 6	;RP1=0, select bank0
  3477  0C1E  1303               	movwf	btemp+1
  3478  0C1F  00FF               	bsf	status, 5	;RP0=1, select bank1
  3479  0C20  1683               	bcf	status, 6	;RP1=0, select bank1
  3480  0C21  1303               	movf	(write_text@c)^080h,w
  3481  0C22  0835               	movwf	fsr0
  3482  0C23  0084               	bcf	status, 5	;RP0=0, select bank0
  3483  0C24  1283               	bcf	status, 6	;RP1=0, select bank0
  3484  0C25  1303               	fcall	stringtab
  3485  0C26  120A  158A  2000  120A  158A  	fcall	_write_char
  3486  0C2B  120A  158A  26C5  120A  158A  	line	125
  3487                           	
  3488                           l2002:	
  3489  0C30                     ;Display.c: 125:     }
  3490                           	movlw	01h
  3491  0C30  3001               	bsf	status, 5	;RP0=1, select bank1
  3492  0C31  1683               	bcf	status, 6	;RP1=0, select bank1
  3493  0C32  1303               	addwf	(write_text@c)^080h,f
  3494  0C33  07B5               	skipnc
  3495  0C34  1803               	incf	(write_text@c+1)^080h,f
  3496  0C35  0AB6               	goto	l2004
  3497  0C36  2C37               	
  3498                           l140:	
  3499  0C37                     	
  3500                           l2004:	
  3501  0C37                     	movf	(write_text@c+1)^080h,w
  3502  0C37  0836               	bcf	status, 5	;RP0=0, select bank0
  3503  0C38  1283               	bcf	status, 6	;RP1=0, select bank0
  3504  0C39  1303               	movwf	btemp+1
  3505  0C3A  00FF               	bsf	status, 5	;RP0=1, select bank1
  3506  0C3B  1683               	bcf	status, 6	;RP1=0, select bank1
  3507  0C3C  1303               	movf	(write_text@c)^080h,w
  3508  0C3D  0835               	movwf	fsr0
  3509  0C3E  0084               	bcf	status, 5	;RP0=0, select bank0
  3510  0C3F  1283               	bcf	status, 6	;RP1=0, select bank0
  3511  0C40  1303               	fcall	stringtab
  3512  0C41  120A  158A  2000  120A  158A  	xorlw	0
  3513  0C46  3A00               	skipz
  3514  0C47  1D03               	goto	u1741
  3515  0C48  2C4A               	goto	u1740
  3516  0C49  2C4B               u1741:
  3517  0C4A                     	goto	l2000
  3518  0C4A  2C1A               u1740:
  3519  0C4B                     	goto	l143
  3520  0C4B  2C4C               	
  3521                           l142:	
  3522  0C4C                     	line	127
  3523                           	
  3524                           l143:	
  3525  0C4C                     	return
  3526  0C4C  0008               	opt stack 0
  3527                           GLOBAL	__end_of_write_text
  3528                           	__end_of_write_text:
  3529  0C4D                     	signat	_write_text,4217
  3530                           	global	_write_char
  3531                           
  3532 ;; *************** function _write_char *****************
  3533 ;; Defined at:
  3534 ;;		line 142 in file "Display.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;  c               1    wreg     unsigned char 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  c               1   18[BANK1 ] unsigned char 
  3539 ;;  pos             2   16[BANK1 ] int 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3549 ;;      Params:         0       0       0       0       0
  3550 ;;      Locals:         0       0       3       0       0
  3551 ;;      Temps:          0       0       0       0       0
  3552 ;;      Totals:         0       0       3       0       0
  3553 ;;Total ram usage:        3 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    6
  3556 ;; This function calls:
  3557 ;;		_write_font
  3558 ;; This function is called by:
  3559 ;;		_write_text
  3560 ;;		_write_int
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3564                           	line	142
  3565                           global __ptext6
  3566                           __ptext6:	;psect for function _write_char
  3567  0EC5                     psect	text6
  3568                           	file	"Display.c"
  3569                           	line	142
  3570                           	global	__size_of_write_char
  3571                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  3572  0062                     	
  3573                           _write_char:	
  3574  0EC5                     ;incstack = 0
  3575 ;; hardware stack exceeded
  3576                           	opt	stack 0
  3577                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3578                           ;write_char@c stored from wreg
  3579                           	bsf	status, 5	;RP0=1, select bank1
  3580  0EC5  1683               	bcf	status, 6	;RP1=0, select bank1
  3581  0EC6  1303               	movwf	(write_char@c)^080h
  3582  0EC7  00B2               	line	147
  3583                           	
  3584                           l1926:	
  3585  0EC8                     ;Display.c: 142: void write_char(char c);Display.c: 143: {;Display.c: 144:     int pos;;
                                 Display.c: 147:     if (c >= 48 && c <= 57) {
  3586                           	movlw	low(030h)
  3587  0EC8  3030               	subwf	(write_char@c)^080h,w
  3588  0EC9  0232               	skipc
  3589  0ECA  1C03               	goto	u1551
  3590  0ECB  2ECD               	goto	u1550
  3591  0ECC  2ECE               u1551:
  3592  0ECD                     	goto	l1934
  3593  0ECD  2EE5               u1550:
  3594  0ECE                     	
  3595                           l1928:	
  3596  0ECE                     	movlw	low(03Ah)
  3597  0ECE  303A               	subwf	(write_char@c)^080h,w
  3598  0ECF  0232               	skipnc
  3599  0ED0  1803               	goto	u1561
  3600  0ED1  2ED3               	goto	u1560
  3601  0ED2  2ED4               u1561:
  3602  0ED3                     	goto	l1934
  3603  0ED3  2EE5               u1560:
  3604  0ED4                     	line	148
  3605                           	
  3606                           l1930:	
  3607  0ED4                     ;Display.c: 148:         pos = c - 48;
  3608                           	movf	(write_char@c)^080h,w
  3609  0ED4  0832               	addlw	low(-48)
  3610  0ED5  3ED0               	movwf	(write_char@pos)^080h
  3611  0ED6  00B0               	movlw	high(-48)
  3612  0ED7  30FF               	skipnc
  3613  0ED8  1803               	movlw	(high(-48)+1)&0ffh
  3614  0ED9  3000               	movwf	((write_char@pos)^080h)+1
  3615  0EDA  00B1               	line	149
  3616                           	
  3617                           l1932:	
  3618  0EDB                     ;Display.c: 149:         write_font(pos);
  3619                           	movf	(write_char@pos+1)^080h,w
  3620  0EDB  0831               	movwf	(write_font@fontPos+1)^080h
  3621  0EDC  00A7               	movf	(write_char@pos)^080h,w
  3622  0EDD  0830               	movwf	(write_font@fontPos)^080h
  3623  0EDE  00A6               	fcall	_write_font
  3624  0EDF  120A  158A  2663  120A  158A  	line	150
  3625                           ;Display.c: 150:     } else if (c >= 65 && c <= 90) {
  3626                           	goto	l156
  3627  0EE4  2F26               	
  3628                           l150:	
  3629  0EE5                     	
  3630                           l1934:	
  3631  0EE5                     	movlw	low(041h)
  3632  0EE5  3041               	bsf	status, 5	;RP0=1, select bank1
  3633  0EE6  1683               	bcf	status, 6	;RP1=0, select bank1
  3634  0EE7  1303               	subwf	(write_char@c)^080h,w
  3635  0EE8  0232               	skipc
  3636  0EE9  1C03               	goto	u1571
  3637  0EEA  2EEC               	goto	u1570
  3638  0EEB  2EED               u1571:
  3639  0EEC                     	goto	l1942
  3640  0EEC  2F04               u1570:
  3641  0EED                     	
  3642                           l1936:	
  3643  0EED                     	movlw	low(05Bh)
  3644  0EED  305B               	subwf	(write_char@c)^080h,w
  3645  0EEE  0232               	skipnc
  3646  0EEF  1803               	goto	u1581
  3647  0EF0  2EF2               	goto	u1580
  3648  0EF1  2EF3               u1581:
  3649  0EF2                     	goto	l1942
  3650  0EF2  2F04               u1580:
  3651  0EF3                     	line	151
  3652                           	
  3653                           l1938:	
  3654  0EF3                     ;Display.c: 151:         pos = (c - 65) + 10;
  3655                           	movf	(write_char@c)^080h,w
  3656  0EF3  0832               	addlw	low(-55)
  3657  0EF4  3EC9               	movwf	(write_char@pos)^080h
  3658  0EF5  00B0               	movlw	high(-55)
  3659  0EF6  30FF               	skipnc
  3660  0EF7  1803               	movlw	(high(-55)+1)&0ffh
  3661  0EF8  3000               	movwf	((write_char@pos)^080h)+1
  3662  0EF9  00B1               	line	152
  3663                           	
  3664                           l1940:	
  3665  0EFA                     ;Display.c: 152:         write_font(pos);
  3666                           	movf	(write_char@pos+1)^080h,w
  3667  0EFA  0831               	movwf	(write_font@fontPos+1)^080h
  3668  0EFB  00A7               	movf	(write_char@pos)^080h,w
  3669  0EFC  0830               	movwf	(write_font@fontPos)^080h
  3670  0EFD  00A6               	fcall	_write_font
  3671  0EFE  120A  158A  2663  120A  158A  	line	153
  3672                           ;Display.c: 153:     } else if (c >= 97 && c <= 122) {
  3673                           	goto	l156
  3674  0F03  2F26               	
  3675                           l152:	
  3676  0F04                     	
  3677                           l1942:	
  3678  0F04                     	movlw	low(061h)
  3679  0F04  3061               	bsf	status, 5	;RP0=1, select bank1
  3680  0F05  1683               	bcf	status, 6	;RP1=0, select bank1
  3681  0F06  1303               	subwf	(write_char@c)^080h,w
  3682  0F07  0232               	skipc
  3683  0F08  1C03               	goto	u1591
  3684  0F09  2F0B               	goto	u1590
  3685  0F0A  2F0C               u1591:
  3686  0F0B                     	goto	l156
  3687  0F0B  2F26               u1590:
  3688  0F0C                     	
  3689                           l1944:	
  3690  0F0C                     	movlw	low(07Bh)
  3691  0F0C  307B               	subwf	(write_char@c)^080h,w
  3692  0F0D  0232               	skipnc
  3693  0F0E  1803               	goto	u1601
  3694  0F0F  2F11               	goto	u1600
  3695  0F10  2F12               u1601:
  3696  0F11                     	goto	l156
  3697  0F11  2F26               u1600:
  3698  0F12                     	line	154
  3699                           	
  3700                           l1946:	
  3701  0F12                     ;Display.c: 154:         pos = (c - 97) + 10;
  3702                           	movf	(write_char@c)^080h,w
  3703  0F12  0832               	addlw	low(-87)
  3704  0F13  3EA9               	movwf	(write_char@pos)^080h
  3705  0F14  00B0               	movlw	high(-87)
  3706  0F15  30FF               	skipnc
  3707  0F16  1803               	movlw	(high(-87)+1)&0ffh
  3708  0F17  3000               	movwf	((write_char@pos)^080h)+1
  3709  0F18  00B1               	line	155
  3710                           	
  3711                           l1948:	
  3712  0F19                     ;Display.c: 155:         write_font(pos);
  3713                           	movf	(write_char@pos+1)^080h,w
  3714  0F19  0831               	movwf	(write_font@fontPos+1)^080h
  3715  0F1A  00A7               	movf	(write_char@pos)^080h,w
  3716  0F1B  0830               	movwf	(write_font@fontPos)^080h
  3717  0F1C  00A6               	fcall	_write_font
  3718  0F1D  120A  158A  2663  120A  158A  	line	156
  3719                           ;Display.c: 156:     } else {
  3720                           	goto	l156
  3721  0F22  2F26               	
  3722                           l154:	
  3723  0F23                     	goto	l156
  3724  0F23  2F26               	line	159
  3725                           ;Display.c: 159:     }
  3726                           	
  3727                           l155:	
  3728  0F24                     	goto	l156
  3729  0F24  2F26               	
  3730                           l153:	
  3731  0F25                     	goto	l156
  3732  0F25  2F26               	
  3733                           l151:	
  3734  0F26                     	line	160
  3735                           	
  3736                           l156:	
  3737  0F26                     	return
  3738  0F26  0008               	opt stack 0
  3739                           GLOBAL	__end_of_write_char
  3740                           	__end_of_write_char:
  3741  0F27                     	signat	_write_char,4217
  3742                           	global	_write_font
  3743                           
  3744 ;; *************** function _write_font *****************
  3745 ;; Defined at:
  3746 ;;		line 162 in file "Display.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  fontPos         2    6[BANK1 ] int 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;  x               2   14[BANK1 ] int 
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3760 ;;      Params:         0       0       2       0       0
  3761 ;;      Locals:         0       0       2       0       0
  3762 ;;      Temps:          0       0       6       0       0
  3763 ;;      Totals:         0       0      10       0       0
  3764 ;;Total ram usage:       10 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; Hardware stack levels required when called:    5
  3767 ;; This function calls:
  3768 ;;		___wmul
  3769 ;;		_spiWrite
  3770 ;; This function is called by:
  3771 ;;		_write_char
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3775                           	line	162
  3776                           global __ptext7
  3777                           __ptext7:	;psect for function _write_font
  3778  0E63                     psect	text7
  3779                           	file	"Display.c"
  3780                           	line	162
  3781                           	global	__size_of_write_font
  3782                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  3783  0062                     	
  3784                           _write_font:	
  3785  0E63                     ;incstack = 0
  3786 ;; hardware stack exceeded
  3787                           	opt	stack 0
  3788                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3789                           	line	164
  3790                           	
  3791                           l1914:	
  3792  0E63                     ;Display.c: 162: void write_font(int fontPos);Display.c: 163: {;Display.c: 164:     for(
                                 int x=0; x < 5; x++){
  3793                           	bsf	status, 5	;RP0=1, select bank1
  3794  0E63  1683               	bcf	status, 6	;RP1=0, select bank1
  3795  0E64  1303               	clrf	(write_font@x)^080h
  3796  0E65  01AE               	clrf	(write_font@x+1)^080h
  3797  0E66  01AF               	
  3798                           l1916:	
  3799  0E67                     	movf	(write_font@x+1)^080h,w
  3800  0E67  082F               	xorlw	80h
  3801  0E68  3A80               	movwf	btemp+1
  3802  0E69  00FF               	movlw	(0)^80h
  3803  0E6A  3080               	subwf	btemp+1,w
  3804  0E6B  027F               	skipz
  3805  0E6C  1D03               	goto	u1535
  3806  0E6D  2E70               	movlw	05h
  3807  0E6E  3005               	subwf	(write_font@x)^080h,w
  3808  0E6F  022E               u1535:
  3809  0E70                     
  3810                           	skipc
  3811  0E70  1C03               	goto	u1531
  3812  0E71  2E73               	goto	u1530
  3813  0E72  2E74               u1531:
  3814  0E73                     	goto	l1920
  3815  0E73  2E76               u1530:
  3816  0E74                     	goto	l161
  3817  0E74  2EC4               	
  3818                           l1918:	
  3819  0E75                     	goto	l161
  3820  0E75  2EC4               	
  3821                           l159:	
  3822  0E76                     	line	165
  3823                           	
  3824                           l1920:	
  3825  0E76                     ;Display.c: 165:         spiWrite(font[fontPos][x]);
  3826                           	bsf	status, 5	;RP0=1, select bank1
  3827  0E76  1683               	bcf	status, 6	;RP1=0, select bank1
  3828  0E77  1303               	movf	(write_font@x+1)^080h,w
  3829  0E78  082F               	movwf	(??_write_font+0)^080h+0+1
  3830  0E79  00A9               	movf	(write_font@x)^080h,w
  3831  0E7A  082E               	movwf	(??_write_font+0)^080h+0
  3832  0E7B  00A8               	clrc
  3833  0E7C  1003               	rlf	(??_write_font+0)^080h+0,f
  3834  0E7D  0DA8               	rlf	(??_write_font+0)^080h+1,f
  3835  0E7E  0DA9               	movf	(write_font@fontPos+1)^080h,w
  3836  0E7F  0827               	movwf	(___wmul@multiplier+1)^080h
  3837  0E80  00A1               	movf	(write_font@fontPos)^080h,w
  3838  0E81  0826               	movwf	(___wmul@multiplier)^080h
  3839  0E82  00A0               	movlw	0Ah
  3840  0E83  300A               	movwf	(___wmul@multiplicand)^080h
  3841  0E84  00A2               	movlw	0
  3842  0E85  3000               	movwf	((___wmul@multiplicand)^080h)+1
  3843  0E86  00A3               	fcall	___wmul
  3844  0E87  120A  158A  2349  120A  158A  	movlw	low(((_font)|8000h))
  3845  0E8C  3012               	bsf	status, 5	;RP0=1, select bank1
  3846  0E8D  1683               	bcf	status, 6	;RP1=0, select bank1
  3847  0E8E  1303               	movwf	(??_write_font+2)^080h+0
  3848  0E8F  00AA               	movlw	high(((_font)|8000h))
  3849  0E90  3088               	movwf	(??_write_font+2)^080h+0+1
  3850  0E91  00AB               	movf	(0+(?___wmul))^080h,w
  3851  0E92  0820               	addwf	0+(??_write_font+2)^080h+0,w
  3852  0E93  072A               	movwf	(??_write_font+4)^080h+0
  3853  0E94  00AC               	movf	(1+(?___wmul))^080h,w
  3854  0E95  0821               	skipnc
  3855  0E96  1803               	incf	(1+(?___wmul))^080h,w
  3856  0E97  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  3857  0E98  072B               	movwf	1+(??_write_font+4)^080h+0
  3858  0E99  00AD               	movf	0+(??_write_font+0)^080h+0,w
  3859  0E9A  0828               	addwf	0+(??_write_font+4)^080h+0,w
  3860  0E9B  072C               	movwf	fsr0
  3861  0E9C  0084               	movf	1+(??_write_font+0)^080h+0,w
  3862  0E9D  0829               	skipnc
  3863  0E9E  1803               	incf	1+(??_write_font+0)^080h+0,w
  3864  0E9F  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  3865  0EA0  072D               	bcf	status, 5	;RP0=0, select bank0
  3866  0EA1  1283               	bcf	status, 6	;RP1=0, select bank0
  3867  0EA2  1303               	movwf	btemp+1
  3868  0EA3  00FF               	fcall	stringtab
  3869  0EA4  120A  158A  2000  120A  158A  	fcall	_spiWrite
  3870  0EA9  120A  158A  22FA  120A  158A  	line	166
  3871                           	
  3872                           l1922:	
  3873  0EAE                     ;Display.c: 166:     }
  3874                           	movlw	01h
  3875  0EAE  3001               	bsf	status, 5	;RP0=1, select bank1
  3876  0EAF  1683               	bcf	status, 6	;RP1=0, select bank1
  3877  0EB0  1303               	addwf	(write_font@x)^080h,f
  3878  0EB1  07AE               	skipnc
  3879  0EB2  1803               	incf	(write_font@x+1)^080h,f
  3880  0EB3  0AAF               	movlw	0
  3881  0EB4  3000               	addwf	(write_font@x+1)^080h,f
  3882  0EB5  07AF               	
  3883                           l1924:	
  3884  0EB6                     	movf	(write_font@x+1)^080h,w
  3885  0EB6  082F               	xorlw	80h
  3886  0EB7  3A80               	movwf	btemp+1
  3887  0EB8  00FF               	movlw	(0)^80h
  3888  0EB9  3080               	subwf	btemp+1,w
  3889  0EBA  027F               	skipz
  3890  0EBB  1D03               	goto	u1545
  3891  0EBC  2EBF               	movlw	05h
  3892  0EBD  3005               	subwf	(write_font@x)^080h,w
  3893  0EBE  022E               u1545:
  3894  0EBF                     
  3895                           	skipc
  3896  0EBF  1C03               	goto	u1541
  3897  0EC0  2EC2               	goto	u1540
  3898  0EC1  2EC3               u1541:
  3899  0EC2                     	goto	l1920
  3900  0EC2  2E76               u1540:
  3901  0EC3                     	goto	l161
  3902  0EC3  2EC4               	
  3903                           l160:	
  3904  0EC4                     	line	167
  3905                           	
  3906                           l161:	
  3907  0EC4                     	return
  3908  0EC4  0008               	opt stack 0
  3909                           GLOBAL	__end_of_write_font
  3910                           	__end_of_write_font:
  3911  0EC5                     	signat	_write_font,4217
  3912                           	global	___wmul
  3913                           
  3914 ;; *************** function ___wmul *****************
  3915 ;; Defined at:
  3916 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  multiplier      2    0[BANK1 ] unsigned int 
  3919 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  product         2    4[BANK1 ] unsigned int 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  2    0[BANK1 ] unsigned int 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       4       0       0
  3932 ;;      Locals:         0       0       2       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:         0       0       6       0       0
  3935 ;;Total ram usage:        6 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    4
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_write_font
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3945                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3946                           	line	15
  3947                           global __ptext8
  3948                           __ptext8:	;psect for function ___wmul
  3949  0B49                     psect	text8
  3950                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3951                           	line	15
  3952                           	global	__size_of___wmul
  3953                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3954  002A                     	
  3955                           ___wmul:	
  3956  0B49                     ;incstack = 0
  3957 ;; hardware stack exceeded
  3958                           	opt	stack 0
  3959                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3960                           	line	43
  3961                           	
  3962                           l1900:	
  3963  0B49                     	bsf	status, 5	;RP0=1, select bank1
  3964  0B49  1683               	bcf	status, 6	;RP1=0, select bank1
  3965  0B4A  1303               	clrf	(___wmul@product)^080h
  3966  0B4B  01A4               	clrf	(___wmul@product+1)^080h
  3967  0B4C  01A5               	goto	l1902
  3968  0B4D  2B4E               	line	44
  3969                           	
  3970                           l456:	
  3971  0B4E                     	line	45
  3972                           	
  3973                           l1902:	
  3974  0B4E                     	btfss	(___wmul@multiplier)^080h,(0)&7
  3975  0B4E  1C20               	goto	u1491
  3976  0B4F  2B51               	goto	u1490
  3977  0B50  2B52               u1491:
  3978  0B51                     	goto	l457
  3979  0B51  2B58               u1490:
  3980  0B52                     	line	46
  3981                           	
  3982                           l1904:	
  3983  0B52                     	movf	(___wmul@multiplicand)^080h,w
  3984  0B52  0822               	addwf	(___wmul@product)^080h,f
  3985  0B53  07A4               	skipnc
  3986  0B54  1803               	incf	(___wmul@product+1)^080h,f
  3987  0B55  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  3988  0B56  0823               	addwf	(___wmul@product+1)^080h,f
  3989  0B57  07A5               	
  3990                           l457:	
  3991  0B58                     	line	47
  3992                           	movlw	01h
  3993  0B58  3001               	
  3994                           u1505:
  3995  0B59                     	clrc
  3996  0B59  1003               	rlf	(___wmul@multiplicand)^080h,f
  3997  0B5A  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  3998  0B5B  0DA3               	addlw	-1
  3999  0B5C  3EFF               	skipz
  4000  0B5D  1D03               	goto	u1505
  4001  0B5E  2B59               	line	48
  4002                           	
  4003                           l1906:	
  4004  0B5F                     	movlw	01h
  4005  0B5F  3001               	
  4006                           u1515:
  4007  0B60                     	clrc
  4008  0B60  1003               	rrf	(___wmul@multiplier+1)^080h,f
  4009  0B61  0CA1               	rrf	(___wmul@multiplier)^080h,f
  4010  0B62  0CA0               	addlw	-1
  4011  0B63  3EFF               	skipz
  4012  0B64  1D03               	goto	u1515
  4013  0B65  2B60               	line	49
  4014                           	
  4015                           l1908:	
  4016  0B66                     	movf	((___wmul@multiplier)^080h),w
  4017  0B66  0820               iorwf	((___wmul@multiplier+1)^080h),w
  4018  0B67  0421               	btfss	status,2
  4019  0B68  1D03               	goto	u1521
  4020  0B69  2B6B               	goto	u1520
  4021  0B6A  2B6C               u1521:
  4022  0B6B                     	goto	l1902
  4023  0B6B  2B4E               u1520:
  4024  0B6C                     	goto	l1910
  4025  0B6C  2B6D               	
  4026                           l458:	
  4027  0B6D                     	line	52
  4028                           	
  4029                           l1910:	
  4030  0B6D                     	movf	(___wmul@product+1)^080h,w
  4031  0B6D  0825               	movwf	(?___wmul+1)^080h
  4032  0B6E  00A1               	movf	(___wmul@product)^080h,w
  4033  0B6F  0824               	movwf	(?___wmul)^080h
  4034  0B70  00A0               	goto	l459
  4035  0B71  2B72               	
  4036                           l1912:	
  4037  0B72                     	line	53
  4038                           	
  4039                           l459:	
  4040  0B72                     	return
  4041  0B72  0008               	opt stack 0
  4042                           GLOBAL	__end_of___wmul
  4043                           	__end_of___wmul:
  4044  0B73                     	signat	___wmul,8314
  4045                           	global	_sprintf
  4046                           
  4047 ;; *************** function _sprintf *****************
  4048 ;; Defined at:
  4049 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  sp              1    wreg     PTR unsigned char 
  4052 ;;		 -> write_int@num(2), 
  4053 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4054 ;;		 -> STR_3(3), 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  4057 ;;		 -> write_int@num(2), 
  4058 ;;  tmpval          4    0        struct .
  4059 ;;  val             2   25[BANK1 ] unsigned int 
  4060 ;;  cp              2    0        PTR const unsigned char 
  4061 ;;  len             2    0        unsigned int 
  4062 ;;  c               1   28[BANK1 ] unsigned char 
  4063 ;;  prec            1   24[BANK1 ] char 
  4064 ;;  flag            1   23[BANK1 ] unsigned char 
  4065 ;;  ap              1   22[BANK1 ] PTR void [1]
  4066 ;;		 -> ?_sprintf(2), 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2   14[BANK1 ] int 
  4069 ;; Registers used:
  4070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4076 ;;      Params:         0       0       4       0       0
  4077 ;;      Locals:         0       0       7       0       0
  4078 ;;      Temps:          0       0       4       0       0
  4079 ;;      Totals:         0       0      15       0       0
  4080 ;;Total ram usage:       15 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    5
  4083 ;; This function calls:
  4084 ;;		___lwdiv
  4085 ;;		___lwmod
  4086 ;; This function is called by:
  4087 ;;		_write_int
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4091                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4092                           	line	500
  4093                           global __ptext9
  4094                           __ptext9:	;psect for function _sprintf
  4095  03EA                     psect	text9
  4096                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4097                           	line	500
  4098                           	global	__size_of_sprintf
  4099                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4100  0136                     	
  4101                           _sprintf:	
  4102  03EA                     ;incstack = 0
  4103 ;; using string table level
  4104                           	opt	stack 1
  4105                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4106                           ;sprintf@sp stored from wreg
  4107                           	bsf	status, 5	;RP0=1, select bank1
  4108  03EA  1683               	bcf	status, 6	;RP1=0, select bank1
  4109  03EB  1303               	movwf	(sprintf@sp)^080h
  4110  03EC  00BB               	line	545
  4111                           	
  4112                           l2006:	
  4113  03ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  4114                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  4115  03ED  30B0               	movwf	(??_sprintf+0)^080h+0
  4116  03EE  00B2               	movf	(??_sprintf+0)^080h+0,w
  4117  03EF  0832               	movwf	(sprintf@ap)^080h
  4118  03F0  00B6               	line	548
  4119                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4120                           	goto	l2058
  4121  03F1  2CF8               	
  4122                           l435:	
  4123  03F2                     	line	550
  4124                           	
  4125                           l2008:	
  4126  03F2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  4127                           		movlw	37
  4128  03F2  3025               	xorwf	((sprintf@c)^080h),w
  4129  03F3  063C               	btfsc	status,2
  4130  03F4  1903               	goto	u1751
  4131  03F5  2BF7               	goto	u1750
  4132  03F6  2BF8               u1751:
  4133  03F7                     	goto	l2014
  4134  03F7  2C04               u1750:
  4135  03F8                     	line	553
  4136                           	
  4137                           l2010:	
  4138  03F8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  4139                           	movf	(sprintf@c)^080h,w
  4140  03F8  083C               	movwf	(??_sprintf+0)^080h+0
  4141  03F9  00B2               	movf	(sprintf@sp)^080h,w
  4142  03FA  083B               	movwf	fsr0
  4143  03FB  0084               	movf	(??_sprintf+0)^080h+0,w
  4144  03FC  0832               	bcf	status, 7	;select IRP bank0
  4145  03FD  1383               	movwf	indf
  4146  03FE  0080               	
  4147                           l2012:	
  4148  03FF                     	movlw	low(01h)
  4149  03FF  3001               	movwf	(??_sprintf+0)^080h+0
  4150  0400  00B2               	movf	(??_sprintf+0)^080h+0,w
  4151  0401  0832               	addwf	(sprintf@sp)^080h,f
  4152  0402  07BB               	line	554
  4153                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  4154                           	goto	l2058
  4155  0403  2CF8               	line	555
  4156                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  4157                           	
  4158                           l436:	
  4159  0404                     	line	560
  4160                           	
  4161                           l2014:	
  4162  0404                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  4163                           	clrf	(sprintf@flag)^080h
  4164  0404  01B7               	line	654
  4165                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  4166                           	goto	l2018
  4167  0405  2C0B               	line	656
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  4169                           	
  4170                           l438:	
  4171  0406                     	line	657
  4172                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  4173                           	goto	l2060
  4174  0406  2D1A               	line	716
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  4176                           	
  4177                           l440:	
  4178  0407                     	goto	l2020
  4179  0407  2C36               	line	717
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  4181                           	
  4182                           l441:	
  4183  0408                     	line	718
  4184                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  4185                           	goto	l2020
  4186  0408  2C36               	line	821
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  4188                           	
  4189                           l443:	
  4190  0409                     	line	832
  4191                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  4192                           	goto	l2058
  4193  0409  2CF8               	line	841
  4194                           	
  4195                           l2016:	
  4196  040A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  4197                           	goto	l2020
  4198  040A  2C36               	
  4199                           l437:	
  4200  040B                     	
  4201                           l2018:	
  4202  040B                     	movf	(sprintf@f+1)^080h,w
  4203  040B  082F               	movwf	(??_sprintf+0)^080h+0+1
  4204  040C  00B3               	movf	(sprintf@f)^080h,w
  4205  040D  082E               	movwf	(??_sprintf+0)^080h+0
  4206  040E  00B2               	incf	(sprintf@f)^080h,f
  4207  040F  0AAE               	skipnz
  4208  0410  1903               	incf	(sprintf@f+1)^080h,f
  4209  0411  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4210  0412  0833               	bcf	status, 5	;RP0=0, select bank0
  4211  0413  1283               	bcf	status, 6	;RP1=0, select bank0
  4212  0414  1303               	movwf	btemp+1
  4213  0415  00FF               	bsf	status, 5	;RP0=1, select bank1
  4214  0416  1683               	bcf	status, 6	;RP1=0, select bank1
  4215  0417  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4216  0418  0832               	movwf	fsr0
  4217  0419  0084               	bcf	status, 5	;RP0=0, select bank0
  4218  041A  1283               	bcf	status, 6	;RP1=0, select bank0
  4219  041B  1303               	fcall	stringtab
  4220  041C  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4221  0421  1683               	bcf	status, 6	;RP1=0, select bank1
  4222  0422  1303               	movwf	(sprintf@c)^080h
  4223  0423  00BC               	movwf	(??_sprintf+2)^080h+0
  4224  0424  00B4               	clrf	(??_sprintf+2)^080h+0+1
  4225  0425  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4226                           ; Switch size 1, requested type "space"
  4227                           ; Number of cases is 1, Range of values is 0 to 0
  4228                           ; switch strategies available:
  4229                           ; Name         Instructions Cycles
  4230                           ; simple_byte            4     3 (average)
  4231                           ; direct_byte           11     8 (fixed)
  4232                           ; jumptable            260     6 (fixed)
  4233                           ;	Chosen strategy is simple_byte
  4234                           
  4235                           	movf 1+(??_sprintf+2)^080h+0,w
  4236  0426  0835               	opt asmopt_push
  4237                           	opt asmopt_off
  4238                           	xorlw	0^0	; case 0
  4239  0427  3A00               	skipnz
  4240  0428  1903               	goto	l2852
  4241  0429  2C2B               	goto	l2058
  4242  042A  2CF8               	opt asmopt_pop
  4243                           	
  4244                           l2852:	
  4245  042B                     ; Switch size 1, requested type "space"
  4246                           ; Number of cases is 3, Range of values is 0 to 105
  4247                           ; switch strategies available:
  4248                           ; Name         Instructions Cycles
  4249                           ; simple_byte           10     6 (average)
  4250                           ; jumptable            260     6 (fixed)
  4251                           ;	Chosen strategy is simple_byte
  4252                           
  4253                           	movf 0+(??_sprintf+2)^080h+0,w
  4254  042B  0834               	opt asmopt_push
  4255                           	opt asmopt_off
  4256                           	xorlw	0^0	; case 0
  4257  042C  3A00               	skipnz
  4258  042D  1903               	goto	l2060
  4259  042E  2D1A               	xorlw	100^0	; case 100
  4260  042F  3A64               	skipnz
  4261  0430  1903               	goto	l2020
  4262  0431  2C36               	xorlw	105^100	; case 105
  4263  0432  3A0D               	skipnz
  4264  0433  1903               	goto	l2020
  4265  0434  2C36               	goto	l2058
  4266  0435  2CF8               	opt asmopt_pop
  4267                           
  4268                           	
  4269                           l442:	
  4270  0436                     	line	1278
  4271                           	
  4272                           l2020:	
  4273  0436                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4274                           	movf	(sprintf@ap)^080h,w
  4275  0436  0836               	movwf	fsr0
  4276  0437  0084               	bcf	status, 7	;select IRP bank0
  4277  0438  1383               	movf	indf,w
  4278  0439  0800               	movwf	(sprintf@val)^080h
  4279  043A  00B9               	incf	fsr0,f
  4280  043B  0A84               	movf	indf,w
  4281  043C  0800               	movwf	(sprintf@val+1)^080h
  4282  043D  00BA               	
  4283                           l2022:	
  4284  043E                     	movlw	low(02h)
  4285  043E  3002               	movwf	(??_sprintf+0)^080h+0
  4286  043F  00B2               	movf	(??_sprintf+0)^080h+0,w
  4287  0440  0832               	addwf	(sprintf@ap)^080h,f
  4288  0441  07B6               	line	1280
  4289                           	
  4290                           l2024:	
  4291  0442                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  4292                           	btfss	(sprintf@val+1)^080h,7
  4293  0442  1FBA               	goto	u1761
  4294  0443  2C45               	goto	u1760
  4295  0444  2C46               u1761:
  4296  0445                     	goto	l2030
  4297  0445  2C50               u1760:
  4298  0446                     	line	1281
  4299                           	
  4300                           l2026:	
  4301  0446                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  4302                           	movlw	low(03h)
  4303  0446  3003               	movwf	(??_sprintf+0)^080h+0
  4304  0447  00B2               	movf	(??_sprintf+0)^080h+0,w
  4305  0448  0832               	iorwf	(sprintf@flag)^080h,f
  4306  0449  04B7               	line	1282
  4307                           	
  4308                           l2028:	
  4309  044A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  4310                           	comf	(sprintf@val)^080h,f
  4311  044A  09B9               	comf	(sprintf@val+1)^080h,f
  4312  044B  09BA               	incf	(sprintf@val)^080h,f
  4313  044C  0AB9               	skipnz
  4314  044D  1903               	incf	(sprintf@val+1)^080h,f
  4315  044E  0ABA               	goto	l2030
  4316  044F  2C50               	line	1283
  4317                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  4318                           	
  4319                           l444:	
  4320  0450                     	line	1324
  4321                           	
  4322                           l2030:	
  4323  0450                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4324                           	clrf	(sprintf@c)^080h
  4325  0450  01BC               	incf	(sprintf@c)^080h,f
  4326  0451  0ABC               	
  4327                           l2032:	
  4328  0452                     		movlw	5
  4329  0452  3005               	xorwf	((sprintf@c)^080h),w
  4330  0453  063C               	btfss	status,2
  4331  0454  1D03               	goto	u1771
  4332  0455  2C57               	goto	u1770
  4333  0456  2C58               u1771:
  4334  0457                     	goto	l2036
  4335  0457  2C5A               u1770:
  4336  0458                     	goto	l2042
  4337  0458  2C8E               	
  4338                           l2034:	
  4339  0459                     	goto	l2042
  4340  0459  2C8E               	
  4341                           l445:	
  4342  045A                     	line	1325
  4343                           	
  4344                           l2036:	
  4345  045A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  4346                           	movf	(sprintf@c)^080h,w
  4347  045A  083C               	movwf	(??_sprintf+0)^080h+0
  4348  045B  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4349  045C  0732               	addlw	low(((_dpowers)|8000h))
  4350  045D  3E84               	movwf	fsr0
  4351  045E  0084               	movlw	high(((_dpowers)|8000h))
  4352  045F  3089               	skipnc
  4353  0460  1803               	addlw	1
  4354  0461  3E01               	bcf	status, 5	;RP0=0, select bank0
  4355  0462  1283               	bcf	status, 6	;RP1=0, select bank0
  4356  0463  1303               	movwf	btemp+1
  4357  0464  00FF               	fcall	stringtab
  4358  0465  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4359  046A  1683               	bcf	status, 6	;RP1=0, select bank1
  4360  046B  1303               	movwf	(??_sprintf+1)^080h+0
  4361  046C  00B3               	bcf	status, 5	;RP0=0, select bank0
  4362  046D  1283               	bcf	status, 6	;RP1=0, select bank0
  4363  046E  1303               	fcall	stringtab
  4364  046F  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4365  0474  1683               	bcf	status, 6	;RP1=0, select bank1
  4366  0475  1303               	movwf	(??_sprintf+1)^080h+0+1
  4367  0476  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  4368  0477  0834               	subwf	(sprintf@val+1)^080h,w
  4369  0478  023A               	skipz
  4370  0479  1D03               	goto	u1785
  4371  047A  2C7D               	movf	0+(??_sprintf+1)^080h+0,w
  4372  047B  0833               	subwf	(sprintf@val)^080h,w
  4373  047C  0239               u1785:
  4374  047D                     	skipnc
  4375  047D  1803               	goto	u1781
  4376  047E  2C80               	goto	u1780
  4377  047F  2C81               u1781:
  4378  0480                     	goto	l2040
  4379  0480  2C83               u1780:
  4380  0481                     	goto	l2042
  4381  0481  2C8E               	line	1326
  4382                           	
  4383                           l2038:	
  4384  0482                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  4385                           	goto	l2042
  4386  0482  2C8E               	
  4387                           l447:	
  4388  0483                     	
  4389                           l2040:	
  4390  0483                     	movlw	low(01h)
  4391  0483  3001               	movwf	(??_sprintf+0)^080h+0
  4392  0484  00B2               	movf	(??_sprintf+0)^080h+0,w
  4393  0485  0832               	addwf	(sprintf@c)^080h,f
  4394  0486  07BC               		movlw	5
  4395  0487  3005               	xorwf	((sprintf@c)^080h),w
  4396  0488  063C               	btfss	status,2
  4397  0489  1D03               	goto	u1791
  4398  048A  2C8C               	goto	u1790
  4399  048B  2C8D               u1791:
  4400  048C                     	goto	l2036
  4401  048C  2C5A               u1790:
  4402  048D                     	goto	l2042
  4403  048D  2C8E               	
  4404                           l446:	
  4405  048E                     	line	1457
  4406                           	
  4407                           l2042:	
  4408  048E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  4409                           	movf	(sprintf@flag)^080h,w
  4410  048E  0837               	andlw	03h
  4411  048F  3903               	btfsc	status,2
  4412  0490  1903               	goto	u1801
  4413  0491  2C93               	goto	u1800
  4414  0492  2C94               u1801:
  4415  0493                     	goto	l2048
  4416  0493  2CA0               u1800:
  4417  0494                     	line	1458
  4418                           	
  4419                           l2044:	
  4420  0494                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  4421                           	movlw	low(02Dh)
  4422  0494  302D               	movwf	(??_sprintf+0)^080h+0
  4423  0495  00B2               	movf	(sprintf@sp)^080h,w
  4424  0496  083B               	movwf	fsr0
  4425  0497  0084               	movf	(??_sprintf+0)^080h+0,w
  4426  0498  0832               	bcf	status, 7	;select IRP bank0
  4427  0499  1383               	movwf	indf
  4428  049A  0080               	
  4429                           l2046:	
  4430  049B                     	movlw	low(01h)
  4431  049B  3001               	movwf	(??_sprintf+0)^080h+0
  4432  049C  00B2               	movf	(??_sprintf+0)^080h+0,w
  4433  049D  0832               	addwf	(sprintf@sp)^080h,f
  4434  049E  07BB               	goto	l2048
  4435  049F  2CA0               	
  4436                           l448:	
  4437  04A0                     	line	1491
  4438                           	
  4439                           l2048:	
  4440  04A0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  4441                           	movf	(sprintf@c)^080h,w
  4442  04A0  083C               	movwf	(??_sprintf+0)^080h+0
  4443  04A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4444  04A2  0832               	movwf	(sprintf@prec)^080h
  4445  04A3  00B8               	line	1493
  4446                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4447                           	goto	l2056
  4448  04A4  2CED               	
  4449                           l450:	
  4450  04A5                     	line	1508
  4451                           	
  4452                           l2050:	
  4453  04A5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  4454                           	movlw	0Ah
  4455  04A5  300A               	movwf	(___lwmod@divisor)^080h
  4456  04A6  00A8               	movlw	0
  4457  04A7  3000               	movwf	((___lwmod@divisor)^080h)+1
  4458  04A8  00A9               	movf	(sprintf@prec)^080h,w
  4459  04A9  0838               	movwf	(??_sprintf+0)^080h+0
  4460  04AA  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4461  04AB  0732               	addlw	low(((_dpowers)|8000h))
  4462  04AC  3E84               	movwf	fsr0
  4463  04AD  0084               	movlw	high(((_dpowers)|8000h))
  4464  04AE  3089               	skipnc
  4465  04AF  1803               	addlw	1
  4466  04B0  3E01               	bcf	status, 5	;RP0=0, select bank0
  4467  04B1  1283               	bcf	status, 6	;RP1=0, select bank0
  4468  04B2  1303               	movwf	btemp+1
  4469  04B3  00FF               	fcall	stringtab
  4470  04B4  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4471  04B9  1683               	bcf	status, 6	;RP1=0, select bank1
  4472  04BA  1303               	movwf	(___lwdiv@divisor)^080h
  4473  04BB  00A0               	bcf	status, 5	;RP0=0, select bank0
  4474  04BC  1283               	bcf	status, 6	;RP1=0, select bank0
  4475  04BD  1303               	fcall	stringtab
  4476  04BE  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4477  04C3  1683               	bcf	status, 6	;RP1=0, select bank1
  4478  04C4  1303               	movwf	(___lwdiv@divisor+1)^080h
  4479  04C5  00A1               	movf	(sprintf@val+1)^080h,w
  4480  04C6  083A               	movwf	(___lwdiv@dividend+1)^080h
  4481  04C7  00A3               	movf	(sprintf@val)^080h,w
  4482  04C8  0839               	movwf	(___lwdiv@dividend)^080h
  4483  04C9  00A2               	fcall	___lwdiv
  4484  04CA  120A  158A  256D  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4485  04CF  1683               	bcf	status, 6	;RP1=0, select bank1
  4486  04D0  1303               	movf	(1+(?___lwdiv))^080h,w
  4487  04D1  0821               	movwf	(___lwmod@dividend+1)^080h
  4488  04D2  00AB               	movf	(0+(?___lwdiv))^080h,w
  4489  04D3  0820               	movwf	(___lwmod@dividend)^080h
  4490  04D4  00AA               	fcall	___lwmod
  4491  04D5  120A  158A  244D  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4492  04DA  1683               	bcf	status, 6	;RP1=0, select bank1
  4493  04DB  1303               	movf	(0+(?___lwmod))^080h,w
  4494  04DC  0828               	addlw	030h
  4495  04DD  3E30               	movwf	(??_sprintf+1)^080h+0
  4496  04DE  00B3               	movf	(??_sprintf+1)^080h+0,w
  4497  04DF  0833               	movwf	(sprintf@c)^080h
  4498  04E0  00BC               	line	1543
  4499                           	
  4500                           l2052:	
  4501  04E1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  4502                           	movf	(sprintf@c)^080h,w
  4503  04E1  083C               	movwf	(??_sprintf+0)^080h+0
  4504  04E2  00B2               	movf	(sprintf@sp)^080h,w
  4505  04E3  083B               	movwf	fsr0
  4506  04E4  0084               	movf	(??_sprintf+0)^080h+0,w
  4507  04E5  0832               	bcf	status, 7	;select IRP bank0
  4508  04E6  1383               	movwf	indf
  4509  04E7  0080               	
  4510                           l2054:	
  4511  04E8                     	movlw	low(01h)
  4512  04E8  3001               	movwf	(??_sprintf+0)^080h+0
  4513  04E9  00B2               	movf	(??_sprintf+0)^080h+0,w
  4514  04EA  0832               	addwf	(sprintf@sp)^080h,f
  4515  04EB  07BB               	goto	l2056
  4516  04EC  2CED               	line	1544
  4517                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  4518                           	
  4519                           l449:	
  4520  04ED                     	line	1493
  4521                           	
  4522                           l2056:	
  4523  04ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4524                           	movlw	low(-1)
  4525  04ED  30FF               	movwf	(??_sprintf+0)^080h+0
  4526  04EE  00B2               	movf	(??_sprintf+0)^080h+0,w
  4527  04EF  0832               	addwf	(sprintf@prec)^080h,f
  4528  04F0  07B8               		incf	(((sprintf@prec)^080h)),w
  4529  04F1  0A38               	btfss	status,2
  4530  04F2  1D03               	goto	u1811
  4531  04F3  2CF5               	goto	u1810
  4532  04F4  2CF6               u1811:
  4533  04F5                     	goto	l2050
  4534  04F5  2CA5               u1810:
  4535  04F6                     	goto	l2058
  4536  04F6  2CF8               	
  4537                           l451:	
  4538  04F7                     	goto	l2058
  4539  04F7  2CF8               	line	1552
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  4541                           	
  4542                           l434:	
  4543  04F8                     	line	548
  4544                           	
  4545                           l2058:	
  4546  04F8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4547                           	movf	(sprintf@f+1)^080h,w
  4548  04F8  082F               	movwf	(??_sprintf+0)^080h+0+1
  4549  04F9  00B3               	movf	(sprintf@f)^080h,w
  4550  04FA  082E               	movwf	(??_sprintf+0)^080h+0
  4551  04FB  00B2               	incf	(sprintf@f)^080h,f
  4552  04FC  0AAE               	skipnz
  4553  04FD  1903               	incf	(sprintf@f+1)^080h,f
  4554  04FE  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4555  04FF  0833               	bcf	status, 5	;RP0=0, select bank0
  4556  0500  1283               	bcf	status, 6	;RP1=0, select bank0
  4557  0501  1303               	movwf	btemp+1
  4558  0502  00FF               	bsf	status, 5	;RP0=1, select bank1
  4559  0503  1683               	bcf	status, 6	;RP1=0, select bank1
  4560  0504  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4561  0505  0832               	movwf	fsr0
  4562  0506  0084               	bcf	status, 5	;RP0=0, select bank0
  4563  0507  1283               	bcf	status, 6	;RP1=0, select bank0
  4564  0508  1303               	fcall	stringtab
  4565  0509  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4566  050E  1683               	bcf	status, 6	;RP1=0, select bank1
  4567  050F  1303               	movwf	(??_sprintf+2)^080h+0
  4568  0510  00B4               	movf	(??_sprintf+2)^080h+0,w
  4569  0511  0834               	movwf	(sprintf@c)^080h
  4570  0512  00BC               	movf	(((sprintf@c)^080h)),w
  4571  0513  083C               	btfss	status,2
  4572  0514  1D03               	goto	u1821
  4573  0515  2D17               	goto	u1820
  4574  0516  2D18               u1821:
  4575  0517                     	goto	l2008
  4576  0517  2BF2               u1820:
  4577  0518                     	goto	l2060
  4578  0518  2D1A               	
  4579                           l452:	
  4580  0519                     	goto	l2060
  4581  0519  2D1A               	line	1554
  4582                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  4583                           	
  4584                           l439:	
  4585  051A                     	line	1557
  4586                           	
  4587                           l2060:	
  4588  051A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  4589                           	movf	(sprintf@sp)^080h,w
  4590  051A  083B               	movwf	fsr0
  4591  051B  0084               	bcf	status, 7	;select IRP bank0
  4592  051C  1383               	clrf	indf
  4593  051D  0180               	goto	l453
  4594  051E  2D1F               	line	1559
  4595                           	
  4596                           l2062:	
  4597  051F                     	line	1560
  4598                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  4599                           	
  4600                           l453:	
  4601  051F                     	return
  4602  051F  0008               	opt stack 0
  4603                           GLOBAL	__end_of_sprintf
  4604                           	__end_of_sprintf:
  4605  0520                     	signat	_sprintf,4698
  4606                           	global	___lwmod
  4607                           
  4608 ;; *************** function ___lwmod *****************
  4609 ;; Defined at:
  4610 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  divisor         2    8[BANK1 ] unsigned int 
  4613 ;;  dividend        2   10[BANK1 ] unsigned int 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  counter         1   13[BANK1 ] unsigned char 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  2    8[BANK1 ] unsigned int 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4625 ;;      Params:         0       0       4       0       0
  4626 ;;      Locals:         0       0       1       0       0
  4627 ;;      Temps:          0       0       1       0       0
  4628 ;;      Totals:         0       0       6       0       0
  4629 ;;Total ram usage:        6 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    4
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_sprintf
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4639                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4640                           	line	5
  4641                           global __ptext10
  4642                           __ptext10:	;psect for function ___lwmod
  4643  0C4D                     psect	text10
  4644                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4645                           	line	5
  4646                           	global	__size_of___lwmod
  4647                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4648  0043                     	
  4649                           ___lwmod:	
  4650  0C4D                     ;incstack = 0
  4651                           	opt	stack 0
  4652                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4653                           	line	12
  4654                           	
  4655                           l1976:	
  4656  0C4D                     	bsf	status, 5	;RP0=1, select bank1
  4657  0C4D  1683               	bcf	status, 6	;RP1=0, select bank1
  4658  0C4E  1303               	movf	((___lwmod@divisor)^080h),w
  4659  0C4F  0828               iorwf	((___lwmod@divisor+1)^080h),w
  4660  0C50  0429               	btfsc	status,2
  4661  0C51  1903               	goto	u1681
  4662  0C52  2C54               	goto	u1680
  4663  0C53  2C55               u1681:
  4664  0C54                     	goto	l1994
  4665  0C54  2C8A               u1680:
  4666  0C55                     	line	13
  4667                           	
  4668                           l1978:	
  4669  0C55                     	clrf	(___lwmod@counter)^080h
  4670  0C55  01AD               	incf	(___lwmod@counter)^080h,f
  4671  0C56  0AAD               	line	14
  4672                           	goto	l1984
  4673  0C57  2C64               	
  4674                           l734:	
  4675  0C58                     	line	15
  4676                           	
  4677                           l1980:	
  4678  0C58                     	movlw	01h
  4679  0C58  3001               	
  4680                           u1695:
  4681  0C59                     	clrc
  4682  0C59  1003               	rlf	(___lwmod@divisor)^080h,f
  4683  0C5A  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  4684  0C5B  0DA9               	addlw	-1
  4685  0C5C  3EFF               	skipz
  4686  0C5D  1D03               	goto	u1695
  4687  0C5E  2C59               	line	16
  4688                           	
  4689                           l1982:	
  4690  0C5F                     	movlw	low(01h)
  4691  0C5F  3001               	movwf	(??___lwmod+0)^080h+0
  4692  0C60  00AC               	movf	(??___lwmod+0)^080h+0,w
  4693  0C61  082C               	addwf	(___lwmod@counter)^080h,f
  4694  0C62  07AD               	goto	l1984
  4695  0C63  2C64               	line	17
  4696                           	
  4697                           l733:	
  4698  0C64                     	line	14
  4699                           	
  4700                           l1984:	
  4701  0C64                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  4702  0C64  1FA9               	goto	u1701
  4703  0C65  2C67               	goto	u1700
  4704  0C66  2C68               u1701:
  4705  0C67                     	goto	l1980
  4706  0C67  2C58               u1700:
  4707  0C68                     	goto	l1986
  4708  0C68  2C6A               	
  4709                           l735:	
  4710  0C69                     	goto	l1986
  4711  0C69  2C6A               	line	18
  4712                           	
  4713                           l736:	
  4714  0C6A                     	line	19
  4715                           	
  4716                           l1986:	
  4717  0C6A                     	movf	(___lwmod@divisor+1)^080h,w
  4718  0C6A  0829               	subwf	(___lwmod@dividend+1)^080h,w
  4719  0C6B  022B               	skipz
  4720  0C6C  1D03               	goto	u1715
  4721  0C6D  2C70               	movf	(___lwmod@divisor)^080h,w
  4722  0C6E  0828               	subwf	(___lwmod@dividend)^080h,w
  4723  0C6F  022A               u1715:
  4724  0C70                     	skipc
  4725  0C70  1C03               	goto	u1711
  4726  0C71  2C73               	goto	u1710
  4727  0C72  2C74               u1711:
  4728  0C73                     	goto	l1990
  4729  0C73  2C7B               u1710:
  4730  0C74                     	line	20
  4731                           	
  4732                           l1988:	
  4733  0C74                     	movf	(___lwmod@divisor)^080h,w
  4734  0C74  0828               	subwf	(___lwmod@dividend)^080h,f
  4735  0C75  02AA               	movf	(___lwmod@divisor+1)^080h,w
  4736  0C76  0829               	skipc
  4737  0C77  1C03               	decf	(___lwmod@dividend+1)^080h,f
  4738  0C78  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  4739  0C79  02AB               	goto	l1990
  4740  0C7A  2C7B               	
  4741                           l737:	
  4742  0C7B                     	line	21
  4743                           	
  4744                           l1990:	
  4745  0C7B                     	movlw	01h
  4746  0C7B  3001               	
  4747                           u1725:
  4748  0C7C                     	clrc
  4749  0C7C  1003               	rrf	(___lwmod@divisor+1)^080h,f
  4750  0C7D  0CA9               	rrf	(___lwmod@divisor)^080h,f
  4751  0C7E  0CA8               	addlw	-1
  4752  0C7F  3EFF               	skipz
  4753  0C80  1D03               	goto	u1725
  4754  0C81  2C7C               	line	22
  4755                           	
  4756                           l1992:	
  4757  0C82                     	movlw	01h
  4758  0C82  3001               	subwf	(___lwmod@counter)^080h,f
  4759  0C83  02AD               	btfss	status,2
  4760  0C84  1D03               	goto	u1731
  4761  0C85  2C87               	goto	u1730
  4762  0C86  2C88               u1731:
  4763  0C87                     	goto	l1986
  4764  0C87  2C6A               u1730:
  4765  0C88                     	goto	l1994
  4766  0C88  2C8A               	
  4767                           l738:	
  4768  0C89                     	goto	l1994
  4769  0C89  2C8A               	line	23
  4770                           	
  4771                           l732:	
  4772  0C8A                     	line	24
  4773                           	
  4774                           l1994:	
  4775  0C8A                     	movf	(___lwmod@dividend+1)^080h,w
  4776  0C8A  082B               	movwf	(?___lwmod+1)^080h
  4777  0C8B  00A9               	movf	(___lwmod@dividend)^080h,w
  4778  0C8C  082A               	movwf	(?___lwmod)^080h
  4779  0C8D  00A8               	goto	l739
  4780  0C8E  2C8F               	
  4781                           l1996:	
  4782  0C8F                     	line	25
  4783                           	
  4784                           l739:	
  4785  0C8F                     	return
  4786  0C8F  0008               	opt stack 0
  4787                           GLOBAL	__end_of___lwmod
  4788                           	__end_of___lwmod:
  4789  0C90                     	signat	___lwmod,8314
  4790                           	global	___lwdiv
  4791                           
  4792 ;; *************** function ___lwdiv *****************
  4793 ;; Defined at:
  4794 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  divisor         2    0[BANK1 ] unsigned int 
  4797 ;;  dividend        2    2[BANK1 ] unsigned int 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  quotient        2    5[BANK1 ] unsigned int 
  4800 ;;  counter         1    7[BANK1 ] unsigned char 
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2    0[BANK1 ] unsigned int 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4810 ;;      Params:         0       0       4       0       0
  4811 ;;      Locals:         0       0       3       0       0
  4812 ;;      Temps:          0       0       1       0       0
  4813 ;;      Totals:         0       0       8       0       0
  4814 ;;Total ram usage:        8 bytes
  4815 ;; Hardware stack levels used:    1
  4816 ;; Hardware stack levels required when called:    4
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_sprintf
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  4824                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4825                           	line	5
  4826                           global __ptext11
  4827                           __ptext11:	;psect for function ___lwdiv
  4828  0D6D                     psect	text11
  4829                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4830                           	line	5
  4831                           	global	__size_of___lwdiv
  4832                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4833  004D                     	
  4834                           ___lwdiv:	
  4835  0D6D                     ;incstack = 0
  4836                           	opt	stack 0
  4837                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4838                           	line	13
  4839                           	
  4840                           l1950:	
  4841  0D6D                     	bsf	status, 5	;RP0=1, select bank1
  4842  0D6D  1683               	bcf	status, 6	;RP1=0, select bank1
  4843  0D6E  1303               	clrf	(___lwdiv@quotient)^080h
  4844  0D6F  01A5               	clrf	(___lwdiv@quotient+1)^080h
  4845  0D70  01A6               	line	14
  4846                           	
  4847                           l1952:	
  4848  0D71                     	movf	((___lwdiv@divisor)^080h),w
  4849  0D71  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  4850  0D72  0421               	btfsc	status,2
  4851  0D73  1903               	goto	u1611
  4852  0D74  2D76               	goto	u1610
  4853  0D75  2D77               u1611:
  4854  0D76                     	goto	l1972
  4855  0D76  2DB4               u1610:
  4856  0D77                     	line	15
  4857                           	
  4858                           l1954:	
  4859  0D77                     	clrf	(___lwdiv@counter)^080h
  4860  0D77  01A7               	incf	(___lwdiv@counter)^080h,f
  4861  0D78  0AA7               	line	16
  4862                           	goto	l1960
  4863  0D79  2D86               	
  4864                           l724:	
  4865  0D7A                     	line	17
  4866                           	
  4867                           l1956:	
  4868  0D7A                     	movlw	01h
  4869  0D7A  3001               	
  4870                           u1625:
  4871  0D7B                     	clrc
  4872  0D7B  1003               	rlf	(___lwdiv@divisor)^080h,f
  4873  0D7C  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  4874  0D7D  0DA1               	addlw	-1
  4875  0D7E  3EFF               	skipz
  4876  0D7F  1D03               	goto	u1625
  4877  0D80  2D7B               	line	18
  4878                           	
  4879                           l1958:	
  4880  0D81                     	movlw	low(01h)
  4881  0D81  3001               	movwf	(??___lwdiv+0)^080h+0
  4882  0D82  00A4               	movf	(??___lwdiv+0)^080h+0,w
  4883  0D83  0824               	addwf	(___lwdiv@counter)^080h,f
  4884  0D84  07A7               	goto	l1960
  4885  0D85  2D86               	line	19
  4886                           	
  4887                           l723:	
  4888  0D86                     	line	16
  4889                           	
  4890                           l1960:	
  4891  0D86                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  4892  0D86  1FA1               	goto	u1631
  4893  0D87  2D89               	goto	u1630
  4894  0D88  2D8A               u1631:
  4895  0D89                     	goto	l1956
  4896  0D89  2D7A               u1630:
  4897  0D8A                     	goto	l1962
  4898  0D8A  2D8C               	
  4899                           l725:	
  4900  0D8B                     	goto	l1962
  4901  0D8B  2D8C               	line	20
  4902                           	
  4903                           l726:	
  4904  0D8C                     	line	21
  4905                           	
  4906                           l1962:	
  4907  0D8C                     	movlw	01h
  4908  0D8C  3001               	
  4909                           u1645:
  4910  0D8D                     	clrc
  4911  0D8D  1003               	rlf	(___lwdiv@quotient)^080h,f
  4912  0D8E  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  4913  0D8F  0DA6               	addlw	-1
  4914  0D90  3EFF               	skipz
  4915  0D91  1D03               	goto	u1645
  4916  0D92  2D8D               	line	22
  4917                           	movf	(___lwdiv@divisor+1)^080h,w
  4918  0D93  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  4919  0D94  0223               	skipz
  4920  0D95  1D03               	goto	u1655
  4921  0D96  2D99               	movf	(___lwdiv@divisor)^080h,w
  4922  0D97  0820               	subwf	(___lwdiv@dividend)^080h,w
  4923  0D98  0222               u1655:
  4924  0D99                     	skipc
  4925  0D99  1C03               	goto	u1651
  4926  0D9A  2D9C               	goto	u1650
  4927  0D9B  2D9D               u1651:
  4928  0D9C                     	goto	l1968
  4929  0D9C  2DA5               u1650:
  4930  0D9D                     	line	23
  4931                           	
  4932                           l1964:	
  4933  0D9D                     	movf	(___lwdiv@divisor)^080h,w
  4934  0D9D  0820               	subwf	(___lwdiv@dividend)^080h,f
  4935  0D9E  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  4936  0D9F  0821               	skipc
  4937  0DA0  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  4938  0DA1  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  4939  0DA2  02A3               	line	24
  4940                           	
  4941                           l1966:	
  4942  0DA3                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  4943  0DA3  1425               	goto	l1968
  4944  0DA4  2DA5               	line	25
  4945                           	
  4946                           l727:	
  4947  0DA5                     	line	26
  4948                           	
  4949                           l1968:	
  4950  0DA5                     	movlw	01h
  4951  0DA5  3001               	
  4952                           u1665:
  4953  0DA6                     	clrc
  4954  0DA6  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  4955  0DA7  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  4956  0DA8  0CA0               	addlw	-1
  4957  0DA9  3EFF               	skipz
  4958  0DAA  1D03               	goto	u1665
  4959  0DAB  2DA6               	line	27
  4960                           	
  4961                           l1970:	
  4962  0DAC                     	movlw	01h
  4963  0DAC  3001               	subwf	(___lwdiv@counter)^080h,f
  4964  0DAD  02A7               	btfss	status,2
  4965  0DAE  1D03               	goto	u1671
  4966  0DAF  2DB1               	goto	u1670
  4967  0DB0  2DB2               u1671:
  4968  0DB1                     	goto	l1962
  4969  0DB1  2D8C               u1670:
  4970  0DB2                     	goto	l1972
  4971  0DB2  2DB4               	
  4972                           l728:	
  4973  0DB3                     	goto	l1972
  4974  0DB3  2DB4               	line	28
  4975                           	
  4976                           l722:	
  4977  0DB4                     	line	29
  4978                           	
  4979                           l1972:	
  4980  0DB4                     	movf	(___lwdiv@quotient+1)^080h,w
  4981  0DB4  0826               	movwf	(?___lwdiv+1)^080h
  4982  0DB5  00A1               	movf	(___lwdiv@quotient)^080h,w
  4983  0DB6  0825               	movwf	(?___lwdiv)^080h
  4984  0DB7  00A0               	goto	l729
  4985  0DB8  2DB9               	
  4986                           l1974:	
  4987  0DB9                     	line	30
  4988                           	
  4989                           l729:	
  4990  0DB9                     	return
  4991  0DB9  0008               	opt stack 0
  4992                           GLOBAL	__end_of___lwdiv
  4993                           	__end_of___lwdiv:
  4994  0DBA                     	signat	___lwdiv,8314
  4995                           	global	_display_write_start
  4996                           
  4997 ;; *************** function _display_write_start *****************
  4998 ;; Defined at:
  4999 ;;		line 170 in file "Display.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    4
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_update_input
  5024 ;;		_update_volume
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5028                           	file	"Display.c"
  5029                           	line	170
  5030                           global __ptext12
  5031                           __ptext12:	;psect for function _display_write_start
  5032  0AEB                     psect	text12
  5033                           	file	"Display.c"
  5034                           	line	170
  5035                           	global	__size_of_display_write_start
  5036                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  5037  000F                     	
  5038                           _display_write_start:	
  5039  0AEB                     ;incstack = 0
  5040                           	opt	stack 2
  5041                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  5042                           	line	172
  5043                           	
  5044                           l2420:	
  5045  0AEB                     ;Display.c: 172:     if (_selectedDisplay == 0) {
  5046                           	bsf	status, 5	;RP0=1, select bank1
  5047  0AEB  1683               	bcf	status, 6	;RP1=0, select bank1
  5048  0AEC  1303               	movf	((__selectedDisplay)^080h),w
  5049  0AED  084D               	btfss	status,2
  5050  0AEE  1D03               	goto	u2571
  5051  0AEF  2AF1               	goto	u2570
  5052  0AF0  2AF2               u2571:
  5053  0AF1                     	goto	l164
  5054  0AF1  2AF6               u2570:
  5055  0AF2                     	line	173
  5056                           	
  5057                           l2422:	
  5058  0AF2                     ;Display.c: 173:         PORTCbits.RC4 = 0;
  5059                           	bcf	status, 5	;RP0=0, select bank0
  5060  0AF2  1283               	bcf	status, 6	;RP1=0, select bank0
  5061  0AF3  1303               	bcf	(7),4	;volatile
  5062  0AF4  1207               	line	174
  5063                           ;Display.c: 174:         return;
  5064                           	goto	l165
  5065  0AF5  2AF9               	line	175
  5066                           ;Display.c: 175:     }
  5067                           	
  5068                           l164:	
  5069  0AF6                     	line	177
  5070                           ;Display.c: 177:     PORTDbits.RD4 = 0;
  5071                           	bcf	status, 5	;RP0=0, select bank0
  5072  0AF6  1283               	bcf	status, 6	;RP1=0, select bank0
  5073  0AF7  1303               	bcf	(8),4	;volatile
  5074  0AF8  1208               	line	178
  5075                           	
  5076                           l165:	
  5077  0AF9                     	return
  5078  0AF9  0008               	opt stack 0
  5079                           GLOBAL	__end_of_display_write_start
  5080                           	__end_of_display_write_start:
  5081  0AFA                     	signat	_display_write_start,89
  5082                           	global	_display_write_end
  5083                           
  5084 ;; *************** function _display_write_end *****************
  5085 ;; Defined at:
  5086 ;;		line 181 in file "Display.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5100 ;;      Params:         0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0
  5103 ;;      Totals:         0       0       0       0       0
  5104 ;;Total ram usage:        0 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    4
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_update_input
  5111 ;;		_update_volume
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5115                           	line	181
  5116                           global __ptext13
  5117                           __ptext13:	;psect for function _display_write_end
  5118  0ADC                     psect	text13
  5119                           	file	"Display.c"
  5120                           	line	181
  5121                           	global	__size_of_display_write_end
  5122                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  5123  000F                     	
  5124                           _display_write_end:	
  5125  0ADC                     ;incstack = 0
  5126                           	opt	stack 2
  5127                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  5128                           	line	183
  5129                           	
  5130                           l2448:	
  5131  0ADC                     ;Display.c: 183:     if (_selectedDisplay == 0) {
  5132                           	bsf	status, 5	;RP0=1, select bank1
  5133  0ADC  1683               	bcf	status, 6	;RP1=0, select bank1
  5134  0ADD  1303               	movf	((__selectedDisplay)^080h),w
  5135  0ADE  084D               	btfss	status,2
  5136  0ADF  1D03               	goto	u2621
  5137  0AE0  2AE2               	goto	u2620
  5138  0AE1  2AE3               u2621:
  5139  0AE2                     	goto	l168
  5140  0AE2  2AE7               u2620:
  5141  0AE3                     	line	184
  5142                           	
  5143                           l2450:	
  5144  0AE3                     ;Display.c: 184:         PORTCbits.RC4 = 1;
  5145                           	bcf	status, 5	;RP0=0, select bank0
  5146  0AE3  1283               	bcf	status, 6	;RP1=0, select bank0
  5147  0AE4  1303               	bsf	(7),4	;volatile
  5148  0AE5  1607               	line	185
  5149                           ;Display.c: 185:         return;
  5150                           	goto	l169
  5151  0AE6  2AEA               	line	186
  5152                           ;Display.c: 186:     }
  5153                           	
  5154                           l168:	
  5155  0AE7                     	line	188
  5156                           ;Display.c: 188:     PORTDbits.RD4 = 1;
  5157                           	bcf	status, 5	;RP0=0, select bank0
  5158  0AE7  1283               	bcf	status, 6	;RP1=0, select bank0
  5159  0AE8  1303               	bsf	(8),4	;volatile
  5160  0AE9  1608               	line	189
  5161                           	
  5162                           l169:	
  5163  0AEA                     	return
  5164  0AEA  0008               	opt stack 0
  5165                           GLOBAL	__end_of_display_write_end
  5166                           	__end_of_display_write_end:
  5167  0AEB                     	signat	_display_write_end,89
  5168                           	global	_config
  5169                           
  5170 ;; *************** function _config *****************
  5171 ;; Defined at:
  5172 ;;		line 3 in file "Config.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, pclath, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5186 ;;      Params:         0       0       0       0       0
  5187 ;;      Locals:         0       0       0       0       0
  5188 ;;      Temps:          0       0       3       0       0
  5189 ;;      Totals:         0       0       3       0       0
  5190 ;;Total ram usage:        3 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    6
  5193 ;; This function calls:
  5194 ;;		_display_init
  5195 ;;		_init_adc
  5196 ;; This function is called by:
  5197 ;;		_main
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5201                           	file	"Config.c"
  5202                           	line	3
  5203                           global __ptext14
  5204                           __ptext14:	;psect for function _config
  5205  0F27                     psect	text14
  5206                           	file	"Config.c"
  5207                           	line	3
  5208                           	global	__size_of_config
  5209                           	__size_of_config	equ	__end_of_config-_config
  5210  0069                     	
  5211                           _config:	
  5212  0F27                     ;incstack = 0
  5213                           	opt	stack 1
  5214                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5215                           	line	5
  5216                           	
  5217                           l2558:	
  5218  0F27                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  5219                           	bsf	status, 5	;RP0=1, select bank1
  5220  0F27  1683               	bcf	status, 6	;RP1=0, select bank1
  5221  0F28  1303               	movf	(143)^080h,w	;volatile
  5222  0F29  080F               	andlw	not (((1<<3)-1)<<4)
  5223  0F2A  398F               	iorlw	(06h & ((1<<3)-1))<<4
  5224  0F2B  3860               	movwf	(143)^080h	;volatile
  5225  0F2C  008F               	line	6
  5226                           	
  5227                           l2560:	
  5228  0F2D                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  5229                           	bcf	(143)^080h,3	;volatile
  5230  0F2D  118F               	line	13
  5231                           	
  5232                           l2562:	
  5233  0F2E                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  5234                           	bcf	(133)^080h,0	;volatile
  5235  0F2E  1005               	line	14
  5236                           	
  5237                           l2564:	
  5238  0F2F                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  5239                           	bcf	(133)^080h,1	;volatile
  5240  0F2F  1085               	line	15
  5241                           	
  5242                           l2566:	
  5243  0F30                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  5244                           	bcf	(133)^080h,2	;volatile
  5245  0F30  1105               	line	16
  5246                           	
  5247                           l2568:	
  5248  0F31                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  5249                           	bcf	(133)^080h,3	;volatile
  5250  0F31  1185               	line	18
  5251                           	
  5252                           l2570:	
  5253  0F32                     ;Config.c: 18:     PORTA = 0x0F;
  5254                           	movlw	low(0Fh)
  5255  0F32  300F               	bcf	status, 5	;RP0=0, select bank0
  5256  0F33  1283               	bcf	status, 6	;RP1=0, select bank0
  5257  0F34  1303               	movwf	(5)	;volatile
  5258  0F35  0085               	line	25
  5259                           	
  5260                           l2572:	
  5261  0F36                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  5262                           	bsf	status, 5	;RP0=1, select bank1
  5263  0F36  1683               	bcf	status, 6	;RP1=0, select bank1
  5264  0F37  1303               	bsf	(134)^080h,4	;volatile
  5265  0F38  1606               	line	26
  5266                           	
  5267                           l2574:	
  5268  0F39                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  5269                           	bsf	(134)^080h,5	;volatile
  5270  0F39  1686               	line	28
  5271                           	
  5272                           l2576:	
  5273  0F3A                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  5274                           	bsf	status, 5	;RP0=1, select bank3
  5275  0F3A  1683               	bsf	status, 6	;RP1=1, select bank3
  5276  0F3B  1703               	bcf	(393)^0180h,3	;volatile
  5277  0F3C  1189               	line	29
  5278                           	
  5279                           l2578:	
  5280  0F3D                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  5281                           	bcf	(393)^0180h,5	;volatile
  5282  0F3D  1289               	line	35
  5283                           	
  5284                           l2580:	
  5285  0F3E                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  5286                           	bsf	status, 5	;RP0=1, select bank1
  5287  0F3E  1683               	bcf	status, 6	;RP1=0, select bank1
  5288  0F3F  1303               	bsf	(137)^080h,2	;volatile
  5289  0F40  1509               	line	36
  5290                           	
  5291                           l2582:	
  5292  0F41                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  5293                           	bsf	status, 5	;RP0=1, select bank3
  5294  0F41  1683               	bsf	status, 6	;RP1=1, select bank3
  5295  0F42  1703               	bsf	(392)^0180h,7	;volatile
  5296  0F43  1788               	line	41
  5297                           	
  5298                           l2584:	
  5299  0F44                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  5300                           	bsf	status, 5	;RP0=1, select bank1
  5301  0F44  1683               	bcf	status, 6	;RP1=0, select bank1
  5302  0F45  1303               	bsf	(134)^080h,0	;volatile
  5303  0F46  1406               	line	42
  5304                           	
  5305                           l2586:	
  5306  0F47                     ;Config.c: 42:     ANSELHbits.ANS12 = 0;
  5307                           	bsf	status, 5	;RP0=1, select bank3
  5308  0F47  1683               	bsf	status, 6	;RP1=1, select bank3
  5309  0F48  1703               	bcf	(393)^0180h,4	;volatile
  5310  0F49  1209               	line	48
  5311                           	
  5312                           l2588:	
  5313  0F4A                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  5314                           	bsf	status, 5	;RP0=1, select bank1
  5315  0F4A  1683               	bcf	status, 6	;RP1=0, select bank1
  5316  0F4B  1303               	bcf	(135)^080h,0	;volatile
  5317  0F4C  1007               	line	49
  5318                           	
  5319                           l2590:	
  5320  0F4D                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  5321                           	bcf	(135)^080h,1	;volatile
  5322  0F4D  1087               	line	51
  5323                           	
  5324                           l2592:	
  5325  0F4E                     ;Config.c: 51:     PORTC = 0x00;
  5326                           	bcf	status, 5	;RP0=0, select bank0
  5327  0F4E  1283               	bcf	status, 6	;RP1=0, select bank0
  5328  0F4F  1303               	clrf	(7)	;volatile
  5329  0F50  0187               	line	57
  5330                           	
  5331                           l2594:	
  5332  0F51                     ;Config.c: 57:     display_init();
  5333                           	fcall	_display_init
  5334  0F51  120A  158A  25BA  120A  158A  	line	60
  5335                           	
  5336                           l2596:	
  5337  0F56                     ;Config.c: 60:     init_adc();
  5338                           	fcall	_init_adc
  5339  0F56  120A  158A  230A  120A  158A  	line	67
  5340                           	
  5341                           l2598:	
  5342  0F5B                     ;Config.c: 67:     IOCBbits.IOCB0 = 1;
  5343                           	bsf	status, 5	;RP0=1, select bank1
  5344  0F5B  1683               	bcf	status, 6	;RP1=0, select bank1
  5345  0F5C  1303               	bsf	(150)^080h,0	;volatile
  5346  0F5D  1416               	line	68
  5347                           	
  5348                           l2600:	
  5349  0F5E                     ;Config.c: 68:     IOCBbits.IOCB4 = 1;
  5350                           	bsf	(150)^080h,4	;volatile
  5351  0F5E  1616               	line	69
  5352                           	
  5353                           l2602:	
  5354  0F5F                     ;Config.c: 69:     IOCBbits.IOCB5 = 1;
  5355                           	bsf	(150)^080h,5	;volatile
  5356  0F5F  1696               	line	71
  5357                           	
  5358                           l2604:	
  5359  0F60                     ;Config.c: 71:     INTCONbits.PEIE = 1;
  5360                           	bsf	(11),6	;volatile
  5361  0F60  170B               	line	72
  5362                           	
  5363                           l2606:	
  5364  0F61                     ;Config.c: 72:     INTCONbits.RBIE = 1;
  5365                           	bsf	(11),3	;volatile
  5366  0F61  158B               	line	74
  5367                           	
  5368                           l2608:	
  5369  0F62                     ;Config.c: 74:     INTCONbits.GIE = 1;
  5370                           	bsf	(11),7	;volatile
  5371  0F62  178B               	line	83
  5372                           	
  5373                           l2610:	
  5374  0F63                     ;Config.c: 83:     _inputUpdateRequired = 1;
  5375                           	bcf	status, 5	;RP0=0, select bank0
  5376  0F63  1283               	bcf	status, 6	;RP1=0, select bank0
  5377  0F64  1303               	clrf	(__inputUpdateRequired)
  5378  0F65  01E6               	incf	(__inputUpdateRequired),f
  5379  0F66  0AE6               	line	84
  5380                           	
  5381                           l2612:	
  5382  0F67                     ;Config.c: 84:     _selectedInput = 0;
  5383                           	bsf	status, 5	;RP0=1, select bank1
  5384  0F67  1683               	bcf	status, 6	;RP1=0, select bank1
  5385  0F68  1303               	clrf	(__selectedInput)^080h
  5386  0F69  01CB               	clrf	(__selectedInput+1)^080h
  5387  0F6A  01CC               	line	85
  5388                           	
  5389                           l2614:	
  5390  0F6B                     ;Config.c: 85:     _lastA = PORTBbits.RB4;
  5391                           	bcf	status, 5	;RP0=0, select bank0
  5392  0F6B  1283               	bcf	status, 6	;RP1=0, select bank0
  5393  0F6C  1303               	swapf	(6),w	;volatile
  5394  0F6D  0E06               	andlw	(1<<1)-1
  5395  0F6E  3901               	bsf	status, 5	;RP0=1, select bank1
  5396  0F6F  1683               	bcf	status, 6	;RP1=0, select bank1
  5397  0F70  1303               	movwf	(??_config+0)^080h+0
  5398  0F71  00A1               	clrf	(??_config+0)^080h+0+1
  5399  0F72  01A2               	movf	0+(??_config+0)^080h+0,w
  5400  0F73  0821               	bcf	status, 5	;RP0=0, select bank0
  5401  0F74  1283               	bcf	status, 6	;RP1=0, select bank0
  5402  0F75  1303               	movwf	(__lastA)
  5403  0F76  00E4               	bsf	status, 5	;RP0=1, select bank1
  5404  0F77  1683               	bcf	status, 6	;RP1=0, select bank1
  5405  0F78  1303               	movf	1+(??_config+0)^080h+0,w
  5406  0F79  0822               	bcf	status, 5	;RP0=0, select bank0
  5407  0F7A  1283               	bcf	status, 6	;RP1=0, select bank0
  5408  0F7B  1303               	movwf	(__lastA+1)
  5409  0F7C  00E5               	line	86
  5410                           	
  5411                           l2616:	
  5412  0F7D                     ;Config.c: 86:     _lastB = PORTBbits.RB5;
  5413                           	swapf	(6),w	;volatile
  5414  0F7D  0E06               	bsf	status, 5	;RP0=1, select bank1
  5415  0F7E  1683               	bcf	status, 6	;RP1=0, select bank1
  5416  0F7F  1303               	movwf	(??_config+0)^080h+0
  5417  0F80  00A1               	rrf	(??_config+0)^080h+0,w
  5418  0F81  0C21               	andlw	(1<<1)-1
  5419  0F82  3901               	movwf	(??_config+1)^080h+0
  5420  0F83  00A2               	clrf	(??_config+1)^080h+0+1
  5421  0F84  01A3               	movf	0+(??_config+1)^080h+0,w
  5422  0F85  0822               	bcf	status, 5	;RP0=0, select bank0
  5423  0F86  1283               	bcf	status, 6	;RP1=0, select bank0
  5424  0F87  1303               	movwf	(__lastB)
  5425  0F88  00E2               	bsf	status, 5	;RP0=1, select bank1
  5426  0F89  1683               	bcf	status, 6	;RP1=0, select bank1
  5427  0F8A  1303               	movf	1+(??_config+1)^080h+0,w
  5428  0F8B  0823               	bcf	status, 5	;RP0=0, select bank0
  5429  0F8C  1283               	bcf	status, 6	;RP1=0, select bank0
  5430  0F8D  1303               	movwf	(__lastB+1)
  5431  0F8E  00E3               	line	87
  5432                           	
  5433                           l266:	
  5434  0F8F                     	return
  5435  0F8F  0008               	opt stack 0
  5436                           GLOBAL	__end_of_config
  5437                           	__end_of_config:
  5438  0F90                     	signat	_config,89
  5439                           	global	_init_adc
  5440                           
  5441 ;; *************** function _init_adc *****************
  5442 ;; Defined at:
  5443 ;;		line 5 in file "Volume.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;		None
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;		None
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5457 ;;      Params:         0       0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0
  5460 ;;      Totals:         0       0       0       0       0
  5461 ;;Total ram usage:        0 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    4
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_config
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5471                           	file	"Volume.c"
  5472                           	line	5
  5473                           global __ptext15
  5474                           __ptext15:	;psect for function _init_adc
  5475  0B0A                     psect	text15
  5476                           	file	"Volume.c"
  5477                           	line	5
  5478                           	global	__size_of_init_adc
  5479                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5480  0017                     	
  5481                           _init_adc:	
  5482  0B0A                     ;incstack = 0
  5483                           	opt	stack 2
  5484                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  5485                           	line	7
  5486                           	
  5487                           l2452:	
  5488  0B0A                     ;Volume.c: 7:     ADCON0bits.CHS = 0b0111;
  5489                           	bcf	status, 5	;RP0=0, select bank0
  5490  0B0A  1283               	bcf	status, 6	;RP1=0, select bank0
  5491  0B0B  1303               	movf	(31),w	;volatile
  5492  0B0C  081F               	andlw	not (((1<<4)-1)<<2)
  5493  0B0D  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  5494  0B0E  381C               	movwf	(31)	;volatile
  5495  0B0F  009F               	line	8
  5496                           ;Volume.c: 8:     ADCON0bits.ADCS = 0b001;
  5497                           	movf	(31),w	;volatile
  5498  0B10  081F               	andlw	not (((1<<2)-1)<<6)
  5499  0B11  393F               	iorlw	(01h & ((1<<2)-1))<<6
  5500  0B12  3840               	movwf	(31)	;volatile
  5501  0B13  009F               	line	9
  5502                           	
  5503                           l2454:	
  5504  0B14                     ;Volume.c: 9:     ADCON1bits.ADFM = 1;
  5505                           	bsf	status, 5	;RP0=1, select bank1
  5506  0B14  1683               	bcf	status, 6	;RP1=0, select bank1
  5507  0B15  1303               	bsf	(159)^080h,7	;volatile
  5508  0B16  179F               	line	11
  5509                           	
  5510                           l2456:	
  5511  0B17                     ;Volume.c: 11:     PIR1bits.ADIF = 0;
  5512                           	bcf	status, 5	;RP0=0, select bank0
  5513  0B17  1283               	bcf	status, 6	;RP1=0, select bank0
  5514  0B18  1303               	bcf	(12),6	;volatile
  5515  0B19  130C               	line	12
  5516                           	
  5517                           l2458:	
  5518  0B1A                     ;Volume.c: 12:     PIE1bits.ADIE = 1;
  5519                           	bsf	status, 5	;RP0=1, select bank1
  5520  0B1A  1683               	bcf	status, 6	;RP1=0, select bank1
  5521  0B1B  1303               	bsf	(140)^080h,6	;volatile
  5522  0B1C  170C               	line	14
  5523                           	
  5524                           l2460:	
  5525  0B1D                     ;Volume.c: 14:     ADCON0bits.ADON = 1;
  5526                           	bcf	status, 5	;RP0=0, select bank0
  5527  0B1D  1283               	bcf	status, 6	;RP1=0, select bank0
  5528  0B1E  1303               	bsf	(31),0	;volatile
  5529  0B1F  141F               	line	15
  5530                           	
  5531                           l295:	
  5532  0B20                     	return
  5533  0B20  0008               	opt stack 0
  5534                           GLOBAL	__end_of_init_adc
  5535                           	__end_of_init_adc:
  5536  0B21                     	signat	_init_adc,89
  5537                           	global	_display_init
  5538                           
  5539 ;; *************** function _display_init *****************
  5540 ;; Defined at:
  5541 ;;		line 3 in file "Display.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5555 ;;      Params:         0       0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0
  5558 ;;      Totals:         0       0       0       0       0
  5559 ;;Total ram usage:        0 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    5
  5562 ;; This function calls:
  5563 ;;		_spiWrite
  5564 ;; This function is called by:
  5565 ;;		_config
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5569                           	file	"Display.c"
  5570                           	line	3
  5571                           global __ptext16
  5572                           __ptext16:	;psect for function _display_init
  5573  0DBA                     psect	text16
  5574                           	file	"Display.c"
  5575                           	line	3
  5576                           	global	__size_of_display_init
  5577                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  5578  004E                     	
  5579                           _display_init:	
  5580  0DBA                     ;incstack = 0
  5581                           	opt	stack 1
  5582                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  5583                           	line	7
  5584                           	
  5585                           l2356:	
  5586  0DBA                     ;Display.c: 7:     SSPCON = 0b00100000;
  5587                           	movlw	low(020h)
  5588  0DBA  3020               	bcf	status, 5	;RP0=0, select bank0
  5589  0DBB  1283               	bcf	status, 6	;RP1=0, select bank0
  5590  0DBC  1303               	movwf	(20)	;volatile
  5591  0DBD  0094               	line	8
  5592                           ;Display.c: 8:     SSPSTAT = 0b01000000;
  5593                           	movlw	low(040h)
  5594  0DBE  3040               	bsf	status, 5	;RP0=1, select bank1
  5595  0DBF  1683               	bcf	status, 6	;RP1=0, select bank1
  5596  0DC0  1303               	movwf	(148)^080h	;volatile
  5597  0DC1  0094               	line	11
  5598                           	
  5599                           l2358:	
  5600  0DC2                     ;Display.c: 11:     TRISD = 0x00;
  5601                           	clrf	(136)^080h	;volatile
  5602  0DC2  0188               	line	12
  5603                           	
  5604                           l2360:	
  5605  0DC3                     ;Display.c: 12:     TRISC = 0x00;
  5606                           	clrf	(135)^080h	;volatile
  5607  0DC3  0187               	line	15
  5608                           	
  5609                           l2362:	
  5610  0DC4                     ;Display.c: 15:     PORTDbits.RD2 = 1;
  5611                           	bcf	status, 5	;RP0=0, select bank0
  5612  0DC4  1283               	bcf	status, 6	;RP1=0, select bank0
  5613  0DC5  1303               	bsf	(8),2	;volatile
  5614  0DC6  1508               	line	16
  5615                           	
  5616                           l2364:	
  5617  0DC7                     ;Display.c: 16:     PORTDbits.RD6 = 0;
  5618                           	bcf	(8),6	;volatile
  5619  0DC7  1308               	line	17
  5620                           	
  5621                           l2366:	
  5622  0DC8                     ;Display.c: 17:     PORTDbits.RD4 = 1;
  5623                           	bsf	(8),4	;volatile
  5624  0DC8  1608               	line	18
  5625                           	
  5626                           l2368:	
  5627  0DC9                     ;Display.c: 18:     PORTCbits.RC3 = 0;
  5628                           	bcf	(7),3	;volatile
  5629  0DC9  1187               	line	21
  5630                           	
  5631                           l2370:	
  5632  0DCA                     ;Display.c: 21:     PORTDbits.RD7 = 1;
  5633                           	bsf	(8),7	;volatile
  5634  0DCA  1788               	line	22
  5635                           	
  5636                           l2372:	
  5637  0DCB                     ;Display.c: 22:     PORTDbits.RD4 = 0;
  5638                           	bcf	(8),4	;volatile
  5639  0DCB  1208               	line	23
  5640                           	
  5641                           l2374:	
  5642  0DCC                     ;Display.c: 23:     spiWrite(0b01001111);
  5643                           	movlw	low(04Fh)
  5644  0DCC  304F               	fcall	_spiWrite
  5645  0DCD  120A  158A  22FA  120A  158A  	line	24
  5646                           	
  5647                           l2376:	
  5648  0DD2                     ;Display.c: 24:     PORTDbits.RD4 = 1;
  5649                           	bcf	status, 5	;RP0=0, select bank0
  5650  0DD2  1283               	bcf	status, 6	;RP1=0, select bank0
  5651  0DD3  1303               	bsf	(8),4	;volatile
  5652  0DD4  1608               	line	27
  5653                           	
  5654                           l2378:	
  5655  0DD5                     ;Display.c: 27:     PORTDbits.RD7 = 1;
  5656                           	bsf	(8),7	;volatile
  5657  0DD5  1788               	line	28
  5658                           	
  5659                           l2380:	
  5660  0DD6                     ;Display.c: 28:     PORTDbits.RD4 = 0;
  5661                           	bcf	(8),4	;volatile
  5662  0DD6  1208               	line	29
  5663                           	
  5664                           l2382:	
  5665  0DD7                     ;Display.c: 29:     spiWrite(0b10000001);
  5666                           	movlw	low(081h)
  5667  0DD7  3081               	fcall	_spiWrite
  5668  0DD8  120A  158A  22FA  120A  158A  	line	30
  5669                           	
  5670                           l2384:	
  5671  0DDD                     ;Display.c: 30:     PORTDbits.RD4 = 1;
  5672                           	bcf	status, 5	;RP0=0, select bank0
  5673  0DDD  1283               	bcf	status, 6	;RP1=0, select bank0
  5674  0DDE  1303               	bsf	(8),4	;volatile
  5675  0DDF  1608               	line	34
  5676                           	
  5677                           l2386:	
  5678  0DE0                     ;Display.c: 34:     PORTDbits.RD7 = 0;
  5679                           	bcf	(8),7	;volatile
  5680  0DE0  1388               	line	38
  5681                           	
  5682                           l2388:	
  5683  0DE1                     ;Display.c: 38:     PORTCbits.RC2 = 1;
  5684                           	bsf	(7),2	;volatile
  5685  0DE1  1507               	line	39
  5686                           	
  5687                           l2390:	
  5688  0DE2                     ;Display.c: 39:     PORTCbits.RC6 = 0;
  5689                           	bcf	(7),6	;volatile
  5690  0DE2  1307               	line	40
  5691                           	
  5692                           l2392:	
  5693  0DE3                     ;Display.c: 40:     PORTCbits.RC4 = 1;
  5694                           	bsf	(7),4	;volatile
  5695  0DE3  1607               	line	41
  5696                           	
  5697                           l2394:	
  5698  0DE4                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  5699                           	bcf	(7),3	;volatile
  5700  0DE4  1187               	line	43
  5701                           	
  5702                           l2396:	
  5703  0DE5                     ;Display.c: 43:     PORTCbits.RC7 = 1;
  5704                           	bsf	(7),7	;volatile
  5705  0DE5  1787               	line	44
  5706                           	
  5707                           l2398:	
  5708  0DE6                     ;Display.c: 44:     PORTCbits.RC4 = 0;
  5709                           	bcf	(7),4	;volatile
  5710  0DE6  1207               	line	45
  5711                           	
  5712                           l2400:	
  5713  0DE7                     ;Display.c: 45:     spiWrite(0b01001111);
  5714                           	movlw	low(04Fh)
  5715  0DE7  304F               	fcall	_spiWrite
  5716  0DE8  120A  158A  22FA  120A  158A  	line	47
  5717                           	
  5718                           l2402:	
  5719  0DED                     ;Display.c: 47:     PORTCbits.RC4 = 1;
  5720                           	bcf	status, 5	;RP0=0, select bank0
  5721  0DED  1283               	bcf	status, 6	;RP1=0, select bank0
  5722  0DEE  1303               	bsf	(7),4	;volatile
  5723  0DEF  1607               	line	49
  5724                           	
  5725                           l2404:	
  5726  0DF0                     ;Display.c: 49:     PORTCbits.RC7 = 1;
  5727                           	bsf	(7),7	;volatile
  5728  0DF0  1787               	line	50
  5729                           	
  5730                           l2406:	
  5731  0DF1                     ;Display.c: 50:     PORTCbits.RC4 = 0;
  5732                           	bcf	(7),4	;volatile
  5733  0DF1  1207               	line	52
  5734                           	
  5735                           l2408:	
  5736  0DF2                     ;Display.c: 52:     spiWrite(0b10000001);
  5737                           	movlw	low(081h)
  5738  0DF2  3081               	fcall	_spiWrite
  5739  0DF3  120A  158A  22FA  120A  158A  	line	53
  5740                           	
  5741                           l2410:	
  5742  0DF8                     ;Display.c: 53:     PORTCbits.RC4 = 1;
  5743                           	bcf	status, 5	;RP0=0, select bank0
  5744  0DF8  1283               	bcf	status, 6	;RP1=0, select bank0
  5745  0DF9  1303               	bsf	(7),4	;volatile
  5746  0DFA  1607               	line	56
  5747                           	
  5748                           l2412:	
  5749  0DFB                     ;Display.c: 56:     PORTCbits.RC7 = 0;
  5750                           	bcf	(7),7	;volatile
  5751  0DFB  1387               	line	59
  5752                           	
  5753                           l2414:	
  5754  0DFC                     ;Display.c: 59:     _selectedDisplay = 0;
  5755                           	bsf	status, 5	;RP0=1, select bank1
  5756  0DFC  1683               	bcf	status, 6	;RP1=0, select bank1
  5757  0DFD  1303               	clrf	(__selectedDisplay)^080h
  5758  0DFE  01CD               	line	60
  5759                           	
  5760                           l2416:	
  5761  0DFF                     ;Display.c: 60:     lastVolume = 99;
  5762                           	movlw	063h
  5763  0DFF  3063               	movwf	(_lastVolume)^080h
  5764  0E00  00C7               	movlw	0
  5765  0E01  3000               	movwf	((_lastVolume)^080h)+1
  5766  0E02  00C8               	line	61
  5767                           	
  5768                           l2418:	
  5769  0E03                     ;Display.c: 61:     lastInput = 99;
  5770                           	movlw	063h
  5771  0E03  3063               	movwf	(_lastInput)^080h
  5772  0E04  00C5               	movlw	0
  5773  0E05  3000               	movwf	((_lastInput)^080h)+1
  5774  0E06  00C6               	line	63
  5775                           	
  5776                           l120:	
  5777  0E07                     	return
  5778  0E07  0008               	opt stack 0
  5779                           GLOBAL	__end_of_display_init
  5780                           	__end_of_display_init:
  5781  0E08                     	signat	_display_init,89
  5782                           	global	_spiWrite
  5783                           
  5784 ;; *************** function _spiWrite *****************
  5785 ;; Defined at:
  5786 ;;		line 192 in file "Display.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  data            1    wreg     unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  data            1    0[BANK1 ] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5800 ;;      Params:         0       0       0       0       0
  5801 ;;      Locals:         0       0       1       0       0
  5802 ;;      Temps:          0       0       0       0       0
  5803 ;;      Totals:         0       0       1       0       0
  5804 ;;Total ram usage:        1 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    4
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_display_init
  5811 ;;		_write_space
  5812 ;;		_write_font
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5816                           	line	192
  5817                           global __ptext17
  5818                           __ptext17:	;psect for function _spiWrite
  5819  0AFA                     psect	text17
  5820                           	file	"Display.c"
  5821                           	line	192
  5822                           	global	__size_of_spiWrite
  5823                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  5824  0010                     	
  5825                           _spiWrite:	
  5826  0AFA                     ;incstack = 0
  5827 ;; hardware stack exceeded
  5828                           	opt	stack 0
  5829                           ; Regs used in _spiWrite: [wreg]
  5830                           ;spiWrite@data stored from wreg
  5831                           	bsf	status, 5	;RP0=1, select bank1
  5832  0AFA  1683               	bcf	status, 6	;RP1=0, select bank1
  5833  0AFB  1303               	movwf	(spiWrite@data)^080h
  5834  0AFC  00A0               	line	194
  5835                           	
  5836                           l1898:	
  5837  0AFD                     ;Display.c: 192: void spiWrite(char data);Display.c: 193: {;Display.c: 194:     SSPBUF =
                                  data;
  5838                           	movf	(spiWrite@data)^080h,w
  5839  0AFD  0820               	bcf	status, 5	;RP0=0, select bank0
  5840  0AFE  1283               	bcf	status, 6	;RP1=0, select bank0
  5841  0AFF  1303               	movwf	(19)	;volatile
  5842  0B00  0093               	line	196
  5843                           ;Display.c: 196:     while(!SSPSTATbits.BF);
  5844                           	goto	l172
  5845  0B01  2B02               	
  5846                           l173:	
  5847  0B02                     	
  5848                           l172:	
  5849  0B02                     	bsf	status, 5	;RP0=1, select bank1
  5850  0B02  1683               	bcf	status, 6	;RP1=0, select bank1
  5851  0B03  1303               	btfss	(148)^080h,0	;volatile
  5852  0B04  1C14               	goto	u1481
  5853  0B05  2B07               	goto	u1480
  5854  0B06  2B08               u1481:
  5855  0B07                     	goto	l172
  5856  0B07  2B02               u1480:
  5857  0B08                     	goto	l175
  5858  0B08  2B09               	
  5859                           l174:	
  5860  0B09                     	line	197
  5861                           	
  5862                           l175:	
  5863  0B09                     	return
  5864  0B09  0008               	opt stack 0
  5865                           GLOBAL	__end_of_spiWrite
  5866                           	__end_of_spiWrite:
  5867  0B0A                     	signat	_spiWrite,4217
  5868                           	global	_activateSelectedRelay
  5869                           
  5870 ;; *************** function _activateSelectedRelay *****************
  5871 ;; Defined at:
  5872 ;;		line 3 in file "Input.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;		None
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5886 ;;      Params:         0       0       0       0       0
  5887 ;;      Locals:         0       0       0       0       0
  5888 ;;      Temps:          0       0       0       0       0
  5889 ;;      Totals:         0       0       0       0       0
  5890 ;;Total ram usage:        0 bytes
  5891 ;; Hardware stack levels used:    1
  5892 ;; Hardware stack levels required when called:    4
  5893 ;; This function calls:
  5894 ;;		Nothing
  5895 ;; This function is called by:
  5896 ;;		_main
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5900                           	file	"Input.c"
  5901                           	line	3
  5902                           global __ptext18
  5903                           __ptext18:	;psect for function _activateSelectedRelay
  5904  0BDA                     psect	text18
  5905                           	file	"Input.c"
  5906                           	line	3
  5907                           	global	__size_of_activateSelectedRelay
  5908                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  5909  0039                     	
  5910                           _activateSelectedRelay:	
  5911  0BDA                     ;incstack = 0
  5912                           	opt	stack 3
  5913                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  5914                           	line	5
  5915                           	
  5916                           l2658:	
  5917  0BDA                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  5918                           	bcf	status, 5	;RP0=0, select bank0
  5919  0BDA  1283               	bcf	status, 6	;RP1=0, select bank0
  5920  0BDB  1303               	movf	((__inputUpdateRequired)),w
  5921  0BDC  0866               	btfss	status,2
  5922  0BDD  1D03               	goto	u2751
  5923  0BDE  2BE0               	goto	u2750
  5924  0BDF  2BE1               u2751:
  5925  0BE0                     	goto	l2662
  5926  0BE0  2BE3               u2750:
  5927  0BE1                     	goto	l193
  5928  0BE1  2C12               	
  5929                           l2660:	
  5930  0BE2                     	goto	l193
  5931  0BE2  2C12               	
  5932                           l192:	
  5933  0BE3                     	line	7
  5934                           	
  5935                           l2662:	
  5936  0BE3                     ;Input.c: 7:     PORTA = 0x0F;
  5937                           	movlw	low(0Fh)
  5938  0BE3  300F               	movwf	(5)	;volatile
  5939  0BE4  0085               	line	9
  5940                           ;Input.c: 9:     switch (_selectedInput) {
  5941                           	goto	l2676
  5942  0BE5  2BFB               	line	10
  5943                           ;Input.c: 10:         case 0:
  5944                           	
  5945                           l195:	
  5946  0BE6                     	line	11
  5947                           	
  5948                           l2664:	
  5949  0BE6                     ;Input.c: 11:             PORTA = ~0x01;
  5950                           	movlw	low(0FEh)
  5951  0BE6  30FE               	bcf	status, 5	;RP0=0, select bank0
  5952  0BE7  1283               	movwf	(5)	;volatile
  5953  0BE8  0085               	line	12
  5954                           ;Input.c: 12:             break;
  5955                           	goto	l2678
  5956  0BE9  2C10               	line	13
  5957                           ;Input.c: 13:         case 1:
  5958                           	
  5959                           l197:	
  5960  0BEA                     	line	14
  5961                           	
  5962                           l2666:	
  5963  0BEA                     ;Input.c: 14:             PORTA = ~0x02;
  5964                           	movlw	low(0FDh)
  5965  0BEA  30FD               	bcf	status, 5	;RP0=0, select bank0
  5966  0BEB  1283               	movwf	(5)	;volatile
  5967  0BEC  0085               	line	15
  5968                           ;Input.c: 15:             break;
  5969                           	goto	l2678
  5970  0BED  2C10               	line	16
  5971                           ;Input.c: 16:         case 2:
  5972                           	
  5973                           l198:	
  5974  0BEE                     	line	17
  5975                           	
  5976                           l2668:	
  5977  0BEE                     ;Input.c: 17:             PORTA = ~0x04;
  5978                           	movlw	low(0FBh)
  5979  0BEE  30FB               	bcf	status, 5	;RP0=0, select bank0
  5980  0BEF  1283               	movwf	(5)	;volatile
  5981  0BF0  0085               	line	18
  5982                           ;Input.c: 18:             break;
  5983                           	goto	l2678
  5984  0BF1  2C10               	line	19
  5985                           ;Input.c: 19:         case 3:
  5986                           	
  5987                           l199:	
  5988  0BF2                     	line	20
  5989                           	
  5990                           l2670:	
  5991  0BF2                     ;Input.c: 20:             PORTA = ~0x08;
  5992                           	movlw	low(0F7h)
  5993  0BF2  30F7               	bcf	status, 5	;RP0=0, select bank0
  5994  0BF3  1283               	movwf	(5)	;volatile
  5995  0BF4  0085               	line	21
  5996                           ;Input.c: 21:             break;
  5997                           	goto	l2678
  5998  0BF5  2C10               	line	22
  5999                           ;Input.c: 22:         default:
  6000                           	
  6001                           l200:	
  6002  0BF6                     	line	23
  6003                           	
  6004                           l2672:	
  6005  0BF6                     ;Input.c: 23:             PORTA = ~0x01;
  6006                           	movlw	low(0FEh)
  6007  0BF6  30FE               	bcf	status, 5	;RP0=0, select bank0
  6008  0BF7  1283               	movwf	(5)	;volatile
  6009  0BF8  0085               	line	24
  6010                           ;Input.c: 24:             break;
  6011                           	goto	l2678
  6012  0BF9  2C10               	line	25
  6013                           	
  6014                           l2674:	
  6015  0BFA                     ;Input.c: 25:     }
  6016                           	goto	l2678
  6017  0BFA  2C10               	
  6018                           l194:	
  6019  0BFB                     	
  6020                           l2676:	
  6021  0BFB                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6022                           ; Switch size 1, requested type "space"
  6023                           ; Number of cases is 1, Range of values is 0 to 0
  6024                           ; switch strategies available:
  6025                           ; Name         Instructions Cycles
  6026                           ; simple_byte            4     3 (average)
  6027                           ; direct_byte           11     8 (fixed)
  6028                           ; jumptable            260     6 (fixed)
  6029                           ;	Chosen strategy is simple_byte
  6030                           
  6031                           	bsf	status, 5	;RP0=1, select bank1
  6032  0BFB  1683               	bcf	status, 6	;RP1=0, select bank1
  6033  0BFC  1303               	movf (__selectedInput+1)^080h,w
  6034  0BFD  084C               	opt asmopt_push
  6035                           	opt asmopt_off
  6036                           	xorlw	0^0	; case 0
  6037  0BFE  3A00               	skipnz
  6038  0BFF  1903               	goto	l2854
  6039  0C00  2C02               	goto	l2672
  6040  0C01  2BF6               	opt asmopt_pop
  6041                           	
  6042                           l2854:	
  6043  0C02                     ; Switch size 1, requested type "space"
  6044                           ; Number of cases is 4, Range of values is 0 to 3
  6045                           ; switch strategies available:
  6046                           ; Name         Instructions Cycles
  6047                           ; simple_byte           13     7 (average)
  6048                           ; direct_byte           20     8 (fixed)
  6049                           ; jumptable            260     6 (fixed)
  6050                           ;	Chosen strategy is simple_byte
  6051                           
  6052                           	movf (__selectedInput)^080h,w
  6053  0C02  084B               	opt asmopt_push
  6054                           	opt asmopt_off
  6055                           	xorlw	0^0	; case 0
  6056  0C03  3A00               	skipnz
  6057  0C04  1903               	goto	l2664
  6058  0C05  2BE6               	xorlw	1^0	; case 1
  6059  0C06  3A01               	skipnz
  6060  0C07  1903               	goto	l2666
  6061  0C08  2BEA               	xorlw	2^1	; case 2
  6062  0C09  3A03               	skipnz
  6063  0C0A  1903               	goto	l2668
  6064  0C0B  2BEE               	xorlw	3^2	; case 3
  6065  0C0C  3A01               	skipnz
  6066  0C0D  1903               	goto	l2670
  6067  0C0E  2BF2               	goto	l2672
  6068  0C0F  2BF6               	opt asmopt_pop
  6069                           
  6070                           	
  6071                           l196:	
  6072  0C10                     	line	27
  6073                           	
  6074                           l2678:	
  6075  0C10                     ;Input.c: 27:     _inputUpdateRequired = 0;
  6076                           	bcf	status, 5	;RP0=0, select bank0
  6077  0C10  1283               	clrf	(__inputUpdateRequired)
  6078  0C11  01E6               	line	28
  6079                           	
  6080                           l193:	
  6081  0C12                     	return
  6082  0C12  0008               	opt stack 0
  6083                           GLOBAL	__end_of_activateSelectedRelay
  6084                           	__end_of_activateSelectedRelay:
  6085  0C13                     	signat	_activateSelectedRelay,89
  6086                           	global	_isr
  6087                           
  6088 ;; *************** function _isr *****************
  6089 ;; Defined at:
  6090 ;;		line 46 in file "main.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         0       0       0       0       0
  6105 ;;      Locals:         0       0       0       0       0
  6106 ;;      Temps:          0       4       0       0       0
  6107 ;;      Totals:         0       4       0       0       0
  6108 ;;Total ram usage:        4 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    3
  6111 ;; This function calls:
  6112 ;;		_handle_potmeter
  6113 ;;		_handle_rotary
  6114 ;;		_start_receive
  6115 ;; This function is called by:
  6116 ;;		Interrupt level 1
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6120                           	file	"main.c"
  6121                           	line	46
  6122                           global __ptext19
  6123                           __ptext19:	;psect for function _isr
  6124  0B73                     psect	text19
  6125                           	file	"main.c"
  6126                           	line	46
  6127                           	global	__size_of_isr
  6128                           	__size_of_isr	equ	__end_of_isr-_isr
  6129  0031                     	
  6130                           _isr:	
  6131  0B73                     ;incstack = 0
  6132 ;; hardware stack exceeded
  6133                           	opt	stack 0
  6134                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6135                           psect	intentry,class=CODE,delta=2
  6136                           global __pintentry
  6137                           __pintentry:
  6138  0004                     global interrupt_function
  6139                           interrupt_function:
  6140  0004                     	global saved_w
  6141                           	saved_w	set	btemp+0
  6142  007E                     	movwf	saved_w
  6143  0004  00FE               	swapf	status,w
  6144  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  6145  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  6146  0007  1303               	movwf	(??_isr+0)
  6147  0008  00D8               	movf	fsr0,w
  6148  0009  0804               	movwf	(??_isr+1)
  6149  000A  00D9               	movf	pclath,w
  6150  000B  080A               	movwf	(??_isr+2)
  6151  000C  00DA               	movf	btemp+1,w
  6152  000D  087F               	movwf	(??_isr+3)
  6153  000E  00DB               	ljmp	_isr
  6154  000F  120A  158A  2B73   psect	text19
  6155                           	line	48
  6156                           	
  6157                           i1l2756:	
  6158  0B73                     ;main.c: 48:     if (INTCONbits.RBIF) {
  6159                           	btfss	(11),0	;volatile
  6160  0B73  1C0B               	goto	u292_21
  6161  0B74  2B76               	goto	u292_20
  6162  0B75  2B77               u292_21:
  6163  0B76                     	goto	i1l2766
  6164  0B76  2B8A               u292_20:
  6165  0B77                     	line	50
  6166                           	
  6167                           i1l2758:	
  6168  0B77                     ;main.c: 50:         handle_rotary();
  6169                           	fcall	_handle_rotary
  6170  0B77  120A  118A  20C1  120A  158A  	line	52
  6171                           	
  6172                           i1l2760:	
  6173  0B7C                     ;main.c: 52:         if (PORTBbits.RB0 == 0) {
  6174                           	bcf	status, 5	;RP0=0, select bank0
  6175  0B7C  1283               	bcf	status, 6	;RP1=0, select bank0
  6176  0B7D  1303               	btfsc	(6),0	;volatile
  6177  0B7E  1806               	goto	u293_21
  6178  0B7F  2B81               	goto	u293_20
  6179  0B80  2B82               u293_21:
  6180  0B81                     	goto	i1l2764
  6181  0B81  2B88               u293_20:
  6182  0B82                     	line	53
  6183                           	
  6184                           i1l2762:	
  6185  0B82                     ;main.c: 53:             start_receive();
  6186                           	fcall	_start_receive
  6187  0B82  120A  158A  2790  120A  158A  	goto	i1l2764
  6188  0B87  2B88               	line	54
  6189                           ;main.c: 54:         }
  6190                           	
  6191                           i1l63:	
  6192  0B88                     	line	56
  6193                           	
  6194                           i1l2764:	
  6195  0B88                     ;main.c: 56:         INTCONbits.RBIF = 0;
  6196                           	bcf	(11),0	;volatile
  6197  0B88  100B               	goto	i1l2766
  6198  0B89  2B8A               	line	57
  6199                           ;main.c: 57:     }
  6200                           	
  6201                           i1l62:	
  6202  0B8A                     	line	59
  6203                           	
  6204                           i1l2766:	
  6205  0B8A                     ;main.c: 59:     if (PIR1bits.ADIF) {
  6206                           	bcf	status, 5	;RP0=0, select bank0
  6207  0B8A  1283               	bcf	status, 6	;RP1=0, select bank0
  6208  0B8B  1303               	btfss	(12),6	;volatile
  6209  0B8C  1F0C               	goto	u294_21
  6210  0B8D  2B8F               	goto	u294_20
  6211  0B8E  2B90               u294_21:
  6212  0B8F                     	goto	i1l65
  6213  0B8F  2B99               u294_20:
  6214  0B90                     	line	61
  6215                           	
  6216                           i1l2768:	
  6217  0B90                     ;main.c: 61:         handle_potmeter();
  6218                           	fcall	_handle_potmeter
  6219  0B90  120A  118A  2142  120A  158A  	line	63
  6220                           	
  6221                           i1l2770:	
  6222  0B95                     ;main.c: 63:         PIR1bits.ADIF = 0;
  6223                           	bcf	status, 5	;RP0=0, select bank0
  6224  0B95  1283               	bcf	status, 6	;RP1=0, select bank0
  6225  0B96  1303               	bcf	(12),6	;volatile
  6226  0B97  130C               	goto	i1l65
  6227  0B98  2B99               	line	64
  6228                           ;main.c: 64:     }
  6229                           	
  6230                           i1l64:	
  6231  0B99                     	line	67
  6232                           	
  6233                           i1l65:	
  6234  0B99                     	movf	(??_isr+3),w
  6235  0B99  085B               	movwf	btemp+1
  6236  0B9A  00FF               	movf	(??_isr+2),w
  6237  0B9B  085A               	movwf	pclath
  6238  0B9C  008A               	movf	(??_isr+1),w
  6239  0B9D  0859               	movwf	fsr0
  6240  0B9E  0084               	swapf	(??_isr+0)^00h,w
  6241  0B9F  0E58               	movwf	status
  6242  0BA0  0083               	swapf	saved_w,f
  6243  0BA1  0EFE               	swapf	saved_w,w
  6244  0BA2  0E7E               	retfie
  6245  0BA3  0009               	opt stack 0
  6246                           GLOBAL	__end_of_isr
  6247                           	__end_of_isr:
  6248  0BA4                     	signat	_isr,89
  6249                           	global	_start_receive
  6250                           
  6251 ;; *************** function _start_receive *****************
  6252 ;; Defined at:
  6253 ;;		line 9 in file "Remote.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  i               2    0[BANK0 ] int 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6267 ;;      Params:         0       0       0       0       0
  6268 ;;      Locals:         0       2       0       0       0
  6269 ;;      Temps:          8       0       0       0       0
  6270 ;;      Totals:         8       2       0       0       0
  6271 ;;Total ram usage:       10 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    1
  6274 ;; This function calls:
  6275 ;;		_handle_remote
  6276 ;; This function is called by:
  6277 ;;		_isr
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6281                           	file	"Remote.c"
  6282                           	line	9
  6283                           global __ptext20
  6284                           __ptext20:	;psect for function _start_receive
  6285  0F90                     psect	text20
  6286                           	file	"Remote.c"
  6287                           	line	9
  6288                           	global	__size_of_start_receive
  6289                           	__size_of_start_receive	equ	__end_of_start_receive-_start_receive
  6290  0070                     	
  6291                           _start_receive:	
  6292  0F90                     ;incstack = 0
  6293 ;; hardware stack exceeded
  6294                           	opt	stack 0
  6295                           ; Regs used in _start_receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6296                           	line	11
  6297                           	
  6298                           i1l2712:	
  6299  0F90                     ;Remote.c: 11:     ir_input = 0;
  6300                           	movlw	high highword(0)
  6301  0F90  3000               	bcf	status, 5	;RP0=0, select bank0
  6302  0F91  1283               	bcf	status, 6	;RP1=0, select bank0
  6303  0F92  1303               	movwf	(_ir_input+3)
  6304  0F93  00DF               	movlw	low highword(0)
  6305  0F94  3000               	movwf	(_ir_input+2)
  6306  0F95  00DE               	movlw	high(0)
  6307  0F96  3000               	movwf	(_ir_input+1)
  6308  0F97  00DD               	movlw	low(0)
  6309  0F98  3000               	movwf	(_ir_input)
  6310  0F99  00DC               
  6311                           	line	14
  6312                           ;Remote.c: 14:     _delay((unsigned long)((631)*(4000000/4000000.0)));
  6313                           	opt asmopt_push
  6314                           opt asmopt_off
  6315                           	movlw	210
  6316  0F9A  30D2               movwf	((??_start_receive+0)+0),f
  6317  0F9B  00F6               	u296_27:
  6318  0F9C                     decfsz	(??_start_receive+0)+0,f
  6319  0F9C  0BF6               	goto	u296_27
  6320  0F9D  2F9C               opt asmopt_pop
  6321                           
  6322                           	line	15
  6323                           	
  6324                           i1l2714:	
  6325  0F9E                     ;Remote.c: 15:     for (int i = 0; i < 12; i++) {
  6326                           	bcf	status, 5	;RP0=0, select bank0
  6327  0F9E  1283               	bcf	status, 6	;RP1=0, select bank0
  6328  0F9F  1303               	clrf	(start_receive@i)
  6329  0FA0  01A0               	clrf	(start_receive@i+1)
  6330  0FA1  01A1               	
  6331                           i1l2716:	
  6332  0FA2                     	movf	(start_receive@i+1),w
  6333  0FA2  0821               	xorlw	80h
  6334  0FA3  3A80               	movwf	btemp+1
  6335  0FA4  00FF               	movlw	(0)^80h
  6336  0FA5  3080               	subwf	btemp+1,w
  6337  0FA6  027F               	skipz
  6338  0FA7  1D03               	goto	u284_25
  6339  0FA8  2FAB               	movlw	0Ch
  6340  0FA9  300C               	subwf	(start_receive@i),w
  6341  0FAA  0220               u284_25:
  6342  0FAB                     
  6343                           	skipc
  6344  0FAB  1C03               	goto	u284_21
  6345  0FAC  2FAE               	goto	u284_20
  6346  0FAD  2FAF               u284_21:
  6347  0FAE                     	goto	i1l2720
  6348  0FAE  2FB1               u284_20:
  6349  0FAF                     	goto	i1l2728
  6350  0FAF  2FFA               	
  6351                           i1l2718:	
  6352  0FB0                     	goto	i1l2728
  6353  0FB0  2FFA               	
  6354                           i1l330:	
  6355  0FB1                     	line	16
  6356                           	
  6357                           i1l2720:	
  6358  0FB1                     ;Remote.c: 16:         ir_input = (ir_input << 1) | !PORTBbits.RB0;
  6359                           	clrc
  6360  0FB1  1003               	bcf	status, 5	;RP0=0, select bank0
  6361  0FB2  1283               	bcf	status, 6	;RP1=0, select bank0
  6362  0FB3  1303               	btfss	(6),0	;volatile
  6363  0FB4  1C06               	setc
  6364  0FB5  1403               	movlw	0
  6365  0FB6  3000               	skipnc
  6366  0FB7  1803               	movlw	1
  6367  0FB8  3001               
  6368                           	movwf	(??_start_receive+0)+0
  6369  0FB9  00F6               	clrf	((??_start_receive+0)+0+1)
  6370  0FBA  01F7               	clrf	((??_start_receive+0)+0+2)
  6371  0FBB  01F8               	clrf	((??_start_receive+0)+0+3)
  6372  0FBC  01F9               	movf	(_ir_input),w
  6373  0FBD  085C               	movwf	(??_start_receive+4)+0
  6374  0FBE  00FA               	movf	(_ir_input+1),w
  6375  0FBF  085D               	movwf	((??_start_receive+4)+0+1)
  6376  0FC0  00FB               	movf	(_ir_input+2),w
  6377  0FC1  085E               	movwf	((??_start_receive+4)+0+2)
  6378  0FC2  00FC               	movf	(_ir_input+3),w
  6379  0FC3  085F               	movwf	((??_start_receive+4)+0+3)
  6380  0FC4  00FD               	movlw	01h
  6381  0FC5  3001               u285_25:
  6382  0FC6                     	clrc
  6383  0FC6  1003               	rlf	(??_start_receive+4)+0,f
  6384  0FC7  0DFA               	rlf	(??_start_receive+4)+1,f
  6385  0FC8  0DFB               	rlf	(??_start_receive+4)+2,f
  6386  0FC9  0DFC               	rlf	(??_start_receive+4)+3,f
  6387  0FCA  0DFD               u285_20:
  6388  0FCB                     	addlw	-1
  6389  0FCB  3EFF               	skipz
  6390  0FCC  1D03               	goto	u285_25
  6391  0FCD  2FC6               	movf	0+(??_start_receive+4)+0,w
  6392  0FCE  087A               	iorwf	(??_start_receive+0)+0,f
  6393  0FCF  04F6               	movf	1+(??_start_receive+4)+0,w
  6394  0FD0  087B               	iorwf	(??_start_receive+0)+1,f
  6395  0FD1  04F7               	movf	2+(??_start_receive+4)+0,w
  6396  0FD2  087C               	iorwf	(??_start_receive+0)+2,f
  6397  0FD3  04F8               	movf	3+(??_start_receive+4)+0,w
  6398  0FD4  087D               	iorwf	(??_start_receive+0)+3,f
  6399  0FD5  04F9               	movf	3+(??_start_receive+0)+0,w
  6400  0FD6  0879               	movwf	(_ir_input+3)
  6401  0FD7  00DF               	movf	2+(??_start_receive+0)+0,w
  6402  0FD8  0878               	movwf	(_ir_input+2)
  6403  0FD9  00DE               	movf	1+(??_start_receive+0)+0,w
  6404  0FDA  0877               	movwf	(_ir_input+1)
  6405  0FDB  00DD               	movf	0+(??_start_receive+0)+0,w
  6406  0FDC  0876               	movwf	(_ir_input)
  6407  0FDD  00DC               
  6408                           	line	18
  6409                           	
  6410                           i1l2722:	
  6411  0FDE                     ;Remote.c: 18:         _delay((unsigned long)((842)*(4000000/4000000.0)));
  6412                           	opt asmopt_push
  6413                           opt asmopt_off
  6414                           	movlw	168
  6415  0FDE  30A8               movwf	((??_start_receive+0)+0),f
  6416  0FDF  00F6               	u297_27:
  6417  0FE0                     	nop2
  6418  0FE0  2FE1               decfsz	(??_start_receive+0)+0,f
  6419  0FE1  0BF6               	goto	u297_27
  6420  0FE2  2FE0               	nop
  6421  0FE3  0000               opt asmopt_pop
  6422                           
  6423                           	line	19
  6424                           	
  6425                           i1l2724:	
  6426  0FE4                     ;Remote.c: 19:     }
  6427                           	movlw	01h
  6428  0FE4  3001               	bcf	status, 5	;RP0=0, select bank0
  6429  0FE5  1283               	bcf	status, 6	;RP1=0, select bank0
  6430  0FE6  1303               	addwf	(start_receive@i),f
  6431  0FE7  07A0               	skipnc
  6432  0FE8  1803               	incf	(start_receive@i+1),f
  6433  0FE9  0AA1               	movlw	0
  6434  0FEA  3000               	addwf	(start_receive@i+1),f
  6435  0FEB  07A1               	
  6436                           i1l2726:	
  6437  0FEC                     	movf	(start_receive@i+1),w
  6438  0FEC  0821               	xorlw	80h
  6439  0FED  3A80               	movwf	btemp+1
  6440  0FEE  00FF               	movlw	(0)^80h
  6441  0FEF  3080               	subwf	btemp+1,w
  6442  0FF0  027F               	skipz
  6443  0FF1  1D03               	goto	u286_25
  6444  0FF2  2FF5               	movlw	0Ch
  6445  0FF3  300C               	subwf	(start_receive@i),w
  6446  0FF4  0220               u286_25:
  6447  0FF5                     
  6448                           	skipc
  6449  0FF5  1C03               	goto	u286_21
  6450  0FF6  2FF8               	goto	u286_20
  6451  0FF7  2FF9               u286_21:
  6452  0FF8                     	goto	i1l2720
  6453  0FF8  2FB1               u286_20:
  6454  0FF9                     	goto	i1l2728
  6455  0FF9  2FFA               	
  6456                           i1l331:	
  6457  0FFA                     	line	21
  6458                           	
  6459                           i1l2728:	
  6460  0FFA                     ;Remote.c: 21:     handle_remote();
  6461                           	fcall	_handle_remote
  6462  0FFA  120A  118A  2042  120A  158A  	line	22
  6463                           	
  6464                           i1l332:	
  6465  0FFF                     	return
  6466  0FFF  0008               	opt stack 0
  6467                           GLOBAL	__end_of_start_receive
  6468                           	__end_of_start_receive:
  6469  1000                     	signat	_start_receive,89
  6470                           	global	_handle_remote
  6471                           
  6472 ;; *************** function _handle_remote *****************
  6473 ;; Defined at:
  6474 ;;		line 25 in file "Remote.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  data            2    2[COMMON] unsigned int 
  6479 ;;  mask            2    0[COMMON] unsigned int 
  6480 ;;  found           1    4[COMMON] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6490 ;;      Params:         0       0       0       0       0
  6491 ;;      Locals:         5       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0
  6493 ;;      Totals:         5       0       0       0       0
  6494 ;;Total ram usage:        5 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_start_receive
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6503                           	line	25
  6504                           global __ptext21
  6505                           __ptext21:	;psect for function _handle_remote
  6506  0042                     psect	text21
  6507                           	file	"Remote.c"
  6508                           	line	25
  6509                           	global	__size_of_handle_remote
  6510                           	__size_of_handle_remote	equ	__end_of_handle_remote-_handle_remote
  6511  007F                     	
  6512                           _handle_remote:	
  6513  0042                     ;incstack = 0
  6514 ;; hardware stack exceeded
  6515                           	opt	stack 0
  6516                           ; Regs used in _handle_remote: [wreg-fsr0h+status,2+status,0]
  6517                           	line	27
  6518                           	
  6519                           i1l2480:	
  6520  0042                     ;Remote.c: 27:     char found = 0;
  6521                           	clrf	(handle_remote@found)
  6522  0042  01F5               	line	29
  6523                           	
  6524                           i1l2482:	
  6525  0043                     ;Remote.c: 29:     unsigned int mask = 0b0000000111111111;
  6526                           	movlw	0FFh
  6527  0043  30FF               	movwf	(handle_remote@mask)
  6528  0044  00F1               	movlw	01h
  6529  0045  3001               	movwf	((handle_remote@mask))+1
  6530  0046  00F2               	line	31
  6531                           	
  6532                           i1l2484:	
  6533  0047                     ;Remote.c: 31:     unsigned int data = ir_input & mask;
  6534                           	bcf	status, 5	;RP0=0, select bank0
  6535  0047  1283               	bcf	status, 6	;RP1=0, select bank0
  6536  0048  1303               	movf	(_ir_input),w
  6537  0049  085C               	andwf	(handle_remote@mask),w
  6538  004A  0571               	movwf	(handle_remote@data)
  6539  004B  00F3               	movf	(_ir_input+1),w
  6540  004C  085D               	andwf	(handle_remote@mask+1),w
  6541  004D  0572               	movwf	1+(handle_remote@data)
  6542  004E  00F4               	line	33
  6543                           ;Remote.c: 33:     switch (data) {
  6544                           	goto	i1l2520
  6545  004F  2899               	line	34
  6546                           ;Remote.c: 34:         case 72:
  6547                           	
  6548                           i1l336:	
  6549  0050                     	line	35
  6550                           	
  6551                           i1l2486:	
  6552  0050                     ;Remote.c: 35:             _selectedInput = 0;
  6553                           	bsf	status, 5	;RP0=1, select bank1
  6554  0050  1683               	bcf	status, 6	;RP1=0, select bank1
  6555  0051  1303               	clrf	(__selectedInput)^080h
  6556  0052  01CB               	clrf	(__selectedInput+1)^080h
  6557  0053  01CC               	line	36
  6558                           	
  6559                           i1l2488:	
  6560  0054                     ;Remote.c: 36:             _inputUpdateRequired = 1;
  6561                           	bcf	status, 5	;RP0=0, select bank0
  6562  0054  1283               	bcf	status, 6	;RP1=0, select bank0
  6563  0055  1303               	clrf	(__inputUpdateRequired)
  6564  0056  01E6               	incf	(__inputUpdateRequired),f
  6565  0057  0AE6               	line	37
  6566                           	
  6567                           i1l2490:	
  6568  0058                     ;Remote.c: 37:             found = 1;
  6569                           	clrf	(handle_remote@found)
  6570  0058  01F5               	incf	(handle_remote@found),f
  6571  0059  0AF5               	line	38
  6572                           ;Remote.c: 38:             break;
  6573                           	goto	i1l2522
  6574  005A  28B7               	line	39
  6575                           ;Remote.c: 39:         case 264:
  6576                           	
  6577                           i1l338:	
  6578  005B                     	line	40
  6579                           	
  6580                           i1l2492:	
  6581  005B                     ;Remote.c: 40:             _selectedInput = 1;
  6582                           	movlw	01h
  6583  005B  3001               	bsf	status, 5	;RP0=1, select bank1
  6584  005C  1683               	bcf	status, 6	;RP1=0, select bank1
  6585  005D  1303               	movwf	(__selectedInput)^080h
  6586  005E  00CB               	movlw	0
  6587  005F  3000               	movwf	((__selectedInput)^080h)+1
  6588  0060  00CC               	line	41
  6589                           	
  6590                           i1l2494:	
  6591  0061                     ;Remote.c: 41:             _inputUpdateRequired = 1;
  6592                           	bcf	status, 5	;RP0=0, select bank0
  6593  0061  1283               	bcf	status, 6	;RP1=0, select bank0
  6594  0062  1303               	clrf	(__inputUpdateRequired)
  6595  0063  01E6               	incf	(__inputUpdateRequired),f
  6596  0064  0AE6               	line	42
  6597                           	
  6598                           i1l2496:	
  6599  0065                     ;Remote.c: 42:             found = 1;
  6600                           	clrf	(handle_remote@found)
  6601  0065  01F5               	incf	(handle_remote@found),f
  6602  0066  0AF5               	line	43
  6603                           ;Remote.c: 43:             break;
  6604                           	goto	i1l2522
  6605  0067  28B7               	line	44
  6606                           ;Remote.c: 44:         case 160:
  6607                           	
  6608                           i1l339:	
  6609  0068                     	line	45
  6610                           	
  6611                           i1l2498:	
  6612  0068                     ;Remote.c: 45:             _selectedInput = 2;
  6613                           	movlw	02h
  6614  0068  3002               	bsf	status, 5	;RP0=1, select bank1
  6615  0069  1683               	bcf	status, 6	;RP1=0, select bank1
  6616  006A  1303               	movwf	(__selectedInput)^080h
  6617  006B  00CB               	movlw	0
  6618  006C  3000               	movwf	((__selectedInput)^080h)+1
  6619  006D  00CC               	line	46
  6620                           	
  6621                           i1l2500:	
  6622  006E                     ;Remote.c: 46:             _inputUpdateRequired = 1;
  6623                           	bcf	status, 5	;RP0=0, select bank0
  6624  006E  1283               	bcf	status, 6	;RP1=0, select bank0
  6625  006F  1303               	clrf	(__inputUpdateRequired)
  6626  0070  01E6               	incf	(__inputUpdateRequired),f
  6627  0071  0AE6               	line	47
  6628                           	
  6629                           i1l2502:	
  6630  0072                     ;Remote.c: 47:             found = 1;
  6631                           	clrf	(handle_remote@found)
  6632  0072  01F5               	incf	(handle_remote@found),f
  6633  0073  0AF5               	line	48
  6634                           ;Remote.c: 48:             break;
  6635                           	goto	i1l2522
  6636  0074  28B7               	line	49
  6637                           ;Remote.c: 49:         case 136:
  6638                           	
  6639                           i1l340:	
  6640  0075                     	line	50
  6641                           	
  6642                           i1l2504:	
  6643  0075                     ;Remote.c: 50:             _selectedInput = 3;
  6644                           	movlw	03h
  6645  0075  3003               	bsf	status, 5	;RP0=1, select bank1
  6646  0076  1683               	bcf	status, 6	;RP1=0, select bank1
  6647  0077  1303               	movwf	(__selectedInput)^080h
  6648  0078  00CB               	movlw	0
  6649  0079  3000               	movwf	((__selectedInput)^080h)+1
  6650  007A  00CC               	line	51
  6651                           	
  6652                           i1l2506:	
  6653  007B                     ;Remote.c: 51:             _inputUpdateRequired = 1;
  6654                           	bcf	status, 5	;RP0=0, select bank0
  6655  007B  1283               	bcf	status, 6	;RP1=0, select bank0
  6656  007C  1303               	clrf	(__inputUpdateRequired)
  6657  007D  01E6               	incf	(__inputUpdateRequired),f
  6658  007E  0AE6               	line	52
  6659                           	
  6660                           i1l2508:	
  6661  007F                     ;Remote.c: 52:             found = 1;
  6662                           	clrf	(handle_remote@found)
  6663  007F  01F5               	incf	(handle_remote@found),f
  6664  0080  0AF5               	line	53
  6665                           ;Remote.c: 53:             break;
  6666                           	goto	i1l2522
  6667  0081  28B7               	line	54
  6668                           ;Remote.c: 54:         case 288:
  6669                           	
  6670                           i1l341:	
  6671  0082                     	line	55
  6672                           	
  6673                           i1l2510:	
  6674  0082                     ;Remote.c: 55:             volume++;
  6675                           	movlw	01h
  6676  0082  3001               	bsf	status, 5	;RP0=1, select bank1
  6677  0083  1683               	bcf	status, 6	;RP1=0, select bank1
  6678  0084  1303               	addwf	(_volume)^080h,f
  6679  0085  07C9               	skipnc
  6680  0086  1803               	incf	(_volume+1)^080h,f
  6681  0087  0ACA               	movlw	0
  6682  0088  3000               	addwf	(_volume+1)^080h,f
  6683  0089  07CA               	line	56
  6684                           	
  6685                           i1l2512:	
  6686  008A                     ;Remote.c: 56:             found = 1;
  6687                           	clrf	(handle_remote@found)
  6688  008A  01F5               	incf	(handle_remote@found),f
  6689  008B  0AF5               	line	57
  6690                           ;Remote.c: 57:             break;
  6691                           	goto	i1l2522
  6692  008C  28B7               	line	58
  6693                           ;Remote.c: 58:         case 272:
  6694                           	
  6695                           i1l342:	
  6696  008D                     	line	59
  6697                           	
  6698                           i1l2514:	
  6699  008D                     ;Remote.c: 59:             volume--;
  6700                           	movlw	0FFh
  6701  008D  30FF               	bsf	status, 5	;RP0=1, select bank1
  6702  008E  1683               	bcf	status, 6	;RP1=0, select bank1
  6703  008F  1303               	addwf	(_volume)^080h,f
  6704  0090  07C9               	skipnc
  6705  0091  1803               	incf	(_volume+1)^080h,f
  6706  0092  0ACA               	movlw	0FFh
  6707  0093  30FF               	addwf	(_volume+1)^080h,f
  6708  0094  07CA               	line	60
  6709                           	
  6710                           i1l2516:	
  6711  0095                     ;Remote.c: 60:             found = 1;
  6712                           	clrf	(handle_remote@found)
  6713  0095  01F5               	incf	(handle_remote@found),f
  6714  0096  0AF5               	line	61
  6715                           ;Remote.c: 61:             break;
  6716                           	goto	i1l2522
  6717  0097  28B7               	line	62
  6718                           	
  6719                           i1l2518:	
  6720  0098                     ;Remote.c: 62:     }
  6721                           	goto	i1l2522
  6722  0098  28B7               	
  6723                           i1l335:	
  6724  0099                     	
  6725                           i1l2520:	
  6726  0099                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  6727                           ; Switch size 1, requested type "space"
  6728                           ; Number of cases is 2, Range of values is 0 to 1
  6729                           ; switch strategies available:
  6730                           ; Name         Instructions Cycles
  6731                           ; simple_byte            7     4 (average)
  6732                           ; direct_byte           14     8 (fixed)
  6733                           ; jumptable            260     6 (fixed)
  6734                           ;	Chosen strategy is simple_byte
  6735                           
  6736                           	movf (handle_remote@data+1),w
  6737  0099  0874               	opt asmopt_push
  6738                           	opt asmopt_off
  6739                           	xorlw	0^0	; case 0
  6740  009A  3A00               	skipnz
  6741  009B  1903               	goto	i1l2856
  6742  009C  28A1               	xorlw	1^0	; case 1
  6743  009D  3A01               	skipnz
  6744  009E  1903               	goto	i1l2858
  6745  009F  28AC               	goto	i1l2522
  6746  00A0  28B7               	opt asmopt_pop
  6747                           	
  6748                           i1l2856:	
  6749  00A1                     ; Switch size 1, requested type "space"
  6750                           ; Number of cases is 3, Range of values is 72 to 160
  6751                           ; switch strategies available:
  6752                           ; Name         Instructions Cycles
  6753                           ; simple_byte           10     6 (average)
  6754                           ; jumptable            263     9 (fixed)
  6755                           ;	Chosen strategy is simple_byte
  6756                           
  6757                           	movf (handle_remote@data),w
  6758  00A1  0873               	opt asmopt_push
  6759                           	opt asmopt_off
  6760                           	xorlw	72^0	; case 72
  6761  00A2  3A48               	skipnz
  6762  00A3  1903               	goto	i1l2486
  6763  00A4  2850               	xorlw	136^72	; case 136
  6764  00A5  3AC0               	skipnz
  6765  00A6  1903               	goto	i1l2504
  6766  00A7  2875               	xorlw	160^136	; case 160
  6767  00A8  3A28               	skipnz
  6768  00A9  1903               	goto	i1l2498
  6769  00AA  2868               	goto	i1l2522
  6770  00AB  28B7               	opt asmopt_pop
  6771                           	
  6772                           i1l2858:	
  6773  00AC                     ; Switch size 1, requested type "space"
  6774                           ; Number of cases is 3, Range of values is 8 to 32
  6775                           ; switch strategies available:
  6776                           ; Name         Instructions Cycles
  6777                           ; simple_byte           10     6 (average)
  6778                           ; direct_byte           86    11 (fixed)
  6779                           ; jumptable            263     9 (fixed)
  6780                           ;	Chosen strategy is simple_byte
  6781                           
  6782                           	movf (handle_remote@data),w
  6783  00AC  0873               	opt asmopt_push
  6784                           	opt asmopt_off
  6785                           	xorlw	8^0	; case 8
  6786  00AD  3A08               	skipnz
  6787  00AE  1903               	goto	i1l2492
  6788  00AF  285B               	xorlw	16^8	; case 16
  6789  00B0  3A18               	skipnz
  6790  00B1  1903               	goto	i1l2514
  6791  00B2  288D               	xorlw	32^16	; case 32
  6792  00B3  3A30               	skipnz
  6793  00B4  1903               	goto	i1l2510
  6794  00B5  2882               	goto	i1l2522
  6795  00B6  28B7               	opt asmopt_pop
  6796                           
  6797                           	
  6798                           i1l337:	
  6799  00B7                     	line	64
  6800                           	
  6801                           i1l2522:	
  6802  00B7                     ;Remote.c: 64:     ir_input = 0;
  6803                           	movlw	high highword(0)
  6804  00B7  3000               	bcf	status, 5	;RP0=0, select bank0
  6805  00B8  1283               	movwf	(_ir_input+3)
  6806  00B9  00DF               	movlw	low highword(0)
  6807  00BA  3000               	movwf	(_ir_input+2)
  6808  00BB  00DE               	movlw	high(0)
  6809  00BC  3000               	movwf	(_ir_input+1)
  6810  00BD  00DD               	movlw	low(0)
  6811  00BE  3000               	movwf	(_ir_input)
  6812  00BF  00DC               
  6813                           	line	66
  6814                           	
  6815                           i1l343:	
  6816  00C0                     	return
  6817  00C0  0008               	opt stack 0
  6818                           GLOBAL	__end_of_handle_remote
  6819                           	__end_of_handle_remote:
  6820  00C1                     	signat	_handle_remote,89
  6821                           	global	_handle_rotary
  6822                           
  6823 ;; *************** function _handle_rotary *****************
  6824 ;; Defined at:
  6825 ;;		line 30 in file "Input.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  portB           2    5[COMMON] int 
  6830 ;;  portA           2    3[COMMON] int 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6840 ;;      Params:         0       0       0       0       0
  6841 ;;      Locals:         4       0       0       0       0
  6842 ;;      Temps:          3       0       0       0       0
  6843 ;;      Totals:         7       0       0       0       0
  6844 ;;Total ram usage:        7 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_isr
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6853                           	file	"Input.c"
  6854                           	line	30
  6855                           global __ptext22
  6856                           __ptext22:	;psect for function _handle_rotary
  6857  00C1                     psect	text22
  6858                           	file	"Input.c"
  6859                           	line	30
  6860                           	global	__size_of_handle_rotary
  6861                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  6862  0081                     	
  6863                           _handle_rotary:	
  6864  00C1                     ;incstack = 0
  6865                           	opt	stack 0
  6866                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  6867                           	line	32
  6868                           	
  6869                           i1l2684:	
  6870  00C1                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  6871                           	bcf	status, 5	;RP0=0, select bank0
  6872  00C1  1283               	bcf	status, 6	;RP1=0, select bank0
  6873  00C2  1303               	swapf	(6),w	;volatile
  6874  00C3  0E06               	andlw	(1<<1)-1
  6875  00C4  3901               	movwf	(??_handle_rotary+0)+0
  6876  00C5  00F1               	clrf	(??_handle_rotary+0)+0+1
  6877  00C6  01F2               	movf	0+(??_handle_rotary+0)+0,w
  6878  00C7  0871               	movwf	(handle_rotary@portA)
  6879  00C8  00F4               	movf	1+(??_handle_rotary+0)+0,w
  6880  00C9  0872               	movwf	(handle_rotary@portA+1)
  6881  00CA  00F5               	line	33
  6882                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  6883                           	swapf	(6),w	;volatile
  6884  00CB  0E06               	movwf	(??_handle_rotary+0)+0
  6885  00CC  00F1               	rrf	(??_handle_rotary+0)+0,w
  6886  00CD  0C71               	andlw	(1<<1)-1
  6887  00CE  3901               	movwf	(??_handle_rotary+1)+0
  6888  00CF  00F2               	clrf	(??_handle_rotary+1)+0+1
  6889  00D0  01F3               	movf	0+(??_handle_rotary+1)+0,w
  6890  00D1  0872               	movwf	(handle_rotary@portB)
  6891  00D2  00F6               	movf	1+(??_handle_rotary+1)+0,w
  6892  00D3  0873               	movwf	(handle_rotary@portB+1)
  6893  00D4  00F7               	line	35
  6894                           	
  6895                           i1l2686:	
  6896  00D5                     ;Input.c: 35:         if (_lastA != portA) {
  6897                           	movf	(__lastA+1),w
  6898  00D5  0865               	xorwf	(handle_rotary@portA+1),w
  6899  00D6  0675               	skipz
  6900  00D7  1D03               	goto	u276_25
  6901  00D8  28DB               	movf	(__lastA),w
  6902  00D9  0864               	xorwf	(handle_rotary@portA),w
  6903  00DA  0674               u276_25:
  6904  00DB                     
  6905                           	skipnz
  6906  00DB  1903               	goto	u276_21
  6907  00DC  28DE               	goto	u276_20
  6908  00DD  28DF               u276_21:
  6909  00DE                     	goto	i1l2698
  6910  00DE  2906               u276_20:
  6911  00DF                     	line	36
  6912                           	
  6913                           i1l2688:	
  6914  00DF                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  6915                           	movf	(__lastB+1),w
  6916  00DF  0863               	xorwf	(__lastA+1),w
  6917  00E0  0665               	skipz
  6918  00E1  1D03               	goto	u277_25
  6919  00E2  28E5               	movf	(__lastB),w
  6920  00E3  0862               	xorwf	(__lastA),w
  6921  00E4  0664               u277_25:
  6922  00E5                     
  6923                           	skipz
  6924  00E5  1D03               	goto	u277_21
  6925  00E6  28E8               	goto	u277_20
  6926  00E7  28E9               u277_21:
  6927  00E8                     	goto	i1l2698
  6928  00E8  2906               u277_20:
  6929  00E9                     	
  6930                           i1l2690:	
  6931  00E9                     	movf	((handle_rotary@portA)),w
  6932  00E9  0874               iorwf	((handle_rotary@portA+1)),w
  6933  00EA  0475               	btfsc	status,2
  6934  00EB  1903               	goto	u278_21
  6935  00EC  28EE               	goto	u278_20
  6936  00ED  28EF               u278_21:
  6937  00EE                     	goto	i1l2698
  6938  00EE  2906               u278_20:
  6939  00EF                     	line	37
  6940                           	
  6941                           i1l2692:	
  6942  00EF                     ;Input.c: 37:                 if (_selectedInput < 3) {
  6943                           	movlw	0
  6944  00EF  3000               	bsf	status, 5	;RP0=1, select bank1
  6945  00F0  1683               	bcf	status, 6	;RP1=0, select bank1
  6946  00F1  1303               	subwf	(__selectedInput+1)^080h,w
  6947  00F2  024C               	movlw	03h
  6948  00F3  3003               	skipnz
  6949  00F4  1903               	subwf	(__selectedInput)^080h,w
  6950  00F5  024B               	skipnc
  6951  00F6  1803               	goto	u279_21
  6952  00F7  28F9               	goto	u279_20
  6953  00F8  28FA               u279_21:
  6954  00F9                     	goto	i1l2696
  6955  00F9  2901               u279_20:
  6956  00FA                     	line	38
  6957                           	
  6958                           i1l2694:	
  6959  00FA                     ;Input.c: 38:                     _selectedInput++;
  6960                           	movlw	01h
  6961  00FA  3001               	addwf	(__selectedInput)^080h,f
  6962  00FB  07CB               	skipnc
  6963  00FC  1803               	incf	(__selectedInput+1)^080h,f
  6964  00FD  0ACC               	movlw	0
  6965  00FE  3000               	addwf	(__selectedInput+1)^080h,f
  6966  00FF  07CC               	line	39
  6967                           ;Input.c: 39:                 } else {
  6968                           	goto	i1l2698
  6969  0100  2906               	
  6970                           i1l205:	
  6971  0101                     	line	40
  6972                           	
  6973                           i1l2696:	
  6974  0101                     ;Input.c: 40:                     _selectedInput = 0;
  6975                           	clrf	(__selectedInput)^080h
  6976  0101  01CB               	clrf	(__selectedInput+1)^080h
  6977  0102  01CC               	goto	i1l2698
  6978  0103  2906               	line	41
  6979                           ;Input.c: 41:                 }
  6980                           	
  6981                           i1l206:	
  6982  0104                     	goto	i1l2698
  6983  0104  2906               	line	42
  6984                           ;Input.c: 42:             }
  6985                           	
  6986                           i1l204:	
  6987  0105                     	goto	i1l2698
  6988  0105  2906               	line	43
  6989                           ;Input.c: 43:         }
  6990                           	
  6991                           i1l203:	
  6992  0106                     	line	45
  6993                           	
  6994                           i1l2698:	
  6995  0106                     ;Input.c: 45:         if (_lastB != portB) {
  6996                           	bcf	status, 5	;RP0=0, select bank0
  6997  0106  1283               	movf	(__lastB+1),w
  6998  0107  0863               	xorwf	(handle_rotary@portB+1),w
  6999  0108  0677               	skipz
  7000  0109  1D03               	goto	u280_25
  7001  010A  290D               	movf	(__lastB),w
  7002  010B  0862               	xorwf	(handle_rotary@portB),w
  7003  010C  0676               u280_25:
  7004  010D                     
  7005                           	skipnz
  7006  010D  1903               	goto	u280_21
  7007  010E  2910               	goto	u280_20
  7008  010F  2911               u280_21:
  7009  0110                     	goto	i1l207
  7010  0110  2936               u280_20:
  7011  0111                     	line	46
  7012                           	
  7013                           i1l2700:	
  7014  0111                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
  7015                           	movf	(__lastB+1),w
  7016  0111  0863               	xorwf	(__lastA+1),w
  7017  0112  0665               	skipz
  7018  0113  1D03               	goto	u281_25
  7019  0114  2917               	movf	(__lastB),w
  7020  0115  0862               	xorwf	(__lastA),w
  7021  0116  0664               u281_25:
  7022  0117                     
  7023                           	skipz
  7024  0117  1D03               	goto	u281_21
  7025  0118  291A               	goto	u281_20
  7026  0119  291B               u281_21:
  7027  011A                     	goto	i1l207
  7028  011A  2936               u281_20:
  7029  011B                     	
  7030                           i1l2702:	
  7031  011B                     	movf	((handle_rotary@portB)),w
  7032  011B  0876               iorwf	((handle_rotary@portB+1)),w
  7033  011C  0477               	btfsc	status,2
  7034  011D  1903               	goto	u282_21
  7035  011E  2920               	goto	u282_20
  7036  011F  2921               u282_21:
  7037  0120                     	goto	i1l207
  7038  0120  2936               u282_20:
  7039  0121                     	line	47
  7040                           	
  7041                           i1l2704:	
  7042  0121                     ;Input.c: 47:                 if (_selectedInput > 0) {
  7043                           	bsf	status, 5	;RP0=1, select bank1
  7044  0121  1683               	bcf	status, 6	;RP1=0, select bank1
  7045  0122  1303               	movf	((__selectedInput)^080h),w
  7046  0123  084B               iorwf	((__selectedInput+1)^080h),w
  7047  0124  044C               	btfsc	status,2
  7048  0125  1903               	goto	u283_21
  7049  0126  2928               	goto	u283_20
  7050  0127  2929               u283_21:
  7051  0128                     	goto	i1l2708
  7052  0128  2930               u283_20:
  7053  0129                     	line	48
  7054                           	
  7055                           i1l2706:	
  7056  0129                     ;Input.c: 48:                     _selectedInput--;
  7057                           	movlw	01h
  7058  0129  3001               	subwf	(__selectedInput)^080h,f
  7059  012A  02CB               	movlw	0
  7060  012B  3000               	skipc
  7061  012C  1C03               	decf	(__selectedInput+1)^080h,f
  7062  012D  03CC               	subwf	(__selectedInput+1)^080h,f
  7063  012E  02CC               	line	49
  7064                           ;Input.c: 49:                 } else {
  7065                           	goto	i1l207
  7066  012F  2936               	
  7067                           i1l209:	
  7068  0130                     	line	50
  7069                           	
  7070                           i1l2708:	
  7071  0130                     ;Input.c: 50:                     _selectedInput = 3;
  7072                           	movlw	03h
  7073  0130  3003               	movwf	(__selectedInput)^080h
  7074  0131  00CB               	movlw	0
  7075  0132  3000               	movwf	((__selectedInput)^080h)+1
  7076  0133  00CC               	goto	i1l207
  7077  0134  2936               	line	51
  7078                           ;Input.c: 51:                 }
  7079                           	
  7080                           i1l210:	
  7081  0135                     	goto	i1l207
  7082  0135  2936               	line	52
  7083                           ;Input.c: 52:             }
  7084                           	
  7085                           i1l208:	
  7086  0136                     	line	53
  7087                           ;Input.c: 53:         }
  7088                           	
  7089                           i1l207:	
  7090  0136                     	line	55
  7091                           ;Input.c: 55:         _lastA = portA;
  7092                           	movf	(handle_rotary@portA+1),w
  7093  0136  0875               	bcf	status, 5	;RP0=0, select bank0
  7094  0137  1283               	movwf	(__lastA+1)
  7095  0138  00E5               	movf	(handle_rotary@portA),w
  7096  0139  0874               	movwf	(__lastA)
  7097  013A  00E4               	line	56
  7098                           ;Input.c: 56:         _lastB = portB;
  7099                           	movf	(handle_rotary@portB+1),w
  7100  013B  0877               	movwf	(__lastB+1)
  7101  013C  00E3               	movf	(handle_rotary@portB),w
  7102  013D  0876               	movwf	(__lastB)
  7103  013E  00E2               	line	57
  7104                           	
  7105                           i1l2710:	
  7106  013F                     ;Input.c: 57:         _inputUpdateRequired = 1;
  7107                           	clrf	(__inputUpdateRequired)
  7108  013F  01E6               	incf	(__inputUpdateRequired),f
  7109  0140  0AE6               	line	58
  7110                           	
  7111                           i1l211:	
  7112  0141                     	return
  7113  0141  0008               	opt stack 0
  7114                           GLOBAL	__end_of_handle_rotary
  7115                           	__end_of_handle_rotary:
  7116  0142                     	signat	_handle_rotary,89
  7117                           	global	_handle_potmeter
  7118                           
  7119 ;; *************** function _handle_potmeter *****************
  7120 ;; Defined at:
  7121 ;;		line 30 in file "Volume.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  currentStep     2   52[BANK0 ] unsigned int 
  7126 ;;  ad_result       2   54[BANK0 ] unsigned int 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7136 ;;      Params:         0       0       0       0       0
  7137 ;;      Locals:         0       4       0       0       0
  7138 ;;      Temps:          0       2       0       0       0
  7139 ;;      Totals:         0       6       0       0       0
  7140 ;;Total ram usage:        6 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    2
  7143 ;; This function calls:
  7144 ;;		_is_deadzone
  7145 ;;		i1___lwdiv
  7146 ;; This function is called by:
  7147 ;;		_isr
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7151                           	file	"Volume.c"
  7152                           	line	30
  7153                           global __ptext23
  7154                           __ptext23:	;psect for function _handle_potmeter
  7155  0142                     psect	text23
  7156                           	file	"Volume.c"
  7157                           	line	30
  7158                           	global	__size_of_handle_potmeter
  7159                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
  7160  0082                     	
  7161                           _handle_potmeter:	
  7162  0142                     ;incstack = 0
  7163 ;; hardware stack exceeded
  7164                           	opt	stack 0
  7165                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7166                           	line	32
  7167                           	
  7168                           i1l2730:	
  7169  0142                     ;Volume.c: 32:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
  7170                           	bcf	status, 5	;RP0=0, select bank0
  7171  0142  1283               	bcf	status, 6	;RP1=0, select bank0
  7172  0143  1303               	movf	(30),w	;volatile
  7173  0144  081E               	movwf	(handle_potmeter@ad_result+1)
  7174  0145  00D7               	bsf	status, 5	;RP0=1, select bank1
  7175  0146  1683               	bcf	status, 6	;RP1=0, select bank1
  7176  0147  1303               	movf	(158)^080h,w	;volatile
  7177  0148  081E               	bcf	status, 5	;RP0=0, select bank0
  7178  0149  1283               	bcf	status, 6	;RP1=0, select bank0
  7179  014A  1303               	movwf	(handle_potmeter@ad_result)
  7180  014B  00D6               	line	34
  7181                           ;Volume.c: 34:     if (ad_result == _lastAdcResult)
  7182                           	movf	(__lastAdcResult+1),w
  7183  014C  0861               	xorwf	(handle_potmeter@ad_result+1),w
  7184  014D  0657               	skipz
  7185  014E  1D03               	goto	u287_25
  7186  014F  2952               	movf	(__lastAdcResult),w
  7187  0150  0860               	xorwf	(handle_potmeter@ad_result),w
  7188  0151  0656               u287_25:
  7189  0152                     
  7190                           	skipz
  7191  0152  1D03               	goto	u287_21
  7192  0153  2955               	goto	u287_20
  7193  0154  2956               u287_21:
  7194  0155                     	goto	i1l2734
  7195  0155  2958               u287_20:
  7196  0156                     	goto	i1l304
  7197  0156  29C3               	line	35
  7198                           	
  7199                           i1l2732:	
  7200  0157                     ;Volume.c: 35:         return;
  7201                           	goto	i1l304
  7202  0157  29C3               	
  7203                           i1l303:	
  7204  0158                     	line	37
  7205                           	
  7206                           i1l2734:	
  7207  0158                     ;Volume.c: 37:     if (ad_result == 0 || ad_result < step_size) {
  7208                           	movf	((handle_potmeter@ad_result)),w
  7209  0158  0856               iorwf	((handle_potmeter@ad_result+1)),w
  7210  0159  0457               	btfsc	status,2
  7211  015A  1903               	goto	u288_21
  7212  015B  295D               	goto	u288_20
  7213  015C  295E               u288_21:
  7214  015D                     	goto	i1l2738
  7215  015D  2979               u288_20:
  7216  015E                     	
  7217                           i1l2736:	
  7218  015E                     	movlw	low(_step_size|8000h)
  7219  015E  308E               	movwf	fsr0
  7220  015F  0084               	movlw	high(_step_size|8000h)
  7221  0160  3089               	movwf	btemp+1
  7222  0161  00FF               	fcall	stringtab
  7223  0162  120A  158A  2000  120A  118A  	movwf	(??_handle_potmeter+0)+0
  7224  0167  00D2               	fcall	stringtab
  7225  0168  120A  158A  2000  120A  118A  	movwf	(??_handle_potmeter+0)+0+1
  7226  016D  00D3               	movf	1+(??_handle_potmeter+0)+0,w
  7227  016E  0853               	subwf	(handle_potmeter@ad_result+1),w
  7228  016F  0257               	skipz
  7229  0170  1D03               	goto	u289_25
  7230  0171  2974               	movf	0+(??_handle_potmeter+0)+0,w
  7231  0172  0852               	subwf	(handle_potmeter@ad_result),w
  7232  0173  0256               u289_25:
  7233  0174                     	skipnc
  7234  0174  1803               	goto	u289_21
  7235  0175  2977               	goto	u289_20
  7236  0176  2978               u289_21:
  7237  0177                     	goto	i1l2740
  7238  0177  297E               u289_20:
  7239  0178                     	goto	i1l2738
  7240  0178  2979               	
  7241                           i1l307:	
  7242  0179                     	line	38
  7243                           	
  7244                           i1l2738:	
  7245  0179                     ;Volume.c: 38:             volume = 0;
  7246                           	bsf	status, 5	;RP0=1, select bank1
  7247  0179  1683               	bcf	status, 6	;RP1=0, select bank1
  7248  017A  1303               	clrf	(_volume)^080h
  7249  017B  01C9               	clrf	(_volume+1)^080h
  7250  017C  01CA               	line	39
  7251                           ;Volume.c: 39:     } else {
  7252                           	goto	i1l308
  7253  017D  29BE               	
  7254                           i1l305:	
  7255  017E                     	line	40
  7256                           	
  7257                           i1l2740:	
  7258  017E                     ;Volume.c: 40:         unsigned int currentStep = ad_result / step_size;
  7259                           	movlw	low(_step_size|8000h)
  7260  017E  308E               	movwf	fsr0
  7261  017F  0084               	movlw	high(_step_size|8000h)
  7262  0180  3089               	bcf	status, 5	;RP0=0, select bank0
  7263  0181  1283               	movwf	btemp+1
  7264  0182  00FF               	fcall	stringtab
  7265  0183  120A  158A  2000  120A  118A  	movwf	(i1___lwdiv@divisor)
  7266  0188  00F1               	fcall	stringtab
  7267  0189  120A  158A  2000  120A  118A  	movwf	(i1___lwdiv@divisor+1)
  7268  018E  00F2               	movf	(handle_potmeter@ad_result+1),w
  7269  018F  0857               	movwf	(i1___lwdiv@dividend+1)
  7270  0190  00F4               	movf	(handle_potmeter@ad_result),w
  7271  0191  0856               	movwf	(i1___lwdiv@dividend)
  7272  0192  00F3               	fcall	i1___lwdiv
  7273  0193  120A  158A  24D6  120A  118A  	movf	(1+(?i1___lwdiv)),w
  7274  0198  0872               	bcf	status, 5	;RP0=0, select bank0
  7275  0199  1283               	bcf	status, 6	;RP1=0, select bank0
  7276  019A  1303               	movwf	(handle_potmeter@currentStep+1)
  7277  019B  00D5               	movf	(0+(?i1___lwdiv)),w
  7278  019C  0871               	movwf	(handle_potmeter@currentStep)
  7279  019D  00D4               	line	42
  7280                           ;Volume.c: 42:         if (!is_deadzone(currentStep, ad_result))
  7281                           	movf	(handle_potmeter@currentStep+1),w
  7282  019E  0855               	movwf	(is_deadzone@currentStep+1)
  7283  019F  00C6               	movf	(handle_potmeter@currentStep),w
  7284  01A0  0854               	movwf	(is_deadzone@currentStep)
  7285  01A1  00C5               	movf	(handle_potmeter@ad_result+1),w
  7286  01A2  0857               	movwf	(is_deadzone@adcResult+1)
  7287  01A3  00C8               	movf	(handle_potmeter@ad_result),w
  7288  01A4  0856               	movwf	(is_deadzone@adcResult)
  7289  01A5  00C7               	fcall	_is_deadzone
  7290  01A6  120A  118A  2324  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7291  01AB  1283               	bcf	status, 6	;RP1=0, select bank0
  7292  01AC  1303               	movf	((0+(?_is_deadzone))),w
  7293  01AD  0845               iorwf	((1+(?_is_deadzone))),w
  7294  01AE  0446               	btfss	status,2
  7295  01AF  1D03               	goto	u290_21
  7296  01B0  29B2               	goto	u290_20
  7297  01B1  29B3               u290_21:
  7298  01B2                     	goto	i1l308
  7299  01B2  29BE               u290_20:
  7300  01B3                     	line	43
  7301                           	
  7302                           i1l2742:	
  7303  01B3                     ;Volume.c: 43:             volume = currentStep;
  7304                           	movf	(handle_potmeter@currentStep+1),w
  7305  01B3  0855               	bsf	status, 5	;RP0=1, select bank1
  7306  01B4  1683               	bcf	status, 6	;RP1=0, select bank1
  7307  01B5  1303               	movwf	(_volume+1)^080h
  7308  01B6  00CA               	bcf	status, 5	;RP0=0, select bank0
  7309  01B7  1283               	bcf	status, 6	;RP1=0, select bank0
  7310  01B8  1303               	movf	(handle_potmeter@currentStep),w
  7311  01B9  0854               	bsf	status, 5	;RP0=1, select bank1
  7312  01BA  1683               	bcf	status, 6	;RP1=0, select bank1
  7313  01BB  1303               	movwf	(_volume)^080h
  7314  01BC  00C9               	goto	i1l308
  7315  01BD  29BE               	
  7316                           i1l309:	
  7317  01BE                     	line	44
  7318                           ;Volume.c: 44:     }
  7319                           	
  7320                           i1l308:	
  7321  01BE                     	line	46
  7322                           ;Volume.c: 46:     _lastAdcResult = ad_result;
  7323                           	bcf	status, 5	;RP0=0, select bank0
  7324  01BE  1283               	movf	(handle_potmeter@ad_result+1),w
  7325  01BF  0857               	movwf	(__lastAdcResult+1)
  7326  01C0  00E1               	movf	(handle_potmeter@ad_result),w
  7327  01C1  0856               	movwf	(__lastAdcResult)
  7328  01C2  00E0               	line	48
  7329                           	
  7330                           i1l304:	
  7331  01C3                     	return
  7332  01C3  0008               	opt stack 0
  7333                           GLOBAL	__end_of_handle_potmeter
  7334                           	__end_of_handle_potmeter:
  7335  01C4                     	signat	_handle_potmeter,89
  7336                           	global	i1___lwdiv
  7337                           
  7338 ;; *************** function i1___lwdiv *****************
  7339 ;; Defined at:
  7340 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  divisor         2    0[COMMON] unsigned int 
  7343 ;;  dividend        2    2[COMMON] unsigned int 
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7346 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  2    0[COMMON] unsigned int 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, status,0
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7356 ;;      Params:         4       0       0       0       0
  7357 ;;      Locals:         3       0       0       0       0
  7358 ;;      Temps:          1       0       0       0       0
  7359 ;;      Totals:         8       0       0       0       0
  7360 ;;Total ram usage:        8 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_handle_potmeter
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7369                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7370                           	line	5
  7371                           global __ptext24
  7372                           __ptext24:	;psect for function i1___lwdiv
  7373  0CD6                     psect	text24
  7374                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7375                           	line	5
  7376                           	global	__size_ofi1___lwdiv
  7377                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
  7378  004B                     	
  7379                           i1___lwdiv:	
  7380  0CD6                     ;incstack = 0
  7381 ;; hardware stack exceeded
  7382                           	opt	stack 0
  7383                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7384                           	line	13
  7385                           	
  7386                           i1l2532:	
  7387  0CD6                     	clrf	(i1___lwdiv@quotient)
  7388  0CD6  01F6               	clrf	(i1___lwdiv@quotient+1)
  7389  0CD7  01F7               	line	14
  7390                           	
  7391                           i1l2534:	
  7392  0CD8                     	movf	((i1___lwdiv@divisor)),w
  7393  0CD8  0871               iorwf	((i1___lwdiv@divisor+1)),w
  7394  0CD9  0472               	btfsc	status,2
  7395  0CDA  1903               	goto	u265_21
  7396  0CDB  2CDD               	goto	u265_20
  7397  0CDC  2CDE               u265_21:
  7398  0CDD                     	goto	i1l2554
  7399  0CDD  2D1B               u265_20:
  7400  0CDE                     	line	15
  7401                           	
  7402                           i1l2536:	
  7403  0CDE                     	clrf	(i1___lwdiv@counter)
  7404  0CDE  01F8               	incf	(i1___lwdiv@counter),f
  7405  0CDF  0AF8               	line	16
  7406                           	goto	i1l2542
  7407  0CE0  2CED               	
  7408                           i1l724:	
  7409  0CE1                     	line	17
  7410                           	
  7411                           i1l2538:	
  7412  0CE1                     	movlw	01h
  7413  0CE1  3001               	
  7414                           u266_25:
  7415  0CE2                     	clrc
  7416  0CE2  1003               	rlf	(i1___lwdiv@divisor),f
  7417  0CE3  0DF1               	rlf	(i1___lwdiv@divisor+1),f
  7418  0CE4  0DF2               	addlw	-1
  7419  0CE5  3EFF               	skipz
  7420  0CE6  1D03               	goto	u266_25
  7421  0CE7  2CE2               	line	18
  7422                           	
  7423                           i1l2540:	
  7424  0CE8                     	movlw	low(01h)
  7425  0CE8  3001               	movwf	(??i1___lwdiv+0)+0
  7426  0CE9  00F5               	movf	(??i1___lwdiv+0)+0,w
  7427  0CEA  0875               	addwf	(i1___lwdiv@counter),f
  7428  0CEB  07F8               	goto	i1l2542
  7429  0CEC  2CED               	line	19
  7430                           	
  7431                           i1l723:	
  7432  0CED                     	line	16
  7433                           	
  7434                           i1l2542:	
  7435  0CED                     	btfss	(i1___lwdiv@divisor+1),(15)&7
  7436  0CED  1FF2               	goto	u267_21
  7437  0CEE  2CF0               	goto	u267_20
  7438  0CEF  2CF1               u267_21:
  7439  0CF0                     	goto	i1l2538
  7440  0CF0  2CE1               u267_20:
  7441  0CF1                     	goto	i1l2544
  7442  0CF1  2CF3               	
  7443                           i1l725:	
  7444  0CF2                     	goto	i1l2544
  7445  0CF2  2CF3               	line	20
  7446                           	
  7447                           i1l726:	
  7448  0CF3                     	line	21
  7449                           	
  7450                           i1l2544:	
  7451  0CF3                     	movlw	01h
  7452  0CF3  3001               	
  7453                           u268_25:
  7454  0CF4                     	clrc
  7455  0CF4  1003               	rlf	(i1___lwdiv@quotient),f
  7456  0CF5  0DF6               	rlf	(i1___lwdiv@quotient+1),f
  7457  0CF6  0DF7               	addlw	-1
  7458  0CF7  3EFF               	skipz
  7459  0CF8  1D03               	goto	u268_25
  7460  0CF9  2CF4               	line	22
  7461                           	movf	(i1___lwdiv@divisor+1),w
  7462  0CFA  0872               	subwf	(i1___lwdiv@dividend+1),w
  7463  0CFB  0274               	skipz
  7464  0CFC  1D03               	goto	u269_25
  7465  0CFD  2D00               	movf	(i1___lwdiv@divisor),w
  7466  0CFE  0871               	subwf	(i1___lwdiv@dividend),w
  7467  0CFF  0273               u269_25:
  7468  0D00                     	skipc
  7469  0D00  1C03               	goto	u269_21
  7470  0D01  2D03               	goto	u269_20
  7471  0D02  2D04               u269_21:
  7472  0D03                     	goto	i1l2550
  7473  0D03  2D0C               u269_20:
  7474  0D04                     	line	23
  7475                           	
  7476                           i1l2546:	
  7477  0D04                     	movf	(i1___lwdiv@divisor),w
  7478  0D04  0871               	subwf	(i1___lwdiv@dividend),f
  7479  0D05  02F3               	movf	(i1___lwdiv@divisor+1),w
  7480  0D06  0872               	skipc
  7481  0D07  1C03               	decf	(i1___lwdiv@dividend+1),f
  7482  0D08  03F4               	subwf	(i1___lwdiv@dividend+1),f
  7483  0D09  02F4               	line	24
  7484                           	
  7485                           i1l2548:	
  7486  0D0A                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
  7487  0D0A  1476               	goto	i1l2550
  7488  0D0B  2D0C               	line	25
  7489                           	
  7490                           i1l727:	
  7491  0D0C                     	line	26
  7492                           	
  7493                           i1l2550:	
  7494  0D0C                     	movlw	01h
  7495  0D0C  3001               	
  7496                           u270_25:
  7497  0D0D                     	clrc
  7498  0D0D  1003               	rrf	(i1___lwdiv@divisor+1),f
  7499  0D0E  0CF2               	rrf	(i1___lwdiv@divisor),f
  7500  0D0F  0CF1               	addlw	-1
  7501  0D10  3EFF               	skipz
  7502  0D11  1D03               	goto	u270_25
  7503  0D12  2D0D               	line	27
  7504                           	
  7505                           i1l2552:	
  7506  0D13                     	movlw	01h
  7507  0D13  3001               	subwf	(i1___lwdiv@counter),f
  7508  0D14  02F8               	btfss	status,2
  7509  0D15  1D03               	goto	u271_21
  7510  0D16  2D18               	goto	u271_20
  7511  0D17  2D19               u271_21:
  7512  0D18                     	goto	i1l2544
  7513  0D18  2CF3               u271_20:
  7514  0D19                     	goto	i1l2554
  7515  0D19  2D1B               	
  7516                           i1l728:	
  7517  0D1A                     	goto	i1l2554
  7518  0D1A  2D1B               	line	28
  7519                           	
  7520                           i1l722:	
  7521  0D1B                     	line	29
  7522                           	
  7523                           i1l2554:	
  7524  0D1B                     	movf	(i1___lwdiv@quotient+1),w
  7525  0D1B  0877               	movwf	(?i1___lwdiv+1)
  7526  0D1C  00F2               	movf	(i1___lwdiv@quotient),w
  7527  0D1D  0876               	movwf	(?i1___lwdiv)
  7528  0D1E  00F1               	goto	i1l729
  7529  0D1F  2D20               	
  7530                           i1l2556:	
  7531  0D20                     	line	30
  7532                           	
  7533                           i1l729:	
  7534  0D20                     	return
  7535  0D20  0008               	opt stack 0
  7536                           GLOBAL	__end_ofi1___lwdiv
  7537                           	__end_ofi1___lwdiv:
  7538  0D21                     	signat	i1___lwdiv,90
  7539                           	global	_is_deadzone
  7540                           
  7541 ;; *************** function _is_deadzone *****************
  7542 ;; Defined at:
  7543 ;;		line 20 in file "Volume.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  currentStep     2   37[BANK0 ] int 
  7546 ;;  adcResult       2   39[BANK0 ] int 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  turnPoint       2   48[BANK0 ] int 
  7549 ;;  deadzoneHigh    2   45[BANK0 ] int 
  7550 ;;  deadzoneLow     2   43[BANK0 ] int 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  2   37[BANK0 ] int 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7560 ;;      Params:         0       4       0       0       0
  7561 ;;      Locals:         0       7       0       0       0
  7562 ;;      Temps:          0       2       0       0       0
  7563 ;;      Totals:         0      13       0       0       0
  7564 ;;Total ram usage:       13 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:    1
  7567 ;; This function calls:
  7568 ;;		___fladd
  7569 ;;		___fltol
  7570 ;;		___xxtofl
  7571 ;;		i1___wmul
  7572 ;; This function is called by:
  7573 ;;		_handle_potmeter
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7577                           	file	"Volume.c"
  7578                           	line	20
  7579                           global __ptext25
  7580                           __ptext25:	;psect for function _is_deadzone
  7581  0324                     psect	text25
  7582                           	file	"Volume.c"
  7583                           	line	20
  7584                           	global	__size_of_is_deadzone
  7585                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  7586  00C6                     	
  7587                           _is_deadzone:	
  7588  0324                     ;incstack = 0
  7589 ;; hardware stack exceeded
  7590                           	opt	stack 0
  7591                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7592                           	line	22
  7593                           	
  7594                           i1l2462:	
  7595  0324                     ;Volume.c: 20: int is_deadzone(int currentStep, int adcResult);Volume.c: 21: {;Volume.c:
                                  22:     int turnPoint = step_size * currentStep;
  7596                           	movlw	low(_step_size|8000h)
  7597  0324  308E               	movwf	fsr0
  7598  0325  0084               	movlw	high(_step_size|8000h)
  7599  0326  3089               	bcf	status, 5	;RP0=0, select bank0
  7600  0327  1283               	bcf	status, 6	;RP1=0, select bank0
  7601  0328  1303               	movwf	btemp+1
  7602  0329  00FF               	fcall	stringtab
  7603  032A  120A  158A  2000  120A  118A  	movwf	(i1___wmul@multiplier)
  7604  032F  00F1               	fcall	stringtab
  7605  0330  120A  158A  2000  120A  118A  	movwf	(i1___wmul@multiplier+1)
  7606  0335  00F2               	movf	(is_deadzone@currentStep+1),w
  7607  0336  0846               	movwf	(i1___wmul@multiplicand+1)
  7608  0337  00F4               	movf	(is_deadzone@currentStep),w
  7609  0338  0845               	movwf	(i1___wmul@multiplicand)
  7610  0339  00F3               	fcall	i1___wmul
  7611  033A  120A  158A  2321  120A  118A  	movf	(1+(?i1___wmul)),w
  7612  033F  0872               	bcf	status, 5	;RP0=0, select bank0
  7613  0340  1283               	bcf	status, 6	;RP1=0, select bank0
  7614  0341  1303               	movwf	(is_deadzone@turnPoint+1)
  7615  0342  00D1               	movf	(0+(?i1___wmul)),w
  7616  0343  0871               	movwf	(is_deadzone@turnPoint)
  7617  0344  00D0               	line	24
  7618                           	
  7619                           i1l2464:	
  7620  0345                     ;Volume.c: 24:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  7621                           	movf	(is_deadzone@turnPoint),w
  7622  0345  0850               	movwf	(___xxtofl@val)
  7623  0346  00F1               	movf	(is_deadzone@turnPoint+1),w
  7624  0347  0851               	movwf	(___xxtofl@val+1)
  7625  0348  00F2               	movlw	0
  7626  0349  3000               	btfsc	(___xxtofl@val+1),7
  7627  034A  1BF2               	movlw	255
  7628  034B  30FF               	movwf	(___xxtofl@val+2)
  7629  034C  00F3               	movwf	(___xxtofl@val+3)
  7630  034D  00F4               	movlw	low(01h)
  7631  034E  3001               	fcall	___xxtofl
  7632  034F  120A  118A  2260  120A  118A  	movf	(3+(?___xxtofl)),w
  7633  0354  0874               	bcf	status, 5	;RP0=0, select bank0
  7634  0355  1283               	bcf	status, 6	;RP1=0, select bank0
  7635  0356  1303               	movwf	(___fladd@a+3)
  7636  0357  00AD               	movf	(2+(?___xxtofl)),w
  7637  0358  0873               	movwf	(___fladd@a+2)
  7638  0359  00AC               	movf	(1+(?___xxtofl)),w
  7639  035A  0872               	movwf	(___fladd@a+1)
  7640  035B  00AB               	movf	(0+(?___xxtofl)),w
  7641  035C  0871               	movwf	(___fladd@a)
  7642  035D  00AA               
  7643                           	movlw	0xc1
  7644  035E  30C1               	movwf	(___fladd@b+3)
  7645  035F  00A9               	movlw	0x23
  7646  0360  3023               	movwf	(___fladd@b+2)
  7647  0361  00A8               	movlw	0xae
  7648  0362  30AE               	movwf	(___fladd@b+1)
  7649  0363  00A7               	movlw	0x14
  7650  0364  3014               	movwf	(___fladd@b)
  7651  0365  00A6               
  7652                           	fcall	___fladd
  7653  0366  120A  118A  2520  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7654  036B  1283               	bcf	status, 6	;RP1=0, select bank0
  7655  036C  1303               	movf	(3+(?___fladd)),w
  7656  036D  0829               	movwf	(___fltol@f1+3)
  7657  036E  00BD               	movf	(2+(?___fladd)),w
  7658  036F  0828               	movwf	(___fltol@f1+2)
  7659  0370  00BC               	movf	(1+(?___fladd)),w
  7660  0371  0827               	movwf	(___fltol@f1+1)
  7661  0372  00BB               	movf	(0+(?___fladd)),w
  7662  0373  0826               	movwf	(___fltol@f1)
  7663  0374  00BA               
  7664                           	fcall	___fltol
  7665  0375  120A  118A  21C4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7666  037A  1283               	bcf	status, 6	;RP1=0, select bank0
  7667  037B  1303               	movf	(1+(?___fltol)),w
  7668  037C  083B               	movwf	(is_deadzone@deadzoneLow+1)
  7669  037D  00CC               	movf	(0+(?___fltol)),w
  7670  037E  083A               	movwf	(is_deadzone@deadzoneLow)
  7671  037F  00CB               	line	25
  7672                           	
  7673                           i1l2466:	
  7674  0380                     ;Volume.c: 25:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  7675                           	movf	(is_deadzone@turnPoint),w
  7676  0380  0850               	movwf	(___xxtofl@val)
  7677  0381  00F1               	movf	(is_deadzone@turnPoint+1),w
  7678  0382  0851               	movwf	(___xxtofl@val+1)
  7679  0383  00F2               	movlw	0
  7680  0384  3000               	btfsc	(___xxtofl@val+1),7
  7681  0385  1BF2               	movlw	255
  7682  0386  30FF               	movwf	(___xxtofl@val+2)
  7683  0387  00F3               	movwf	(___xxtofl@val+3)
  7684  0388  00F4               	movlw	low(01h)
  7685  0389  3001               	fcall	___xxtofl
  7686  038A  120A  118A  2260  120A  118A  	movf	(3+(?___xxtofl)),w
  7687  038F  0874               	bcf	status, 5	;RP0=0, select bank0
  7688  0390  1283               	bcf	status, 6	;RP1=0, select bank0
  7689  0391  1303               	movwf	(___fladd@a+3)
  7690  0392  00AD               	movf	(2+(?___xxtofl)),w
  7691  0393  0873               	movwf	(___fladd@a+2)
  7692  0394  00AC               	movf	(1+(?___xxtofl)),w
  7693  0395  0872               	movwf	(___fladd@a+1)
  7694  0396  00AB               	movf	(0+(?___xxtofl)),w
  7695  0397  0871               	movwf	(___fladd@a)
  7696  0398  00AA               
  7697                           	movlw	0x41
  7698  0399  3041               	movwf	(___fladd@b+3)
  7699  039A  00A9               	movlw	0x23
  7700  039B  3023               	movwf	(___fladd@b+2)
  7701  039C  00A8               	movlw	0xae
  7702  039D  30AE               	movwf	(___fladd@b+1)
  7703  039E  00A7               	movlw	0x14
  7704  039F  3014               	movwf	(___fladd@b)
  7705  03A0  00A6               
  7706                           	fcall	___fladd
  7707  03A1  120A  118A  2520  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7708  03A6  1283               	bcf	status, 6	;RP1=0, select bank0
  7709  03A7  1303               	movf	(3+(?___fladd)),w
  7710  03A8  0829               	movwf	(___fltol@f1+3)
  7711  03A9  00BD               	movf	(2+(?___fladd)),w
  7712  03AA  0828               	movwf	(___fltol@f1+2)
  7713  03AB  00BC               	movf	(1+(?___fladd)),w
  7714  03AC  0827               	movwf	(___fltol@f1+1)
  7715  03AD  00BB               	movf	(0+(?___fladd)),w
  7716  03AE  0826               	movwf	(___fltol@f1)
  7717  03AF  00BA               
  7718                           	fcall	___fltol
  7719  03B0  120A  118A  21C4  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7720  03B5  1283               	bcf	status, 6	;RP1=0, select bank0
  7721  03B6  1303               	movf	(1+(?___fltol)),w
  7722  03B7  083B               	movwf	(is_deadzone@deadzoneHigh+1)
  7723  03B8  00CE               	movf	(0+(?___fltol)),w
  7724  03B9  083A               	movwf	(is_deadzone@deadzoneHigh)
  7725  03BA  00CD               	line	27
  7726                           	
  7727                           i1l2468:	
  7728  03BB                     ;Volume.c: 27:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  7729                           	clrf	(_is_deadzone$867)
  7730  03BB  01CF               	
  7731                           i1l2470:	
  7732  03BC                     	movf	(is_deadzone@deadzoneLow+1),w
  7733  03BC  084C               	xorlw	80h
  7734  03BD  3A80               	movwf	(??_is_deadzone+0)+0
  7735  03BE  00C9               	movf	(is_deadzone@adcResult+1),w
  7736  03BF  0848               	xorlw	80h
  7737  03C0  3A80               	subwf	(??_is_deadzone+0)+0,w
  7738  03C1  0249               	skipz
  7739  03C2  1D03               	goto	u263_25
  7740  03C3  2BC6               	movf	(is_deadzone@adcResult),w
  7741  03C4  0847               	subwf	(is_deadzone@deadzoneLow),w
  7742  03C5  024B               u263_25:
  7743  03C6                     
  7744                           	skipnc
  7745  03C6  1803               	goto	u263_21
  7746  03C7  2BC9               	goto	u263_20
  7747  03C8  2BCA               u263_21:
  7748  03C9                     	goto	i1l2476
  7749  03C9  2BDF               u263_20:
  7750  03CA                     	
  7751                           i1l2472:	
  7752  03CA                     	bcf	status, 5	;RP0=0, select bank0
  7753  03CA  1283               	bcf	status, 6	;RP1=0, select bank0
  7754  03CB  1303               	movf	(is_deadzone@adcResult+1),w
  7755  03CC  0848               	xorlw	80h
  7756  03CD  3A80               	movwf	(??_is_deadzone+0)+0
  7757  03CE  00C9               	movf	(is_deadzone@deadzoneHigh+1),w
  7758  03CF  084E               	xorlw	80h
  7759  03D0  3A80               	subwf	(??_is_deadzone+0)+0,w
  7760  03D1  0249               	skipz
  7761  03D2  1D03               	goto	u264_25
  7762  03D3  2BD6               	movf	(is_deadzone@deadzoneHigh),w
  7763  03D4  084D               	subwf	(is_deadzone@adcResult),w
  7764  03D5  0247               u264_25:
  7765  03D6                     
  7766                           	skipnc
  7767  03D6  1803               	goto	u264_21
  7768  03D7  2BD9               	goto	u264_20
  7769  03D8  2BDA               u264_21:
  7770  03D9                     	goto	i1l2476
  7771  03D9  2BDF               u264_20:
  7772  03DA                     	
  7773                           i1l2474:	
  7774  03DA                     	bcf	status, 5	;RP0=0, select bank0
  7775  03DA  1283               	bcf	status, 6	;RP1=0, select bank0
  7776  03DB  1303               	clrf	(_is_deadzone$867)
  7777  03DC  01CF               	incf	(_is_deadzone$867),f
  7778  03DD  0ACF               	goto	i1l2476
  7779  03DE  2BDF               	
  7780                           i1l299:	
  7781  03DF                     	
  7782                           i1l2476:	
  7783  03DF                     	bcf	status, 5	;RP0=0, select bank0
  7784  03DF  1283               	bcf	status, 6	;RP1=0, select bank0
  7785  03E0  1303               	movf	(_is_deadzone$867),w
  7786  03E1  084F               	movwf	(??_is_deadzone+0)+0
  7787  03E2  00C9               	clrf	(??_is_deadzone+0)+0+1
  7788  03E3  01CA               	movf	0+(??_is_deadzone+0)+0,w
  7789  03E4  0849               	movwf	(?_is_deadzone)
  7790  03E5  00C5               	movf	1+(??_is_deadzone+0)+0,w
  7791  03E6  084A               	movwf	(?_is_deadzone+1)
  7792  03E7  00C6               	goto	i1l300
  7793  03E8  2BE9               	
  7794                           i1l2478:	
  7795  03E9                     	line	28
  7796                           	
  7797                           i1l300:	
  7798  03E9                     	return
  7799  03E9  0008               	opt stack 0
  7800                           GLOBAL	__end_of_is_deadzone
  7801                           	__end_of_is_deadzone:
  7802  03EA                     	signat	_is_deadzone,8314
  7803                           	global	i1___wmul
  7804                           
  7805 ;; *************** function i1___wmul *****************
  7806 ;; Defined at:
  7807 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  multiplier      2    0[COMMON] unsigned int 
  7810 ;;  multiplicand    2    2[COMMON] unsigned int 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  __wmul          2    4[COMMON] unsigned int 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  2    0[COMMON] unsigned int 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7822 ;;      Params:         4       0       0       0       0
  7823 ;;      Locals:         2       0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0
  7825 ;;      Totals:         6       0       0       0       0
  7826 ;;Total ram usage:        6 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_is_deadzone
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7835                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7836                           	line	15
  7837                           global __ptext26
  7838                           __ptext26:	;psect for function i1___wmul
  7839  0B21                     psect	text26
  7840                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7841                           	line	15
  7842                           	global	__size_ofi1___wmul
  7843                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  7844  0028                     	
  7845                           i1___wmul:	
  7846  0B21                     ;incstack = 0
  7847 ;; hardware stack exceeded
  7848                           	opt	stack 0
  7849                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7850                           	line	43
  7851                           	
  7852                           i1l2342:	
  7853  0B21                     	clrf	(i1___wmul@product)
  7854  0B21  01F5               	clrf	(i1___wmul@product+1)
  7855  0B22  01F6               	goto	i1l2344
  7856  0B23  2B24               	line	44
  7857                           	
  7858                           i1l456:	
  7859  0B24                     	line	45
  7860                           	
  7861                           i1l2344:	
  7862  0B24                     	btfss	(i1___wmul@multiplier),(0)&7
  7863  0B24  1C71               	goto	u253_21
  7864  0B25  2B27               	goto	u253_20
  7865  0B26  2B28               u253_21:
  7866  0B27                     	goto	i1l457
  7867  0B27  2B2E               u253_20:
  7868  0B28                     	line	46
  7869                           	
  7870                           i1l2346:	
  7871  0B28                     	movf	(i1___wmul@multiplicand),w
  7872  0B28  0873               	addwf	(i1___wmul@product),f
  7873  0B29  07F5               	skipnc
  7874  0B2A  1803               	incf	(i1___wmul@product+1),f
  7875  0B2B  0AF6               	movf	(i1___wmul@multiplicand+1),w
  7876  0B2C  0874               	addwf	(i1___wmul@product+1),f
  7877  0B2D  07F6               	
  7878                           i1l457:	
  7879  0B2E                     	line	47
  7880                           	movlw	01h
  7881  0B2E  3001               	
  7882                           u254_25:
  7883  0B2F                     	clrc
  7884  0B2F  1003               	rlf	(i1___wmul@multiplicand),f
  7885  0B30  0DF3               	rlf	(i1___wmul@multiplicand+1),f
  7886  0B31  0DF4               	addlw	-1
  7887  0B32  3EFF               	skipz
  7888  0B33  1D03               	goto	u254_25
  7889  0B34  2B2F               	line	48
  7890                           	
  7891                           i1l2348:	
  7892  0B35                     	movlw	01h
  7893  0B35  3001               	
  7894                           u255_25:
  7895  0B36                     	clrc
  7896  0B36  1003               	rrf	(i1___wmul@multiplier+1),f
  7897  0B37  0CF2               	rrf	(i1___wmul@multiplier),f
  7898  0B38  0CF1               	addlw	-1
  7899  0B39  3EFF               	skipz
  7900  0B3A  1D03               	goto	u255_25
  7901  0B3B  2B36               	line	49
  7902                           	
  7903                           i1l2350:	
  7904  0B3C                     	movf	((i1___wmul@multiplier)),w
  7905  0B3C  0871               iorwf	((i1___wmul@multiplier+1)),w
  7906  0B3D  0472               	btfss	status,2
  7907  0B3E  1D03               	goto	u256_21
  7908  0B3F  2B41               	goto	u256_20
  7909  0B40  2B42               u256_21:
  7910  0B41                     	goto	i1l2344
  7911  0B41  2B24               u256_20:
  7912  0B42                     	goto	i1l2352
  7913  0B42  2B43               	
  7914                           i1l458:	
  7915  0B43                     	line	52
  7916                           	
  7917                           i1l2352:	
  7918  0B43                     	movf	(i1___wmul@product+1),w
  7919  0B43  0876               	movwf	(?i1___wmul+1)
  7920  0B44  00F2               	movf	(i1___wmul@product),w
  7921  0B45  0875               	movwf	(?i1___wmul)
  7922  0B46  00F1               	goto	i1l459
  7923  0B47  2B48               	
  7924                           i1l2354:	
  7925  0B48                     	line	53
  7926                           	
  7927                           i1l459:	
  7928  0B48                     	return
  7929  0B48  0008               	opt stack 0
  7930                           GLOBAL	__end_ofi1___wmul
  7931                           	__end_ofi1___wmul:
  7932  0B49                     	signat	i1___wmul,90
  7933                           	global	___xxtofl
  7934                           
  7935 ;; *************** function ___xxtofl *****************
  7936 ;; Defined at:
  7937 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  sign            1    wreg     unsigned char 
  7940 ;;  val             4    0[COMMON] long 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  sign            1    0[BANK0 ] unsigned char 
  7943 ;;  arg             4    2[BANK0 ] unsigned long 
  7944 ;;  exp             1    1[BANK0 ] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  4    0[COMMON] unsigned char 
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7954 ;;      Params:         4       0       0       0       0
  7955 ;;      Locals:         0       6       0       0       0
  7956 ;;      Temps:          4       0       0       0       0
  7957 ;;      Totals:         8       6       0       0       0
  7958 ;;Total ram usage:       14 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_is_deadzone
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           psect	text27,local,class=CODE,delta=2,merge=1,group=1
  7967                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7968                           	line	10
  7969                           global __ptext27
  7970                           __ptext27:	;psect for function ___xxtofl
  7971  0260                     psect	text27
  7972                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7973                           	line	10
  7974                           	global	__size_of___xxtofl
  7975                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  7976  00C4                     	
  7977                           ___xxtofl:	
  7978  0260                     ;incstack = 0
  7979 ;; hardware stack exceeded
  7980                           	opt	stack 0
  7981                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7982                           ;___xxtofl@sign stored from wreg
  7983                           	bcf	status, 5	;RP0=0, select bank0
  7984  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  7985  0261  1303               	movwf	(___xxtofl@sign)
  7986  0262  00A0               	line	15
  7987                           	
  7988                           i1l2298:	
  7989  0263                     	movf	((___xxtofl@sign)),w
  7990  0263  0820               	btfsc	status,2
  7991  0264  1903               	goto	u239_21
  7992  0265  2A67               	goto	u239_20
  7993  0266  2A68               u239_21:
  7994  0267                     	goto	i1l2304
  7995  0267  2A7C               u239_20:
  7996  0268                     	
  7997                           i1l2300:	
  7998  0268                     	btfss	(___xxtofl@val+3),7
  7999  0268  1FF4               	goto	u240_21
  8000  0269  2A6B               	goto	u240_20
  8001  026A  2A6C               u240_21:
  8002  026B                     	goto	i1l2304
  8003  026B  2A7C               u240_20:
  8004  026C                     	line	16
  8005                           	
  8006                           i1l2302:	
  8007  026C                     	comf	(___xxtofl@val)+0,w
  8008  026C  0971               	movwf	(___xxtofl@arg)
  8009  026D  00A2               	comf	(___xxtofl@val)+1,w
  8010  026E  0972               	movwf	(___xxtofl@arg+1)
  8011  026F  00A3               	comf	(___xxtofl@val)+2,w
  8012  0270  0973               	movwf	(___xxtofl@arg+2)
  8013  0271  00A4               	comf	(___xxtofl@val)+3,w
  8014  0272  0974               	movwf	(___xxtofl@arg+3)
  8015  0273  00A5               	incf	(___xxtofl@arg),f
  8016  0274  0AA2               	skipnz
  8017  0275  1903               	incf	(___xxtofl@arg+1),f
  8018  0276  0AA3               	skipnz
  8019  0277  1903               	incf	(___xxtofl@arg+2),f
  8020  0278  0AA4               	skipnz
  8021  0279  1903               	incf	(___xxtofl@arg+3),f
  8022  027A  0AA5               	line	17
  8023                           	goto	i1l865
  8024  027B  2A84               	line	18
  8025                           	
  8026                           i1l864:	
  8027  027C                     	line	19
  8028                           	
  8029                           i1l2304:	
  8030  027C                     	movf	(___xxtofl@val+3),w
  8031  027C  0874               	movwf	(___xxtofl@arg+3)
  8032  027D  00A5               	movf	(___xxtofl@val+2),w
  8033  027E  0873               	movwf	(___xxtofl@arg+2)
  8034  027F  00A4               	movf	(___xxtofl@val+1),w
  8035  0280  0872               	movwf	(___xxtofl@arg+1)
  8036  0281  00A3               	movf	(___xxtofl@val),w
  8037  0282  0871               	movwf	(___xxtofl@arg)
  8038  0283  00A2               
  8039                           	line	20
  8040                           	
  8041                           i1l865:	
  8042  0284                     	line	21
  8043                           	movf	(___xxtofl@val+3),w
  8044  0284  0874               	iorwf	(___xxtofl@val+2),w
  8045  0285  0473               	iorwf	(___xxtofl@val+1),w
  8046  0286  0472               	iorwf	(___xxtofl@val),w
  8047  0287  0471               	skipz
  8048  0288  1D03               	goto	u241_21
  8049  0289  2A8B               	goto	u241_20
  8050  028A  2A8C               u241_21:
  8051  028B                     	goto	i1l2310
  8052  028B  2A96               u241_20:
  8053  028C                     	line	22
  8054                           	
  8055                           i1l2306:	
  8056  028C                     	movlw	0x0
  8057  028C  3000               	movwf	(?___xxtofl+3)
  8058  028D  00F4               	movlw	0x0
  8059  028E  3000               	movwf	(?___xxtofl+2)
  8060  028F  00F3               	movlw	0x0
  8061  0290  3000               	movwf	(?___xxtofl+1)
  8062  0291  00F2               	movlw	0x0
  8063  0292  3000               	movwf	(?___xxtofl)
  8064  0293  00F1               
  8065                           	goto	i1l867
  8066  0294  2B23               	
  8067                           i1l2308:	
  8068  0295                     	goto	i1l867
  8069  0295  2B23               	
  8070                           i1l866:	
  8071  0296                     	line	23
  8072                           	
  8073                           i1l2310:	
  8074  0296                     	movlw	low(096h)
  8075  0296  3096               	movwf	(??___xxtofl+0)+0
  8076  0297  00F5               	movf	(??___xxtofl+0)+0,w
  8077  0298  0875               	movwf	(___xxtofl@exp)
  8078  0299  00A1               	line	24
  8079                           	goto	i1l2314
  8080  029A  2AA9               	
  8081                           i1l869:	
  8082  029B                     	line	25
  8083                           	
  8084                           i1l2312:	
  8085  029B                     	movlw	low(01h)
  8086  029B  3001               	movwf	(??___xxtofl+0)+0
  8087  029C  00F5               	movf	(??___xxtofl+0)+0,w
  8088  029D  0875               	addwf	(___xxtofl@exp),f
  8089  029E  07A1               	line	26
  8090                           	movlw	01h
  8091  029F  3001               u242_25:
  8092  02A0                     	clrc
  8093  02A0  1003               	rrf	(___xxtofl@arg+3),f
  8094  02A1  0CA5               	rrf	(___xxtofl@arg+2),f
  8095  02A2  0CA4               	rrf	(___xxtofl@arg+1),f
  8096  02A3  0CA3               	rrf	(___xxtofl@arg),f
  8097  02A4  0CA2               	addlw	-1
  8098  02A5  3EFF               	skipz
  8099  02A6  1D03               	goto	u242_25
  8100  02A7  2AA0               
  8101                           	goto	i1l2314
  8102  02A8  2AA9               	line	27
  8103                           	
  8104                           i1l868:	
  8105  02A9                     	line	24
  8106                           	
  8107                           i1l2314:	
  8108  02A9                     	movlw	high highword(0FE000000h)
  8109  02A9  30FE               	andwf	(___xxtofl@arg+3),w
  8110  02AA  0525               	btfss	status,2
  8111  02AB  1D03               	goto	u243_21
  8112  02AC  2AAE               	goto	u243_20
  8113  02AD  2AAF               u243_21:
  8114  02AE                     	goto	i1l2312
  8115  02AE  2A9B               u243_20:
  8116  02AF                     	goto	i1l871
  8117  02AF  2ACC               	
  8118                           i1l870:	
  8119  02B0                     	line	28
  8120                           	goto	i1l871
  8121  02B0  2ACC               	
  8122                           i1l872:	
  8123  02B1                     	line	29
  8124                           	
  8125                           i1l2316:	
  8126  02B1                     	movlw	low(01h)
  8127  02B1  3001               	movwf	(??___xxtofl+0)+0
  8128  02B2  00F5               	movf	(??___xxtofl+0)+0,w
  8129  02B3  0875               	addwf	(___xxtofl@exp),f
  8130  02B4  07A1               	line	30
  8131                           	
  8132                           i1l2318:	
  8133  02B5                     	movlw	01h
  8134  02B5  3001               	addwf	(___xxtofl@arg),f
  8135  02B6  07A2               	movlw	0
  8136  02B7  3000               	skipnc
  8137  02B8  1803               movlw 1
  8138  02B9  3001               	addwf	(___xxtofl@arg+1),f
  8139  02BA  07A3               	movlw	0
  8140  02BB  3000               	skipnc
  8141  02BC  1803               movlw 1
  8142  02BD  3001               	addwf	(___xxtofl@arg+2),f
  8143  02BE  07A4               	movlw	0
  8144  02BF  3000               	skipnc
  8145  02C0  1803               movlw 1
  8146  02C1  3001               	addwf	(___xxtofl@arg+3),f
  8147  02C2  07A5               	line	31
  8148                           	
  8149                           i1l2320:	
  8150  02C3                     	movlw	01h
  8151  02C3  3001               u244_25:
  8152  02C4                     	clrc
  8153  02C4  1003               	rrf	(___xxtofl@arg+3),f
  8154  02C5  0CA5               	rrf	(___xxtofl@arg+2),f
  8155  02C6  0CA4               	rrf	(___xxtofl@arg+1),f
  8156  02C7  0CA3               	rrf	(___xxtofl@arg),f
  8157  02C8  0CA2               	addlw	-1
  8158  02C9  3EFF               	skipz
  8159  02CA  1D03               	goto	u244_25
  8160  02CB  2AC4               
  8161                           	line	32
  8162                           	
  8163                           i1l871:	
  8164  02CC                     	line	28
  8165                           	movlw	high highword(0FF000000h)
  8166  02CC  30FF               	andwf	(___xxtofl@arg+3),w
  8167  02CD  0525               	btfss	status,2
  8168  02CE  1D03               	goto	u245_21
  8169  02CF  2AD1               	goto	u245_20
  8170  02D0  2AD2               u245_21:
  8171  02D1                     	goto	i1l2316
  8172  02D1  2AB1               u245_20:
  8173  02D2                     	goto	i1l2324
  8174  02D2  2AE0               	
  8175                           i1l873:	
  8176  02D3                     	line	33
  8177                           	goto	i1l2324
  8178  02D3  2AE0               	
  8179                           i1l875:	
  8180  02D4                     	line	34
  8181                           	
  8182                           i1l2322:	
  8183  02D4                     	movlw	01h
  8184  02D4  3001               	subwf	(___xxtofl@exp),f
  8185  02D5  02A1               	line	35
  8186                           	movlw	01h
  8187  02D6  3001               	movwf	(??___xxtofl+0)+0
  8188  02D7  00F5               u246_25:
  8189  02D8                     	clrc
  8190  02D8  1003               	rlf	(___xxtofl@arg),f
  8191  02D9  0DA2               	rlf	(___xxtofl@arg+1),f
  8192  02DA  0DA3               	rlf	(___xxtofl@arg+2),f
  8193  02DB  0DA4               	rlf	(___xxtofl@arg+3),f
  8194  02DC  0DA5               	decfsz	(??___xxtofl+0)+0
  8195  02DD  0BF5               	goto	u246_25
  8196  02DE  2AD8               	goto	i1l2324
  8197  02DF  2AE0               	line	36
  8198                           	
  8199                           i1l874:	
  8200  02E0                     	line	33
  8201                           	
  8202                           i1l2324:	
  8203  02E0                     	btfsc	(___xxtofl@arg+2),(23)&7
  8204  02E0  1BA4               	goto	u247_21
  8205  02E1  2AE3               	goto	u247_20
  8206  02E2  2AE4               u247_21:
  8207  02E3                     	goto	i1l878
  8208  02E3  2AEB               u247_20:
  8209  02E4                     	
  8210                           i1l2326:	
  8211  02E4                     	movlw	low(02h)
  8212  02E4  3002               	subwf	(___xxtofl@exp),w
  8213  02E5  0221               	skipnc
  8214  02E6  1803               	goto	u248_21
  8215  02E7  2AE9               	goto	u248_20
  8216  02E8  2AEA               u248_21:
  8217  02E9                     	goto	i1l2322
  8218  02E9  2AD4               u248_20:
  8219  02EA                     	goto	i1l878
  8220  02EA  2AEB               	
  8221                           i1l877:	
  8222  02EB                     	
  8223                           i1l878:	
  8224  02EB                     	line	37
  8225                           	btfsc	(___xxtofl@exp),(0)&7
  8226  02EB  1821               	goto	u249_21
  8227  02EC  2AEE               	goto	u249_20
  8228  02ED  2AEF               u249_21:
  8229  02EE                     	goto	i1l879
  8230  02EE  2AF7               u249_20:
  8231  02EF                     	line	38
  8232                           	
  8233                           i1l2328:	
  8234  02EF                     	movlw	0FFh
  8235  02EF  30FF               	andwf	(___xxtofl@arg),f
  8236  02F0  05A2               	movlw	0FFh
  8237  02F1  30FF               	andwf	(___xxtofl@arg+1),f
  8238  02F2  05A3               	movlw	07Fh
  8239  02F3  307F               	andwf	(___xxtofl@arg+2),f
  8240  02F4  05A4               	movlw	0FFh
  8241  02F5  30FF               	andwf	(___xxtofl@arg+3),f
  8242  02F6  05A5               	
  8243                           i1l879:	
  8244  02F7                     	line	39
  8245                           	clrc
  8246  02F7  1003               	rrf	(___xxtofl@exp),f
  8247  02F8  0CA1               
  8248                           	line	40
  8249                           	
  8250                           i1l2330:	
  8251  02F9                     	movf	(___xxtofl@exp),w
  8252  02F9  0821               	movwf	(??___xxtofl+0)+0
  8253  02FA  00F5               	clrf	(??___xxtofl+0)+0+1
  8254  02FB  01F6               	clrf	(??___xxtofl+0)+0+2
  8255  02FC  01F7               	clrf	(??___xxtofl+0)+0+3
  8256  02FD  01F8               	movlw	018h
  8257  02FE  3018               u250_25:
  8258  02FF                     	clrc
  8259  02FF  1003               	rlf	(??___xxtofl+0)+0,f
  8260  0300  0DF5               	rlf	(??___xxtofl+0)+1,f
  8261  0301  0DF6               	rlf	(??___xxtofl+0)+2,f
  8262  0302  0DF7               	rlf	(??___xxtofl+0)+3,f
  8263  0303  0DF8               u250_20:
  8264  0304                     	addlw	-1
  8265  0304  3EFF               	skipz
  8266  0305  1D03               	goto	u250_25
  8267  0306  2AFF               	movf	0+(??___xxtofl+0)+0,w
  8268  0307  0875               	iorwf	(___xxtofl@arg),f
  8269  0308  04A2               	movf	1+(??___xxtofl+0)+0,w
  8270  0309  0876               	iorwf	(___xxtofl@arg+1),f
  8271  030A  04A3               	movf	2+(??___xxtofl+0)+0,w
  8272  030B  0877               	iorwf	(___xxtofl@arg+2),f
  8273  030C  04A4               	movf	3+(??___xxtofl+0)+0,w
  8274  030D  0878               	iorwf	(___xxtofl@arg+3),f
  8275  030E  04A5               	line	41
  8276                           	
  8277                           i1l2332:	
  8278  030F                     	movf	((___xxtofl@sign)),w
  8279  030F  0820               	btfsc	status,2
  8280  0310  1903               	goto	u251_21
  8281  0311  2B13               	goto	u251_20
  8282  0312  2B14               u251_21:
  8283  0313                     	goto	i1l2338
  8284  0313  2B1A               u251_20:
  8285  0314                     	
  8286                           i1l2334:	
  8287  0314                     	btfss	(___xxtofl@val+3),7
  8288  0314  1FF4               	goto	u252_21
  8289  0315  2B17               	goto	u252_20
  8290  0316  2B18               u252_21:
  8291  0317                     	goto	i1l2338
  8292  0317  2B1A               u252_20:
  8293  0318                     	line	42
  8294                           	
  8295                           i1l2336:	
  8296  0318                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  8297  0318  17A5               	goto	i1l2338
  8298  0319  2B1A               	
  8299                           i1l880:	
  8300  031A                     	line	43
  8301                           	
  8302                           i1l2338:	
  8303  031A                     	movf	(___xxtofl@arg+3),w
  8304  031A  0825               	movwf	(?___xxtofl+3)
  8305  031B  00F4               	movf	(___xxtofl@arg+2),w
  8306  031C  0824               	movwf	(?___xxtofl+2)
  8307  031D  00F3               	movf	(___xxtofl@arg+1),w
  8308  031E  0823               	movwf	(?___xxtofl+1)
  8309  031F  00F2               	movf	(___xxtofl@arg),w
  8310  0320  0822               	movwf	(?___xxtofl)
  8311  0321  00F1               
  8312                           	goto	i1l867
  8313  0322  2B23               	
  8314                           i1l2340:	
  8315  0323                     	line	44
  8316                           	
  8317                           i1l867:	
  8318  0323                     	return
  8319  0323  0008               	opt stack 0
  8320                           GLOBAL	__end_of___xxtofl
  8321                           	__end_of___xxtofl:
  8322  0324                     	signat	___xxtofl,8316
  8323                           	global	___fltol
  8324                           
  8325 ;; *************** function ___fltol *****************
  8326 ;; Defined at:
  8327 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8328 ;; Parameters:    Size  Location     Type
  8329 ;;  f1              4   26[BANK0 ] unsigned char 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  exp1            1   36[BANK0 ] unsigned char 
  8332 ;;  sign1           1   35[BANK0 ] unsigned char 
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  4   26[BANK0 ] long 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8342 ;;      Params:         0       4       0       0       0
  8343 ;;      Locals:         0       2       0       0       0
  8344 ;;      Temps:          0       5       0       0       0
  8345 ;;      Totals:         0      11       0       0       0
  8346 ;;Total ram usage:       11 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; This function calls:
  8349 ;;		Nothing
  8350 ;; This function is called by:
  8351 ;;		_is_deadzone
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           psect	text28,local,class=CODE,delta=2,merge=1,group=1
  8355                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8356                           	line	43
  8357                           global __ptext28
  8358                           __ptext28:	;psect for function ___fltol
  8359  01C4                     psect	text28
  8360                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8361                           	line	43
  8362                           	global	__size_of___fltol
  8363                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  8364  009C                     	
  8365                           ___fltol:	
  8366  01C4                     ;incstack = 0
  8367 ;; hardware stack exceeded
  8368                           	opt	stack 0
  8369                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8370                           	line	47
  8371                           	
  8372                           i1l2068:	
  8373  01C4                     	bcf	status, 5	;RP0=0, select bank0
  8374  01C4  1283               	bcf	status, 6	;RP1=0, select bank0
  8375  01C5  1303               	movf	(___fltol@f1),w
  8376  01C6  083A               	movwf	(??___fltol+0)+0
  8377  01C7  00BE               	movf	(___fltol@f1+1),w
  8378  01C8  083B               	movwf	((??___fltol+0)+0+1)
  8379  01C9  00BF               	movf	(___fltol@f1+2),w
  8380  01CA  083C               	movwf	((??___fltol+0)+0+2)
  8381  01CB  00C0               	movf	(___fltol@f1+3),w
  8382  01CC  083D               	movwf	((??___fltol+0)+0+3)
  8383  01CD  00C1               	clrc
  8384  01CE  1003               	rlf	(??___fltol+0)+2,w
  8385  01CF  0D40               	rlf	(??___fltol+0)+3,w
  8386  01D0  0D41               	movwf	(??___fltol+4)+0
  8387  01D1  00C2               	movf	(??___fltol+4)+0,w
  8388  01D2  0842               	movwf	(___fltol@exp1)
  8389  01D3  00C4               	movf	(((___fltol@exp1))),w
  8390  01D4  0844               	btfss	status,2
  8391  01D5  1D03               	goto	u183_21
  8392  01D6  29D8               	goto	u183_20
  8393  01D7  29D9               u183_21:
  8394  01D8                     	goto	i1l2074
  8395  01D8  29E3               u183_20:
  8396  01D9                     	line	48
  8397                           	
  8398                           i1l2070:	
  8399  01D9                     	movlw	high highword(0)
  8400  01D9  3000               	movwf	(?___fltol+3)
  8401  01DA  00BD               	movlw	low highword(0)
  8402  01DB  3000               	movwf	(?___fltol+2)
  8403  01DC  00BC               	movlw	high(0)
  8404  01DD  3000               	movwf	(?___fltol+1)
  8405  01DE  00BB               	movlw	low(0)
  8406  01DF  3000               	movwf	(?___fltol)
  8407  01E0  00BA               
  8408                           	goto	i1l643
  8409  01E1  2A5F               	
  8410                           i1l2072:	
  8411  01E2                     	goto	i1l643
  8412  01E2  2A5F               	
  8413                           i1l642:	
  8414  01E3                     	line	49
  8415                           	
  8416                           i1l2074:	
  8417  01E3                     	movf	(___fltol@f1),w
  8418  01E3  083A               	movwf	(??___fltol+0)+0
  8419  01E4  00BE               	movf	(___fltol@f1+1),w
  8420  01E5  083B               	movwf	((??___fltol+0)+0+1)
  8421  01E6  00BF               	movf	(___fltol@f1+2),w
  8422  01E7  083C               	movwf	((??___fltol+0)+0+2)
  8423  01E8  00C0               	movf	(___fltol@f1+3),w
  8424  01E9  083D               	movwf	((??___fltol+0)+0+3)
  8425  01EA  00C1               	movlw	01Fh
  8426  01EB  301F               u184_25:
  8427  01EC                     	clrc
  8428  01EC  1003               	rrf	(??___fltol+0)+3,f
  8429  01ED  0CC1               	rrf	(??___fltol+0)+2,f
  8430  01EE  0CC0               	rrf	(??___fltol+0)+1,f
  8431  01EF  0CBF               	rrf	(??___fltol+0)+0,f
  8432  01F0  0CBE               u184_20:
  8433  01F1                     	addlw	-1
  8434  01F1  3EFF               	skipz
  8435  01F2  1D03               	goto	u184_25
  8436  01F3  29EC               	movf	0+(??___fltol+0)+0,w
  8437  01F4  083E               	movwf	(??___fltol+4)+0
  8438  01F5  00C2               	movf	(??___fltol+4)+0,w
  8439  01F6  0842               	movwf	(___fltol@sign1)
  8440  01F7  00C3               	line	50
  8441                           	
  8442                           i1l2076:	
  8443  01F8                     	bsf	(___fltol@f1)+(23/8),(23)&7
  8444  01F8  17BC               	line	51
  8445                           	
  8446                           i1l2078:	
  8447  01F9                     	movlw	0FFh
  8448  01F9  30FF               	andwf	(___fltol@f1),f
  8449  01FA  05BA               	movlw	0FFh
  8450  01FB  30FF               	andwf	(___fltol@f1+1),f
  8451  01FC  05BB               	movlw	0FFh
  8452  01FD  30FF               	andwf	(___fltol@f1+2),f
  8453  01FE  05BC               	movlw	0
  8454  01FF  3000               	andwf	(___fltol@f1+3),f
  8455  0200  05BD               	line	52
  8456                           	
  8457                           i1l2080:	
  8458  0201                     	movlw	096h
  8459  0201  3096               	subwf	(___fltol@exp1),f
  8460  0202  02C4               	line	53
  8461                           	
  8462                           i1l2082:	
  8463  0203                     	btfss	(___fltol@exp1),7
  8464  0203  1FC4               	goto	u185_21
  8465  0204  2A06               	goto	u185_20
  8466  0205  2A07               u185_21:
  8467  0206                     	goto	i1l2092
  8468  0206  2A2C               u185_20:
  8469  0207                     	line	54
  8470                           	
  8471                           i1l2084:	
  8472  0207                     	movf	(___fltol@exp1),w
  8473  0207  0844               	xorlw	80h
  8474  0208  3A80               	addlw	-((-23)^80h)
  8475  0209  3E97               	skipnc
  8476  020A  1803               	goto	u186_21
  8477  020B  2A0D               	goto	u186_20
  8478  020C  2A0E               u186_21:
  8479  020D                     	goto	i1l2090
  8480  020D  2A19               u186_20:
  8481  020E                     	line	55
  8482                           	
  8483                           i1l2086:	
  8484  020E                     	movlw	high highword(0)
  8485  020E  3000               	movwf	(?___fltol+3)
  8486  020F  00BD               	movlw	low highword(0)
  8487  0210  3000               	movwf	(?___fltol+2)
  8488  0211  00BC               	movlw	high(0)
  8489  0212  3000               	movwf	(?___fltol+1)
  8490  0213  00BB               	movlw	low(0)
  8491  0214  3000               	movwf	(?___fltol)
  8492  0215  00BA               
  8493                           	goto	i1l643
  8494  0216  2A5F               	
  8495                           i1l2088:	
  8496  0217                     	goto	i1l643
  8497  0217  2A5F               	
  8498                           i1l645:	
  8499  0218                     	goto	i1l2090
  8500  0218  2A19               	line	56
  8501                           	
  8502                           i1l646:	
  8503  0219                     	line	57
  8504                           	
  8505                           i1l2090:	
  8506  0219                     	movlw	01h
  8507  0219  3001               u187_25:
  8508  021A                     	clrc
  8509  021A  1003               	rrf	(___fltol@f1+3),f
  8510  021B  0CBD               	rrf	(___fltol@f1+2),f
  8511  021C  0CBC               	rrf	(___fltol@f1+1),f
  8512  021D  0CBB               	rrf	(___fltol@f1),f
  8513  021E  0CBA               	addlw	-1
  8514  021F  3EFF               	skipz
  8515  0220  1D03               	goto	u187_25
  8516  0221  2A1A               
  8517                           	line	58
  8518                           	movlw	low(01h)
  8519  0222  3001               	movwf	(??___fltol+0)+0
  8520  0223  00BE               	movf	(??___fltol+0)+0,w
  8521  0224  083E               	addwf	(___fltol@exp1),f
  8522  0225  07C4               	btfss	status,2
  8523  0226  1D03               	goto	u188_21
  8524  0227  2A29               	goto	u188_20
  8525  0228  2A2A               u188_21:
  8526  0229                     	goto	i1l2090
  8527  0229  2A19               u188_20:
  8528  022A                     	goto	i1l2100
  8529  022A  2A4F               	
  8530                           i1l647:	
  8531  022B                     	line	59
  8532                           	goto	i1l2100
  8533  022B  2A4F               	
  8534                           i1l644:	
  8535  022C                     	line	60
  8536                           	
  8537                           i1l2092:	
  8538  022C                     	movlw	low(020h)
  8539  022C  3020               	subwf	(___fltol@exp1),w
  8540  022D  0244               	skipc
  8541  022E  1C03               	goto	u189_21
  8542  022F  2A31               	goto	u189_20
  8543  0230  2A32               u189_21:
  8544  0231                     	goto	i1l650
  8545  0231  2A48               u189_20:
  8546  0232                     	line	61
  8547                           	
  8548                           i1l2094:	
  8549  0232                     	movlw	high highword(0)
  8550  0232  3000               	movwf	(?___fltol+3)
  8551  0233  00BD               	movlw	low highword(0)
  8552  0234  3000               	movwf	(?___fltol+2)
  8553  0235  00BC               	movlw	high(0)
  8554  0236  3000               	movwf	(?___fltol+1)
  8555  0237  00BB               	movlw	low(0)
  8556  0238  3000               	movwf	(?___fltol)
  8557  0239  00BA               
  8558                           	goto	i1l643
  8559  023A  2A5F               	
  8560                           i1l2096:	
  8561  023B                     	goto	i1l643
  8562  023B  2A5F               	
  8563                           i1l649:	
  8564  023C                     	line	62
  8565                           	goto	i1l650
  8566  023C  2A48               	
  8567                           i1l651:	
  8568  023D                     	line	63
  8569                           	
  8570                           i1l2098:	
  8571  023D                     	movlw	01h
  8572  023D  3001               	movwf	(??___fltol+0)+0
  8573  023E  00BE               u190_25:
  8574  023F                     	clrc
  8575  023F  1003               	rlf	(___fltol@f1),f
  8576  0240  0DBA               	rlf	(___fltol@f1+1),f
  8577  0241  0DBB               	rlf	(___fltol@f1+2),f
  8578  0242  0DBC               	rlf	(___fltol@f1+3),f
  8579  0243  0DBD               	decfsz	(??___fltol+0)+0
  8580  0244  0BBE               	goto	u190_25
  8581  0245  2A3F               	line	64
  8582                           	movlw	01h
  8583  0246  3001               	subwf	(___fltol@exp1),f
  8584  0247  02C4               	line	65
  8585                           	
  8586                           i1l650:	
  8587  0248                     	line	62
  8588                           	movf	((___fltol@exp1)),w
  8589  0248  0844               	btfss	status,2
  8590  0249  1D03               	goto	u191_21
  8591  024A  2A4C               	goto	u191_20
  8592  024B  2A4D               u191_21:
  8593  024C                     	goto	i1l2098
  8594  024C  2A3D               u191_20:
  8595  024D                     	goto	i1l2100
  8596  024D  2A4F               	
  8597                           i1l652:	
  8598  024E                     	goto	i1l2100
  8599  024E  2A4F               	line	66
  8600                           	
  8601                           i1l648:	
  8602  024F                     	line	67
  8603                           	
  8604                           i1l2100:	
  8605  024F                     	movf	((___fltol@sign1)),w
  8606  024F  0843               	btfsc	status,2
  8607  0250  1903               	goto	u192_21
  8608  0251  2A53               	goto	u192_20
  8609  0252  2A54               u192_21:
  8610  0253                     	goto	i1l653
  8611  0253  2A5F               u192_20:
  8612  0254                     	line	68
  8613                           	
  8614                           i1l2102:	
  8615  0254                     	comf	(___fltol@f1),f
  8616  0254  09BA               	comf	(___fltol@f1+1),f
  8617  0255  09BB               	comf	(___fltol@f1+2),f
  8618  0256  09BC               	comf	(___fltol@f1+3),f
  8619  0257  09BD               	incf	(___fltol@f1),f
  8620  0258  0ABA               	skipnz
  8621  0259  1903               	incf	(___fltol@f1+1),f
  8622  025A  0ABB               	skipnz
  8623  025B  1903               	incf	(___fltol@f1+2),f
  8624  025C  0ABC               	skipnz
  8625  025D  1903               	incf	(___fltol@f1+3),f
  8626  025E  0ABD               	
  8627                           i1l653:	
  8628  025F                     	line	69
  8629                           	line	70
  8630                           	
  8631                           i1l643:	
  8632  025F                     	return
  8633  025F  0008               	opt stack 0
  8634                           GLOBAL	__end_of___fltol
  8635                           	__end_of___fltol:
  8636  0260                     	signat	___fltol,4220
  8637                           	global	___fladd
  8638                           
  8639 ;; *************** function ___fladd *****************
  8640 ;; Defined at:
  8641 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  b               4    6[BANK0 ] long 
  8644 ;;  a               4   10[BANK0 ] long 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;  grs             1   11[COMMON] unsigned char 
  8647 ;;  bexp            1   10[COMMON] unsigned char 
  8648 ;;  aexp            1    9[COMMON] unsigned char 
  8649 ;;  signs           1    8[COMMON] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  4    6[BANK0 ] unsigned char 
  8652 ;; Registers used:
  8653 ;;		wreg, status,2, status,0, btemp+1
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8659 ;;      Params:         0       8       0       0       0
  8660 ;;      Locals:         4       0       0       0       0
  8661 ;;      Temps:          0      12       0       0       0
  8662 ;;      Totals:         4      20       0       0       0
  8663 ;;Total ram usage:       24 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_is_deadzone
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
  8672                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8673                           	line	10
  8674                           global __ptext29
  8675                           __ptext29:	;psect for function ___fladd
  8676  0520                     psect	text29
  8677                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8678                           	line	10
  8679                           	global	__size_of___fladd
  8680                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8681  02C4                     	
  8682                           ___fladd:	
  8683  0520                     ;incstack = 0
  8684 ;; hardware stack exceeded
  8685                           	opt	stack 0
  8686                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8687                           	line	21
  8688                           	
  8689                           i1l2104:	
  8690  0520                     	bcf	status, 5	;RP0=0, select bank0
  8691  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  8692  0521  1303               	movf	0+(___fladd@b)+03h,w
  8693  0522  0829               	andlw	080h
  8694  0523  3980               	movwf	(??___fladd+0)+0
  8695  0524  00AE               	movf	(??___fladd+0)+0,w
  8696  0525  082E               	movwf	(___fladd@signs)
  8697  0526  00F9               	line	22
  8698                           	
  8699                           i1l2106:	
  8700  0527                     	movf	0+(___fladd@b)+03h,w
  8701  0527  0829               	movwf	(??___fladd+0)+0
  8702  0528  00AE               	addwf	(??___fladd+0)+0,w
  8703  0529  072E               	movwf	(??___fladd+1)+0
  8704  052A  00AF               	movf	(??___fladd+1)+0,w
  8705  052B  082F               	movwf	(___fladd@bexp)
  8706  052C  00FB               	line	23
  8707                           	
  8708                           i1l2108:	
  8709  052D                     	btfss	0+(___fladd@b)+02h,(7)&7
  8710  052D  1FA8               	goto	u193_21
  8711  052E  2D30               	goto	u193_20
  8712  052F  2D31               u193_21:
  8713  0530                     	goto	i1l2112
  8714  0530  2D33               u193_20:
  8715  0531                     	line	24
  8716                           	
  8717                           i1l2110:	
  8718  0531                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8719  0531  147B               	goto	i1l2112
  8720  0532  2D33               	line	25
  8721                           	
  8722                           i1l742:	
  8723  0533                     	line	28
  8724                           	
  8725                           i1l2112:	
  8726  0533                     	movf	((___fladd@bexp)),w
  8727  0533  087B               	btfsc	status,2
  8728  0534  1903               	goto	u194_21
  8729  0535  2D37               	goto	u194_20
  8730  0536  2D38               u194_21:
  8731  0537                     	goto	i1l2122
  8732  0537  2D49               u194_20:
  8733  0538                     	line	30
  8734                           	
  8735                           i1l2114:	
  8736  0538                     		incf	((___fladd@bexp)),w
  8737  0538  0A7B               	btfss	status,2
  8738  0539  1D03               	goto	u195_21
  8739  053A  2D3C               	goto	u195_20
  8740  053B  2D3D               u195_21:
  8741  053C                     	goto	i1l2118
  8742  053C  2D46               u195_20:
  8743  053D                     	line	32
  8744                           	
  8745                           i1l2116:	
  8746  053D                     	movlw	0x0
  8747  053D  3000               	movwf	(___fladd@b+3)
  8748  053E  00A9               	movlw	0x0
  8749  053F  3000               	movwf	(___fladd@b+2)
  8750  0540  00A8               	movlw	0x0
  8751  0541  3000               	movwf	(___fladd@b+1)
  8752  0542  00A7               	movlw	0x0
  8753  0543  3000               	movwf	(___fladd@b)
  8754  0544  00A6               
  8755                           	goto	i1l2118
  8756  0545  2D46               	line	33
  8757                           	
  8758                           i1l744:	
  8759  0546                     	line	35
  8760                           	
  8761                           i1l2118:	
  8762  0546                     	bsf	(___fladd@b)+(23/8),(23)&7
  8763  0546  17A8               	line	37
  8764                           	
  8765                           i1l2120:	
  8766  0547                     	clrf	0+(___fladd@b)+03h
  8767  0547  01A9               	line	38
  8768                           	goto	i1l2124
  8769  0548  2D52               	line	39
  8770                           	
  8771                           i1l743:	
  8772  0549                     	line	41
  8773                           	
  8774                           i1l2122:	
  8775  0549                     	movlw	0x0
  8776  0549  3000               	movwf	(___fladd@b+3)
  8777  054A  00A9               	movlw	0x0
  8778  054B  3000               	movwf	(___fladd@b+2)
  8779  054C  00A8               	movlw	0x0
  8780  054D  3000               	movwf	(___fladd@b+1)
  8781  054E  00A7               	movlw	0x0
  8782  054F  3000               	movwf	(___fladd@b)
  8783  0550  00A6               
  8784                           	goto	i1l2124
  8785  0551  2D52               	line	42
  8786                           	
  8787                           i1l745:	
  8788  0552                     	line	44
  8789                           	
  8790                           i1l2124:	
  8791  0552                     	movf	0+(___fladd@a)+03h,w
  8792  0552  082D               	andlw	080h
  8793  0553  3980               	movwf	(??___fladd+0)+0
  8794  0554  00AE               	movf	(??___fladd+0)+0,w
  8795  0555  082E               	movwf	(___fladd@aexp)
  8796  0556  00FA               	line	46
  8797                           	
  8798                           i1l2126:	
  8799  0557                     	movf	(___fladd@aexp),w
  8800  0557  087A               	xorwf	(___fladd@signs),w
  8801  0558  0679               	skipnz
  8802  0559  1903               	goto	u196_21
  8803  055A  2D5C               	goto	u196_20
  8804  055B  2D5D               u196_21:
  8805  055C                     	goto	i1l2130
  8806  055C  2D5F               u196_20:
  8807  055D                     	line	47
  8808                           	
  8809                           i1l2128:	
  8810  055D                     	bsf	(___fladd@signs)+(6/8),(6)&7
  8811  055D  1779               	goto	i1l2130
  8812  055E  2D5F               	line	48
  8813                           	
  8814                           i1l746:	
  8815  055F                     	line	49
  8816                           	
  8817                           i1l2130:	
  8818  055F                     	movf	0+(___fladd@a)+03h,w
  8819  055F  082D               	movwf	(??___fladd+0)+0
  8820  0560  00AE               	addwf	(??___fladd+0)+0,w
  8821  0561  072E               	movwf	(??___fladd+1)+0
  8822  0562  00AF               	movf	(??___fladd+1)+0,w
  8823  0563  082F               	movwf	(___fladd@aexp)
  8824  0564  00FA               	line	50
  8825                           	
  8826                           i1l2132:	
  8827  0565                     	btfss	0+(___fladd@a)+02h,(7)&7
  8828  0565  1FAC               	goto	u197_21
  8829  0566  2D68               	goto	u197_20
  8830  0567  2D69               u197_21:
  8831  0568                     	goto	i1l2136
  8832  0568  2D6B               u197_20:
  8833  0569                     	line	51
  8834                           	
  8835                           i1l2134:	
  8836  0569                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  8837  0569  147A               	goto	i1l2136
  8838  056A  2D6B               	line	52
  8839                           	
  8840                           i1l747:	
  8841  056B                     	line	55
  8842                           	
  8843                           i1l2136:	
  8844  056B                     	movf	((___fladd@aexp)),w
  8845  056B  087A               	btfsc	status,2
  8846  056C  1903               	goto	u198_21
  8847  056D  2D6F               	goto	u198_20
  8848  056E  2D70               u198_21:
  8849  056F                     	goto	i1l2146
  8850  056F  2D81               u198_20:
  8851  0570                     	line	57
  8852                           	
  8853                           i1l2138:	
  8854  0570                     		incf	((___fladd@aexp)),w
  8855  0570  0A7A               	btfss	status,2
  8856  0571  1D03               	goto	u199_21
  8857  0572  2D74               	goto	u199_20
  8858  0573  2D75               u199_21:
  8859  0574                     	goto	i1l2142
  8860  0574  2D7E               u199_20:
  8861  0575                     	line	59
  8862                           	
  8863                           i1l2140:	
  8864  0575                     	movlw	0x0
  8865  0575  3000               	movwf	(___fladd@a+3)
  8866  0576  00AD               	movlw	0x0
  8867  0577  3000               	movwf	(___fladd@a+2)
  8868  0578  00AC               	movlw	0x0
  8869  0579  3000               	movwf	(___fladd@a+1)
  8870  057A  00AB               	movlw	0x0
  8871  057B  3000               	movwf	(___fladd@a)
  8872  057C  00AA               
  8873                           	goto	i1l2142
  8874  057D  2D7E               	line	60
  8875                           	
  8876                           i1l749:	
  8877  057E                     	line	62
  8878                           	
  8879                           i1l2142:	
  8880  057E                     	bsf	(___fladd@a)+(23/8),(23)&7
  8881  057E  17AC               	line	64
  8882                           	
  8883                           i1l2144:	
  8884  057F                     	clrf	0+(___fladd@a)+03h
  8885  057F  01AD               	line	65
  8886                           	goto	i1l750
  8887  0580  2D89               	line	66
  8888                           	
  8889                           i1l748:	
  8890  0581                     	line	68
  8891                           	
  8892                           i1l2146:	
  8893  0581                     	movlw	0x0
  8894  0581  3000               	movwf	(___fladd@a+3)
  8895  0582  00AD               	movlw	0x0
  8896  0583  3000               	movwf	(___fladd@a+2)
  8897  0584  00AC               	movlw	0x0
  8898  0585  3000               	movwf	(___fladd@a+1)
  8899  0586  00AB               	movlw	0x0
  8900  0587  3000               	movwf	(___fladd@a)
  8901  0588  00AA               
  8902                           	line	69
  8903                           	
  8904                           i1l750:	
  8905  0589                     	line	75
  8906                           	movf	(___fladd@bexp),w
  8907  0589  087B               	subwf	(___fladd@aexp),w
  8908  058A  027A               	skipnc
  8909  058B  1803               	goto	u200_21
  8910  058C  2D8E               	goto	u200_20
  8911  058D  2D8F               u200_21:
  8912  058E                     	goto	i1l2182
  8913  058E  2DD5               u200_20:
  8914  058F                     	line	77
  8915                           	
  8916                           i1l2148:	
  8917  058F                     	btfss	(___fladd@signs),(6)&7
  8918  058F  1F79               	goto	u201_21
  8919  0590  2D92               	goto	u201_20
  8920  0591  2D93               u201_21:
  8921  0592                     	goto	i1l2152
  8922  0592  2D98               u201_20:
  8923  0593                     	line	78
  8924                           	
  8925                           i1l2150:	
  8926  0593                     	movlw	low(080h)
  8927  0593  3080               	movwf	(??___fladd+0)+0
  8928  0594  00AE               	movf	(??___fladd+0)+0,w
  8929  0595  082E               	xorwf	(___fladd@signs),f
  8930  0596  06F9               	goto	i1l2152
  8931  0597  2D98               	line	79
  8932                           	
  8933                           i1l752:	
  8934  0598                     	line	81
  8935                           	
  8936                           i1l2152:	
  8937  0598                     	movf	(___fladd@bexp),w
  8938  0598  087B               	movwf	(??___fladd+0)+0
  8939  0599  00AE               	movf	(??___fladd+0)+0,w
  8940  059A  082E               	movwf	(___fladd@grs)
  8941  059B  00FC               	line	82
  8942                           	
  8943                           i1l2154:	
  8944  059C                     	movf	(___fladd@aexp),w
  8945  059C  087A               	movwf	(??___fladd+0)+0
  8946  059D  00AE               	movf	(??___fladd+0)+0,w
  8947  059E  082E               	movwf	(___fladd@bexp)
  8948  059F  00FB               	line	83
  8949                           	
  8950                           i1l2156:	
  8951  05A0                     	movf	(___fladd@grs),w
  8952  05A0  087C               	movwf	(??___fladd+0)+0
  8953  05A1  00AE               	movf	(??___fladd+0)+0,w
  8954  05A2  082E               	movwf	(___fladd@aexp)
  8955  05A3  00FA               	line	84
  8956                           	
  8957                           i1l2158:	
  8958  05A4                     	movf	(___fladd@b),w
  8959  05A4  0826               	movwf	(??___fladd+0)+0
  8960  05A5  00AE               	movf	(??___fladd+0)+0,w
  8961  05A6  082E               	movwf	(___fladd@grs)
  8962  05A7  00FC               	line	85
  8963                           	
  8964                           i1l2160:	
  8965  05A8                     	movf	(___fladd@a),w
  8966  05A8  082A               	movwf	(??___fladd+0)+0
  8967  05A9  00AE               	movf	(??___fladd+0)+0,w
  8968  05AA  082E               	movwf	(___fladd@b)
  8969  05AB  00A6               	line	86
  8970                           	
  8971                           i1l2162:	
  8972  05AC                     	movf	(___fladd@grs),w
  8973  05AC  087C               	movwf	(??___fladd+0)+0
  8974  05AD  00AE               	movf	(??___fladd+0)+0,w
  8975  05AE  082E               	movwf	(___fladd@a)
  8976  05AF  00AA               	line	87
  8977                           	
  8978                           i1l2164:	
  8979  05B0                     	movf	0+(___fladd@b)+01h,w
  8980  05B0  0827               	movwf	(??___fladd+0)+0
  8981  05B1  00AE               	movf	(??___fladd+0)+0,w
  8982  05B2  082E               	movwf	(___fladd@grs)
  8983  05B3  00FC               	line	88
  8984                           	
  8985                           i1l2166:	
  8986  05B4                     	movf	0+(___fladd@a)+01h,w
  8987  05B4  082B               	movwf	(??___fladd+0)+0
  8988  05B5  00AE               	movf	(??___fladd+0)+0,w
  8989  05B6  082E               	movwf	0+(___fladd@b)+01h
  8990  05B7  00A7               	line	89
  8991                           	
  8992                           i1l2168:	
  8993  05B8                     	movf	(___fladd@grs),w
  8994  05B8  087C               	movwf	(??___fladd+0)+0
  8995  05B9  00AE               	movf	(??___fladd+0)+0,w
  8996  05BA  082E               	movwf	0+(___fladd@a)+01h
  8997  05BB  00AB               	line	90
  8998                           	
  8999                           i1l2170:	
  9000  05BC                     	movf	0+(___fladd@b)+02h,w
  9001  05BC  0828               	movwf	(??___fladd+0)+0
  9002  05BD  00AE               	movf	(??___fladd+0)+0,w
  9003  05BE  082E               	movwf	(___fladd@grs)
  9004  05BF  00FC               	line	91
  9005                           	
  9006                           i1l2172:	
  9007  05C0                     	movf	0+(___fladd@a)+02h,w
  9008  05C0  082C               	movwf	(??___fladd+0)+0
  9009  05C1  00AE               	movf	(??___fladd+0)+0,w
  9010  05C2  082E               	movwf	0+(___fladd@b)+02h
  9011  05C3  00A8               	line	92
  9012                           	
  9013                           i1l2174:	
  9014  05C4                     	movf	(___fladd@grs),w
  9015  05C4  087C               	movwf	(??___fladd+0)+0
  9016  05C5  00AE               	movf	(??___fladd+0)+0,w
  9017  05C6  082E               	movwf	0+(___fladd@a)+02h
  9018  05C7  00AC               	line	93
  9019                           	
  9020                           i1l2176:	
  9021  05C8                     	movf	0+(___fladd@b)+03h,w
  9022  05C8  0829               	movwf	(??___fladd+0)+0
  9023  05C9  00AE               	movf	(??___fladd+0)+0,w
  9024  05CA  082E               	movwf	(___fladd@grs)
  9025  05CB  00FC               	line	94
  9026                           	
  9027                           i1l2178:	
  9028  05CC                     	movf	0+(___fladd@a)+03h,w
  9029  05CC  082D               	movwf	(??___fladd+0)+0
  9030  05CD  00AE               	movf	(??___fladd+0)+0,w
  9031  05CE  082E               	movwf	0+(___fladd@b)+03h
  9032  05CF  00A9               	line	95
  9033                           	
  9034                           i1l2180:	
  9035  05D0                     	movf	(___fladd@grs),w
  9036  05D0  087C               	movwf	(??___fladd+0)+0
  9037  05D1  00AE               	movf	(??___fladd+0)+0,w
  9038  05D2  082E               	movwf	0+(___fladd@a)+03h
  9039  05D3  00AD               	goto	i1l2182
  9040  05D4  2DD5               	line	96
  9041                           	
  9042                           i1l751:	
  9043  05D5                     	line	98
  9044                           	
  9045                           i1l2182:	
  9046  05D5                     	clrf	(___fladd@grs)
  9047  05D5  01FC               	line	100
  9048                           	
  9049                           i1l2184:	
  9050  05D6                     	movf	(___fladd@bexp),w
  9051  05D6  087B               	movwf	(??___fladd+0)+0
  9052  05D7  00AE               	clrf	(??___fladd+0)+0+1
  9053  05D8  01AF               	comf	(??___fladd+0)+0,f
  9054  05D9  09AE               	comf	(??___fladd+0)+1,f
  9055  05DA  09AF               	incf	(??___fladd+0)+0,f
  9056  05DB  0AAE               	skipnz
  9057  05DC  1903               	incf	(??___fladd+0)+1,f
  9058  05DD  0AAF               	movf	(___fladd@aexp),w
  9059  05DE  087A               	addwf	0+(??___fladd+0)+0,w
  9060  05DF  072E               	movwf	(??___fladd+2)+0
  9061  05E0  00B0               	movf	1+(??___fladd+0)+0,w
  9062  05E1  082F               	skipnc
  9063  05E2  1803               	incf	1+(??___fladd+0)+0,w
  9064  05E3  0A2F               	movwf	((??___fladd+2)+0)+1
  9065  05E4  00B1               	movf	1+(??___fladd+2)+0,w
  9066  05E5  0831               	xorlw	80h
  9067  05E6  3A80               	movwf	btemp+1
  9068  05E7  00FF               	movlw	(0)^80h
  9069  05E8  3080               	subwf	btemp+1,w
  9070  05E9  027F               	skipz
  9071  05EA  1D03               	goto	u202_25
  9072  05EB  2DEE               	movlw	01Ah
  9073  05EC  301A               	subwf	0+(??___fladd+2)+0,w
  9074  05ED  0230               u202_25:
  9075  05EE                     
  9076                           	skipc
  9077  05EE  1C03               	goto	u202_21
  9078  05EF  2DF1               	goto	u202_20
  9079  05F0  2DF2               u202_21:
  9080  05F1                     	goto	i1l2200
  9081  05F1  2E37               u202_20:
  9082  05F2                     	line	101
  9083                           	
  9084                           i1l2186:	
  9085  05F2                     	bcf	status, 5	;RP0=0, select bank0
  9086  05F2  1283               	bcf	status, 6	;RP1=0, select bank0
  9087  05F3  1303               	movf	(___fladd@b+3),w
  9088  05F4  0829               	iorwf	(___fladd@b+2),w
  9089  05F5  0428               	iorwf	(___fladd@b+1),w
  9090  05F6  0427               	iorwf	(___fladd@b),w
  9091  05F7  0426               	skipz
  9092  05F8  1D03               	goto	u203_21
  9093  05F9  2DFB               	goto	u203_20
  9094  05FA  2DFD               u203_21:
  9095  05FB                     	movlw	1
  9096  05FB  3001               	goto	u204_20
  9097  05FC  2DFE               u203_20:
  9098  05FD                     	movlw	0
  9099  05FD  3000               u204_20:
  9100  05FE                     	movwf	(??___fladd+0)+0
  9101  05FE  00AE               	movf	(??___fladd+0)+0,w
  9102  05FF  082E               	movwf	(___fladd@grs)
  9103  0600  00FC               	line	102
  9104                           	movlw	high highword(0)
  9105  0601  3000               	movwf	(___fladd@b+3)
  9106  0602  00A9               	movlw	low highword(0)
  9107  0603  3000               	movwf	(___fladd@b+2)
  9108  0604  00A8               	movlw	high(0)
  9109  0605  3000               	movwf	(___fladd@b+1)
  9110  0606  00A7               	movlw	low(0)
  9111  0607  3000               	movwf	(___fladd@b)
  9112  0608  00A6               
  9113                           	line	103
  9114                           	movf	(___fladd@aexp),w
  9115  0609  087A               	movwf	(??___fladd+0)+0
  9116  060A  00AE               	movf	(??___fladd+0)+0,w
  9117  060B  082E               	movwf	(___fladd@bexp)
  9118  060C  00FB               	line	104
  9119                           	goto	i1l754
  9120  060D  2E3E               	line	105
  9121                           	
  9122                           i1l753:	
  9123  060E                     	line	106
  9124                           	goto	i1l2200
  9125  060E  2E37               	
  9126                           i1l756:	
  9127  060F                     	line	109
  9128                           	btfss	(___fladd@grs),(0)&7
  9129  060F  1C7C               	goto	u205_21
  9130  0610  2E12               	goto	u205_20
  9131  0611  2E13               u205_21:
  9132  0612                     	goto	i1l2190
  9133  0612  2E1E               u205_20:
  9134  0613                     	line	110
  9135                           	
  9136                           i1l2188:	
  9137  0613                     	movf	(___fladd@grs),w
  9138  0613  087C               	bcf	status, 5	;RP0=0, select bank0
  9139  0614  1283               	bcf	status, 6	;RP1=0, select bank0
  9140  0615  1303               	movwf	(??___fladd+0)+0
  9141  0616  00AE               	clrc
  9142  0617  1003               	rrf	(??___fladd+0)+0,w
  9143  0618  0C2E               	iorlw	01h
  9144  0619  3801               	movwf	(??___fladd+1)+0
  9145  061A  00AF               	movf	(??___fladd+1)+0,w
  9146  061B  082F               	movwf	(___fladd@grs)
  9147  061C  00FC               	line	111
  9148                           	goto	i1l2192
  9149  061D  2E21               	line	112
  9150                           	
  9151                           i1l757:	
  9152  061E                     	line	113
  9153                           	
  9154                           i1l2190:	
  9155  061E                     	clrc
  9156  061E  1003               	rrf	(___fladd@grs),f
  9157  061F  0CFC               
  9158                           	goto	i1l2192
  9159  0620  2E21               	line	114
  9160                           	
  9161                           i1l758:	
  9162  0621                     	line	115
  9163                           	
  9164                           i1l2192:	
  9165  0621                     	bcf	status, 5	;RP0=0, select bank0
  9166  0621  1283               	bcf	status, 6	;RP1=0, select bank0
  9167  0622  1303               	btfss	(___fladd@b),(0)&7
  9168  0623  1C26               	goto	u206_21
  9169  0624  2E26               	goto	u206_20
  9170  0625  2E27               u206_21:
  9171  0626                     	goto	i1l2196
  9172  0626  2E29               u206_20:
  9173  0627                     	line	116
  9174                           	
  9175                           i1l2194:	
  9176  0627                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9177  0627  17FC               	goto	i1l2196
  9178  0628  2E29               	line	117
  9179                           	
  9180                           i1l759:	
  9181  0629                     	line	118
  9182                           	
  9183                           i1l2196:	
  9184  0629                     	movlw	01h
  9185  0629  3001               	movwf	(??___fladd+0)+0
  9186  062A  00AE               u207_25:
  9187  062B                     	rlf	(___fladd@b+3),w
  9188  062B  0D29               	rrf	(___fladd@b+3),f
  9189  062C  0CA9               	rrf	(___fladd@b+2),f
  9190  062D  0CA8               	rrf	(___fladd@b+1),f
  9191  062E  0CA7               	rrf	(___fladd@b),f
  9192  062F  0CA6               	decfsz	(??___fladd+0)+0&07fh,f
  9193  0630  0BAE               	goto	u207_25
  9194  0631  2E2B               
  9195                           	line	119
  9196                           	
  9197                           i1l2198:	
  9198  0632                     	movlw	low(01h)
  9199  0632  3001               	movwf	(??___fladd+0)+0
  9200  0633  00AE               	movf	(??___fladd+0)+0,w
  9201  0634  082E               	addwf	(___fladd@bexp),f
  9202  0635  07FB               	goto	i1l2200
  9203  0636  2E37               	line	120
  9204                           	
  9205                           i1l755:	
  9206  0637                     	line	106
  9207                           	
  9208                           i1l2200:	
  9209  0637                     	movf	(___fladd@aexp),w
  9210  0637  087A               	subwf	(___fladd@bexp),w
  9211  0638  027B               	skipc
  9212  0639  1C03               	goto	u208_21
  9213  063A  2E3C               	goto	u208_20
  9214  063B  2E3D               u208_21:
  9215  063C                     	goto	i1l756
  9216  063C  2E0F               u208_20:
  9217  063D                     	goto	i1l754
  9218  063D  2E3E               	
  9219                           i1l760:	
  9220  063E                     	line	121
  9221                           	
  9222                           i1l754:	
  9223  063E                     	line	124
  9224                           	btfsc	(___fladd@signs),(6)&7
  9225  063E  1B79               	goto	u209_21
  9226  063F  2E41               	goto	u209_20
  9227  0640  2E42               u209_21:
  9228  0641                     	goto	i1l2226
  9229  0641  2E95               u209_20:
  9230  0642                     	line	127
  9231                           	
  9232                           i1l2202:	
  9233  0642                     	movf	((___fladd@bexp)),w
  9234  0642  087B               	btfss	status,2
  9235  0643  1D03               	goto	u210_21
  9236  0644  2E46               	goto	u210_20
  9237  0645  2E47               u210_21:
  9238  0646                     	goto	i1l2208
  9239  0646  2E53               u210_20:
  9240  0647                     	line	128
  9241                           	
  9242                           i1l2204:	
  9243  0647                     	movlw	0x0
  9244  0647  3000               	bcf	status, 5	;RP0=0, select bank0
  9245  0648  1283               	bcf	status, 6	;RP1=0, select bank0
  9246  0649  1303               	movwf	(?___fladd+3)
  9247  064A  00A9               	movlw	0x0
  9248  064B  3000               	movwf	(?___fladd+2)
  9249  064C  00A8               	movlw	0x0
  9250  064D  3000               	movwf	(?___fladd+1)
  9251  064E  00A7               	movlw	0x0
  9252  064F  3000               	movwf	(?___fladd)
  9253  0650  00A6               
  9254                           	goto	i1l763
  9255  0651  2FE3               	
  9256                           i1l2206:	
  9257  0652                     	goto	i1l763
  9258  0652  2FE3               	line	129
  9259                           	
  9260                           i1l762:	
  9261  0653                     	line	132
  9262                           	
  9263                           i1l2208:	
  9264  0653                     	bcf	status, 5	;RP0=0, select bank0
  9265  0653  1283               	bcf	status, 6	;RP1=0, select bank0
  9266  0654  1303               	movf	(___fladd@a),w
  9267  0655  082A               	addwf	(___fladd@b),f
  9268  0656  07A6               	movf	(___fladd@a+1),w
  9269  0657  082B               	clrz
  9270  0658  1103               	skipnc
  9271  0659  1803               	addlw	1
  9272  065A  3E01               	skipnz
  9273  065B  1903               	goto	u211_21
  9274  065C  2E5E               	addwf	(___fladd@b+1),f
  9275  065D  07A7               u211_21:
  9276  065E                     	movf	(___fladd@a+2),w
  9277  065E  082C               	clrz
  9278  065F  1103               	skipnc
  9279  0660  1803               	addlw	1
  9280  0661  3E01               	skipnz
  9281  0662  1903               	goto	u211_22
  9282  0663  2E65               	addwf	(___fladd@b+2),f
  9283  0664  07A8               u211_22:
  9284  0665                     	movf	(___fladd@a+3),w
  9285  0665  082D               	clrz
  9286  0666  1103               	skipnc
  9287  0667  1803               	addlw	1
  9288  0668  3E01               	skipnz
  9289  0669  1903               	goto	u211_23
  9290  066A  2E6C               	addwf	(___fladd@b+3),f
  9291  066B  07A9               u211_23:
  9292  066C                     
  9293                           	line	134
  9294                           	
  9295                           i1l2210:	
  9296  066C                     	btfss	(___fladd@b+3),(24)&7
  9297  066C  1C29               	goto	u212_21
  9298  066D  2E6F               	goto	u212_20
  9299  066E  2E70               u212_21:
  9300  066F                     	goto	i1l2260
  9301  066F  2F60               u212_20:
  9302  0670                     	line	135
  9303                           	
  9304                           i1l2212:	
  9305  0670                     	btfss	(___fladd@grs),(0)&7
  9306  0670  1C7C               	goto	u213_21
  9307  0671  2E73               	goto	u213_20
  9308  0672  2E74               u213_21:
  9309  0673                     	goto	i1l2216
  9310  0673  2E7D               u213_20:
  9311  0674                     	line	136
  9312                           	
  9313                           i1l2214:	
  9314  0674                     	movf	(___fladd@grs),w
  9315  0674  087C               	movwf	(??___fladd+0)+0
  9316  0675  00AE               	clrc
  9317  0676  1003               	rrf	(??___fladd+0)+0,w
  9318  0677  0C2E               	iorlw	01h
  9319  0678  3801               	movwf	(??___fladd+1)+0
  9320  0679  00AF               	movf	(??___fladd+1)+0,w
  9321  067A  082F               	movwf	(___fladd@grs)
  9322  067B  00FC               	line	137
  9323                           	goto	i1l2218
  9324  067C  2E80               	line	138
  9325                           	
  9326                           i1l765:	
  9327  067D                     	line	139
  9328                           	
  9329                           i1l2216:	
  9330  067D                     	clrc
  9331  067D  1003               	rrf	(___fladd@grs),f
  9332  067E  0CFC               
  9333                           	goto	i1l2218
  9334  067F  2E80               	line	140
  9335                           	
  9336                           i1l766:	
  9337  0680                     	line	141
  9338                           	
  9339                           i1l2218:	
  9340  0680                     	btfss	(___fladd@b),(0)&7
  9341  0680  1C26               	goto	u214_21
  9342  0681  2E83               	goto	u214_20
  9343  0682  2E84               u214_21:
  9344  0683                     	goto	i1l2222
  9345  0683  2E86               u214_20:
  9346  0684                     	line	142
  9347                           	
  9348                           i1l2220:	
  9349  0684                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9350  0684  17FC               	goto	i1l2222
  9351  0685  2E86               	line	143
  9352                           	
  9353                           i1l767:	
  9354  0686                     	line	144
  9355                           	
  9356                           i1l2222:	
  9357  0686                     	movlw	01h
  9358  0686  3001               	movwf	(??___fladd+0)+0
  9359  0687  00AE               u215_25:
  9360  0688                     	rlf	(___fladd@b+3),w
  9361  0688  0D29               	rrf	(___fladd@b+3),f
  9362  0689  0CA9               	rrf	(___fladd@b+2),f
  9363  068A  0CA8               	rrf	(___fladd@b+1),f
  9364  068B  0CA7               	rrf	(___fladd@b),f
  9365  068C  0CA6               	decfsz	(??___fladd+0)+0&07fh,f
  9366  068D  0BAE               	goto	u215_25
  9367  068E  2E88               
  9368                           	line	145
  9369                           	
  9370                           i1l2224:	
  9371  068F                     	movlw	low(01h)
  9372  068F  3001               	movwf	(??___fladd+0)+0
  9373  0690  00AE               	movf	(??___fladd+0)+0,w
  9374  0691  082E               	addwf	(___fladd@bexp),f
  9375  0692  07FB               	goto	i1l2260
  9376  0693  2F60               	line	146
  9377                           	
  9378                           i1l764:	
  9379  0694                     	line	148
  9380                           	goto	i1l2260
  9381  0694  2F60               	line	149
  9382                           	
  9383                           i1l761:	
  9384  0695                     	line	153
  9385                           	
  9386                           i1l2226:	
  9387  0695                     	bcf	status, 5	;RP0=0, select bank0
  9388  0695  1283               	bcf	status, 6	;RP1=0, select bank0
  9389  0696  1303               	movf	(___fladd@b+3),w
  9390  0697  0829               	xorlw	80h
  9391  0698  3A80               	movwf	btemp+1
  9392  0699  00FF               	movf	(___fladd@a+3),w
  9393  069A  082D               	xorlw	80h
  9394  069B  3A80               	subwf	btemp+1,w
  9395  069C  027F               	
  9396                           	skipz
  9397  069D  1D03               	goto	u216_23
  9398  069E  2EA9               	movf	(___fladd@a+2),w
  9399  069F  082C               	subwf	(___fladd@b+2),w
  9400  06A0  0228               	skipz
  9401  06A1  1D03               	goto	u216_23
  9402  06A2  2EA9               	movf	(___fladd@a+1),w
  9403  06A3  082B               	subwf	(___fladd@b+1),w
  9404  06A4  0227               	skipz
  9405  06A5  1D03               	goto	u216_23
  9406  06A6  2EA9               	movf	(___fladd@a),w
  9407  06A7  082A               	subwf	(___fladd@b),w
  9408  06A8  0226               u216_23:
  9409  06A9                     	skipnc
  9410  06A9  1803               	goto	u216_21
  9411  06AA  2EAC               	goto	u216_20
  9412  06AB  2EAD               u216_21:
  9413  06AC                     	goto	i1l2236
  9414  06AC  2F13               u216_20:
  9415  06AD                     	line	154
  9416                           	
  9417                           i1l2228:	
  9418  06AD                     	movlw	0FFh
  9419  06AD  30FF               	movwf	((??___fladd+0)+0)
  9420  06AE  00AE               	movlw	0FFh
  9421  06AF  30FF               	movwf	((??___fladd+0)+0+1)
  9422  06B0  00AF               	movlw	0FFh
  9423  06B1  30FF               	movwf	((??___fladd+0)+0+2)
  9424  06B2  00B0               	movlw	0FFh
  9425  06B3  30FF               	movwf	((??___fladd+0)+0+3)
  9426  06B4  00B1               	movf	(___fladd@a),w
  9427  06B5  082A               	movwf	(??___fladd+4)+0
  9428  06B6  00B2               	movf	(___fladd@a+1),w
  9429  06B7  082B               	movwf	((??___fladd+4)+0+1)
  9430  06B8  00B3               	movf	(___fladd@a+2),w
  9431  06B9  082C               	movwf	((??___fladd+4)+0+2)
  9432  06BA  00B4               	movf	(___fladd@a+3),w
  9433  06BB  082D               	movwf	((??___fladd+4)+0+3)
  9434  06BC  00B5               	comf	(___fladd@b),w
  9435  06BD  0926               	movwf	(??___fladd+8)+0
  9436  06BE  00B6               	comf	(___fladd@b+1),w
  9437  06BF  0927               	movwf	((??___fladd+8)+0+1)
  9438  06C0  00B7               	comf	(___fladd@b+2),w
  9439  06C1  0928               	movwf	((??___fladd+8)+0+2)
  9440  06C2  00B8               	comf	(___fladd@b+3),w
  9441  06C3  0929               	movwf	((??___fladd+8)+0+3)
  9442  06C4  00B9               	incf	(??___fladd+8)+0,f
  9443  06C5  0AB6               	skipnz
  9444  06C6  1903               	incf	((??___fladd+8)+0+1),f
  9445  06C7  0AB7               	skipnz
  9446  06C8  1903               	incf	((??___fladd+8)+0+2),f
  9447  06C9  0AB8               	skipnz
  9448  06CA  1903               	incf	((??___fladd+8)+0+3),f
  9449  06CB  0AB9               	movf	0+(??___fladd+8)+0,w
  9450  06CC  0836               	addwf	(??___fladd+4)+0,f
  9451  06CD  07B2               	movf	1+(??___fladd+8)+0,w
  9452  06CE  0837               	skipnc
  9453  06CF  1803               	incfsz	1+(??___fladd+8)+0,w
  9454  06D0  0F37               	goto	u217_20
  9455  06D1  2ED3               	goto	u217_21
  9456  06D2  2ED4               u217_20:
  9457  06D3                     	addwf	(??___fladd+4)+1,f
  9458  06D3  07B3               u217_21:
  9459  06D4                     	movf	2+(??___fladd+8)+0,w
  9460  06D4  0838               	skipnc
  9461  06D5  1803               	incfsz	2+(??___fladd+8)+0,w
  9462  06D6  0F38               	goto	u217_22
  9463  06D7  2ED9               	goto	u217_23
  9464  06D8  2EDA               u217_22:
  9465  06D9                     	addwf	(??___fladd+4)+2,f
  9466  06D9  07B4               u217_23:
  9467  06DA                     	movf	3+(??___fladd+8)+0,w
  9468  06DA  0839               	skipnc
  9469  06DB  1803               	incf	3+(??___fladd+8)+0,w
  9470  06DC  0A39               	addwf	(??___fladd+4)+3,f
  9471  06DD  07B5               	movf	0+(??___fladd+4)+0,w
  9472  06DE  0832               	addwf	(??___fladd+0)+0,f
  9473  06DF  07AE               	movf	1+(??___fladd+4)+0,w
  9474  06E0  0833               	skipnc
  9475  06E1  1803               	incfsz	1+(??___fladd+4)+0,w
  9476  06E2  0F33               	goto	u218_20
  9477  06E3  2EE5               	goto	u218_21
  9478  06E4  2EE6               u218_20:
  9479  06E5                     	addwf	(??___fladd+0)+1,f
  9480  06E5  07AF               u218_21:
  9481  06E6                     	movf	2+(??___fladd+4)+0,w
  9482  06E6  0834               	skipnc
  9483  06E7  1803               	incfsz	2+(??___fladd+4)+0,w
  9484  06E8  0F34               	goto	u218_22
  9485  06E9  2EEB               	goto	u218_23
  9486  06EA  2EEC               u218_22:
  9487  06EB                     	addwf	(??___fladd+0)+2,f
  9488  06EB  07B0               u218_23:
  9489  06EC                     	movf	3+(??___fladd+4)+0,w
  9490  06EC  0835               	skipnc
  9491  06ED  1803               	incf	3+(??___fladd+4)+0,w
  9492  06EE  0A35               	addwf	(??___fladd+0)+3,f
  9493  06EF  07B1               	movf	3+(??___fladd+0)+0,w
  9494  06F0  0831               	movwf	(___fladd@b+3)
  9495  06F1  00A9               	movf	2+(??___fladd+0)+0,w
  9496  06F2  0830               	movwf	(___fladd@b+2)
  9497  06F3  00A8               	movf	1+(??___fladd+0)+0,w
  9498  06F4  082F               	movwf	(___fladd@b+1)
  9499  06F5  00A7               	movf	0+(??___fladd+0)+0,w
  9500  06F6  082E               	movwf	(___fladd@b)
  9501  06F7  00A6               
  9502                           	line	155
  9503                           	movlw	low(080h)
  9504  06F8  3080               	movwf	(??___fladd+0)+0
  9505  06F9  00AE               	movf	(??___fladd+0)+0,w
  9506  06FA  082E               	xorwf	(___fladd@signs),f
  9507  06FB  06F9               	line	156
  9508                           	
  9509                           i1l2230:	
  9510  06FC                     	comf	(___fladd@grs),f
  9511  06FC  09FC               	incf	(___fladd@grs),f
  9512  06FD  0AFC               	line	157
  9513                           	
  9514                           i1l2232:	
  9515  06FE                     	movf	((___fladd@grs)),w
  9516  06FE  087C               	btfss	status,2
  9517  06FF  1D03               	goto	u219_21
  9518  0700  2F02               	goto	u219_20
  9519  0701  2F03               u219_21:
  9520  0702                     	goto	i1l771
  9521  0702  2F21               u219_20:
  9522  0703                     	line	158
  9523                           	
  9524                           i1l2234:	
  9525  0703                     	movlw	01h
  9526  0703  3001               	addwf	(___fladd@b),f
  9527  0704  07A6               	movlw	0
  9528  0705  3000               	skipnc
  9529  0706  1803               movlw 1
  9530  0707  3001               	addwf	(___fladd@b+1),f
  9531  0708  07A7               	movlw	0
  9532  0709  3000               	skipnc
  9533  070A  1803               movlw 1
  9534  070B  3001               	addwf	(___fladd@b+2),f
  9535  070C  07A8               	movlw	0
  9536  070D  3000               	skipnc
  9537  070E  1803               movlw 1
  9538  070F  3001               	addwf	(___fladd@b+3),f
  9539  0710  07A9               	goto	i1l771
  9540  0711  2F21               	line	159
  9541                           	
  9542                           i1l770:	
  9543  0712                     	line	160
  9544                           	goto	i1l771
  9545  0712  2F21               	line	161
  9546                           	
  9547                           i1l769:	
  9548  0713                     	line	162
  9549                           	
  9550                           i1l2236:	
  9551  0713                     	movf	(___fladd@a),w
  9552  0713  082A               	subwf	(___fladd@b),f
  9553  0714  02A6               	movf	(___fladd@a+1),w
  9554  0715  082B               	skipc
  9555  0716  1C03               	incfsz	(___fladd@a+1),w
  9556  0717  0F2B               	subwf	(___fladd@b+1),f
  9557  0718  02A7               	movf	(___fladd@a+2),w
  9558  0719  082C               	skipc
  9559  071A  1C03               	incfsz	(___fladd@a+2),w
  9560  071B  0F2C               	subwf	(___fladd@b+2),f
  9561  071C  02A8               	movf	(___fladd@a+3),w
  9562  071D  082D               	skipc
  9563  071E  1C03               	incfsz	(___fladd@a+3),w
  9564  071F  0F2D               	subwf	(___fladd@b+3),f
  9565  0720  02A9               	line	163
  9566                           	
  9567                           i1l771:	
  9568  0721                     	line	166
  9569                           	movf	(___fladd@b+3),w
  9570  0721  0829               	iorwf	(___fladd@b+2),w
  9571  0722  0428               	iorwf	(___fladd@b+1),w
  9572  0723  0427               	iorwf	(___fladd@b),w
  9573  0724  0426               	skipz
  9574  0725  1D03               	goto	u220_21
  9575  0726  2F28               	goto	u220_20
  9576  0727  2F29               u220_21:
  9577  0728                     	goto	i1l2258
  9578  0728  2F5A               u220_20:
  9579  0729                     	
  9580                           i1l2238:	
  9581  0729                     	movf	((___fladd@grs)),w
  9582  0729  087C               	btfss	status,2
  9583  072A  1D03               	goto	u221_21
  9584  072B  2F2D               	goto	u221_20
  9585  072C  2F2E               u221_21:
  9586  072D                     	goto	i1l2258
  9587  072D  2F5A               u221_20:
  9588  072E                     	line	167
  9589                           	
  9590                           i1l2240:	
  9591  072E                     	movlw	0x0
  9592  072E  3000               	movwf	(?___fladd+3)
  9593  072F  00A9               	movlw	0x0
  9594  0730  3000               	movwf	(?___fladd+2)
  9595  0731  00A8               	movlw	0x0
  9596  0732  3000               	movwf	(?___fladd+1)
  9597  0733  00A7               	movlw	0x0
  9598  0734  3000               	movwf	(?___fladd)
  9599  0735  00A6               
  9600                           	goto	i1l763
  9601  0736  2FE3               	
  9602                           i1l2242:	
  9603  0737                     	goto	i1l763
  9604  0737  2FE3               	line	168
  9605                           	
  9606                           i1l772:	
  9607  0738                     	line	171
  9608                           	goto	i1l2258
  9609  0738  2F5A               	
  9610                           i1l774:	
  9611  0739                     	line	172
  9612                           	
  9613                           i1l2244:	
  9614  0739                     	movlw	01h
  9615  0739  3001               	movwf	(??___fladd+0)+0
  9616  073A  00AE               u222_25:
  9617  073B                     	clrc
  9618  073B  1003               	rlf	(___fladd@b),f
  9619  073C  0DA6               	rlf	(___fladd@b+1),f
  9620  073D  0DA7               	rlf	(___fladd@b+2),f
  9621  073E  0DA8               	rlf	(___fladd@b+3),f
  9622  073F  0DA9               	decfsz	(??___fladd+0)+0
  9623  0740  0BAE               	goto	u222_25
  9624  0741  2F3B               	line	173
  9625                           	
  9626                           i1l2246:	
  9627  0742                     	btfss	(___fladd@grs),(7)&7
  9628  0742  1FFC               	goto	u223_21
  9629  0743  2F45               	goto	u223_20
  9630  0744  2F46               u223_21:
  9631  0745                     	goto	i1l775
  9632  0745  2F47               u223_20:
  9633  0746                     	line	174
  9634                           	
  9635                           i1l2248:	
  9636  0746                     	bsf	(___fladd@b)+(0/8),(0)&7
  9637  0746  1426               	line	175
  9638                           	
  9639                           i1l775:	
  9640  0747                     	line	176
  9641                           	btfss	(___fladd@grs),(0)&7
  9642  0747  1C7C               	goto	u224_21
  9643  0748  2F4A               	goto	u224_20
  9644  0749  2F4B               u224_21:
  9645  074A                     	goto	i1l2252
  9646  074A  2F4E               u224_20:
  9647  074B                     	line	177
  9648                           	
  9649                           i1l2250:	
  9650  074B                     	setc
  9651  074B  1403               	rlf	(___fladd@grs),f
  9652  074C  0DFC               	line	178
  9653                           	goto	i1l2254
  9654  074D  2F51               	line	179
  9655                           	
  9656                           i1l776:	
  9657  074E                     	line	180
  9658                           	
  9659                           i1l2252:	
  9660  074E                     	clrc
  9661  074E  1003               	rlf	(___fladd@grs),f
  9662  074F  0DFC               
  9663                           	goto	i1l2254
  9664  0750  2F51               	line	181
  9665                           	
  9666                           i1l777:	
  9667  0751                     	line	182
  9668                           	
  9669                           i1l2254:	
  9670  0751                     	movf	((___fladd@bexp)),w
  9671  0751  087B               	btfsc	status,2
  9672  0752  1903               	goto	u225_21
  9673  0753  2F55               	goto	u225_20
  9674  0754  2F56               u225_21:
  9675  0755                     	goto	i1l2258
  9676  0755  2F5A               u225_20:
  9677  0756                     	line	183
  9678                           	
  9679                           i1l2256:	
  9680  0756                     	movlw	01h
  9681  0756  3001               	subwf	(___fladd@bexp),f
  9682  0757  02FB               	goto	i1l2258
  9683  0758  2F5A               	line	184
  9684                           	
  9685                           i1l778:	
  9686  0759                     	goto	i1l2258
  9687  0759  2F5A               	line	185
  9688                           	
  9689                           i1l773:	
  9690  075A                     	line	171
  9691                           	
  9692                           i1l2258:	
  9693  075A                     	btfss	(___fladd@b+2),(23)&7
  9694  075A  1FA8               	goto	u226_21
  9695  075B  2F5D               	goto	u226_20
  9696  075C  2F5E               u226_21:
  9697  075D                     	goto	i1l2244
  9698  075D  2F39               u226_20:
  9699  075E                     	goto	i1l2260
  9700  075E  2F60               	
  9701                           i1l779:	
  9702  075F                     	goto	i1l2260
  9703  075F  2F60               	line	186
  9704                           	
  9705                           i1l768:	
  9706  0760                     	line	192
  9707                           	
  9708                           i1l2260:	
  9709  0760                     	clrf	(___fladd@aexp)
  9710  0760  01FA               	line	193
  9711                           	
  9712                           i1l2262:	
  9713  0761                     	btfss	(___fladd@grs),(7)&7
  9714  0761  1FFC               	goto	u227_21
  9715  0762  2F64               	goto	u227_20
  9716  0763  2F65               u227_21:
  9717  0764                     	goto	i1l2270
  9718  0764  2F77               u227_20:
  9719  0765                     	line	194
  9720                           	
  9721                           i1l2264:	
  9722  0765                     	movf	(___fladd@grs),w
  9723  0765  087C               	andlw	07Fh
  9724  0766  397F               	btfsc	status,2
  9725  0767  1903               	goto	u228_21
  9726  0768  2F6A               	goto	u228_20
  9727  0769  2F6B               u228_21:
  9728  076A                     	goto	i1l781
  9729  076A  2F6E               u228_20:
  9730  076B                     	line	195
  9731                           	
  9732                           i1l2266:	
  9733  076B                     	clrf	(___fladd@aexp)
  9734  076B  01FA               	incf	(___fladd@aexp),f
  9735  076C  0AFA               	line	196
  9736                           	goto	i1l2270
  9737  076D  2F77               	line	197
  9738                           	
  9739                           i1l781:	
  9740  076E                     	line	198
  9741                           	btfss	(___fladd@b),(0)&7
  9742  076E  1C26               	goto	u229_21
  9743  076F  2F71               	goto	u229_20
  9744  0770  2F72               u229_21:
  9745  0771                     	goto	i1l2270
  9746  0771  2F77               u229_20:
  9747  0772                     	line	199
  9748                           	
  9749                           i1l2268:	
  9750  0772                     	clrf	(___fladd@aexp)
  9751  0772  01FA               	incf	(___fladd@aexp),f
  9752  0773  0AFA               	goto	i1l2270
  9753  0774  2F77               	line	200
  9754                           	
  9755                           i1l783:	
  9756  0775                     	goto	i1l2270
  9757  0775  2F77               	line	201
  9758                           	
  9759                           i1l782:	
  9760  0776                     	goto	i1l2270
  9761  0776  2F77               	line	202
  9762                           	
  9763                           i1l780:	
  9764  0777                     	line	203
  9765                           	
  9766                           i1l2270:	
  9767  0777                     	movf	((___fladd@aexp)),w
  9768  0777  087A               	btfsc	status,2
  9769  0778  1903               	goto	u230_21
  9770  0779  2F7B               	goto	u230_20
  9771  077A  2F7C               u230_21:
  9772  077B                     	goto	i1l784
  9773  077B  2FB2               u230_20:
  9774  077C                     	line	204
  9775                           	
  9776                           i1l2272:	
  9777  077C                     	movlw	01h
  9778  077C  3001               	addwf	(___fladd@b),f
  9779  077D  07A6               	movlw	0
  9780  077E  3000               	skipnc
  9781  077F  1803               movlw 1
  9782  0780  3001               	addwf	(___fladd@b+1),f
  9783  0781  07A7               	movlw	0
  9784  0782  3000               	skipnc
  9785  0783  1803               movlw 1
  9786  0784  3001               	addwf	(___fladd@b+2),f
  9787  0785  07A8               	movlw	0
  9788  0786  3000               	skipnc
  9789  0787  1803               movlw 1
  9790  0788  3001               	addwf	(___fladd@b+3),f
  9791  0789  07A9               	line	205
  9792                           	
  9793                           i1l2274:	
  9794  078A                     	btfss	(___fladd@b+3),(24)&7
  9795  078A  1C29               	goto	u231_21
  9796  078B  2F8D               	goto	u231_20
  9797  078C  2F8E               u231_21:
  9798  078D                     	goto	i1l784
  9799  078D  2FB2               u231_20:
  9800  078E                     	line	206
  9801                           	
  9802                           i1l2276:	
  9803  078E                     	movf	(___fladd@b),w
  9804  078E  0826               	movwf	(??___fladd+0)+0
  9805  078F  00AE               	movf	(___fladd@b+1),w
  9806  0790  0827               	movwf	((??___fladd+0)+0+1)
  9807  0791  00AF               	movf	(___fladd@b+2),w
  9808  0792  0828               	movwf	((??___fladd+0)+0+2)
  9809  0793  00B0               	movf	(___fladd@b+3),w
  9810  0794  0829               	movwf	((??___fladd+0)+0+3)
  9811  0795  00B1               	movlw	01h
  9812  0796  3001               	movwf	(??___fladd+4)+0
  9813  0797  00B2               u232_25:
  9814  0798                     	rlf	(??___fladd+0)+3,w
  9815  0798  0D31               	rrf	(??___fladd+0)+3,f
  9816  0799  0CB1               	rrf	(??___fladd+0)+2,f
  9817  079A  0CB0               	rrf	(??___fladd+0)+1,f
  9818  079B  0CAF               	rrf	(??___fladd+0)+0,f
  9819  079C  0CAE               u232_20:
  9820  079D                     	decfsz	(??___fladd+4)+0,f
  9821  079D  0BB2               	goto	u232_25
  9822  079E  2F98               	movf	3+(??___fladd+0)+0,w
  9823  079F  0831               	movwf	(___fladd@b+3)
  9824  07A0  00A9               	movf	2+(??___fladd+0)+0,w
  9825  07A1  0830               	movwf	(___fladd@b+2)
  9826  07A2  00A8               	movf	1+(??___fladd+0)+0,w
  9827  07A3  082F               	movwf	(___fladd@b+1)
  9828  07A4  00A7               	movf	0+(??___fladd+0)+0,w
  9829  07A5  082E               	movwf	(___fladd@b)
  9830  07A6  00A6               
  9831                           	line	207
  9832                           		incf	((___fladd@bexp)),w
  9833  07A7  0A7B               	btfsc	status,2
  9834  07A8  1903               	goto	u233_21
  9835  07A9  2FAB               	goto	u233_20
  9836  07AA  2FAC               u233_21:
  9837  07AB                     	goto	i1l784
  9838  07AB  2FB2               u233_20:
  9839  07AC                     	line	208
  9840                           	
  9841                           i1l2278:	
  9842  07AC                     	movlw	low(01h)
  9843  07AC  3001               	movwf	(??___fladd+0)+0
  9844  07AD  00AE               	movf	(??___fladd+0)+0,w
  9845  07AE  082E               	addwf	(___fladd@bexp),f
  9846  07AF  07FB               	goto	i1l784
  9847  07B0  2FB2               	line	209
  9848                           	
  9849                           i1l786:	
  9850  07B1                     	goto	i1l784
  9851  07B1  2FB2               	line	210
  9852                           	
  9853                           i1l785:	
  9854  07B2                     	line	211
  9855                           	
  9856                           i1l784:	
  9857  07B2                     	line	215
  9858                           		incf	((___fladd@bexp)),w
  9859  07B2  0A7B               	btfsc	status,2
  9860  07B3  1903               	goto	u234_21
  9861  07B4  2FB6               	goto	u234_20
  9862  07B5  2FB7               u234_21:
  9863  07B6                     	goto	i1l2282
  9864  07B6  2FBD               u234_20:
  9865  07B7                     	
  9866                           i1l2280:	
  9867  07B7                     	movf	((___fladd@bexp)),w
  9868  07B7  087B               	btfss	status,2
  9869  07B8  1D03               	goto	u235_21
  9870  07B9  2FBB               	goto	u235_20
  9871  07BA  2FBC               u235_21:
  9872  07BB                     	goto	i1l2288
  9873  07BB  2FCD               u235_20:
  9874  07BC                     	goto	i1l2282
  9875  07BC  2FBD               	
  9876                           i1l789:	
  9877  07BD                     	line	216
  9878                           	
  9879                           i1l2282:	
  9880  07BD                     	movlw	high highword(0)
  9881  07BD  3000               	movwf	(___fladd@b+3)
  9882  07BE  00A9               	movlw	low highword(0)
  9883  07BF  3000               	movwf	(___fladd@b+2)
  9884  07C0  00A8               	movlw	high(0)
  9885  07C1  3000               	movwf	(___fladd@b+1)
  9886  07C2  00A7               	movlw	low(0)
  9887  07C3  3000               	movwf	(___fladd@b)
  9888  07C4  00A6               
  9889                           	line	218
  9890                           	
  9891                           i1l2284:	
  9892  07C5                     	movf	((___fladd@bexp)),w
  9893  07C5  087B               	btfss	status,2
  9894  07C6  1D03               	goto	u236_21
  9895  07C7  2FC9               	goto	u236_20
  9896  07C8  2FCA               u236_21:
  9897  07C9                     	goto	i1l2288
  9898  07C9  2FCD               u236_20:
  9899  07CA                     	line	219
  9900                           	
  9901                           i1l2286:	
  9902  07CA                     	clrf	(___fladd@signs)
  9903  07CA  01F9               	goto	i1l2288
  9904  07CB  2FCD               	line	220
  9905                           	
  9906                           i1l790:	
  9907  07CC                     	goto	i1l2288
  9908  07CC  2FCD               	line	221
  9909                           	
  9910                           i1l787:	
  9911  07CD                     	line	225
  9912                           	
  9913                           i1l2288:	
  9914  07CD                     	btfss	(___fladd@bexp),(0)&7
  9915  07CD  1C7B               	goto	u237_21
  9916  07CE  2FD0               	goto	u237_20
  9917  07CF  2FD1               u237_21:
  9918  07D0                     	goto	i1l2292
  9919  07D0  2FD3               u237_20:
  9920  07D1                     	line	226
  9921                           	
  9922                           i1l2290:	
  9923  07D1                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  9924  07D1  17A8               	line	227
  9925                           	goto	i1l792
  9926  07D2  2FD7               	line	229
  9927                           	
  9928                           i1l791:	
  9929  07D3                     	line	230
  9930                           	
  9931                           i1l2292:	
  9932  07D3                     	movlw	low(07Fh)
  9933  07D3  307F               	movwf	(??___fladd+0)+0
  9934  07D4  00AE               	movf	(??___fladd+0)+0,w
  9935  07D5  082E               	andwf	0+(___fladd@b)+02h,f
  9936  07D6  05A8               	line	231
  9937                           	
  9938                           i1l792:	
  9939  07D7                     	line	232
  9940                           	movf	(___fladd@bexp),w
  9941  07D7  087B               	movwf	(??___fladd+0)+0
  9942  07D8  00AE               	clrc
  9943  07D9  1003               	rrf	(??___fladd+0)+0,w
  9944  07DA  0C2E               	movwf	(??___fladd+1)+0
  9945  07DB  00AF               	movf	(??___fladd+1)+0,w
  9946  07DC  082F               	movwf	0+(___fladd@b)+03h
  9947  07DD  00A9               	line	233
  9948                           	
  9949                           i1l2294:	
  9950  07DE                     	btfss	(___fladd@signs),(7)&7
  9951  07DE  1FF9               	goto	u238_21
  9952  07DF  2FE1               	goto	u238_20
  9953  07E0  2FE2               u238_21:
  9954  07E1                     	goto	i1l793
  9955  07E1  2FE3               u238_20:
  9956  07E2                     	line	234
  9957                           	
  9958                           i1l2296:	
  9959  07E2                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  9960  07E2  17A9               	line	235
  9961                           	
  9962                           i1l793:	
  9963  07E3                     	line	236
  9964                           	line	237
  9965                           	
  9966                           i1l763:	
  9967  07E3                     	return
  9968  07E3  0008               	opt stack 0
  9969                           GLOBAL	__end_of___fladd
  9970                           	__end_of___fladd:
  9971  07E4                     	signat	___fladd,8316
  9972                           global	___latbits
  9973                           ___latbits	equ	2
  9974  0002                     	global	btemp
  9975                           	btemp set 07Eh
  9976  007E                     
  9977                           	DABS	1,126,2	;btemp
  9978                           	global	wtemp0
  9979                           	wtemp0 set btemp+0
  9980  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     60      71
    BANK1            80     37      46
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_start_receive
    _start_receive->_handle_remote
    _is_deadzone->___fladd
    ___fltol->___fladd
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd
    ___fladd->___xxtofl

Critical Paths under _main in BANK1

    _main->_update_volume
    _update_volume->_write_int
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10634
                                             35 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                       _update_input
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5318
                                             33 BANK1      2     2      0
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5294
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    3781
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1247
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0     951
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     684
                                              6 BANK1     10     8      2
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     344
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1311
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    4371
                                             56 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _start_receive
 ---------------------------------------------------------------------------------
 (8) _start_receive                                       10    10      0      99
                                              5 COMMON     8     8      0
                                              0 BANK0      2     2      0
                      _handle_remote
 ---------------------------------------------------------------------------------
 (9) _handle_remote                                        5     5      0      53
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      6     6      0    4138
                                             50 BANK0      6     6      0
                        _is_deadzone
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _is_deadzone                                         13     9      4    3746
                                             37 BANK0     13     9      4
                            ___fladd
                            ___fltol
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     474
                                              0 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            11     7      4     381
                                             26 BANK0     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            24    16      8    2414
                                              8 COMMON     4     4      0
                                              6 BANK0     20    12      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
   _update_input
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite
   _update_volume
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     _is_deadzone
       ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       i1___wmul
     i1___lwdiv
   _handle_rotary
   _start_receive
     _handle_remote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      D       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      82       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3C      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     25      2E       7       57.5%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      82      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 27 12:58:13 2019

                  _update_input 0C90          __size_of_start_receive 0070                               pc 0002  
                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              l53 001C  
                            l54 0024                              l55 003E                              l56 003F  
                            l57 003F                              fsr 0004             ___wmul@multiplicand 00A2  
              i1___wmul@product 0075                    spiWrite@data 00A0                   _update_volume 0E08  
                           l200 0BF6                             l120 0E07                             l123 0C9E  
                           l140 0C37                             l132 0D5D                             l124 0CD5  
                           l141 0C1A                             l133 0D26                             l150 0EE5  
                           l142 0C4C                             l134 0D39                             l151 0F26  
                           l143 0C4C                             l135 0D55                             l127 0E16  
                           l160 0EC4                             l152 0F04                             l136 0D6C  
                           l128 0E62                             l161 0EC4                             l153 0F25  
                           l137 0D6C                             l129 0E41                             l154 0F23  
                           l146 0BBE                             l155 0F24                             l147 0BD9  
                           l172 0B02                             l164 0AF6                             l156 0F26  
                           l173 0B02                             l165 0AF9                             l174 0B09  
                           l175 0B09                             l159 0E76                             l192 0BE3  
                           l168 0AE7                             l440 0407                             l193 0C12  
                           l169 0AEA                             l441 0408                             l194 0BFB  
                           l266 0F8F                             l434 04F8                             l450 04A5  
                           l442 0436                             l195 0BE6                             l451 04F7  
                           l443 0409                             l435 03F2                             l196 0C10  
                           l452 0519                             l444 0450                             l436 0404  
                           l197 0BEA                             l453 051F                             l445 045A  
                           l437 040B                             l198 0BEE                             l446 048E  
                           l438 0406                             l199 0BF2                             l295 0B20  
                           l439 051A                             l447 0483                             l448 04A0  
                           l456 0B4E                             l449 04ED                             l457 0B58  
                           l722 0DB4                             l458 0B6D                             l723 0D86  
                           l459 0B72                             l724 0D7A                             l732 0C8A  
                           l725 0D8B                             l733 0C64                             l726 0D8C  
                           l734 0C58                             l727 0DA5                             l735 0C69  
                           l728 0DB3                             l736 0C6A                             l729 0DB9  
                           l737 0C7B                             l738 0C89                             l739 0C8F  
                 ?_display_init 0071                    __CFG_CPD$OFF 0000                             _isr 0B73  
                           fsr0 0004                             indf 0000                   write_char@pos 00B0  
                  __CFG_LVP$OFF 0000                    ___fltol@exp1 0044                            l2000 0C1A  
                          l2010 03F8                            l2002 0C30                            l2020 0436  
                          l2012 03FF                            l2004 0C37                            l2030 0450  
                          l2022 043E                            l2014 0404                            l2006 03ED  
                          l2040 0483                            l2032 0452                            l2024 0442  
                          l2016 040A                            l2008 03F2                            l2050 04A5  
                          l2034 0459                            l2042 048E                            l2026 0446  
                          l2018 040B                            l2052 04E1                            l2044 0494  
                          l2036 045A                            l2028 044A                            l2060 051A  
                          l2062 051F                            l2054 04E8                            l2046 049B  
                          l2038 0482                            l2400 0DE7                            l2056 04ED  
                          l2048 04A0                            l2410 0DF8                            l2402 0DED  
                          l2058 04F8                            l2412 0DFB                            l2404 0DF0  
                          l2420 0AEB                            l2414 0DFC                            l2406 0DF1  
                          l2422 0AF2                            l2430 0D38                            l2416 0DFF  
                          l2408 0DF2                            l2360 0DC3                            l2600 0F5E  
                          l2440 0BA4                            l2432 0D39                            l2424 0D21  
                          l2418 0E03                            l2370 0DCA                            l2362 0DC4  
                          l2610 0F63                            l2602 0F5F                            l2450 0AE3  
                          l2442 0BB3                            l2434 0D3F                            l2426 0D26  
                          l2380 0DD6                            l2372 0DCB                            l2364 0DC7  
                          l2356 0DBA                            l2460 0B1D                            l2452 0B0A  
                          l2612 0F67                            l2604 0F60                            l1900 0B49  
                          l2444 0BBD                            l2436 0D47                            l2428 0D2A  
                          l2620 0E15                            l2390 0DE2                            l2382 0DD7  
                          l2374 0DCC                            l2366 0DC8                            l2358 0DC2  
                          l2454 0B14                            l2614 0F6B                            l2606 0F61  
                          l1910 0B6D                            l1902 0B4E                            l2446 0BBE  
                          l2438 0D55                            l2630 0E2D                            l2622 0E16  
                          l2392 0DE3                            l2384 0DDD                            l2376 0DD2  
                          l2368 0DC9                            l2456 0B17                            l2616 0F7D  
                          l2608 0F62                            l2560 0F2D                            l2448 0ADC  
                          l1912 0B72                            l1904 0B52                            l1920 0E76  
                          l2640 0E5C                            l2632 0E3A                            l2624 0E17  
                          l2394 0DE4                            l2386 0DE0                            l2378 0DD5  
                          l2458 0B1A                            l2570 0F32                            l2562 0F2E  
                          l1906 0B5F                            l1922 0EAE                            l1914 0E63  
                          l1930 0ED4                            l2650 0CB0                            l2642 0C90  
                          l2634 0E41                            l2626 0E1C                            l2618 0E08  
                          l2660 0BE2                            l2396 0DE5                            l2388 0DE1  
                          l2580 0F3E                            l2572 0F36                            l2564 0F2F  
                          l1908 0B66                            l1924 0EB6                            l1916 0E67  
                          l1940 0EFA                            l1932 0EDB                            l2652 0CBB  
                          l2644 0C9D                            l2636 0E4C                            l2628 0E27  
                          l2670 0BF2                            l2662 0BE3                            l2398 0DE6  
                          l2590 0F4D                            l2582 0F41                            l2574 0F39  
                          l2566 0F30                            l2558 0F27                            l1950 0D6D  
                          l1918 0E75                            l1942 0F04                            l1934 0EE5  
                          l1926 0EC8                            l2654 0CCA                            l2646 0CA0  
                          l2638 0E57                            l2750 0024                            l2672 0BF6  
                          l2664 0BE6                            l2592 0F4E                            l2584 0F44  
                          l2576 0F3A                            l2568 0F31                            l1960 0D86  
                          l1952 0D71                            l1944 0F0C                            l1936 0EED  
                          l1928 0ECE                            l2656 0CCF                            l2648 0CA5  
                          l2752 002E                            l2744 0016                            l2674 0BFA  
                          l2666 0BEA                            l2658 0BDA                            l2594 0F51  
                          l2586 0F47                            l2578 0F3D                            l1970 0DAC  
                          l1962 0D8C                            l1954 0D77                            l1946 0F12  
                          l1938 0EF3                            l2754 0033                            l2746 001C  
                          l2668 0BEE                            l2676 0BFB                            l2596 0F56  
                          l2588 0F4A                            l1964 0D9D                            l1956 0D7A  
                          l1972 0DB4                            l1980 0C58                            l2852 042B  
                          l1948 0F19                            l2748 0022                            l2854 0C02  
                          l2678 0C10                            l2598 0F5B                            l1974 0DB9  
                          l1966 0DA3                            l1958 0D81                            l1990 0C7B  
                          l1982 0C5F                            l1968 0DA5                            l1992 0C82  
                          l1984 0C64                            l1976 0C4D                            l1898 0AFD  
                          l1986 0C6A                            l1978 0C55                            l1994 0C8A  
                          l1996 0C8F                            l1988 0C74                            l1998 0C13  
                          ?_isr 0071                            STR_1 0990                            STR_2 0996  
                          STR_3 099A                            u1520 0B6C                            u1600 0F12  
                          u1521 0B6B                            u1505 0B59                            u1601 0F11  
                          u1610 0D77                            u1530 0E74                            u1611 0D76  
                          u1515 0B60                            u1531 0E73                            u1700 0C68  
                          u1540 0EC3                            u1701 0C67                            u1541 0EC2  
                          u1630 0D8A                            u1710 0C74                            u1550 0ECE  
                          u1631 0D89                            u1711 0C73                            u1535 0E70  
                          u1551 0ECD                            u1480 0B08                            u1800 0494  
                          u1560 0ED4                            u2600 0D6B                            u1481 0B07  
                          u1625 0D7B                            u1801 0493                            u1545 0EBF  
                          u1561 0ED3                            u2601 0D6A                            u1650 0D9D  
                          u1730 0C88                            u1810 04F6                            u1490 0B52  
                          u1570 0EED                            u2610 0BB3                            u1651 0D9C  
                          u1731 0C87                            u1715 0C70                            u1811 04F5  
                          u1491 0B51                            u1571 0EEC                            u2611 0BB2  
                          u2620 0AE3                            u1820 0518                            u1580 0EF3  
                          u1740 0C4B                            u2621 0AE2                            u1645 0D8D  
                          u1725 0C7C                            u1821 0517                            u1581 0EF2  
                          u1741 0C4A                            u2605 0D67                            u1670 0DB2  
                          u1750 03F8                            u1590 0F0C                            u1671 0DB1  
                          u1655 0D99                            u1751 03F7                            u1591 0F0B  
                          u2615 0BAF                            u1680 0C55                            u1760 0446  
                          u2720 0E14                            u1665 0DA6                            u1681 0C54  
                          u1761 0445                            u2721 0E13                            u2570 0AF2  
                          u1770 0458                            u2730 0E3A                            u2571 0AF1  
                          u1771 0457                            u2731 0E39                            u1780 0481  
                          u2580 0D37                            u2740 0C9C                            u1781 0480  
                          u2581 0D36                            u2741 0C9B                            u2725 0E10  
                          u2750 0BE1                            u1790 048D                            u2590 0D54  
                          u2910 0022                            u2751 0BE0                            u1695 0C59  
                          u1791 048C                            u2591 0D53                            u2735 0E36  
                          u2911 0021                            u1785 047D                            u2585 0D33  
                          u2745 0C98                            u2595 0D50                            u2957 0039  
                          i1l62 0B8A                            i1l63 0B88                            i1l64 0B99  
                          i1l65 0B99                    __CFG_WRT$OFF 0000                            _main 0016  
                          _font 0812          is_deadzone@deadzoneLow 004B                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0012                   __CFG_IESO$OFF 0000  
                  ?_is_deadzone 0045                           ??_isr 0058                  ?_update_volume 0071  
                 ___fltol@sign1 0043                  ??_display_init 00A1                 __end_of___fladd 07E4  
                         ?_main 0071                   __CFG_WDTE$OFF 0000                 __end_of___fltol 0260  
               __end_of___lwdiv 0DBA                           i1l210 0135                           i1l211 0141  
                         i1l203 0106                           i1l300 03E9                           i1l204 0105  
                         i1l205 0101                           i1l206 0104                           i1l303 0158  
                         i1l207 0136                           i1l304 01C3                           i1l208 0136  
                         i1l305 017E                           i1l209 0130                           i1l330 0FB1  
                         i1l307 0179                           i1l331 0FFA                           i1l308 01BE  
                         i1l340 0075                           i1l332 0FFF                           i1l309 01BE  
                         i1l341 0082                           i1l342 008D                           i1l343 00C0  
                         i1l335 0099                           i1l336 0050                           i1l337 00B7  
               __end_of___lwmod 0C90                           i1l338 005B                           i1l339 0068  
                         i1l456 0B24                           i1l457 0B2E                           i1l650 0248  
                         i1l642 01E3                           i1l458 0B43                           i1l722 0D1B  
                         i1l651 023D                           i1l643 025F                           i1l459 0B48  
                         i1l299 03DF                           i1l723 0CED                           i1l652 024E  
                         i1l644 022C                           i1l724 0CE1                           i1l653 025F  
                         i1l645 0218                           i1l725 0CF2                           i1l750 0589  
                         i1l742 0533                           i1l646 0219                           i1l726 0CF3  
                         i1l751 05D5                           i1l743 0549                           i1l647 022B  
                         i1l727 0D0C                           i1l760 063E                           i1l752 0598  
                         i1l744 0546                           i1l648 024F                           i1l728 0D1A  
                         i1l761 0695                           i1l753 060E                           i1l745 0552  
                         i1l649 023C                           i1l729 0D20                           i1l770 0712  
                         i1l762 0653                           i1l754 063E                           i1l746 055F  
                         i1l771 0721                           i1l763 07E3                           i1l755 0637  
                         i1l747 056B                           i1l780 0777                           i1l772 0738  
                         i1l764 0694                           i1l756 060F                           i1l748 0581  
                         i1l781 076E                           i1l773 075A                           i1l765 067D  
                         i1l757 061E                           i1l749 057E                           i1l790 07CC  
                         i1l782 0776                           i1l774 0739                           i1l766 0680  
                         i1l758 0621                           i1l870 02B0                           i1l791 07D3  
                         i1l783 0775                           i1l775 0747                           i1l767 0686  
                         i1l759 0629                           i1l871 02CC                           i1l792 07D7  
                         i1l784 07B2                           i1l768 0760                           i1l776 074E  
                         i1l880 031A                           i1l872 02B1                           i1l864 027C  
                         i1l793 07E3                           i1l785 07B2                           i1l777 0751  
                         i1l769 0713                           i1l873 02D3                           i1l865 0284  
                         i1l786 07B1                           i1l778 0759                           i1l874 02E0  
                         i1l866 0296                           i1l787 07CD                           i1l779 075F  
                         i1l875 02D4                           i1l867 0323                           i1l868 02A9  
                         i1l789 07BD                           i1l877 02EB                           i1l869 029B  
                         i1l878 02EB                           i1l879 02F7                           _PORTA 0005  
                         _PORTC 0007                           _TRISC 0087                           _TRISD 0088  
         _activateSelectedRelay 0BDA                  __CFG_FCMEN$OFF 0000                     _write_space 0D21  
               __end_of_dpowers 098E                   _start_receive 0F90         is_deadzone@deadzoneHigh 004D  
                         pclath 000A                __end_ofi1___wmul 0B49                           status 0003  
           i1___wmul@multiplier 0071                           wtemp0 007E                 __end_of_sprintf 0520  
            __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 0050                  __CFG_MCLRE$OFF 0000  
               __initialization 07E4                    __end_of_main 0042                    __end_of_font 0984  
            handle_rotary@portA 0074              handle_rotary@portB 0076             _display_write_start 0AEB  
                        ??_main 00C3                 _handle_potmeter 0142                  write_text@text 00B3  
                ?_start_receive 0071                          _ADRESH 001E                          _ADRESL 009E  
          ?_display_write_start 0071                          i1l2100 024F                          i1l2110 0531  
                        i1l2102 0254                          i1l2200 0637                          i1l2120 0547  
                        i1l2112 0533                          i1l2104 0520                          i1l2210 066C  
                        i1l2202 0642                          i1l2130 055F                          i1l2114 0538  
                        i1l2122 0549                          i1l2106 0527                          i1l2220 0684  
                        i1l2212 0670                          i1l2204 0647                          i1l2140 0575  
                        i1l2132 0565                          i1l2124 0552                          i1l2116 053D  
                        i1l2108 052D                          i1l2300 0268                          i1l2230 06FC  
                        i1l2222 0686                          i1l2214 0674                          i1l2206 0652  
                        i1l2150 0593                          i1l2142 057E                          i1l2134 0569  
                        i1l2126 0557                          i1l2118 0546                          i1l2070 01D9  
                        i1l2310 0296                          i1l2302 026C                          i1l2240 072E  
                        i1l2232 06FE                          i1l2224 068F                          i1l2216 067D  
                        i1l2208 0653                          i1l2160 05A8                          i1l2152 0598  
                        u200_20 058F                          i1l2144 057F                          i1l2136 056B  
                        i1l2128 055D                          i1l2080 0201                          i1l2072 01E2  
                        i1l2320 02C3                          i1l2312 029B                          i1l2304 027C  
                        u200_21 058E                          i1l2250 074B                          i1l2242 0737  
                        i1l2234 0703                          i1l2218 0680                          i1l2226 0695  
                        i1l2170 05BC                          i1l2162 05AC                          i1l2154 059C  
                        i1l2138 0570                          i1l2146 0581                          i1l2090 0219  
                        i1l2082 0203                          i1l2074 01E3                          i1l2330 02F9  
                        i1l2322 02D4                          i1l2314 02A9                          i1l2306 028C  
                        i1l2252 074E                          i1l2244 0739                          i1l2228 06AD  
                        i1l2236 0713                          i1l2260 0760                          i1l2180 05D0  
                        i1l2172 05C0                          i1l2164 05B0                          i1l2156 05A0  
                        i1l2148 058F                          i1l2084 0207                          i1l2092 022C  
                        i1l2076 01F8                          i1l2068 01C4                          i1l2340 0323  
                        i1l2332 030F                          i1l2324 02E0                          i1l2316 02B1  
                        i1l2308 0295                          i1l2500 006E                          i1l2270 0777  
                        i1l2262 0761                          i1l2254 0751                          i1l2246 0742  
                        i1l2238 0729                          i1l2190 061E                          i1l2174 05C4  
                        i1l2166 05B4                          i1l2158 05A4                          i1l2182 05D5  
                        i1l2094 0232                          i1l2086 020E                          i1l2078 01F9  
                        i1l2334 0314                          i1l2326 02E4                          i1l2318 02B5  
                        i1l2350 0B3C                          i1l2342 0B21                          i1l2510 0082  
                        i1l2502 0072                          i1l2280 07B7                          i1l2272 077C  
                        i1l2264 0765                          i1l2256 0756                          i1l2248 0746  
                        i1l2192 0621                          i1l2184 05D6                          i1l2176 05C8  
                        i1l2168 05B8                          u201_20 0593                          i1l2096 023B  
                        i1l2088 0217                          i1l2336 0318                          i1l2328 02EF  
                        i1l2352 0B43                          i1l2344 0B24                          i1l2512 008A  
                        i1l2504 0075                          i1l2520 0099                          u201_21 0592  
                        i1l2290 07D1                          i1l2282 07BD                          i1l2274 078A  
                        i1l2266 076B                          i1l2258 075A                          i1l2194 0627  
                        i1l2186 05F2                          i1l2178 05CC                          i1l2098 023D  
                        i1l2338 031A                          i1l2354 0B48                          i1l2346 0B28  
                        i1l2514 008D                          i1l2506 007B                          i1l2522 00B7  
                        i1l2292 07D3                          i1l2284 07C5                          i1l2276 078E  
                        i1l2268 0772                          i1l2196 0629                          i1l2188 0613  
                        i1l2348 0B35                          i1l2540 0CE8                          i1l2532 0CD6  
                        i1l2700 0111                          i1l2516 0095                          i1l2508 007F  
                        i1l2294 07DE                          i1l2286 07CA                          i1l2278 07AC  
                        i1l2198 0632                          i1l2470 03BC                          i1l2462 0324  
                        i1l2550 0D0C                          i1l2542 0CED                          i1l2534 0CD8  
                        i1l2710 013F                          i1l2702 011B                          i1l2518 0098  
                        i1l2296 07E2                          i1l2288 07CD                          u210_20 0647  
                        u202_20 05F2                          i1l2472 03CA                          i1l2464 0345  
                        i1l2552 0D13                          i1l2544 0CF3                          i1l2536 0CDE  
                        i1l2704 0121                          i1l2480 0042                          i1l2720 0FB1  
                        i1l2712 0F90                          u210_21 0646                          u202_21 05F1  
                        i1l2298 0263                          i1l2474 03DA                          i1l2466 0380  
                        i1l2546 0D04                          i1l2538 0CE1                          i1l2554 0D1B  
                        i1l2730 0142                          i1l2706 0129                          i1l2490 0058  
                        i1l2482 0043                          i1l2722 0FDE                          i1l2714 0F9E  
                        i1l2476 03DF                          i1l2468 03BB                          i1l2556 0D20  
                        i1l2548 0D0A                          i1l2740 017E                          i1l2732 0157  
                        i1l2708 0130                          i1l2492 005B                          i1l2484 0047  
                        i1l2724 0FE4                          i1l2716 0FA2                          u202_25 05EE  
                        i1l2478 03E9                          i1l2742 01B3                          i1l2734 0158  
                        i1l2494 0061                          i1l2486 0050                          i1l2726 0FEC  
                        i1l2718 0FB0                          u203_20 05FD                          i1l2736 015E  
                        i1l2496 0065                          i1l2488 0054                          i1l2728 0FFA  
                        i1l2760 0B7C                          u211_21 065E                          u203_21 05FB  
                        u211_22 0665                          i1l2738 0179                          i1l2690 00E9  
                        i1l2498 0068                          i1l2770 0B95                          i1l2762 0B82  
                        u211_23 066C                          i1l2692 00EF                          i1l2684 00C1  
                        i1l2764 0B88                          i1l2756 0B73                          i1l2694 00FA  
                        i1l2686 00D5                          i1l2758 0B77                          i1l2766 0B8A  
                        u220_20 0729                          u212_20 0670                          u204_20 05FE  
                        i1l2696 0101                          i1l2688 00DF                          i1l2856 00A1  
                        i1l2768 0B90                          u220_21 0728                          u212_21 066F  
                        i1l2698 0106                          i1l2858 00AC                          u221_20 072E  
                        u213_20 0674                          u205_20 0613                          u221_21 072D  
                        u213_21 0673                          u205_21 0612                          u230_20 077C  
                        u214_20 0684                          u206_20 0627                          u230_21 077B  
                        u214_21 0683                          u206_21 0626                          u222_25 073B  
                        u231_20 078E                          u223_20 0746                          u231_21 078D  
                        u223_21 0745                          u215_25 0688                          u207_25 062B  
                        u232_20 079D                          u224_20 074B                          u216_20 06AD  
                        u208_20 063D                          u240_20 026C                          u224_21 074A  
                        u216_21 06AC                          u208_21 063C                          u240_21 026B  
                        u216_23 06A9                          u232_25 0798                          u233_20 07AC  
                        u225_20 0756                          u217_20 06D3                          u209_20 0642  
                        u241_20 028C                          u233_21 07AB                          u225_21 0755  
                        u217_21 06D4                          u209_21 0641                          u241_21 028B  
                        u217_22 06D9                          u217_23 06DA                          u234_20 07B7  
                        u226_20 075E                          u218_20 06E5                          u250_20 0304  
                        u234_21 07B6                          u226_21 075D                          u218_21 06E6  
                        u218_22 06EB                          u218_23 06EC                          u250_25 02FF  
                        u242_25 02A0                          u235_20 07BC                          u227_20 0765  
                        u219_20 0703                          u251_20 0314                          u243_20 02AF  
                        u235_21 07BB                          u227_21 0764                          u219_21 0702  
                        u251_21 0313                          u243_21 02AE                          u236_20 07CA  
                        u228_20 076B                          u252_20 0318                          u236_21 07C9  
                        u228_21 076A                          u252_21 0317                          u244_25 02C4  
                        u237_20 07D1                          u229_20 0772                          u245_20 02D2  
                        u253_20 0B28                          u237_21 07D0                          u229_21 0771  
                        u245_21 02D1                          u253_21 0B27                          u238_20 07E2  
                        u238_21 07E1                          u190_25 023F                          u246_25 02D8  
                        u254_25 0B2F                          u270_25 0D0D                          u191_20 024D  
                        u183_20 01D9                          u247_20 02E4                          u239_20 0268  
                        u263_20 03CA                          u271_20 0D19                          u191_21 024C  
                        u183_21 01D8                          u247_21 02E3                          u239_21 0267  
                        u263_21 03C9                          u271_21 0D18                          u255_25 0B36  
                        u263_25 03C6                          u192_20 0254                          u184_20 01F1  
                        u248_20 02EA                          u256_20 0B42                          u264_20 03DA  
                        u280_20 0111                          u192_21 0253                          u248_21 02E9  
                        u256_21 0B41                          u264_21 03D9                          u280_21 0110  
                        u184_25 01EC                          u264_25 03D6                          u280_25 010D  
                        u193_20 0531                          u185_20 0207                          u249_20 02EF  
                        u265_20 0CDE                          u281_20 011B                          u193_21 0530  
                        u185_21 0206                          u249_21 02EE                          u265_21 0CDD  
                        u281_21 011A                          u281_25 0117                          u194_20 0538  
                        u186_20 020E                          u290_20 01B3                          u282_20 0121  
                        u194_21 0537                          u186_21 020D                          u290_21 01B2  
                        u282_21 0120                          u266_25 0CE2                          u195_20 053D  
                        u267_20 0CF1                          u283_20 0129                          u195_21 053C  
                        u267_21 0CF0                          u283_21 0128                          u187_25 021A  
                        u196_20 055D                          u188_20 022A                          u276_20 00DF  
                        u284_20 0FAF                          u292_20 0B77                          u196_21 055C  
                        u188_21 0229                          u276_21 00DE                          u284_21 0FAE  
                        u292_21 0B76                          u268_25 0CF4                          u276_25 00DB  
                        u284_25 0FAB                          u197_20 0569                          u189_20 0232  
                        u269_20 0D04                          u277_20 00E9                          u285_20 0FCB  
                        u293_20 0B82                          u197_21 0568                          u189_21 0231  
                        u269_21 0D03                          u277_21 00E8                          u293_21 0B81  
                        u269_25 0D00                          u277_25 00E5                          u285_25 0FC6  
                        u198_20 0570                          u278_20 00EF                          u286_20 0FF9  
                        u294_20 0B90                          u198_21 056F                          u278_21 00EE  
                        u286_21 0FF8                          u294_21 0B8F                          u286_25 0FF5  
                        u199_20 0575                          u287_20 0156                          u279_20 00FA  
                        u199_21 0574                          u287_21 0155                          u279_21 00F9  
                        u287_25 0152                          u288_20 015E                          u288_21 015D  
                        u296_27 0F9C                          u289_20 0178                          u289_21 0177  
                        u289_25 0174                          u297_27 0FE0                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 0324                  __CFG_PWRTE$OFF 0000  
                     ??___fladd 002E                          ___wmul 0B49                          __lastA 0064  
                        __lastB 0062                 ??_update_volume 00C1                       ??___fltol 003E  
                     ??___lwdiv 00A4                       ??___lwmod 00AC                          _config 0F27  
              __end_of_init_adc 0B21                          _volume 00C9                 write_int@number 00BD  
        ?_activateSelectedRelay 0071               __end_ofi1___lwdiv 0D21                          saved_w 007E  
              __end_of_spiWrite 0B0A                       ??_sprintf 00B2           ??_display_write_start 00A0  
                  ___xxtofl@arg 0022                    ___xxtofl@exp 0021                    ___xxtofl@val 0071  
       __end_of__initialization 07FC          is_deadzone@currentStep 0045            __end_of_display_init 0E08  
                    ___fltol@f1 003A                  __pcstackCOMMON 0071            __size_of_is_deadzone 00C6  
       __end_of_handle_potmeter 01C4                       ?i1___wmul 0071                 ??_start_receive 0076  
                    __pbssBANK0 005C                      __pbssBANK1 00C5           __end_of_handle_remote 00C1  
         __end_of_handle_rotary 0142                      __pmaintext 0016                         ?___wmul 00A0  
                    __pintentry 0004                         ?_config 0071                      ??i1___wmul 0075  
                __selectedInput 00CB                       ?___xxtofl 0071                    ?_write_space 00A1  
                       _SSPSTAT 0094                      __stringtab 0800                       ?_init_adc 0071  
            __size_of_write_int 0036                      _lastVolume 00C7                       ?_spiWrite 0071  
                       ___fladd 0520                ?_handle_potmeter 0071                         ___fltol 01C4  
               __size_of___wmul 002A                         ___lwdiv 0D6D                         ___lwmod 0C4D  
               __size_of_config 0069                       _ANSELbits 0188                         __ptext1 0E08  
                       __ptext2 0C90                         __ptext3 0D21                         __ptext4 0BA4  
                       __ptext5 0C13                         __ptext6 0EC5                         __ptext7 0E63  
                       __ptext8 0B49                         __ptext9 03EA                __selectedDisplay 00CD  
                       _dpowers 0984               i1___lwdiv@divisor 0071                    __size_of_isr 0031  
             i1___lwdiv@counter 0078                      ??___xxtofl 0075                         _sprintf 03EA  
         __size_of_display_init 004E            end_of_initialization 07FC                      ??_init_adc 00A0  
                    ??_spiWrite 00A0                    __pstringtext 0800               handle_remote@data 0073  
             __end_of_step_size 0990               handle_remote@mask 0071           i1___wmul@multiplicand 0073  
       ??_activateSelectedRelay 00A0                       _PORTBbits 0006                       _PORTCbits 0007  
                     _PORTDbits 0008            __inputUpdateRequired 0066      handle_potmeter@currentStep 0054  
                  _display_init 0DBA                     ___fladd@grs 007C               __end_of_write_int 0BDA  
                 ___xxtofl@sign 0020                       _TRISAbits 0085                       _TRISBbits 0086  
                     _TRISCbits 0087                       _TRISEbits 0089                       i1___lwdiv 0CD6  
                  write_int@num 00BF                    write_space@i 00A4                    write_space@x 00A6  
                 ?_update_input 0071                  __end_of___wmul 0B73           __end_of_update_volume 0E63  
                    _write_char 0EC5                      _write_font 0E63                  __end_of_config 0F90  
                    _write_text 0C13     __end_of_display_write_start 0AFA             start_initialization 07E4  
             __size_ofi1___wmul 0028                     __end_of_isr 0BA4                      ?i1___lwdiv 0071  
          __size_of_write_space 004C                write_space@count 00A1                   ??_is_deadzone 0049  
                ??_update_input 00C1                        ??___wmul 00A4                        ??_config 00A1  
           update_volume@spaces 00C1                       ___fladd@a 002A                       ___fladd@b 0026  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
         __end_of_start_receive 1000               __size_of___xxtofl 00C4          __CFG_FOSC$INTRC_CLKOUT 0000  
                   sprintf@flag 00B7                     sprintf@prec 00B8               __size_of_init_adc 0017  
              ___lwdiv@dividend 00A2                        ?___fladd 0026                        ?___fltol 003A  
                      ?___lwdiv 00A0                        ?___lwmod 00A8             __end_of_is_deadzone 03EA  
                   ?_write_char 0071               __size_of_spiWrite 0010                     ?_write_font 00A6  
                   ?_write_text 00B3          __size_of_handle_remote 007F          __size_of_handle_rotary 0081  
                     _lastInput 00C5                ___lwdiv@quotient 00A5                     ??i1___lwdiv 0075  
                      ?_sprintf 00AE                 _is_deadzone$867 004F               interrupt_function 0004  
                ___wmul@product 00A4                        _IOCBbits 0096                        _PIE1bits 008C  
                      _PIR1bits 000C  __size_of_activateSelectedRelay 0039                      _ADCON0bits 001F  
                   __stringbase 0812                      _ADCON1bits 009F               ___wmul@multiplier 00A0  
 __end_of_activateSelectedRelay 0C13                        i1___wmul 0B21                       _step_size 098E  
                   write_char@c 00B2        __size_of_handle_potmeter 0082                     write_font@x 00AE  
                   write_text@c 00B5            __end_of_update_input 0CD6                       _write_int 0BA4  
             _display_write_end 0ADC             __size_of_write_char 0062                   _handle_remote 0042  
           __size_of_write_font 0062             __size_of_write_text 003A                   _handle_rotary 00C1  
            ?_display_write_end 0071                     _is_deadzone 0324             ??_display_write_end 00A0  
              __size_of___fladd 02C4                  __lastAdcResult 0060                __size_of___fltol 009C  
              __size_of___lwdiv 004D                __size_of___lwmod 0043              __end_of__stringtab 0812  
                    _ANSELHbits 0189                      sprintf@val 00B9                        ___xxtofl 0260  
               ___lwdiv@divisor 00A0                 ___lwdiv@counter 00A7                        __ptext10 0C4D  
                      __ptext11 0D6D                        __ptext20 0F90                        __ptext12 0AEB  
                      __ptext21 0042                        __ptext13 0ADC                        __ptext22 00C1  
                      __ptext14 0F27                        __ptext23 0142                        __ptext15 0B0A  
                      __ptext24 0CD6                        __ptext16 0DBA                        __ptext25 0324  
                      __ptext17 0AFA                        __ptext26 0B21                        __ptext18 0BDA  
                      __ptext27 0260                        __ptext19 0B73                        __ptext28 01C4  
                      __ptext29 0520               __CFG_BOR4V$BOR21V 0000                      ?_write_int 00BD  
     __end_of_display_write_end 0AEB                __size_of_sprintf 0136              i1___lwdiv@dividend 0073  
                ?_handle_remote 0071                        _ir_input 005C                  ?_handle_rotary 0071  
                      _init_adc 0B0A                   __size_of_main 002C               write_font@fontPos 00A6  
      handle_potmeter@ad_result 0056                        _spiWrite 0AFA              i1___lwdiv@quotient 0076  
                    _INTCONbits 000B                   ??_write_space 00A3               ??_handle_potmeter 0052  
                      intlevel1 0000                       sprintf@ap 00B6    __size_of_display_write_start 000F  
                     sprintf@sp 00BB                ___lwmod@dividend 00AA          __size_of_update_volume 005B  
                     stringcode 080A                      _OSCCONbits 008F                    ??_write_char 00B0  
                  ??_write_font 00A8                    ??_write_text 00B5              handle_remote@found 0075  
                      sprintf@c 00BC                        sprintf@f 00AE           __size_of_update_input 0046  
                start_receive@i 0020                 ___lwmod@divisor 00A8                 ___lwmod@counter 00AD  
                      stringtab 0800                     ??_write_int 00BF                   ___fladd@signs 0079  
               ??_handle_remote 0071      __size_of_display_write_end 000F                 ??_handle_rotary 0071  
           __end_of_write_space 0D6D                    ___fladd@aexp 007A                    ___fladd@bexp 007B  
          is_deadzone@adcResult 0047              __end_of_write_char 0F27              __end_of_write_font 0EC5  
            __end_of_write_text 0C4D  
