

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jan 28 12:13:07 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_update_input
  1182                           	FNCALL	_main,_update_vol_motor
  1183                           	FNCALL	_main,_update_volume
  1184                           	FNCALL	_update_volume,_display_write_end
  1185                           	FNCALL	_update_volume,_display_write_start
  1186                           	FNCALL	_update_volume,_write_int
  1187                           	FNCALL	_update_volume,_write_space
  1188                           	FNCALL	_update_volume,_write_text
  1189                           	FNCALL	_update_vol_motor,_get_volume
  1190                           	FNCALL	_get_volume,___lwdiv
  1191                           	FNCALL	_get_volume,_is_deadzone
  1192                           	FNCALL	_is_deadzone,___fladd
  1193                           	FNCALL	_is_deadzone,___fltol
  1194                           	FNCALL	_is_deadzone,___wmul
  1195                           	FNCALL	_is_deadzone,___xxtofl
  1196                           	FNCALL	_update_input,_display_write_end
  1197                           	FNCALL	_update_input,_display_write_start
  1198                           	FNCALL	_update_input,_write_int
  1199                           	FNCALL	_update_input,_write_space
  1200                           	FNCALL	_update_input,_write_text
  1201                           	FNCALL	_write_space,_spiWrite
  1202                           	FNCALL	_write_int,_sprintf
  1203                           	FNCALL	_write_int,_write_char
  1204                           	FNCALL	_write_int,_write_text
  1205                           	FNCALL	_write_text,_write_char
  1206                           	FNCALL	_write_char,_write_font
  1207                           	FNCALL	_write_font,___wmul
  1208                           	FNCALL	_write_font,_spiWrite
  1209                           	FNCALL	_sprintf,___lwdiv
  1210                           	FNCALL	_sprintf,___lwmod
  1211                           	FNCALL	_config,_display_init
  1212                           	FNCALL	_config,_init_adc
  1213                           	FNCALL	_display_init,_spiWrite
  1214                           	FNROOT	_main
  1215                           	FNCALL	_isr,_handle_potmeter
  1216                           	FNCALL	_isr,_handle_rotary
  1217                           	FNCALL	_isr,_start_receive
  1218                           	FNCALL	_start_receive,_handle_remote
  1219                           	FNCALL	_handle_potmeter,i1_get_volume
  1220                           	FNCALL	i1_get_volume,i1___lwdiv
  1221                           	FNCALL	i1_get_volume,i1_is_deadzone
  1222                           	FNCALL	i1_is_deadzone,i1___fladd
  1223                           	FNCALL	i1_is_deadzone,i1___fltol
  1224                           	FNCALL	i1_is_deadzone,i1___wmul
  1225                           	FNCALL	i1_is_deadzone,i1___xxtofl
  1226                           	FNCALL	intlevel1,_isr
  1227                           	global	intlevel1
  1228                           	FNROOT	intlevel1
  1229                           	global	_font
  1230                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1231                           global __pstringtext
  1232                           __pstringtext:
  1233  0800                     stringtab:
  1234  0800                     	global    __stringtab
  1235                           __stringtab:
  1236  0800                     ;	String table - string pointers are 2 bytes each
  1237                           	btfsc	(btemp+1),7
  1238  0800  1BFF               	ljmp	stringcode
  1239  0801  280A               	bcf	status,7
  1240  0802  1383               	btfsc	(btemp+1),0
  1241  0803  187F               	bsf	status,7
  1242  0804  1783               	movf	indf,w
  1243  0805  0800               	incf fsr
  1244  0806  0A84               skipnz
  1245  0807  1903               incf btemp+1
  1246  0808  0AFF               	return
  1247  0809  0008               stringcode:
  1248  080A                     	movf btemp+1,w
  1249  080A  087F               andlw 7Fh
  1250  080B  397F               movwf	pclath
  1251  080C  008A               	movf	fsr,w
  1252  080D  0804               incf fsr
  1253  080E  0A84               skipnz
  1254  080F  1903               incf btemp+1
  1255  0810  0AFF               	movwf pc
  1256  0811  0082               	global __stringbase
  1257                           __stringbase:
  1258  0812                     	global    __end_of__stringtab
  1259                           __end_of__stringtab:
  1260  0812                     	file	"./Font.h"
  1261                           	line	4
  1262                           _font:
  1263  0812                     	retlw	03Eh
  1264  0812  343E               	retlw	0
  1265  0813  3400               
  1266                           	retlw	051h
  1267  0814  3451               	retlw	0
  1268  0815  3400               
  1269                           	retlw	049h
  1270  0816  3449               	retlw	0
  1271  0817  3400               
  1272                           	retlw	045h
  1273  0818  3445               	retlw	0
  1274  0819  3400               
  1275                           	retlw	03Eh
  1276  081A  343E               	retlw	0
  1277  081B  3400               
  1278                           	retlw	low(0)
  1279  081C  3400               	retlw	high(0)
  1280  081D  3400               
  1281                           	retlw	042h
  1282  081E  3442               	retlw	0
  1283  081F  3400               
  1284                           	retlw	07Fh
  1285  0820  347F               	retlw	0
  1286  0821  3400               
  1287                           	retlw	040h
  1288  0822  3440               	retlw	0
  1289  0823  3400               
  1290                           	retlw	low(0)
  1291  0824  3400               	retlw	high(0)
  1292  0825  3400               
  1293                           	retlw	042h
  1294  0826  3442               	retlw	0
  1295  0827  3400               
  1296                           	retlw	061h
  1297  0828  3461               	retlw	0
  1298  0829  3400               
  1299                           	retlw	051h
  1300  082A  3451               	retlw	0
  1301  082B  3400               
  1302                           	retlw	049h
  1303  082C  3449               	retlw	0
  1304  082D  3400               
  1305                           	retlw	046h
  1306  082E  3446               	retlw	0
  1307  082F  3400               
  1308                           	retlw	021h
  1309  0830  3421               	retlw	0
  1310  0831  3400               
  1311                           	retlw	041h
  1312  0832  3441               	retlw	0
  1313  0833  3400               
  1314                           	retlw	045h
  1315  0834  3445               	retlw	0
  1316  0835  3400               
  1317                           	retlw	04Bh
  1318  0836  344B               	retlw	0
  1319  0837  3400               
  1320                           	retlw	031h
  1321  0838  3431               	retlw	0
  1322  0839  3400               
  1323                           	retlw	018h
  1324  083A  3418               	retlw	0
  1325  083B  3400               
  1326                           	retlw	014h
  1327  083C  3414               	retlw	0
  1328  083D  3400               
  1329                           	retlw	012h
  1330  083E  3412               	retlw	0
  1331  083F  3400               
  1332                           	retlw	07Fh
  1333  0840  347F               	retlw	0
  1334  0841  3400               
  1335                           	retlw	010h
  1336  0842  3410               	retlw	0
  1337  0843  3400               
  1338                           	retlw	027h
  1339  0844  3427               	retlw	0
  1340  0845  3400               
  1341                           	retlw	045h
  1342  0846  3445               	retlw	0
  1343  0847  3400               
  1344                           	retlw	045h
  1345  0848  3445               	retlw	0
  1346  0849  3400               
  1347                           	retlw	045h
  1348  084A  3445               	retlw	0
  1349  084B  3400               
  1350                           	retlw	039h
  1351  084C  3439               	retlw	0
  1352  084D  3400               
  1353                           	retlw	03Ch
  1354  084E  343C               	retlw	0
  1355  084F  3400               
  1356                           	retlw	04Ah
  1357  0850  344A               	retlw	0
  1358  0851  3400               
  1359                           	retlw	049h
  1360  0852  3449               	retlw	0
  1361  0853  3400               
  1362                           	retlw	049h
  1363  0854  3449               	retlw	0
  1364  0855  3400               
  1365                           	retlw	030h
  1366  0856  3430               	retlw	0
  1367  0857  3400               
  1368                           	retlw	01h
  1369  0858  3401               	retlw	0
  1370  0859  3400               
  1371                           	retlw	071h
  1372  085A  3471               	retlw	0
  1373  085B  3400               
  1374                           	retlw	09h
  1375  085C  3409               	retlw	0
  1376  085D  3400               
  1377                           	retlw	05h
  1378  085E  3405               	retlw	0
  1379  085F  3400               
  1380                           	retlw	03h
  1381  0860  3403               	retlw	0
  1382  0861  3400               
  1383                           	retlw	036h
  1384  0862  3436               	retlw	0
  1385  0863  3400               
  1386                           	retlw	049h
  1387  0864  3449               	retlw	0
  1388  0865  3400               
  1389                           	retlw	049h
  1390  0866  3449               	retlw	0
  1391  0867  3400               
  1392                           	retlw	049h
  1393  0868  3449               	retlw	0
  1394  0869  3400               
  1395                           	retlw	036h
  1396  086A  3436               	retlw	0
  1397  086B  3400               
  1398                           	retlw	06h
  1399  086C  3406               	retlw	0
  1400  086D  3400               
  1401                           	retlw	049h
  1402  086E  3449               	retlw	0
  1403  086F  3400               
  1404                           	retlw	049h
  1405  0870  3449               	retlw	0
  1406  0871  3400               
  1407                           	retlw	029h
  1408  0872  3429               	retlw	0
  1409  0873  3400               
  1410                           	retlw	01Eh
  1411  0874  341E               	retlw	0
  1412  0875  3400               
  1413                           	retlw	07Eh
  1414  0876  347E               	retlw	0
  1415  0877  3400               
  1416                           	retlw	011h
  1417  0878  3411               	retlw	0
  1418  0879  3400               
  1419                           	retlw	011h
  1420  087A  3411               	retlw	0
  1421  087B  3400               
  1422                           	retlw	011h
  1423  087C  3411               	retlw	0
  1424  087D  3400               
  1425                           	retlw	07Eh
  1426  087E  347E               	retlw	0
  1427  087F  3400               
  1428                           	retlw	07Fh
  1429  0880  347F               	retlw	0
  1430  0881  3400               
  1431                           	retlw	049h
  1432  0882  3449               	retlw	0
  1433  0883  3400               
  1434                           	retlw	049h
  1435  0884  3449               	retlw	0
  1436  0885  3400               
  1437                           	retlw	049h
  1438  0886  3449               	retlw	0
  1439  0887  3400               
  1440                           	retlw	036h
  1441  0888  3436               	retlw	0
  1442  0889  3400               
  1443                           	retlw	03Eh
  1444  088A  343E               	retlw	0
  1445  088B  3400               
  1446                           	retlw	041h
  1447  088C  3441               	retlw	0
  1448  088D  3400               
  1449                           	retlw	041h
  1450  088E  3441               	retlw	0
  1451  088F  3400               
  1452                           	retlw	041h
  1453  0890  3441               	retlw	0
  1454  0891  3400               
  1455                           	retlw	022h
  1456  0892  3422               	retlw	0
  1457  0893  3400               
  1458                           	retlw	07Fh
  1459  0894  347F               	retlw	0
  1460  0895  3400               
  1461                           	retlw	041h
  1462  0896  3441               	retlw	0
  1463  0897  3400               
  1464                           	retlw	041h
  1465  0898  3441               	retlw	0
  1466  0899  3400               
  1467                           	retlw	022h
  1468  089A  3422               	retlw	0
  1469  089B  3400               
  1470                           	retlw	01Ch
  1471  089C  341C               	retlw	0
  1472  089D  3400               
  1473                           	retlw	07Fh
  1474  089E  347F               	retlw	0
  1475  089F  3400               
  1476                           	retlw	049h
  1477  08A0  3449               	retlw	0
  1478  08A1  3400               
  1479                           	retlw	049h
  1480  08A2  3449               	retlw	0
  1481  08A3  3400               
  1482                           	retlw	049h
  1483  08A4  3449               	retlw	0
  1484  08A5  3400               
  1485                           	retlw	041h
  1486  08A6  3441               	retlw	0
  1487  08A7  3400               
  1488                           	retlw	07Fh
  1489  08A8  347F               	retlw	0
  1490  08A9  3400               
  1491                           	retlw	09h
  1492  08AA  3409               	retlw	0
  1493  08AB  3400               
  1494                           	retlw	09h
  1495  08AC  3409               	retlw	0
  1496  08AD  3400               
  1497                           	retlw	01h
  1498  08AE  3401               	retlw	0
  1499  08AF  3400               
  1500                           	retlw	01h
  1501  08B0  3401               	retlw	0
  1502  08B1  3400               
  1503                           	retlw	03Eh
  1504  08B2  343E               	retlw	0
  1505  08B3  3400               
  1506                           	retlw	041h
  1507  08B4  3441               	retlw	0
  1508  08B5  3400               
  1509                           	retlw	041h
  1510  08B6  3441               	retlw	0
  1511  08B7  3400               
  1512                           	retlw	051h
  1513  08B8  3451               	retlw	0
  1514  08B9  3400               
  1515                           	retlw	032h
  1516  08BA  3432               	retlw	0
  1517  08BB  3400               
  1518                           	retlw	07Fh
  1519  08BC  347F               	retlw	0
  1520  08BD  3400               
  1521                           	retlw	08h
  1522  08BE  3408               	retlw	0
  1523  08BF  3400               
  1524                           	retlw	08h
  1525  08C0  3408               	retlw	0
  1526  08C1  3400               
  1527                           	retlw	08h
  1528  08C2  3408               	retlw	0
  1529  08C3  3400               
  1530                           	retlw	07Fh
  1531  08C4  347F               	retlw	0
  1532  08C5  3400               
  1533                           	retlw	low(0)
  1534  08C6  3400               	retlw	high(0)
  1535  08C7  3400               
  1536                           	retlw	041h
  1537  08C8  3441               	retlw	0
  1538  08C9  3400               
  1539                           	retlw	07Fh
  1540  08CA  347F               	retlw	0
  1541  08CB  3400               
  1542                           	retlw	041h
  1543  08CC  3441               	retlw	0
  1544  08CD  3400               
  1545                           	retlw	low(0)
  1546  08CE  3400               	retlw	high(0)
  1547  08CF  3400               
  1548                           	retlw	020h
  1549  08D0  3420               	retlw	0
  1550  08D1  3400               
  1551                           	retlw	040h
  1552  08D2  3440               	retlw	0
  1553  08D3  3400               
  1554                           	retlw	041h
  1555  08D4  3441               	retlw	0
  1556  08D5  3400               
  1557                           	retlw	03Fh
  1558  08D6  343F               	retlw	0
  1559  08D7  3400               
  1560                           	retlw	01h
  1561  08D8  3401               	retlw	0
  1562  08D9  3400               
  1563                           	retlw	07Fh
  1564  08DA  347F               	retlw	0
  1565  08DB  3400               
  1566                           	retlw	08h
  1567  08DC  3408               	retlw	0
  1568  08DD  3400               
  1569                           	retlw	014h
  1570  08DE  3414               	retlw	0
  1571  08DF  3400               
  1572                           	retlw	022h
  1573  08E0  3422               	retlw	0
  1574  08E1  3400               
  1575                           	retlw	041h
  1576  08E2  3441               	retlw	0
  1577  08E3  3400               
  1578                           	retlw	07Fh
  1579  08E4  347F               	retlw	0
  1580  08E5  3400               
  1581                           	retlw	040h
  1582  08E6  3440               	retlw	0
  1583  08E7  3400               
  1584                           	retlw	040h
  1585  08E8  3440               	retlw	0
  1586  08E9  3400               
  1587                           	retlw	040h
  1588  08EA  3440               	retlw	0
  1589  08EB  3400               
  1590                           	retlw	040h
  1591  08EC  3440               	retlw	0
  1592  08ED  3400               
  1593                           	retlw	07Fh
  1594  08EE  347F               	retlw	0
  1595  08EF  3400               
  1596                           	retlw	02h
  1597  08F0  3402               	retlw	0
  1598  08F1  3400               
  1599                           	retlw	04h
  1600  08F2  3404               	retlw	0
  1601  08F3  3400               
  1602                           	retlw	02h
  1603  08F4  3402               	retlw	0
  1604  08F5  3400               
  1605                           	retlw	07Fh
  1606  08F6  347F               	retlw	0
  1607  08F7  3400               
  1608                           	retlw	07Fh
  1609  08F8  347F               	retlw	0
  1610  08F9  3400               
  1611                           	retlw	04h
  1612  08FA  3404               	retlw	0
  1613  08FB  3400               
  1614                           	retlw	08h
  1615  08FC  3408               	retlw	0
  1616  08FD  3400               
  1617                           	retlw	010h
  1618  08FE  3410               	retlw	0
  1619  08FF  3400               
  1620                           	retlw	07Fh
  1621  0900  347F               	retlw	0
  1622  0901  3400               
  1623                           	retlw	03Eh
  1624  0902  343E               	retlw	0
  1625  0903  3400               
  1626                           	retlw	041h
  1627  0904  3441               	retlw	0
  1628  0905  3400               
  1629                           	retlw	041h
  1630  0906  3441               	retlw	0
  1631  0907  3400               
  1632                           	retlw	041h
  1633  0908  3441               	retlw	0
  1634  0909  3400               
  1635                           	retlw	03Eh
  1636  090A  343E               	retlw	0
  1637  090B  3400               
  1638                           	retlw	07Fh
  1639  090C  347F               	retlw	0
  1640  090D  3400               
  1641                           	retlw	09h
  1642  090E  3409               	retlw	0
  1643  090F  3400               
  1644                           	retlw	09h
  1645  0910  3409               	retlw	0
  1646  0911  3400               
  1647                           	retlw	09h
  1648  0912  3409               	retlw	0
  1649  0913  3400               
  1650                           	retlw	06h
  1651  0914  3406               	retlw	0
  1652  0915  3400               
  1653                           	retlw	03Eh
  1654  0916  343E               	retlw	0
  1655  0917  3400               
  1656                           	retlw	041h
  1657  0918  3441               	retlw	0
  1658  0919  3400               
  1659                           	retlw	051h
  1660  091A  3451               	retlw	0
  1661  091B  3400               
  1662                           	retlw	021h
  1663  091C  3421               	retlw	0
  1664  091D  3400               
  1665                           	retlw	05Eh
  1666  091E  345E               	retlw	0
  1667  091F  3400               
  1668                           	retlw	07Fh
  1669  0920  347F               	retlw	0
  1670  0921  3400               
  1671                           	retlw	09h
  1672  0922  3409               	retlw	0
  1673  0923  3400               
  1674                           	retlw	019h
  1675  0924  3419               	retlw	0
  1676  0925  3400               
  1677                           	retlw	029h
  1678  0926  3429               	retlw	0
  1679  0927  3400               
  1680                           	retlw	046h
  1681  0928  3446               	retlw	0
  1682  0929  3400               
  1683                           	retlw	046h
  1684  092A  3446               	retlw	0
  1685  092B  3400               
  1686                           	retlw	049h
  1687  092C  3449               	retlw	0
  1688  092D  3400               
  1689                           	retlw	049h
  1690  092E  3449               	retlw	0
  1691  092F  3400               
  1692                           	retlw	049h
  1693  0930  3449               	retlw	0
  1694  0931  3400               
  1695                           	retlw	031h
  1696  0932  3431               	retlw	0
  1697  0933  3400               
  1698                           	retlw	01h
  1699  0934  3401               	retlw	0
  1700  0935  3400               
  1701                           	retlw	01h
  1702  0936  3401               	retlw	0
  1703  0937  3400               
  1704                           	retlw	07Fh
  1705  0938  347F               	retlw	0
  1706  0939  3400               
  1707                           	retlw	01h
  1708  093A  3401               	retlw	0
  1709  093B  3400               
  1710                           	retlw	01h
  1711  093C  3401               	retlw	0
  1712  093D  3400               
  1713                           	retlw	03Fh
  1714  093E  343F               	retlw	0
  1715  093F  3400               
  1716                           	retlw	040h
  1717  0940  3440               	retlw	0
  1718  0941  3400               
  1719                           	retlw	040h
  1720  0942  3440               	retlw	0
  1721  0943  3400               
  1722                           	retlw	040h
  1723  0944  3440               	retlw	0
  1724  0945  3400               
  1725                           	retlw	03Fh
  1726  0946  343F               	retlw	0
  1727  0947  3400               
  1728                           	retlw	01Fh
  1729  0948  341F               	retlw	0
  1730  0949  3400               
  1731                           	retlw	020h
  1732  094A  3420               	retlw	0
  1733  094B  3400               
  1734                           	retlw	040h
  1735  094C  3440               	retlw	0
  1736  094D  3400               
  1737                           	retlw	020h
  1738  094E  3420               	retlw	0
  1739  094F  3400               
  1740                           	retlw	01Fh
  1741  0950  341F               	retlw	0
  1742  0951  3400               
  1743                           	retlw	07Fh
  1744  0952  347F               	retlw	0
  1745  0953  3400               
  1746                           	retlw	020h
  1747  0954  3420               	retlw	0
  1748  0955  3400               
  1749                           	retlw	018h
  1750  0956  3418               	retlw	0
  1751  0957  3400               
  1752                           	retlw	020h
  1753  0958  3420               	retlw	0
  1754  0959  3400               
  1755                           	retlw	07Fh
  1756  095A  347F               	retlw	0
  1757  095B  3400               
  1758                           	retlw	063h
  1759  095C  3463               	retlw	0
  1760  095D  3400               
  1761                           	retlw	014h
  1762  095E  3414               	retlw	0
  1763  095F  3400               
  1764                           	retlw	08h
  1765  0960  3408               	retlw	0
  1766  0961  3400               
  1767                           	retlw	014h
  1768  0962  3414               	retlw	0
  1769  0963  3400               
  1770                           	retlw	063h
  1771  0964  3463               	retlw	0
  1772  0965  3400               
  1773                           	retlw	03h
  1774  0966  3403               	retlw	0
  1775  0967  3400               
  1776                           	retlw	04h
  1777  0968  3404               	retlw	0
  1778  0969  3400               
  1779                           	retlw	078h
  1780  096A  3478               	retlw	0
  1781  096B  3400               
  1782                           	retlw	04h
  1783  096C  3404               	retlw	0
  1784  096D  3400               
  1785                           	retlw	03h
  1786  096E  3403               	retlw	0
  1787  096F  3400               
  1788                           	retlw	061h
  1789  0970  3461               	retlw	0
  1790  0971  3400               
  1791                           	retlw	051h
  1792  0972  3451               	retlw	0
  1793  0973  3400               
  1794                           	retlw	049h
  1795  0974  3449               	retlw	0
  1796  0975  3400               
  1797                           	retlw	045h
  1798  0976  3445               	retlw	0
  1799  0977  3400               
  1800                           	retlw	043h
  1801  0978  3443               	retlw	0
  1802  0979  3400               
  1803                           	retlw	low(0)
  1804  097A  3400               	retlw	high(0)
  1805  097B  3400               
  1806                           	retlw	low(0)
  1807  097C  3400               	retlw	high(0)
  1808  097D  3400               
  1809                           	retlw	low(0)
  1810  097E  3400               	retlw	high(0)
  1811  097F  3400               
  1812                           	retlw	low(0)
  1813  0980  3400               	retlw	high(0)
  1814  0981  3400               
  1815                           	retlw	low(0)
  1816  0982  3400               	retlw	high(0)
  1817  0983  3400               
  1818                           	global __end_of_font
  1819                           __end_of_font:
  1820  0984                     	global	_dpowers
  1821                           psect	stringtext
  1822                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  1823                           	line	358
  1824                           _dpowers:
  1825  0984                     	retlw	01h
  1826  0984  3401               	retlw	0
  1827  0985  3400               
  1828                           	retlw	0Ah
  1829  0986  340A               	retlw	0
  1830  0987  3400               
  1831                           	retlw	064h
  1832  0988  3464               	retlw	0
  1833  0989  3400               
  1834                           	retlw	0E8h
  1835  098A  34E8               	retlw	03h
  1836  098B  3403               
  1837                           	retlw	010h
  1838  098C  3410               	retlw	027h
  1839  098D  3427               
  1840                           	global __end_of_dpowers
  1841                           __end_of_dpowers:
  1842  098E                     	global	_step_size
  1843                           psect	stringtext
  1844                           	file	"./Volume.h"
  1845                           	line	5
  1846                           _step_size:
  1847  098E                     	retlw	019h
  1848  098E  3419               	retlw	0
  1849  098F  3400               
  1850                           	global __end_of_step_size
  1851                           __end_of_step_size:
  1852  0990                     	global	_font
  1853                           	global	_dpowers
  1854                           	global	_step_size
  1855                           	global	__inputUpdateRequired
  1856                           	global	_ir_input
  1857                           	global	__lastAdcResult
  1858                           	global	_lastInput
  1859                           	global	_lastVolume
  1860                           	global	__lastB
  1861                           	global	__lastA
  1862                           	global	_vol_motor
  1863                           	global	_volume
  1864                           	global	__selectedInput
  1865                           	global	__selectedDisplay
  1866                           	global	_ADRESH
  1867                           _ADRESH	set	0x1E
  1868  001E                     	global	_PORTC
  1869                           _PORTC	set	0x7
  1870  0007                     	global	_PORTA
  1871                           _PORTA	set	0x5
  1872  0005                     	global	_SSPBUF
  1873                           _SSPBUF	set	0x13
  1874  0013                     	global	_PORTCbits
  1875                           _PORTCbits	set	0x7
  1876  0007                     	global	_PORTDbits
  1877                           _PORTDbits	set	0x8
  1878  0008                     	global	_SSPCON
  1879                           _SSPCON	set	0x14
  1880  0014                     	global	_PIR1bits
  1881                           _PIR1bits	set	0xC
  1882  000C                     	global	_PORTBbits
  1883                           _PORTBbits	set	0x6
  1884  0006                     	global	_INTCONbits
  1885                           _INTCONbits	set	0xB
  1886  000B                     	global	_ADCON0bits
  1887                           _ADCON0bits	set	0x1F
  1888  001F                     	global	_RC1
  1889                           _RC1	set	0x39
  1890  0039                     	global	_RC0
  1891                           _RC0	set	0x38
  1892  0038                     	global	_GIE
  1893                           _GIE	set	0x5F
  1894  005F                     	global	_ADRESL
  1895                           _ADRESL	set	0x9E
  1896  009E                     	global	_PIE1bits
  1897                           _PIE1bits	set	0x8C
  1898  008C                     	global	_ADCON1bits
  1899                           _ADCON1bits	set	0x9F
  1900  009F                     	global	_IOCBbits
  1901                           _IOCBbits	set	0x96
  1902  0096                     	global	_TRISCbits
  1903                           _TRISCbits	set	0x87
  1904  0087                     	global	_TRISEbits
  1905                           _TRISEbits	set	0x89
  1906  0089                     	global	_TRISBbits
  1907                           _TRISBbits	set	0x86
  1908  0086                     	global	_TRISAbits
  1909                           _TRISAbits	set	0x85
  1910  0085                     	global	_OSCCONbits
  1911                           _OSCCONbits	set	0x8F
  1912  008F                     	global	_SSPSTATbits
  1913                           _SSPSTATbits	set	0x94
  1914  0094                     	global	_TRISC
  1915                           _TRISC	set	0x87
  1916  0087                     	global	_TRISD
  1917                           _TRISD	set	0x88
  1918  0088                     	global	_SSPSTAT
  1919                           _SSPSTAT	set	0x94
  1920  0094                     	global	_ANSELbits
  1921                           _ANSELbits	set	0x188
  1922  0188                     	global	_ANSELHbits
  1923                           _ANSELHbits	set	0x189
  1924  0189                     	
  1925                           STR_1:	
  1926  0990                     	retlw	73	;'I'
  1927  0990  3449               	retlw	78	;'N'
  1928  0991  344E               	retlw	80	;'P'
  1929  0992  3450               	retlw	85	;'U'
  1930  0993  3455               	retlw	84	;'T'
  1931  0994  3454               	retlw	0
  1932  0995  3400               psect	stringtext
  1933                           	
  1934                           STR_2:	
  1935  0996                     	retlw	86	;'V'
  1936  0996  3456               	retlw	79	;'O'
  1937  0997  344F               	retlw	76	;'L'
  1938  0998  344C               	retlw	0
  1939  0999  3400               psect	stringtext
  1940                           	
  1941                           STR_3:	
  1942  099A                     	retlw	37	;'%'
  1943  099A  3425               	retlw	100	;'d'
  1944  099B  3464               	retlw	0
  1945  099C  3400               psect	stringtext
  1946                           ; #config settings
  1947                           global __CFG_FOSC$INTRC_CLKOUT
  1948                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1949  0000                     global __CFG_WDTE$OFF
  1950                           __CFG_WDTE$OFF equ 0x0
  1951  0000                     global __CFG_PWRTE$OFF
  1952                           __CFG_PWRTE$OFF equ 0x0
  1953  0000                     global __CFG_MCLRE$OFF
  1954                           __CFG_MCLRE$OFF equ 0x0
  1955  0000                     global __CFG_CP$OFF
  1956                           __CFG_CP$OFF equ 0x0
  1957  0000                     global __CFG_CPD$OFF
  1958                           __CFG_CPD$OFF equ 0x0
  1959  0000                     global __CFG_BOREN$ON
  1960                           __CFG_BOREN$ON equ 0x0
  1961  0000                     global __CFG_IESO$OFF
  1962                           __CFG_IESO$OFF equ 0x0
  1963  0000                     global __CFG_FCMEN$OFF
  1964                           __CFG_FCMEN$OFF equ 0x0
  1965  0000                     global __CFG_LVP$OFF
  1966                           __CFG_LVP$OFF equ 0x0
  1967  0000                     global __CFG_BOR4V$BOR21V
  1968                           __CFG_BOR4V$BOR21V equ 0x0
  1969  0000                     global __CFG_WRT$OFF
  1970                           __CFG_WRT$OFF equ 0x0
  1971  0000                     	file	"/tmp/xcX3SyXy4"
  1972                           	line	#
  1973                           psect cinit,class=CODE,delta=2
  1974                           global start_initialization
  1975                           start_initialization:
  1976  07E3                     
  1977                           global __initialization
  1978                           __initialization:
  1979  07E3                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1980                           global __pbssCOMMON
  1981                           __pbssCOMMON:
  1982  007D                     __inputUpdateRequired:
  1983  007D                            ds      1
  1984  007D                     
  1985                           psect	bssBANK0,class=BANK0,space=1,noexec
  1986                           global __pbssBANK0
  1987                           __pbssBANK0:
  1988  0060                     _ir_input:
  1989  0060                            ds      4
  1990  0060                     
  1991                           __lastAdcResult:
  1992  0064                            ds      2
  1993  0064                     
  1994                           _lastInput:
  1995  0066                            ds      2
  1996  0066                     
  1997                           _lastVolume:
  1998  0068                            ds      2
  1999  0068                     
  2000                           __lastB:
  2001  006A                            ds      2
  2002  006A                     
  2003                           __lastA:
  2004  006C                            ds      2
  2005  006C                     
  2006                           _vol_motor:
  2007  006E                            ds      1
  2008  006E                     
  2009                           psect	bssBANK1,class=BANK1,space=1,noexec
  2010                           global __pbssBANK1
  2011                           __pbssBANK1:
  2012  00EB                     _volume:
  2013  00EB                            ds      2
  2014  00EB                     
  2015                           __selectedInput:
  2016  00ED                            ds      2
  2017  00ED                     
  2018                           __selectedDisplay:
  2019  00EF                            ds      1
  2020  00EF                     
  2021                           	file	"/tmp/xcX3SyXy4"
  2022                           	line	#
  2023                           ; Clear objects allocated to COMMON
  2024                           psect cinit,class=CODE,delta=2,merge=1
  2025                           	clrf	((__pbssCOMMON)+0)&07Fh
  2026  07E3  01FD               ; Clear objects allocated to BANK0
  2027                           psect cinit,class=CODE,delta=2,merge=1
  2028                           	bcf	status, 5	;RP0=0, select bank0
  2029  07E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2030  07E5  1303               	clrf	((__pbssBANK0)+0)&07Fh
  2031  07E6  01E0               	clrf	((__pbssBANK0)+1)&07Fh
  2032  07E7  01E1               	clrf	((__pbssBANK0)+2)&07Fh
  2033  07E8  01E2               	clrf	((__pbssBANK0)+3)&07Fh
  2034  07E9  01E3               	clrf	((__pbssBANK0)+4)&07Fh
  2035  07EA  01E4               	clrf	((__pbssBANK0)+5)&07Fh
  2036  07EB  01E5               	clrf	((__pbssBANK0)+6)&07Fh
  2037  07EC  01E6               	clrf	((__pbssBANK0)+7)&07Fh
  2038  07ED  01E7               	clrf	((__pbssBANK0)+8)&07Fh
  2039  07EE  01E8               	clrf	((__pbssBANK0)+9)&07Fh
  2040  07EF  01E9               	clrf	((__pbssBANK0)+10)&07Fh
  2041  07F0  01EA               	clrf	((__pbssBANK0)+11)&07Fh
  2042  07F1  01EB               	clrf	((__pbssBANK0)+12)&07Fh
  2043  07F2  01EC               	clrf	((__pbssBANK0)+13)&07Fh
  2044  07F3  01ED               	clrf	((__pbssBANK0)+14)&07Fh
  2045  07F4  01EE               ; Clear objects allocated to BANK1
  2046                           psect cinit,class=CODE,delta=2,merge=1
  2047                           	bsf	status, 5	;RP0=1, select bank1
  2048  07F5  1683               	bcf	status, 6	;RP1=0, select bank1
  2049  07F6  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2050  07F7  01EB               	clrf	((__pbssBANK1)+1)&07Fh
  2051  07F8  01EC               	clrf	((__pbssBANK1)+2)&07Fh
  2052  07F9  01ED               	clrf	((__pbssBANK1)+3)&07Fh
  2053  07FA  01EE               	clrf	((__pbssBANK1)+4)&07Fh
  2054  07FB  01EF               psect cinit,class=CODE,delta=2,merge=1
  2055                           global end_of_initialization,__end_of__initialization
  2056                           
  2057                           ;End of C runtime variable initialization code
  2058                           
  2059                           end_of_initialization:
  2060  07FC                     __end_of__initialization:
  2061  07FC                     clrf status
  2062  07FC  0183               ljmp _main	;jump to C main() function
  2063  07FD  160A  118A  2BDD   psect	cstackBANK1,class=BANK1,space=1,noexec
  2064                           global __pcstackBANK1
  2065                           __pcstackBANK1:
  2066  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2067  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2068  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2069  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2070  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2071  00A0                     	global	?___wmul
  2072                           ?___wmul:	; 2 bytes @ 0x0
  2073  00A0                     	global	?___lwdiv
  2074                           ?___lwdiv:	; 2 bytes @ 0x0
  2075  00A0                     	global	?___xxtofl
  2076                           ?___xxtofl:	; 4 bytes @ 0x0
  2077  00A0                     	global	spiWrite@data
  2078                           spiWrite@data:	; 1 bytes @ 0x0
  2079  00A0                     	global	___wmul@multiplier
  2080                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2081  00A0                     	global	___lwdiv@divisor
  2082                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2083  00A0                     	global	___xxtofl@val
  2084                           ___xxtofl@val:	; 4 bytes @ 0x0
  2085  00A0                     	ds	1
  2086  00A0                     ??_config:	; 1 bytes @ 0x1
  2087  00A1                     ?_write_space:	; 1 bytes @ 0x1
  2088  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2089  00A1                     	global	write_space@count
  2090                           write_space@count:	; 2 bytes @ 0x1
  2091  00A1                     	ds	1
  2092  00A1                     	global	___wmul@multiplicand
  2093                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2094  00A2                     	global	___lwdiv@dividend
  2095                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2096  00A2                     	ds	1
  2097  00A2                     ??_write_space:	; 1 bytes @ 0x3
  2098  00A3                     	ds	1
  2099  00A3                     ??___wmul:	; 1 bytes @ 0x4
  2100  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2101  00A4                     ??___xxtofl:	; 1 bytes @ 0x4
  2102  00A4                     	global	write_space@i
  2103                           write_space@i:	; 2 bytes @ 0x4
  2104  00A4                     	global	___wmul@product
  2105                           ___wmul@product:	; 2 bytes @ 0x4
  2106  00A4                     	ds	1
  2107  00A4                     	global	___lwdiv@quotient
  2108                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2109  00A5                     	ds	1
  2110  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2111  00A6                     	global	write_space@x
  2112                           write_space@x:	; 2 bytes @ 0x6
  2113  00A6                     	global	write_font@fontPos
  2114                           write_font@fontPos:	; 2 bytes @ 0x6
  2115  00A6                     	ds	1
  2116  00A6                     	global	___lwdiv@counter
  2117                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2118  00A7                     	ds	1
  2119  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2120  00A8                     	global	?___lwmod
  2121                           ?___lwmod:	; 2 bytes @ 0x8
  2122  00A8                     	global	___xxtofl@sign
  2123                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2124  00A8                     	global	___lwmod@divisor
  2125                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2126  00A8                     	ds	1
  2127  00A8                     	global	___xxtofl@exp
  2128                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2129  00A9                     	ds	1
  2130  00A9                     	global	___lwmod@dividend
  2131                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2132  00AA                     	global	___xxtofl@arg
  2133                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2134  00AA                     	ds	2
  2135  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2136  00AC                     	ds	1
  2137  00AC                     	global	___lwmod@counter
  2138                           ___lwmod@counter:	; 1 bytes @ 0xD
  2139  00AD                     	ds	1
  2140  00AD                     	global	?_sprintf
  2141                           ?_sprintf:	; 2 bytes @ 0xE
  2142  00AE                     	global	?___fladd
  2143                           ?___fladd:	; 4 bytes @ 0xE
  2144  00AE                     	global	write_font@x
  2145                           write_font@x:	; 2 bytes @ 0xE
  2146  00AE                     	global	sprintf@f
  2147                           sprintf@f:	; 2 bytes @ 0xE
  2148  00AE                     	global	___fladd@b
  2149                           ___fladd@b:	; 4 bytes @ 0xE
  2150  00AE                     	ds	2
  2151  00AE                     ??_write_char:	; 1 bytes @ 0x10
  2152  00B0                     	global	write_char@pos
  2153                           write_char@pos:	; 2 bytes @ 0x10
  2154  00B0                     	ds	2
  2155  00B0                     ??_sprintf:	; 1 bytes @ 0x12
  2156  00B2                     	global	write_char@c
  2157                           write_char@c:	; 1 bytes @ 0x12
  2158  00B2                     	global	___fladd@a
  2159                           ___fladd@a:	; 4 bytes @ 0x12
  2160  00B2                     	ds	1
  2161  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2162  00B3                     	global	write_text@text
  2163                           write_text@text:	; 2 bytes @ 0x13
  2164  00B3                     	ds	2
  2165  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2166  00B5                     	global	write_text@c
  2167                           write_text@c:	; 2 bytes @ 0x15
  2168  00B5                     	ds	1
  2169  00B5                     ??___fladd:	; 1 bytes @ 0x16
  2170  00B6                     	global	sprintf@ap
  2171                           sprintf@ap:	; 1 bytes @ 0x16
  2172  00B6                     	ds	1
  2173  00B6                     	global	sprintf@flag
  2174                           sprintf@flag:	; 1 bytes @ 0x17
  2175  00B7                     	ds	1
  2176  00B7                     	global	sprintf@prec
  2177                           sprintf@prec:	; 1 bytes @ 0x18
  2178  00B8                     	ds	1
  2179  00B8                     	global	sprintf@val
  2180                           sprintf@val:	; 2 bytes @ 0x19
  2181  00B9                     	ds	2
  2182  00B9                     	global	sprintf@sp
  2183                           sprintf@sp:	; 1 bytes @ 0x1B
  2184  00BB                     	ds	1
  2185  00BB                     	global	sprintf@c
  2186                           sprintf@c:	; 1 bytes @ 0x1C
  2187  00BC                     	ds	1
  2188  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2189  00BD                     	global	write_int@number
  2190                           write_int@number:	; 2 bytes @ 0x1D
  2191  00BD                     	ds	2
  2192  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2193  00BF                     	global	write_int@num
  2194                           write_int@num:	; 2 bytes @ 0x1F
  2195  00BF                     	ds	2
  2196  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2197  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2198  00C1                     	global	update_volume@spaces
  2199                           update_volume@spaces:	; 2 bytes @ 0x21
  2200  00C1                     	ds	1
  2201  00C1                     	global	___fladd@signs
  2202                           ___fladd@signs:	; 1 bytes @ 0x22
  2203  00C2                     	ds	1
  2204  00C2                     	global	___fladd@aexp
  2205                           ___fladd@aexp:	; 1 bytes @ 0x23
  2206  00C3                     	ds	1
  2207  00C3                     	global	___fladd@bexp
  2208                           ___fladd@bexp:	; 1 bytes @ 0x24
  2209  00C4                     	ds	1
  2210  00C4                     	global	___fladd@grs
  2211                           ___fladd@grs:	; 1 bytes @ 0x25
  2212  00C5                     	ds	1
  2213  00C5                     	global	?___fltol
  2214                           ?___fltol:	; 4 bytes @ 0x26
  2215  00C6                     	global	___fltol@f1
  2216                           ___fltol@f1:	; 4 bytes @ 0x26
  2217  00C6                     	ds	4
  2218  00C6                     ??___fltol:	; 1 bytes @ 0x2A
  2219  00CA                     	ds	5
  2220  00CA                     	global	___fltol@sign1
  2221                           ___fltol@sign1:	; 1 bytes @ 0x2F
  2222  00CF                     	ds	1
  2223  00CF                     	global	___fltol@exp1
  2224                           ___fltol@exp1:	; 1 bytes @ 0x30
  2225  00D0                     	ds	1
  2226  00D0                     	global	?_is_deadzone
  2227                           ?_is_deadzone:	; 2 bytes @ 0x31
  2228  00D1                     	global	is_deadzone@currentStep
  2229                           is_deadzone@currentStep:	; 2 bytes @ 0x31
  2230  00D1                     	ds	2
  2231  00D1                     	global	is_deadzone@adcResult
  2232                           is_deadzone@adcResult:	; 2 bytes @ 0x33
  2233  00D3                     	ds	2
  2234  00D3                     ??_is_deadzone:	; 1 bytes @ 0x35
  2235  00D5                     	ds	2
  2236  00D5                     	global	is_deadzone@deadzoneLow
  2237                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x37
  2238  00D7                     	ds	2
  2239  00D7                     	global	is_deadzone@deadzoneHigh
  2240                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x39
  2241  00D9                     	ds	2
  2242  00D9                     	global	_is_deadzone$899
  2243                           _is_deadzone$899:	; 1 bytes @ 0x3B
  2244  00DB                     	ds	1
  2245  00DB                     	global	is_deadzone@turnPoint
  2246                           is_deadzone@turnPoint:	; 2 bytes @ 0x3C
  2247  00DC                     	ds	2
  2248  00DC                     	global	?_get_volume
  2249                           ?_get_volume:	; 2 bytes @ 0x3E
  2250  00DE                     	global	get_volume@ad_result
  2251                           get_volume@ad_result:	; 2 bytes @ 0x3E
  2252  00DE                     	ds	2
  2253  00DE                     ??_get_volume:	; 1 bytes @ 0x40
  2254  00E0                     	ds	2
  2255  00E0                     	global	get_volume@currentStep
  2256                           get_volume@currentStep:	; 2 bytes @ 0x42
  2257  00E2                     	ds	2
  2258  00E2                     ??_update_vol_motor:	; 1 bytes @ 0x44
  2259  00E4                     	ds	1
  2260  00E4                     	global	update_vol_motor@ad_result
  2261                           update_vol_motor@ad_result:	; 2 bytes @ 0x45
  2262  00E5                     	ds	2
  2263  00E5                     	global	update_vol_motor@curPotmeterVol
  2264                           update_vol_motor@curPotmeterVol:	; 2 bytes @ 0x47
  2265  00E7                     	ds	2
  2266  00E7                     ??_main:	; 1 bytes @ 0x49
  2267  00E9                     	ds	2
  2268  00E9                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2269                           global __pcstackCOMMON
  2270                           __pcstackCOMMON:
  2271  0071                     ?_config:	; 1 bytes @ 0x0
  2272  0071                     ?_update_volume:	; 1 bytes @ 0x0
  2273  0071                     ?_update_input:	; 1 bytes @ 0x0
  2274  0071                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2275  0071                     ?_update_vol_motor:	; 1 bytes @ 0x0
  2276  0071                     ?_handle_rotary:	; 1 bytes @ 0x0
  2277  0071                     ??_handle_rotary:	; 1 bytes @ 0x0
  2278  0071                     ?_start_receive:	; 1 bytes @ 0x0
  2279  0071                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2280  0071                     ?_spiWrite:	; 1 bytes @ 0x0
  2281  0071                     ?_display_write_start:	; 1 bytes @ 0x0
  2282  0071                     ?_display_write_end:	; 1 bytes @ 0x0
  2283  0071                     ?_write_char:	; 1 bytes @ 0x0
  2284  0071                     ?_init_adc:	; 1 bytes @ 0x0
  2285  0071                     ?_handle_remote:	; 1 bytes @ 0x0
  2286  0071                     ??_handle_remote:	; 1 bytes @ 0x0
  2287  0071                     ?_main:	; 1 bytes @ 0x0
  2288  0071                     ?_isr:	; 1 bytes @ 0x0
  2289  0071                     ?_display_init:	; 1 bytes @ 0x0
  2290  0071                     	global	?i1___wmul
  2291                           ?i1___wmul:	; 2 bytes @ 0x0
  2292  0071                     	global	?i1___lwdiv
  2293                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2294  0071                     	global	?i1___xxtofl
  2295                           ?i1___xxtofl:	; 4 bytes @ 0x0
  2296  0071                     	global	handle_remote@found
  2297                           handle_remote@found:	; 1 bytes @ 0x0
  2298  0071                     	global	i1___wmul@multiplier
  2299                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2300  0071                     	global	i1___lwdiv@divisor
  2301                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2302  0071                     	global	i1___xxtofl@val
  2303                           i1___xxtofl@val:	; 4 bytes @ 0x0
  2304  0071                     	ds	1
  2305  0071                     ??_start_receive:	; 1 bytes @ 0x1
  2306  0072                     	ds	1
  2307  0072                     	global	i1___wmul@multiplicand
  2308                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2309  0073                     	global	i1___lwdiv@dividend
  2310                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2311  0073                     	ds	1
  2312  0073                     	global	handle_rotary@portA
  2313                           handle_rotary@portA:	; 2 bytes @ 0x3
  2314  0074                     	ds	1
  2315  0074                     ??i1___wmul:	; 1 bytes @ 0x4
  2316  0075                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2317  0075                     ??i1___xxtofl:	; 1 bytes @ 0x4
  2318  0075                     	global	i1___wmul@product
  2319                           i1___wmul@product:	; 2 bytes @ 0x4
  2320  0075                     	ds	1
  2321  0075                     	global	handle_rotary@portB
  2322                           handle_rotary@portB:	; 2 bytes @ 0x5
  2323  0076                     	global	i1___lwdiv@quotient
  2324                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2325  0076                     	ds	2
  2326  0076                     	global	i1___lwdiv@counter
  2327                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2328  0078                     	ds	1
  2329  0078                     	global	i1___fladd@signs
  2330                           i1___fladd@signs:	; 1 bytes @ 0x8
  2331  0079                     	ds	1
  2332  0079                     	global	i1___fladd@aexp
  2333                           i1___fladd@aexp:	; 1 bytes @ 0x9
  2334  007A                     	global	start_receive@i
  2335                           start_receive@i:	; 2 bytes @ 0x9
  2336  007A                     	ds	1
  2337  007A                     	global	i1___fladd@bexp
  2338                           i1___fladd@bexp:	; 1 bytes @ 0xA
  2339  007B                     	ds	1
  2340  007B                     	global	i1___fladd@grs
  2341                           i1___fladd@grs:	; 1 bytes @ 0xB
  2342  007C                     	ds	1
  2343  007C                     ??_handle_potmeter:	; 1 bytes @ 0xC
  2344  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2345                           global __pcstackBANK0
  2346                           __pcstackBANK0:
  2347  0020                     	global	i1___xxtofl@sign
  2348                           i1___xxtofl@sign:	; 1 bytes @ 0x0
  2349  0020                     	ds	1
  2350  0020                     	global	i1___xxtofl@exp
  2351                           i1___xxtofl@exp:	; 1 bytes @ 0x1
  2352  0021                     	ds	1
  2353  0021                     	global	i1___xxtofl@arg
  2354                           i1___xxtofl@arg:	; 4 bytes @ 0x2
  2355  0022                     	ds	4
  2356  0022                     	global	?i1___fladd
  2357                           ?i1___fladd:	; 4 bytes @ 0x6
  2358  0026                     	global	i1___fladd@b
  2359                           i1___fladd@b:	; 4 bytes @ 0x6
  2360  0026                     	ds	4
  2361  0026                     	global	i1___fladd@a
  2362                           i1___fladd@a:	; 4 bytes @ 0xA
  2363  002A                     	ds	4
  2364  002A                     ??i1___fladd:	; 1 bytes @ 0xE
  2365  002E                     	ds	12
  2366  002E                     	global	?i1___fltol
  2367                           ?i1___fltol:	; 4 bytes @ 0x1A
  2368  003A                     	global	i1___fltol@f1
  2369                           i1___fltol@f1:	; 4 bytes @ 0x1A
  2370  003A                     	ds	4
  2371  003A                     ??i1___fltol:	; 1 bytes @ 0x1E
  2372  003E                     	ds	5
  2373  003E                     	global	i1___fltol@sign1
  2374                           i1___fltol@sign1:	; 1 bytes @ 0x23
  2375  0043                     	ds	1
  2376  0043                     	global	i1___fltol@exp1
  2377                           i1___fltol@exp1:	; 1 bytes @ 0x24
  2378  0044                     	ds	1
  2379  0044                     	global	?i1_is_deadzone
  2380                           ?i1_is_deadzone:	; 2 bytes @ 0x25
  2381  0045                     	global	i1is_deadzone@currentStep
  2382                           i1is_deadzone@currentStep:	; 2 bytes @ 0x25
  2383  0045                     	ds	2
  2384  0045                     	global	i1is_deadzone@adcResult
  2385                           i1is_deadzone@adcResult:	; 2 bytes @ 0x27
  2386  0047                     	ds	2
  2387  0047                     ??i1_is_deadzone:	; 1 bytes @ 0x29
  2388  0049                     	ds	2
  2389  0049                     	global	i1is_deadzone@deadzoneLow
  2390                           i1is_deadzone@deadzoneLow:	; 2 bytes @ 0x2B
  2391  004B                     	ds	2
  2392  004B                     	global	i1is_deadzone@deadzoneHigh
  2393                           i1is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2D
  2394  004D                     	ds	2
  2395  004D                     	global	i1_is_deadzone$899
  2396                           i1_is_deadzone$899:	; 1 bytes @ 0x2F
  2397  004F                     	ds	1
  2398  004F                     	global	i1is_deadzone@turnPoint
  2399                           i1is_deadzone@turnPoint:	; 2 bytes @ 0x30
  2400  0050                     	ds	2
  2401  0050                     	global	?i1_get_volume
  2402                           ?i1_get_volume:	; 2 bytes @ 0x32
  2403  0052                     	global	i1get_volume@ad_result
  2404                           i1get_volume@ad_result:	; 2 bytes @ 0x32
  2405  0052                     	ds	2
  2406  0052                     ??i1_get_volume:	; 1 bytes @ 0x34
  2407  0054                     	ds	2
  2408  0054                     	global	i1get_volume@currentStep
  2409                           i1get_volume@currentStep:	; 2 bytes @ 0x36
  2410  0056                     	ds	2
  2411  0056                     	global	handle_potmeter@newVol
  2412                           handle_potmeter@newVol:	; 2 bytes @ 0x38
  2413  0058                     	ds	2
  2414  0058                     	global	handle_potmeter@ad_result
  2415                           handle_potmeter@ad_result:	; 2 bytes @ 0x3A
  2416  005A                     	ds	2
  2417  005A                     ??_isr:	; 1 bytes @ 0x3C
  2418  005C                     	ds	4
  2419  005C                     ;!
  2420                           ;!Data Sizes:
  2421                           ;!    Strings     13
  2422                           ;!    Constant    382
  2423                           ;!    Data        0
  2424                           ;!    BSS         21
  2425                           ;!    Persistent  0
  2426                           ;!    Stack       0
  2427                           ;!
  2428                           ;!Auto Spaces:
  2429                           ;!    Space          Size  Autos    Used
  2430                           ;!    COMMON           13     12      13
  2431                           ;!    BANK0            80     64      79
  2432                           ;!    BANK1            80     75      80
  2433                           ;!    BANK3            85      0       0
  2434                           ;!    BANK2            96      0       0
  2435                           
  2436                           ;!
  2437                           ;!Pointer List with Targets:
  2438                           ;!
  2439                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2440                           ;!		 -> STR_3(CODE[3]), 
  2441                           ;!
  2442                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2443                           ;!		 -> write_int@num(BANK1[2]), 
  2444                           ;!
  2445                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2446                           ;!		 -> ?_sprintf(BANK1[2]), 
  2447                           ;!
  2448                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2449                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2450                           ;!
  2451                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2452                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2453                           ;!
  2454                           
  2455                           
  2456                           ;!
  2457                           ;!Critical Paths under _main in COMMON
  2458                           ;!
  2459                           ;!    None.
  2460                           ;!
  2461                           ;!Critical Paths under _isr in COMMON
  2462                           ;!
  2463                           ;!    _start_receive->_handle_remote
  2464                           ;!    i1_is_deadzone->i1___fladd
  2465                           ;!    i1___fltol->i1___fladd
  2466                           ;!    i1___fladd->i1___xxtofl
  2467                           ;!
  2468                           ;!Critical Paths under _main in BANK0
  2469                           ;!
  2470                           ;!    None.
  2471                           ;!
  2472                           ;!Critical Paths under _isr in BANK0
  2473                           ;!
  2474                           ;!    _isr->_handle_potmeter
  2475                           ;!    _handle_potmeter->i1_get_volume
  2476                           ;!    i1_get_volume->i1_is_deadzone
  2477                           ;!    i1_is_deadzone->i1___fltol
  2478                           ;!    i1___fltol->i1___fladd
  2479                           ;!    i1___fladd->i1___xxtofl
  2480                           ;!
  2481                           ;!Critical Paths under _main in BANK1
  2482                           ;!
  2483                           ;!    _main->_update_vol_motor
  2484                           ;!    _update_volume->_write_int
  2485                           ;!    _update_vol_motor->_get_volume
  2486                           ;!    _get_volume->_is_deadzone
  2487                           ;!    _is_deadzone->___fltol
  2488                           ;!    ___fltol->___fladd
  2489                           ;!    ___fladd->___xxtofl
  2490                           ;!    _update_input->_write_int
  2491                           ;!    _write_space->_spiWrite
  2492                           ;!    _write_int->_sprintf
  2493                           ;!    _write_text->_write_char
  2494                           ;!    _write_char->_write_font
  2495                           ;!    _write_font->___wmul
  2496                           ;!    _sprintf->___lwmod
  2497                           ;!    ___lwmod->___lwdiv
  2498                           ;!    _display_init->_spiWrite
  2499                           ;!
  2500                           ;!Critical Paths under _isr in BANK1
  2501                           ;!
  2502                           ;!    None.
  2503                           ;!
  2504                           ;!Critical Paths under _main in BANK3
  2505                           ;!
  2506                           ;!    None.
  2507                           ;!
  2508                           ;!Critical Paths under _isr in BANK3
  2509                           ;!
  2510                           ;!    None.
  2511                           ;!
  2512                           ;!Critical Paths under _main in BANK2
  2513                           ;!
  2514                           ;!    None.
  2515                           ;!
  2516                           ;!Critical Paths under _isr in BANK2
  2517                           ;!
  2518                           ;!    None.
  2519                           
  2520 ;;
  2521 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2522 ;;
  2523                           
  2524                           ;!
  2525                           ;!Call Graph Tables:
  2526                           ;!
  2527                           ;! ---------------------------------------------------------------------------------
  2528                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2529                           ;! ---------------------------------------------------------------------------------
  2530                           ;! (0) _main                                                 2     2      0   15886
  2531                           ;!                                             73 BANK1      2     2      0
  2532                           ;!              _activateSelectedRelay
  2533                           ;!                             _config
  2534                           ;!                       _update_input
  2535                           ;!                   _update_vol_motor
  2536                           ;!                      _update_volume
  2537                           ;! ---------------------------------------------------------------------------------
  2538                           ;! (1) _update_volume                                        2     2      0    5526
  2539                           ;!                                             33 BANK1      2     2      0
  2540                           ;!                  _display_write_end
  2541                           ;!                _display_write_start
  2542                           ;!                          _write_int
  2543                           ;!                        _write_space
  2544                           ;!                         _write_text
  2545                           ;! ---------------------------------------------------------------------------------
  2546                           ;! (1) _update_vol_motor                                     5     5      0    4836
  2547                           ;!                                             68 BANK1      5     5      0
  2548                           ;!                         _get_volume
  2549                           ;! ---------------------------------------------------------------------------------
  2550                           ;! (2) _get_volume                                           6     4      2    4723
  2551                           ;!                                             62 BANK1      6     4      2
  2552                           ;!                            ___lwdiv
  2553                           ;!                        _is_deadzone
  2554                           ;! ---------------------------------------------------------------------------------
  2555                           ;! (3) _is_deadzone                                         13     9      4    3998
  2556                           ;!                                             49 BANK1     13     9      4
  2557                           ;!                            ___fladd
  2558                           ;!                            ___fltol
  2559                           ;!                             ___wmul
  2560                           ;!                           ___xxtofl
  2561                           ;! ---------------------------------------------------------------------------------
  2562                           ;! (4) ___xxtofl                                            14    10      4     474
  2563                           ;!                                              0 BANK1     14    10      4
  2564                           ;! ---------------------------------------------------------------------------------
  2565                           ;! (4) ___fltol                                             11     7      4     381
  2566                           ;!                                             38 BANK1     11     7      4
  2567                           ;!                            ___fladd (ARG)
  2568                           ;!                           ___xxtofl (ARG)
  2569                           ;! ---------------------------------------------------------------------------------
  2570                           ;! (4) ___fladd                                             24    16      8    2414
  2571                           ;!                                             14 BANK1     24    16      8
  2572                           ;!                           ___xxtofl (ARG)
  2573                           ;! ---------------------------------------------------------------------------------
  2574                           ;! (1) _update_input                                         0     0      0    5502
  2575                           ;!                  _display_write_end
  2576                           ;!                _display_write_start
  2577                           ;!                          _write_int
  2578                           ;!                        _write_space
  2579                           ;!                         _write_text
  2580                           ;! ---------------------------------------------------------------------------------
  2581                           ;! (2) _write_space                                          7     5      2     266
  2582                           ;!                                              1 BANK1      7     5      2
  2583                           ;!                           _spiWrite
  2584                           ;! ---------------------------------------------------------------------------------
  2585                           ;! (2) _write_int                                            4     2      2    3937
  2586                           ;!                                             29 BANK1      4     2      2
  2587                           ;!                            _sprintf
  2588                           ;!                         _write_char
  2589                           ;!                         _write_text
  2590                           ;! ---------------------------------------------------------------------------------
  2591                           ;! (2) _write_text                                           4     2      2    1299
  2592                           ;!                                             19 BANK1      4     2      2
  2593                           ;!                         _write_char
  2594                           ;! ---------------------------------------------------------------------------------
  2595                           ;! (3) _write_char                                           3     3      0    1003
  2596                           ;!                                             16 BANK1      3     3      0
  2597                           ;!                         _write_font
  2598                           ;! ---------------------------------------------------------------------------------
  2599                           ;! (4) _write_font                                          10     8      2     736
  2600                           ;!                                              6 BANK1     10     8      2
  2601                           ;!                             ___wmul
  2602                           ;!                           _spiWrite
  2603                           ;! ---------------------------------------------------------------------------------
  2604                           ;! (5) ___wmul                                               6     2      4     396
  2605                           ;!                                              0 BANK1      6     2      4
  2606                           ;! ---------------------------------------------------------------------------------
  2607                           ;! (3) _sprintf                                             23    19      4    1363
  2608                           ;!                                             14 BANK1     15    11      4
  2609                           ;!                            ___lwdiv
  2610                           ;!                            ___lwmod
  2611                           ;! ---------------------------------------------------------------------------------
  2612                           ;! (4) ___lwmod                                              6     2      4     311
  2613                           ;!                                              8 BANK1      6     2      4
  2614                           ;!                            ___lwdiv (ARG)
  2615                           ;! ---------------------------------------------------------------------------------
  2616                           ;! (4) ___lwdiv                                              8     4      4     466
  2617                           ;!                                              0 BANK1      8     4      4
  2618                           ;! ---------------------------------------------------------------------------------
  2619                           ;! (2) _display_write_start                                  0     0      0       0
  2620                           ;! ---------------------------------------------------------------------------------
  2621                           ;! (2) _display_write_end                                    0     0      0       0
  2622                           ;! ---------------------------------------------------------------------------------
  2623                           ;! (1) _config                                               3     3      0      22
  2624                           ;!                                              1 BANK1      3     3      0
  2625                           ;!                       _display_init
  2626                           ;!                           _init_adc
  2627                           ;! ---------------------------------------------------------------------------------
  2628                           ;! (2) _init_adc                                             0     0      0       0
  2629                           ;! ---------------------------------------------------------------------------------
  2630                           ;! (2) _display_init                                         0     0      0      22
  2631                           ;!                           _spiWrite
  2632                           ;! ---------------------------------------------------------------------------------
  2633                           ;! (5) _spiWrite                                             1     1      0      22
  2634                           ;!                                              0 BANK1      1     1      0
  2635                           ;! ---------------------------------------------------------------------------------
  2636                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2637                           ;! ---------------------------------------------------------------------------------
  2638                           ;! Estimated maximum stack depth 5
  2639                           ;! ---------------------------------------------------------------------------------
  2640                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2641                           ;! ---------------------------------------------------------------------------------
  2642                           ;! (7) _isr                                                  4     4      0    3792
  2643                           ;!                                             60 BANK0      4     4      0
  2644                           ;!                    _handle_potmeter
  2645                           ;!                      _handle_rotary
  2646                           ;!                      _start_receive
  2647                           ;! ---------------------------------------------------------------------------------
  2648                           ;! (8) _start_receive                                       10    10      0      53
  2649                           ;!                                              1 COMMON    10    10      0
  2650                           ;!                      _handle_remote
  2651                           ;! ---------------------------------------------------------------------------------
  2652                           ;! (9) _handle_remote                                        1     1      0       7
  2653                           ;!                                              0 COMMON     1     1      0
  2654                           ;! ---------------------------------------------------------------------------------
  2655                           ;! (8) _handle_rotary                                        7     7      0     134
  2656                           ;!                                              0 COMMON     7     7      0
  2657                           ;! ---------------------------------------------------------------------------------
  2658                           ;! (8) _handle_potmeter                                      4     4      0    3605
  2659                           ;!                                             56 BANK0      4     4      0
  2660                           ;!                       i1_get_volume
  2661                           ;! ---------------------------------------------------------------------------------
  2662                           ;! (9) i1_get_volume                                         6     4      2    3493
  2663                           ;!                                             50 BANK0      6     4      2
  2664                           ;!                          i1___lwdiv
  2665                           ;!                      i1_is_deadzone
  2666                           ;! ---------------------------------------------------------------------------------
  2667                           ;! (10) i1_is_deadzone                                      13     9      4    3120
  2668                           ;!                                             37 BANK0     13     9      4
  2669                           ;!                          i1___fladd
  2670                           ;!                          i1___fltol
  2671                           ;!                           i1___wmul
  2672                           ;!                         i1___xxtofl
  2673                           ;! ---------------------------------------------------------------------------------
  2674                           ;! (11) i1___xxtofl                                         14    10      4     374
  2675                           ;!                                              0 COMMON     8     4      4
  2676                           ;!                                              0 BANK0      6     6      0
  2677                           ;! ---------------------------------------------------------------------------------
  2678                           ;! (11) i1___wmul                                            6     2      4     144
  2679                           ;!                                              0 COMMON     6     2      4
  2680                           ;! ---------------------------------------------------------------------------------
  2681                           ;! (11) i1___fltol                                          11     7      4     281
  2682                           ;!                                             26 BANK0     11     7      4
  2683                           ;!                          i1___fladd (ARG)
  2684                           ;!                         i1___xxtofl (ARG)
  2685                           ;! ---------------------------------------------------------------------------------
  2686                           ;! (11) i1___fladd                                          24    16      8    2088
  2687                           ;!                                              8 COMMON     4     4      0
  2688                           ;!                                              6 BANK0     20    12      8
  2689                           ;!                         i1___xxtofl (ARG)
  2690                           ;! ---------------------------------------------------------------------------------
  2691                           ;! (10) i1___lwdiv                                           8     4      4     214
  2692                           ;!                                              0 COMMON     8     4      4
  2693                           ;! ---------------------------------------------------------------------------------
  2694                           ;! Estimated maximum stack depth 11
  2695                           ;! ---------------------------------------------------------------------------------
  2696                           ;!
  2697                           ;! Call Graph Graphs:
  2698                           ;!
  2699                           ;! _main (ROOT)
  2700                           ;!   _activateSelectedRelay
  2701                           ;!   _config
  2702                           ;!     _display_init
  2703                           ;!       _spiWrite
  2704                           ;!     _init_adc
  2705                           ;!   _update_input
  2706                           ;!     _display_write_end
  2707                           ;!     _display_write_start
  2708                           ;!     _write_int
  2709                           ;!       _sprintf
  2710                           ;!         ___lwdiv
  2711                           ;!         ___lwmod
  2712                           ;!           ___lwdiv (ARG)
  2713                           ;!       _write_char
  2714                           ;!         _write_font
  2715                           ;!           ___wmul
  2716                           ;!           _spiWrite
  2717                           ;!       _write_text
  2718                           ;!         _write_char
  2719                           ;!           _write_font
  2720                           ;!             ___wmul
  2721                           ;!             _spiWrite
  2722                           ;!     _write_space
  2723                           ;!       _spiWrite
  2724                           ;!     _write_text
  2725                           ;!       _write_char
  2726                           ;!         _write_font
  2727                           ;!           ___wmul
  2728                           ;!           _spiWrite
  2729                           ;!   _update_vol_motor
  2730                           ;!     _get_volume
  2731                           ;!       ___lwdiv
  2732                           ;!       _is_deadzone
  2733                           ;!         ___fladd
  2734                           ;!           ___xxtofl (ARG)
  2735                           ;!         ___fltol
  2736                           ;!           ___fladd (ARG)
  2737                           ;!             ___xxtofl (ARG)
  2738                           ;!           ___xxtofl (ARG)
  2739                           ;!         ___wmul
  2740                           ;!         ___xxtofl
  2741                           ;!   _update_volume
  2742                           ;!     _display_write_end
  2743                           ;!     _display_write_start
  2744                           ;!     _write_int
  2745                           ;!       _sprintf
  2746                           ;!         ___lwdiv
  2747                           ;!         ___lwmod
  2748                           ;!           ___lwdiv (ARG)
  2749                           ;!       _write_char
  2750                           ;!         _write_font
  2751                           ;!           ___wmul
  2752                           ;!           _spiWrite
  2753                           ;!       _write_text
  2754                           ;!         _write_char
  2755                           ;!           _write_font
  2756                           ;!             ___wmul
  2757                           ;!             _spiWrite
  2758                           ;!     _write_space
  2759                           ;!       _spiWrite
  2760                           ;!     _write_text
  2761                           ;!       _write_char
  2762                           ;!         _write_font
  2763                           ;!           ___wmul
  2764                           ;!           _spiWrite
  2765                           ;!
  2766                           ;! _isr (ROOT)
  2767                           ;!   _handle_potmeter
  2768                           ;!     i1_get_volume
  2769                           ;!       i1___lwdiv
  2770                           ;!       i1_is_deadzone
  2771                           ;!         i1___fladd
  2772                           ;!           i1___xxtofl (ARG)
  2773                           ;!         i1___fltol
  2774                           ;!           i1___fladd (ARG)
  2775                           ;!             i1___xxtofl (ARG)
  2776                           ;!           i1___xxtofl (ARG)
  2777                           ;!         i1___wmul
  2778                           ;!         i1___xxtofl
  2779                           ;!   _handle_rotary
  2780                           ;!   _start_receive
  2781                           ;!     _handle_remote
  2782                           ;!
  2783                           
  2784                           ;! Address spaces:
  2785                           
  2786                           ;!Name               Size   Autos  Total    Cost      Usage
  2787                           ;!BITCOMMON            D      0       0       0        0.0%
  2788                           ;!EEDATA             100      0       0       0        0.0%
  2789                           ;!NULL                 0      0       0       0        0.0%
  2790                           ;!CODE                 0      0       0       0        0.0%
  2791                           ;!COMMON               D      C       D       1      100.0%
  2792                           ;!BITSFR0              0      0       0       1        0.0%
  2793                           ;!SFR0                 0      0       0       1        0.0%
  2794                           ;!BITSFR1              0      0       0       2        0.0%
  2795                           ;!SFR1                 0      0       0       2        0.0%
  2796                           ;!STACK                0      0       0       2        0.0%
  2797                           ;!ABS                  0      0      AC       3        0.0%
  2798                           ;!BITBANK0            50      0       0       4        0.0%
  2799                           ;!BITSFR3              0      0       0       4        0.0%
  2800                           ;!SFR3                 0      0       0       4        0.0%
  2801                           ;!BANK0               50     40      4F       5       98.8%
  2802                           ;!BITSFR2              0      0       0       5        0.0%
  2803                           ;!SFR2                 0      0       0       5        0.0%
  2804                           ;!BITBANK1            50      0       0       6        0.0%
  2805                           ;!BANK1               50     4B      50       7      100.0%
  2806                           ;!BITBANK3            55      0       0       8        0.0%
  2807                           ;!BANK3               55      0       0       9        0.0%
  2808                           ;!BITBANK2            60      0       0      10        0.0%
  2809                           ;!BANK2               60      0       0      11        0.0%
  2810                           ;!DATA                 0      0      AC      12        0.0%
  2811                           
  2812                           	global	_main
  2813                           
  2814 ;; *************** function _main *****************
  2815 ;; Defined at:
  2816 ;;		line 26 in file "main.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;		None
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      void 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : B00/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2830 ;;      Params:         0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0
  2832 ;;      Temps:          0       0       2       0       0
  2833 ;;      Totals:         0       0       2       0       0
  2834 ;;Total ram usage:        2 bytes
  2835 ;; Hardware stack levels required when called:   11
  2836 ;; This function calls:
  2837 ;;		_activateSelectedRelay
  2838 ;;		_config
  2839 ;;		_update_input
  2840 ;;		_update_vol_motor
  2841 ;;		_update_volume
  2842 ;; This function is called by:
  2843 ;;		Startup code after reset
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2847                           	file	"main.c"
  2848                           	line	26
  2849                           global __pmaintext
  2850                           __pmaintext:	;psect for function _main
  2851  13DD                     psect	maintext
  2852                           	file	"main.c"
  2853                           	line	26
  2854                           	global	__size_of_main
  2855                           	__size_of_main	equ	__end_of_main-_main
  2856  0031                     	
  2857                           _main:	
  2858  13DD                     ;incstack = 0
  2859 ;; hardware stack exceeded
  2860                           	opt	stack 0
  2861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2862                           	line	28
  2863                           	
  2864                           l3536:	
  2865  13DD                     ;main.c: 28:     config();
  2866                           	fcall	_config
  2867  13DD  160A  118A  2732  160A  118A  	goto	l3538
  2868  13E2  2BE3               	line	32
  2869                           ;main.c: 32:     while(1)
  2870                           	
  2871                           l57:	
  2872  13E3                     	line	34
  2873                           	
  2874                           l3538:	
  2875  13E3                     ;main.c: 33:     {;main.c: 34:         if (!ADCON0bits.GO)
  2876                           	bcf	status, 5	;RP0=0, select bank0
  2877  13E3  1283               	bcf	status, 6	;RP1=0, select bank0
  2878  13E4  1303               	btfsc	(31),1	;volatile
  2879  13E5  189F               	goto	u4551
  2880  13E6  2BE8               	goto	u4550
  2881  13E7  2BE9               u4551:
  2882  13E8                     	goto	l3542
  2883  13E8  2BEB               u4550:
  2884  13E9                     	line	35
  2885                           	
  2886                           l3540:	
  2887  13E9                     ;main.c: 35:             ADCON0bits.GO = 1;
  2888                           	bsf	(31),1	;volatile
  2889  13E9  149F               	goto	l3542
  2890  13EA  2BEB               	
  2891                           l58:	
  2892  13EB                     	line	38
  2893                           	
  2894                           l3542:	
  2895  13EB                     ;main.c: 38:         update_volume();
  2896                           	fcall	_update_volume
  2897  13EB  120A  158A  21BE  160A  118A  	line	39
  2898                           ;main.c: 39:         update_input();
  2899                           	fcall	_update_input
  2900  13F0  160A  118A  261A  160A  118A  	line	42
  2901                           	
  2902                           l3544:	
  2903  13F5                     ;main.c: 42:         activateSelectedRelay();
  2904                           	fcall	_activateSelectedRelay
  2905  13F5  160A  118A  2444  160A  118A  	line	44
  2906                           	
  2907                           l3546:	
  2908  13FA                     ;main.c: 44:         update_vol_motor();
  2909                           	fcall	_update_vol_motor
  2910  13FA  120A  158A  2293  160A  118A  	line	46
  2911                           	
  2912                           l3548:	
  2913  13FF                     ;main.c: 46:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2914                           	opt asmopt_push
  2915                           opt asmopt_off
  2916                           movlw	13
  2917  13FF  300D               	bsf	status, 5	;RP0=1, select bank1
  2918  1400  1683               	bcf	status, 6	;RP1=0, select bank1
  2919  1401  1303               movwf	((??_main+0)^080h+0+1),f
  2920  1402  00EA               	movlw	251
  2921  1403  30FB               movwf	((??_main+0)^080h+0),f
  2922  1404  00E9               	u4597:
  2923  1405                     decfsz	((??_main+0)^080h+0),f
  2924  1405  0BE9               	goto	u4597
  2925  1406  2C05               	decfsz	((??_main+0)^080h+0+1),f
  2926  1407  0BEA               	goto	u4597
  2927  1408  2C05               opt asmopt_pop
  2928                           
  2929                           	goto	l3538
  2930  1409  2BE3               	line	47
  2931                           ;main.c: 47:     }
  2932                           	
  2933                           l59:	
  2934  140A                     	goto	l3538
  2935  140A  2BE3               	
  2936                           l60:	
  2937  140B                     	line	49
  2938                           	
  2939                           l61:	
  2940  140B                     	global	start
  2941                           	ljmp	start
  2942  140B  120A  118A  2812   	opt stack 0
  2943                           GLOBAL	__end_of_main
  2944                           	__end_of_main:
  2945  140E                     	signat	_main,89
  2946                           	global	_update_volume
  2947                           
  2948 ;; *************** function _update_volume *****************
  2949 ;; Defined at:
  2950 ;;		line 83 in file "Display.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  spaces          2   33[BANK1 ] int 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       0       0       0       0
  2965 ;;      Locals:         0       0       2       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         0       0       2       0       0
  2968 ;;Total ram usage:        2 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; Hardware stack levels required when called:   10
  2971 ;; This function calls:
  2972 ;;		_display_write_end
  2973 ;;		_display_write_start
  2974 ;;		_write_int
  2975 ;;		_write_space
  2976 ;;		_write_text
  2977 ;; This function is called by:
  2978 ;;		_main
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2982                           	file	"Display.c"
  2983                           	line	83
  2984                           global __ptext1
  2985                           __ptext1:	;psect for function _update_volume
  2986  09BE                     psect	text1
  2987                           	file	"Display.c"
  2988                           	line	83
  2989                           	global	__size_of_update_volume
  2990                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2991  0069                     	
  2992                           _update_volume:	
  2993  09BE                     ;incstack = 0
  2994 ;; hardware stack exceeded
  2995                           	opt	stack 0
  2996                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2997                           	line	85
  2998                           	
  2999                           l3384:	
  3000  09BE                     ;Display.c: 85:     if (lastVolume == volume) return;
  3001                           	bsf	status, 5	;RP0=1, select bank1
  3002  09BE  1683               	bcf	status, 6	;RP1=0, select bank1
  3003  09BF  1303               	movf	(_volume+1)^080h,w
  3004  09C0  086C               	bcf	status, 5	;RP0=0, select bank0
  3005  09C1  1283               	bcf	status, 6	;RP1=0, select bank0
  3006  09C2  1303               	xorwf	(_lastVolume+1),w
  3007  09C3  0669               	skipz
  3008  09C4  1D03               	goto	u4325
  3009  09C5  29CC               	bsf	status, 5	;RP0=1, select bank1
  3010  09C6  1683               	bcf	status, 6	;RP1=0, select bank1
  3011  09C7  1303               	movf	(_volume)^080h,w
  3012  09C8  086B               	bcf	status, 5	;RP0=0, select bank0
  3013  09C9  1283               	bcf	status, 6	;RP1=0, select bank0
  3014  09CA  1303               	xorwf	(_lastVolume),w
  3015  09CB  0668               u4325:
  3016  09CC                     
  3017                           	skipz
  3018  09CC  1D03               	goto	u4321
  3019  09CD  29CF               	goto	u4320
  3020  09CE  29D0               u4321:
  3021  09CF                     	goto	l3388
  3022  09CF  29D2               u4320:
  3023  09D0                     	goto	l134
  3024  09D0  2A26               	
  3025                           l3386:	
  3026  09D1                     	goto	l134
  3027  09D1  2A26               	
  3028                           l133:	
  3029  09D2                     	line	87
  3030                           	
  3031                           l3388:	
  3032  09D2                     ;Display.c: 87:     _selectedDisplay = 0;
  3033                           	bsf	status, 5	;RP0=1, select bank1
  3034  09D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3035  09D3  1303               	clrf	(__selectedDisplay)^080h
  3036  09D4  01EF               	line	88
  3037                           	
  3038                           l3390:	
  3039  09D5                     ;Display.c: 88:     display_write_start();
  3040                           	fcall	_display_write_start
  3041  09D5  160A  118A  233B  120A  158A  	line	90
  3042                           	
  3043                           l3392:	
  3044  09DA                     ;Display.c: 90:     write_text("VOL");
  3045                           	movlw	low(((STR_2)|8000h))
  3046  09DA  3096               	bsf	status, 5	;RP0=1, select bank1
  3047  09DB  1683               	bcf	status, 6	;RP1=0, select bank1
  3048  09DC  1303               	movwf	(write_text@text)^080h
  3049  09DD  00B3               	movlw	high(((STR_2)|8000h))
  3050  09DE  3089               	movwf	((write_text@text)^080h)+1
  3051  09DF  00B4               	fcall	_write_text
  3052  09E0  160A  118A  24B5  120A  158A  	line	93
  3053                           	
  3054                           l3394:	
  3055  09E5                     ;Display.c: 93:     int spaces = 3;
  3056                           	movlw	03h
  3057  09E5  3003               	bsf	status, 5	;RP0=1, select bank1
  3058  09E6  1683               	bcf	status, 6	;RP1=0, select bank1
  3059  09E7  1303               	movwf	(update_volume@spaces)^080h
  3060  09E8  00C1               	movlw	0
  3061  09E9  3000               	movwf	((update_volume@spaces)^080h)+1
  3062  09EA  00C2               	line	94
  3063                           	
  3064                           l3396:	
  3065  09EB                     ;Display.c: 94:     if (volume < 10)
  3066                           	movf	(_volume+1)^080h,w
  3067  09EB  086C               	xorlw	80h
  3068  09EC  3A80               	movwf	btemp+1
  3069  09ED  00FF               	movlw	(0)^80h
  3070  09EE  3080               	subwf	btemp+1,w
  3071  09EF  027F               	skipz
  3072  09F0  1D03               	goto	u4335
  3073  09F1  29F4               	movlw	0Ah
  3074  09F2  300A               	subwf	(_volume)^080h,w
  3075  09F3  026B               u4335:
  3076  09F4                     
  3077                           	skipnc
  3078  09F4  1803               	goto	u4331
  3079  09F5  29F7               	goto	u4330
  3080  09F6  29F8               u4331:
  3081  09F7                     	goto	l3400
  3082  09F7  29FF               u4330:
  3083  09F8                     	line	95
  3084                           	
  3085                           l3398:	
  3086  09F8                     ;Display.c: 95:         spaces = 4;
  3087                           	movlw	04h
  3088  09F8  3004               	bsf	status, 5	;RP0=1, select bank1
  3089  09F9  1683               	bcf	status, 6	;RP1=0, select bank1
  3090  09FA  1303               	movwf	(update_volume@spaces)^080h
  3091  09FB  00C1               	movlw	0
  3092  09FC  3000               	movwf	((update_volume@spaces)^080h)+1
  3093  09FD  00C2               	goto	l3400
  3094  09FE  29FF               	
  3095                           l135:	
  3096  09FF                     	line	98
  3097                           	
  3098                           l3400:	
  3099  09FF                     ;Display.c: 98:     write_space(spaces);
  3100                           	bsf	status, 5	;RP0=1, select bank1
  3101  09FF  1683               	bcf	status, 6	;RP1=0, select bank1
  3102  0A00  1303               	movf	(update_volume@spaces+1)^080h,w
  3103  0A01  0842               	movwf	(write_space@count+1)^080h
  3104  0A02  00A2               	movf	(update_volume@spaces)^080h,w
  3105  0A03  0841               	movwf	(write_space@count)^080h
  3106  0A04  00A1               	fcall	_write_space
  3107  0A05  120A  118A  2015  120A  158A  	line	100
  3108                           	
  3109                           l3402:	
  3110  0A0A                     ;Display.c: 100:     write_int(volume);
  3111                           	bsf	status, 5	;RP0=1, select bank1
  3112  0A0A  1683               	bcf	status, 6	;RP1=0, select bank1
  3113  0A0B  1303               	movf	(_volume+1)^080h,w
  3114  0A0C  086C               	movwf	(write_int@number+1)^080h
  3115  0A0D  00BE               	movf	(_volume)^080h,w
  3116  0A0E  086B               	movwf	(write_int@number)^080h
  3117  0A0F  00BD               	fcall	_write_int
  3118  0A10  160A  118A  240E  120A  158A  	line	101
  3119                           	
  3120                           l3404:	
  3121  0A15                     ;Display.c: 101:     display_write_end();
  3122                           	fcall	_display_write_end
  3123  0A15  160A  118A  232C  120A  158A  	line	103
  3124                           	
  3125                           l3406:	
  3126  0A1A                     ;Display.c: 103:     lastVolume = volume;
  3127                           	bsf	status, 5	;RP0=1, select bank1
  3128  0A1A  1683               	bcf	status, 6	;RP1=0, select bank1
  3129  0A1B  1303               	movf	(_volume+1)^080h,w
  3130  0A1C  086C               	bcf	status, 5	;RP0=0, select bank0
  3131  0A1D  1283               	bcf	status, 6	;RP1=0, select bank0
  3132  0A1E  1303               	movwf	(_lastVolume+1)
  3133  0A1F  00E9               	bsf	status, 5	;RP0=1, select bank1
  3134  0A20  1683               	bcf	status, 6	;RP1=0, select bank1
  3135  0A21  1303               	movf	(_volume)^080h,w
  3136  0A22  086B               	bcf	status, 5	;RP0=0, select bank0
  3137  0A23  1283               	bcf	status, 6	;RP1=0, select bank0
  3138  0A24  1303               	movwf	(_lastVolume)
  3139  0A25  00E8               	line	105
  3140                           	
  3141                           l134:	
  3142  0A26                     	return
  3143  0A26  0008               	opt stack 0
  3144                           GLOBAL	__end_of_update_volume
  3145                           	__end_of_update_volume:
  3146  0A27                     	signat	_update_volume,89
  3147                           	global	_update_vol_motor
  3148                           
  3149 ;; *************** function _update_vol_motor *****************
  3150 ;; Defined at:
  3151 ;;		line 15 in file "Volume.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;		None
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  ad_result       2   69[BANK1 ] unsigned int 
  3156 ;;  curPotmeterV    2   71[BANK1 ] int 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         0       0       0       0       0
  3167 ;;      Locals:         0       0       4       0       0
  3168 ;;      Temps:          0       0       1       0       0
  3169 ;;      Totals:         0       0       5       0       0
  3170 ;;Total ram usage:        5 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    8
  3173 ;; This function calls:
  3174 ;;		_get_volume
  3175 ;; This function is called by:
  3176 ;;		_main
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3180                           	file	"Volume.c"
  3181                           	line	15
  3182                           global __ptext2
  3183                           __ptext2:	;psect for function _update_vol_motor
  3184  0A93                     psect	text2
  3185                           	file	"Volume.c"
  3186                           	line	15
  3187                           	global	__size_of_update_vol_motor
  3188                           	__size_of_update_vol_motor	equ	__end_of_update_vol_motor-_update_vol_motor
  3189  0073                     	
  3190                           _update_vol_motor:	
  3191  0A93                     ;incstack = 0
  3192 ;; hardware stack exceeded
  3193                           	opt	stack 0
  3194                           ; Regs used in _update_vol_motor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3195                           	line	17
  3196                           	
  3197                           l3450:	
  3198  0A93                     ;Volume.c: 17:     if (!vol_motor) return;
  3199                           	bcf	status, 5	;RP0=0, select bank0
  3200  0A93  1283               	bcf	status, 6	;RP1=0, select bank0
  3201  0A94  1303               	movf	((_vol_motor)),w
  3202  0A95  086E               	btfss	status,2
  3203  0A96  1D03               	goto	u4361
  3204  0A97  2A99               	goto	u4360
  3205  0A98  2A9A               u4361:
  3206  0A99                     	goto	l320
  3207  0A99  2A9C               u4360:
  3208  0A9A                     	goto	l321
  3209  0A9A  2B05               	
  3210                           l3452:	
  3211  0A9B                     	goto	l321
  3212  0A9B  2B05               	
  3213                           l320:	
  3214  0A9C                     	line	24
  3215                           ;Volume.c: 24:     GIE = 0;
  3216                           	bcf	(95/8),(95)&7	;volatile
  3217  0A9C  138B               	line	26
  3218                           	
  3219                           l3454:	
  3220  0A9D                     ;Volume.c: 26:     int curPotmeterVol = 40 +1;
  3221                           	movlw	029h
  3222  0A9D  3029               	bsf	status, 5	;RP0=1, select bank1
  3223  0A9E  1683               	bcf	status, 6	;RP1=0, select bank1
  3224  0A9F  1303               	movwf	(update_vol_motor@curPotmeterVol)^080h
  3225  0AA0  00E7               	movlw	0
  3226  0AA1  3000               	movwf	((update_vol_motor@curPotmeterVol)^080h)+1
  3227  0AA2  00E8               	line	29
  3228                           ;Volume.c: 29:     while (volume != curPotmeterVol) {
  3229                           	goto	l3472
  3230  0AA3  2AF2               	
  3231                           l323:	
  3232  0AA4                     	line	30
  3233                           ;Volume.c: 30:         ADCON0bits.GO = 1;
  3234                           	bcf	status, 5	;RP0=0, select bank0
  3235  0AA4  1283               	bcf	status, 6	;RP1=0, select bank0
  3236  0AA5  1303               	bsf	(31),1	;volatile
  3237  0AA6  149F               	line	31
  3238                           ;Volume.c: 31:         while (ADCON0bits.GO);
  3239                           	goto	l324
  3240  0AA7  2AA8               	
  3241                           l325:	
  3242  0AA8                     	
  3243                           l324:	
  3244  0AA8                     	btfsc	(31),1	;volatile
  3245  0AA8  189F               	goto	u4371
  3246  0AA9  2AAB               	goto	u4370
  3247  0AAA  2AAC               u4371:
  3248  0AAB                     	goto	l324
  3249  0AAB  2AA8               u4370:
  3250  0AAC                     	goto	l3456
  3251  0AAC  2AAD               	
  3252                           l326:	
  3253  0AAD                     	line	32
  3254                           	
  3255                           l3456:	
  3256  0AAD                     ;Volume.c: 32:         unsigned int ad_result = (ADRESH << 8) + ADRESL;
  3257                           	movf	(30),w	;volatile
  3258  0AAD  081E               	bsf	status, 5	;RP0=1, select bank1
  3259  0AAE  1683               	bcf	status, 6	;RP1=0, select bank1
  3260  0AAF  1303               	movwf	(update_vol_motor@ad_result+1)^080h
  3261  0AB0  00E6               	movf	(158)^080h,w	;volatile
  3262  0AB1  081E               	movwf	(update_vol_motor@ad_result)^080h
  3263  0AB2  00E5               	line	34
  3264                           	
  3265                           l3458:	
  3266  0AB3                     ;Volume.c: 34:         curPotmeterVol = get_volume(ad_result);
  3267                           	movf	(update_vol_motor@ad_result+1)^080h,w
  3268  0AB3  0866               	movwf	(get_volume@ad_result+1)^080h
  3269  0AB4  00DF               	movf	(update_vol_motor@ad_result)^080h,w
  3270  0AB5  0865               	movwf	(get_volume@ad_result)^080h
  3271  0AB6  00DE               	fcall	_get_volume
  3272  0AB7  120A  158A  2306  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3273  0ABC  1683               	bcf	status, 6	;RP1=0, select bank1
  3274  0ABD  1303               	movf	(1+(?_get_volume))^080h,w
  3275  0ABE  085F               	movwf	(update_vol_motor@curPotmeterVol+1)^080h
  3276  0ABF  00E8               	movf	(0+(?_get_volume))^080h,w
  3277  0AC0  085E               	movwf	(update_vol_motor@curPotmeterVol)^080h
  3278  0AC1  00E7               	line	36
  3279                           	
  3280                           l3460:	
  3281  0AC2                     ;Volume.c: 36:         if (curPotmeterVol < 0) continue;
  3282                           	btfss	(update_vol_motor@curPotmeterVol+1)^080h,7
  3283  0AC2  1FE8               	goto	u4381
  3284  0AC3  2AC5               	goto	u4380
  3285  0AC4  2AC6               u4381:
  3286  0AC5                     	goto	l3464
  3287  0AC5  2AC8               u4380:
  3288  0AC6                     	goto	l3472
  3289  0AC6  2AF2               	
  3290                           l3462:	
  3291  0AC7                     	goto	l3472
  3292  0AC7  2AF2               	
  3293                           l327:	
  3294  0AC8                     	line	38
  3295                           	
  3296                           l3464:	
  3297  0AC8                     ;Volume.c: 38:         if (volume > curPotmeterVol) {
  3298                           	movf	(update_vol_motor@curPotmeterVol+1)^080h,w
  3299  0AC8  0868               	xorlw	80h
  3300  0AC9  3A80               	movwf	(??_update_vol_motor+0)^080h+0
  3301  0ACA  00E4               	movf	(_volume+1)^080h,w
  3302  0ACB  086C               	xorlw	80h
  3303  0ACC  3A80               	subwf	(??_update_vol_motor+0)^080h+0,w
  3304  0ACD  0264               	skipz
  3305  0ACE  1D03               	goto	u4395
  3306  0ACF  2AD2               	movf	(_volume)^080h,w
  3307  0AD0  086B               	subwf	(update_vol_motor@curPotmeterVol)^080h,w
  3308  0AD1  0267               u4395:
  3309  0AD2                     
  3310                           	skipnc
  3311  0AD2  1803               	goto	u4391
  3312  0AD3  2AD5               	goto	u4390
  3313  0AD4  2AD6               u4391:
  3314  0AD5                     	goto	l3468
  3315  0AD5  2ADB               u4390:
  3316  0AD6                     	line	39
  3317                           	
  3318                           l3466:	
  3319  0AD6                     ;Volume.c: 39:             PORTCbits.RC0 = 1;
  3320                           	bcf	status, 5	;RP0=0, select bank0
  3321  0AD6  1283               	bcf	status, 6	;RP1=0, select bank0
  3322  0AD7  1303               	bsf	(7),0	;volatile
  3323  0AD8  1407               	line	40
  3324                           ;Volume.c: 40:             PORTCbits.RC1 = 0;
  3325                           	bcf	(7),1	;volatile
  3326  0AD9  1087               	line	41
  3327                           ;Volume.c: 41:         } else if (volume < curPotmeterVol) {
  3328                           	goto	l3472
  3329  0ADA  2AF2               	
  3330                           l328:	
  3331  0ADB                     	
  3332                           l3468:	
  3333  0ADB                     	bsf	status, 5	;RP0=1, select bank1
  3334  0ADB  1683               	bcf	status, 6	;RP1=0, select bank1
  3335  0ADC  1303               	movf	(_volume+1)^080h,w
  3336  0ADD  086C               	xorlw	80h
  3337  0ADE  3A80               	movwf	(??_update_vol_motor+0)^080h+0
  3338  0ADF  00E4               	movf	(update_vol_motor@curPotmeterVol+1)^080h,w
  3339  0AE0  0868               	xorlw	80h
  3340  0AE1  3A80               	subwf	(??_update_vol_motor+0)^080h+0,w
  3341  0AE2  0264               	skipz
  3342  0AE3  1D03               	goto	u4405
  3343  0AE4  2AE7               	movf	(update_vol_motor@curPotmeterVol)^080h,w
  3344  0AE5  0867               	subwf	(_volume)^080h,w
  3345  0AE6  026B               u4405:
  3346  0AE7                     
  3347                           	skipnc
  3348  0AE7  1803               	goto	u4401
  3349  0AE8  2AEA               	goto	u4400
  3350  0AE9  2AEB               u4401:
  3351  0AEA                     	goto	l3472
  3352  0AEA  2AF2               u4400:
  3353  0AEB                     	line	42
  3354                           	
  3355                           l3470:	
  3356  0AEB                     ;Volume.c: 42:             PORTCbits.RC0 = 0;
  3357                           	bcf	status, 5	;RP0=0, select bank0
  3358  0AEB  1283               	bcf	status, 6	;RP1=0, select bank0
  3359  0AEC  1303               	bcf	(7),0	;volatile
  3360  0AED  1007               	line	43
  3361                           ;Volume.c: 43:             PORTCbits.RC1 = 1;
  3362                           	bsf	(7),1	;volatile
  3363  0AEE  1487               	goto	l3472
  3364  0AEF  2AF2               	line	44
  3365                           ;Volume.c: 44:         }
  3366                           	
  3367                           l330:	
  3368  0AF0                     	goto	l3472
  3369  0AF0  2AF2               	
  3370                           l329:	
  3371  0AF1                     	goto	l3472
  3372  0AF1  2AF2               	line	45
  3373                           ;Volume.c: 45:     }
  3374                           	
  3375                           l322:	
  3376  0AF2                     	line	29
  3377                           	
  3378                           l3472:	
  3379  0AF2                     ;Volume.c: 29:     while (volume != curPotmeterVol) {
  3380                           	bsf	status, 5	;RP0=1, select bank1
  3381  0AF2  1683               	bcf	status, 6	;RP1=0, select bank1
  3382  0AF3  1303               	movf	(update_vol_motor@curPotmeterVol+1)^080h,w
  3383  0AF4  0868               	xorwf	(_volume+1)^080h,w
  3384  0AF5  066C               	skipz
  3385  0AF6  1D03               	goto	u4415
  3386  0AF7  2AFA               	movf	(update_vol_motor@curPotmeterVol)^080h,w
  3387  0AF8  0867               	xorwf	(_volume)^080h,w
  3388  0AF9  066B               u4415:
  3389  0AFA                     
  3390                           	skipz
  3391  0AFA  1D03               	goto	u4411
  3392  0AFB  2AFD               	goto	u4410
  3393  0AFC  2AFE               u4411:
  3394  0AFD                     	goto	l323
  3395  0AFD  2AA4               u4410:
  3396  0AFE                     	goto	l3474
  3397  0AFE  2AFF               	
  3398                           l331:	
  3399  0AFF                     	line	47
  3400                           	
  3401                           l3474:	
  3402  0AFF                     ;Volume.c: 47:     vol_motor = 0;
  3403                           	bcf	status, 5	;RP0=0, select bank0
  3404  0AFF  1283               	bcf	status, 6	;RP1=0, select bank0
  3405  0B00  1303               	clrf	(_vol_motor)
  3406  0B01  01EE               	line	48
  3407                           	
  3408                           l3476:	
  3409  0B02                     ;Volume.c: 48:     RC0 = RC1 = 0;
  3410                           	bcf	(57/8),(57)&7	;volatile
  3411  0B02  1087               	bcf	(56/8),(56)&7	;volatile
  3412  0B03  1007               	line	49
  3413                           	
  3414                           l3478:	
  3415  0B04                     ;Volume.c: 49:     GIE = 1;
  3416                           	bsf	(95/8),(95)&7	;volatile
  3417  0B04  178B               	line	50
  3418                           	
  3419                           l321:	
  3420  0B05                     	return
  3421  0B05  0008               	opt stack 0
  3422                           GLOBAL	__end_of_update_vol_motor
  3423                           	__end_of_update_vol_motor:
  3424  0B06                     	signat	_update_vol_motor,89
  3425                           	global	_get_volume
  3426                           
  3427 ;; *************** function _get_volume *****************
  3428 ;; Defined at:
  3429 ;;		line 84 in file "Volume.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  ad_result       2   62[BANK1 ] unsigned int 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  currentStep     2   66[BANK1 ] unsigned int 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  2   62[BANK1 ] int 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3443 ;;      Params:         0       0       2       0       0
  3444 ;;      Locals:         0       0       2       0       0
  3445 ;;      Temps:          0       0       2       0       0
  3446 ;;      Totals:         0       0       6       0       0
  3447 ;;Total ram usage:        6 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:    7
  3450 ;; This function calls:
  3451 ;;		___lwdiv
  3452 ;;		_is_deadzone
  3453 ;; This function is called by:
  3454 ;;		_update_vol_motor
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3458                           	line	84
  3459                           global __ptext3
  3460                           __ptext3:	;psect for function _get_volume
  3461  0B06                     psect	text3
  3462                           	file	"Volume.c"
  3463                           	line	84
  3464                           	global	__size_of_get_volume
  3465                           	__size_of_get_volume	equ	__end_of_get_volume-_get_volume
  3466  0079                     	
  3467                           _get_volume:	
  3468  0B06                     ;incstack = 0
  3469 ;; hardware stack exceeded
  3470                           	opt	stack 0
  3471                           ; Regs used in _get_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3472                           	line	86
  3473                           	
  3474                           l3228:	
  3475  0B06                     ;Volume.c: 84: int get_volume(unsigned int ad_result);Volume.c: 85: {;Volume.c: 86:     
                                 if (ad_result == 0 || ad_result < step_size) {
  3476                           	bsf	status, 5	;RP0=1, select bank1
  3477  0B06  1683               	bcf	status, 6	;RP1=0, select bank1
  3478  0B07  1303               	movf	((get_volume@ad_result)^080h),w
  3479  0B08  085E               iorwf	((get_volume@ad_result+1)^080h),w
  3480  0B09  045F               	btfsc	status,2
  3481  0B0A  1903               	goto	u4261
  3482  0B0B  2B0D               	goto	u4260
  3483  0B0C  2B0E               u4261:
  3484  0B0D                     	goto	l3232
  3485  0B0D  2B31               u4260:
  3486  0B0E                     	
  3487                           l3230:	
  3488  0B0E                     	movlw	low(_step_size|8000h)
  3489  0B0E  308E               	movwf	fsr0
  3490  0B0F  0084               	movlw	high(_step_size|8000h)
  3491  0B10  3089               	bcf	status, 5	;RP0=0, select bank0
  3492  0B11  1283               	bcf	status, 6	;RP1=0, select bank0
  3493  0B12  1303               	movwf	btemp+1
  3494  0B13  00FF               	fcall	stringtab
  3495  0B14  120A  158A  2000  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3496  0B19  1683               	bcf	status, 6	;RP1=0, select bank1
  3497  0B1A  1303               	movwf	(??_get_volume+0)^080h+0
  3498  0B1B  00E0               	bcf	status, 5	;RP0=0, select bank0
  3499  0B1C  1283               	bcf	status, 6	;RP1=0, select bank0
  3500  0B1D  1303               	fcall	stringtab
  3501  0B1E  120A  158A  2000  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3502  0B23  1683               	bcf	status, 6	;RP1=0, select bank1
  3503  0B24  1303               	movwf	(??_get_volume+0)^080h+0+1
  3504  0B25  00E1               	movf	1+(??_get_volume+0)^080h+0,w
  3505  0B26  0861               	subwf	(get_volume@ad_result+1)^080h,w
  3506  0B27  025F               	skipz
  3507  0B28  1D03               	goto	u4275
  3508  0B29  2B2C               	movf	0+(??_get_volume+0)^080h+0,w
  3509  0B2A  0860               	subwf	(get_volume@ad_result)^080h,w
  3510  0B2B  025E               u4275:
  3511  0B2C                     	skipnc
  3512  0B2C  1803               	goto	u4271
  3513  0B2D  2B2F               	goto	u4270
  3514  0B2E  2B30               u4271:
  3515  0B2F                     	goto	l3238
  3516  0B2F  2B36               u4270:
  3517  0B30                     	goto	l3232
  3518  0B30  2B31               	
  3519                           l346:	
  3520  0B31                     	line	87
  3521                           	
  3522                           l3232:	
  3523  0B31                     ;Volume.c: 87:             return 0;
  3524                           	clrf	(?_get_volume)^080h
  3525  0B31  01DE               	clrf	(?_get_volume+1)^080h
  3526  0B32  01DF               	goto	l347
  3527  0B33  2B7E               	
  3528                           l3234:	
  3529  0B34                     	goto	l347
  3530  0B34  2B7E               	line	88
  3531                           	
  3532                           l3236:	
  3533  0B35                     ;Volume.c: 88:     } else {
  3534                           	goto	l3244
  3535  0B35  2B79               	
  3536                           l344:	
  3537  0B36                     	line	89
  3538                           	
  3539                           l3238:	
  3540  0B36                     ;Volume.c: 89:         unsigned int currentStep = ad_result / step_size;
  3541                           	movlw	low(_step_size|8000h)
  3542  0B36  308E               	movwf	fsr0
  3543  0B37  0084               	movlw	high(_step_size|8000h)
  3544  0B38  3089               	bcf	status, 5	;RP0=0, select bank0
  3545  0B39  1283               	bcf	status, 6	;RP1=0, select bank0
  3546  0B3A  1303               	movwf	btemp+1
  3547  0B3B  00FF               	fcall	stringtab
  3548  0B3C  120A  158A  2000  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3549  0B41  1683               	bcf	status, 6	;RP1=0, select bank1
  3550  0B42  1303               	movwf	(___lwdiv@divisor)^080h
  3551  0B43  00A0               	bcf	status, 5	;RP0=0, select bank0
  3552  0B44  1283               	bcf	status, 6	;RP1=0, select bank0
  3553  0B45  1303               	fcall	stringtab
  3554  0B46  120A  158A  2000  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3555  0B4B  1683               	bcf	status, 6	;RP1=0, select bank1
  3556  0B4C  1303               	movwf	(___lwdiv@divisor+1)^080h
  3557  0B4D  00A1               	movf	(get_volume@ad_result+1)^080h,w
  3558  0B4E  085F               	movwf	(___lwdiv@dividend+1)^080h
  3559  0B4F  00A3               	movf	(get_volume@ad_result)^080h,w
  3560  0B50  085E               	movwf	(___lwdiv@dividend)^080h
  3561  0B51  00A2               	fcall	___lwdiv
  3562  0B52  160A  118A  257D  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3563  0B57  1683               	bcf	status, 6	;RP1=0, select bank1
  3564  0B58  1303               	movf	(1+(?___lwdiv))^080h,w
  3565  0B59  0821               	movwf	(get_volume@currentStep+1)^080h
  3566  0B5A  00E3               	movf	(0+(?___lwdiv))^080h,w
  3567  0B5B  0820               	movwf	(get_volume@currentStep)^080h
  3568  0B5C  00E2               	line	91
  3569                           ;Volume.c: 91:         if (!is_deadzone(currentStep, ad_result))
  3570                           	movf	(get_volume@currentStep+1)^080h,w
  3571  0B5D  0863               	movwf	(is_deadzone@currentStep+1)^080h
  3572  0B5E  00D2               	movf	(get_volume@currentStep)^080h,w
  3573  0B5F  0862               	movwf	(is_deadzone@currentStep)^080h
  3574  0B60  00D1               	movf	(get_volume@ad_result+1)^080h,w
  3575  0B61  085F               	movwf	(is_deadzone@adcResult+1)^080h
  3576  0B62  00D4               	movf	(get_volume@ad_result)^080h,w
  3577  0B63  085E               	movwf	(is_deadzone@adcResult)^080h
  3578  0B64  00D3               	fcall	_is_deadzone
  3579  0B65  120A  118A  2061  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3580  0B6A  1683               	bcf	status, 6	;RP1=0, select bank1
  3581  0B6B  1303               	movf	((0+(?_is_deadzone))^080h),w
  3582  0B6C  0851               iorwf	((1+(?_is_deadzone))^080h),w
  3583  0B6D  0452               	btfss	status,2
  3584  0B6E  1D03               	goto	u4281
  3585  0B6F  2B71               	goto	u4280
  3586  0B70  2B72               u4281:
  3587  0B71                     	goto	l3244
  3588  0B71  2B79               u4280:
  3589  0B72                     	line	92
  3590                           	
  3591                           l3240:	
  3592  0B72                     ;Volume.c: 92:             return currentStep;
  3593                           	movf	(get_volume@currentStep+1)^080h,w
  3594  0B72  0863               	movwf	(?_get_volume+1)^080h
  3595  0B73  00DF               	movf	(get_volume@currentStep)^080h,w
  3596  0B74  0862               	movwf	(?_get_volume)^080h
  3597  0B75  00DE               	goto	l347
  3598  0B76  2B7E               	
  3599                           l3242:	
  3600  0B77                     	goto	l347
  3601  0B77  2B7E               	
  3602                           l349:	
  3603  0B78                     	goto	l3244
  3604  0B78  2B79               	line	93
  3605                           ;Volume.c: 93:     }
  3606                           	
  3607                           l348:	
  3608  0B79                     	line	95
  3609                           	
  3610                           l3244:	
  3611  0B79                     ;Volume.c: 95:     return -1;
  3612                           	movlw	0FFh
  3613  0B79  30FF               	movwf	(?_get_volume)^080h
  3614  0B7A  00DE               	movlw	0FFh
  3615  0B7B  30FF               	movwf	((?_get_volume)^080h)+1
  3616  0B7C  00DF               	goto	l347
  3617  0B7D  2B7E               	
  3618                           l3246:	
  3619  0B7E                     	line	96
  3620                           	
  3621                           l347:	
  3622  0B7E                     	return
  3623  0B7E  0008               	opt stack 0
  3624                           GLOBAL	__end_of_get_volume
  3625                           	__end_of_get_volume:
  3626  0B7F                     	signat	_get_volume,4218
  3627                           	global	_is_deadzone
  3628                           
  3629 ;; *************** function _is_deadzone *****************
  3630 ;; Defined at:
  3631 ;;		line 55 in file "Volume.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  currentStep     2   49[BANK1 ] int 
  3634 ;;  adcResult       2   51[BANK1 ] int 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  turnPoint       2   60[BANK1 ] int 
  3637 ;;  deadzoneHigh    2   57[BANK1 ] int 
  3638 ;;  deadzoneLow     2   55[BANK1 ] int 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  2   49[BANK1 ] int 
  3641 ;; Registers used:
  3642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         0       0       4       0       0
  3649 ;;      Locals:         0       0       7       0       0
  3650 ;;      Temps:          0       0       2       0       0
  3651 ;;      Totals:         0       0      13       0       0
  3652 ;;Total ram usage:       13 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:    6
  3655 ;; This function calls:
  3656 ;;		___fladd
  3657 ;;		___fltol
  3658 ;;		___wmul
  3659 ;;		___xxtofl
  3660 ;; This function is called by:
  3661 ;;		_get_volume
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3665                           	line	55
  3666                           global __ptext4
  3667                           __ptext4:	;psect for function _is_deadzone
  3668  0061                     psect	text4
  3669                           	file	"Volume.c"
  3670                           	line	55
  3671                           	global	__size_of_is_deadzone
  3672                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  3673  00CC                     	
  3674                           _is_deadzone:	
  3675  0061                     ;incstack = 0
  3676 ;; hardware stack exceeded
  3677                           	opt	stack 0
  3678                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3679                           	line	57
  3680                           	
  3681                           l3060:	
  3682  0061                     ;Volume.c: 55: int is_deadzone(int currentStep, int adcResult);Volume.c: 56: {;Volume.c:
                                  57:     int turnPoint = step_size * currentStep;
  3683                           	movlw	low(_step_size|8000h)
  3684  0061  308E               	movwf	fsr0
  3685  0062  0084               	movlw	high(_step_size|8000h)
  3686  0063  3089               	bcf	status, 5	;RP0=0, select bank0
  3687  0064  1283               	bcf	status, 6	;RP1=0, select bank0
  3688  0065  1303               	movwf	btemp+1
  3689  0066  00FF               	fcall	stringtab
  3690  0067  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3691  006C  1683               	bcf	status, 6	;RP1=0, select bank1
  3692  006D  1303               	movwf	(___wmul@multiplier)^080h
  3693  006E  00A0               	bcf	status, 5	;RP0=0, select bank0
  3694  006F  1283               	bcf	status, 6	;RP1=0, select bank0
  3695  0070  1303               	fcall	stringtab
  3696  0071  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3697  0076  1683               	bcf	status, 6	;RP1=0, select bank1
  3698  0077  1303               	movwf	(___wmul@multiplier+1)^080h
  3699  0078  00A1               	movf	(is_deadzone@currentStep+1)^080h,w
  3700  0079  0852               	movwf	(___wmul@multiplicand+1)^080h
  3701  007A  00A3               	movf	(is_deadzone@currentStep)^080h,w
  3702  007B  0851               	movwf	(___wmul@multiplicand)^080h
  3703  007C  00A2               	fcall	___wmul
  3704  007D  160A  118A  2382  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3705  0082  1683               	bcf	status, 6	;RP1=0, select bank1
  3706  0083  1303               	movf	(1+(?___wmul))^080h,w
  3707  0084  0821               	movwf	(is_deadzone@turnPoint+1)^080h
  3708  0085  00DD               	movf	(0+(?___wmul))^080h,w
  3709  0086  0820               	movwf	(is_deadzone@turnPoint)^080h
  3710  0087  00DC               	line	59
  3711                           	
  3712                           l3062:	
  3713  0088                     ;Volume.c: 59:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  3714                           	movf	(is_deadzone@turnPoint)^080h,w
  3715  0088  085C               	movwf	(___xxtofl@val)^080h
  3716  0089  00A0               	movf	(is_deadzone@turnPoint+1)^080h,w
  3717  008A  085D               	movwf	(___xxtofl@val+1)^080h
  3718  008B  00A1               	movlw	0
  3719  008C  3000               	btfsc	(___xxtofl@val+1)^080h,7
  3720  008D  1BA1               	movlw	255
  3721  008E  30FF               	movwf	(___xxtofl@val+2)^080h
  3722  008F  00A2               	movwf	(___xxtofl@val+3)^080h
  3723  0090  00A3               	movlw	low(01h)
  3724  0091  3001               	fcall	___xxtofl
  3725  0092  120A  158A  2676  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3726  0097  1683               	bcf	status, 6	;RP1=0, select bank1
  3727  0098  1303               	movf	(3+(?___xxtofl))^080h,w
  3728  0099  0823               	movwf	(___fladd@a+3)^080h
  3729  009A  00B5               	movf	(2+(?___xxtofl))^080h,w
  3730  009B  0822               	movwf	(___fladd@a+2)^080h
  3731  009C  00B4               	movf	(1+(?___xxtofl))^080h,w
  3732  009D  0821               	movwf	(___fladd@a+1)^080h
  3733  009E  00B3               	movf	(0+(?___xxtofl))^080h,w
  3734  009F  0820               	movwf	(___fladd@a)^080h
  3735  00A0  00B2               
  3736                           	movlw	0xc1
  3737  00A1  30C1               	movwf	(___fladd@b+3)^080h
  3738  00A2  00B1               	movlw	0x23
  3739  00A3  3023               	movwf	(___fladd@b+2)^080h
  3740  00A4  00B0               	movlw	0xae
  3741  00A5  30AE               	movwf	(___fladd@b+1)^080h
  3742  00A6  00AF               	movlw	0x14
  3743  00A7  3014               	movwf	(___fladd@b)^080h
  3744  00A8  00AE               
  3745                           	fcall	___fladd
  3746  00A9  120A  118A  2263  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3747  00AE  1683               	bcf	status, 6	;RP1=0, select bank1
  3748  00AF  1303               	movf	(3+(?___fladd))^080h,w
  3749  00B0  0831               	movwf	(___fltol@f1+3)^080h
  3750  00B1  00C9               	movf	(2+(?___fladd))^080h,w
  3751  00B2  0830               	movwf	(___fltol@f1+2)^080h
  3752  00B3  00C8               	movf	(1+(?___fladd))^080h,w
  3753  00B4  082F               	movwf	(___fltol@f1+1)^080h
  3754  00B5  00C7               	movf	(0+(?___fladd))^080h,w
  3755  00B6  082E               	movwf	(___fltol@f1)^080h
  3756  00B7  00C6               
  3757                           	fcall	___fltol
  3758  00B8  120A  158A  2516  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3759  00BD  1683               	bcf	status, 6	;RP1=0, select bank1
  3760  00BE  1303               	movf	(1+(?___fltol))^080h,w
  3761  00BF  0847               	movwf	(is_deadzone@deadzoneLow+1)^080h
  3762  00C0  00D8               	movf	(0+(?___fltol))^080h,w
  3763  00C1  0846               	movwf	(is_deadzone@deadzoneLow)^080h
  3764  00C2  00D7               	line	60
  3765                           	
  3766                           l3064:	
  3767  00C3                     ;Volume.c: 60:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  3768                           	movf	(is_deadzone@turnPoint)^080h,w
  3769  00C3  085C               	movwf	(___xxtofl@val)^080h
  3770  00C4  00A0               	movf	(is_deadzone@turnPoint+1)^080h,w
  3771  00C5  085D               	movwf	(___xxtofl@val+1)^080h
  3772  00C6  00A1               	movlw	0
  3773  00C7  3000               	btfsc	(___xxtofl@val+1)^080h,7
  3774  00C8  1BA1               	movlw	255
  3775  00C9  30FF               	movwf	(___xxtofl@val+2)^080h
  3776  00CA  00A2               	movwf	(___xxtofl@val+3)^080h
  3777  00CB  00A3               	movlw	low(01h)
  3778  00CC  3001               	fcall	___xxtofl
  3779  00CD  120A  158A  2676  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3780  00D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3781  00D3  1303               	movf	(3+(?___xxtofl))^080h,w
  3782  00D4  0823               	movwf	(___fladd@a+3)^080h
  3783  00D5  00B5               	movf	(2+(?___xxtofl))^080h,w
  3784  00D6  0822               	movwf	(___fladd@a+2)^080h
  3785  00D7  00B4               	movf	(1+(?___xxtofl))^080h,w
  3786  00D8  0821               	movwf	(___fladd@a+1)^080h
  3787  00D9  00B3               	movf	(0+(?___xxtofl))^080h,w
  3788  00DA  0820               	movwf	(___fladd@a)^080h
  3789  00DB  00B2               
  3790                           	movlw	0x41
  3791  00DC  3041               	movwf	(___fladd@b+3)^080h
  3792  00DD  00B1               	movlw	0x23
  3793  00DE  3023               	movwf	(___fladd@b+2)^080h
  3794  00DF  00B0               	movlw	0xae
  3795  00E0  30AE               	movwf	(___fladd@b+1)^080h
  3796  00E1  00AF               	movlw	0x14
  3797  00E2  3014               	movwf	(___fladd@b)^080h
  3798  00E3  00AE               
  3799                           	fcall	___fladd
  3800  00E4  120A  118A  2263  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3801  00E9  1683               	bcf	status, 6	;RP1=0, select bank1
  3802  00EA  1303               	movf	(3+(?___fladd))^080h,w
  3803  00EB  0831               	movwf	(___fltol@f1+3)^080h
  3804  00EC  00C9               	movf	(2+(?___fladd))^080h,w
  3805  00ED  0830               	movwf	(___fltol@f1+2)^080h
  3806  00EE  00C8               	movf	(1+(?___fladd))^080h,w
  3807  00EF  082F               	movwf	(___fltol@f1+1)^080h
  3808  00F0  00C7               	movf	(0+(?___fladd))^080h,w
  3809  00F1  082E               	movwf	(___fltol@f1)^080h
  3810  00F2  00C6               
  3811                           	fcall	___fltol
  3812  00F3  120A  158A  2516  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3813  00F8  1683               	bcf	status, 6	;RP1=0, select bank1
  3814  00F9  1303               	movf	(1+(?___fltol))^080h,w
  3815  00FA  0847               	movwf	(is_deadzone@deadzoneHigh+1)^080h
  3816  00FB  00DA               	movf	(0+(?___fltol))^080h,w
  3817  00FC  0846               	movwf	(is_deadzone@deadzoneHigh)^080h
  3818  00FD  00D9               	line	62
  3819                           	
  3820                           l3066:	
  3821  00FE                     ;Volume.c: 62:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  3822                           	clrf	(_is_deadzone$899)^080h
  3823  00FE  01DB               	
  3824                           l3068:	
  3825  00FF                     	movf	(is_deadzone@deadzoneLow+1)^080h,w
  3826  00FF  0858               	xorlw	80h
  3827  0100  3A80               	movwf	(??_is_deadzone+0)^080h+0
  3828  0101  00D5               	movf	(is_deadzone@adcResult+1)^080h,w
  3829  0102  0854               	xorlw	80h
  3830  0103  3A80               	subwf	(??_is_deadzone+0)^080h+0,w
  3831  0104  0255               	skipz
  3832  0105  1D03               	goto	u4095
  3833  0106  2909               	movf	(is_deadzone@adcResult)^080h,w
  3834  0107  0853               	subwf	(is_deadzone@deadzoneLow)^080h,w
  3835  0108  0257               u4095:
  3836  0109                     
  3837                           	skipnc
  3838  0109  1803               	goto	u4091
  3839  010A  290C               	goto	u4090
  3840  010B  290D               u4091:
  3841  010C                     	goto	l3074
  3842  010C  2922               u4090:
  3843  010D                     	
  3844                           l3070:	
  3845  010D                     	bsf	status, 5	;RP0=1, select bank1
  3846  010D  1683               	bcf	status, 6	;RP1=0, select bank1
  3847  010E  1303               	movf	(is_deadzone@adcResult+1)^080h,w
  3848  010F  0854               	xorlw	80h
  3849  0110  3A80               	movwf	(??_is_deadzone+0)^080h+0
  3850  0111  00D5               	movf	(is_deadzone@deadzoneHigh+1)^080h,w
  3851  0112  085A               	xorlw	80h
  3852  0113  3A80               	subwf	(??_is_deadzone+0)^080h+0,w
  3853  0114  0255               	skipz
  3854  0115  1D03               	goto	u4105
  3855  0116  2919               	movf	(is_deadzone@deadzoneHigh)^080h,w
  3856  0117  0859               	subwf	(is_deadzone@adcResult)^080h,w
  3857  0118  0253               u4105:
  3858  0119                     
  3859                           	skipnc
  3860  0119  1803               	goto	u4101
  3861  011A  291C               	goto	u4100
  3862  011B  291D               u4101:
  3863  011C                     	goto	l3074
  3864  011C  2922               u4100:
  3865  011D                     	
  3866                           l3072:	
  3867  011D                     	bsf	status, 5	;RP0=1, select bank1
  3868  011D  1683               	bcf	status, 6	;RP1=0, select bank1
  3869  011E  1303               	clrf	(_is_deadzone$899)^080h
  3870  011F  01DB               	incf	(_is_deadzone$899)^080h,f
  3871  0120  0ADB               	goto	l3074
  3872  0121  2922               	
  3873                           l335:	
  3874  0122                     	
  3875                           l3074:	
  3876  0122                     	bsf	status, 5	;RP0=1, select bank1
  3877  0122  1683               	bcf	status, 6	;RP1=0, select bank1
  3878  0123  1303               	movf	(_is_deadzone$899)^080h,w
  3879  0124  085B               	movwf	(??_is_deadzone+0)^080h+0
  3880  0125  00D5               	clrf	(??_is_deadzone+0)^080h+0+1
  3881  0126  01D6               	movf	0+(??_is_deadzone+0)^080h+0,w
  3882  0127  0855               	movwf	(?_is_deadzone)^080h
  3883  0128  00D1               	movf	1+(??_is_deadzone+0)^080h+0,w
  3884  0129  0856               	movwf	(?_is_deadzone+1)^080h
  3885  012A  00D2               	goto	l336
  3886  012B  292C               	
  3887                           l3076:	
  3888  012C                     	line	63
  3889                           	
  3890                           l336:	
  3891  012C                     	return
  3892  012C  0008               	opt stack 0
  3893                           GLOBAL	__end_of_is_deadzone
  3894                           	__end_of_is_deadzone:
  3895  012D                     	signat	_is_deadzone,8314
  3896                           	global	___xxtofl
  3897                           
  3898 ;; *************** function ___xxtofl *****************
  3899 ;; Defined at:
  3900 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  sign            1    wreg     unsigned char 
  3903 ;;  val             4    0[BANK1 ] long 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  sign            1    8[BANK1 ] unsigned char 
  3906 ;;  arg             4   10[BANK1 ] unsigned long 
  3907 ;;  exp             1    9[BANK1 ] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  4    0[BANK1 ] unsigned char 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3917 ;;      Params:         0       0       4       0       0
  3918 ;;      Locals:         0       0       6       0       0
  3919 ;;      Temps:          0       0       4       0       0
  3920 ;;      Totals:         0       0      14       0       0
  3921 ;;Total ram usage:       14 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; Hardware stack levels required when called:    5
  3924 ;; This function calls:
  3925 ;;		Nothing
  3926 ;; This function is called by:
  3927 ;;		_is_deadzone
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3931                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  3932                           	line	10
  3933                           global __ptext5
  3934                           __ptext5:	;psect for function ___xxtofl
  3935  0E76                     psect	text5
  3936                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  3937                           	line	10
  3938                           	global	__size_of___xxtofl
  3939                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  3940  00C4                     	
  3941                           ___xxtofl:	
  3942  0E76                     ;incstack = 0
  3943 ;; hardware stack exceeded
  3944                           	opt	stack 0
  3945                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3946                           ;___xxtofl@sign stored from wreg
  3947                           	bsf	status, 5	;RP0=1, select bank1
  3948  0E76  1683               	bcf	status, 6	;RP1=0, select bank1
  3949  0E77  1303               	movwf	(___xxtofl@sign)^080h
  3950  0E78  00A8               	line	15
  3951                           	
  3952                           l2658:	
  3953  0E79                     	movf	((___xxtofl@sign)^080h),w
  3954  0E79  0828               	btfsc	status,2
  3955  0E7A  1903               	goto	u3121
  3956  0E7B  2E7D               	goto	u3120
  3957  0E7C  2E7E               u3121:
  3958  0E7D                     	goto	l2664
  3959  0E7D  2E92               u3120:
  3960  0E7E                     	
  3961                           l2660:	
  3962  0E7E                     	btfss	(___xxtofl@val+3)^080h,7
  3963  0E7E  1FA3               	goto	u3131
  3964  0E7F  2E81               	goto	u3130
  3965  0E80  2E82               u3131:
  3966  0E81                     	goto	l2664
  3967  0E81  2E92               u3130:
  3968  0E82                     	line	16
  3969                           	
  3970                           l2662:	
  3971  0E82                     	comf	(___xxtofl@val)^080h+0,w
  3972  0E82  0920               	movwf	(___xxtofl@arg)^080h
  3973  0E83  00AA               	comf	(___xxtofl@val)^080h+1,w
  3974  0E84  0921               	movwf	(___xxtofl@arg+1)^080h
  3975  0E85  00AB               	comf	(___xxtofl@val)^080h+2,w
  3976  0E86  0922               	movwf	(___xxtofl@arg+2)^080h
  3977  0E87  00AC               	comf	(___xxtofl@val)^080h+3,w
  3978  0E88  0923               	movwf	(___xxtofl@arg+3)^080h
  3979  0E89  00AD               	incf	(___xxtofl@arg)^080h,f
  3980  0E8A  0AAA               	skipnz
  3981  0E8B  1903               	incf	(___xxtofl@arg+1)^080h,f
  3982  0E8C  0AAB               	skipnz
  3983  0E8D  1903               	incf	(___xxtofl@arg+2)^080h,f
  3984  0E8E  0AAC               	skipnz
  3985  0E8F  1903               	incf	(___xxtofl@arg+3)^080h,f
  3986  0E90  0AAD               	line	17
  3987                           	goto	l911
  3988  0E91  2E9A               	line	18
  3989                           	
  3990                           l910:	
  3991  0E92                     	line	19
  3992                           	
  3993                           l2664:	
  3994  0E92                     	movf	(___xxtofl@val+3)^080h,w
  3995  0E92  0823               	movwf	(___xxtofl@arg+3)^080h
  3996  0E93  00AD               	movf	(___xxtofl@val+2)^080h,w
  3997  0E94  0822               	movwf	(___xxtofl@arg+2)^080h
  3998  0E95  00AC               	movf	(___xxtofl@val+1)^080h,w
  3999  0E96  0821               	movwf	(___xxtofl@arg+1)^080h
  4000  0E97  00AB               	movf	(___xxtofl@val)^080h,w
  4001  0E98  0820               	movwf	(___xxtofl@arg)^080h
  4002  0E99  00AA               
  4003                           	line	20
  4004                           	
  4005                           l911:	
  4006  0E9A                     	line	21
  4007                           	movf	(___xxtofl@val+3)^080h,w
  4008  0E9A  0823               	iorwf	(___xxtofl@val+2)^080h,w
  4009  0E9B  0422               	iorwf	(___xxtofl@val+1)^080h,w
  4010  0E9C  0421               	iorwf	(___xxtofl@val)^080h,w
  4011  0E9D  0420               	skipz
  4012  0E9E  1D03               	goto	u3141
  4013  0E9F  2EA1               	goto	u3140
  4014  0EA0  2EA2               u3141:
  4015  0EA1                     	goto	l2670
  4016  0EA1  2EAC               u3140:
  4017  0EA2                     	line	22
  4018                           	
  4019                           l2666:	
  4020  0EA2                     	movlw	0x0
  4021  0EA2  3000               	movwf	(?___xxtofl+3)^080h
  4022  0EA3  00A3               	movlw	0x0
  4023  0EA4  3000               	movwf	(?___xxtofl+2)^080h
  4024  0EA5  00A2               	movlw	0x0
  4025  0EA6  3000               	movwf	(?___xxtofl+1)^080h
  4026  0EA7  00A1               	movlw	0x0
  4027  0EA8  3000               	movwf	(?___xxtofl)^080h
  4028  0EA9  00A0               
  4029                           	goto	l913
  4030  0EAA  2F39               	
  4031                           l2668:	
  4032  0EAB                     	goto	l913
  4033  0EAB  2F39               	
  4034                           l912:	
  4035  0EAC                     	line	23
  4036                           	
  4037                           l2670:	
  4038  0EAC                     	movlw	low(096h)
  4039  0EAC  3096               	movwf	(??___xxtofl+0)^080h+0
  4040  0EAD  00A4               	movf	(??___xxtofl+0)^080h+0,w
  4041  0EAE  0824               	movwf	(___xxtofl@exp)^080h
  4042  0EAF  00A9               	line	24
  4043                           	goto	l2674
  4044  0EB0  2EBF               	
  4045                           l915:	
  4046  0EB1                     	line	25
  4047                           	
  4048                           l2672:	
  4049  0EB1                     	movlw	low(01h)
  4050  0EB1  3001               	movwf	(??___xxtofl+0)^080h+0
  4051  0EB2  00A4               	movf	(??___xxtofl+0)^080h+0,w
  4052  0EB3  0824               	addwf	(___xxtofl@exp)^080h,f
  4053  0EB4  07A9               	line	26
  4054                           	movlw	01h
  4055  0EB5  3001               u3155:
  4056  0EB6                     	clrc
  4057  0EB6  1003               	rrf	(___xxtofl@arg+3)^080h,f
  4058  0EB7  0CAD               	rrf	(___xxtofl@arg+2)^080h,f
  4059  0EB8  0CAC               	rrf	(___xxtofl@arg+1)^080h,f
  4060  0EB9  0CAB               	rrf	(___xxtofl@arg)^080h,f
  4061  0EBA  0CAA               	addlw	-1
  4062  0EBB  3EFF               	skipz
  4063  0EBC  1D03               	goto	u3155
  4064  0EBD  2EB6               
  4065                           	goto	l2674
  4066  0EBE  2EBF               	line	27
  4067                           	
  4068                           l914:	
  4069  0EBF                     	line	24
  4070                           	
  4071                           l2674:	
  4072  0EBF                     	movlw	high highword(0FE000000h)
  4073  0EBF  30FE               	andwf	(___xxtofl@arg+3)^080h,w
  4074  0EC0  052D               	btfss	status,2
  4075  0EC1  1D03               	goto	u3161
  4076  0EC2  2EC4               	goto	u3160
  4077  0EC3  2EC5               u3161:
  4078  0EC4                     	goto	l2672
  4079  0EC4  2EB1               u3160:
  4080  0EC5                     	goto	l917
  4081  0EC5  2EE2               	
  4082                           l916:	
  4083  0EC6                     	line	28
  4084                           	goto	l917
  4085  0EC6  2EE2               	
  4086                           l918:	
  4087  0EC7                     	line	29
  4088                           	
  4089                           l2676:	
  4090  0EC7                     	movlw	low(01h)
  4091  0EC7  3001               	movwf	(??___xxtofl+0)^080h+0
  4092  0EC8  00A4               	movf	(??___xxtofl+0)^080h+0,w
  4093  0EC9  0824               	addwf	(___xxtofl@exp)^080h,f
  4094  0ECA  07A9               	line	30
  4095                           	
  4096                           l2678:	
  4097  0ECB                     	movlw	01h
  4098  0ECB  3001               	addwf	(___xxtofl@arg)^080h,f
  4099  0ECC  07AA               	movlw	0
  4100  0ECD  3000               	skipnc
  4101  0ECE  1803               movlw 1
  4102  0ECF  3001               	addwf	(___xxtofl@arg+1)^080h,f
  4103  0ED0  07AB               	movlw	0
  4104  0ED1  3000               	skipnc
  4105  0ED2  1803               movlw 1
  4106  0ED3  3001               	addwf	(___xxtofl@arg+2)^080h,f
  4107  0ED4  07AC               	movlw	0
  4108  0ED5  3000               	skipnc
  4109  0ED6  1803               movlw 1
  4110  0ED7  3001               	addwf	(___xxtofl@arg+3)^080h,f
  4111  0ED8  07AD               	line	31
  4112                           	
  4113                           l2680:	
  4114  0ED9                     	movlw	01h
  4115  0ED9  3001               u3175:
  4116  0EDA                     	clrc
  4117  0EDA  1003               	rrf	(___xxtofl@arg+3)^080h,f
  4118  0EDB  0CAD               	rrf	(___xxtofl@arg+2)^080h,f
  4119  0EDC  0CAC               	rrf	(___xxtofl@arg+1)^080h,f
  4120  0EDD  0CAB               	rrf	(___xxtofl@arg)^080h,f
  4121  0EDE  0CAA               	addlw	-1
  4122  0EDF  3EFF               	skipz
  4123  0EE0  1D03               	goto	u3175
  4124  0EE1  2EDA               
  4125                           	line	32
  4126                           	
  4127                           l917:	
  4128  0EE2                     	line	28
  4129                           	movlw	high highword(0FF000000h)
  4130  0EE2  30FF               	andwf	(___xxtofl@arg+3)^080h,w
  4131  0EE3  052D               	btfss	status,2
  4132  0EE4  1D03               	goto	u3181
  4133  0EE5  2EE7               	goto	u3180
  4134  0EE6  2EE8               u3181:
  4135  0EE7                     	goto	l2676
  4136  0EE7  2EC7               u3180:
  4137  0EE8                     	goto	l2684
  4138  0EE8  2EF6               	
  4139                           l919:	
  4140  0EE9                     	line	33
  4141                           	goto	l2684
  4142  0EE9  2EF6               	
  4143                           l921:	
  4144  0EEA                     	line	34
  4145                           	
  4146                           l2682:	
  4147  0EEA                     	movlw	01h
  4148  0EEA  3001               	subwf	(___xxtofl@exp)^080h,f
  4149  0EEB  02A9               	line	35
  4150                           	movlw	01h
  4151  0EEC  3001               	movwf	(??___xxtofl+0)^080h+0
  4152  0EED  00A4               u3195:
  4153  0EEE                     	clrc
  4154  0EEE  1003               	rlf	(___xxtofl@arg)^080h,f
  4155  0EEF  0DAA               	rlf	(___xxtofl@arg+1)^080h,f
  4156  0EF0  0DAB               	rlf	(___xxtofl@arg+2)^080h,f
  4157  0EF1  0DAC               	rlf	(___xxtofl@arg+3)^080h,f
  4158  0EF2  0DAD               	decfsz	(??___xxtofl+0)^080h+0
  4159  0EF3  0BA4               	goto	u3195
  4160  0EF4  2EEE               	goto	l2684
  4161  0EF5  2EF6               	line	36
  4162                           	
  4163                           l920:	
  4164  0EF6                     	line	33
  4165                           	
  4166                           l2684:	
  4167  0EF6                     	btfsc	(___xxtofl@arg+2)^080h,(23)&7
  4168  0EF6  1BAC               	goto	u3201
  4169  0EF7  2EF9               	goto	u3200
  4170  0EF8  2EFA               u3201:
  4171  0EF9                     	goto	l924
  4172  0EF9  2F01               u3200:
  4173  0EFA                     	
  4174                           l2686:	
  4175  0EFA                     	movlw	low(02h)
  4176  0EFA  3002               	subwf	(___xxtofl@exp)^080h,w
  4177  0EFB  0229               	skipnc
  4178  0EFC  1803               	goto	u3211
  4179  0EFD  2EFF               	goto	u3210
  4180  0EFE  2F00               u3211:
  4181  0EFF                     	goto	l2682
  4182  0EFF  2EEA               u3210:
  4183  0F00                     	goto	l924
  4184  0F00  2F01               	
  4185                           l923:	
  4186  0F01                     	
  4187                           l924:	
  4188  0F01                     	line	37
  4189                           	btfsc	(___xxtofl@exp)^080h,(0)&7
  4190  0F01  1829               	goto	u3221
  4191  0F02  2F04               	goto	u3220
  4192  0F03  2F05               u3221:
  4193  0F04                     	goto	l925
  4194  0F04  2F0D               u3220:
  4195  0F05                     	line	38
  4196                           	
  4197                           l2688:	
  4198  0F05                     	movlw	0FFh
  4199  0F05  30FF               	andwf	(___xxtofl@arg)^080h,f
  4200  0F06  05AA               	movlw	0FFh
  4201  0F07  30FF               	andwf	(___xxtofl@arg+1)^080h,f
  4202  0F08  05AB               	movlw	07Fh
  4203  0F09  307F               	andwf	(___xxtofl@arg+2)^080h,f
  4204  0F0A  05AC               	movlw	0FFh
  4205  0F0B  30FF               	andwf	(___xxtofl@arg+3)^080h,f
  4206  0F0C  05AD               	
  4207                           l925:	
  4208  0F0D                     	line	39
  4209                           	clrc
  4210  0F0D  1003               	rrf	(___xxtofl@exp)^080h,f
  4211  0F0E  0CA9               
  4212                           	line	40
  4213                           	
  4214                           l2690:	
  4215  0F0F                     	movf	(___xxtofl@exp)^080h,w
  4216  0F0F  0829               	movwf	(??___xxtofl+0)^080h+0
  4217  0F10  00A4               	clrf	(??___xxtofl+0)^080h+0+1
  4218  0F11  01A5               	clrf	(??___xxtofl+0)^080h+0+2
  4219  0F12  01A6               	clrf	(??___xxtofl+0)^080h+0+3
  4220  0F13  01A7               	movlw	018h
  4221  0F14  3018               u3235:
  4222  0F15                     	clrc
  4223  0F15  1003               	rlf	(??___xxtofl+0)^080h+0,f
  4224  0F16  0DA4               	rlf	(??___xxtofl+0)^080h+1,f
  4225  0F17  0DA5               	rlf	(??___xxtofl+0)^080h+2,f
  4226  0F18  0DA6               	rlf	(??___xxtofl+0)^080h+3,f
  4227  0F19  0DA7               u3230:
  4228  0F1A                     	addlw	-1
  4229  0F1A  3EFF               	skipz
  4230  0F1B  1D03               	goto	u3235
  4231  0F1C  2F15               	movf	0+(??___xxtofl+0)^080h+0,w
  4232  0F1D  0824               	iorwf	(___xxtofl@arg)^080h,f
  4233  0F1E  04AA               	movf	1+(??___xxtofl+0)^080h+0,w
  4234  0F1F  0825               	iorwf	(___xxtofl@arg+1)^080h,f
  4235  0F20  04AB               	movf	2+(??___xxtofl+0)^080h+0,w
  4236  0F21  0826               	iorwf	(___xxtofl@arg+2)^080h,f
  4237  0F22  04AC               	movf	3+(??___xxtofl+0)^080h+0,w
  4238  0F23  0827               	iorwf	(___xxtofl@arg+3)^080h,f
  4239  0F24  04AD               	line	41
  4240                           	
  4241                           l2692:	
  4242  0F25                     	movf	((___xxtofl@sign)^080h),w
  4243  0F25  0828               	btfsc	status,2
  4244  0F26  1903               	goto	u3241
  4245  0F27  2F29               	goto	u3240
  4246  0F28  2F2A               u3241:
  4247  0F29                     	goto	l2698
  4248  0F29  2F30               u3240:
  4249  0F2A                     	
  4250                           l2694:	
  4251  0F2A                     	btfss	(___xxtofl@val+3)^080h,7
  4252  0F2A  1FA3               	goto	u3251
  4253  0F2B  2F2D               	goto	u3250
  4254  0F2C  2F2E               u3251:
  4255  0F2D                     	goto	l2698
  4256  0F2D  2F30               u3250:
  4257  0F2E                     	line	42
  4258                           	
  4259                           l2696:	
  4260  0F2E                     	bsf	(___xxtofl@arg)^080h+(31/8),(31)&7
  4261  0F2E  17AD               	goto	l2698
  4262  0F2F  2F30               	
  4263                           l926:	
  4264  0F30                     	line	43
  4265                           	
  4266                           l2698:	
  4267  0F30                     	movf	(___xxtofl@arg+3)^080h,w
  4268  0F30  082D               	movwf	(?___xxtofl+3)^080h
  4269  0F31  00A3               	movf	(___xxtofl@arg+2)^080h,w
  4270  0F32  082C               	movwf	(?___xxtofl+2)^080h
  4271  0F33  00A2               	movf	(___xxtofl@arg+1)^080h,w
  4272  0F34  082B               	movwf	(?___xxtofl+1)^080h
  4273  0F35  00A1               	movf	(___xxtofl@arg)^080h,w
  4274  0F36  082A               	movwf	(?___xxtofl)^080h
  4275  0F37  00A0               
  4276                           	goto	l913
  4277  0F38  2F39               	
  4278                           l2700:	
  4279  0F39                     	line	44
  4280                           	
  4281                           l913:	
  4282  0F39                     	return
  4283  0F39  0008               	opt stack 0
  4284                           GLOBAL	__end_of___xxtofl
  4285                           	__end_of___xxtofl:
  4286  0F3A                     	signat	___xxtofl,8316
  4287                           	global	___fltol
  4288                           
  4289 ;; *************** function ___fltol *****************
  4290 ;; Defined at:
  4291 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  f1              4   38[BANK1 ] unsigned char 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  exp1            1   48[BANK1 ] unsigned char 
  4296 ;;  sign1           1   47[BANK1 ] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  4   38[BANK1 ] long 
  4299 ;; Registers used:
  4300 ;;		wreg, status,2, status,0
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4306 ;;      Params:         0       0       4       0       0
  4307 ;;      Locals:         0       0       2       0       0
  4308 ;;      Temps:          0       0       5       0       0
  4309 ;;      Totals:         0       0      11       0       0
  4310 ;;Total ram usage:       11 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    5
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_is_deadzone
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  4320                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  4321                           	line	43
  4322                           global __ptext6
  4323                           __ptext6:	;psect for function ___fltol
  4324  0D16                     psect	text6
  4325                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  4326                           	line	43
  4327                           	global	__size_of___fltol
  4328                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4329  009C                     	
  4330                           ___fltol:	
  4331  0D16                     ;incstack = 0
  4332 ;; hardware stack exceeded
  4333                           	opt	stack 0
  4334                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4335                           	line	47
  4336                           	
  4337                           l2380:	
  4338  0D16                     	bsf	status, 5	;RP0=1, select bank1
  4339  0D16  1683               	bcf	status, 6	;RP1=0, select bank1
  4340  0D17  1303               	movf	(___fltol@f1)^080h,w
  4341  0D18  0846               	movwf	(??___fltol+0)^080h+0
  4342  0D19  00CA               	movf	(___fltol@f1+1)^080h,w
  4343  0D1A  0847               	movwf	((??___fltol+0)^080h+0+1)
  4344  0D1B  00CB               	movf	(___fltol@f1+2)^080h,w
  4345  0D1C  0848               	movwf	((??___fltol+0)^080h+0+2)
  4346  0D1D  00CC               	movf	(___fltol@f1+3)^080h,w
  4347  0D1E  0849               	movwf	((??___fltol+0)^080h+0+3)
  4348  0D1F  00CD               	clrc
  4349  0D20  1003               	rlf	(??___fltol+0)^080h+2,w
  4350  0D21  0D4C               	rlf	(??___fltol+0)^080h+3,w
  4351  0D22  0D4D               	movwf	(??___fltol+4)^080h+0
  4352  0D23  00CE               	movf	(??___fltol+4)^080h+0,w
  4353  0D24  084E               	movwf	(___fltol@exp1)^080h
  4354  0D25  00D0               	movf	(((___fltol@exp1)^080h)),w
  4355  0D26  0850               	btfss	status,2
  4356  0D27  1D03               	goto	u2431
  4357  0D28  2D2A               	goto	u2430
  4358  0D29  2D2B               u2431:
  4359  0D2A                     	goto	l2386
  4360  0D2A  2D35               u2430:
  4361  0D2B                     	line	48
  4362                           	
  4363                           l2382:	
  4364  0D2B                     	movlw	high highword(0)
  4365  0D2B  3000               	movwf	(?___fltol+3)^080h
  4366  0D2C  00C9               	movlw	low highword(0)
  4367  0D2D  3000               	movwf	(?___fltol+2)^080h
  4368  0D2E  00C8               	movlw	high(0)
  4369  0D2F  3000               	movwf	(?___fltol+1)^080h
  4370  0D30  00C7               	movlw	low(0)
  4371  0D31  3000               	movwf	(?___fltol)^080h
  4372  0D32  00C6               
  4373                           	goto	l689
  4374  0D33  2DB1               	
  4375                           l2384:	
  4376  0D34                     	goto	l689
  4377  0D34  2DB1               	
  4378                           l688:	
  4379  0D35                     	line	49
  4380                           	
  4381                           l2386:	
  4382  0D35                     	movf	(___fltol@f1)^080h,w
  4383  0D35  0846               	movwf	(??___fltol+0)^080h+0
  4384  0D36  00CA               	movf	(___fltol@f1+1)^080h,w
  4385  0D37  0847               	movwf	((??___fltol+0)^080h+0+1)
  4386  0D38  00CB               	movf	(___fltol@f1+2)^080h,w
  4387  0D39  0848               	movwf	((??___fltol+0)^080h+0+2)
  4388  0D3A  00CC               	movf	(___fltol@f1+3)^080h,w
  4389  0D3B  0849               	movwf	((??___fltol+0)^080h+0+3)
  4390  0D3C  00CD               	movlw	01Fh
  4391  0D3D  301F               u2445:
  4392  0D3E                     	clrc
  4393  0D3E  1003               	rrf	(??___fltol+0)^080h+3,f
  4394  0D3F  0CCD               	rrf	(??___fltol+0)^080h+2,f
  4395  0D40  0CCC               	rrf	(??___fltol+0)^080h+1,f
  4396  0D41  0CCB               	rrf	(??___fltol+0)^080h+0,f
  4397  0D42  0CCA               u2440:
  4398  0D43                     	addlw	-1
  4399  0D43  3EFF               	skipz
  4400  0D44  1D03               	goto	u2445
  4401  0D45  2D3E               	movf	0+(??___fltol+0)^080h+0,w
  4402  0D46  084A               	movwf	(??___fltol+4)^080h+0
  4403  0D47  00CE               	movf	(??___fltol+4)^080h+0,w
  4404  0D48  084E               	movwf	(___fltol@sign1)^080h
  4405  0D49  00CF               	line	50
  4406                           	
  4407                           l2388:	
  4408  0D4A                     	bsf	(___fltol@f1)^080h+(23/8),(23)&7
  4409  0D4A  17C8               	line	51
  4410                           	
  4411                           l2390:	
  4412  0D4B                     	movlw	0FFh
  4413  0D4B  30FF               	andwf	(___fltol@f1)^080h,f
  4414  0D4C  05C6               	movlw	0FFh
  4415  0D4D  30FF               	andwf	(___fltol@f1+1)^080h,f
  4416  0D4E  05C7               	movlw	0FFh
  4417  0D4F  30FF               	andwf	(___fltol@f1+2)^080h,f
  4418  0D50  05C8               	movlw	0
  4419  0D51  3000               	andwf	(___fltol@f1+3)^080h,f
  4420  0D52  05C9               	line	52
  4421                           	
  4422                           l2392:	
  4423  0D53                     	movlw	096h
  4424  0D53  3096               	subwf	(___fltol@exp1)^080h,f
  4425  0D54  02D0               	line	53
  4426                           	
  4427                           l2394:	
  4428  0D55                     	btfss	(___fltol@exp1)^080h,7
  4429  0D55  1FD0               	goto	u2451
  4430  0D56  2D58               	goto	u2450
  4431  0D57  2D59               u2451:
  4432  0D58                     	goto	l2404
  4433  0D58  2D7E               u2450:
  4434  0D59                     	line	54
  4435                           	
  4436                           l2396:	
  4437  0D59                     	movf	(___fltol@exp1)^080h,w
  4438  0D59  0850               	xorlw	80h
  4439  0D5A  3A80               	addlw	-((-23)^80h)
  4440  0D5B  3E97               	skipnc
  4441  0D5C  1803               	goto	u2461
  4442  0D5D  2D5F               	goto	u2460
  4443  0D5E  2D60               u2461:
  4444  0D5F                     	goto	l2402
  4445  0D5F  2D6B               u2460:
  4446  0D60                     	line	55
  4447                           	
  4448                           l2398:	
  4449  0D60                     	movlw	high highword(0)
  4450  0D60  3000               	movwf	(?___fltol+3)^080h
  4451  0D61  00C9               	movlw	low highword(0)
  4452  0D62  3000               	movwf	(?___fltol+2)^080h
  4453  0D63  00C8               	movlw	high(0)
  4454  0D64  3000               	movwf	(?___fltol+1)^080h
  4455  0D65  00C7               	movlw	low(0)
  4456  0D66  3000               	movwf	(?___fltol)^080h
  4457  0D67  00C6               
  4458                           	goto	l689
  4459  0D68  2DB1               	
  4460                           l2400:	
  4461  0D69                     	goto	l689
  4462  0D69  2DB1               	
  4463                           l691:	
  4464  0D6A                     	goto	l2402
  4465  0D6A  2D6B               	line	56
  4466                           	
  4467                           l692:	
  4468  0D6B                     	line	57
  4469                           	
  4470                           l2402:	
  4471  0D6B                     	movlw	01h
  4472  0D6B  3001               u2475:
  4473  0D6C                     	clrc
  4474  0D6C  1003               	rrf	(___fltol@f1+3)^080h,f
  4475  0D6D  0CC9               	rrf	(___fltol@f1+2)^080h,f
  4476  0D6E  0CC8               	rrf	(___fltol@f1+1)^080h,f
  4477  0D6F  0CC7               	rrf	(___fltol@f1)^080h,f
  4478  0D70  0CC6               	addlw	-1
  4479  0D71  3EFF               	skipz
  4480  0D72  1D03               	goto	u2475
  4481  0D73  2D6C               
  4482                           	line	58
  4483                           	movlw	low(01h)
  4484  0D74  3001               	movwf	(??___fltol+0)^080h+0
  4485  0D75  00CA               	movf	(??___fltol+0)^080h+0,w
  4486  0D76  084A               	addwf	(___fltol@exp1)^080h,f
  4487  0D77  07D0               	btfss	status,2
  4488  0D78  1D03               	goto	u2481
  4489  0D79  2D7B               	goto	u2480
  4490  0D7A  2D7C               u2481:
  4491  0D7B                     	goto	l2402
  4492  0D7B  2D6B               u2480:
  4493  0D7C                     	goto	l2412
  4494  0D7C  2DA1               	
  4495                           l693:	
  4496  0D7D                     	line	59
  4497                           	goto	l2412
  4498  0D7D  2DA1               	
  4499                           l690:	
  4500  0D7E                     	line	60
  4501                           	
  4502                           l2404:	
  4503  0D7E                     	movlw	low(020h)
  4504  0D7E  3020               	subwf	(___fltol@exp1)^080h,w
  4505  0D7F  0250               	skipc
  4506  0D80  1C03               	goto	u2491
  4507  0D81  2D83               	goto	u2490
  4508  0D82  2D84               u2491:
  4509  0D83                     	goto	l696
  4510  0D83  2D9A               u2490:
  4511  0D84                     	line	61
  4512                           	
  4513                           l2406:	
  4514  0D84                     	movlw	high highword(0)
  4515  0D84  3000               	movwf	(?___fltol+3)^080h
  4516  0D85  00C9               	movlw	low highword(0)
  4517  0D86  3000               	movwf	(?___fltol+2)^080h
  4518  0D87  00C8               	movlw	high(0)
  4519  0D88  3000               	movwf	(?___fltol+1)^080h
  4520  0D89  00C7               	movlw	low(0)
  4521  0D8A  3000               	movwf	(?___fltol)^080h
  4522  0D8B  00C6               
  4523                           	goto	l689
  4524  0D8C  2DB1               	
  4525                           l2408:	
  4526  0D8D                     	goto	l689
  4527  0D8D  2DB1               	
  4528                           l695:	
  4529  0D8E                     	line	62
  4530                           	goto	l696
  4531  0D8E  2D9A               	
  4532                           l697:	
  4533  0D8F                     	line	63
  4534                           	
  4535                           l2410:	
  4536  0D8F                     	movlw	01h
  4537  0D8F  3001               	movwf	(??___fltol+0)^080h+0
  4538  0D90  00CA               u2505:
  4539  0D91                     	clrc
  4540  0D91  1003               	rlf	(___fltol@f1)^080h,f
  4541  0D92  0DC6               	rlf	(___fltol@f1+1)^080h,f
  4542  0D93  0DC7               	rlf	(___fltol@f1+2)^080h,f
  4543  0D94  0DC8               	rlf	(___fltol@f1+3)^080h,f
  4544  0D95  0DC9               	decfsz	(??___fltol+0)^080h+0
  4545  0D96  0BCA               	goto	u2505
  4546  0D97  2D91               	line	64
  4547                           	movlw	01h
  4548  0D98  3001               	subwf	(___fltol@exp1)^080h,f
  4549  0D99  02D0               	line	65
  4550                           	
  4551                           l696:	
  4552  0D9A                     	line	62
  4553                           	movf	((___fltol@exp1)^080h),w
  4554  0D9A  0850               	btfss	status,2
  4555  0D9B  1D03               	goto	u2511
  4556  0D9C  2D9E               	goto	u2510
  4557  0D9D  2D9F               u2511:
  4558  0D9E                     	goto	l2410
  4559  0D9E  2D8F               u2510:
  4560  0D9F                     	goto	l2412
  4561  0D9F  2DA1               	
  4562                           l698:	
  4563  0DA0                     	goto	l2412
  4564  0DA0  2DA1               	line	66
  4565                           	
  4566                           l694:	
  4567  0DA1                     	line	67
  4568                           	
  4569                           l2412:	
  4570  0DA1                     	movf	((___fltol@sign1)^080h),w
  4571  0DA1  084F               	btfsc	status,2
  4572  0DA2  1903               	goto	u2521
  4573  0DA3  2DA5               	goto	u2520
  4574  0DA4  2DA6               u2521:
  4575  0DA5                     	goto	l699
  4576  0DA5  2DB1               u2520:
  4577  0DA6                     	line	68
  4578                           	
  4579                           l2414:	
  4580  0DA6                     	comf	(___fltol@f1)^080h,f
  4581  0DA6  09C6               	comf	(___fltol@f1+1)^080h,f
  4582  0DA7  09C7               	comf	(___fltol@f1+2)^080h,f
  4583  0DA8  09C8               	comf	(___fltol@f1+3)^080h,f
  4584  0DA9  09C9               	incf	(___fltol@f1)^080h,f
  4585  0DAA  0AC6               	skipnz
  4586  0DAB  1903               	incf	(___fltol@f1+1)^080h,f
  4587  0DAC  0AC7               	skipnz
  4588  0DAD  1903               	incf	(___fltol@f1+2)^080h,f
  4589  0DAE  0AC8               	skipnz
  4590  0DAF  1903               	incf	(___fltol@f1+3)^080h,f
  4591  0DB0  0AC9               	
  4592                           l699:	
  4593  0DB1                     	line	69
  4594                           	line	70
  4595                           	
  4596                           l689:	
  4597  0DB1                     	return
  4598  0DB1  0008               	opt stack 0
  4599                           GLOBAL	__end_of___fltol
  4600                           	__end_of___fltol:
  4601  0DB2                     	signat	___fltol,4220
  4602                           	global	___fladd
  4603                           
  4604 ;; *************** function ___fladd *****************
  4605 ;; Defined at:
  4606 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  b               4   14[BANK1 ] long 
  4609 ;;  a               4   18[BANK1 ] long 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  grs             1   37[BANK1 ] unsigned char 
  4612 ;;  bexp            1   36[BANK1 ] unsigned char 
  4613 ;;  aexp            1   35[BANK1 ] unsigned char 
  4614 ;;  signs           1   34[BANK1 ] unsigned char 
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  4   14[BANK1 ] unsigned char 
  4617 ;; Registers used:
  4618 ;;		wreg, status,2, status,0, btemp+1
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4624 ;;      Params:         0       0       8       0       0
  4625 ;;      Locals:         0       0       4       0       0
  4626 ;;      Temps:          0       0      12       0       0
  4627 ;;      Totals:         0       0      24       0       0
  4628 ;;Total ram usage:       24 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:    5
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_is_deadzone
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  4638                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  4639                           	line	10
  4640                           global __ptext7
  4641                           __ptext7:	;psect for function ___fladd
  4642  0263                     psect	text7
  4643                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  4644                           	line	10
  4645                           	global	__size_of___fladd
  4646                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  4647  02BC                     	
  4648                           ___fladd:	
  4649  0263                     ;incstack = 0
  4650 ;; hardware stack exceeded
  4651                           	opt	stack 0
  4652                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4653                           	line	21
  4654                           	
  4655                           l2464:	
  4656  0263                     	bsf	status, 5	;RP0=1, select bank1
  4657  0263  1683               	bcf	status, 6	;RP1=0, select bank1
  4658  0264  1303               	movf	0+(___fladd@b)^080h+03h,w
  4659  0265  0831               	andlw	080h
  4660  0266  3980               	movwf	(??___fladd+0)^080h+0
  4661  0267  00B6               	movf	(??___fladd+0)^080h+0,w
  4662  0268  0836               	movwf	(___fladd@signs)^080h
  4663  0269  00C2               	line	22
  4664                           	
  4665                           l2466:	
  4666  026A                     	movf	0+(___fladd@b)^080h+03h,w
  4667  026A  0831               	movwf	(??___fladd+0)^080h+0
  4668  026B  00B6               	addwf	(??___fladd+0)^080h+0,w
  4669  026C  0736               	movwf	(??___fladd+1)^080h+0
  4670  026D  00B7               	movf	(??___fladd+1)^080h+0,w
  4671  026E  0837               	movwf	(___fladd@bexp)^080h
  4672  026F  00C4               	line	23
  4673                           	
  4674                           l2468:	
  4675  0270                     	btfss	0+(___fladd@b)^080h+02h,(7)&7
  4676  0270  1FB0               	goto	u2661
  4677  0271  2A73               	goto	u2660
  4678  0272  2A74               u2661:
  4679  0273                     	goto	l2472
  4680  0273  2A76               u2660:
  4681  0274                     	line	24
  4682                           	
  4683                           l2470:	
  4684  0274                     	bsf	(___fladd@bexp)^080h+(0/8),(0)&7
  4685  0274  1444               	goto	l2472
  4686  0275  2A76               	line	25
  4687                           	
  4688                           l788:	
  4689  0276                     	line	28
  4690                           	
  4691                           l2472:	
  4692  0276                     	movf	((___fladd@bexp)^080h),w
  4693  0276  0844               	btfsc	status,2
  4694  0277  1903               	goto	u2671
  4695  0278  2A7A               	goto	u2670
  4696  0279  2A7B               u2671:
  4697  027A                     	goto	l2482
  4698  027A  2A8C               u2670:
  4699  027B                     	line	30
  4700                           	
  4701                           l2474:	
  4702  027B                     		incf	((___fladd@bexp)^080h),w
  4703  027B  0A44               	btfss	status,2
  4704  027C  1D03               	goto	u2681
  4705  027D  2A7F               	goto	u2680
  4706  027E  2A80               u2681:
  4707  027F                     	goto	l2478
  4708  027F  2A89               u2680:
  4709  0280                     	line	32
  4710                           	
  4711                           l2476:	
  4712  0280                     	movlw	0x0
  4713  0280  3000               	movwf	(___fladd@b+3)^080h
  4714  0281  00B1               	movlw	0x0
  4715  0282  3000               	movwf	(___fladd@b+2)^080h
  4716  0283  00B0               	movlw	0x0
  4717  0284  3000               	movwf	(___fladd@b+1)^080h
  4718  0285  00AF               	movlw	0x0
  4719  0286  3000               	movwf	(___fladd@b)^080h
  4720  0287  00AE               
  4721                           	goto	l2478
  4722  0288  2A89               	line	33
  4723                           	
  4724                           l790:	
  4725  0289                     	line	35
  4726                           	
  4727                           l2478:	
  4728  0289                     	bsf	(___fladd@b)^080h+(23/8),(23)&7
  4729  0289  17B0               	line	37
  4730                           	
  4731                           l2480:	
  4732  028A                     	clrf	0+(___fladd@b)^080h+03h
  4733  028A  01B1               	line	38
  4734                           	goto	l2484
  4735  028B  2A95               	line	39
  4736                           	
  4737                           l789:	
  4738  028C                     	line	41
  4739                           	
  4740                           l2482:	
  4741  028C                     	movlw	0x0
  4742  028C  3000               	movwf	(___fladd@b+3)^080h
  4743  028D  00B1               	movlw	0x0
  4744  028E  3000               	movwf	(___fladd@b+2)^080h
  4745  028F  00B0               	movlw	0x0
  4746  0290  3000               	movwf	(___fladd@b+1)^080h
  4747  0291  00AF               	movlw	0x0
  4748  0292  3000               	movwf	(___fladd@b)^080h
  4749  0293  00AE               
  4750                           	goto	l2484
  4751  0294  2A95               	line	42
  4752                           	
  4753                           l791:	
  4754  0295                     	line	44
  4755                           	
  4756                           l2484:	
  4757  0295                     	movf	0+(___fladd@a)^080h+03h,w
  4758  0295  0835               	andlw	080h
  4759  0296  3980               	movwf	(??___fladd+0)^080h+0
  4760  0297  00B6               	movf	(??___fladd+0)^080h+0,w
  4761  0298  0836               	movwf	(___fladd@aexp)^080h
  4762  0299  00C3               	line	46
  4763                           	
  4764                           l2486:	
  4765  029A                     	movf	(___fladd@aexp)^080h,w
  4766  029A  0843               	xorwf	(___fladd@signs)^080h,w
  4767  029B  0642               	skipnz
  4768  029C  1903               	goto	u2691
  4769  029D  2A9F               	goto	u2690
  4770  029E  2AA0               u2691:
  4771  029F                     	goto	l2490
  4772  029F  2AA2               u2690:
  4773  02A0                     	line	47
  4774                           	
  4775                           l2488:	
  4776  02A0                     	bsf	(___fladd@signs)^080h+(6/8),(6)&7
  4777  02A0  1742               	goto	l2490
  4778  02A1  2AA2               	line	48
  4779                           	
  4780                           l792:	
  4781  02A2                     	line	49
  4782                           	
  4783                           l2490:	
  4784  02A2                     	movf	0+(___fladd@a)^080h+03h,w
  4785  02A2  0835               	movwf	(??___fladd+0)^080h+0
  4786  02A3  00B6               	addwf	(??___fladd+0)^080h+0,w
  4787  02A4  0736               	movwf	(??___fladd+1)^080h+0
  4788  02A5  00B7               	movf	(??___fladd+1)^080h+0,w
  4789  02A6  0837               	movwf	(___fladd@aexp)^080h
  4790  02A7  00C3               	line	50
  4791                           	
  4792                           l2492:	
  4793  02A8                     	btfss	0+(___fladd@a)^080h+02h,(7)&7
  4794  02A8  1FB4               	goto	u2701
  4795  02A9  2AAB               	goto	u2700
  4796  02AA  2AAC               u2701:
  4797  02AB                     	goto	l2496
  4798  02AB  2AAE               u2700:
  4799  02AC                     	line	51
  4800                           	
  4801                           l2494:	
  4802  02AC                     	bsf	(___fladd@aexp)^080h+(0/8),(0)&7
  4803  02AC  1443               	goto	l2496
  4804  02AD  2AAE               	line	52
  4805                           	
  4806                           l793:	
  4807  02AE                     	line	55
  4808                           	
  4809                           l2496:	
  4810  02AE                     	movf	((___fladd@aexp)^080h),w
  4811  02AE  0843               	btfsc	status,2
  4812  02AF  1903               	goto	u2711
  4813  02B0  2AB2               	goto	u2710
  4814  02B1  2AB3               u2711:
  4815  02B2                     	goto	l2506
  4816  02B2  2AC4               u2710:
  4817  02B3                     	line	57
  4818                           	
  4819                           l2498:	
  4820  02B3                     		incf	((___fladd@aexp)^080h),w
  4821  02B3  0A43               	btfss	status,2
  4822  02B4  1D03               	goto	u2721
  4823  02B5  2AB7               	goto	u2720
  4824  02B6  2AB8               u2721:
  4825  02B7                     	goto	l2502
  4826  02B7  2AC1               u2720:
  4827  02B8                     	line	59
  4828                           	
  4829                           l2500:	
  4830  02B8                     	movlw	0x0
  4831  02B8  3000               	movwf	(___fladd@a+3)^080h
  4832  02B9  00B5               	movlw	0x0
  4833  02BA  3000               	movwf	(___fladd@a+2)^080h
  4834  02BB  00B4               	movlw	0x0
  4835  02BC  3000               	movwf	(___fladd@a+1)^080h
  4836  02BD  00B3               	movlw	0x0
  4837  02BE  3000               	movwf	(___fladd@a)^080h
  4838  02BF  00B2               
  4839                           	goto	l2502
  4840  02C0  2AC1               	line	60
  4841                           	
  4842                           l795:	
  4843  02C1                     	line	62
  4844                           	
  4845                           l2502:	
  4846  02C1                     	bsf	(___fladd@a)^080h+(23/8),(23)&7
  4847  02C1  17B4               	line	64
  4848                           	
  4849                           l2504:	
  4850  02C2                     	clrf	0+(___fladd@a)^080h+03h
  4851  02C2  01B5               	line	65
  4852                           	goto	l796
  4853  02C3  2ACC               	line	66
  4854                           	
  4855                           l794:	
  4856  02C4                     	line	68
  4857                           	
  4858                           l2506:	
  4859  02C4                     	movlw	0x0
  4860  02C4  3000               	movwf	(___fladd@a+3)^080h
  4861  02C5  00B5               	movlw	0x0
  4862  02C6  3000               	movwf	(___fladd@a+2)^080h
  4863  02C7  00B4               	movlw	0x0
  4864  02C8  3000               	movwf	(___fladd@a+1)^080h
  4865  02C9  00B3               	movlw	0x0
  4866  02CA  3000               	movwf	(___fladd@a)^080h
  4867  02CB  00B2               
  4868                           	line	69
  4869                           	
  4870                           l796:	
  4871  02CC                     	line	75
  4872                           	movf	(___fladd@bexp)^080h,w
  4873  02CC  0844               	subwf	(___fladd@aexp)^080h,w
  4874  02CD  0243               	skipnc
  4875  02CE  1803               	goto	u2731
  4876  02CF  2AD1               	goto	u2730
  4877  02D0  2AD2               u2731:
  4878  02D1                     	goto	l2542
  4879  02D1  2B18               u2730:
  4880  02D2                     	line	77
  4881                           	
  4882                           l2508:	
  4883  02D2                     	btfss	(___fladd@signs)^080h,(6)&7
  4884  02D2  1F42               	goto	u2741
  4885  02D3  2AD5               	goto	u2740
  4886  02D4  2AD6               u2741:
  4887  02D5                     	goto	l2512
  4888  02D5  2ADB               u2740:
  4889  02D6                     	line	78
  4890                           	
  4891                           l2510:	
  4892  02D6                     	movlw	low(080h)
  4893  02D6  3080               	movwf	(??___fladd+0)^080h+0
  4894  02D7  00B6               	movf	(??___fladd+0)^080h+0,w
  4895  02D8  0836               	xorwf	(___fladd@signs)^080h,f
  4896  02D9  06C2               	goto	l2512
  4897  02DA  2ADB               	line	79
  4898                           	
  4899                           l798:	
  4900  02DB                     	line	81
  4901                           	
  4902                           l2512:	
  4903  02DB                     	movf	(___fladd@bexp)^080h,w
  4904  02DB  0844               	movwf	(??___fladd+0)^080h+0
  4905  02DC  00B6               	movf	(??___fladd+0)^080h+0,w
  4906  02DD  0836               	movwf	(___fladd@grs)^080h
  4907  02DE  00C5               	line	82
  4908                           	
  4909                           l2514:	
  4910  02DF                     	movf	(___fladd@aexp)^080h,w
  4911  02DF  0843               	movwf	(??___fladd+0)^080h+0
  4912  02E0  00B6               	movf	(??___fladd+0)^080h+0,w
  4913  02E1  0836               	movwf	(___fladd@bexp)^080h
  4914  02E2  00C4               	line	83
  4915                           	
  4916                           l2516:	
  4917  02E3                     	movf	(___fladd@grs)^080h,w
  4918  02E3  0845               	movwf	(??___fladd+0)^080h+0
  4919  02E4  00B6               	movf	(??___fladd+0)^080h+0,w
  4920  02E5  0836               	movwf	(___fladd@aexp)^080h
  4921  02E6  00C3               	line	84
  4922                           	
  4923                           l2518:	
  4924  02E7                     	movf	(___fladd@b)^080h,w
  4925  02E7  082E               	movwf	(??___fladd+0)^080h+0
  4926  02E8  00B6               	movf	(??___fladd+0)^080h+0,w
  4927  02E9  0836               	movwf	(___fladd@grs)^080h
  4928  02EA  00C5               	line	85
  4929                           	
  4930                           l2520:	
  4931  02EB                     	movf	(___fladd@a)^080h,w
  4932  02EB  0832               	movwf	(??___fladd+0)^080h+0
  4933  02EC  00B6               	movf	(??___fladd+0)^080h+0,w
  4934  02ED  0836               	movwf	(___fladd@b)^080h
  4935  02EE  00AE               	line	86
  4936                           	
  4937                           l2522:	
  4938  02EF                     	movf	(___fladd@grs)^080h,w
  4939  02EF  0845               	movwf	(??___fladd+0)^080h+0
  4940  02F0  00B6               	movf	(??___fladd+0)^080h+0,w
  4941  02F1  0836               	movwf	(___fladd@a)^080h
  4942  02F2  00B2               	line	87
  4943                           	
  4944                           l2524:	
  4945  02F3                     	movf	0+(___fladd@b)^080h+01h,w
  4946  02F3  082F               	movwf	(??___fladd+0)^080h+0
  4947  02F4  00B6               	movf	(??___fladd+0)^080h+0,w
  4948  02F5  0836               	movwf	(___fladd@grs)^080h
  4949  02F6  00C5               	line	88
  4950                           	
  4951                           l2526:	
  4952  02F7                     	movf	0+(___fladd@a)^080h+01h,w
  4953  02F7  0833               	movwf	(??___fladd+0)^080h+0
  4954  02F8  00B6               	movf	(??___fladd+0)^080h+0,w
  4955  02F9  0836               	movwf	0+(___fladd@b)^080h+01h
  4956  02FA  00AF               	line	89
  4957                           	
  4958                           l2528:	
  4959  02FB                     	movf	(___fladd@grs)^080h,w
  4960  02FB  0845               	movwf	(??___fladd+0)^080h+0
  4961  02FC  00B6               	movf	(??___fladd+0)^080h+0,w
  4962  02FD  0836               	movwf	0+(___fladd@a)^080h+01h
  4963  02FE  00B3               	line	90
  4964                           	
  4965                           l2530:	
  4966  02FF                     	movf	0+(___fladd@b)^080h+02h,w
  4967  02FF  0830               	movwf	(??___fladd+0)^080h+0
  4968  0300  00B6               	movf	(??___fladd+0)^080h+0,w
  4969  0301  0836               	movwf	(___fladd@grs)^080h
  4970  0302  00C5               	line	91
  4971                           	
  4972                           l2532:	
  4973  0303                     	movf	0+(___fladd@a)^080h+02h,w
  4974  0303  0834               	movwf	(??___fladd+0)^080h+0
  4975  0304  00B6               	movf	(??___fladd+0)^080h+0,w
  4976  0305  0836               	movwf	0+(___fladd@b)^080h+02h
  4977  0306  00B0               	line	92
  4978                           	
  4979                           l2534:	
  4980  0307                     	movf	(___fladd@grs)^080h,w
  4981  0307  0845               	movwf	(??___fladd+0)^080h+0
  4982  0308  00B6               	movf	(??___fladd+0)^080h+0,w
  4983  0309  0836               	movwf	0+(___fladd@a)^080h+02h
  4984  030A  00B4               	line	93
  4985                           	
  4986                           l2536:	
  4987  030B                     	movf	0+(___fladd@b)^080h+03h,w
  4988  030B  0831               	movwf	(??___fladd+0)^080h+0
  4989  030C  00B6               	movf	(??___fladd+0)^080h+0,w
  4990  030D  0836               	movwf	(___fladd@grs)^080h
  4991  030E  00C5               	line	94
  4992                           	
  4993                           l2538:	
  4994  030F                     	movf	0+(___fladd@a)^080h+03h,w
  4995  030F  0835               	movwf	(??___fladd+0)^080h+0
  4996  0310  00B6               	movf	(??___fladd+0)^080h+0,w
  4997  0311  0836               	movwf	0+(___fladd@b)^080h+03h
  4998  0312  00B1               	line	95
  4999                           	
  5000                           l2540:	
  5001  0313                     	movf	(___fladd@grs)^080h,w
  5002  0313  0845               	movwf	(??___fladd+0)^080h+0
  5003  0314  00B6               	movf	(??___fladd+0)^080h+0,w
  5004  0315  0836               	movwf	0+(___fladd@a)^080h+03h
  5005  0316  00B5               	goto	l2542
  5006  0317  2B18               	line	96
  5007                           	
  5008                           l797:	
  5009  0318                     	line	98
  5010                           	
  5011                           l2542:	
  5012  0318                     	clrf	(___fladd@grs)^080h
  5013  0318  01C5               	line	100
  5014                           	
  5015                           l2544:	
  5016  0319                     	movf	(___fladd@bexp)^080h,w
  5017  0319  0844               	movwf	(??___fladd+0)^080h+0
  5018  031A  00B6               	clrf	(??___fladd+0)^080h+0+1
  5019  031B  01B7               	comf	(??___fladd+0)^080h+0,f
  5020  031C  09B6               	comf	(??___fladd+0)^080h+1,f
  5021  031D  09B7               	incf	(??___fladd+0)^080h+0,f
  5022  031E  0AB6               	skipnz
  5023  031F  1903               	incf	(??___fladd+0)^080h+1,f
  5024  0320  0AB7               	movf	(___fladd@aexp)^080h,w
  5025  0321  0843               	addwf	0+(??___fladd+0)^080h+0,w
  5026  0322  0736               	movwf	(??___fladd+2)^080h+0
  5027  0323  00B8               	movf	1+(??___fladd+0)^080h+0,w
  5028  0324  0837               	skipnc
  5029  0325  1803               	incf	1+(??___fladd+0)^080h+0,w
  5030  0326  0A37               	movwf	((??___fladd+2)^080h+0)+1
  5031  0327  00B9               	movf	1+(??___fladd+2)^080h+0,w
  5032  0328  0839               	xorlw	80h
  5033  0329  3A80               	movwf	btemp+1
  5034  032A  00FF               	movlw	(0)^80h
  5035  032B  3080               	subwf	btemp+1,w
  5036  032C  027F               	skipz
  5037  032D  1D03               	goto	u2755
  5038  032E  2B31               	movlw	01Ah
  5039  032F  301A               	subwf	0+(??___fladd+2)^080h+0,w
  5040  0330  0238               u2755:
  5041  0331                     
  5042                           	skipc
  5043  0331  1C03               	goto	u2751
  5044  0332  2B34               	goto	u2750
  5045  0333  2B35               u2751:
  5046  0334                     	goto	l2560
  5047  0334  2B76               u2750:
  5048  0335                     	line	101
  5049                           	
  5050                           l2546:	
  5051  0335                     	bsf	status, 5	;RP0=1, select bank1
  5052  0335  1683               	bcf	status, 6	;RP1=0, select bank1
  5053  0336  1303               	movf	(___fladd@b+3)^080h,w
  5054  0337  0831               	iorwf	(___fladd@b+2)^080h,w
  5055  0338  0430               	iorwf	(___fladd@b+1)^080h,w
  5056  0339  042F               	iorwf	(___fladd@b)^080h,w
  5057  033A  042E               	skipz
  5058  033B  1D03               	goto	u2761
  5059  033C  2B3E               	goto	u2760
  5060  033D  2B40               u2761:
  5061  033E                     	movlw	1
  5062  033E  3001               	goto	u2770
  5063  033F  2B41               u2760:
  5064  0340                     	movlw	0
  5065  0340  3000               u2770:
  5066  0341                     	movwf	(??___fladd+0)^080h+0
  5067  0341  00B6               	movf	(??___fladd+0)^080h+0,w
  5068  0342  0836               	movwf	(___fladd@grs)^080h
  5069  0343  00C5               	line	102
  5070                           	movlw	high highword(0)
  5071  0344  3000               	movwf	(___fladd@b+3)^080h
  5072  0345  00B1               	movlw	low highword(0)
  5073  0346  3000               	movwf	(___fladd@b+2)^080h
  5074  0347  00B0               	movlw	high(0)
  5075  0348  3000               	movwf	(___fladd@b+1)^080h
  5076  0349  00AF               	movlw	low(0)
  5077  034A  3000               	movwf	(___fladd@b)^080h
  5078  034B  00AE               
  5079                           	line	103
  5080                           	movf	(___fladd@aexp)^080h,w
  5081  034C  0843               	movwf	(??___fladd+0)^080h+0
  5082  034D  00B6               	movf	(??___fladd+0)^080h+0,w
  5083  034E  0836               	movwf	(___fladd@bexp)^080h
  5084  034F  00C4               	line	104
  5085                           	goto	l800
  5086  0350  2B7F               	line	105
  5087                           	
  5088                           l799:	
  5089  0351                     	line	106
  5090                           	goto	l2560
  5091  0351  2B76               	
  5092                           l802:	
  5093  0352                     	line	109
  5094                           	btfss	(___fladd@grs)^080h,(0)&7
  5095  0352  1C45               	goto	u2781
  5096  0353  2B55               	goto	u2780
  5097  0354  2B56               u2781:
  5098  0355                     	goto	l2550
  5099  0355  2B5F               u2780:
  5100  0356                     	line	110
  5101                           	
  5102                           l2548:	
  5103  0356                     	movf	(___fladd@grs)^080h,w
  5104  0356  0845               	movwf	(??___fladd+0)^080h+0
  5105  0357  00B6               	clrc
  5106  0358  1003               	rrf	(??___fladd+0)^080h+0,w
  5107  0359  0C36               	iorlw	01h
  5108  035A  3801               	movwf	(??___fladd+1)^080h+0
  5109  035B  00B7               	movf	(??___fladd+1)^080h+0,w
  5110  035C  0837               	movwf	(___fladd@grs)^080h
  5111  035D  00C5               	line	111
  5112                           	goto	l2552
  5113  035E  2B62               	line	112
  5114                           	
  5115                           l803:	
  5116  035F                     	line	113
  5117                           	
  5118                           l2550:	
  5119  035F                     	clrc
  5120  035F  1003               	rrf	(___fladd@grs)^080h,f
  5121  0360  0CC5               
  5122                           	goto	l2552
  5123  0361  2B62               	line	114
  5124                           	
  5125                           l804:	
  5126  0362                     	line	115
  5127                           	
  5128                           l2552:	
  5129  0362                     	btfss	(___fladd@b)^080h,(0)&7
  5130  0362  1C2E               	goto	u2791
  5131  0363  2B65               	goto	u2790
  5132  0364  2B66               u2791:
  5133  0365                     	goto	l2556
  5134  0365  2B68               u2790:
  5135  0366                     	line	116
  5136                           	
  5137                           l2554:	
  5138  0366                     	bsf	(___fladd@grs)^080h+(7/8),(7)&7
  5139  0366  17C5               	goto	l2556
  5140  0367  2B68               	line	117
  5141                           	
  5142                           l805:	
  5143  0368                     	line	118
  5144                           	
  5145                           l2556:	
  5146  0368                     	movlw	01h
  5147  0368  3001               	movwf	(??___fladd+0)^080h+0
  5148  0369  00B6               u2805:
  5149  036A                     	rlf	(___fladd@b+3)^080h,w
  5150  036A  0D31               	rrf	(___fladd@b+3)^080h,f
  5151  036B  0CB1               	rrf	(___fladd@b+2)^080h,f
  5152  036C  0CB0               	rrf	(___fladd@b+1)^080h,f
  5153  036D  0CAF               	rrf	(___fladd@b)^080h,f
  5154  036E  0CAE               	decfsz	(??___fladd+0)^080h+0&07fh,f
  5155  036F  0BB6               	goto	u2805
  5156  0370  2B6A               
  5157                           	line	119
  5158                           	
  5159                           l2558:	
  5160  0371                     	movlw	low(01h)
  5161  0371  3001               	movwf	(??___fladd+0)^080h+0
  5162  0372  00B6               	movf	(??___fladd+0)^080h+0,w
  5163  0373  0836               	addwf	(___fladd@bexp)^080h,f
  5164  0374  07C4               	goto	l2560
  5165  0375  2B76               	line	120
  5166                           	
  5167                           l801:	
  5168  0376                     	line	106
  5169                           	
  5170                           l2560:	
  5171  0376                     	bsf	status, 5	;RP0=1, select bank1
  5172  0376  1683               	bcf	status, 6	;RP1=0, select bank1
  5173  0377  1303               	movf	(___fladd@aexp)^080h,w
  5174  0378  0843               	subwf	(___fladd@bexp)^080h,w
  5175  0379  0244               	skipc
  5176  037A  1C03               	goto	u2811
  5177  037B  2B7D               	goto	u2810
  5178  037C  2B7E               u2811:
  5179  037D                     	goto	l802
  5180  037D  2B52               u2810:
  5181  037E                     	goto	l800
  5182  037E  2B7F               	
  5183                           l806:	
  5184  037F                     	line	121
  5185                           	
  5186                           l800:	
  5187  037F                     	line	124
  5188                           	btfsc	(___fladd@signs)^080h,(6)&7
  5189  037F  1B42               	goto	u2821
  5190  0380  2B82               	goto	u2820
  5191  0381  2B83               u2821:
  5192  0382                     	goto	l2586
  5193  0382  2BD2               u2820:
  5194  0383                     	line	127
  5195                           	
  5196                           l2562:	
  5197  0383                     	movf	((___fladd@bexp)^080h),w
  5198  0383  0844               	btfss	status,2
  5199  0384  1D03               	goto	u2831
  5200  0385  2B87               	goto	u2830
  5201  0386  2B88               u2831:
  5202  0387                     	goto	l2568
  5203  0387  2B92               u2830:
  5204  0388                     	line	128
  5205                           	
  5206                           l2564:	
  5207  0388                     	movlw	0x0
  5208  0388  3000               	movwf	(?___fladd+3)^080h
  5209  0389  00B1               	movlw	0x0
  5210  038A  3000               	movwf	(?___fladd+2)^080h
  5211  038B  00B0               	movlw	0x0
  5212  038C  3000               	movwf	(?___fladd+1)^080h
  5213  038D  00AF               	movlw	0x0
  5214  038E  3000               	movwf	(?___fladd)^080h
  5215  038F  00AE               
  5216                           	goto	l809
  5217  0390  2D1E               	
  5218                           l2566:	
  5219  0391                     	goto	l809
  5220  0391  2D1E               	line	129
  5221                           	
  5222                           l808:	
  5223  0392                     	line	132
  5224                           	
  5225                           l2568:	
  5226  0392                     	movf	(___fladd@a)^080h,w
  5227  0392  0832               	addwf	(___fladd@b)^080h,f
  5228  0393  07AE               	movf	(___fladd@a+1)^080h,w
  5229  0394  0833               	clrz
  5230  0395  1103               	skipnc
  5231  0396  1803               	addlw	1
  5232  0397  3E01               	skipnz
  5233  0398  1903               	goto	u2841
  5234  0399  2B9B               	addwf	(___fladd@b+1)^080h,f
  5235  039A  07AF               u2841:
  5236  039B                     	movf	(___fladd@a+2)^080h,w
  5237  039B  0834               	clrz
  5238  039C  1103               	skipnc
  5239  039D  1803               	addlw	1
  5240  039E  3E01               	skipnz
  5241  039F  1903               	goto	u2842
  5242  03A0  2BA2               	addwf	(___fladd@b+2)^080h,f
  5243  03A1  07B0               u2842:
  5244  03A2                     	movf	(___fladd@a+3)^080h,w
  5245  03A2  0835               	clrz
  5246  03A3  1103               	skipnc
  5247  03A4  1803               	addlw	1
  5248  03A5  3E01               	skipnz
  5249  03A6  1903               	goto	u2843
  5250  03A7  2BA9               	addwf	(___fladd@b+3)^080h,f
  5251  03A8  07B1               u2843:
  5252  03A9                     
  5253                           	line	134
  5254                           	
  5255                           l2570:	
  5256  03A9                     	btfss	(___fladd@b+3)^080h,(24)&7
  5257  03A9  1C31               	goto	u2851
  5258  03AA  2BAC               	goto	u2850
  5259  03AB  2BAD               u2851:
  5260  03AC                     	goto	l2620
  5261  03AC  2C9B               u2850:
  5262  03AD                     	line	135
  5263                           	
  5264                           l2572:	
  5265  03AD                     	btfss	(___fladd@grs)^080h,(0)&7
  5266  03AD  1C45               	goto	u2861
  5267  03AE  2BB0               	goto	u2860
  5268  03AF  2BB1               u2861:
  5269  03B0                     	goto	l2576
  5270  03B0  2BBA               u2860:
  5271  03B1                     	line	136
  5272                           	
  5273                           l2574:	
  5274  03B1                     	movf	(___fladd@grs)^080h,w
  5275  03B1  0845               	movwf	(??___fladd+0)^080h+0
  5276  03B2  00B6               	clrc
  5277  03B3  1003               	rrf	(??___fladd+0)^080h+0,w
  5278  03B4  0C36               	iorlw	01h
  5279  03B5  3801               	movwf	(??___fladd+1)^080h+0
  5280  03B6  00B7               	movf	(??___fladd+1)^080h+0,w
  5281  03B7  0837               	movwf	(___fladd@grs)^080h
  5282  03B8  00C5               	line	137
  5283                           	goto	l2578
  5284  03B9  2BBD               	line	138
  5285                           	
  5286                           l811:	
  5287  03BA                     	line	139
  5288                           	
  5289                           l2576:	
  5290  03BA                     	clrc
  5291  03BA  1003               	rrf	(___fladd@grs)^080h,f
  5292  03BB  0CC5               
  5293                           	goto	l2578
  5294  03BC  2BBD               	line	140
  5295                           	
  5296                           l812:	
  5297  03BD                     	line	141
  5298                           	
  5299                           l2578:	
  5300  03BD                     	btfss	(___fladd@b)^080h,(0)&7
  5301  03BD  1C2E               	goto	u2871
  5302  03BE  2BC0               	goto	u2870
  5303  03BF  2BC1               u2871:
  5304  03C0                     	goto	l2582
  5305  03C0  2BC3               u2870:
  5306  03C1                     	line	142
  5307                           	
  5308                           l2580:	
  5309  03C1                     	bsf	(___fladd@grs)^080h+(7/8),(7)&7
  5310  03C1  17C5               	goto	l2582
  5311  03C2  2BC3               	line	143
  5312                           	
  5313                           l813:	
  5314  03C3                     	line	144
  5315                           	
  5316                           l2582:	
  5317  03C3                     	movlw	01h
  5318  03C3  3001               	movwf	(??___fladd+0)^080h+0
  5319  03C4  00B6               u2885:
  5320  03C5                     	rlf	(___fladd@b+3)^080h,w
  5321  03C5  0D31               	rrf	(___fladd@b+3)^080h,f
  5322  03C6  0CB1               	rrf	(___fladd@b+2)^080h,f
  5323  03C7  0CB0               	rrf	(___fladd@b+1)^080h,f
  5324  03C8  0CAF               	rrf	(___fladd@b)^080h,f
  5325  03C9  0CAE               	decfsz	(??___fladd+0)^080h+0&07fh,f
  5326  03CA  0BB6               	goto	u2885
  5327  03CB  2BC5               
  5328                           	line	145
  5329                           	
  5330                           l2584:	
  5331  03CC                     	movlw	low(01h)
  5332  03CC  3001               	movwf	(??___fladd+0)^080h+0
  5333  03CD  00B6               	movf	(??___fladd+0)^080h+0,w
  5334  03CE  0836               	addwf	(___fladd@bexp)^080h,f
  5335  03CF  07C4               	goto	l2620
  5336  03D0  2C9B               	line	146
  5337                           	
  5338                           l810:	
  5339  03D1                     	line	148
  5340                           	goto	l2620
  5341  03D1  2C9B               	line	149
  5342                           	
  5343                           l807:	
  5344  03D2                     	line	153
  5345                           	
  5346                           l2586:	
  5347  03D2                     	movf	(___fladd@b+3)^080h,w
  5348  03D2  0831               	xorlw	80h
  5349  03D3  3A80               	movwf	btemp+1
  5350  03D4  00FF               	movf	(___fladd@a+3)^080h,w
  5351  03D5  0835               	xorlw	80h
  5352  03D6  3A80               	subwf	btemp+1,w
  5353  03D7  027F               	
  5354                           	skipz
  5355  03D8  1D03               	goto	u2893
  5356  03D9  2BE4               	movf	(___fladd@a+2)^080h,w
  5357  03DA  0834               	subwf	(___fladd@b+2)^080h,w
  5358  03DB  0230               	skipz
  5359  03DC  1D03               	goto	u2893
  5360  03DD  2BE4               	movf	(___fladd@a+1)^080h,w
  5361  03DE  0833               	subwf	(___fladd@b+1)^080h,w
  5362  03DF  022F               	skipz
  5363  03E0  1D03               	goto	u2893
  5364  03E1  2BE4               	movf	(___fladd@a)^080h,w
  5365  03E2  0832               	subwf	(___fladd@b)^080h,w
  5366  03E3  022E               u2893:
  5367  03E4                     	skipnc
  5368  03E4  1803               	goto	u2891
  5369  03E5  2BE7               	goto	u2890
  5370  03E6  2BE8               u2891:
  5371  03E7                     	goto	l2596
  5372  03E7  2C4E               u2890:
  5373  03E8                     	line	154
  5374                           	
  5375                           l2588:	
  5376  03E8                     	movlw	0FFh
  5377  03E8  30FF               	movwf	((??___fladd+0)^080h+0)
  5378  03E9  00B6               	movlw	0FFh
  5379  03EA  30FF               	movwf	((??___fladd+0)^080h+0+1)
  5380  03EB  00B7               	movlw	0FFh
  5381  03EC  30FF               	movwf	((??___fladd+0)^080h+0+2)
  5382  03ED  00B8               	movlw	0FFh
  5383  03EE  30FF               	movwf	((??___fladd+0)^080h+0+3)
  5384  03EF  00B9               	movf	(___fladd@a)^080h,w
  5385  03F0  0832               	movwf	(??___fladd+4)^080h+0
  5386  03F1  00BA               	movf	(___fladd@a+1)^080h,w
  5387  03F2  0833               	movwf	((??___fladd+4)^080h+0+1)
  5388  03F3  00BB               	movf	(___fladd@a+2)^080h,w
  5389  03F4  0834               	movwf	((??___fladd+4)^080h+0+2)
  5390  03F5  00BC               	movf	(___fladd@a+3)^080h,w
  5391  03F6  0835               	movwf	((??___fladd+4)^080h+0+3)
  5392  03F7  00BD               	comf	(___fladd@b)^080h,w
  5393  03F8  092E               	movwf	(??___fladd+8)^080h+0
  5394  03F9  00BE               	comf	(___fladd@b+1)^080h,w
  5395  03FA  092F               	movwf	((??___fladd+8)^080h+0+1)
  5396  03FB  00BF               	comf	(___fladd@b+2)^080h,w
  5397  03FC  0930               	movwf	((??___fladd+8)^080h+0+2)
  5398  03FD  00C0               	comf	(___fladd@b+3)^080h,w
  5399  03FE  0931               	movwf	((??___fladd+8)^080h+0+3)
  5400  03FF  00C1               	incf	(??___fladd+8)^080h+0,f
  5401  0400  0ABE               	skipnz
  5402  0401  1903               	incf	((??___fladd+8)^080h+0+1),f
  5403  0402  0ABF               	skipnz
  5404  0403  1903               	incf	((??___fladd+8)^080h+0+2),f
  5405  0404  0AC0               	skipnz
  5406  0405  1903               	incf	((??___fladd+8)^080h+0+3),f
  5407  0406  0AC1               	movf	0+(??___fladd+8)^080h+0,w
  5408  0407  083E               	addwf	(??___fladd+4)^080h+0,f
  5409  0408  07BA               	movf	1+(??___fladd+8)^080h+0,w
  5410  0409  083F               	skipnc
  5411  040A  1803               	incfsz	1+(??___fladd+8)^080h+0,w
  5412  040B  0F3F               	goto	u2900
  5413  040C  2C0E               	goto	u2901
  5414  040D  2C0F               u2900:
  5415  040E                     	addwf	(??___fladd+4)^080h+1,f
  5416  040E  07BB               u2901:
  5417  040F                     	movf	2+(??___fladd+8)^080h+0,w
  5418  040F  0840               	skipnc
  5419  0410  1803               	incfsz	2+(??___fladd+8)^080h+0,w
  5420  0411  0F40               	goto	u2902
  5421  0412  2C14               	goto	u2903
  5422  0413  2C15               u2902:
  5423  0414                     	addwf	(??___fladd+4)^080h+2,f
  5424  0414  07BC               u2903:
  5425  0415                     	movf	3+(??___fladd+8)^080h+0,w
  5426  0415  0841               	skipnc
  5427  0416  1803               	incf	3+(??___fladd+8)^080h+0,w
  5428  0417  0A41               	addwf	(??___fladd+4)^080h+3,f
  5429  0418  07BD               	movf	0+(??___fladd+4)^080h+0,w
  5430  0419  083A               	addwf	(??___fladd+0)^080h+0,f
  5431  041A  07B6               	movf	1+(??___fladd+4)^080h+0,w
  5432  041B  083B               	skipnc
  5433  041C  1803               	incfsz	1+(??___fladd+4)^080h+0,w
  5434  041D  0F3B               	goto	u2910
  5435  041E  2C20               	goto	u2911
  5436  041F  2C21               u2910:
  5437  0420                     	addwf	(??___fladd+0)^080h+1,f
  5438  0420  07B7               u2911:
  5439  0421                     	movf	2+(??___fladd+4)^080h+0,w
  5440  0421  083C               	skipnc
  5441  0422  1803               	incfsz	2+(??___fladd+4)^080h+0,w
  5442  0423  0F3C               	goto	u2912
  5443  0424  2C26               	goto	u2913
  5444  0425  2C27               u2912:
  5445  0426                     	addwf	(??___fladd+0)^080h+2,f
  5446  0426  07B8               u2913:
  5447  0427                     	movf	3+(??___fladd+4)^080h+0,w
  5448  0427  083D               	skipnc
  5449  0428  1803               	incf	3+(??___fladd+4)^080h+0,w
  5450  0429  0A3D               	addwf	(??___fladd+0)^080h+3,f
  5451  042A  07B9               	movf	3+(??___fladd+0)^080h+0,w
  5452  042B  0839               	movwf	(___fladd@b+3)^080h
  5453  042C  00B1               	movf	2+(??___fladd+0)^080h+0,w
  5454  042D  0838               	movwf	(___fladd@b+2)^080h
  5455  042E  00B0               	movf	1+(??___fladd+0)^080h+0,w
  5456  042F  0837               	movwf	(___fladd@b+1)^080h
  5457  0430  00AF               	movf	0+(??___fladd+0)^080h+0,w
  5458  0431  0836               	movwf	(___fladd@b)^080h
  5459  0432  00AE               
  5460                           	line	155
  5461                           	movlw	low(080h)
  5462  0433  3080               	movwf	(??___fladd+0)^080h+0
  5463  0434  00B6               	movf	(??___fladd+0)^080h+0,w
  5464  0435  0836               	xorwf	(___fladd@signs)^080h,f
  5465  0436  06C2               	line	156
  5466                           	
  5467                           l2590:	
  5468  0437                     	comf	(___fladd@grs)^080h,f
  5469  0437  09C5               	incf	(___fladd@grs)^080h,f
  5470  0438  0AC5               	line	157
  5471                           	
  5472                           l2592:	
  5473  0439                     	movf	((___fladd@grs)^080h),w
  5474  0439  0845               	btfss	status,2
  5475  043A  1D03               	goto	u2921
  5476  043B  2C3D               	goto	u2920
  5477  043C  2C3E               u2921:
  5478  043D                     	goto	l817
  5479  043D  2C5C               u2920:
  5480  043E                     	line	158
  5481                           	
  5482                           l2594:	
  5483  043E                     	movlw	01h
  5484  043E  3001               	addwf	(___fladd@b)^080h,f
  5485  043F  07AE               	movlw	0
  5486  0440  3000               	skipnc
  5487  0441  1803               movlw 1
  5488  0442  3001               	addwf	(___fladd@b+1)^080h,f
  5489  0443  07AF               	movlw	0
  5490  0444  3000               	skipnc
  5491  0445  1803               movlw 1
  5492  0446  3001               	addwf	(___fladd@b+2)^080h,f
  5493  0447  07B0               	movlw	0
  5494  0448  3000               	skipnc
  5495  0449  1803               movlw 1
  5496  044A  3001               	addwf	(___fladd@b+3)^080h,f
  5497  044B  07B1               	goto	l817
  5498  044C  2C5C               	line	159
  5499                           	
  5500                           l816:	
  5501  044D                     	line	160
  5502                           	goto	l817
  5503  044D  2C5C               	line	161
  5504                           	
  5505                           l815:	
  5506  044E                     	line	162
  5507                           	
  5508                           l2596:	
  5509  044E                     	movf	(___fladd@a)^080h,w
  5510  044E  0832               	subwf	(___fladd@b)^080h,f
  5511  044F  02AE               	movf	(___fladd@a+1)^080h,w
  5512  0450  0833               	skipc
  5513  0451  1C03               	incfsz	(___fladd@a+1)^080h,w
  5514  0452  0F33               	subwf	(___fladd@b+1)^080h,f
  5515  0453  02AF               	movf	(___fladd@a+2)^080h,w
  5516  0454  0834               	skipc
  5517  0455  1C03               	incfsz	(___fladd@a+2)^080h,w
  5518  0456  0F34               	subwf	(___fladd@b+2)^080h,f
  5519  0457  02B0               	movf	(___fladd@a+3)^080h,w
  5520  0458  0835               	skipc
  5521  0459  1C03               	incfsz	(___fladd@a+3)^080h,w
  5522  045A  0F35               	subwf	(___fladd@b+3)^080h,f
  5523  045B  02B1               	line	163
  5524                           	
  5525                           l817:	
  5526  045C                     	line	166
  5527                           	movf	(___fladd@b+3)^080h,w
  5528  045C  0831               	iorwf	(___fladd@b+2)^080h,w
  5529  045D  0430               	iorwf	(___fladd@b+1)^080h,w
  5530  045E  042F               	iorwf	(___fladd@b)^080h,w
  5531  045F  042E               	skipz
  5532  0460  1D03               	goto	u2931
  5533  0461  2C63               	goto	u2930
  5534  0462  2C64               u2931:
  5535  0463                     	goto	l2618
  5536  0463  2C95               u2930:
  5537  0464                     	
  5538                           l2598:	
  5539  0464                     	movf	((___fladd@grs)^080h),w
  5540  0464  0845               	btfss	status,2
  5541  0465  1D03               	goto	u2941
  5542  0466  2C68               	goto	u2940
  5543  0467  2C69               u2941:
  5544  0468                     	goto	l2618
  5545  0468  2C95               u2940:
  5546  0469                     	line	167
  5547                           	
  5548                           l2600:	
  5549  0469                     	movlw	0x0
  5550  0469  3000               	movwf	(?___fladd+3)^080h
  5551  046A  00B1               	movlw	0x0
  5552  046B  3000               	movwf	(?___fladd+2)^080h
  5553  046C  00B0               	movlw	0x0
  5554  046D  3000               	movwf	(?___fladd+1)^080h
  5555  046E  00AF               	movlw	0x0
  5556  046F  3000               	movwf	(?___fladd)^080h
  5557  0470  00AE               
  5558                           	goto	l809
  5559  0471  2D1E               	
  5560                           l2602:	
  5561  0472                     	goto	l809
  5562  0472  2D1E               	line	168
  5563                           	
  5564                           l818:	
  5565  0473                     	line	171
  5566                           	goto	l2618
  5567  0473  2C95               	
  5568                           l820:	
  5569  0474                     	line	172
  5570                           	
  5571                           l2604:	
  5572  0474                     	movlw	01h
  5573  0474  3001               	movwf	(??___fladd+0)^080h+0
  5574  0475  00B6               u2955:
  5575  0476                     	clrc
  5576  0476  1003               	rlf	(___fladd@b)^080h,f
  5577  0477  0DAE               	rlf	(___fladd@b+1)^080h,f
  5578  0478  0DAF               	rlf	(___fladd@b+2)^080h,f
  5579  0479  0DB0               	rlf	(___fladd@b+3)^080h,f
  5580  047A  0DB1               	decfsz	(??___fladd+0)^080h+0
  5581  047B  0BB6               	goto	u2955
  5582  047C  2C76               	line	173
  5583                           	
  5584                           l2606:	
  5585  047D                     	btfss	(___fladd@grs)^080h,(7)&7
  5586  047D  1FC5               	goto	u2961
  5587  047E  2C80               	goto	u2960
  5588  047F  2C81               u2961:
  5589  0480                     	goto	l821
  5590  0480  2C82               u2960:
  5591  0481                     	line	174
  5592                           	
  5593                           l2608:	
  5594  0481                     	bsf	(___fladd@b)^080h+(0/8),(0)&7
  5595  0481  142E               	line	175
  5596                           	
  5597                           l821:	
  5598  0482                     	line	176
  5599                           	btfss	(___fladd@grs)^080h,(0)&7
  5600  0482  1C45               	goto	u2971
  5601  0483  2C85               	goto	u2970
  5602  0484  2C86               u2971:
  5603  0485                     	goto	l2612
  5604  0485  2C89               u2970:
  5605  0486                     	line	177
  5606                           	
  5607                           l2610:	
  5608  0486                     	setc
  5609  0486  1403               	rlf	(___fladd@grs)^080h,f
  5610  0487  0DC5               	line	178
  5611                           	goto	l2614
  5612  0488  2C8C               	line	179
  5613                           	
  5614                           l822:	
  5615  0489                     	line	180
  5616                           	
  5617                           l2612:	
  5618  0489                     	clrc
  5619  0489  1003               	rlf	(___fladd@grs)^080h,f
  5620  048A  0DC5               
  5621                           	goto	l2614
  5622  048B  2C8C               	line	181
  5623                           	
  5624                           l823:	
  5625  048C                     	line	182
  5626                           	
  5627                           l2614:	
  5628  048C                     	movf	((___fladd@bexp)^080h),w
  5629  048C  0844               	btfsc	status,2
  5630  048D  1903               	goto	u2981
  5631  048E  2C90               	goto	u2980
  5632  048F  2C91               u2981:
  5633  0490                     	goto	l2618
  5634  0490  2C95               u2980:
  5635  0491                     	line	183
  5636                           	
  5637                           l2616:	
  5638  0491                     	movlw	01h
  5639  0491  3001               	subwf	(___fladd@bexp)^080h,f
  5640  0492  02C4               	goto	l2618
  5641  0493  2C95               	line	184
  5642                           	
  5643                           l824:	
  5644  0494                     	goto	l2618
  5645  0494  2C95               	line	185
  5646                           	
  5647                           l819:	
  5648  0495                     	line	171
  5649                           	
  5650                           l2618:	
  5651  0495                     	btfss	(___fladd@b+2)^080h,(23)&7
  5652  0495  1FB0               	goto	u2991
  5653  0496  2C98               	goto	u2990
  5654  0497  2C99               u2991:
  5655  0498                     	goto	l2604
  5656  0498  2C74               u2990:
  5657  0499                     	goto	l2620
  5658  0499  2C9B               	
  5659                           l825:	
  5660  049A                     	goto	l2620
  5661  049A  2C9B               	line	186
  5662                           	
  5663                           l814:	
  5664  049B                     	line	192
  5665                           	
  5666                           l2620:	
  5667  049B                     	clrf	(___fladd@aexp)^080h
  5668  049B  01C3               	line	193
  5669                           	
  5670                           l2622:	
  5671  049C                     	btfss	(___fladd@grs)^080h,(7)&7
  5672  049C  1FC5               	goto	u3001
  5673  049D  2C9F               	goto	u3000
  5674  049E  2CA0               u3001:
  5675  049F                     	goto	l2630
  5676  049F  2CB2               u3000:
  5677  04A0                     	line	194
  5678                           	
  5679                           l2624:	
  5680  04A0                     	movf	(___fladd@grs)^080h,w
  5681  04A0  0845               	andlw	07Fh
  5682  04A1  397F               	btfsc	status,2
  5683  04A2  1903               	goto	u3011
  5684  04A3  2CA5               	goto	u3010
  5685  04A4  2CA6               u3011:
  5686  04A5                     	goto	l827
  5687  04A5  2CA9               u3010:
  5688  04A6                     	line	195
  5689                           	
  5690                           l2626:	
  5691  04A6                     	clrf	(___fladd@aexp)^080h
  5692  04A6  01C3               	incf	(___fladd@aexp)^080h,f
  5693  04A7  0AC3               	line	196
  5694                           	goto	l2630
  5695  04A8  2CB2               	line	197
  5696                           	
  5697                           l827:	
  5698  04A9                     	line	198
  5699                           	btfss	(___fladd@b)^080h,(0)&7
  5700  04A9  1C2E               	goto	u3021
  5701  04AA  2CAC               	goto	u3020
  5702  04AB  2CAD               u3021:
  5703  04AC                     	goto	l2630
  5704  04AC  2CB2               u3020:
  5705  04AD                     	line	199
  5706                           	
  5707                           l2628:	
  5708  04AD                     	clrf	(___fladd@aexp)^080h
  5709  04AD  01C3               	incf	(___fladd@aexp)^080h,f
  5710  04AE  0AC3               	goto	l2630
  5711  04AF  2CB2               	line	200
  5712                           	
  5713                           l829:	
  5714  04B0                     	goto	l2630
  5715  04B0  2CB2               	line	201
  5716                           	
  5717                           l828:	
  5718  04B1                     	goto	l2630
  5719  04B1  2CB2               	line	202
  5720                           	
  5721                           l826:	
  5722  04B2                     	line	203
  5723                           	
  5724                           l2630:	
  5725  04B2                     	movf	((___fladd@aexp)^080h),w
  5726  04B2  0843               	btfsc	status,2
  5727  04B3  1903               	goto	u3031
  5728  04B4  2CB6               	goto	u3030
  5729  04B5  2CB7               u3031:
  5730  04B6                     	goto	l830
  5731  04B6  2CED               u3030:
  5732  04B7                     	line	204
  5733                           	
  5734                           l2632:	
  5735  04B7                     	movlw	01h
  5736  04B7  3001               	addwf	(___fladd@b)^080h,f
  5737  04B8  07AE               	movlw	0
  5738  04B9  3000               	skipnc
  5739  04BA  1803               movlw 1
  5740  04BB  3001               	addwf	(___fladd@b+1)^080h,f
  5741  04BC  07AF               	movlw	0
  5742  04BD  3000               	skipnc
  5743  04BE  1803               movlw 1
  5744  04BF  3001               	addwf	(___fladd@b+2)^080h,f
  5745  04C0  07B0               	movlw	0
  5746  04C1  3000               	skipnc
  5747  04C2  1803               movlw 1
  5748  04C3  3001               	addwf	(___fladd@b+3)^080h,f
  5749  04C4  07B1               	line	205
  5750                           	
  5751                           l2634:	
  5752  04C5                     	btfss	(___fladd@b+3)^080h,(24)&7
  5753  04C5  1C31               	goto	u3041
  5754  04C6  2CC8               	goto	u3040
  5755  04C7  2CC9               u3041:
  5756  04C8                     	goto	l830
  5757  04C8  2CED               u3040:
  5758  04C9                     	line	206
  5759                           	
  5760                           l2636:	
  5761  04C9                     	movf	(___fladd@b)^080h,w
  5762  04C9  082E               	movwf	(??___fladd+0)^080h+0
  5763  04CA  00B6               	movf	(___fladd@b+1)^080h,w
  5764  04CB  082F               	movwf	((??___fladd+0)^080h+0+1)
  5765  04CC  00B7               	movf	(___fladd@b+2)^080h,w
  5766  04CD  0830               	movwf	((??___fladd+0)^080h+0+2)
  5767  04CE  00B8               	movf	(___fladd@b+3)^080h,w
  5768  04CF  0831               	movwf	((??___fladd+0)^080h+0+3)
  5769  04D0  00B9               	movlw	01h
  5770  04D1  3001               	movwf	(??___fladd+4)^080h+0
  5771  04D2  00BA               u3055:
  5772  04D3                     	rlf	(??___fladd+0)^080h+3,w
  5773  04D3  0D39               	rrf	(??___fladd+0)^080h+3,f
  5774  04D4  0CB9               	rrf	(??___fladd+0)^080h+2,f
  5775  04D5  0CB8               	rrf	(??___fladd+0)^080h+1,f
  5776  04D6  0CB7               	rrf	(??___fladd+0)^080h+0,f
  5777  04D7  0CB6               u3050:
  5778  04D8                     	decfsz	(??___fladd+4)^080h+0,f
  5779  04D8  0BBA               	goto	u3055
  5780  04D9  2CD3               	movf	3+(??___fladd+0)^080h+0,w
  5781  04DA  0839               	movwf	(___fladd@b+3)^080h
  5782  04DB  00B1               	movf	2+(??___fladd+0)^080h+0,w
  5783  04DC  0838               	movwf	(___fladd@b+2)^080h
  5784  04DD  00B0               	movf	1+(??___fladd+0)^080h+0,w
  5785  04DE  0837               	movwf	(___fladd@b+1)^080h
  5786  04DF  00AF               	movf	0+(??___fladd+0)^080h+0,w
  5787  04E0  0836               	movwf	(___fladd@b)^080h
  5788  04E1  00AE               
  5789                           	line	207
  5790                           		incf	((___fladd@bexp)^080h),w
  5791  04E2  0A44               	btfsc	status,2
  5792  04E3  1903               	goto	u3061
  5793  04E4  2CE6               	goto	u3060
  5794  04E5  2CE7               u3061:
  5795  04E6                     	goto	l830
  5796  04E6  2CED               u3060:
  5797  04E7                     	line	208
  5798                           	
  5799                           l2638:	
  5800  04E7                     	movlw	low(01h)
  5801  04E7  3001               	movwf	(??___fladd+0)^080h+0
  5802  04E8  00B6               	movf	(??___fladd+0)^080h+0,w
  5803  04E9  0836               	addwf	(___fladd@bexp)^080h,f
  5804  04EA  07C4               	goto	l830
  5805  04EB  2CED               	line	209
  5806                           	
  5807                           l832:	
  5808  04EC                     	goto	l830
  5809  04EC  2CED               	line	210
  5810                           	
  5811                           l831:	
  5812  04ED                     	line	211
  5813                           	
  5814                           l830:	
  5815  04ED                     	line	215
  5816                           		incf	((___fladd@bexp)^080h),w
  5817  04ED  0A44               	btfsc	status,2
  5818  04EE  1903               	goto	u3071
  5819  04EF  2CF1               	goto	u3070
  5820  04F0  2CF2               u3071:
  5821  04F1                     	goto	l2642
  5822  04F1  2CF8               u3070:
  5823  04F2                     	
  5824                           l2640:	
  5825  04F2                     	movf	((___fladd@bexp)^080h),w
  5826  04F2  0844               	btfss	status,2
  5827  04F3  1D03               	goto	u3081
  5828  04F4  2CF6               	goto	u3080
  5829  04F5  2CF7               u3081:
  5830  04F6                     	goto	l2648
  5831  04F6  2D08               u3080:
  5832  04F7                     	goto	l2642
  5833  04F7  2CF8               	
  5834                           l835:	
  5835  04F8                     	line	216
  5836                           	
  5837                           l2642:	
  5838  04F8                     	movlw	high highword(0)
  5839  04F8  3000               	movwf	(___fladd@b+3)^080h
  5840  04F9  00B1               	movlw	low highword(0)
  5841  04FA  3000               	movwf	(___fladd@b+2)^080h
  5842  04FB  00B0               	movlw	high(0)
  5843  04FC  3000               	movwf	(___fladd@b+1)^080h
  5844  04FD  00AF               	movlw	low(0)
  5845  04FE  3000               	movwf	(___fladd@b)^080h
  5846  04FF  00AE               
  5847                           	line	218
  5848                           	
  5849                           l2644:	
  5850  0500                     	movf	((___fladd@bexp)^080h),w
  5851  0500  0844               	btfss	status,2
  5852  0501  1D03               	goto	u3091
  5853  0502  2D04               	goto	u3090
  5854  0503  2D05               u3091:
  5855  0504                     	goto	l2648
  5856  0504  2D08               u3090:
  5857  0505                     	line	219
  5858                           	
  5859                           l2646:	
  5860  0505                     	clrf	(___fladd@signs)^080h
  5861  0505  01C2               	goto	l2648
  5862  0506  2D08               	line	220
  5863                           	
  5864                           l836:	
  5865  0507                     	goto	l2648
  5866  0507  2D08               	line	221
  5867                           	
  5868                           l833:	
  5869  0508                     	line	225
  5870                           	
  5871                           l2648:	
  5872  0508                     	btfss	(___fladd@bexp)^080h,(0)&7
  5873  0508  1C44               	goto	u3101
  5874  0509  2D0B               	goto	u3100
  5875  050A  2D0C               u3101:
  5876  050B                     	goto	l2652
  5877  050B  2D0E               u3100:
  5878  050C                     	line	226
  5879                           	
  5880                           l2650:	
  5881  050C                     	bsf	0+(___fladd@b)^080h+02h+(7/8),(7)&7
  5882  050C  17B0               	line	227
  5883                           	goto	l838
  5884  050D  2D12               	line	229
  5885                           	
  5886                           l837:	
  5887  050E                     	line	230
  5888                           	
  5889                           l2652:	
  5890  050E                     	movlw	low(07Fh)
  5891  050E  307F               	movwf	(??___fladd+0)^080h+0
  5892  050F  00B6               	movf	(??___fladd+0)^080h+0,w
  5893  0510  0836               	andwf	0+(___fladd@b)^080h+02h,f
  5894  0511  05B0               	line	231
  5895                           	
  5896                           l838:	
  5897  0512                     	line	232
  5898                           	movf	(___fladd@bexp)^080h,w
  5899  0512  0844               	movwf	(??___fladd+0)^080h+0
  5900  0513  00B6               	clrc
  5901  0514  1003               	rrf	(??___fladd+0)^080h+0,w
  5902  0515  0C36               	movwf	(??___fladd+1)^080h+0
  5903  0516  00B7               	movf	(??___fladd+1)^080h+0,w
  5904  0517  0837               	movwf	0+(___fladd@b)^080h+03h
  5905  0518  00B1               	line	233
  5906                           	
  5907                           l2654:	
  5908  0519                     	btfss	(___fladd@signs)^080h,(7)&7
  5909  0519  1FC2               	goto	u3111
  5910  051A  2D1C               	goto	u3110
  5911  051B  2D1D               u3111:
  5912  051C                     	goto	l839
  5913  051C  2D1E               u3110:
  5914  051D                     	line	234
  5915                           	
  5916                           l2656:	
  5917  051D                     	bsf	0+(___fladd@b)^080h+03h+(7/8),(7)&7
  5918  051D  17B1               	line	235
  5919                           	
  5920                           l839:	
  5921  051E                     	line	236
  5922                           	line	237
  5923                           	
  5924                           l809:	
  5925  051E                     	return
  5926  051E  0008               	opt stack 0
  5927                           GLOBAL	__end_of___fladd
  5928                           	__end_of___fladd:
  5929  051F                     	signat	___fladd,8316
  5930                           	global	_update_input
  5931                           
  5932 ;; *************** function _update_input *****************
  5933 ;; Defined at:
  5934 ;;		line 65 in file "Display.c"
  5935 ;; Parameters:    Size  Location     Type
  5936 ;;		None
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5948 ;;      Params:         0       0       0       0       0
  5949 ;;      Locals:         0       0       0       0       0
  5950 ;;      Temps:          0       0       0       0       0
  5951 ;;      Totals:         0       0       0       0       0
  5952 ;;Total ram usage:        0 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:   10
  5955 ;; This function calls:
  5956 ;;		_display_write_end
  5957 ;;		_display_write_start
  5958 ;;		_write_int
  5959 ;;		_write_space
  5960 ;;		_write_text
  5961 ;; This function is called by:
  5962 ;;		_main
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5966                           	file	"Display.c"
  5967                           	line	65
  5968                           global __ptext8
  5969                           __ptext8:	;psect for function _update_input
  5970  161A                     psect	text8
  5971                           	file	"Display.c"
  5972                           	line	65
  5973                           	global	__size_of_update_input
  5974                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  5975  0054                     	
  5976                           _update_input:	
  5977  161A                     ;incstack = 0
  5978 ;; hardware stack exceeded
  5979                           	opt	stack 0
  5980                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5981                           	line	67
  5982                           	
  5983                           l3408:	
  5984  161A                     ;Display.c: 67:     if (lastInput == _selectedInput) return;
  5985                           	bsf	status, 5	;RP0=1, select bank1
  5986  161A  1683               	bcf	status, 6	;RP1=0, select bank1
  5987  161B  1303               	movf	(__selectedInput+1)^080h,w
  5988  161C  086E               	bcf	status, 5	;RP0=0, select bank0
  5989  161D  1283               	bcf	status, 6	;RP1=0, select bank0
  5990  161E  1303               	xorwf	(_lastInput+1),w
  5991  161F  0667               	skipz
  5992  1620  1D03               	goto	u4345
  5993  1621  2E28               	bsf	status, 5	;RP0=1, select bank1
  5994  1622  1683               	bcf	status, 6	;RP1=0, select bank1
  5995  1623  1303               	movf	(__selectedInput)^080h,w
  5996  1624  086D               	bcf	status, 5	;RP0=0, select bank0
  5997  1625  1283               	bcf	status, 6	;RP1=0, select bank0
  5998  1626  1303               	xorwf	(_lastInput),w
  5999  1627  0666               u4345:
  6000  1628                     
  6001                           	skipz
  6002  1628  1D03               	goto	u4341
  6003  1629  2E2B               	goto	u4340
  6004  162A  2E2C               u4341:
  6005  162B                     	goto	l129
  6006  162B  2E2E               u4340:
  6007  162C                     	goto	l130
  6008  162C  2E6D               	
  6009                           l3410:	
  6010  162D                     	goto	l130
  6011  162D  2E6D               	
  6012                           l129:	
  6013  162E                     	line	69
  6014                           ;Display.c: 69:     _selectedDisplay = 1;
  6015                           	bsf	status, 5	;RP0=1, select bank1
  6016  162E  1683               	bcf	status, 6	;RP1=0, select bank1
  6017  162F  1303               	clrf	(__selectedDisplay)^080h
  6018  1630  01EF               	incf	(__selectedDisplay)^080h,f
  6019  1631  0AEF               	line	70
  6020                           	
  6021                           l3412:	
  6022  1632                     ;Display.c: 70:     display_write_start();
  6023                           	fcall	_display_write_start
  6024  1632  160A  118A  233B  160A  118A  	line	72
  6025                           	
  6026                           l3414:	
  6027  1637                     ;Display.c: 72:     write_text("INPUT");
  6028                           	movlw	low(((STR_1)|8000h))
  6029  1637  3090               	bsf	status, 5	;RP0=1, select bank1
  6030  1638  1683               	bcf	status, 6	;RP1=0, select bank1
  6031  1639  1303               	movwf	(write_text@text)^080h
  6032  163A  00B3               	movlw	high(((STR_1)|8000h))
  6033  163B  3089               	movwf	((write_text@text)^080h)+1
  6034  163C  00B4               	fcall	_write_text
  6035  163D  160A  118A  24B5  160A  118A  	line	74
  6036                           	
  6037                           l3416:	
  6038  1642                     ;Display.c: 74:     write_space(2);
  6039                           	movlw	02h
  6040  1642  3002               	bsf	status, 5	;RP0=1, select bank1
  6041  1643  1683               	bcf	status, 6	;RP1=0, select bank1
  6042  1644  1303               	movwf	(write_space@count)^080h
  6043  1645  00A1               	movlw	0
  6044  1646  3000               	movwf	((write_space@count)^080h)+1
  6045  1647  00A2               	fcall	_write_space
  6046  1648  120A  118A  2015  160A  118A  	line	76
  6047                           	
  6048                           l3418:	
  6049  164D                     ;Display.c: 76:     write_int(_selectedInput+1);
  6050                           	bsf	status, 5	;RP0=1, select bank1
  6051  164D  1683               	bcf	status, 6	;RP1=0, select bank1
  6052  164E  1303               	movf	(__selectedInput)^080h,w
  6053  164F  086D               	addlw	low(01h)
  6054  1650  3E01               	movwf	(write_int@number)^080h
  6055  1651  00BD               	movf	(__selectedInput+1)^080h,w
  6056  1652  086E               	skipnc
  6057  1653  1803               	addlw	1
  6058  1654  3E01               	addlw	high(01h)
  6059  1655  3E00               	movwf	1+(write_int@number)^080h
  6060  1656  00BE               	fcall	_write_int
  6061  1657  160A  118A  240E  160A  118A  	line	77
  6062                           	
  6063                           l3420:	
  6064  165C                     ;Display.c: 77:     display_write_end();
  6065                           	fcall	_display_write_end
  6066  165C  160A  118A  232C  160A  118A  	line	79
  6067                           	
  6068                           l3422:	
  6069  1661                     ;Display.c: 79:     lastInput = _selectedInput;
  6070                           	bsf	status, 5	;RP0=1, select bank1
  6071  1661  1683               	bcf	status, 6	;RP1=0, select bank1
  6072  1662  1303               	movf	(__selectedInput+1)^080h,w
  6073  1663  086E               	bcf	status, 5	;RP0=0, select bank0
  6074  1664  1283               	bcf	status, 6	;RP1=0, select bank0
  6075  1665  1303               	movwf	(_lastInput+1)
  6076  1666  00E7               	bsf	status, 5	;RP0=1, select bank1
  6077  1667  1683               	bcf	status, 6	;RP1=0, select bank1
  6078  1668  1303               	movf	(__selectedInput)^080h,w
  6079  1669  086D               	bcf	status, 5	;RP0=0, select bank0
  6080  166A  1283               	bcf	status, 6	;RP1=0, select bank0
  6081  166B  1303               	movwf	(_lastInput)
  6082  166C  00E6               	line	81
  6083                           	
  6084                           l130:	
  6085  166D                     	return
  6086  166D  0008               	opt stack 0
  6087                           GLOBAL	__end_of_update_input
  6088                           	__end_of_update_input:
  6089  166E                     	signat	_update_input,89
  6090                           	global	_write_space
  6091                           
  6092 ;; *************** function _write_space *****************
  6093 ;; Defined at:
  6094 ;;		line 107 in file "Display.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;  count           2    1[BANK1 ] int 
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;  x               2    6[BANK1 ] int 
  6099 ;;  i               2    4[BANK1 ] int 
  6100 ;; Return value:  Size  Location     Type
  6101 ;;                  1    wreg      void 
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6109 ;;      Params:         0       0       2       0       0
  6110 ;;      Locals:         0       0       4       0       0
  6111 ;;      Temps:          0       0       1       0       0
  6112 ;;      Totals:         0       0       7       0       0
  6113 ;;Total ram usage:        7 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:    6
  6116 ;; This function calls:
  6117 ;;		_spiWrite
  6118 ;; This function is called by:
  6119 ;;		_update_input
  6120 ;;		_update_volume
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  6124                           	line	107
  6125                           global __ptext9
  6126                           __ptext9:	;psect for function _write_space
  6127  0015                     psect	text9
  6128                           	file	"Display.c"
  6129                           	line	107
  6130                           	global	__size_of_write_space
  6131                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  6132  004C                     	
  6133                           _write_space:	
  6134  0015                     ;incstack = 0
  6135                           	opt	stack 0
  6136                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6137                           	line	109
  6138                           	
  6139                           l3190:	
  6140  0015                     ;Display.c: 107: void write_space(int count);Display.c: 108: {;Display.c: 109:     for (
                                 int i = 0; i < count; i++) {
  6141                           	bsf	status, 5	;RP0=1, select bank1
  6142  0015  1683               	bcf	status, 6	;RP1=0, select bank1
  6143  0016  1303               	clrf	(write_space@i)^080h
  6144  0017  01A4               	clrf	(write_space@i+1)^080h
  6145  0018  01A5               	goto	l138
  6146  0019  2851               	
  6147                           l139:	
  6148  001A                     	line	111
  6149                           	
  6150                           l3192:	
  6151  001A                     ;Display.c: 111:         for (int x = 0; x < 5; x++) {
  6152                           	bsf	status, 5	;RP0=1, select bank1
  6153  001A  1683               	bcf	status, 6	;RP1=0, select bank1
  6154  001B  1303               	clrf	(write_space@x)^080h
  6155  001C  01A6               	clrf	(write_space@x+1)^080h
  6156  001D  01A7               	
  6157                           l3194:	
  6158  001E                     	movf	(write_space@x+1)^080h,w
  6159  001E  0827               	xorlw	80h
  6160  001F  3A80               	movwf	btemp+1
  6161  0020  00FF               	movlw	(0)^80h
  6162  0021  3080               	subwf	btemp+1,w
  6163  0022  027F               	skipz
  6164  0023  1D03               	goto	u4215
  6165  0024  2827               	movlw	05h
  6166  0025  3005               	subwf	(write_space@x)^080h,w
  6167  0026  0226               u4215:
  6168  0027                     
  6169                           	skipc
  6170  0027  1C03               	goto	u4211
  6171  0028  282A               	goto	u4210
  6172  0029  282B               u4211:
  6173  002A                     	goto	l3198
  6174  002A  282D               u4210:
  6175  002B                     	goto	l3204
  6176  002B  2849               	
  6177                           l3196:	
  6178  002C                     	goto	l3204
  6179  002C  2849               	
  6180                           l140:	
  6181  002D                     	line	113
  6182                           	
  6183                           l3198:	
  6184  002D                     ;Display.c: 113:             spiWrite(0x00);
  6185                           	movlw	low(0)
  6186  002D  3000               	fcall	_spiWrite
  6187  002E  160A  118A  234A  120A  118A  	line	115
  6188                           	
  6189                           l3200:	
  6190  0033                     ;Display.c: 115:         }
  6191                           	movlw	01h
  6192  0033  3001               	bsf	status, 5	;RP0=1, select bank1
  6193  0034  1683               	bcf	status, 6	;RP1=0, select bank1
  6194  0035  1303               	addwf	(write_space@x)^080h,f
  6195  0036  07A6               	skipnc
  6196  0037  1803               	incf	(write_space@x+1)^080h,f
  6197  0038  0AA7               	movlw	0
  6198  0039  3000               	addwf	(write_space@x+1)^080h,f
  6199  003A  07A7               	
  6200                           l3202:	
  6201  003B                     	movf	(write_space@x+1)^080h,w
  6202  003B  0827               	xorlw	80h
  6203  003C  3A80               	movwf	btemp+1
  6204  003D  00FF               	movlw	(0)^80h
  6205  003E  3080               	subwf	btemp+1,w
  6206  003F  027F               	skipz
  6207  0040  1D03               	goto	u4225
  6208  0041  2844               	movlw	05h
  6209  0042  3005               	subwf	(write_space@x)^080h,w
  6210  0043  0226               u4225:
  6211  0044                     
  6212                           	skipc
  6213  0044  1C03               	goto	u4221
  6214  0045  2847               	goto	u4220
  6215  0046  2848               u4221:
  6216  0047                     	goto	l3198
  6217  0047  282D               u4220:
  6218  0048                     	goto	l3204
  6219  0048  2849               	
  6220                           l141:	
  6221  0049                     	line	116
  6222                           	
  6223                           l3204:	
  6224  0049                     ;Display.c: 116:     }
  6225                           	movlw	01h
  6226  0049  3001               	bsf	status, 5	;RP0=1, select bank1
  6227  004A  1683               	bcf	status, 6	;RP1=0, select bank1
  6228  004B  1303               	addwf	(write_space@i)^080h,f
  6229  004C  07A4               	skipnc
  6230  004D  1803               	incf	(write_space@i+1)^080h,f
  6231  004E  0AA5               	movlw	0
  6232  004F  3000               	addwf	(write_space@i+1)^080h,f
  6233  0050  07A5               	
  6234                           l138:	
  6235  0051                     	movf	(write_space@i+1)^080h,w
  6236  0051  0825               	xorlw	80h
  6237  0052  3A80               	movwf	(??_write_space+0)^080h+0
  6238  0053  00A3               	movf	(write_space@count+1)^080h,w
  6239  0054  0822               	xorlw	80h
  6240  0055  3A80               	subwf	(??_write_space+0)^080h+0,w
  6241  0056  0223               	skipz
  6242  0057  1D03               	goto	u4235
  6243  0058  285B               	movf	(write_space@count)^080h,w
  6244  0059  0821               	subwf	(write_space@i)^080h,w
  6245  005A  0224               u4235:
  6246  005B                     
  6247                           	skipc
  6248  005B  1C03               	goto	u4231
  6249  005C  285E               	goto	u4230
  6250  005D  285F               u4231:
  6251  005E                     	goto	l3192
  6252  005E  281A               u4230:
  6253  005F                     	goto	l143
  6254  005F  2860               	
  6255                           l142:	
  6256  0060                     	line	117
  6257                           	
  6258                           l143:	
  6259  0060                     	return
  6260  0060  0008               	opt stack 0
  6261                           GLOBAL	__end_of_write_space
  6262                           	__end_of_write_space:
  6263  0061                     	signat	_write_space,4217
  6264                           	global	_write_int
  6265                           
  6266 ;; *************** function _write_int *****************
  6267 ;; Defined at:
  6268 ;;		line 129 in file "Display.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;  number          2   29[BANK1 ] int 
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  num             2   31[BANK1 ] unsigned char [2]
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1    wreg      void 
  6275 ;; Registers used:
  6276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6282 ;;      Params:         0       0       2       0       0
  6283 ;;      Locals:         0       0       2       0       0
  6284 ;;      Temps:          0       0       0       0       0
  6285 ;;      Totals:         0       0       4       0       0
  6286 ;;Total ram usage:        4 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    9
  6289 ;; This function calls:
  6290 ;;		_sprintf
  6291 ;;		_write_char
  6292 ;;		_write_text
  6293 ;; This function is called by:
  6294 ;;		_update_input
  6295 ;;		_update_volume
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  6299                           	line	129
  6300                           global __ptext10
  6301                           __ptext10:	;psect for function _write_int
  6302  140E                     psect	text10
  6303                           	file	"Display.c"
  6304                           	line	129
  6305                           	global	__size_of_write_int
  6306                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  6307  0036                     	
  6308                           _write_int:	
  6309  140E                     ;incstack = 0
  6310 ;; hardware stack exceeded
  6311                           	opt	stack 0
  6312                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6313                           	line	131
  6314                           	
  6315                           l3206:	
  6316  140E                     ;Display.c: 129: void write_int(int number);Display.c: 130: {;Display.c: 131:     if (nu
                                 mber < 10) {
  6317                           	bsf	status, 5	;RP0=1, select bank1
  6318  140E  1683               	bcf	status, 6	;RP1=0, select bank1
  6319  140F  1303               	movf	(write_int@number+1)^080h,w
  6320  1410  083E               	xorlw	80h
  6321  1411  3A80               	movwf	btemp+1
  6322  1412  00FF               	movlw	(0)^80h
  6323  1413  3080               	subwf	btemp+1,w
  6324  1414  027F               	skipz
  6325  1415  1D03               	goto	u4245
  6326  1416  2C19               	movlw	0Ah
  6327  1417  300A               	subwf	(write_int@number)^080h,w
  6328  1418  023D               u4245:
  6329  1419                     
  6330                           	skipnc
  6331  1419  1803               	goto	u4241
  6332  141A  2C1C               	goto	u4240
  6333  141B  2C1D               u4241:
  6334  141C                     	goto	l3212
  6335  141C  2C28               u4240:
  6336  141D                     	line	132
  6337                           	
  6338                           l3208:	
  6339  141D                     ;Display.c: 132:         write_char(number + 48);
  6340                           	bsf	status, 5	;RP0=1, select bank1
  6341  141D  1683               	bcf	status, 6	;RP1=0, select bank1
  6342  141E  1303               	movf	(write_int@number)^080h,w
  6343  141F  083D               	addlw	030h
  6344  1420  3E30               	fcall	_write_char
  6345  1421  160A  118A  26D0  160A  118A  	goto	l153
  6346  1426  2C43               	line	133
  6347                           	
  6348                           l3210:	
  6349  1427                     ;Display.c: 133:         return;
  6350                           	goto	l153
  6351  1427  2C43               	line	134
  6352                           ;Display.c: 134:     }
  6353                           	
  6354                           l152:	
  6355  1428                     	line	137
  6356                           	
  6357                           l3212:	
  6358  1428                     ;Display.c: 136:     char num[2];;Display.c: 137:     sprintf(num, "%d", number);
  6359                           	movlw	low(((STR_3)|8000h))
  6360  1428  309A               	bsf	status, 5	;RP0=1, select bank1
  6361  1429  1683               	bcf	status, 6	;RP1=0, select bank1
  6362  142A  1303               	movwf	(sprintf@f)^080h
  6363  142B  00AE               	movlw	high(((STR_3)|8000h))
  6364  142C  3089               	movwf	((sprintf@f)^080h)+1
  6365  142D  00AF               	movf	(write_int@number+1)^080h,w
  6366  142E  083E               	movwf	1+(?_sprintf)^080h+02h
  6367  142F  00B1               	movf	(write_int@number)^080h,w
  6368  1430  083D               	movwf	0+(?_sprintf)^080h+02h
  6369  1431  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  6370  1432  30BF               	fcall	_sprintf
  6371  1433  120A  118A  212D  160A  118A  	line	139
  6372                           ;Display.c: 139:     write_text(num);
  6373                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  6374  1438  30BF               	bsf	status, 5	;RP0=1, select bank1
  6375  1439  1683               	bcf	status, 6	;RP1=0, select bank1
  6376  143A  1303               	movwf	(write_text@text)^080h
  6377  143B  00B3               	movlw	(0x0)
  6378  143C  3000               	movwf	(write_text@text+1)^080h
  6379  143D  00B4               	fcall	_write_text
  6380  143E  160A  118A  24B5  160A  118A  	line	140
  6381                           	
  6382                           l153:	
  6383  1443                     	return
  6384  1443  0008               	opt stack 0
  6385                           GLOBAL	__end_of_write_int
  6386                           	__end_of_write_int:
  6387  1444                     	signat	_write_int,4217
  6388                           	global	_write_text
  6389                           
  6390 ;; *************** function _write_text *****************
  6391 ;; Defined at:
  6392 ;;		line 119 in file "Display.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  text            2   19[BANK1 ] PTR unsigned char 
  6395 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  c               2   21[BANK1 ] PTR unsigned char 
  6398 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6408 ;;      Params:         0       0       2       0       0
  6409 ;;      Locals:         0       0       2       0       0
  6410 ;;      Temps:          0       0       0       0       0
  6411 ;;      Totals:         0       0       4       0       0
  6412 ;;Total ram usage:        4 bytes
  6413 ;; Hardware stack levels used:    1
  6414 ;; Hardware stack levels required when called:    8
  6415 ;; This function calls:
  6416 ;;		_write_char
  6417 ;; This function is called by:
  6418 ;;		_update_input
  6419 ;;		_update_volume
  6420 ;;		_write_int
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6424                           	line	119
  6425                           global __ptext11
  6426                           __ptext11:	;psect for function _write_text
  6427  14B5                     psect	text11
  6428                           	file	"Display.c"
  6429                           	line	119
  6430                           	global	__size_of_write_text
  6431                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  6432  003A                     	
  6433                           _write_text:	
  6434  14B5                     ;incstack = 0
  6435 ;; hardware stack exceeded
  6436                           	opt	stack 0
  6437                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6438                           	line	123
  6439                           	
  6440                           l2990:	
  6441  14B5                     ;Display.c: 119: void write_text(char* text);Display.c: 120: {;Display.c: 121:     char*
                                  c;;Display.c: 123:     for (c = text; *c != '\0'; c++) {
  6442                           	bsf	status, 5	;RP0=1, select bank1
  6443  14B5  1683               	bcf	status, 6	;RP1=0, select bank1
  6444  14B6  1303               		movf	(write_text@text)^080h,w
  6445  14B7  0833               	movwf	(write_text@c)^080h
  6446  14B8  00B5               movf	(write_text@text+1)^080h,w
  6447  14B9  0834               movwf	(write_text@c+1)^080h
  6448  14BA  00B6               
  6449                           	goto	l2996
  6450  14BB  2CD9               	
  6451                           l147:	
  6452  14BC                     	line	124
  6453                           	
  6454                           l2992:	
  6455  14BC                     ;Display.c: 124:         write_char(*c);
  6456                           	bsf	status, 5	;RP0=1, select bank1
  6457  14BC  1683               	bcf	status, 6	;RP1=0, select bank1
  6458  14BD  1303               	movf	(write_text@c+1)^080h,w
  6459  14BE  0836               	bcf	status, 5	;RP0=0, select bank0
  6460  14BF  1283               	bcf	status, 6	;RP1=0, select bank0
  6461  14C0  1303               	movwf	btemp+1
  6462  14C1  00FF               	bsf	status, 5	;RP0=1, select bank1
  6463  14C2  1683               	bcf	status, 6	;RP1=0, select bank1
  6464  14C3  1303               	movf	(write_text@c)^080h,w
  6465  14C4  0835               	movwf	fsr0
  6466  14C5  0084               	bcf	status, 5	;RP0=0, select bank0
  6467  14C6  1283               	bcf	status, 6	;RP1=0, select bank0
  6468  14C7  1303               	fcall	stringtab
  6469  14C8  120A  158A  2000  160A  118A  	fcall	_write_char
  6470  14CD  160A  118A  26D0  160A  118A  	line	125
  6471                           	
  6472                           l2994:	
  6473  14D2                     ;Display.c: 125:     }
  6474                           	movlw	01h
  6475  14D2  3001               	bsf	status, 5	;RP0=1, select bank1
  6476  14D3  1683               	bcf	status, 6	;RP1=0, select bank1
  6477  14D4  1303               	addwf	(write_text@c)^080h,f
  6478  14D5  07B5               	skipnc
  6479  14D6  1803               	incf	(write_text@c+1)^080h,f
  6480  14D7  0AB6               	goto	l2996
  6481  14D8  2CD9               	
  6482                           l146:	
  6483  14D9                     	
  6484                           l2996:	
  6485  14D9                     	movf	(write_text@c+1)^080h,w
  6486  14D9  0836               	bcf	status, 5	;RP0=0, select bank0
  6487  14DA  1283               	bcf	status, 6	;RP1=0, select bank0
  6488  14DB  1303               	movwf	btemp+1
  6489  14DC  00FF               	bsf	status, 5	;RP0=1, select bank1
  6490  14DD  1683               	bcf	status, 6	;RP1=0, select bank1
  6491  14DE  1303               	movf	(write_text@c)^080h,w
  6492  14DF  0835               	movwf	fsr0
  6493  14E0  0084               	bcf	status, 5	;RP0=0, select bank0
  6494  14E1  1283               	bcf	status, 6	;RP1=0, select bank0
  6495  14E2  1303               	fcall	stringtab
  6496  14E3  120A  158A  2000  160A  118A  	xorlw	0
  6497  14E8  3A00               	skipz
  6498  14E9  1D03               	goto	u4001
  6499  14EA  2CEC               	goto	u4000
  6500  14EB  2CED               u4001:
  6501  14EC                     	goto	l2992
  6502  14EC  2CBC               u4000:
  6503  14ED                     	goto	l149
  6504  14ED  2CEE               	
  6505                           l148:	
  6506  14EE                     	line	127
  6507                           	
  6508                           l149:	
  6509  14EE                     	return
  6510  14EE  0008               	opt stack 0
  6511                           GLOBAL	__end_of_write_text
  6512                           	__end_of_write_text:
  6513  14EF                     	signat	_write_text,4217
  6514                           	global	_write_char
  6515                           
  6516 ;; *************** function _write_char *****************
  6517 ;; Defined at:
  6518 ;;		line 142 in file "Display.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  c               1    wreg     unsigned char 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  c               1   18[BANK1 ] unsigned char 
  6523 ;;  pos             2   16[BANK1 ] int 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      void 
  6526 ;; Registers used:
  6527 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6533 ;;      Params:         0       0       0       0       0
  6534 ;;      Locals:         0       0       3       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         0       0       3       0       0
  6537 ;;Total ram usage:        3 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    7
  6540 ;; This function calls:
  6541 ;;		_write_font
  6542 ;; This function is called by:
  6543 ;;		_write_text
  6544 ;;		_write_int
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6548                           	line	142
  6549                           global __ptext12
  6550                           __ptext12:	;psect for function _write_char
  6551  16D0                     psect	text12
  6552                           	file	"Display.c"
  6553                           	line	142
  6554                           	global	__size_of_write_char
  6555                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  6556  0062                     	
  6557                           _write_char:	
  6558  16D0                     ;incstack = 0
  6559 ;; hardware stack exceeded
  6560                           	opt	stack 0
  6561                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6562                           ;write_char@c stored from wreg
  6563                           	bsf	status, 5	;RP0=1, select bank1
  6564  16D0  1683               	bcf	status, 6	;RP1=0, select bank1
  6565  16D1  1303               	movwf	(write_char@c)^080h
  6566  16D2  00B2               	line	147
  6567                           	
  6568                           l2356:	
  6569  16D3                     ;Display.c: 142: void write_char(char c);Display.c: 143: {;Display.c: 144:     int pos;;
                                 Display.c: 147:     if (c >= 48 && c <= 57) {
  6570                           	movlw	low(030h)
  6571  16D3  3030               	subwf	(write_char@c)^080h,w
  6572  16D4  0232               	skipc
  6573  16D5  1C03               	goto	u2371
  6574  16D6  2ED8               	goto	u2370
  6575  16D7  2ED9               u2371:
  6576  16D8                     	goto	l2364
  6577  16D8  2EF0               u2370:
  6578  16D9                     	
  6579                           l2358:	
  6580  16D9                     	movlw	low(03Ah)
  6581  16D9  303A               	subwf	(write_char@c)^080h,w
  6582  16DA  0232               	skipnc
  6583  16DB  1803               	goto	u2381
  6584  16DC  2EDE               	goto	u2380
  6585  16DD  2EDF               u2381:
  6586  16DE                     	goto	l2364
  6587  16DE  2EF0               u2380:
  6588  16DF                     	line	148
  6589                           	
  6590                           l2360:	
  6591  16DF                     ;Display.c: 148:         pos = c - 48;
  6592                           	movf	(write_char@c)^080h,w
  6593  16DF  0832               	addlw	low(-48)
  6594  16E0  3ED0               	movwf	(write_char@pos)^080h
  6595  16E1  00B0               	movlw	high(-48)
  6596  16E2  30FF               	skipnc
  6597  16E3  1803               	movlw	(high(-48)+1)&0ffh
  6598  16E4  3000               	movwf	((write_char@pos)^080h)+1
  6599  16E5  00B1               	line	149
  6600                           	
  6601                           l2362:	
  6602  16E6                     ;Display.c: 149:         write_font(pos);
  6603                           	movf	(write_char@pos+1)^080h,w
  6604  16E6  0831               	movwf	(write_font@fontPos+1)^080h
  6605  16E7  00A7               	movf	(write_char@pos)^080h,w
  6606  16E8  0830               	movwf	(write_font@fontPos)^080h
  6607  16E9  00A6               	fcall	_write_font
  6608  16EA  160A  118A  266E  160A  118A  	line	150
  6609                           ;Display.c: 150:     } else if (c >= 65 && c <= 90) {
  6610                           	goto	l162
  6611  16EF  2F31               	
  6612                           l156:	
  6613  16F0                     	
  6614                           l2364:	
  6615  16F0                     	movlw	low(041h)
  6616  16F0  3041               	bsf	status, 5	;RP0=1, select bank1
  6617  16F1  1683               	bcf	status, 6	;RP1=0, select bank1
  6618  16F2  1303               	subwf	(write_char@c)^080h,w
  6619  16F3  0232               	skipc
  6620  16F4  1C03               	goto	u2391
  6621  16F5  2EF7               	goto	u2390
  6622  16F6  2EF8               u2391:
  6623  16F7                     	goto	l2372
  6624  16F7  2F0F               u2390:
  6625  16F8                     	
  6626                           l2366:	
  6627  16F8                     	movlw	low(05Bh)
  6628  16F8  305B               	subwf	(write_char@c)^080h,w
  6629  16F9  0232               	skipnc
  6630  16FA  1803               	goto	u2401
  6631  16FB  2EFD               	goto	u2400
  6632  16FC  2EFE               u2401:
  6633  16FD                     	goto	l2372
  6634  16FD  2F0F               u2400:
  6635  16FE                     	line	151
  6636                           	
  6637                           l2368:	
  6638  16FE                     ;Display.c: 151:         pos = (c - 65) + 10;
  6639                           	movf	(write_char@c)^080h,w
  6640  16FE  0832               	addlw	low(-55)
  6641  16FF  3EC9               	movwf	(write_char@pos)^080h
  6642  1700  00B0               	movlw	high(-55)
  6643  1701  30FF               	skipnc
  6644  1702  1803               	movlw	(high(-55)+1)&0ffh
  6645  1703  3000               	movwf	((write_char@pos)^080h)+1
  6646  1704  00B1               	line	152
  6647                           	
  6648                           l2370:	
  6649  1705                     ;Display.c: 152:         write_font(pos);
  6650                           	movf	(write_char@pos+1)^080h,w
  6651  1705  0831               	movwf	(write_font@fontPos+1)^080h
  6652  1706  00A7               	movf	(write_char@pos)^080h,w
  6653  1707  0830               	movwf	(write_font@fontPos)^080h
  6654  1708  00A6               	fcall	_write_font
  6655  1709  160A  118A  266E  160A  118A  	line	153
  6656                           ;Display.c: 153:     } else if (c >= 97 && c <= 122) {
  6657                           	goto	l162
  6658  170E  2F31               	
  6659                           l158:	
  6660  170F                     	
  6661                           l2372:	
  6662  170F                     	movlw	low(061h)
  6663  170F  3061               	bsf	status, 5	;RP0=1, select bank1
  6664  1710  1683               	bcf	status, 6	;RP1=0, select bank1
  6665  1711  1303               	subwf	(write_char@c)^080h,w
  6666  1712  0232               	skipc
  6667  1713  1C03               	goto	u2411
  6668  1714  2F16               	goto	u2410
  6669  1715  2F17               u2411:
  6670  1716                     	goto	l162
  6671  1716  2F31               u2410:
  6672  1717                     	
  6673                           l2374:	
  6674  1717                     	movlw	low(07Bh)
  6675  1717  307B               	subwf	(write_char@c)^080h,w
  6676  1718  0232               	skipnc
  6677  1719  1803               	goto	u2421
  6678  171A  2F1C               	goto	u2420
  6679  171B  2F1D               u2421:
  6680  171C                     	goto	l162
  6681  171C  2F31               u2420:
  6682  171D                     	line	154
  6683                           	
  6684                           l2376:	
  6685  171D                     ;Display.c: 154:         pos = (c - 97) + 10;
  6686                           	movf	(write_char@c)^080h,w
  6687  171D  0832               	addlw	low(-87)
  6688  171E  3EA9               	movwf	(write_char@pos)^080h
  6689  171F  00B0               	movlw	high(-87)
  6690  1720  30FF               	skipnc
  6691  1721  1803               	movlw	(high(-87)+1)&0ffh
  6692  1722  3000               	movwf	((write_char@pos)^080h)+1
  6693  1723  00B1               	line	155
  6694                           	
  6695                           l2378:	
  6696  1724                     ;Display.c: 155:         write_font(pos);
  6697                           	movf	(write_char@pos+1)^080h,w
  6698  1724  0831               	movwf	(write_font@fontPos+1)^080h
  6699  1725  00A7               	movf	(write_char@pos)^080h,w
  6700  1726  0830               	movwf	(write_font@fontPos)^080h
  6701  1727  00A6               	fcall	_write_font
  6702  1728  160A  118A  266E  160A  118A  	line	156
  6703                           ;Display.c: 156:     } else {
  6704                           	goto	l162
  6705  172D  2F31               	
  6706                           l160:	
  6707  172E                     	goto	l162
  6708  172E  2F31               	line	159
  6709                           ;Display.c: 159:     }
  6710                           	
  6711                           l161:	
  6712  172F                     	goto	l162
  6713  172F  2F31               	
  6714                           l159:	
  6715  1730                     	goto	l162
  6716  1730  2F31               	
  6717                           l157:	
  6718  1731                     	line	160
  6719                           	
  6720                           l162:	
  6721  1731                     	return
  6722  1731  0008               	opt stack 0
  6723                           GLOBAL	__end_of_write_char
  6724                           	__end_of_write_char:
  6725  1732                     	signat	_write_char,4217
  6726                           	global	_write_font
  6727                           
  6728 ;; *************** function _write_font *****************
  6729 ;; Defined at:
  6730 ;;		line 162 in file "Display.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  fontPos         2    6[BANK1 ] int 
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;  x               2   14[BANK1 ] int 
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1    wreg      void 
  6737 ;; Registers used:
  6738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6739 ;; Tracked objects:
  6740 ;;		On entry : 0/0
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6744 ;;      Params:         0       0       2       0       0
  6745 ;;      Locals:         0       0       2       0       0
  6746 ;;      Temps:          0       0       6       0       0
  6747 ;;      Totals:         0       0      10       0       0
  6748 ;;Total ram usage:       10 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:    6
  6751 ;; This function calls:
  6752 ;;		___wmul
  6753 ;;		_spiWrite
  6754 ;; This function is called by:
  6755 ;;		_write_char
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6759                           	line	162
  6760                           global __ptext13
  6761                           __ptext13:	;psect for function _write_font
  6762  166E                     psect	text13
  6763                           	file	"Display.c"
  6764                           	line	162
  6765                           	global	__size_of_write_font
  6766                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  6767  0062                     	
  6768                           _write_font:	
  6769  166E                     ;incstack = 0
  6770 ;; hardware stack exceeded
  6771                           	opt	stack 0
  6772                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6773                           	line	164
  6774                           	
  6775                           l2344:	
  6776  166E                     ;Display.c: 162: void write_font(int fontPos);Display.c: 163: {;Display.c: 164:     for(
                                 int x=0; x < 5; x++){
  6777                           	bsf	status, 5	;RP0=1, select bank1
  6778  166E  1683               	bcf	status, 6	;RP1=0, select bank1
  6779  166F  1303               	clrf	(write_font@x)^080h
  6780  1670  01AE               	clrf	(write_font@x+1)^080h
  6781  1671  01AF               	
  6782                           l2346:	
  6783  1672                     	movf	(write_font@x+1)^080h,w
  6784  1672  082F               	xorlw	80h
  6785  1673  3A80               	movwf	btemp+1
  6786  1674  00FF               	movlw	(0)^80h
  6787  1675  3080               	subwf	btemp+1,w
  6788  1676  027F               	skipz
  6789  1677  1D03               	goto	u2355
  6790  1678  2E7B               	movlw	05h
  6791  1679  3005               	subwf	(write_font@x)^080h,w
  6792  167A  022E               u2355:
  6793  167B                     
  6794                           	skipc
  6795  167B  1C03               	goto	u2351
  6796  167C  2E7E               	goto	u2350
  6797  167D  2E7F               u2351:
  6798  167E                     	goto	l2350
  6799  167E  2E81               u2350:
  6800  167F                     	goto	l167
  6801  167F  2ECF               	
  6802                           l2348:	
  6803  1680                     	goto	l167
  6804  1680  2ECF               	
  6805                           l165:	
  6806  1681                     	line	165
  6807                           	
  6808                           l2350:	
  6809  1681                     ;Display.c: 165:         spiWrite(font[fontPos][x]);
  6810                           	bsf	status, 5	;RP0=1, select bank1
  6811  1681  1683               	bcf	status, 6	;RP1=0, select bank1
  6812  1682  1303               	movf	(write_font@x+1)^080h,w
  6813  1683  082F               	movwf	(??_write_font+0)^080h+0+1
  6814  1684  00A9               	movf	(write_font@x)^080h,w
  6815  1685  082E               	movwf	(??_write_font+0)^080h+0
  6816  1686  00A8               	clrc
  6817  1687  1003               	rlf	(??_write_font+0)^080h+0,f
  6818  1688  0DA8               	rlf	(??_write_font+0)^080h+1,f
  6819  1689  0DA9               	movf	(write_font@fontPos+1)^080h,w
  6820  168A  0827               	movwf	(___wmul@multiplier+1)^080h
  6821  168B  00A1               	movf	(write_font@fontPos)^080h,w
  6822  168C  0826               	movwf	(___wmul@multiplier)^080h
  6823  168D  00A0               	movlw	0Ah
  6824  168E  300A               	movwf	(___wmul@multiplicand)^080h
  6825  168F  00A2               	movlw	0
  6826  1690  3000               	movwf	((___wmul@multiplicand)^080h)+1
  6827  1691  00A3               	fcall	___wmul
  6828  1692  160A  118A  2382  160A  118A  	movlw	low(((_font)|8000h))
  6829  1697  3012               	bsf	status, 5	;RP0=1, select bank1
  6830  1698  1683               	bcf	status, 6	;RP1=0, select bank1
  6831  1699  1303               	movwf	(??_write_font+2)^080h+0
  6832  169A  00AA               	movlw	high(((_font)|8000h))
  6833  169B  3088               	movwf	(??_write_font+2)^080h+0+1
  6834  169C  00AB               	movf	(0+(?___wmul))^080h,w
  6835  169D  0820               	addwf	0+(??_write_font+2)^080h+0,w
  6836  169E  072A               	movwf	(??_write_font+4)^080h+0
  6837  169F  00AC               	movf	(1+(?___wmul))^080h,w
  6838  16A0  0821               	skipnc
  6839  16A1  1803               	incf	(1+(?___wmul))^080h,w
  6840  16A2  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  6841  16A3  072B               	movwf	1+(??_write_font+4)^080h+0
  6842  16A4  00AD               	movf	0+(??_write_font+0)^080h+0,w
  6843  16A5  0828               	addwf	0+(??_write_font+4)^080h+0,w
  6844  16A6  072C               	movwf	fsr0
  6845  16A7  0084               	movf	1+(??_write_font+0)^080h+0,w
  6846  16A8  0829               	skipnc
  6847  16A9  1803               	incf	1+(??_write_font+0)^080h+0,w
  6848  16AA  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  6849  16AB  072D               	bcf	status, 5	;RP0=0, select bank0
  6850  16AC  1283               	bcf	status, 6	;RP1=0, select bank0
  6851  16AD  1303               	movwf	btemp+1
  6852  16AE  00FF               	fcall	stringtab
  6853  16AF  120A  158A  2000  160A  118A  	fcall	_spiWrite
  6854  16B4  160A  118A  234A  160A  118A  	line	166
  6855                           	
  6856                           l2352:	
  6857  16B9                     ;Display.c: 166:     }
  6858                           	movlw	01h
  6859  16B9  3001               	bsf	status, 5	;RP0=1, select bank1
  6860  16BA  1683               	bcf	status, 6	;RP1=0, select bank1
  6861  16BB  1303               	addwf	(write_font@x)^080h,f
  6862  16BC  07AE               	skipnc
  6863  16BD  1803               	incf	(write_font@x+1)^080h,f
  6864  16BE  0AAF               	movlw	0
  6865  16BF  3000               	addwf	(write_font@x+1)^080h,f
  6866  16C0  07AF               	
  6867                           l2354:	
  6868  16C1                     	movf	(write_font@x+1)^080h,w
  6869  16C1  082F               	xorlw	80h
  6870  16C2  3A80               	movwf	btemp+1
  6871  16C3  00FF               	movlw	(0)^80h
  6872  16C4  3080               	subwf	btemp+1,w
  6873  16C5  027F               	skipz
  6874  16C6  1D03               	goto	u2365
  6875  16C7  2ECA               	movlw	05h
  6876  16C8  3005               	subwf	(write_font@x)^080h,w
  6877  16C9  022E               u2365:
  6878  16CA                     
  6879                           	skipc
  6880  16CA  1C03               	goto	u2361
  6881  16CB  2ECD               	goto	u2360
  6882  16CC  2ECE               u2361:
  6883  16CD                     	goto	l2350
  6884  16CD  2E81               u2360:
  6885  16CE                     	goto	l167
  6886  16CE  2ECF               	
  6887                           l166:	
  6888  16CF                     	line	167
  6889                           	
  6890                           l167:	
  6891  16CF                     	return
  6892  16CF  0008               	opt stack 0
  6893                           GLOBAL	__end_of_write_font
  6894                           	__end_of_write_font:
  6895  16D0                     	signat	_write_font,4217
  6896                           	global	___wmul
  6897                           
  6898 ;; *************** function ___wmul *****************
  6899 ;; Defined at:
  6900 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  multiplier      2    0[BANK1 ] unsigned int 
  6903 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  product         2    4[BANK1 ] unsigned int 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    0[BANK1 ] unsigned int 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6915 ;;      Params:         0       0       4       0       0
  6916 ;;      Locals:         0       0       2       0       0
  6917 ;;      Temps:          0       0       0       0       0
  6918 ;;      Totals:         0       0       6       0       0
  6919 ;;Total ram usage:        6 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; Hardware stack levels required when called:    5
  6922 ;; This function calls:
  6923 ;;		Nothing
  6924 ;; This function is called by:
  6925 ;;		_write_font
  6926 ;;		_is_deadzone
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  6930                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  6931                           	line	15
  6932                           global __ptext14
  6933                           __ptext14:	;psect for function ___wmul
  6934  1382                     psect	text14
  6935                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  6936                           	line	15
  6937                           	global	__size_of___wmul
  6938                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  6939  002A                     	
  6940                           ___wmul:	
  6941  1382                     ;incstack = 0
  6942 ;; hardware stack exceeded
  6943                           	opt	stack 0
  6944                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6945                           	line	43
  6946                           	
  6947                           l2330:	
  6948  1382                     	bsf	status, 5	;RP0=1, select bank1
  6949  1382  1683               	bcf	status, 6	;RP1=0, select bank1
  6950  1383  1303               	clrf	(___wmul@product)^080h
  6951  1384  01A4               	clrf	(___wmul@product+1)^080h
  6952  1385  01A5               	goto	l2332
  6953  1386  2B87               	line	44
  6954                           	
  6955                           l502:	
  6956  1387                     	line	45
  6957                           	
  6958                           l2332:	
  6959  1387                     	btfss	(___wmul@multiplier)^080h,(0)&7
  6960  1387  1C20               	goto	u2311
  6961  1388  2B8A               	goto	u2310
  6962  1389  2B8B               u2311:
  6963  138A                     	goto	l503
  6964  138A  2B91               u2310:
  6965  138B                     	line	46
  6966                           	
  6967                           l2334:	
  6968  138B                     	movf	(___wmul@multiplicand)^080h,w
  6969  138B  0822               	addwf	(___wmul@product)^080h,f
  6970  138C  07A4               	skipnc
  6971  138D  1803               	incf	(___wmul@product+1)^080h,f
  6972  138E  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  6973  138F  0823               	addwf	(___wmul@product+1)^080h,f
  6974  1390  07A5               	
  6975                           l503:	
  6976  1391                     	line	47
  6977                           	movlw	01h
  6978  1391  3001               	
  6979                           u2325:
  6980  1392                     	clrc
  6981  1392  1003               	rlf	(___wmul@multiplicand)^080h,f
  6982  1393  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  6983  1394  0DA3               	addlw	-1
  6984  1395  3EFF               	skipz
  6985  1396  1D03               	goto	u2325
  6986  1397  2B92               	line	48
  6987                           	
  6988                           l2336:	
  6989  1398                     	movlw	01h
  6990  1398  3001               	
  6991                           u2335:
  6992  1399                     	clrc
  6993  1399  1003               	rrf	(___wmul@multiplier+1)^080h,f
  6994  139A  0CA1               	rrf	(___wmul@multiplier)^080h,f
  6995  139B  0CA0               	addlw	-1
  6996  139C  3EFF               	skipz
  6997  139D  1D03               	goto	u2335
  6998  139E  2B99               	line	49
  6999                           	
  7000                           l2338:	
  7001  139F                     	movf	((___wmul@multiplier)^080h),w
  7002  139F  0820               iorwf	((___wmul@multiplier+1)^080h),w
  7003  13A0  0421               	btfss	status,2
  7004  13A1  1D03               	goto	u2341
  7005  13A2  2BA4               	goto	u2340
  7006  13A3  2BA5               u2341:
  7007  13A4                     	goto	l2332
  7008  13A4  2B87               u2340:
  7009  13A5                     	goto	l2340
  7010  13A5  2BA6               	
  7011                           l504:	
  7012  13A6                     	line	52
  7013                           	
  7014                           l2340:	
  7015  13A6                     	movf	(___wmul@product+1)^080h,w
  7016  13A6  0825               	movwf	(?___wmul+1)^080h
  7017  13A7  00A1               	movf	(___wmul@product)^080h,w
  7018  13A8  0824               	movwf	(?___wmul)^080h
  7019  13A9  00A0               	goto	l505
  7020  13AA  2BAB               	
  7021                           l2342:	
  7022  13AB                     	line	53
  7023                           	
  7024                           l505:	
  7025  13AB                     	return
  7026  13AB  0008               	opt stack 0
  7027                           GLOBAL	__end_of___wmul
  7028                           	__end_of___wmul:
  7029  13AC                     	signat	___wmul,8314
  7030                           	global	_sprintf
  7031                           
  7032 ;; *************** function _sprintf *****************
  7033 ;; Defined at:
  7034 ;;		line 500 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;  sp              1    wreg     PTR unsigned char 
  7037 ;;		 -> write_int@num(2), 
  7038 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  7039 ;;		 -> STR_3(3), 
  7040 ;; Auto vars:     Size  Location     Type
  7041 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  7042 ;;		 -> write_int@num(2), 
  7043 ;;  tmpval          4    0        struct .
  7044 ;;  val             2   25[BANK1 ] unsigned int 
  7045 ;;  cp              2    0        PTR const unsigned char 
  7046 ;;  len             2    0        unsigned int 
  7047 ;;  c               1   28[BANK1 ] unsigned char 
  7048 ;;  prec            1   24[BANK1 ] char 
  7049 ;;  flag            1   23[BANK1 ] unsigned char 
  7050 ;;  ap              1   22[BANK1 ] PTR void [1]
  7051 ;;		 -> ?_sprintf(2), 
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  2   14[BANK1 ] int 
  7054 ;; Registers used:
  7055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7061 ;;      Params:         0       0       4       0       0
  7062 ;;      Locals:         0       0       7       0       0
  7063 ;;      Temps:          0       0       4       0       0
  7064 ;;      Totals:         0       0      15       0       0
  7065 ;;Total ram usage:       15 bytes
  7066 ;; Hardware stack levels used:    1
  7067 ;; Hardware stack levels required when called:    6
  7068 ;; This function calls:
  7069 ;;		___lwdiv
  7070 ;;		___lwmod
  7071 ;; This function is called by:
  7072 ;;		_write_int
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7076                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  7077                           	line	500
  7078                           global __ptext15
  7079                           __ptext15:	;psect for function _sprintf
  7080  012D                     psect	text15
  7081                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  7082                           	line	500
  7083                           	global	__size_of_sprintf
  7084                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  7085  0136                     	
  7086                           _sprintf:	
  7087  012D                     ;incstack = 0
  7088 ;; hardware stack exceeded
  7089                           	opt	stack 0
  7090                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7091                           ;sprintf@sp stored from wreg
  7092                           	bsf	status, 5	;RP0=1, select bank1
  7093  012D  1683               	bcf	status, 6	;RP1=0, select bank1
  7094  012E  1303               	movwf	(sprintf@sp)^080h
  7095  012F  00BB               	line	545
  7096                           	
  7097                           l2998:	
  7098  0130                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
                                  char * f, ...);/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
                                 crochip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.00/pic/source
                                 s/c90/common/doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.00/pic/sources/c90/
                                 common/doprnt.c: 520:  unsigned char flag;;/opt/microchip/xc8/v2.00/pic/sources/c90/comm
                                 on/doprnt.c: 538:  } tmpval;
  7099                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  7100  0130  30B0               	movwf	(??_sprintf+0)^080h+0
  7101  0131  00B2               	movf	(??_sprintf+0)^080h+0,w
  7102  0132  0832               	movwf	(sprintf@ap)^080h
  7103  0133  00B6               	line	548
  7104                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  7105                           	goto	l3050
  7106  0134  2A3B               	
  7107                           l481:	
  7108  0135                     	line	550
  7109                           	
  7110                           l3000:	
  7111  0135                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  7112                           		movlw	37
  7113  0135  3025               	xorwf	((sprintf@c)^080h),w
  7114  0136  063C               	btfsc	status,2
  7115  0137  1903               	goto	u4011
  7116  0138  293A               	goto	u4010
  7117  0139  293B               u4011:
  7118  013A                     	goto	l3006
  7119  013A  2947               u4010:
  7120  013B                     	line	553
  7121                           	
  7122                           l3002:	
  7123  013B                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
                                 2.00/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  7124                           	movf	(sprintf@c)^080h,w
  7125  013B  083C               	movwf	(??_sprintf+0)^080h+0
  7126  013C  00B2               	movf	(sprintf@sp)^080h,w
  7127  013D  083B               	movwf	fsr0
  7128  013E  0084               	movf	(??_sprintf+0)^080h+0,w
  7129  013F  0832               	bcf	status, 7	;select IRP bank0
  7130  0140  1383               	movwf	indf
  7131  0141  0080               	
  7132                           l3004:	
  7133  0142                     	movlw	low(01h)
  7134  0142  3001               	movwf	(??_sprintf+0)^080h+0
  7135  0143  00B2               	movf	(??_sprintf+0)^080h+0,w
  7136  0144  0832               	addwf	(sprintf@sp)^080h,f
  7137  0145  07BB               	line	554
  7138                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 554:    continue;
  7139                           	goto	l3050
  7140  0146  2A3B               	line	555
  7141                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 555:   }
  7142                           	
  7143                           l482:	
  7144  0147                     	line	560
  7145                           	
  7146                           l3006:	
  7147  0147                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  7148                           	clrf	(sprintf@flag)^080h
  7149  0147  01B7               	line	654
  7150                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 654:   switch(c = *f++) {
  7151                           	goto	l3010
  7152  0148  294E               	line	656
  7153                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 656:   case 0:
  7154                           	
  7155                           l484:	
  7156  0149                     	line	657
  7157                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 657:    goto alldone;
  7158                           	goto	l3052
  7159  0149  2A5D               	line	716
  7160                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 716:   case 'd':
  7161                           	
  7162                           l486:	
  7163  014A                     	goto	l3012
  7164  014A  2979               	line	717
  7165                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 717:   case 'i':
  7166                           	
  7167                           l487:	
  7168  014B                     	line	718
  7169                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 718:    break;
  7170                           	goto	l3012
  7171  014B  2979               	line	821
  7172                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 821:   default:
  7173                           	
  7174                           l489:	
  7175  014C                     	line	832
  7176                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 832:    continue;
  7177                           	goto	l3050
  7178  014C  2A3B               	line	841
  7179                           	
  7180                           l3008:	
  7181  014D                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 841:   }
  7182                           	goto	l3012
  7183  014D  2979               	
  7184                           l483:	
  7185  014E                     	
  7186                           l3010:	
  7187  014E                     	movf	(sprintf@f+1)^080h,w
  7188  014E  082F               	movwf	(??_sprintf+0)^080h+0+1
  7189  014F  00B3               	movf	(sprintf@f)^080h,w
  7190  0150  082E               	movwf	(??_sprintf+0)^080h+0
  7191  0151  00B2               	incf	(sprintf@f)^080h,f
  7192  0152  0AAE               	skipnz
  7193  0153  1903               	incf	(sprintf@f+1)^080h,f
  7194  0154  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  7195  0155  0833               	bcf	status, 5	;RP0=0, select bank0
  7196  0156  1283               	bcf	status, 6	;RP1=0, select bank0
  7197  0157  1303               	movwf	btemp+1
  7198  0158  00FF               	bsf	status, 5	;RP0=1, select bank1
  7199  0159  1683               	bcf	status, 6	;RP1=0, select bank1
  7200  015A  1303               	movf	0+(??_sprintf+0)^080h+0,w
  7201  015B  0832               	movwf	fsr0
  7202  015C  0084               	bcf	status, 5	;RP0=0, select bank0
  7203  015D  1283               	bcf	status, 6	;RP1=0, select bank0
  7204  015E  1303               	fcall	stringtab
  7205  015F  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7206  0164  1683               	bcf	status, 6	;RP1=0, select bank1
  7207  0165  1303               	movwf	(sprintf@c)^080h
  7208  0166  00BC               	movwf	(??_sprintf+2)^080h+0
  7209  0167  00B4               	clrf	(??_sprintf+2)^080h+0+1
  7210  0168  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7211                           ; Switch size 1, requested type "space"
  7212                           ; Number of cases is 1, Range of values is 0 to 0
  7213                           ; switch strategies available:
  7214                           ; Name         Instructions Cycles
  7215                           ; simple_byte            4     3 (average)
  7216                           ; direct_byte           11     8 (fixed)
  7217                           ; jumptable            260     6 (fixed)
  7218                           ;	Chosen strategy is simple_byte
  7219                           
  7220                           	movf 1+(??_sprintf+2)^080h+0,w
  7221  0169  0835               	opt asmopt_push
  7222                           	opt asmopt_off
  7223                           	xorlw	0^0	; case 0
  7224  016A  3A00               	skipnz
  7225  016B  1903               	goto	l3666
  7226  016C  296E               	goto	l3050
  7227  016D  2A3B               	opt asmopt_pop
  7228                           	
  7229                           l3666:	
  7230  016E                     ; Switch size 1, requested type "space"
  7231                           ; Number of cases is 3, Range of values is 0 to 105
  7232                           ; switch strategies available:
  7233                           ; Name         Instructions Cycles
  7234                           ; simple_byte           10     6 (average)
  7235                           ; jumptable            260     6 (fixed)
  7236                           ;	Chosen strategy is simple_byte
  7237                           
  7238                           	movf 0+(??_sprintf+2)^080h+0,w
  7239  016E  0834               	opt asmopt_push
  7240                           	opt asmopt_off
  7241                           	xorlw	0^0	; case 0
  7242  016F  3A00               	skipnz
  7243  0170  1903               	goto	l3052
  7244  0171  2A5D               	xorlw	100^0	; case 100
  7245  0172  3A64               	skipnz
  7246  0173  1903               	goto	l3012
  7247  0174  2979               	xorlw	105^100	; case 105
  7248  0175  3A0D               	skipnz
  7249  0176  1903               	goto	l3012
  7250  0177  2979               	goto	l3050
  7251  0178  2A3B               	opt asmopt_pop
  7252                           
  7253                           	
  7254                           l488:	
  7255  0179                     	line	1278
  7256                           	
  7257                           l3012:	
  7258  0179                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
                                 ap), (int)0));
  7259                           	movf	(sprintf@ap)^080h,w
  7260  0179  0836               	movwf	fsr0
  7261  017A  0084               	bcf	status, 7	;select IRP bank0
  7262  017B  1383               	movf	indf,w
  7263  017C  0800               	movwf	(sprintf@val)^080h
  7264  017D  00B9               	incf	fsr0,f
  7265  017E  0A84               	movf	indf,w
  7266  017F  0800               	movwf	(sprintf@val+1)^080h
  7267  0180  00BA               	
  7268                           l3014:	
  7269  0181                     	movlw	low(02h)
  7270  0181  3002               	movwf	(??_sprintf+0)^080h+0
  7271  0182  00B2               	movf	(??_sprintf+0)^080h+0,w
  7272  0183  0832               	addwf	(sprintf@ap)^080h,f
  7273  0184  07B6               	line	1280
  7274                           	
  7275                           l3016:	
  7276  0185                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  7277                           	btfss	(sprintf@val+1)^080h,7
  7278  0185  1FBA               	goto	u4021
  7279  0186  2988               	goto	u4020
  7280  0187  2989               u4021:
  7281  0188                     	goto	l3022
  7282  0188  2993               u4020:
  7283  0189                     	line	1281
  7284                           	
  7285                           l3018:	
  7286  0189                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  7287                           	movlw	low(03h)
  7288  0189  3003               	movwf	(??_sprintf+0)^080h+0
  7289  018A  00B2               	movf	(??_sprintf+0)^080h+0,w
  7290  018B  0832               	iorwf	(sprintf@flag)^080h,f
  7291  018C  04B7               	line	1282
  7292                           	
  7293                           l3020:	
  7294  018D                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  7295                           	comf	(sprintf@val)^080h,f
  7296  018D  09B9               	comf	(sprintf@val+1)^080h,f
  7297  018E  09BA               	incf	(sprintf@val)^080h,f
  7298  018F  0AB9               	skipnz
  7299  0190  1903               	incf	(sprintf@val+1)^080h,f
  7300  0191  0ABA               	goto	l3022
  7301  0192  2993               	line	1283
  7302                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1283:    }
  7303                           	
  7304                           l490:	
  7305  0193                     	line	1324
  7306                           	
  7307                           l3022:	
  7308  0193                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
                                 powers[0] ; c++)
  7309                           	clrf	(sprintf@c)^080h
  7310  0193  01BC               	incf	(sprintf@c)^080h,f
  7311  0194  0ABC               	
  7312                           l3024:	
  7313  0195                     		movlw	5
  7314  0195  3005               	xorwf	((sprintf@c)^080h),w
  7315  0196  063C               	btfss	status,2
  7316  0197  1D03               	goto	u4031
  7317  0198  299A               	goto	u4030
  7318  0199  299B               u4031:
  7319  019A                     	goto	l3028
  7320  019A  299D               u4030:
  7321  019B                     	goto	l3034
  7322  019B  29D1               	
  7323                           l3026:	
  7324  019C                     	goto	l3034
  7325  019C  29D1               	
  7326                           l491:	
  7327  019D                     	line	1325
  7328                           	
  7329                           l3028:	
  7330  019D                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
                                 )
  7331                           	movf	(sprintf@c)^080h,w
  7332  019D  083C               	movwf	(??_sprintf+0)^080h+0
  7333  019E  00B2               	addwf	(??_sprintf+0)^080h+0,w
  7334  019F  0732               	addlw	low(((_dpowers)|8000h))
  7335  01A0  3E84               	movwf	fsr0
  7336  01A1  0084               	movlw	high(((_dpowers)|8000h))
  7337  01A2  3089               	skipnc
  7338  01A3  1803               	addlw	1
  7339  01A4  3E01               	bcf	status, 5	;RP0=0, select bank0
  7340  01A5  1283               	bcf	status, 6	;RP1=0, select bank0
  7341  01A6  1303               	movwf	btemp+1
  7342  01A7  00FF               	fcall	stringtab
  7343  01A8  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7344  01AD  1683               	bcf	status, 6	;RP1=0, select bank1
  7345  01AE  1303               	movwf	(??_sprintf+1)^080h+0
  7346  01AF  00B3               	bcf	status, 5	;RP0=0, select bank0
  7347  01B0  1283               	bcf	status, 6	;RP1=0, select bank0
  7348  01B1  1303               	fcall	stringtab
  7349  01B2  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7350  01B7  1683               	bcf	status, 6	;RP1=0, select bank1
  7351  01B8  1303               	movwf	(??_sprintf+1)^080h+0+1
  7352  01B9  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  7353  01BA  0834               	subwf	(sprintf@val+1)^080h,w
  7354  01BB  023A               	skipz
  7355  01BC  1D03               	goto	u4045
  7356  01BD  29C0               	movf	0+(??_sprintf+1)^080h+0,w
  7357  01BE  0833               	subwf	(sprintf@val)^080h,w
  7358  01BF  0239               u4045:
  7359  01C0                     	skipnc
  7360  01C0  1803               	goto	u4041
  7361  01C1  29C3               	goto	u4040
  7362  01C2  29C4               u4041:
  7363  01C3                     	goto	l3032
  7364  01C3  29C6               u4040:
  7365  01C4                     	goto	l3034
  7366  01C4  29D1               	line	1326
  7367                           	
  7368                           l3030:	
  7369  01C5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1326:      break;
  7370                           	goto	l3034
  7371  01C5  29D1               	
  7372                           l493:	
  7373  01C6                     	
  7374                           l3032:	
  7375  01C6                     	movlw	low(01h)
  7376  01C6  3001               	movwf	(??_sprintf+0)^080h+0
  7377  01C7  00B2               	movf	(??_sprintf+0)^080h+0,w
  7378  01C8  0832               	addwf	(sprintf@c)^080h,f
  7379  01C9  07BC               		movlw	5
  7380  01CA  3005               	xorwf	((sprintf@c)^080h),w
  7381  01CB  063C               	btfss	status,2
  7382  01CC  1D03               	goto	u4051
  7383  01CD  29CF               	goto	u4050
  7384  01CE  29D0               u4051:
  7385  01CF                     	goto	l3028
  7386  01CF  299D               u4050:
  7387  01D0                     	goto	l3034
  7388  01D0  29D1               	
  7389                           l492:	
  7390  01D1                     	line	1457
  7391                           	
  7392                           l3034:	
  7393  01D1                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  7394                           	movf	(sprintf@flag)^080h,w
  7395  01D1  0837               	andlw	03h
  7396  01D2  3903               	btfsc	status,2
  7397  01D3  1903               	goto	u4061
  7398  01D4  29D6               	goto	u4060
  7399  01D5  29D7               u4061:
  7400  01D6                     	goto	l3040
  7401  01D6  29E3               u4060:
  7402  01D7                     	line	1458
  7403                           	
  7404                           l3036:	
  7405  01D7                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));

  7406                           	movlw	low(02Dh)
  7407  01D7  302D               	movwf	(??_sprintf+0)^080h+0
  7408  01D8  00B2               	movf	(sprintf@sp)^080h,w
  7409  01D9  083B               	movwf	fsr0
  7410  01DA  0084               	movf	(??_sprintf+0)^080h+0,w
  7411  01DB  0832               	bcf	status, 7	;select IRP bank0
  7412  01DC  1383               	movwf	indf
  7413  01DD  0080               	
  7414                           l3038:	
  7415  01DE                     	movlw	low(01h)
  7416  01DE  3001               	movwf	(??_sprintf+0)^080h+0
  7417  01DF  00B2               	movf	(??_sprintf+0)^080h+0,w
  7418  01E0  0832               	addwf	(sprintf@sp)^080h,f
  7419  01E1  07BB               	goto	l3040
  7420  01E2  29E3               	
  7421                           l494:	
  7422  01E3                     	line	1491
  7423                           	
  7424                           l3040:	
  7425  01E3                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  7426                           	movf	(sprintf@c)^080h,w
  7427  01E3  083C               	movwf	(??_sprintf+0)^080h+0
  7428  01E4  00B2               	movf	(??_sprintf+0)^080h+0,w
  7429  01E5  0832               	movwf	(sprintf@prec)^080h
  7430  01E6  00B8               	line	1493
  7431                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  7432                           	goto	l3048
  7433  01E7  2A30               	
  7434                           l496:	
  7435  01E8                     	line	1508
  7436                           	
  7437                           l3042:	
  7438  01E8                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';

  7439                           	movlw	0Ah
  7440  01E8  300A               	movwf	(___lwmod@divisor)^080h
  7441  01E9  00A8               	movlw	0
  7442  01EA  3000               	movwf	((___lwmod@divisor)^080h)+1
  7443  01EB  00A9               	movf	(sprintf@prec)^080h,w
  7444  01EC  0838               	movwf	(??_sprintf+0)^080h+0
  7445  01ED  00B2               	addwf	(??_sprintf+0)^080h+0,w
  7446  01EE  0732               	addlw	low(((_dpowers)|8000h))
  7447  01EF  3E84               	movwf	fsr0
  7448  01F0  0084               	movlw	high(((_dpowers)|8000h))
  7449  01F1  3089               	skipnc
  7450  01F2  1803               	addlw	1
  7451  01F3  3E01               	bcf	status, 5	;RP0=0, select bank0
  7452  01F4  1283               	bcf	status, 6	;RP1=0, select bank0
  7453  01F5  1303               	movwf	btemp+1
  7454  01F6  00FF               	fcall	stringtab
  7455  01F7  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7456  01FC  1683               	bcf	status, 6	;RP1=0, select bank1
  7457  01FD  1303               	movwf	(___lwdiv@divisor)^080h
  7458  01FE  00A0               	bcf	status, 5	;RP0=0, select bank0
  7459  01FF  1283               	bcf	status, 6	;RP1=0, select bank0
  7460  0200  1303               	fcall	stringtab
  7461  0201  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7462  0206  1683               	bcf	status, 6	;RP1=0, select bank1
  7463  0207  1303               	movwf	(___lwdiv@divisor+1)^080h
  7464  0208  00A1               	movf	(sprintf@val+1)^080h,w
  7465  0209  083A               	movwf	(___lwdiv@dividend+1)^080h
  7466  020A  00A3               	movf	(sprintf@val)^080h,w
  7467  020B  0839               	movwf	(___lwdiv@dividend)^080h
  7468  020C  00A2               	fcall	___lwdiv
  7469  020D  160A  118A  257D  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7470  0212  1683               	bcf	status, 6	;RP1=0, select bank1
  7471  0213  1303               	movf	(1+(?___lwdiv))^080h,w
  7472  0214  0821               	movwf	(___lwmod@dividend+1)^080h
  7473  0215  00AB               	movf	(0+(?___lwdiv))^080h,w
  7474  0216  0820               	movwf	(___lwmod@dividend)^080h
  7475  0217  00AA               	fcall	___lwmod
  7476  0218  160A  118A  24EF  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7477  021D  1683               	bcf	status, 6	;RP1=0, select bank1
  7478  021E  1303               	movf	(0+(?___lwmod))^080h,w
  7479  021F  0828               	addlw	030h
  7480  0220  3E30               	movwf	(??_sprintf+1)^080h+0
  7481  0221  00B3               	movf	(??_sprintf+1)^080h+0,w
  7482  0222  0833               	movwf	(sprintf@c)^080h
  7483  0223  00BC               	line	1543
  7484                           	
  7485                           l3044:	
  7486  0224                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  7487                           	movf	(sprintf@c)^080h,w
  7488  0224  083C               	movwf	(??_sprintf+0)^080h+0
  7489  0225  00B2               	movf	(sprintf@sp)^080h,w
  7490  0226  083B               	movwf	fsr0
  7491  0227  0084               	movf	(??_sprintf+0)^080h+0,w
  7492  0228  0832               	bcf	status, 7	;select IRP bank0
  7493  0229  1383               	movwf	indf
  7494  022A  0080               	
  7495                           l3046:	
  7496  022B                     	movlw	low(01h)
  7497  022B  3001               	movwf	(??_sprintf+0)^080h+0
  7498  022C  00B2               	movf	(??_sprintf+0)^080h+0,w
  7499  022D  0832               	addwf	(sprintf@sp)^080h,f
  7500  022E  07BB               	goto	l3048
  7501  022F  2A30               	line	1544
  7502                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1544:   }
  7503                           	
  7504                           l495:	
  7505  0230                     	line	1493
  7506                           	
  7507                           l3048:	
  7508  0230                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  7509                           	movlw	low(-1)
  7510  0230  30FF               	movwf	(??_sprintf+0)^080h+0
  7511  0231  00B2               	movf	(??_sprintf+0)^080h+0,w
  7512  0232  0832               	addwf	(sprintf@prec)^080h,f
  7513  0233  07B8               		incf	(((sprintf@prec)^080h)),w
  7514  0234  0A38               	btfss	status,2
  7515  0235  1D03               	goto	u4071
  7516  0236  2A38               	goto	u4070
  7517  0237  2A39               u4071:
  7518  0238                     	goto	l3042
  7519  0238  29E8               u4070:
  7520  0239                     	goto	l3050
  7521  0239  2A3B               	
  7522                           l497:	
  7523  023A                     	goto	l3050
  7524  023A  2A3B               	line	1552
  7525                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1552:  }
  7526                           	
  7527                           l480:	
  7528  023B                     	line	548
  7529                           	
  7530                           l3050:	
  7531  023B                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  7532                           	movf	(sprintf@f+1)^080h,w
  7533  023B  082F               	movwf	(??_sprintf+0)^080h+0+1
  7534  023C  00B3               	movf	(sprintf@f)^080h,w
  7535  023D  082E               	movwf	(??_sprintf+0)^080h+0
  7536  023E  00B2               	incf	(sprintf@f)^080h,f
  7537  023F  0AAE               	skipnz
  7538  0240  1903               	incf	(sprintf@f+1)^080h,f
  7539  0241  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  7540  0242  0833               	bcf	status, 5	;RP0=0, select bank0
  7541  0243  1283               	bcf	status, 6	;RP1=0, select bank0
  7542  0244  1303               	movwf	btemp+1
  7543  0245  00FF               	bsf	status, 5	;RP0=1, select bank1
  7544  0246  1683               	bcf	status, 6	;RP1=0, select bank1
  7545  0247  1303               	movf	0+(??_sprintf+0)^080h+0,w
  7546  0248  0832               	movwf	fsr0
  7547  0249  0084               	bcf	status, 5	;RP0=0, select bank0
  7548  024A  1283               	bcf	status, 6	;RP1=0, select bank0
  7549  024B  1303               	fcall	stringtab
  7550  024C  120A  158A  2000  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  7551  0251  1683               	bcf	status, 6	;RP1=0, select bank1
  7552  0252  1303               	movwf	(??_sprintf+2)^080h+0
  7553  0253  00B4               	movf	(??_sprintf+2)^080h+0,w
  7554  0254  0834               	movwf	(sprintf@c)^080h
  7555  0255  00BC               	movf	(((sprintf@c)^080h)),w
  7556  0256  083C               	btfss	status,2
  7557  0257  1D03               	goto	u4081
  7558  0258  2A5A               	goto	u4080
  7559  0259  2A5B               u4081:
  7560  025A                     	goto	l3000
  7561  025A  2935               u4080:
  7562  025B                     	goto	l3052
  7563  025B  2A5D               	
  7564                           l498:	
  7565  025C                     	goto	l3052
  7566  025C  2A5D               	line	1554
  7567                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1554: alldone:
  7568                           	
  7569                           l485:	
  7570  025D                     	line	1557
  7571                           	
  7572                           l3052:	
  7573  025D                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  7574                           	movf	(sprintf@sp)^080h,w
  7575  025D  083B               	movwf	fsr0
  7576  025E  0084               	bcf	status, 7	;select IRP bank0
  7577  025F  1383               	clrf	indf
  7578  0260  0180               	goto	l499
  7579  0261  2A62               	line	1559
  7580                           	
  7581                           l3054:	
  7582  0262                     	line	1560
  7583                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1559:  return 0;;	Return valu
                                 e of _sprintf is never used
  7584                           	
  7585                           l499:	
  7586  0262                     	return
  7587  0262  0008               	opt stack 0
  7588                           GLOBAL	__end_of_sprintf
  7589                           	__end_of_sprintf:
  7590  0263                     	signat	_sprintf,4698
  7591                           	global	___lwmod
  7592                           
  7593 ;; *************** function ___lwmod *****************
  7594 ;; Defined at:
  7595 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;  divisor         2    8[BANK1 ] unsigned int 
  7598 ;;  dividend        2   10[BANK1 ] unsigned int 
  7599 ;; Auto vars:     Size  Location     Type
  7600 ;;  counter         1   13[BANK1 ] unsigned char 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  2    8[BANK1 ] unsigned int 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7610 ;;      Params:         0       0       4       0       0
  7611 ;;      Locals:         0       0       1       0       0
  7612 ;;      Temps:          0       0       1       0       0
  7613 ;;      Totals:         0       0       6       0       0
  7614 ;;Total ram usage:        6 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:    5
  7617 ;; This function calls:
  7618 ;;		Nothing
  7619 ;; This function is called by:
  7620 ;;		_sprintf
  7621 ;; This function uses a non-reentrant model
  7622 ;;
  7623                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  7624                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  7625                           	line	5
  7626                           global __ptext16
  7627                           __ptext16:	;psect for function ___lwmod
  7628  14EF                     psect	text16
  7629                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  7630                           	line	5
  7631                           	global	__size_of___lwmod
  7632                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7633  0043                     	
  7634                           ___lwmod:	
  7635  14EF                     ;incstack = 0
  7636 ;; hardware stack exceeded
  7637                           	opt	stack 0
  7638                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7639                           	line	12
  7640                           	
  7641                           l2442:	
  7642  14EF                     	bsf	status, 5	;RP0=1, select bank1
  7643  14EF  1683               	bcf	status, 6	;RP1=0, select bank1
  7644  14F0  1303               	movf	((___lwmod@divisor)^080h),w
  7645  14F1  0828               iorwf	((___lwmod@divisor+1)^080h),w
  7646  14F2  0429               	btfsc	status,2
  7647  14F3  1903               	goto	u2601
  7648  14F4  2CF6               	goto	u2600
  7649  14F5  2CF7               u2601:
  7650  14F6                     	goto	l2460
  7651  14F6  2D2C               u2600:
  7652  14F7                     	line	13
  7653                           	
  7654                           l2444:	
  7655  14F7                     	clrf	(___lwmod@counter)^080h
  7656  14F7  01AD               	incf	(___lwmod@counter)^080h,f
  7657  14F8  0AAD               	line	14
  7658                           	goto	l2450
  7659  14F9  2D06               	
  7660                           l780:	
  7661  14FA                     	line	15
  7662                           	
  7663                           l2446:	
  7664  14FA                     	movlw	01h
  7665  14FA  3001               	
  7666                           u2615:
  7667  14FB                     	clrc
  7668  14FB  1003               	rlf	(___lwmod@divisor)^080h,f
  7669  14FC  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  7670  14FD  0DA9               	addlw	-1
  7671  14FE  3EFF               	skipz
  7672  14FF  1D03               	goto	u2615
  7673  1500  2CFB               	line	16
  7674                           	
  7675                           l2448:	
  7676  1501                     	movlw	low(01h)
  7677  1501  3001               	movwf	(??___lwmod+0)^080h+0
  7678  1502  00AC               	movf	(??___lwmod+0)^080h+0,w
  7679  1503  082C               	addwf	(___lwmod@counter)^080h,f
  7680  1504  07AD               	goto	l2450
  7681  1505  2D06               	line	17
  7682                           	
  7683                           l779:	
  7684  1506                     	line	14
  7685                           	
  7686                           l2450:	
  7687  1506                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  7688  1506  1FA9               	goto	u2621
  7689  1507  2D09               	goto	u2620
  7690  1508  2D0A               u2621:
  7691  1509                     	goto	l2446
  7692  1509  2CFA               u2620:
  7693  150A                     	goto	l2452
  7694  150A  2D0C               	
  7695                           l781:	
  7696  150B                     	goto	l2452
  7697  150B  2D0C               	line	18
  7698                           	
  7699                           l782:	
  7700  150C                     	line	19
  7701                           	
  7702                           l2452:	
  7703  150C                     	movf	(___lwmod@divisor+1)^080h,w
  7704  150C  0829               	subwf	(___lwmod@dividend+1)^080h,w
  7705  150D  022B               	skipz
  7706  150E  1D03               	goto	u2635
  7707  150F  2D12               	movf	(___lwmod@divisor)^080h,w
  7708  1510  0828               	subwf	(___lwmod@dividend)^080h,w
  7709  1511  022A               u2635:
  7710  1512                     	skipc
  7711  1512  1C03               	goto	u2631
  7712  1513  2D15               	goto	u2630
  7713  1514  2D16               u2631:
  7714  1515                     	goto	l2456
  7715  1515  2D1D               u2630:
  7716  1516                     	line	20
  7717                           	
  7718                           l2454:	
  7719  1516                     	movf	(___lwmod@divisor)^080h,w
  7720  1516  0828               	subwf	(___lwmod@dividend)^080h,f
  7721  1517  02AA               	movf	(___lwmod@divisor+1)^080h,w
  7722  1518  0829               	skipc
  7723  1519  1C03               	decf	(___lwmod@dividend+1)^080h,f
  7724  151A  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  7725  151B  02AB               	goto	l2456
  7726  151C  2D1D               	
  7727                           l783:	
  7728  151D                     	line	21
  7729                           	
  7730                           l2456:	
  7731  151D                     	movlw	01h
  7732  151D  3001               	
  7733                           u2645:
  7734  151E                     	clrc
  7735  151E  1003               	rrf	(___lwmod@divisor+1)^080h,f
  7736  151F  0CA9               	rrf	(___lwmod@divisor)^080h,f
  7737  1520  0CA8               	addlw	-1
  7738  1521  3EFF               	skipz
  7739  1522  1D03               	goto	u2645
  7740  1523  2D1E               	line	22
  7741                           	
  7742                           l2458:	
  7743  1524                     	movlw	01h
  7744  1524  3001               	subwf	(___lwmod@counter)^080h,f
  7745  1525  02AD               	btfss	status,2
  7746  1526  1D03               	goto	u2651
  7747  1527  2D29               	goto	u2650
  7748  1528  2D2A               u2651:
  7749  1529                     	goto	l2452
  7750  1529  2D0C               u2650:
  7751  152A                     	goto	l2460
  7752  152A  2D2C               	
  7753                           l784:	
  7754  152B                     	goto	l2460
  7755  152B  2D2C               	line	23
  7756                           	
  7757                           l778:	
  7758  152C                     	line	24
  7759                           	
  7760                           l2460:	
  7761  152C                     	movf	(___lwmod@dividend+1)^080h,w
  7762  152C  082B               	movwf	(?___lwmod+1)^080h
  7763  152D  00A9               	movf	(___lwmod@dividend)^080h,w
  7764  152E  082A               	movwf	(?___lwmod)^080h
  7765  152F  00A8               	goto	l785
  7766  1530  2D31               	
  7767                           l2462:	
  7768  1531                     	line	25
  7769                           	
  7770                           l785:	
  7771  1531                     	return
  7772  1531  0008               	opt stack 0
  7773                           GLOBAL	__end_of___lwmod
  7774                           	__end_of___lwmod:
  7775  1532                     	signat	___lwmod,8314
  7776                           	global	___lwdiv
  7777                           
  7778 ;; *************** function ___lwdiv *****************
  7779 ;; Defined at:
  7780 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;  divisor         2    0[BANK1 ] unsigned int 
  7783 ;;  dividend        2    2[BANK1 ] unsigned int 
  7784 ;; Auto vars:     Size  Location     Type
  7785 ;;  quotient        2    5[BANK1 ] unsigned int 
  7786 ;;  counter         1    7[BANK1 ] unsigned char 
  7787 ;; Return value:  Size  Location     Type
  7788 ;;                  2    0[BANK1 ] unsigned int 
  7789 ;; Registers used:
  7790 ;;		wreg, status,2, status,0
  7791 ;; Tracked objects:
  7792 ;;		On entry : 0/0
  7793 ;;		On exit  : 0/0
  7794 ;;		Unchanged: 0/0
  7795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7796 ;;      Params:         0       0       4       0       0
  7797 ;;      Locals:         0       0       3       0       0
  7798 ;;      Temps:          0       0       1       0       0
  7799 ;;      Totals:         0       0       8       0       0
  7800 ;;Total ram usage:        8 bytes
  7801 ;; Hardware stack levels used:    1
  7802 ;; Hardware stack levels required when called:    5
  7803 ;; This function calls:
  7804 ;;		Nothing
  7805 ;; This function is called by:
  7806 ;;		_get_volume
  7807 ;;		_sprintf
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  7811                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7812                           	line	5
  7813                           global __ptext17
  7814                           __ptext17:	;psect for function ___lwdiv
  7815  157D                     psect	text17
  7816                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7817                           	line	5
  7818                           	global	__size_of___lwdiv
  7819                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7820  004D                     	
  7821                           ___lwdiv:	
  7822  157D                     ;incstack = 0
  7823 ;; hardware stack exceeded
  7824                           	opt	stack 0
  7825                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7826                           	line	13
  7827                           	
  7828                           l2416:	
  7829  157D                     	bsf	status, 5	;RP0=1, select bank1
  7830  157D  1683               	bcf	status, 6	;RP1=0, select bank1
  7831  157E  1303               	clrf	(___lwdiv@quotient)^080h
  7832  157F  01A5               	clrf	(___lwdiv@quotient+1)^080h
  7833  1580  01A6               	line	14
  7834                           	
  7835                           l2418:	
  7836  1581                     	movf	((___lwdiv@divisor)^080h),w
  7837  1581  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  7838  1582  0421               	btfsc	status,2
  7839  1583  1903               	goto	u2531
  7840  1584  2D86               	goto	u2530
  7841  1585  2D87               u2531:
  7842  1586                     	goto	l2438
  7843  1586  2DC4               u2530:
  7844  1587                     	line	15
  7845                           	
  7846                           l2420:	
  7847  1587                     	clrf	(___lwdiv@counter)^080h
  7848  1587  01A7               	incf	(___lwdiv@counter)^080h,f
  7849  1588  0AA7               	line	16
  7850                           	goto	l2426
  7851  1589  2D96               	
  7852                           l770:	
  7853  158A                     	line	17
  7854                           	
  7855                           l2422:	
  7856  158A                     	movlw	01h
  7857  158A  3001               	
  7858                           u2545:
  7859  158B                     	clrc
  7860  158B  1003               	rlf	(___lwdiv@divisor)^080h,f
  7861  158C  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  7862  158D  0DA1               	addlw	-1
  7863  158E  3EFF               	skipz
  7864  158F  1D03               	goto	u2545
  7865  1590  2D8B               	line	18
  7866                           	
  7867                           l2424:	
  7868  1591                     	movlw	low(01h)
  7869  1591  3001               	movwf	(??___lwdiv+0)^080h+0
  7870  1592  00A4               	movf	(??___lwdiv+0)^080h+0,w
  7871  1593  0824               	addwf	(___lwdiv@counter)^080h,f
  7872  1594  07A7               	goto	l2426
  7873  1595  2D96               	line	19
  7874                           	
  7875                           l769:	
  7876  1596                     	line	16
  7877                           	
  7878                           l2426:	
  7879  1596                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  7880  1596  1FA1               	goto	u2551
  7881  1597  2D99               	goto	u2550
  7882  1598  2D9A               u2551:
  7883  1599                     	goto	l2422
  7884  1599  2D8A               u2550:
  7885  159A                     	goto	l2428
  7886  159A  2D9C               	
  7887                           l771:	
  7888  159B                     	goto	l2428
  7889  159B  2D9C               	line	20
  7890                           	
  7891                           l772:	
  7892  159C                     	line	21
  7893                           	
  7894                           l2428:	
  7895  159C                     	movlw	01h
  7896  159C  3001               	
  7897                           u2565:
  7898  159D                     	clrc
  7899  159D  1003               	rlf	(___lwdiv@quotient)^080h,f
  7900  159E  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  7901  159F  0DA6               	addlw	-1
  7902  15A0  3EFF               	skipz
  7903  15A1  1D03               	goto	u2565
  7904  15A2  2D9D               	line	22
  7905                           	movf	(___lwdiv@divisor+1)^080h,w
  7906  15A3  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  7907  15A4  0223               	skipz
  7908  15A5  1D03               	goto	u2575
  7909  15A6  2DA9               	movf	(___lwdiv@divisor)^080h,w
  7910  15A7  0820               	subwf	(___lwdiv@dividend)^080h,w
  7911  15A8  0222               u2575:
  7912  15A9                     	skipc
  7913  15A9  1C03               	goto	u2571
  7914  15AA  2DAC               	goto	u2570
  7915  15AB  2DAD               u2571:
  7916  15AC                     	goto	l2434
  7917  15AC  2DB5               u2570:
  7918  15AD                     	line	23
  7919                           	
  7920                           l2430:	
  7921  15AD                     	movf	(___lwdiv@divisor)^080h,w
  7922  15AD  0820               	subwf	(___lwdiv@dividend)^080h,f
  7923  15AE  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  7924  15AF  0821               	skipc
  7925  15B0  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  7926  15B1  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  7927  15B2  02A3               	line	24
  7928                           	
  7929                           l2432:	
  7930  15B3                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  7931  15B3  1425               	goto	l2434
  7932  15B4  2DB5               	line	25
  7933                           	
  7934                           l773:	
  7935  15B5                     	line	26
  7936                           	
  7937                           l2434:	
  7938  15B5                     	movlw	01h
  7939  15B5  3001               	
  7940                           u2585:
  7941  15B6                     	clrc
  7942  15B6  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  7943  15B7  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  7944  15B8  0CA0               	addlw	-1
  7945  15B9  3EFF               	skipz
  7946  15BA  1D03               	goto	u2585
  7947  15BB  2DB6               	line	27
  7948                           	
  7949                           l2436:	
  7950  15BC                     	movlw	01h
  7951  15BC  3001               	subwf	(___lwdiv@counter)^080h,f
  7952  15BD  02A7               	btfss	status,2
  7953  15BE  1D03               	goto	u2591
  7954  15BF  2DC1               	goto	u2590
  7955  15C0  2DC2               u2591:
  7956  15C1                     	goto	l2428
  7957  15C1  2D9C               u2590:
  7958  15C2                     	goto	l2438
  7959  15C2  2DC4               	
  7960                           l774:	
  7961  15C3                     	goto	l2438
  7962  15C3  2DC4               	line	28
  7963                           	
  7964                           l768:	
  7965  15C4                     	line	29
  7966                           	
  7967                           l2438:	
  7968  15C4                     	movf	(___lwdiv@quotient+1)^080h,w
  7969  15C4  0826               	movwf	(?___lwdiv+1)^080h
  7970  15C5  00A1               	movf	(___lwdiv@quotient)^080h,w
  7971  15C6  0825               	movwf	(?___lwdiv)^080h
  7972  15C7  00A0               	goto	l775
  7973  15C8  2DC9               	
  7974                           l2440:	
  7975  15C9                     	line	30
  7976                           	
  7977                           l775:	
  7978  15C9                     	return
  7979  15C9  0008               	opt stack 0
  7980                           GLOBAL	__end_of___lwdiv
  7981                           	__end_of___lwdiv:
  7982  15CA                     	signat	___lwdiv,8314
  7983                           	global	_display_write_start
  7984                           
  7985 ;; *************** function _display_write_start *****************
  7986 ;; Defined at:
  7987 ;;		line 170 in file "Display.c"
  7988 ;; Parameters:    Size  Location     Type
  7989 ;;		None
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;		None
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  1    wreg      void 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8001 ;;      Params:         0       0       0       0       0
  8002 ;;      Locals:         0       0       0       0       0
  8003 ;;      Temps:          0       0       0       0       0
  8004 ;;      Totals:         0       0       0       0       0
  8005 ;;Total ram usage:        0 bytes
  8006 ;; Hardware stack levels used:    1
  8007 ;; Hardware stack levels required when called:    5
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_update_input
  8012 ;;		_update_volume
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  8016                           	file	"Display.c"
  8017                           	line	170
  8018                           global __ptext18
  8019                           __ptext18:	;psect for function _display_write_start
  8020  133B                     psect	text18
  8021                           	file	"Display.c"
  8022                           	line	170
  8023                           	global	__size_of_display_write_start
  8024                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  8025  000F                     	
  8026                           _display_write_start:	
  8027  133B                     ;incstack = 0
  8028                           	opt	stack 1
  8029                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  8030                           	line	172
  8031                           	
  8032                           l3186:	
  8033  133B                     ;Display.c: 172:     if (_selectedDisplay == 0) {
  8034                           	bsf	status, 5	;RP0=1, select bank1
  8035  133B  1683               	bcf	status, 6	;RP1=0, select bank1
  8036  133C  1303               	movf	((__selectedDisplay)^080h),w
  8037  133D  086F               	btfss	status,2
  8038  133E  1D03               	goto	u4201
  8039  133F  2B41               	goto	u4200
  8040  1340  2B42               u4201:
  8041  1341                     	goto	l170
  8042  1341  2B46               u4200:
  8043  1342                     	line	173
  8044                           	
  8045                           l3188:	
  8046  1342                     ;Display.c: 173:         PORTCbits.RC4 = 0;
  8047                           	bcf	status, 5	;RP0=0, select bank0
  8048  1342  1283               	bcf	status, 6	;RP1=0, select bank0
  8049  1343  1303               	bcf	(7),4	;volatile
  8050  1344  1207               	line	174
  8051                           ;Display.c: 174:         return;
  8052                           	goto	l171
  8053  1345  2B49               	line	175
  8054                           ;Display.c: 175:     }
  8055                           	
  8056                           l170:	
  8057  1346                     	line	177
  8058                           ;Display.c: 177:     PORTDbits.RD4 = 0;
  8059                           	bcf	status, 5	;RP0=0, select bank0
  8060  1346  1283               	bcf	status, 6	;RP1=0, select bank0
  8061  1347  1303               	bcf	(8),4	;volatile
  8062  1348  1208               	line	178
  8063                           	
  8064                           l171:	
  8065  1349                     	return
  8066  1349  0008               	opt stack 0
  8067                           GLOBAL	__end_of_display_write_start
  8068                           	__end_of_display_write_start:
  8069  134A                     	signat	_display_write_start,89
  8070                           	global	_display_write_end
  8071                           
  8072 ;; *************** function _display_write_end *****************
  8073 ;; Defined at:
  8074 ;;		line 181 in file "Display.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8088 ;;      Params:         0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    5
  8095 ;; This function calls:
  8096 ;;		Nothing
  8097 ;; This function is called by:
  8098 ;;		_update_input
  8099 ;;		_update_volume
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8103                           	line	181
  8104                           global __ptext19
  8105                           __ptext19:	;psect for function _display_write_end
  8106  132C                     psect	text19
  8107                           	file	"Display.c"
  8108                           	line	181
  8109                           	global	__size_of_display_write_end
  8110                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  8111  000F                     	
  8112                           _display_write_end:	
  8113  132C                     ;incstack = 0
  8114                           	opt	stack 1
  8115                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  8116                           	line	183
  8117                           	
  8118                           l3214:	
  8119  132C                     ;Display.c: 183:     if (_selectedDisplay == 0) {
  8120                           	bsf	status, 5	;RP0=1, select bank1
  8121  132C  1683               	bcf	status, 6	;RP1=0, select bank1
  8122  132D  1303               	movf	((__selectedDisplay)^080h),w
  8123  132E  086F               	btfss	status,2
  8124  132F  1D03               	goto	u4251
  8125  1330  2B32               	goto	u4250
  8126  1331  2B33               u4251:
  8127  1332                     	goto	l174
  8128  1332  2B37               u4250:
  8129  1333                     	line	184
  8130                           	
  8131                           l3216:	
  8132  1333                     ;Display.c: 184:         PORTCbits.RC4 = 1;
  8133                           	bcf	status, 5	;RP0=0, select bank0
  8134  1333  1283               	bcf	status, 6	;RP1=0, select bank0
  8135  1334  1303               	bsf	(7),4	;volatile
  8136  1335  1607               	line	185
  8137                           ;Display.c: 185:         return;
  8138                           	goto	l175
  8139  1336  2B3A               	line	186
  8140                           ;Display.c: 186:     }
  8141                           	
  8142                           l174:	
  8143  1337                     	line	188
  8144                           ;Display.c: 188:     PORTDbits.RD4 = 1;
  8145                           	bcf	status, 5	;RP0=0, select bank0
  8146  1337  1283               	bcf	status, 6	;RP1=0, select bank0
  8147  1338  1303               	bsf	(8),4	;volatile
  8148  1339  1608               	line	189
  8149                           	
  8150                           l175:	
  8151  133A                     	return
  8152  133A  0008               	opt stack 0
  8153                           GLOBAL	__end_of_display_write_end
  8154                           	__end_of_display_write_end:
  8155  133B                     	signat	_display_write_end,89
  8156                           	global	_config
  8157                           
  8158 ;; *************** function _config *****************
  8159 ;; Defined at:
  8160 ;;		line 3 in file "Config.c"
  8161 ;; Parameters:    Size  Location     Type
  8162 ;;		None
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;		None
  8165 ;; Return value:  Size  Location     Type
  8166 ;;                  1    wreg      void 
  8167 ;; Registers used:
  8168 ;;		wreg, status,2, status,0, pclath, cstack
  8169 ;; Tracked objects:
  8170 ;;		On entry : 0/0
  8171 ;;		On exit  : 0/0
  8172 ;;		Unchanged: 0/0
  8173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8174 ;;      Params:         0       0       0       0       0
  8175 ;;      Locals:         0       0       0       0       0
  8176 ;;      Temps:          0       0       3       0       0
  8177 ;;      Totals:         0       0       3       0       0
  8178 ;;Total ram usage:        3 bytes
  8179 ;; Hardware stack levels used:    1
  8180 ;; Hardware stack levels required when called:    7
  8181 ;; This function calls:
  8182 ;;		_display_init
  8183 ;;		_init_adc
  8184 ;; This function is called by:
  8185 ;;		_main
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8189                           	file	"Config.c"
  8190                           	line	3
  8191                           global __ptext20
  8192                           __ptext20:	;psect for function _config
  8193  1732                     psect	text20
  8194                           	file	"Config.c"
  8195                           	line	3
  8196                           	global	__size_of_config
  8197                           	__size_of_config	equ	__end_of_config-_config
  8198  0065                     	
  8199                           _config:	
  8200  1732                     ;incstack = 0
  8201                           	opt	stack 0
  8202                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  8203                           	line	5
  8204                           	
  8205                           l3324:	
  8206  1732                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  8207                           	bsf	status, 5	;RP0=1, select bank1
  8208  1732  1683               	bcf	status, 6	;RP1=0, select bank1
  8209  1733  1303               	movf	(143)^080h,w	;volatile
  8210  1734  080F               	andlw	not (((1<<3)-1)<<4)
  8211  1735  398F               	iorlw	(06h & ((1<<3)-1))<<4
  8212  1736  3860               	movwf	(143)^080h	;volatile
  8213  1737  008F               	line	6
  8214                           	
  8215                           l3326:	
  8216  1738                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  8217                           	bcf	(143)^080h,3	;volatile
  8218  1738  118F               	line	13
  8219                           	
  8220                           l3328:	
  8221  1739                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  8222                           	bcf	(133)^080h,0	;volatile
  8223  1739  1005               	line	14
  8224                           	
  8225                           l3330:	
  8226  173A                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  8227                           	bcf	(133)^080h,1	;volatile
  8228  173A  1085               	line	15
  8229                           	
  8230                           l3332:	
  8231  173B                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  8232                           	bcf	(133)^080h,2	;volatile
  8233  173B  1105               	line	16
  8234                           	
  8235                           l3334:	
  8236  173C                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  8237                           	bcf	(133)^080h,3	;volatile
  8238  173C  1185               	line	18
  8239                           	
  8240                           l3336:	
  8241  173D                     ;Config.c: 18:     PORTA = 0x0F;
  8242                           	movlw	low(0Fh)
  8243  173D  300F               	bcf	status, 5	;RP0=0, select bank0
  8244  173E  1283               	bcf	status, 6	;RP1=0, select bank0
  8245  173F  1303               	movwf	(5)	;volatile
  8246  1740  0085               	line	25
  8247                           	
  8248                           l3338:	
  8249  1741                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  8250                           	bsf	status, 5	;RP0=1, select bank1
  8251  1741  1683               	bcf	status, 6	;RP1=0, select bank1
  8252  1742  1303               	bsf	(134)^080h,4	;volatile
  8253  1743  1606               	line	26
  8254                           	
  8255                           l3340:	
  8256  1744                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  8257                           	bsf	(134)^080h,5	;volatile
  8258  1744  1686               	line	28
  8259                           	
  8260                           l3342:	
  8261  1745                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  8262                           	bsf	status, 5	;RP0=1, select bank3
  8263  1745  1683               	bsf	status, 6	;RP1=1, select bank3
  8264  1746  1703               	bcf	(393)^0180h,3	;volatile
  8265  1747  1189               	line	29
  8266                           	
  8267                           l3344:	
  8268  1748                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  8269                           	bcf	(393)^0180h,5	;volatile
  8270  1748  1289               	line	35
  8271                           	
  8272                           l3346:	
  8273  1749                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  8274                           	bsf	status, 5	;RP0=1, select bank1
  8275  1749  1683               	bcf	status, 6	;RP1=0, select bank1
  8276  174A  1303               	bsf	(137)^080h,2	;volatile
  8277  174B  1509               	line	36
  8278                           	
  8279                           l3348:	
  8280  174C                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  8281                           	bsf	status, 5	;RP0=1, select bank3
  8282  174C  1683               	bsf	status, 6	;RP1=1, select bank3
  8283  174D  1703               	bsf	(392)^0180h,7	;volatile
  8284  174E  1788               	line	41
  8285                           	
  8286                           l3350:	
  8287  174F                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  8288                           	bsf	status, 5	;RP0=1, select bank1
  8289  174F  1683               	bcf	status, 6	;RP1=0, select bank1
  8290  1750  1303               	bsf	(134)^080h,0	;volatile
  8291  1751  1406               	line	42
  8292                           	
  8293                           l3352:	
  8294  1752                     ;Config.c: 42:     ANSELHbits.ANS12 = 0;
  8295                           	bsf	status, 5	;RP0=1, select bank3
  8296  1752  1683               	bsf	status, 6	;RP1=1, select bank3
  8297  1753  1703               	bcf	(393)^0180h,4	;volatile
  8298  1754  1209               	line	48
  8299                           	
  8300                           l3354:	
  8301  1755                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  8302                           	bsf	status, 5	;RP0=1, select bank1
  8303  1755  1683               	bcf	status, 6	;RP1=0, select bank1
  8304  1756  1303               	bcf	(135)^080h,0	;volatile
  8305  1757  1007               	line	49
  8306                           	
  8307                           l3356:	
  8308  1758                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  8309                           	bcf	(135)^080h,1	;volatile
  8310  1758  1087               	line	51
  8311                           	
  8312                           l3358:	
  8313  1759                     ;Config.c: 51:     PORTC = 0x00;
  8314                           	bcf	status, 5	;RP0=0, select bank0
  8315  1759  1283               	bcf	status, 6	;RP1=0, select bank0
  8316  175A  1303               	clrf	(7)	;volatile
  8317  175B  0187               	line	57
  8318                           	
  8319                           l3360:	
  8320  175C                     ;Config.c: 57:     display_init();
  8321                           	fcall	_display_init
  8322  175C  160A  118A  25CA  160A  118A  	line	60
  8323                           	
  8324                           l3362:	
  8325  1761                     ;Config.c: 60:     init_adc();
  8326                           	fcall	_init_adc
  8327  1761  120A  158A  21A7  160A  118A  	line	67
  8328                           	
  8329                           l3364:	
  8330  1766                     ;Config.c: 67:     IOCBbits.IOCB0 = 1;
  8331                           	bsf	status, 5	;RP0=1, select bank1
  8332  1766  1683               	bcf	status, 6	;RP1=0, select bank1
  8333  1767  1303               	bsf	(150)^080h,0	;volatile
  8334  1768  1416               	line	68
  8335                           	
  8336                           l3366:	
  8337  1769                     ;Config.c: 68:     IOCBbits.IOCB4 = 1;
  8338                           	bsf	(150)^080h,4	;volatile
  8339  1769  1616               	line	69
  8340                           	
  8341                           l3368:	
  8342  176A                     ;Config.c: 69:     IOCBbits.IOCB5 = 1;
  8343                           	bsf	(150)^080h,5	;volatile
  8344  176A  1696               	line	71
  8345                           	
  8346                           l3370:	
  8347  176B                     ;Config.c: 71:     INTCONbits.PEIE = 1;
  8348                           	bsf	(11),6	;volatile
  8349  176B  170B               	line	72
  8350                           	
  8351                           l3372:	
  8352  176C                     ;Config.c: 72:     INTCONbits.RBIE = 1;
  8353                           	bsf	(11),3	;volatile
  8354  176C  158B               	line	74
  8355                           	
  8356                           l3374:	
  8357  176D                     ;Config.c: 74:     INTCONbits.GIE = 1;
  8358                           	bsf	(11),7	;volatile
  8359  176D  178B               	line	83
  8360                           	
  8361                           l3376:	
  8362  176E                     ;Config.c: 83:     _inputUpdateRequired = 1;
  8363                           	clrf	(__inputUpdateRequired)
  8364  176E  01FD               	incf	(__inputUpdateRequired),f
  8365  176F  0AFD               	line	84
  8366                           	
  8367                           l3378:	
  8368  1770                     ;Config.c: 84:     _selectedInput = 0;
  8369                           	clrf	(__selectedInput)^080h
  8370  1770  01ED               	clrf	(__selectedInput+1)^080h
  8371  1771  01EE               	line	85
  8372                           	
  8373                           l3380:	
  8374  1772                     ;Config.c: 85:     _lastA = PORTBbits.RB4;
  8375                           	bcf	status, 5	;RP0=0, select bank0
  8376  1772  1283               	bcf	status, 6	;RP1=0, select bank0
  8377  1773  1303               	swapf	(6),w	;volatile
  8378  1774  0E06               	andlw	(1<<1)-1
  8379  1775  3901               	bsf	status, 5	;RP0=1, select bank1
  8380  1776  1683               	bcf	status, 6	;RP1=0, select bank1
  8381  1777  1303               	movwf	(??_config+0)^080h+0
  8382  1778  00A1               	clrf	(??_config+0)^080h+0+1
  8383  1779  01A2               	movf	0+(??_config+0)^080h+0,w
  8384  177A  0821               	bcf	status, 5	;RP0=0, select bank0
  8385  177B  1283               	bcf	status, 6	;RP1=0, select bank0
  8386  177C  1303               	movwf	(__lastA)
  8387  177D  00EC               	bsf	status, 5	;RP0=1, select bank1
  8388  177E  1683               	bcf	status, 6	;RP1=0, select bank1
  8389  177F  1303               	movf	1+(??_config+0)^080h+0,w
  8390  1780  0822               	bcf	status, 5	;RP0=0, select bank0
  8391  1781  1283               	bcf	status, 6	;RP1=0, select bank0
  8392  1782  1303               	movwf	(__lastA+1)
  8393  1783  00ED               	line	86
  8394                           	
  8395                           l3382:	
  8396  1784                     ;Config.c: 86:     _lastB = PORTBbits.RB5;
  8397                           	swapf	(6),w	;volatile
  8398  1784  0E06               	bsf	status, 5	;RP0=1, select bank1
  8399  1785  1683               	bcf	status, 6	;RP1=0, select bank1
  8400  1786  1303               	movwf	(??_config+0)^080h+0
  8401  1787  00A1               	rrf	(??_config+0)^080h+0,w
  8402  1788  0C21               	andlw	(1<<1)-1
  8403  1789  3901               	movwf	(??_config+1)^080h+0
  8404  178A  00A2               	clrf	(??_config+1)^080h+0+1
  8405  178B  01A3               	movf	0+(??_config+1)^080h+0,w
  8406  178C  0822               	bcf	status, 5	;RP0=0, select bank0
  8407  178D  1283               	bcf	status, 6	;RP1=0, select bank0
  8408  178E  1303               	movwf	(__lastB)
  8409  178F  00EA               	bsf	status, 5	;RP0=1, select bank1
  8410  1790  1683               	bcf	status, 6	;RP1=0, select bank1
  8411  1791  1303               	movf	1+(??_config+1)^080h+0,w
  8412  1792  0823               	bcf	status, 5	;RP0=0, select bank0
  8413  1793  1283               	bcf	status, 6	;RP1=0, select bank0
  8414  1794  1303               	movwf	(__lastB+1)
  8415  1795  00EB               	line	87
  8416                           	
  8417                           l276:	
  8418  1796                     	return
  8419  1796  0008               	opt stack 0
  8420                           GLOBAL	__end_of_config
  8421                           	__end_of_config:
  8422  1797                     	signat	_config,89
  8423                           	global	_init_adc
  8424                           
  8425 ;; *************** function _init_adc *****************
  8426 ;; Defined at:
  8427 ;;		line 3 in file "Volume.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;		None
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;		None
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8441 ;;      Params:         0       0       0       0       0
  8442 ;;      Locals:         0       0       0       0       0
  8443 ;;      Temps:          0       0       0       0       0
  8444 ;;      Totals:         0       0       0       0       0
  8445 ;;Total ram usage:        0 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; Hardware stack levels required when called:    5
  8448 ;; This function calls:
  8449 ;;		Nothing
  8450 ;; This function is called by:
  8451 ;;		_config
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8455                           	file	"Volume.c"
  8456                           	line	3
  8457                           global __ptext21
  8458                           __ptext21:	;psect for function _init_adc
  8459  09A7                     psect	text21
  8460                           	file	"Volume.c"
  8461                           	line	3
  8462                           	global	__size_of_init_adc
  8463                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8464  0017                     	
  8465                           _init_adc:	
  8466  09A7                     ;incstack = 0
  8467                           	opt	stack 1
  8468                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  8469                           	line	5
  8470                           	
  8471                           l3218:	
  8472  09A7                     ;Volume.c: 5:     ADCON0bits.CHS = 0b0111;
  8473                           	bcf	status, 5	;RP0=0, select bank0
  8474  09A7  1283               	bcf	status, 6	;RP1=0, select bank0
  8475  09A8  1303               	movf	(31),w	;volatile
  8476  09A9  081F               	andlw	not (((1<<4)-1)<<2)
  8477  09AA  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  8478  09AB  381C               	movwf	(31)	;volatile
  8479  09AC  009F               	line	6
  8480                           ;Volume.c: 6:     ADCON0bits.ADCS = 0b001;
  8481                           	movf	(31),w	;volatile
  8482  09AD  081F               	andlw	not (((1<<2)-1)<<6)
  8483  09AE  393F               	iorlw	(01h & ((1<<2)-1))<<6
  8484  09AF  3840               	movwf	(31)	;volatile
  8485  09B0  009F               	line	7
  8486                           	
  8487                           l3220:	
  8488  09B1                     ;Volume.c: 7:     ADCON1bits.ADFM = 1;
  8489                           	bsf	status, 5	;RP0=1, select bank1
  8490  09B1  1683               	bcf	status, 6	;RP1=0, select bank1
  8491  09B2  1303               	bsf	(159)^080h,7	;volatile
  8492  09B3  179F               	line	9
  8493                           	
  8494                           l3222:	
  8495  09B4                     ;Volume.c: 9:     PIR1bits.ADIF = 0;
  8496                           	bcf	status, 5	;RP0=0, select bank0
  8497  09B4  1283               	bcf	status, 6	;RP1=0, select bank0
  8498  09B5  1303               	bcf	(12),6	;volatile
  8499  09B6  130C               	line	10
  8500                           	
  8501                           l3224:	
  8502  09B7                     ;Volume.c: 10:     PIE1bits.ADIE = 1;
  8503                           	bsf	status, 5	;RP0=1, select bank1
  8504  09B7  1683               	bcf	status, 6	;RP1=0, select bank1
  8505  09B8  1303               	bsf	(140)^080h,6	;volatile
  8506  09B9  170C               	line	12
  8507                           	
  8508                           l3226:	
  8509  09BA                     ;Volume.c: 12:     ADCON0bits.ADON = 1;
  8510                           	bcf	status, 5	;RP0=0, select bank0
  8511  09BA  1283               	bcf	status, 6	;RP1=0, select bank0
  8512  09BB  1303               	bsf	(31),0	;volatile
  8513  09BC  141F               	line	13
  8514                           	
  8515                           l317:	
  8516  09BD                     	return
  8517  09BD  0008               	opt stack 0
  8518                           GLOBAL	__end_of_init_adc
  8519                           	__end_of_init_adc:
  8520  09BE                     	signat	_init_adc,89
  8521                           	global	_display_init
  8522                           
  8523 ;; *************** function _display_init *****************
  8524 ;; Defined at:
  8525 ;;		line 3 in file "Display.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, status,2, status,0, pclath, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8539 ;;      Params:         0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:    6
  8546 ;; This function calls:
  8547 ;;		_spiWrite
  8548 ;; This function is called by:
  8549 ;;		_config
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8553                           	file	"Display.c"
  8554                           	line	3
  8555                           global __ptext22
  8556                           __ptext22:	;psect for function _display_init
  8557  15CA                     psect	text22
  8558                           	file	"Display.c"
  8559                           	line	3
  8560                           	global	__size_of_display_init
  8561                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  8562  0050                     	
  8563                           _display_init:	
  8564  15CA                     ;incstack = 0
  8565                           	opt	stack 0
  8566                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  8567                           	line	7
  8568                           	
  8569                           l3122:	
  8570  15CA                     ;Display.c: 7:     SSPCON = 0b00100000;
  8571                           	movlw	low(020h)
  8572  15CA  3020               	bcf	status, 5	;RP0=0, select bank0
  8573  15CB  1283               	bcf	status, 6	;RP1=0, select bank0
  8574  15CC  1303               	movwf	(20)	;volatile
  8575  15CD  0094               	line	8
  8576                           ;Display.c: 8:     SSPSTAT = 0b01000000;
  8577                           	movlw	low(040h)
  8578  15CE  3040               	bsf	status, 5	;RP0=1, select bank1
  8579  15CF  1683               	bcf	status, 6	;RP1=0, select bank1
  8580  15D0  1303               	movwf	(148)^080h	;volatile
  8581  15D1  0094               	line	11
  8582                           	
  8583                           l3124:	
  8584  15D2                     ;Display.c: 11:     TRISD = 0x00;
  8585                           	clrf	(136)^080h	;volatile
  8586  15D2  0188               	line	12
  8587                           	
  8588                           l3126:	
  8589  15D3                     ;Display.c: 12:     TRISC = 0x00;
  8590                           	clrf	(135)^080h	;volatile
  8591  15D3  0187               	line	15
  8592                           	
  8593                           l3128:	
  8594  15D4                     ;Display.c: 15:     PORTDbits.RD2 = 1;
  8595                           	bcf	status, 5	;RP0=0, select bank0
  8596  15D4  1283               	bcf	status, 6	;RP1=0, select bank0
  8597  15D5  1303               	bsf	(8),2	;volatile
  8598  15D6  1508               	line	16
  8599                           	
  8600                           l3130:	
  8601  15D7                     ;Display.c: 16:     PORTDbits.RD6 = 0;
  8602                           	bcf	(8),6	;volatile
  8603  15D7  1308               	line	17
  8604                           	
  8605                           l3132:	
  8606  15D8                     ;Display.c: 17:     PORTDbits.RD4 = 1;
  8607                           	bsf	(8),4	;volatile
  8608  15D8  1608               	line	18
  8609                           	
  8610                           l3134:	
  8611  15D9                     ;Display.c: 18:     PORTCbits.RC3 = 0;
  8612                           	bcf	(7),3	;volatile
  8613  15D9  1187               	line	21
  8614                           	
  8615                           l3136:	
  8616  15DA                     ;Display.c: 21:     PORTDbits.RD7 = 1;
  8617                           	bsf	(8),7	;volatile
  8618  15DA  1788               	line	22
  8619                           	
  8620                           l3138:	
  8621  15DB                     ;Display.c: 22:     PORTDbits.RD4 = 0;
  8622                           	bcf	(8),4	;volatile
  8623  15DB  1208               	line	23
  8624                           	
  8625                           l3140:	
  8626  15DC                     ;Display.c: 23:     spiWrite(0b01001111);
  8627                           	movlw	low(04Fh)
  8628  15DC  304F               	fcall	_spiWrite
  8629  15DD  160A  118A  234A  160A  118A  	line	24
  8630                           	
  8631                           l3142:	
  8632  15E2                     ;Display.c: 24:     PORTDbits.RD4 = 1;
  8633                           	bcf	status, 5	;RP0=0, select bank0
  8634  15E2  1283               	bcf	status, 6	;RP1=0, select bank0
  8635  15E3  1303               	bsf	(8),4	;volatile
  8636  15E4  1608               	line	27
  8637                           	
  8638                           l3144:	
  8639  15E5                     ;Display.c: 27:     PORTDbits.RD7 = 1;
  8640                           	bsf	(8),7	;volatile
  8641  15E5  1788               	line	28
  8642                           	
  8643                           l3146:	
  8644  15E6                     ;Display.c: 28:     PORTDbits.RD4 = 0;
  8645                           	bcf	(8),4	;volatile
  8646  15E6  1208               	line	29
  8647                           	
  8648                           l3148:	
  8649  15E7                     ;Display.c: 29:     spiWrite(0b10000011);
  8650                           	movlw	low(083h)
  8651  15E7  3083               	fcall	_spiWrite
  8652  15E8  160A  118A  234A  160A  118A  	line	30
  8653                           	
  8654                           l3150:	
  8655  15ED                     ;Display.c: 30:     PORTDbits.RD4 = 1;
  8656                           	bcf	status, 5	;RP0=0, select bank0
  8657  15ED  1283               	bcf	status, 6	;RP1=0, select bank0
  8658  15EE  1303               	bsf	(8),4	;volatile
  8659  15EF  1608               	line	34
  8660                           	
  8661                           l3152:	
  8662  15F0                     ;Display.c: 34:     PORTDbits.RD7 = 0;
  8663                           	bcf	(8),7	;volatile
  8664  15F0  1388               	line	38
  8665                           	
  8666                           l3154:	
  8667  15F1                     ;Display.c: 38:     PORTCbits.RC2 = 1;
  8668                           	bsf	(7),2	;volatile
  8669  15F1  1507               	line	39
  8670                           	
  8671                           l3156:	
  8672  15F2                     ;Display.c: 39:     PORTCbits.RC6 = 0;
  8673                           	bcf	(7),6	;volatile
  8674  15F2  1307               	line	40
  8675                           	
  8676                           l3158:	
  8677  15F3                     ;Display.c: 40:     PORTCbits.RC4 = 1;
  8678                           	bsf	(7),4	;volatile
  8679  15F3  1607               	line	41
  8680                           	
  8681                           l3160:	
  8682  15F4                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  8683                           	bcf	(7),3	;volatile
  8684  15F4  1187               	line	43
  8685                           	
  8686                           l3162:	
  8687  15F5                     ;Display.c: 43:     PORTCbits.RC7 = 1;
  8688                           	bsf	(7),7	;volatile
  8689  15F5  1787               	line	44
  8690                           	
  8691                           l3164:	
  8692  15F6                     ;Display.c: 44:     PORTCbits.RC4 = 0;
  8693                           	bcf	(7),4	;volatile
  8694  15F6  1207               	line	45
  8695                           	
  8696                           l3166:	
  8697  15F7                     ;Display.c: 45:     spiWrite(0b01001111);
  8698                           	movlw	low(04Fh)
  8699  15F7  304F               	fcall	_spiWrite
  8700  15F8  160A  118A  234A  160A  118A  	line	47
  8701                           	
  8702                           l3168:	
  8703  15FD                     ;Display.c: 47:     PORTCbits.RC4 = 1;
  8704                           	bcf	status, 5	;RP0=0, select bank0
  8705  15FD  1283               	bcf	status, 6	;RP1=0, select bank0
  8706  15FE  1303               	bsf	(7),4	;volatile
  8707  15FF  1607               	line	49
  8708                           	
  8709                           l3170:	
  8710  1600                     ;Display.c: 49:     PORTCbits.RC7 = 1;
  8711                           	bsf	(7),7	;volatile
  8712  1600  1787               	line	50
  8713                           	
  8714                           l3172:	
  8715  1601                     ;Display.c: 50:     PORTCbits.RC4 = 0;
  8716                           	bcf	(7),4	;volatile
  8717  1601  1207               	line	52
  8718                           	
  8719                           l3174:	
  8720  1602                     ;Display.c: 52:     spiWrite(0b10000011);
  8721                           	movlw	low(083h)
  8722  1602  3083               	fcall	_spiWrite
  8723  1603  160A  118A  234A  160A  118A  	line	53
  8724                           	
  8725                           l3176:	
  8726  1608                     ;Display.c: 53:     PORTCbits.RC4 = 1;
  8727                           	bcf	status, 5	;RP0=0, select bank0
  8728  1608  1283               	bcf	status, 6	;RP1=0, select bank0
  8729  1609  1303               	bsf	(7),4	;volatile
  8730  160A  1607               	line	56
  8731                           	
  8732                           l3178:	
  8733  160B                     ;Display.c: 56:     PORTCbits.RC7 = 0;
  8734                           	bcf	(7),7	;volatile
  8735  160B  1387               	line	59
  8736                           	
  8737                           l3180:	
  8738  160C                     ;Display.c: 59:     _selectedDisplay = 0;
  8739                           	bsf	status, 5	;RP0=1, select bank1
  8740  160C  1683               	bcf	status, 6	;RP1=0, select bank1
  8741  160D  1303               	clrf	(__selectedDisplay)^080h
  8742  160E  01EF               	line	60
  8743                           	
  8744                           l3182:	
  8745  160F                     ;Display.c: 60:     lastVolume = 99;
  8746                           	movlw	063h
  8747  160F  3063               	bcf	status, 5	;RP0=0, select bank0
  8748  1610  1283               	bcf	status, 6	;RP1=0, select bank0
  8749  1611  1303               	movwf	(_lastVolume)
  8750  1612  00E8               	movlw	0
  8751  1613  3000               	movwf	((_lastVolume))+1
  8752  1614  00E9               	line	61
  8753                           	
  8754                           l3184:	
  8755  1615                     ;Display.c: 61:     lastInput = 99;
  8756                           	movlw	063h
  8757  1615  3063               	movwf	(_lastInput)
  8758  1616  00E6               	movlw	0
  8759  1617  3000               	movwf	((_lastInput))+1
  8760  1618  00E7               	line	63
  8761                           	
  8762                           l126:	
  8763  1619                     	return
  8764  1619  0008               	opt stack 0
  8765                           GLOBAL	__end_of_display_init
  8766                           	__end_of_display_init:
  8767  161A                     	signat	_display_init,89
  8768                           	global	_spiWrite
  8769                           
  8770 ;; *************** function _spiWrite *****************
  8771 ;; Defined at:
  8772 ;;		line 192 in file "Display.c"
  8773 ;; Parameters:    Size  Location     Type
  8774 ;;  data            1    wreg     unsigned char 
  8775 ;; Auto vars:     Size  Location     Type
  8776 ;;  data            1    0[BANK1 ] unsigned char 
  8777 ;; Return value:  Size  Location     Type
  8778 ;;                  1    wreg      void 
  8779 ;; Registers used:
  8780 ;;		wreg
  8781 ;; Tracked objects:
  8782 ;;		On entry : 0/0
  8783 ;;		On exit  : 0/0
  8784 ;;		Unchanged: 0/0
  8785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8786 ;;      Params:         0       0       0       0       0
  8787 ;;      Locals:         0       0       1       0       0
  8788 ;;      Temps:          0       0       0       0       0
  8789 ;;      Totals:         0       0       1       0       0
  8790 ;;Total ram usage:        1 bytes
  8791 ;; Hardware stack levels used:    1
  8792 ;; Hardware stack levels required when called:    5
  8793 ;; This function calls:
  8794 ;;		Nothing
  8795 ;; This function is called by:
  8796 ;;		_display_init
  8797 ;;		_write_space
  8798 ;;		_write_font
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8802                           	line	192
  8803                           global __ptext23
  8804                           __ptext23:	;psect for function _spiWrite
  8805  134A                     psect	text23
  8806                           	file	"Display.c"
  8807                           	line	192
  8808                           	global	__size_of_spiWrite
  8809                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  8810  0010                     	
  8811                           _spiWrite:	
  8812  134A                     ;incstack = 0
  8813 ;; hardware stack exceeded
  8814                           	opt	stack 0
  8815                           ; Regs used in _spiWrite: [wreg]
  8816                           ;spiWrite@data stored from wreg
  8817                           	bsf	status, 5	;RP0=1, select bank1
  8818  134A  1683               	bcf	status, 6	;RP1=0, select bank1
  8819  134B  1303               	movwf	(spiWrite@data)^080h
  8820  134C  00A0               	line	194
  8821                           	
  8822                           l2328:	
  8823  134D                     ;Display.c: 192: void spiWrite(char data);Display.c: 193: {;Display.c: 194:     SSPBUF =
                                  data;
  8824                           	movf	(spiWrite@data)^080h,w
  8825  134D  0820               	bcf	status, 5	;RP0=0, select bank0
  8826  134E  1283               	bcf	status, 6	;RP1=0, select bank0
  8827  134F  1303               	movwf	(19)	;volatile
  8828  1350  0093               	line	196
  8829                           ;Display.c: 196:     while(!SSPSTATbits.BF);
  8830                           	goto	l178
  8831  1351  2B52               	
  8832                           l179:	
  8833  1352                     	
  8834                           l178:	
  8835  1352                     	bsf	status, 5	;RP0=1, select bank1
  8836  1352  1683               	bcf	status, 6	;RP1=0, select bank1
  8837  1353  1303               	btfss	(148)^080h,0	;volatile
  8838  1354  1C14               	goto	u2301
  8839  1355  2B57               	goto	u2300
  8840  1356  2B58               u2301:
  8841  1357                     	goto	l178
  8842  1357  2B52               u2300:
  8843  1358                     	goto	l181
  8844  1358  2B59               	
  8845                           l180:	
  8846  1359                     	line	197
  8847                           	
  8848                           l181:	
  8849  1359                     	return
  8850  1359  0008               	opt stack 0
  8851                           GLOBAL	__end_of_spiWrite
  8852                           	__end_of_spiWrite:
  8853  135A                     	signat	_spiWrite,4217
  8854                           	global	_activateSelectedRelay
  8855                           
  8856 ;; *************** function _activateSelectedRelay *****************
  8857 ;; Defined at:
  8858 ;;		line 3 in file "Input.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  1    wreg      void 
  8865 ;; Registers used:
  8866 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8872 ;;      Params:         0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0
  8875 ;;      Totals:         0       0       0       0       0
  8876 ;;Total ram usage:        0 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    5
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_main
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8886                           	file	"Input.c"
  8887                           	line	3
  8888                           global __ptext24
  8889                           __ptext24:	;psect for function _activateSelectedRelay
  8890  1444                     psect	text24
  8891                           	file	"Input.c"
  8892                           	line	3
  8893                           	global	__size_of_activateSelectedRelay
  8894                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  8895  0038                     	
  8896                           _activateSelectedRelay:	
  8897  1444                     ;incstack = 0
  8898                           	opt	stack 2
  8899                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  8900                           	line	5
  8901                           	
  8902                           l3424:	
  8903  1444                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  8904                           	movf	((__inputUpdateRequired)),w
  8905  1444  087D               	btfss	status,2
  8906  1445  1D03               	goto	u4351
  8907  1446  2C48               	goto	u4350
  8908  1447  2C49               u4351:
  8909  1448                     	goto	l3428
  8910  1448  2C4B               u4350:
  8911  1449                     	goto	l201
  8912  1449  2C7B               	
  8913                           l3426:	
  8914  144A                     	goto	l201
  8915  144A  2C7B               	
  8916                           l200:	
  8917  144B                     	line	7
  8918                           	
  8919                           l3428:	
  8920  144B                     ;Input.c: 7:     PORTA = 0x0F;
  8921                           	movlw	low(0Fh)
  8922  144B  300F               	bcf	status, 5	;RP0=0, select bank0
  8923  144C  1283               	bcf	status, 6	;RP1=0, select bank0
  8924  144D  1303               	movwf	(5)	;volatile
  8925  144E  0085               	line	9
  8926                           ;Input.c: 9:     switch (_selectedInput) {
  8927                           	goto	l3442
  8928  144F  2C65               	line	10
  8929                           ;Input.c: 10:         case 0:
  8930                           	
  8931                           l203:	
  8932  1450                     	line	11
  8933                           	
  8934                           l3430:	
  8935  1450                     ;Input.c: 11:             PORTA = ~0x01;
  8936                           	movlw	low(0FEh)
  8937  1450  30FE               	bcf	status, 5	;RP0=0, select bank0
  8938  1451  1283               	movwf	(5)	;volatile
  8939  1452  0085               	line	12
  8940                           ;Input.c: 12:             break;
  8941                           	goto	l3444
  8942  1453  2C7A               	line	13
  8943                           ;Input.c: 13:         case 1:
  8944                           	
  8945                           l205:	
  8946  1454                     	line	14
  8947                           	
  8948                           l3432:	
  8949  1454                     ;Input.c: 14:             PORTA = ~0x02;
  8950                           	movlw	low(0FDh)
  8951  1454  30FD               	bcf	status, 5	;RP0=0, select bank0
  8952  1455  1283               	movwf	(5)	;volatile
  8953  1456  0085               	line	15
  8954                           ;Input.c: 15:             break;
  8955                           	goto	l3444
  8956  1457  2C7A               	line	16
  8957                           ;Input.c: 16:         case 2:
  8958                           	
  8959                           l206:	
  8960  1458                     	line	17
  8961                           	
  8962                           l3434:	
  8963  1458                     ;Input.c: 17:             PORTA = ~0x04;
  8964                           	movlw	low(0FBh)
  8965  1458  30FB               	bcf	status, 5	;RP0=0, select bank0
  8966  1459  1283               	movwf	(5)	;volatile
  8967  145A  0085               	line	18
  8968                           ;Input.c: 18:             break;
  8969                           	goto	l3444
  8970  145B  2C7A               	line	19
  8971                           ;Input.c: 19:         case 3:
  8972                           	
  8973                           l207:	
  8974  145C                     	line	20
  8975                           	
  8976                           l3436:	
  8977  145C                     ;Input.c: 20:             PORTA = ~0x08;
  8978                           	movlw	low(0F7h)
  8979  145C  30F7               	bcf	status, 5	;RP0=0, select bank0
  8980  145D  1283               	movwf	(5)	;volatile
  8981  145E  0085               	line	21
  8982                           ;Input.c: 21:             break;
  8983                           	goto	l3444
  8984  145F  2C7A               	line	22
  8985                           ;Input.c: 22:         default:
  8986                           	
  8987                           l208:	
  8988  1460                     	line	23
  8989                           	
  8990                           l3438:	
  8991  1460                     ;Input.c: 23:             PORTA = ~0x01;
  8992                           	movlw	low(0FEh)
  8993  1460  30FE               	bcf	status, 5	;RP0=0, select bank0
  8994  1461  1283               	movwf	(5)	;volatile
  8995  1462  0085               	line	24
  8996                           ;Input.c: 24:             break;
  8997                           	goto	l3444
  8998  1463  2C7A               	line	25
  8999                           	
  9000                           l3440:	
  9001  1464                     ;Input.c: 25:     }
  9002                           	goto	l3444
  9003  1464  2C7A               	
  9004                           l202:	
  9005  1465                     	
  9006                           l3442:	
  9007  1465                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9008                           ; Switch size 1, requested type "space"
  9009                           ; Number of cases is 1, Range of values is 0 to 0
  9010                           ; switch strategies available:
  9011                           ; Name         Instructions Cycles
  9012                           ; simple_byte            4     3 (average)
  9013                           ; direct_byte           11     8 (fixed)
  9014                           ; jumptable            260     6 (fixed)
  9015                           ;	Chosen strategy is simple_byte
  9016                           
  9017                           	bsf	status, 5	;RP0=1, select bank1
  9018  1465  1683               	bcf	status, 6	;RP1=0, select bank1
  9019  1466  1303               	movf (__selectedInput+1)^080h,w
  9020  1467  086E               	opt asmopt_push
  9021                           	opt asmopt_off
  9022                           	xorlw	0^0	; case 0
  9023  1468  3A00               	skipnz
  9024  1469  1903               	goto	l3668
  9025  146A  2C6C               	goto	l3438
  9026  146B  2C60               	opt asmopt_pop
  9027                           	
  9028                           l3668:	
  9029  146C                     ; Switch size 1, requested type "space"
  9030                           ; Number of cases is 4, Range of values is 0 to 3
  9031                           ; switch strategies available:
  9032                           ; Name         Instructions Cycles
  9033                           ; simple_byte           13     7 (average)
  9034                           ; direct_byte           20     8 (fixed)
  9035                           ; jumptable            260     6 (fixed)
  9036                           ;	Chosen strategy is simple_byte
  9037                           
  9038                           	movf (__selectedInput)^080h,w
  9039  146C  086D               	opt asmopt_push
  9040                           	opt asmopt_off
  9041                           	xorlw	0^0	; case 0
  9042  146D  3A00               	skipnz
  9043  146E  1903               	goto	l3430
  9044  146F  2C50               	xorlw	1^0	; case 1
  9045  1470  3A01               	skipnz
  9046  1471  1903               	goto	l3432
  9047  1472  2C54               	xorlw	2^1	; case 2
  9048  1473  3A03               	skipnz
  9049  1474  1903               	goto	l3434
  9050  1475  2C58               	xorlw	3^2	; case 3
  9051  1476  3A01               	skipnz
  9052  1477  1903               	goto	l3436
  9053  1478  2C5C               	goto	l3438
  9054  1479  2C60               	opt asmopt_pop
  9055                           
  9056                           	
  9057                           l204:	
  9058  147A                     	line	27
  9059                           	
  9060                           l3444:	
  9061  147A                     ;Input.c: 27:     _inputUpdateRequired = 0;
  9062                           	clrf	(__inputUpdateRequired)
  9063  147A  01FD               	line	28
  9064                           	
  9065                           l201:	
  9066  147B                     	return
  9067  147B  0008               	opt stack 0
  9068                           GLOBAL	__end_of_activateSelectedRelay
  9069                           	__end_of_activateSelectedRelay:
  9070  147C                     	signat	_activateSelectedRelay,89
  9071                           	global	_isr
  9072                           
  9073 ;; *************** function _isr *****************
  9074 ;; Defined at:
  9075 ;;		line 51 in file "main.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;		None
  9078 ;; Auto vars:     Size  Location     Type
  9079 ;;		None
  9080 ;; Return value:  Size  Location     Type
  9081 ;;                  1    wreg      void 
  9082 ;; Registers used:
  9083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9084 ;; Tracked objects:
  9085 ;;		On entry : 0/0
  9086 ;;		On exit  : 0/0
  9087 ;;		Unchanged: 0/0
  9088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9089 ;;      Params:         0       0       0       0       0
  9090 ;;      Locals:         0       0       0       0       0
  9091 ;;      Temps:          0       4       0       0       0
  9092 ;;      Totals:         0       4       0       0       0
  9093 ;;Total ram usage:        4 bytes
  9094 ;; Hardware stack levels used:    1
  9095 ;; Hardware stack levels required when called:    4
  9096 ;; This function calls:
  9097 ;;		_handle_potmeter
  9098 ;;		_handle_rotary
  9099 ;;		_start_receive
  9100 ;; This function is called by:
  9101 ;;		Interrupt level 1
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9105                           	file	"main.c"
  9106                           	line	51
  9107                           global __ptext25
  9108                           __ptext25:	;psect for function _isr
  9109  13AC                     psect	text25
  9110                           	file	"main.c"
  9111                           	line	51
  9112                           	global	__size_of_isr
  9113                           	__size_of_isr	equ	__end_of_isr-_isr
  9114  0031                     	
  9115                           _isr:	
  9116  13AC                     ;incstack = 0
  9117 ;; hardware stack exceeded
  9118                           	opt	stack 0
  9119                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9120                           psect	intentry,class=CODE,delta=2
  9121                           global __pintentry
  9122                           __pintentry:
  9123  0004                     global interrupt_function
  9124                           interrupt_function:
  9125  0004                     	global saved_w
  9126                           	saved_w	set	btemp+0
  9127  007E                     	movwf	saved_w
  9128  0004  00FE               	swapf	status,w
  9129  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  9130  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  9131  0007  1303               	movwf	(??_isr+0)
  9132  0008  00DC               	movf	fsr0,w
  9133  0009  0804               	movwf	(??_isr+1)
  9134  000A  00DD               	movf	pclath,w
  9135  000B  080A               	movwf	(??_isr+2)
  9136  000C  00DE               	movf	btemp+1,w
  9137  000D  087F               	movwf	(??_isr+3)
  9138  000E  00DF               	ljmp	_isr
  9139  000F  160A  118A  2BAC   psect	text25
  9140                           	line	53
  9141                           	
  9142                           i1l3550:	
  9143  13AC                     ;main.c: 53:     if (INTCONbits.RBIF) {
  9144                           	btfss	(11),0	;volatile
  9145  13AC  1C0B               	goto	u456_21
  9146  13AD  2BAF               	goto	u456_20
  9147  13AE  2BB0               u456_21:
  9148  13AF                     	goto	i1l3560
  9149  13AF  2BC3               u456_20:
  9150  13B0                     	line	55
  9151                           	
  9152                           i1l3552:	
  9153  13B0                     ;main.c: 55:         handle_rotary();
  9154                           	fcall	_handle_rotary
  9155  13B0  120A  158A  23F9  160A  118A  	line	57
  9156                           	
  9157                           i1l3554:	
  9158  13B5                     ;main.c: 57:         if (PORTBbits.RB0 == 0) {
  9159                           	bcf	status, 5	;RP0=0, select bank0
  9160  13B5  1283               	bcf	status, 6	;RP1=0, select bank0
  9161  13B6  1303               	btfsc	(6),0	;volatile
  9162  13B7  1806               	goto	u457_21
  9163  13B8  2BBA               	goto	u457_20
  9164  13B9  2BBB               u457_21:
  9165  13BA                     	goto	i1l3558
  9166  13BA  2BC1               u457_20:
  9167  13BB                     	line	58
  9168                           	
  9169                           i1l3556:	
  9170  13BB                     ;main.c: 58:             start_receive();
  9171                           	fcall	_start_receive
  9172  13BB  120A  158A  2227  160A  118A  	goto	i1l3558
  9173  13C0  2BC1               	line	59
  9174                           ;main.c: 59:         }
  9175                           	
  9176                           i1l67:	
  9177  13C1                     	line	61
  9178                           	
  9179                           i1l3558:	
  9180  13C1                     ;main.c: 61:         INTCONbits.RBIF = 0;
  9181                           	bcf	(11),0	;volatile
  9182  13C1  100B               	goto	i1l3560
  9183  13C2  2BC3               	line	62
  9184                           ;main.c: 62:     }
  9185                           	
  9186                           i1l66:	
  9187  13C3                     	line	64
  9188                           	
  9189                           i1l3560:	
  9190  13C3                     ;main.c: 64:     if (PIR1bits.ADIF) {
  9191                           	bcf	status, 5	;RP0=0, select bank0
  9192  13C3  1283               	bcf	status, 6	;RP1=0, select bank0
  9193  13C4  1303               	btfss	(12),6	;volatile
  9194  13C5  1F0C               	goto	u458_21
  9195  13C6  2BC8               	goto	u458_20
  9196  13C7  2BC9               u458_21:
  9197  13C8                     	goto	i1l69
  9198  13C8  2BD2               u458_20:
  9199  13C9                     	line	66
  9200                           	
  9201                           i1l3562:	
  9202  13C9                     ;main.c: 66:         handle_potmeter();
  9203                           	fcall	_handle_potmeter
  9204  13C9  160A  118A  247C  160A  118A  	line	68
  9205                           	
  9206                           i1l3564:	
  9207  13CE                     ;main.c: 68:         PIR1bits.ADIF = 0;
  9208                           	bcf	status, 5	;RP0=0, select bank0
  9209  13CE  1283               	bcf	status, 6	;RP1=0, select bank0
  9210  13CF  1303               	bcf	(12),6	;volatile
  9211  13D0  130C               	goto	i1l69
  9212  13D1  2BD2               	line	69
  9213                           ;main.c: 69:     }
  9214                           	
  9215                           i1l68:	
  9216  13D2                     	line	71
  9217                           	
  9218                           i1l69:	
  9219  13D2                     	movf	(??_isr+3),w
  9220  13D2  085F               	movwf	btemp+1
  9221  13D3  00FF               	movf	(??_isr+2),w
  9222  13D4  085E               	movwf	pclath
  9223  13D5  008A               	movf	(??_isr+1),w
  9224  13D6  085D               	movwf	fsr0
  9225  13D7  0084               	swapf	(??_isr+0)^00h,w
  9226  13D8  0E5C               	movwf	status
  9227  13D9  0083               	swapf	saved_w,f
  9228  13DA  0EFE               	swapf	saved_w,w
  9229  13DB  0E7E               	retfie
  9230  13DC  0009               	opt stack 0
  9231                           GLOBAL	__end_of_isr
  9232                           	__end_of_isr:
  9233  13DD                     	signat	_isr,89
  9234                           	global	_start_receive
  9235                           
  9236 ;; *************** function _start_receive *****************
  9237 ;; Defined at:
  9238 ;;		line 14 in file "Remote.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;  i               2    9[COMMON] int 
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9252 ;;      Params:         0       0       0       0       0
  9253 ;;      Locals:         2       0       0       0       0
  9254 ;;      Temps:          8       0       0       0       0
  9255 ;;      Totals:        10       0       0       0       0
  9256 ;;Total ram usage:       10 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    1
  9259 ;; This function calls:
  9260 ;;		_handle_remote
  9261 ;; This function is called by:
  9262 ;;		_isr
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9266                           	file	"Remote.c"
  9267                           	line	14
  9268                           global __ptext26
  9269                           __ptext26:	;psect for function _start_receive
  9270  0A27                     psect	text26
  9271                           	file	"Remote.c"
  9272                           	line	14
  9273                           	global	__size_of_start_receive
  9274                           	__size_of_start_receive	equ	__end_of_start_receive-_start_receive
  9275  006C                     	
  9276                           _start_receive:	
  9277  0A27                     ;incstack = 0
  9278 ;; hardware stack exceeded
  9279                           	opt	stack 0
  9280                           ; Regs used in _start_receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9281                           	line	16
  9282                           	
  9283                           i1l3508:	
  9284  0A27                     ;Remote.c: 16:     ir_input = 0;
  9285                           	movlw	high highword(0)
  9286  0A27  3000               	bcf	status, 5	;RP0=0, select bank0
  9287  0A28  1283               	bcf	status, 6	;RP1=0, select bank0
  9288  0A29  1303               	movwf	(_ir_input+3)
  9289  0A2A  00E3               	movlw	low highword(0)
  9290  0A2B  3000               	movwf	(_ir_input+2)
  9291  0A2C  00E2               	movlw	high(0)
  9292  0A2D  3000               	movwf	(_ir_input+1)
  9293  0A2E  00E1               	movlw	low(0)
  9294  0A2F  3000               	movwf	(_ir_input)
  9295  0A30  00E0               
  9296                           	line	19
  9297                           ;Remote.c: 19:     _delay((unsigned long)((633)*(4000000/4000000.0)));
  9298                           	opt asmopt_push
  9299                           opt asmopt_off
  9300                           	movlw	210
  9301  0A31  30D2               movwf	((??_start_receive+0)+0),f
  9302  0A32  00F2               	u460_27:
  9303  0A33                     decfsz	(??_start_receive+0)+0,f
  9304  0A33  0BF2               	goto	u460_27
  9305  0A34  2A33               	nop2
  9306  0A35  2A36               opt asmopt_pop
  9307                           
  9308                           	line	20
  9309                           	
  9310                           i1l3510:	
  9311  0A36                     ;Remote.c: 20:     for (int i = 0; i < 12; i++) {
  9312                           	clrf	(start_receive@i)
  9313  0A36  01FA               	clrf	(start_receive@i+1)
  9314  0A37  01FB               	
  9315                           i1l3512:	
  9316  0A38                     	movf	(start_receive@i+1),w
  9317  0A38  087B               	xorlw	80h
  9318  0A39  3A80               	movwf	btemp+1
  9319  0A3A  00FF               	movlw	(0)^80h
  9320  0A3B  3080               	subwf	btemp+1,w
  9321  0A3C  027F               	skipz
  9322  0A3D  1D03               	goto	u450_25
  9323  0A3E  2A41               	movlw	0Ch
  9324  0A3F  300C               	subwf	(start_receive@i),w
  9325  0A40  027A               u450_25:
  9326  0A41                     
  9327                           	skipc
  9328  0A41  1C03               	goto	u450_21
  9329  0A42  2A44               	goto	u450_20
  9330  0A43  2A45               u450_21:
  9331  0A44                     	goto	i1l3516
  9332  0A44  2A47               u450_20:
  9333  0A45                     	goto	i1l3524
  9334  0A45  2A8D               	
  9335                           i1l3514:	
  9336  0A46                     	goto	i1l3524
  9337  0A46  2A8D               	
  9338                           i1l376:	
  9339  0A47                     	line	21
  9340                           	
  9341                           i1l3516:	
  9342  0A47                     ;Remote.c: 21:         ir_input = (ir_input << 1) | !PORTBbits.RB0;
  9343                           	clrc
  9344  0A47  1003               	bcf	status, 5	;RP0=0, select bank0
  9345  0A48  1283               	bcf	status, 6	;RP1=0, select bank0
  9346  0A49  1303               	btfss	(6),0	;volatile
  9347  0A4A  1C06               	setc
  9348  0A4B  1403               	movlw	0
  9349  0A4C  3000               	skipnc
  9350  0A4D  1803               	movlw	1
  9351  0A4E  3001               
  9352                           	movwf	(??_start_receive+0)+0
  9353  0A4F  00F2               	clrf	((??_start_receive+0)+0+1)
  9354  0A50  01F3               	clrf	((??_start_receive+0)+0+2)
  9355  0A51  01F4               	clrf	((??_start_receive+0)+0+3)
  9356  0A52  01F5               	movf	(_ir_input),w
  9357  0A53  0860               	movwf	(??_start_receive+4)+0
  9358  0A54  00F6               	movf	(_ir_input+1),w
  9359  0A55  0861               	movwf	((??_start_receive+4)+0+1)
  9360  0A56  00F7               	movf	(_ir_input+2),w
  9361  0A57  0862               	movwf	((??_start_receive+4)+0+2)
  9362  0A58  00F8               	movf	(_ir_input+3),w
  9363  0A59  0863               	movwf	((??_start_receive+4)+0+3)
  9364  0A5A  00F9               	movlw	01h
  9365  0A5B  3001               u451_25:
  9366  0A5C                     	clrc
  9367  0A5C  1003               	rlf	(??_start_receive+4)+0,f
  9368  0A5D  0DF6               	rlf	(??_start_receive+4)+1,f
  9369  0A5E  0DF7               	rlf	(??_start_receive+4)+2,f
  9370  0A5F  0DF8               	rlf	(??_start_receive+4)+3,f
  9371  0A60  0DF9               u451_20:
  9372  0A61                     	addlw	-1
  9373  0A61  3EFF               	skipz
  9374  0A62  1D03               	goto	u451_25
  9375  0A63  2A5C               	movf	0+(??_start_receive+4)+0,w
  9376  0A64  0876               	iorwf	(??_start_receive+0)+0,f
  9377  0A65  04F2               	movf	1+(??_start_receive+4)+0,w
  9378  0A66  0877               	iorwf	(??_start_receive+0)+1,f
  9379  0A67  04F3               	movf	2+(??_start_receive+4)+0,w
  9380  0A68  0878               	iorwf	(??_start_receive+0)+2,f
  9381  0A69  04F4               	movf	3+(??_start_receive+4)+0,w
  9382  0A6A  0879               	iorwf	(??_start_receive+0)+3,f
  9383  0A6B  04F5               	movf	3+(??_start_receive+0)+0,w
  9384  0A6C  0875               	movwf	(_ir_input+3)
  9385  0A6D  00E3               	movf	2+(??_start_receive+0)+0,w
  9386  0A6E  0874               	movwf	(_ir_input+2)
  9387  0A6F  00E2               	movf	1+(??_start_receive+0)+0,w
  9388  0A70  0873               	movwf	(_ir_input+1)
  9389  0A71  00E1               	movf	0+(??_start_receive+0)+0,w
  9390  0A72  0872               	movwf	(_ir_input)
  9391  0A73  00E0               
  9392                           	line	23
  9393                           	
  9394                           i1l3518:	
  9395  0A74                     ;Remote.c: 23:         _delay((unsigned long)((1266)*(4000000/4000000.0)));
  9396                           	opt asmopt_push
  9397                           opt asmopt_off
  9398                           	movlw	253
  9399  0A74  30FD               movwf	((??_start_receive+0)+0),f
  9400  0A75  00F2               	u461_27:
  9401  0A76                     	nop2
  9402  0A76  2A77               decfsz	(??_start_receive+0)+0,f
  9403  0A77  0BF2               	goto	u461_27
  9404  0A78  2A76               opt asmopt_pop
  9405                           
  9406                           	line	24
  9407                           	
  9408                           i1l3520:	
  9409  0A79                     ;Remote.c: 24:     }
  9410                           	movlw	01h
  9411  0A79  3001               	addwf	(start_receive@i),f
  9412  0A7A  07FA               	skipnc
  9413  0A7B  1803               	incf	(start_receive@i+1),f
  9414  0A7C  0AFB               	movlw	0
  9415  0A7D  3000               	addwf	(start_receive@i+1),f
  9416  0A7E  07FB               	
  9417                           i1l3522:	
  9418  0A7F                     	movf	(start_receive@i+1),w
  9419  0A7F  087B               	xorlw	80h
  9420  0A80  3A80               	movwf	btemp+1
  9421  0A81  00FF               	movlw	(0)^80h
  9422  0A82  3080               	subwf	btemp+1,w
  9423  0A83  027F               	skipz
  9424  0A84  1D03               	goto	u452_25
  9425  0A85  2A88               	movlw	0Ch
  9426  0A86  300C               	subwf	(start_receive@i),w
  9427  0A87  027A               u452_25:
  9428  0A88                     
  9429                           	skipc
  9430  0A88  1C03               	goto	u452_21
  9431  0A89  2A8B               	goto	u452_20
  9432  0A8A  2A8C               u452_21:
  9433  0A8B                     	goto	i1l3516
  9434  0A8B  2A47               u452_20:
  9435  0A8C                     	goto	i1l3524
  9436  0A8C  2A8D               	
  9437                           i1l377:	
  9438  0A8D                     	line	26
  9439                           	
  9440                           i1l3524:	
  9441  0A8D                     ;Remote.c: 26:     handle_remote();
  9442                           	fcall	_handle_remote
  9443  0A8D  120A  158A  237F  120A  158A  	line	27
  9444                           	
  9445                           i1l378:	
  9446  0A92                     	return
  9447  0A92  0008               	opt stack 0
  9448                           GLOBAL	__end_of_start_receive
  9449                           	__end_of_start_receive:
  9450  0A93                     	signat	_start_receive,89
  9451                           	global	_handle_remote
  9452                           
  9453 ;; *************** function _handle_remote *****************
  9454 ;; Defined at:
  9455 ;;		line 30 in file "Remote.c"
  9456 ;; Parameters:    Size  Location     Type
  9457 ;;		None
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;  found           1    0[COMMON] unsigned char 
  9460 ;; Return value:  Size  Location     Type
  9461 ;;                  1    wreg      void 
  9462 ;; Registers used:
  9463 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9464 ;; Tracked objects:
  9465 ;;		On entry : 0/0
  9466 ;;		On exit  : 0/0
  9467 ;;		Unchanged: 0/0
  9468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9469 ;;      Params:         0       0       0       0       0
  9470 ;;      Locals:         1       0       0       0       0
  9471 ;;      Temps:          0       0       0       0       0
  9472 ;;      Totals:         1       0       0       0       0
  9473 ;;Total ram usage:        1 bytes
  9474 ;; Hardware stack levels used:    1
  9475 ;; This function calls:
  9476 ;;		Nothing
  9477 ;; This function is called by:
  9478 ;;		_start_receive
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  9482                           	line	30
  9483                           global __ptext27
  9484                           __ptext27:	;psect for function _handle_remote
  9485  0B7F                     psect	text27
  9486                           	file	"Remote.c"
  9487                           	line	30
  9488                           	global	__size_of_handle_remote
  9489                           	__size_of_handle_remote	equ	__end_of_handle_remote-_handle_remote
  9490  007A                     	
  9491                           _handle_remote:	
  9492  0B7F                     ;incstack = 0
  9493 ;; hardware stack exceeded
  9494                           	opt	stack 0
  9495                           ; Regs used in _handle_remote: [wreg-fsr0h+status,2+status,0]
  9496                           	line	32
  9497                           	
  9498                           i1l3248:	
  9499  0B7F                     ;Remote.c: 32:     char found = 0;
  9500                           	clrf	(handle_remote@found)
  9501  0B7F  01F1               	line	34
  9502                           ;Remote.c: 34:     switch (ir_input) {
  9503                           	goto	i1l3288
  9504  0B80  2BCA               	line	35
  9505                           ;Remote.c: 35:         case 0x0665:
  9506                           	
  9507                           i1l382:	
  9508  0B81                     	line	36
  9509                           	
  9510                           i1l3250:	
  9511  0B81                     ;Remote.c: 36:             _selectedInput = 0;
  9512                           	bsf	status, 5	;RP0=1, select bank1
  9513  0B81  1683               	bcf	status, 6	;RP1=0, select bank1
  9514  0B82  1303               	clrf	(__selectedInput)^080h
  9515  0B83  01ED               	clrf	(__selectedInput+1)^080h
  9516  0B84  01EE               	line	37
  9517                           	
  9518                           i1l3252:	
  9519  0B85                     ;Remote.c: 37:             _inputUpdateRequired = 1;
  9520                           	clrf	(__inputUpdateRequired)
  9521  0B85  01FD               	incf	(__inputUpdateRequired),f
  9522  0B86  0AFD               	line	38
  9523                           	
  9524                           i1l3254:	
  9525  0B87                     ;Remote.c: 38:             found = 1;
  9526                           	clrf	(handle_remote@found)
  9527  0B87  01F1               	incf	(handle_remote@found),f
  9528  0B88  0AF1               	line	39
  9529                           ;Remote.c: 39:             break;
  9530                           	goto	i1l3290
  9531  0B89  2BEF               	line	40
  9532                           ;Remote.c: 40:         case 0x06A3:
  9533                           	
  9534                           i1l384:	
  9535  0B8A                     	line	41
  9536                           	
  9537                           i1l3256:	
  9538  0B8A                     ;Remote.c: 41:             _selectedInput = 1;
  9539                           	movlw	01h
  9540  0B8A  3001               	bsf	status, 5	;RP0=1, select bank1
  9541  0B8B  1683               	bcf	status, 6	;RP1=0, select bank1
  9542  0B8C  1303               	movwf	(__selectedInput)^080h
  9543  0B8D  00ED               	movlw	0
  9544  0B8E  3000               	movwf	((__selectedInput)^080h)+1
  9545  0B8F  00EE               	line	42
  9546                           	
  9547                           i1l3258:	
  9548  0B90                     ;Remote.c: 42:             _inputUpdateRequired = 1;
  9549                           	clrf	(__inputUpdateRequired)
  9550  0B90  01FD               	incf	(__inputUpdateRequired),f
  9551  0B91  0AFD               	line	43
  9552                           	
  9553                           i1l3260:	
  9554  0B92                     ;Remote.c: 43:             found = 1;
  9555                           	clrf	(handle_remote@found)
  9556  0B92  01F1               	incf	(handle_remote@found),f
  9557  0B93  0AF1               	line	44
  9558                           ;Remote.c: 44:             break;
  9559                           	goto	i1l3290
  9560  0B94  2BEF               	line	45
  9561                           ;Remote.c: 45:         case 0x0669:
  9562                           	
  9563                           i1l385:	
  9564  0B95                     	line	46
  9565                           	
  9566                           i1l3262:	
  9567  0B95                     ;Remote.c: 46:             _selectedInput = 2;
  9568                           	movlw	02h
  9569  0B95  3002               	bsf	status, 5	;RP0=1, select bank1
  9570  0B96  1683               	bcf	status, 6	;RP1=0, select bank1
  9571  0B97  1303               	movwf	(__selectedInput)^080h
  9572  0B98  00ED               	movlw	0
  9573  0B99  3000               	movwf	((__selectedInput)^080h)+1
  9574  0B9A  00EE               	line	47
  9575                           	
  9576                           i1l3264:	
  9577  0B9B                     ;Remote.c: 47:             _inputUpdateRequired = 1;
  9578                           	clrf	(__inputUpdateRequired)
  9579  0B9B  01FD               	incf	(__inputUpdateRequired),f
  9580  0B9C  0AFD               	line	48
  9581                           	
  9582                           i1l3266:	
  9583  0B9D                     ;Remote.c: 48:             found = 1;
  9584                           	clrf	(handle_remote@found)
  9585  0B9D  01F1               	incf	(handle_remote@found),f
  9586  0B9E  0AF1               	line	49
  9587                           ;Remote.c: 49:             break;
  9588                           	goto	i1l3290
  9589  0B9F  2BEF               	line	50
  9590                           ;Remote.c: 50:         case 0x0663:
  9591                           	
  9592                           i1l386:	
  9593  0BA0                     	line	51
  9594                           	
  9595                           i1l3268:	
  9596  0BA0                     ;Remote.c: 51:             _selectedInput = 3;
  9597                           	movlw	03h
  9598  0BA0  3003               	bsf	status, 5	;RP0=1, select bank1
  9599  0BA1  1683               	bcf	status, 6	;RP1=0, select bank1
  9600  0BA2  1303               	movwf	(__selectedInput)^080h
  9601  0BA3  00ED               	movlw	0
  9602  0BA4  3000               	movwf	((__selectedInput)^080h)+1
  9603  0BA5  00EE               	line	52
  9604                           	
  9605                           i1l3270:	
  9606  0BA6                     ;Remote.c: 52:             _inputUpdateRequired = 1;
  9607                           	clrf	(__inputUpdateRequired)
  9608  0BA6  01FD               	incf	(__inputUpdateRequired),f
  9609  0BA7  0AFD               	line	53
  9610                           	
  9611                           i1l3272:	
  9612  0BA8                     ;Remote.c: 53:             found = 1;
  9613                           	clrf	(handle_remote@found)
  9614  0BA8  01F1               	incf	(handle_remote@found),f
  9615  0BA9  0AF1               	line	54
  9616                           ;Remote.c: 54:             break;
  9617                           	goto	i1l3290
  9618  0BAA  2BEF               	line	55
  9619                           ;Remote.c: 55:         case 0x06A9:
  9620                           	
  9621                           i1l387:	
  9622  0BAB                     	line	56
  9623                           	
  9624                           i1l3274:	
  9625  0BAB                     ;Remote.c: 56:             volume++;
  9626                           	movlw	01h
  9627  0BAB  3001               	bsf	status, 5	;RP0=1, select bank1
  9628  0BAC  1683               	bcf	status, 6	;RP1=0, select bank1
  9629  0BAD  1303               	addwf	(_volume)^080h,f
  9630  0BAE  07EB               	skipnc
  9631  0BAF  1803               	incf	(_volume+1)^080h,f
  9632  0BB0  0AEC               	movlw	0
  9633  0BB1  3000               	addwf	(_volume+1)^080h,f
  9634  0BB2  07EC               	line	57
  9635                           	
  9636                           i1l3276:	
  9637  0BB3                     ;Remote.c: 57:             found = 1;
  9638                           	clrf	(handle_remote@found)
  9639  0BB3  01F1               	incf	(handle_remote@found),f
  9640  0BB4  0AF1               	line	58
  9641                           	
  9642                           i1l3278:	
  9643  0BB5                     ;Remote.c: 58:             vol_motor = 1;
  9644                           	bcf	status, 5	;RP0=0, select bank0
  9645  0BB5  1283               	bcf	status, 6	;RP1=0, select bank0
  9646  0BB6  1303               	clrf	(_vol_motor)
  9647  0BB7  01EE               	incf	(_vol_motor),f
  9648  0BB8  0AEE               	line	60
  9649                           ;Remote.c: 60:             break;
  9650                           	goto	i1l3290
  9651  0BB9  2BEF               	line	61
  9652                           ;Remote.c: 61:         case 0x06A5:
  9653                           	
  9654                           i1l388:	
  9655  0BBA                     	line	62
  9656                           	
  9657                           i1l3280:	
  9658  0BBA                     ;Remote.c: 62:             volume--;
  9659                           	movlw	0FFh
  9660  0BBA  30FF               	bsf	status, 5	;RP0=1, select bank1
  9661  0BBB  1683               	bcf	status, 6	;RP1=0, select bank1
  9662  0BBC  1303               	addwf	(_volume)^080h,f
  9663  0BBD  07EB               	skipnc
  9664  0BBE  1803               	incf	(_volume+1)^080h,f
  9665  0BBF  0AEC               	movlw	0FFh
  9666  0BC0  30FF               	addwf	(_volume+1)^080h,f
  9667  0BC1  07EC               	line	63
  9668                           	
  9669                           i1l3282:	
  9670  0BC2                     ;Remote.c: 63:             found = 1;
  9671                           	clrf	(handle_remote@found)
  9672  0BC2  01F1               	incf	(handle_remote@found),f
  9673  0BC3  0AF1               	line	64
  9674                           	
  9675                           i1l3284:	
  9676  0BC4                     ;Remote.c: 64:             vol_motor = 1;
  9677                           	bcf	status, 5	;RP0=0, select bank0
  9678  0BC4  1283               	bcf	status, 6	;RP1=0, select bank0
  9679  0BC5  1303               	clrf	(_vol_motor)
  9680  0BC6  01EE               	incf	(_vol_motor),f
  9681  0BC7  0AEE               	line	66
  9682                           ;Remote.c: 66:             break;
  9683                           	goto	i1l3290
  9684  0BC8  2BEF               	line	67
  9685                           	
  9686                           i1l3286:	
  9687  0BC9                     ;Remote.c: 67:     }
  9688                           	goto	i1l3290
  9689  0BC9  2BEF               	
  9690                           i1l381:	
  9691  0BCA                     	
  9692                           i1l3288:	
  9693  0BCA                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  9694                           ; Switch size 1, requested type "space"
  9695                           ; Number of cases is 1, Range of values is 0 to 0
  9696                           ; switch strategies available:
  9697                           ; Name         Instructions Cycles
  9698                           ; simple_byte            4     3 (average)
  9699                           ; direct_byte           11     8 (fixed)
  9700                           ; jumptable            260     6 (fixed)
  9701                           ;	Chosen strategy is simple_byte
  9702                           
  9703                           	bcf	status, 5	;RP0=0, select bank0
  9704  0BCA  1283               	bcf	status, 6	;RP1=0, select bank0
  9705  0BCB  1303               	movf (_ir_input+3),w
  9706  0BCC  0863               	opt asmopt_push
  9707                           	opt asmopt_off
  9708                           	xorlw	0^0	; case 0
  9709  0BCD  3A00               	skipnz
  9710  0BCE  1903               	goto	i1l3672
  9711  0BCF  2BEA               	goto	i1l3290
  9712  0BD0  2BEF               	opt asmopt_pop
  9713                           	
  9714                           i1l3670:	
  9715  0BD1                     ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
                                 itches
  9716                           ; Switch size 1, requested type "space"
  9717                           ; Number of cases is 1, Range of values is 6 to 6
  9718                           ; switch strategies available:
  9719                           ; Name         Instructions Cycles
  9720                           ; simple_byte            4     3 (average)
  9721                           ; direct_byte           14    11 (fixed)
  9722                           ; jumptable            263     9 (fixed)
  9723                           ;	Chosen strategy is simple_byte
  9724                           
  9725                           	movf (_ir_input+1),w
  9726  0BD1  0861               	opt asmopt_push
  9727                           	opt asmopt_off
  9728                           	xorlw	6^0	; case 6
  9729  0BD2  3A06               	skipnz
  9730  0BD3  1903               	goto	i1l3674
  9731  0BD4  2BD6               	goto	i1l3290
  9732  0BD5  2BEF               	opt asmopt_pop
  9733                           	
  9734                           i1l3674:	
  9735  0BD6                     ; Switch size 1, requested type "space"
  9736                           ; Number of cases is 6, Range of values is 99 to 169
  9737                           ; switch strategies available:
  9738                           ; Name         Instructions Cycles
  9739                           ; simple_byte           19    10 (average)
  9740                           ; direct_byte          224    11 (fixed)
  9741                           ; jumptable            263     9 (fixed)
  9742                           ;	Chosen strategy is simple_byte
  9743                           
  9744                           	movf (_ir_input),w
  9745  0BD6  0860               	opt asmopt_push
  9746                           	opt asmopt_off
  9747                           	xorlw	99^0	; case 99
  9748  0BD7  3A63               	skipnz
  9749  0BD8  1903               	goto	i1l3268
  9750  0BD9  2BA0               	xorlw	101^99	; case 101
  9751  0BDA  3A06               	skipnz
  9752  0BDB  1903               	goto	i1l3250
  9753  0BDC  2B81               	xorlw	105^101	; case 105
  9754  0BDD  3A0C               	skipnz
  9755  0BDE  1903               	goto	i1l3262
  9756  0BDF  2B95               	xorlw	163^105	; case 163
  9757  0BE0  3ACA               	skipnz
  9758  0BE1  1903               	goto	i1l3256
  9759  0BE2  2B8A               	xorlw	165^163	; case 165
  9760  0BE3  3A06               	skipnz
  9761  0BE4  1903               	goto	i1l3280
  9762  0BE5  2BBA               	xorlw	169^165	; case 169
  9763  0BE6  3A0C               	skipnz
  9764  0BE7  1903               	goto	i1l3274
  9765  0BE8  2BAB               	goto	i1l3290
  9766  0BE9  2BEF               	opt asmopt_pop
  9767                           	
  9768                           i1l3672:	
  9769  0BEA                     ; Switch size 1, requested type "space"
  9770                           ; Number of cases is 1, Range of values is 0 to 0
  9771                           ; switch strategies available:
  9772                           ; Name         Instructions Cycles
  9773                           ; simple_byte            4     3 (average)
  9774                           ; direct_byte           11     8 (fixed)
  9775                           ; jumptable            260     6 (fixed)
  9776                           ;	Chosen strategy is simple_byte
  9777                           
  9778                           	movf (_ir_input+2),w
  9779  0BEA  0862               	opt asmopt_push
  9780                           	opt asmopt_off
  9781                           	xorlw	0^0	; case 0
  9782  0BEB  3A00               	skipnz
  9783  0BEC  1903               	goto	i1l3670
  9784  0BED  2BD1               	goto	i1l3290
  9785  0BEE  2BEF               	opt asmopt_pop
  9786                           
  9787                           	
  9788                           i1l383:	
  9789  0BEF                     	line	69
  9790                           	
  9791                           i1l3290:	
  9792  0BEF                     ;Remote.c: 69:     ir_input = 0;
  9793                           	movlw	high highword(0)
  9794  0BEF  3000               	bcf	status, 5	;RP0=0, select bank0
  9795  0BF0  1283               	movwf	(_ir_input+3)
  9796  0BF1  00E3               	movlw	low highword(0)
  9797  0BF2  3000               	movwf	(_ir_input+2)
  9798  0BF3  00E2               	movlw	high(0)
  9799  0BF4  3000               	movwf	(_ir_input+1)
  9800  0BF5  00E1               	movlw	low(0)
  9801  0BF6  3000               	movwf	(_ir_input)
  9802  0BF7  00E0               
  9803                           	line	71
  9804                           	
  9805                           i1l389:	
  9806  0BF8                     	return
  9807  0BF8  0008               	opt stack 0
  9808                           GLOBAL	__end_of_handle_remote
  9809                           	__end_of_handle_remote:
  9810  0BF9                     	signat	_handle_remote,89
  9811                           	global	_handle_rotary
  9812                           
  9813 ;; *************** function _handle_rotary *****************
  9814 ;; Defined at:
  9815 ;;		line 30 in file "Input.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;		None
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  portB           2    5[COMMON] int 
  9820 ;;  portA           2    3[COMMON] int 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1    wreg      void 
  9823 ;; Registers used:
  9824 ;;		wreg, status,2, status,0
  9825 ;; Tracked objects:
  9826 ;;		On entry : 0/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9830 ;;      Params:         0       0       0       0       0
  9831 ;;      Locals:         4       0       0       0       0
  9832 ;;      Temps:          3       0       0       0       0
  9833 ;;      Totals:         7       0       0       0       0
  9834 ;;Total ram usage:        7 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_isr
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  9843                           	file	"Input.c"
  9844                           	line	30
  9845                           global __ptext28
  9846                           __ptext28:	;psect for function _handle_rotary
  9847  0BF9                     psect	text28
  9848                           	file	"Input.c"
  9849                           	line	30
  9850                           	global	__size_of_handle_rotary
  9851                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  9852  0081                     	
  9853                           _handle_rotary:	
  9854  0BF9                     ;incstack = 0
  9855                           	opt	stack 0
  9856                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  9857                           	line	32
  9858                           	
  9859                           i1l3480:	
  9860  0BF9                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  9861                           	bcf	status, 5	;RP0=0, select bank0
  9862  0BF9  1283               	bcf	status, 6	;RP1=0, select bank0
  9863  0BFA  1303               	swapf	(6),w	;volatile
  9864  0BFB  0E06               	andlw	(1<<1)-1
  9865  0BFC  3901               	movwf	(??_handle_rotary+0)+0
  9866  0BFD  00F1               	clrf	(??_handle_rotary+0)+0+1
  9867  0BFE  01F2               	movf	0+(??_handle_rotary+0)+0,w
  9868  0BFF  0871               	movwf	(handle_rotary@portA)
  9869  0C00  00F4               	movf	1+(??_handle_rotary+0)+0,w
  9870  0C01  0872               	movwf	(handle_rotary@portA+1)
  9871  0C02  00F5               	line	33
  9872                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  9873                           	swapf	(6),w	;volatile
  9874  0C03  0E06               	movwf	(??_handle_rotary+0)+0
  9875  0C04  00F1               	rrf	(??_handle_rotary+0)+0,w
  9876  0C05  0C71               	andlw	(1<<1)-1
  9877  0C06  3901               	movwf	(??_handle_rotary+1)+0
  9878  0C07  00F2               	clrf	(??_handle_rotary+1)+0+1
  9879  0C08  01F3               	movf	0+(??_handle_rotary+1)+0,w
  9880  0C09  0872               	movwf	(handle_rotary@portB)
  9881  0C0A  00F6               	movf	1+(??_handle_rotary+1)+0,w
  9882  0C0B  0873               	movwf	(handle_rotary@portB+1)
  9883  0C0C  00F7               	line	35
  9884                           	
  9885                           i1l3482:	
  9886  0C0D                     ;Input.c: 35:         if (_lastA != portA) {
  9887                           	movf	(__lastA+1),w
  9888  0C0D  086D               	xorwf	(handle_rotary@portA+1),w
  9889  0C0E  0675               	skipz
  9890  0C0F  1D03               	goto	u442_25
  9891  0C10  2C13               	movf	(__lastA),w
  9892  0C11  086C               	xorwf	(handle_rotary@portA),w
  9893  0C12  0674               u442_25:
  9894  0C13                     
  9895                           	skipnz
  9896  0C13  1903               	goto	u442_21
  9897  0C14  2C16               	goto	u442_20
  9898  0C15  2C17               u442_21:
  9899  0C16                     	goto	i1l3494
  9900  0C16  2C3E               u442_20:
  9901  0C17                     	line	36
  9902                           	
  9903                           i1l3484:	
  9904  0C17                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  9905                           	movf	(__lastB+1),w
  9906  0C17  086B               	xorwf	(__lastA+1),w
  9907  0C18  066D               	skipz
  9908  0C19  1D03               	goto	u443_25
  9909  0C1A  2C1D               	movf	(__lastB),w
  9910  0C1B  086A               	xorwf	(__lastA),w
  9911  0C1C  066C               u443_25:
  9912  0C1D                     
  9913                           	skipz
  9914  0C1D  1D03               	goto	u443_21
  9915  0C1E  2C20               	goto	u443_20
  9916  0C1F  2C21               u443_21:
  9917  0C20                     	goto	i1l3494
  9918  0C20  2C3E               u443_20:
  9919  0C21                     	
  9920                           i1l3486:	
  9921  0C21                     	movf	((handle_rotary@portA)),w
  9922  0C21  0874               iorwf	((handle_rotary@portA+1)),w
  9923  0C22  0475               	btfsc	status,2
  9924  0C23  1903               	goto	u444_21
  9925  0C24  2C26               	goto	u444_20
  9926  0C25  2C27               u444_21:
  9927  0C26                     	goto	i1l3494
  9928  0C26  2C3E               u444_20:
  9929  0C27                     	line	37
  9930                           	
  9931                           i1l3488:	
  9932  0C27                     ;Input.c: 37:                 if (_selectedInput < 3) {
  9933                           	movlw	0
  9934  0C27  3000               	bsf	status, 5	;RP0=1, select bank1
  9935  0C28  1683               	bcf	status, 6	;RP1=0, select bank1
  9936  0C29  1303               	subwf	(__selectedInput+1)^080h,w
  9937  0C2A  026E               	movlw	03h
  9938  0C2B  3003               	skipnz
  9939  0C2C  1903               	subwf	(__selectedInput)^080h,w
  9940  0C2D  026D               	skipnc
  9941  0C2E  1803               	goto	u445_21
  9942  0C2F  2C31               	goto	u445_20
  9943  0C30  2C32               u445_21:
  9944  0C31                     	goto	i1l3492
  9945  0C31  2C39               u445_20:
  9946  0C32                     	line	38
  9947                           	
  9948                           i1l3490:	
  9949  0C32                     ;Input.c: 38:                     _selectedInput++;
  9950                           	movlw	01h
  9951  0C32  3001               	addwf	(__selectedInput)^080h,f
  9952  0C33  07ED               	skipnc
  9953  0C34  1803               	incf	(__selectedInput+1)^080h,f
  9954  0C35  0AEE               	movlw	0
  9955  0C36  3000               	addwf	(__selectedInput+1)^080h,f
  9956  0C37  07EE               	line	39
  9957                           ;Input.c: 39:                 } else {
  9958                           	goto	i1l3494
  9959  0C38  2C3E               	
  9960                           i1l213:	
  9961  0C39                     	line	40
  9962                           	
  9963                           i1l3492:	
  9964  0C39                     ;Input.c: 40:                     _selectedInput = 0;
  9965                           	clrf	(__selectedInput)^080h
  9966  0C39  01ED               	clrf	(__selectedInput+1)^080h
  9967  0C3A  01EE               	goto	i1l3494
  9968  0C3B  2C3E               	line	41
  9969                           ;Input.c: 41:                 }
  9970                           	
  9971                           i1l214:	
  9972  0C3C                     	goto	i1l3494
  9973  0C3C  2C3E               	line	42
  9974                           ;Input.c: 42:             }
  9975                           	
  9976                           i1l212:	
  9977  0C3D                     	goto	i1l3494
  9978  0C3D  2C3E               	line	43
  9979                           ;Input.c: 43:         }
  9980                           	
  9981                           i1l211:	
  9982  0C3E                     	line	45
  9983                           	
  9984                           i1l3494:	
  9985  0C3E                     ;Input.c: 45:         if (_lastB != portB) {
  9986                           	bcf	status, 5	;RP0=0, select bank0
  9987  0C3E  1283               	movf	(__lastB+1),w
  9988  0C3F  086B               	xorwf	(handle_rotary@portB+1),w
  9989  0C40  0677               	skipz
  9990  0C41  1D03               	goto	u446_25
  9991  0C42  2C45               	movf	(__lastB),w
  9992  0C43  086A               	xorwf	(handle_rotary@portB),w
  9993  0C44  0676               u446_25:
  9994  0C45                     
  9995                           	skipnz
  9996  0C45  1903               	goto	u446_21
  9997  0C46  2C48               	goto	u446_20
  9998  0C47  2C49               u446_21:
  9999  0C48                     	goto	i1l215
 10000  0C48  2C6E               u446_20:
 10001  0C49                     	line	46
 10002                           	
 10003                           i1l3496:	
 10004  0C49                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
 10005                           	movf	(__lastB+1),w
 10006  0C49  086B               	xorwf	(__lastA+1),w
 10007  0C4A  066D               	skipz
 10008  0C4B  1D03               	goto	u447_25
 10009  0C4C  2C4F               	movf	(__lastB),w
 10010  0C4D  086A               	xorwf	(__lastA),w
 10011  0C4E  066C               u447_25:
 10012  0C4F                     
 10013                           	skipz
 10014  0C4F  1D03               	goto	u447_21
 10015  0C50  2C52               	goto	u447_20
 10016  0C51  2C53               u447_21:
 10017  0C52                     	goto	i1l215
 10018  0C52  2C6E               u447_20:
 10019  0C53                     	
 10020                           i1l3498:	
 10021  0C53                     	movf	((handle_rotary@portB)),w
 10022  0C53  0876               iorwf	((handle_rotary@portB+1)),w
 10023  0C54  0477               	btfsc	status,2
 10024  0C55  1903               	goto	u448_21
 10025  0C56  2C58               	goto	u448_20
 10026  0C57  2C59               u448_21:
 10027  0C58                     	goto	i1l215
 10028  0C58  2C6E               u448_20:
 10029  0C59                     	line	47
 10030                           	
 10031                           i1l3500:	
 10032  0C59                     ;Input.c: 47:                 if (_selectedInput > 0) {
 10033                           	bsf	status, 5	;RP0=1, select bank1
 10034  0C59  1683               	bcf	status, 6	;RP1=0, select bank1
 10035  0C5A  1303               	movf	((__selectedInput)^080h),w
 10036  0C5B  086D               iorwf	((__selectedInput+1)^080h),w
 10037  0C5C  046E               	btfsc	status,2
 10038  0C5D  1903               	goto	u449_21
 10039  0C5E  2C60               	goto	u449_20
 10040  0C5F  2C61               u449_21:
 10041  0C60                     	goto	i1l3504
 10042  0C60  2C68               u449_20:
 10043  0C61                     	line	48
 10044                           	
 10045                           i1l3502:	
 10046  0C61                     ;Input.c: 48:                     _selectedInput--;
 10047                           	movlw	01h
 10048  0C61  3001               	subwf	(__selectedInput)^080h,f
 10049  0C62  02ED               	movlw	0
 10050  0C63  3000               	skipc
 10051  0C64  1C03               	decf	(__selectedInput+1)^080h,f
 10052  0C65  03EE               	subwf	(__selectedInput+1)^080h,f
 10053  0C66  02EE               	line	49
 10054                           ;Input.c: 49:                 } else {
 10055                           	goto	i1l215
 10056  0C67  2C6E               	
 10057                           i1l217:	
 10058  0C68                     	line	50
 10059                           	
 10060                           i1l3504:	
 10061  0C68                     ;Input.c: 50:                     _selectedInput = 3;
 10062                           	movlw	03h
 10063  0C68  3003               	movwf	(__selectedInput)^080h
 10064  0C69  00ED               	movlw	0
 10065  0C6A  3000               	movwf	((__selectedInput)^080h)+1
 10066  0C6B  00EE               	goto	i1l215
 10067  0C6C  2C6E               	line	51
 10068                           ;Input.c: 51:                 }
 10069                           	
 10070                           i1l218:	
 10071  0C6D                     	goto	i1l215
 10072  0C6D  2C6E               	line	52
 10073                           ;Input.c: 52:             }
 10074                           	
 10075                           i1l216:	
 10076  0C6E                     	line	53
 10077                           ;Input.c: 53:         }
 10078                           	
 10079                           i1l215:	
 10080  0C6E                     	line	55
 10081                           ;Input.c: 55:         _lastA = portA;
 10082                           	movf	(handle_rotary@portA+1),w
 10083  0C6E  0875               	bcf	status, 5	;RP0=0, select bank0
 10084  0C6F  1283               	movwf	(__lastA+1)
 10085  0C70  00ED               	movf	(handle_rotary@portA),w
 10086  0C71  0874               	movwf	(__lastA)
 10087  0C72  00EC               	line	56
 10088                           ;Input.c: 56:         _lastB = portB;
 10089                           	movf	(handle_rotary@portB+1),w
 10090  0C73  0877               	movwf	(__lastB+1)
 10091  0C74  00EB               	movf	(handle_rotary@portB),w
 10092  0C75  0876               	movwf	(__lastB)
 10093  0C76  00EA               	line	57
 10094                           	
 10095                           i1l3506:	
 10096  0C77                     ;Input.c: 57:         _inputUpdateRequired = 1;
 10097                           	clrf	(__inputUpdateRequired)
 10098  0C77  01FD               	incf	(__inputUpdateRequired),f
 10099  0C78  0AFD               	line	58
 10100                           	
 10101                           i1l219:	
 10102  0C79                     	return
 10103  0C79  0008               	opt stack 0
 10104                           GLOBAL	__end_of_handle_rotary
 10105                           	__end_of_handle_rotary:
 10106  0C7A                     	signat	_handle_rotary,89
 10107                           	global	_handle_potmeter
 10108                           
 10109 ;; *************** function _handle_potmeter *****************
 10110 ;; Defined at:
 10111 ;;		line 65 in file "Volume.c"
 10112 ;; Parameters:    Size  Location     Type
 10113 ;;		None
 10114 ;; Auto vars:     Size  Location     Type
 10115 ;;  ad_result       2   58[BANK0 ] unsigned int 
 10116 ;;  newVol          2   56[BANK0 ] int 
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      void 
 10119 ;; Registers used:
 10120 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10126 ;;      Params:         0       0       0       0       0
 10127 ;;      Locals:         0       4       0       0       0
 10128 ;;      Temps:          0       0       0       0       0
 10129 ;;      Totals:         0       4       0       0       0
 10130 ;;Total ram usage:        4 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    3
 10133 ;; This function calls:
 10134 ;;		i1_get_volume
 10135 ;; This function is called by:
 10136 ;;		_isr
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10140                           	file	"Volume.c"
 10141                           	line	65
 10142                           global __ptext29
 10143                           __ptext29:	;psect for function _handle_potmeter
 10144  147C                     psect	text29
 10145                           	file	"Volume.c"
 10146                           	line	65
 10147                           	global	__size_of_handle_potmeter
 10148                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
 10149  0039                     	
 10150                           _handle_potmeter:	
 10151  147C                     ;incstack = 0
 10152 ;; hardware stack exceeded
 10153                           	opt	stack 0
 10154                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10155                           	line	67
 10156                           	
 10157                           i1l3526:	
 10158  147C                     ;Volume.c: 67:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
 10159                           	bcf	status, 5	;RP0=0, select bank0
 10160  147C  1283               	bcf	status, 6	;RP1=0, select bank0
 10161  147D  1303               	movf	(30),w	;volatile
 10162  147E  081E               	movwf	(handle_potmeter@ad_result+1)
 10163  147F  00DB               	bsf	status, 5	;RP0=1, select bank1
 10164  1480  1683               	bcf	status, 6	;RP1=0, select bank1
 10165  1481  1303               	movf	(158)^080h,w	;volatile
 10166  1482  081E               	bcf	status, 5	;RP0=0, select bank0
 10167  1483  1283               	bcf	status, 6	;RP1=0, select bank0
 10168  1484  1303               	movwf	(handle_potmeter@ad_result)
 10169  1485  00DA               	line	69
 10170                           ;Volume.c: 69:     if (ad_result == _lastAdcResult)
 10171                           	movf	(__lastAdcResult+1),w
 10172  1486  0865               	xorwf	(handle_potmeter@ad_result+1),w
 10173  1487  065B               	skipz
 10174  1488  1D03               	goto	u453_25
 10175  1489  2C8C               	movf	(__lastAdcResult),w
 10176  148A  0864               	xorwf	(handle_potmeter@ad_result),w
 10177  148B  065A               u453_25:
 10178  148C                     
 10179                           	skipz
 10180  148C  1D03               	goto	u453_21
 10181  148D  2C8F               	goto	u453_20
 10182  148E  2C90               u453_21:
 10183  148F                     	goto	i1l3530
 10184  148F  2C92               u453_20:
 10185  1490                     	goto	i1l340
 10186  1490  2CB4               	line	70
 10187                           	
 10188                           i1l3528:	
 10189  1491                     ;Volume.c: 70:         return;
 10190                           	goto	i1l340
 10191  1491  2CB4               	
 10192                           i1l339:	
 10193  1492                     	line	73
 10194                           	
 10195                           i1l3530:	
 10196  1492                     ;Volume.c: 73:     int newVol = get_volume(ad_result);
 10197                           	movf	(handle_potmeter@ad_result+1),w
 10198  1492  085B               	movwf	(i1get_volume@ad_result+1)
 10199  1493  00D3               	movf	(handle_potmeter@ad_result),w
 10200  1494  085A               	movwf	(i1get_volume@ad_result)
 10201  1495  00D2               	fcall	i1_get_volume
 10202  1496  160A  118A  2797  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 10203  149B  1283               	bcf	status, 6	;RP1=0, select bank0
 10204  149C  1303               	movf	(1+(?i1_get_volume)),w
 10205  149D  0853               	movwf	(handle_potmeter@newVol+1)
 10206  149E  00D9               	movf	(0+(?i1_get_volume)),w
 10207  149F  0852               	movwf	(handle_potmeter@newVol)
 10208  14A0  00D8               	line	77
 10209                           	
 10210                           i1l3532:	
 10211  14A1                     ;Volume.c: 77:     if (newVol >= 0) {
 10212                           	btfsc	(handle_potmeter@newVol+1),7
 10213  14A1  1BD9               	goto	u454_21
 10214  14A2  2CA4               	goto	u454_20
 10215  14A3  2CA5               u454_21:
 10216  14A4                     	goto	i1l341
 10217  14A4  2CAF               u454_20:
 10218  14A5                     	line	78
 10219                           	
 10220                           i1l3534:	
 10221  14A5                     ;Volume.c: 78:         volume = newVol;
 10222                           	movf	(handle_potmeter@newVol+1),w
 10223  14A5  0859               	bsf	status, 5	;RP0=1, select bank1
 10224  14A6  1683               	bcf	status, 6	;RP1=0, select bank1
 10225  14A7  1303               	movwf	(_volume+1)^080h
 10226  14A8  00EC               	bcf	status, 5	;RP0=0, select bank0
 10227  14A9  1283               	bcf	status, 6	;RP1=0, select bank0
 10228  14AA  1303               	movf	(handle_potmeter@newVol),w
 10229  14AB  0858               	bsf	status, 5	;RP0=1, select bank1
 10230  14AC  1683               	bcf	status, 6	;RP1=0, select bank1
 10231  14AD  1303               	movwf	(_volume)^080h
 10232  14AE  00EB               	line	80
 10233                           ;Volume.c: 80:     }
 10234                           	
 10235                           i1l341:	
 10236  14AF                     	line	81
 10237                           ;Volume.c: 81:     _lastAdcResult = ad_result;
 10238                           	bcf	status, 5	;RP0=0, select bank0
 10239  14AF  1283               	movf	(handle_potmeter@ad_result+1),w
 10240  14B0  085B               	movwf	(__lastAdcResult+1)
 10241  14B1  00E5               	movf	(handle_potmeter@ad_result),w
 10242  14B2  085A               	movwf	(__lastAdcResult)
 10243  14B3  00E4               	line	82
 10244                           	
 10245                           i1l340:	
 10246  14B4                     	return
 10247  14B4  0008               	opt stack 0
 10248                           GLOBAL	__end_of_handle_potmeter
 10249                           	__end_of_handle_potmeter:
 10250  14B5                     	signat	_handle_potmeter,89
 10251                           	global	i1_get_volume
 10252                           
 10253 ;; *************** function i1_get_volume *****************
 10254 ;; Defined at:
 10255 ;;		line 84 in file "Volume.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  ad_result       2   50[BANK0 ] unsigned int 
 10258 ;; Auto vars:     Size  Location     Type
 10259 ;;  get_volume      2   54[BANK0 ] unsigned int 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  2   50[BANK0 ] int 
 10262 ;; Registers used:
 10263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10269 ;;      Params:         0       2       0       0       0
 10270 ;;      Locals:         0       2       0       0       0
 10271 ;;      Temps:          0       2       0       0       0
 10272 ;;      Totals:         0       6       0       0       0
 10273 ;;Total ram usage:        6 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    2
 10276 ;; This function calls:
 10277 ;;		i1___lwdiv
 10278 ;;		i1_is_deadzone
 10279 ;; This function is called by:
 10280 ;;		_handle_potmeter
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10284                           	line	84
 10285                           global __ptext30
 10286                           __ptext30:	;psect for function i1_get_volume
 10287  1797                     psect	text30
 10288                           	file	"Volume.c"
 10289                           	line	84
 10290                           	global	__size_ofi1_get_volume
 10291                           	__size_ofi1_get_volume	equ	__end_ofi1_get_volume-i1_get_volume
 10292  0069                     	
 10293                           i1_get_volume:	
 10294  1797                     ;incstack = 0
 10295 ;; hardware stack exceeded
 10296                           	opt	stack 0
 10297                           ; Regs used in i1_get_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10298                           	line	86
 10299                           	
 10300                           i1l3304:	
 10301  1797                     ;Volume.c: 84: int get_volume(unsigned int ad_result);Volume.c: 85: {;Volume.c: 86:     
                                 if (ad_result == 0 || ad_result < step_size) {
 10302                           	bcf	status, 5	;RP0=0, select bank0
 10303  1797  1283               	bcf	status, 6	;RP1=0, select bank0
 10304  1798  1303               	movf	((i1get_volume@ad_result)),w
 10305  1799  0852               iorwf	((i1get_volume@ad_result+1)),w
 10306  179A  0453               	btfsc	status,2
 10307  179B  1903               	goto	u429_21
 10308  179C  2F9E               	goto	u429_20
 10309  179D  2F9F               u429_21:
 10310  179E                     	goto	i1l3308
 10311  179E  2FBA               u429_20:
 10312  179F                     	
 10313                           i1l3306:	
 10314  179F                     	movlw	low(_step_size|8000h)
 10315  179F  308E               	movwf	fsr0
 10316  17A0  0084               	movlw	high(_step_size|8000h)
 10317  17A1  3089               	movwf	btemp+1
 10318  17A2  00FF               	fcall	stringtab
 10319  17A3  120A  158A  2000  160A  118A  	movwf	(??i1_get_volume+0)+0
 10320  17A8  00D4               	fcall	stringtab
 10321  17A9  120A  158A  2000  160A  118A  	movwf	(??i1_get_volume+0)+0+1
 10322  17AE  00D5               	movf	1+(??i1_get_volume+0)+0,w
 10323  17AF  0855               	subwf	(i1get_volume@ad_result+1),w
 10324  17B0  0253               	skipz
 10325  17B1  1D03               	goto	u430_25
 10326  17B2  2FB5               	movf	0+(??i1_get_volume+0)+0,w
 10327  17B3  0854               	subwf	(i1get_volume@ad_result),w
 10328  17B4  0252               u430_25:
 10329  17B5                     	skipnc
 10330  17B5  1803               	goto	u430_21
 10331  17B6  2FB8               	goto	u430_20
 10332  17B7  2FB9               u430_21:
 10333  17B8                     	goto	i1l3314
 10334  17B8  2FBF               u430_20:
 10335  17B9                     	goto	i1l3308
 10336  17B9  2FBA               	
 10337                           i1l346:	
 10338  17BA                     	line	87
 10339                           	
 10340                           i1l3308:	
 10341  17BA                     ;Volume.c: 87:             return 0;
 10342                           	clrf	(?i1_get_volume)
 10343  17BA  01D2               	clrf	(?i1_get_volume+1)
 10344  17BB  01D3               	goto	i1l347
 10345  17BC  2FFF               	
 10346                           i1l3310:	
 10347  17BD                     	goto	i1l347
 10348  17BD  2FFF               	line	88
 10349                           	
 10350                           i1l3312:	
 10351  17BE                     ;Volume.c: 88:     } else {
 10352                           	goto	i1l3320
 10353  17BE  2FFA               	
 10354                           i1l344:	
 10355  17BF                     	line	89
 10356                           	
 10357                           i1l3314:	
 10358  17BF                     ;Volume.c: 89:         unsigned int currentStep = ad_result / step_size;
 10359                           	movlw	low(_step_size|8000h)
 10360  17BF  308E               	movwf	fsr0
 10361  17C0  0084               	movlw	high(_step_size|8000h)
 10362  17C1  3089               	movwf	btemp+1
 10363  17C2  00FF               	fcall	stringtab
 10364  17C3  120A  158A  2000  160A  118A  	movwf	(i1___lwdiv@divisor)
 10365  17C8  00F1               	fcall	stringtab
 10366  17C9  120A  158A  2000  160A  118A  	movwf	(i1___lwdiv@divisor+1)
 10367  17CE  00F2               	movf	(i1get_volume@ad_result+1),w
 10368  17CF  0853               	movwf	(i1___lwdiv@dividend+1)
 10369  17D0  00F4               	movf	(i1get_volume@ad_result),w
 10370  17D1  0852               	movwf	(i1___lwdiv@dividend)
 10371  17D2  00F3               	fcall	i1___lwdiv
 10372  17D3  160A  118A  2532  160A  118A  	movf	(1+(?i1___lwdiv)),w
 10373  17D8  0872               	bcf	status, 5	;RP0=0, select bank0
 10374  17D9  1283               	bcf	status, 6	;RP1=0, select bank0
 10375  17DA  1303               	movwf	(i1get_volume@currentStep+1)
 10376  17DB  00D7               	movf	(0+(?i1___lwdiv)),w
 10377  17DC  0871               	movwf	(i1get_volume@currentStep)
 10378  17DD  00D6               	line	91
 10379                           ;Volume.c: 91:         if (!is_deadzone(currentStep, ad_result))
 10380                           	movf	(i1get_volume@currentStep+1),w
 10381  17DE  0857               	movwf	(i1is_deadzone@currentStep+1)
 10382  17DF  00C6               	movf	(i1get_volume@currentStep),w
 10383  17E0  0856               	movwf	(i1is_deadzone@currentStep)
 10384  17E1  00C5               	movf	(i1get_volume@ad_result+1),w
 10385  17E2  0853               	movwf	(i1is_deadzone@adcResult+1)
 10386  17E3  00C8               	movf	(i1get_volume@ad_result),w
 10387  17E4  0852               	movwf	(i1is_deadzone@adcResult)
 10388  17E5  00C7               	fcall	i1_is_deadzone
 10389  17E6  120A  158A  273A  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 10390  17EB  1283               	bcf	status, 6	;RP1=0, select bank0
 10391  17EC  1303               	movf	((0+(?i1_is_deadzone))),w
 10392  17ED  0845               iorwf	((1+(?i1_is_deadzone))),w
 10393  17EE  0446               	btfss	status,2
 10394  17EF  1D03               	goto	u431_21
 10395  17F0  2FF2               	goto	u431_20
 10396  17F1  2FF3               u431_21:
 10397  17F2                     	goto	i1l3320
 10398  17F2  2FFA               u431_20:
 10399  17F3                     	line	92
 10400                           	
 10401                           i1l3316:	
 10402  17F3                     ;Volume.c: 92:             return currentStep;
 10403                           	movf	(i1get_volume@currentStep+1),w
 10404  17F3  0857               	movwf	(?i1_get_volume+1)
 10405  17F4  00D3               	movf	(i1get_volume@currentStep),w
 10406  17F5  0856               	movwf	(?i1_get_volume)
 10407  17F6  00D2               	goto	i1l347
 10408  17F7  2FFF               	
 10409                           i1l3318:	
 10410  17F8                     	goto	i1l347
 10411  17F8  2FFF               	
 10412                           i1l349:	
 10413  17F9                     	goto	i1l3320
 10414  17F9  2FFA               	line	93
 10415                           ;Volume.c: 93:     }
 10416                           	
 10417                           i1l348:	
 10418  17FA                     	line	95
 10419                           	
 10420                           i1l3320:	
 10421  17FA                     ;Volume.c: 95:     return -1;
 10422                           	movlw	0FFh
 10423  17FA  30FF               	movwf	(?i1_get_volume)
 10424  17FB  00D2               	movlw	0FFh
 10425  17FC  30FF               	movwf	((?i1_get_volume))+1
 10426  17FD  00D3               	goto	i1l347
 10427  17FE  2FFF               	
 10428                           i1l3322:	
 10429  17FF                     	line	96
 10430                           	
 10431                           i1l347:	
 10432  17FF                     	return
 10433  17FF  0008               	opt stack 0
 10434                           GLOBAL	__end_ofi1_get_volume
 10435                           	__end_ofi1_get_volume:
 10436  1800                     	signat	i1_get_volume,90
 10437                           	global	i1_is_deadzone
 10438                           
 10439 ;; *************** function i1_is_deadzone *****************
 10440 ;; Defined at:
 10441 ;;		line 55 in file "Volume.c"
 10442 ;; Parameters:    Size  Location     Type
 10443 ;;  currentStep     2   37[BANK0 ] int 
 10444 ;;  adcResult       2   39[BANK0 ] int 
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;  is_deadzone     2   48[BANK0 ] int 
 10447 ;;  is_deadzone     2   45[BANK0 ] int 
 10448 ;;  is_deadzone     2   43[BANK0 ] int 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  2   37[BANK0 ] int 
 10451 ;; Registers used:
 10452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10458 ;;      Params:         0       4       0       0       0
 10459 ;;      Locals:         0       7       0       0       0
 10460 ;;      Temps:          0       2       0       0       0
 10461 ;;      Totals:         0      13       0       0       0
 10462 ;;Total ram usage:       13 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:    1
 10465 ;; This function calls:
 10466 ;;		i1___fladd
 10467 ;;		i1___fltol
 10468 ;;		i1___wmul
 10469 ;;		i1___xxtofl
 10470 ;; This function is called by:
 10471 ;;		i1_get_volume
 10472 ;; This function uses a non-reentrant model
 10473 ;;
 10474                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10475                           	line	55
 10476                           global __ptext31
 10477                           __ptext31:	;psect for function i1_is_deadzone
 10478  0F3A                     psect	text31
 10479                           	file	"Volume.c"
 10480                           	line	55
 10481                           	global	__size_ofi1_is_deadzone
 10482                           	__size_ofi1_is_deadzone	equ	__end_ofi1_is_deadzone-i1_is_deadzone
 10483  00C6                     	
 10484                           i1_is_deadzone:	
 10485  0F3A                     ;incstack = 0
 10486 ;; hardware stack exceeded
 10487                           	opt	stack 0
 10488                           ; Regs used in i1_is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10489                           	line	57
 10490                           	
 10491                           i1l3078:	
 10492  0F3A                     ;Volume.c: 55: int is_deadzone(int currentStep, int adcResult);Volume.c: 56: {;Volume.c:
                                  57:     int turnPoint = step_size * currentStep;
 10493                           	movlw	low(_step_size|8000h)
 10494  0F3A  308E               	movwf	fsr0
 10495  0F3B  0084               	movlw	high(_step_size|8000h)
 10496  0F3C  3089               	bcf	status, 5	;RP0=0, select bank0
 10497  0F3D  1283               	bcf	status, 6	;RP1=0, select bank0
 10498  0F3E  1303               	movwf	btemp+1
 10499  0F3F  00FF               	fcall	stringtab
 10500  0F40  120A  158A  2000  120A  158A  	movwf	(i1___wmul@multiplier)
 10501  0F45  00F1               	fcall	stringtab
 10502  0F46  120A  158A  2000  120A  158A  	movwf	(i1___wmul@multiplier+1)
 10503  0F4B  00F2               	movf	(i1is_deadzone@currentStep+1),w
 10504  0F4C  0846               	movwf	(i1___wmul@multiplicand+1)
 10505  0F4D  00F4               	movf	(i1is_deadzone@currentStep),w
 10506  0F4E  0845               	movwf	(i1___wmul@multiplicand)
 10507  0F4F  00F3               	fcall	i1___wmul
 10508  0F50  160A  118A  235A  120A  158A  	movf	(1+(?i1___wmul)),w
 10509  0F55  0872               	bcf	status, 5	;RP0=0, select bank0
 10510  0F56  1283               	bcf	status, 6	;RP1=0, select bank0
 10511  0F57  1303               	movwf	(i1is_deadzone@turnPoint+1)
 10512  0F58  00D1               	movf	(0+(?i1___wmul)),w
 10513  0F59  0871               	movwf	(i1is_deadzone@turnPoint)
 10514  0F5A  00D0               	line	59
 10515                           	
 10516                           i1l3080:	
 10517  0F5B                     ;Volume.c: 59:     int deadzoneLow = turnPoint - ((1023) * 0.01);
 10518                           	movf	(i1is_deadzone@turnPoint),w
 10519  0F5B  0850               	movwf	(i1___xxtofl@val)
 10520  0F5C  00F1               	movf	(i1is_deadzone@turnPoint+1),w
 10521  0F5D  0851               	movwf	(i1___xxtofl@val+1)
 10522  0F5E  00F2               	movlw	0
 10523  0F5F  3000               	btfsc	(i1___xxtofl@val+1),7
 10524  0F60  1BF2               	movlw	255
 10525  0F61  30FF               	movwf	(i1___xxtofl@val+2)
 10526  0F62  00F3               	movwf	(i1___xxtofl@val+3)
 10527  0F63  00F4               	movlw	low(01h)
 10528  0F64  3001               	fcall	i1___xxtofl
 10529  0F65  120A  158A  25B2  120A  158A  	movf	(3+(?i1___xxtofl)),w
 10530  0F6A  0874               	bcf	status, 5	;RP0=0, select bank0
 10531  0F6B  1283               	bcf	status, 6	;RP1=0, select bank0
 10532  0F6C  1303               	movwf	(i1___fladd@a+3)
 10533  0F6D  00AD               	movf	(2+(?i1___xxtofl)),w
 10534  0F6E  0873               	movwf	(i1___fladd@a+2)
 10535  0F6F  00AC               	movf	(1+(?i1___xxtofl)),w
 10536  0F70  0872               	movwf	(i1___fladd@a+1)
 10537  0F71  00AB               	movf	(0+(?i1___xxtofl)),w
 10538  0F72  0871               	movwf	(i1___fladd@a)
 10539  0F73  00AA               
 10540                           	movlw	0xc1
 10541  0F74  30C1               	movwf	(i1___fladd@b+3)
 10542  0F75  00A9               	movlw	0x23
 10543  0F76  3023               	movwf	(i1___fladd@b+2)
 10544  0F77  00A8               	movlw	0xae
 10545  0F78  30AE               	movwf	(i1___fladd@b+1)
 10546  0F79  00A7               	movlw	0x14
 10547  0F7A  3014               	movwf	(i1___fladd@b)
 10548  0F7B  00A6               
 10549                           	fcall	i1___fladd
 10550  0F7C  120A  118A  251F  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10551  0F81  1283               	bcf	status, 6	;RP1=0, select bank0
 10552  0F82  1303               	movf	(3+(?i1___fladd)),w
 10553  0F83  0829               	movwf	(i1___fltol@f1+3)
 10554  0F84  00BD               	movf	(2+(?i1___fladd)),w
 10555  0F85  0828               	movwf	(i1___fltol@f1+2)
 10556  0F86  00BC               	movf	(1+(?i1___fladd)),w
 10557  0F87  0827               	movwf	(i1___fltol@f1+1)
 10558  0F88  00BB               	movf	(0+(?i1___fladd)),w
 10559  0F89  0826               	movwf	(i1___fltol@f1)
 10560  0F8A  00BA               
 10561                           	fcall	i1___fltol
 10562  0F8B  120A  158A  247A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10563  0F90  1283               	bcf	status, 6	;RP1=0, select bank0
 10564  0F91  1303               	movf	(1+(?i1___fltol)),w
 10565  0F92  083B               	movwf	(i1is_deadzone@deadzoneLow+1)
 10566  0F93  00CC               	movf	(0+(?i1___fltol)),w
 10567  0F94  083A               	movwf	(i1is_deadzone@deadzoneLow)
 10568  0F95  00CB               	line	60
 10569                           	
 10570                           i1l3082:	
 10571  0F96                     ;Volume.c: 60:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
 10572                           	movf	(i1is_deadzone@turnPoint),w
 10573  0F96  0850               	movwf	(i1___xxtofl@val)
 10574  0F97  00F1               	movf	(i1is_deadzone@turnPoint+1),w
 10575  0F98  0851               	movwf	(i1___xxtofl@val+1)
 10576  0F99  00F2               	movlw	0
 10577  0F9A  3000               	btfsc	(i1___xxtofl@val+1),7
 10578  0F9B  1BF2               	movlw	255
 10579  0F9C  30FF               	movwf	(i1___xxtofl@val+2)
 10580  0F9D  00F3               	movwf	(i1___xxtofl@val+3)
 10581  0F9E  00F4               	movlw	low(01h)
 10582  0F9F  3001               	fcall	i1___xxtofl
 10583  0FA0  120A  158A  25B2  120A  158A  	movf	(3+(?i1___xxtofl)),w
 10584  0FA5  0874               	bcf	status, 5	;RP0=0, select bank0
 10585  0FA6  1283               	bcf	status, 6	;RP1=0, select bank0
 10586  0FA7  1303               	movwf	(i1___fladd@a+3)
 10587  0FA8  00AD               	movf	(2+(?i1___xxtofl)),w
 10588  0FA9  0873               	movwf	(i1___fladd@a+2)
 10589  0FAA  00AC               	movf	(1+(?i1___xxtofl)),w
 10590  0FAB  0872               	movwf	(i1___fladd@a+1)
 10591  0FAC  00AB               	movf	(0+(?i1___xxtofl)),w
 10592  0FAD  0871               	movwf	(i1___fladd@a)
 10593  0FAE  00AA               
 10594                           	movlw	0x41
 10595  0FAF  3041               	movwf	(i1___fladd@b+3)
 10596  0FB0  00A9               	movlw	0x23
 10597  0FB1  3023               	movwf	(i1___fladd@b+2)
 10598  0FB2  00A8               	movlw	0xae
 10599  0FB3  30AE               	movwf	(i1___fladd@b+1)
 10600  0FB4  00A7               	movlw	0x14
 10601  0FB5  3014               	movwf	(i1___fladd@b)
 10602  0FB6  00A6               
 10603                           	fcall	i1___fladd
 10604  0FB7  120A  118A  251F  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10605  0FBC  1283               	bcf	status, 6	;RP1=0, select bank0
 10606  0FBD  1303               	movf	(3+(?i1___fladd)),w
 10607  0FBE  0829               	movwf	(i1___fltol@f1+3)
 10608  0FBF  00BD               	movf	(2+(?i1___fladd)),w
 10609  0FC0  0828               	movwf	(i1___fltol@f1+2)
 10610  0FC1  00BC               	movf	(1+(?i1___fladd)),w
 10611  0FC2  0827               	movwf	(i1___fltol@f1+1)
 10612  0FC3  00BB               	movf	(0+(?i1___fladd)),w
 10613  0FC4  0826               	movwf	(i1___fltol@f1)
 10614  0FC5  00BA               
 10615                           	fcall	i1___fltol
 10616  0FC6  120A  158A  247A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10617  0FCB  1283               	bcf	status, 6	;RP1=0, select bank0
 10618  0FCC  1303               	movf	(1+(?i1___fltol)),w
 10619  0FCD  083B               	movwf	(i1is_deadzone@deadzoneHigh+1)
 10620  0FCE  00CE               	movf	(0+(?i1___fltol)),w
 10621  0FCF  083A               	movwf	(i1is_deadzone@deadzoneHigh)
 10622  0FD0  00CD               	line	62
 10623                           	
 10624                           i1l3084:	
 10625  0FD1                     ;Volume.c: 62:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
 10626                           	clrf	(i1_is_deadzone$899)
 10627  0FD1  01CF               	
 10628                           i1l3086:	
 10629  0FD2                     	movf	(i1is_deadzone@deadzoneLow+1),w
 10630  0FD2  084C               	xorlw	80h
 10631  0FD3  3A80               	movwf	(??i1_is_deadzone+0)+0
 10632  0FD4  00C9               	movf	(i1is_deadzone@adcResult+1),w
 10633  0FD5  0848               	xorlw	80h
 10634  0FD6  3A80               	subwf	(??i1_is_deadzone+0)+0,w
 10635  0FD7  0249               	skipz
 10636  0FD8  1D03               	goto	u411_25
 10637  0FD9  2FDC               	movf	(i1is_deadzone@adcResult),w
 10638  0FDA  0847               	subwf	(i1is_deadzone@deadzoneLow),w
 10639  0FDB  024B               u411_25:
 10640  0FDC                     
 10641                           	skipnc
 10642  0FDC  1803               	goto	u411_21
 10643  0FDD  2FDF               	goto	u411_20
 10644  0FDE  2FE0               u411_21:
 10645  0FDF                     	goto	i1l3092
 10646  0FDF  2FF5               u411_20:
 10647  0FE0                     	
 10648                           i1l3088:	
 10649  0FE0                     	bcf	status, 5	;RP0=0, select bank0
 10650  0FE0  1283               	bcf	status, 6	;RP1=0, select bank0
 10651  0FE1  1303               	movf	(i1is_deadzone@adcResult+1),w
 10652  0FE2  0848               	xorlw	80h
 10653  0FE3  3A80               	movwf	(??i1_is_deadzone+0)+0
 10654  0FE4  00C9               	movf	(i1is_deadzone@deadzoneHigh+1),w
 10655  0FE5  084E               	xorlw	80h
 10656  0FE6  3A80               	subwf	(??i1_is_deadzone+0)+0,w
 10657  0FE7  0249               	skipz
 10658  0FE8  1D03               	goto	u412_25
 10659  0FE9  2FEC               	movf	(i1is_deadzone@deadzoneHigh),w
 10660  0FEA  084D               	subwf	(i1is_deadzone@adcResult),w
 10661  0FEB  0247               u412_25:
 10662  0FEC                     
 10663                           	skipnc
 10664  0FEC  1803               	goto	u412_21
 10665  0FED  2FEF               	goto	u412_20
 10666  0FEE  2FF0               u412_21:
 10667  0FEF                     	goto	i1l3092
 10668  0FEF  2FF5               u412_20:
 10669  0FF0                     	
 10670                           i1l3090:	
 10671  0FF0                     	bcf	status, 5	;RP0=0, select bank0
 10672  0FF0  1283               	bcf	status, 6	;RP1=0, select bank0
 10673  0FF1  1303               	clrf	(i1_is_deadzone$899)
 10674  0FF2  01CF               	incf	(i1_is_deadzone$899),f
 10675  0FF3  0ACF               	goto	i1l3092
 10676  0FF4  2FF5               	
 10677                           i1l335:	
 10678  0FF5                     	
 10679                           i1l3092:	
 10680  0FF5                     	bcf	status, 5	;RP0=0, select bank0
 10681  0FF5  1283               	bcf	status, 6	;RP1=0, select bank0
 10682  0FF6  1303               	movf	(i1_is_deadzone$899),w
 10683  0FF7  084F               	movwf	(??i1_is_deadzone+0)+0
 10684  0FF8  00C9               	clrf	(??i1_is_deadzone+0)+0+1
 10685  0FF9  01CA               	movf	0+(??i1_is_deadzone+0)+0,w
 10686  0FFA  0849               	movwf	(?i1_is_deadzone)
 10687  0FFB  00C5               	movf	1+(??i1_is_deadzone+0)+0,w
 10688  0FFC  084A               	movwf	(?i1_is_deadzone+1)
 10689  0FFD  00C6               	goto	i1l336
 10690  0FFE  2FFF               	
 10691                           i1l3094:	
 10692  0FFF                     	line	63
 10693                           	
 10694                           i1l336:	
 10695  0FFF                     	return
 10696  0FFF  0008               	opt stack 0
 10697                           GLOBAL	__end_ofi1_is_deadzone
 10698                           	__end_ofi1_is_deadzone:
 10699  1000                     	signat	i1_is_deadzone,90
 10700                           	global	i1___xxtofl
 10701                           
 10702 ;; *************** function i1___xxtofl *****************
 10703 ;; Defined at:
 10704 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;  sign            1    wreg     unsigned char 
 10707 ;;  val             4    0[COMMON] long 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  sign            1    0[BANK0 ] unsigned char 
 10710 ;;  __xxtofl        4    2[BANK0 ] unsigned long 
 10711 ;;  __xxtofl        1    1[BANK0 ] unsigned char 
 10712 ;; Return value:  Size  Location     Type
 10713 ;;                  4    0[COMMON] unsigned char 
 10714 ;; Registers used:
 10715 ;;		wreg, status,2, status,0
 10716 ;; Tracked objects:
 10717 ;;		On entry : 0/0
 10718 ;;		On exit  : 0/0
 10719 ;;		Unchanged: 0/0
 10720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10721 ;;      Params:         4       0       0       0       0
 10722 ;;      Locals:         0       6       0       0       0
 10723 ;;      Temps:          4       0       0       0       0
 10724 ;;      Totals:         8       6       0       0       0
 10725 ;;Total ram usage:       14 bytes
 10726 ;; Hardware stack levels used:    1
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		i1_is_deadzone
 10731 ;; This function uses a non-reentrant model
 10732 ;;
 10733                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 10734                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
 10735                           	line	10
 10736                           global __ptext32
 10737                           __ptext32:	;psect for function i1___xxtofl
 10738  0DB2                     psect	text32
 10739                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
 10740                           	line	10
 10741                           	global	__size_ofi1___xxtofl
 10742                           	__size_ofi1___xxtofl	equ	__end_ofi1___xxtofl-i1___xxtofl
 10743  00C4                     	
 10744                           i1___xxtofl:	
 10745  0DB2                     ;incstack = 0
 10746 ;; hardware stack exceeded
 10747                           	opt	stack 0
 10748                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 10749                           ;i1___xxtofl@sign stored from wreg
 10750                           	bcf	status, 5	;RP0=0, select bank0
 10751  0DB2  1283               	bcf	status, 6	;RP1=0, select bank0
 10752  0DB3  1303               	movwf	(i1___xxtofl@sign)
 10753  0DB4  00A0               	line	15
 10754                           	
 10755                           i1l2946:	
 10756  0DB5                     	movf	((i1___xxtofl@sign)),w
 10757  0DB5  0820               	btfsc	status,2
 10758  0DB6  1903               	goto	u386_21
 10759  0DB7  2DB9               	goto	u386_20
 10760  0DB8  2DBA               u386_21:
 10761  0DB9                     	goto	i1l2952
 10762  0DB9  2DCE               u386_20:
 10763  0DBA                     	
 10764                           i1l2948:	
 10765  0DBA                     	btfss	(i1___xxtofl@val+3),7
 10766  0DBA  1FF4               	goto	u387_21
 10767  0DBB  2DBD               	goto	u387_20
 10768  0DBC  2DBE               u387_21:
 10769  0DBD                     	goto	i1l2952
 10770  0DBD  2DCE               u387_20:
 10771  0DBE                     	line	16
 10772                           	
 10773                           i1l2950:	
 10774  0DBE                     	comf	(i1___xxtofl@val)+0,w
 10775  0DBE  0971               	movwf	(i1___xxtofl@arg)
 10776  0DBF  00A2               	comf	(i1___xxtofl@val)+1,w
 10777  0DC0  0972               	movwf	(i1___xxtofl@arg+1)
 10778  0DC1  00A3               	comf	(i1___xxtofl@val)+2,w
 10779  0DC2  0973               	movwf	(i1___xxtofl@arg+2)
 10780  0DC3  00A4               	comf	(i1___xxtofl@val)+3,w
 10781  0DC4  0974               	movwf	(i1___xxtofl@arg+3)
 10782  0DC5  00A5               	incf	(i1___xxtofl@arg),f
 10783  0DC6  0AA2               	skipnz
 10784  0DC7  1903               	incf	(i1___xxtofl@arg+1),f
 10785  0DC8  0AA3               	skipnz
 10786  0DC9  1903               	incf	(i1___xxtofl@arg+2),f
 10787  0DCA  0AA4               	skipnz
 10788  0DCB  1903               	incf	(i1___xxtofl@arg+3),f
 10789  0DCC  0AA5               	line	17
 10790                           	goto	i1l911
 10791  0DCD  2DD6               	line	18
 10792                           	
 10793                           i1l910:	
 10794  0DCE                     	line	19
 10795                           	
 10796                           i1l2952:	
 10797  0DCE                     	movf	(i1___xxtofl@val+3),w
 10798  0DCE  0874               	movwf	(i1___xxtofl@arg+3)
 10799  0DCF  00A5               	movf	(i1___xxtofl@val+2),w
 10800  0DD0  0873               	movwf	(i1___xxtofl@arg+2)
 10801  0DD1  00A4               	movf	(i1___xxtofl@val+1),w
 10802  0DD2  0872               	movwf	(i1___xxtofl@arg+1)
 10803  0DD3  00A3               	movf	(i1___xxtofl@val),w
 10804  0DD4  0871               	movwf	(i1___xxtofl@arg)
 10805  0DD5  00A2               
 10806                           	line	20
 10807                           	
 10808                           i1l911:	
 10809  0DD6                     	line	21
 10810                           	movf	(i1___xxtofl@val+3),w
 10811  0DD6  0874               	iorwf	(i1___xxtofl@val+2),w
 10812  0DD7  0473               	iorwf	(i1___xxtofl@val+1),w
 10813  0DD8  0472               	iorwf	(i1___xxtofl@val),w
 10814  0DD9  0471               	skipz
 10815  0DDA  1D03               	goto	u388_21
 10816  0DDB  2DDD               	goto	u388_20
 10817  0DDC  2DDE               u388_21:
 10818  0DDD                     	goto	i1l2958
 10819  0DDD  2DE8               u388_20:
 10820  0DDE                     	line	22
 10821                           	
 10822                           i1l2954:	
 10823  0DDE                     	movlw	0x0
 10824  0DDE  3000               	movwf	(?i1___xxtofl+3)
 10825  0DDF  00F4               	movlw	0x0
 10826  0DE0  3000               	movwf	(?i1___xxtofl+2)
 10827  0DE1  00F3               	movlw	0x0
 10828  0DE2  3000               	movwf	(?i1___xxtofl+1)
 10829  0DE3  00F2               	movlw	0x0
 10830  0DE4  3000               	movwf	(?i1___xxtofl)
 10831  0DE5  00F1               
 10832                           	goto	i1l913
 10833  0DE6  2E75               	
 10834                           i1l2956:	
 10835  0DE7                     	goto	i1l913
 10836  0DE7  2E75               	
 10837                           i1l912:	
 10838  0DE8                     	line	23
 10839                           	
 10840                           i1l2958:	
 10841  0DE8                     	movlw	low(096h)
 10842  0DE8  3096               	movwf	(??i1___xxtofl+0)+0
 10843  0DE9  00F5               	movf	(??i1___xxtofl+0)+0,w
 10844  0DEA  0875               	movwf	(i1___xxtofl@exp)
 10845  0DEB  00A1               	line	24
 10846                           	goto	i1l2962
 10847  0DEC  2DFB               	
 10848                           i1l915:	
 10849  0DED                     	line	25
 10850                           	
 10851                           i1l2960:	
 10852  0DED                     	movlw	low(01h)
 10853  0DED  3001               	movwf	(??i1___xxtofl+0)+0
 10854  0DEE  00F5               	movf	(??i1___xxtofl+0)+0,w
 10855  0DEF  0875               	addwf	(i1___xxtofl@exp),f
 10856  0DF0  07A1               	line	26
 10857                           	movlw	01h
 10858  0DF1  3001               u389_25:
 10859  0DF2                     	clrc
 10860  0DF2  1003               	rrf	(i1___xxtofl@arg+3),f
 10861  0DF3  0CA5               	rrf	(i1___xxtofl@arg+2),f
 10862  0DF4  0CA4               	rrf	(i1___xxtofl@arg+1),f
 10863  0DF5  0CA3               	rrf	(i1___xxtofl@arg),f
 10864  0DF6  0CA2               	addlw	-1
 10865  0DF7  3EFF               	skipz
 10866  0DF8  1D03               	goto	u389_25
 10867  0DF9  2DF2               
 10868                           	goto	i1l2962
 10869  0DFA  2DFB               	line	27
 10870                           	
 10871                           i1l914:	
 10872  0DFB                     	line	24
 10873                           	
 10874                           i1l2962:	
 10875  0DFB                     	movlw	high highword(0FE000000h)
 10876  0DFB  30FE               	andwf	(i1___xxtofl@arg+3),w
 10877  0DFC  0525               	btfss	status,2
 10878  0DFD  1D03               	goto	u390_21
 10879  0DFE  2E00               	goto	u390_20
 10880  0DFF  2E01               u390_21:
 10881  0E00                     	goto	i1l2960
 10882  0E00  2DED               u390_20:
 10883  0E01                     	goto	i1l917
 10884  0E01  2E1E               	
 10885                           i1l916:	
 10886  0E02                     	line	28
 10887                           	goto	i1l917
 10888  0E02  2E1E               	
 10889                           i1l918:	
 10890  0E03                     	line	29
 10891                           	
 10892                           i1l2964:	
 10893  0E03                     	movlw	low(01h)
 10894  0E03  3001               	movwf	(??i1___xxtofl+0)+0
 10895  0E04  00F5               	movf	(??i1___xxtofl+0)+0,w
 10896  0E05  0875               	addwf	(i1___xxtofl@exp),f
 10897  0E06  07A1               	line	30
 10898                           	
 10899                           i1l2966:	
 10900  0E07                     	movlw	01h
 10901  0E07  3001               	addwf	(i1___xxtofl@arg),f
 10902  0E08  07A2               	movlw	0
 10903  0E09  3000               	skipnc
 10904  0E0A  1803               movlw 1
 10905  0E0B  3001               	addwf	(i1___xxtofl@arg+1),f
 10906  0E0C  07A3               	movlw	0
 10907  0E0D  3000               	skipnc
 10908  0E0E  1803               movlw 1
 10909  0E0F  3001               	addwf	(i1___xxtofl@arg+2),f
 10910  0E10  07A4               	movlw	0
 10911  0E11  3000               	skipnc
 10912  0E12  1803               movlw 1
 10913  0E13  3001               	addwf	(i1___xxtofl@arg+3),f
 10914  0E14  07A5               	line	31
 10915                           	
 10916                           i1l2968:	
 10917  0E15                     	movlw	01h
 10918  0E15  3001               u391_25:
 10919  0E16                     	clrc
 10920  0E16  1003               	rrf	(i1___xxtofl@arg+3),f
 10921  0E17  0CA5               	rrf	(i1___xxtofl@arg+2),f
 10922  0E18  0CA4               	rrf	(i1___xxtofl@arg+1),f
 10923  0E19  0CA3               	rrf	(i1___xxtofl@arg),f
 10924  0E1A  0CA2               	addlw	-1
 10925  0E1B  3EFF               	skipz
 10926  0E1C  1D03               	goto	u391_25
 10927  0E1D  2E16               
 10928                           	line	32
 10929                           	
 10930                           i1l917:	
 10931  0E1E                     	line	28
 10932                           	movlw	high highword(0FF000000h)
 10933  0E1E  30FF               	andwf	(i1___xxtofl@arg+3),w
 10934  0E1F  0525               	btfss	status,2
 10935  0E20  1D03               	goto	u392_21
 10936  0E21  2E23               	goto	u392_20
 10937  0E22  2E24               u392_21:
 10938  0E23                     	goto	i1l2964
 10939  0E23  2E03               u392_20:
 10940  0E24                     	goto	i1l2972
 10941  0E24  2E32               	
 10942                           i1l919:	
 10943  0E25                     	line	33
 10944                           	goto	i1l2972
 10945  0E25  2E32               	
 10946                           i1l921:	
 10947  0E26                     	line	34
 10948                           	
 10949                           i1l2970:	
 10950  0E26                     	movlw	01h
 10951  0E26  3001               	subwf	(i1___xxtofl@exp),f
 10952  0E27  02A1               	line	35
 10953                           	movlw	01h
 10954  0E28  3001               	movwf	(??i1___xxtofl+0)+0
 10955  0E29  00F5               u393_25:
 10956  0E2A                     	clrc
 10957  0E2A  1003               	rlf	(i1___xxtofl@arg),f
 10958  0E2B  0DA2               	rlf	(i1___xxtofl@arg+1),f
 10959  0E2C  0DA3               	rlf	(i1___xxtofl@arg+2),f
 10960  0E2D  0DA4               	rlf	(i1___xxtofl@arg+3),f
 10961  0E2E  0DA5               	decfsz	(??i1___xxtofl+0)+0
 10962  0E2F  0BF5               	goto	u393_25
 10963  0E30  2E2A               	goto	i1l2972
 10964  0E31  2E32               	line	36
 10965                           	
 10966                           i1l920:	
 10967  0E32                     	line	33
 10968                           	
 10969                           i1l2972:	
 10970  0E32                     	btfsc	(i1___xxtofl@arg+2),(23)&7
 10971  0E32  1BA4               	goto	u394_21
 10972  0E33  2E35               	goto	u394_20
 10973  0E34  2E36               u394_21:
 10974  0E35                     	goto	i1l924
 10975  0E35  2E3D               u394_20:
 10976  0E36                     	
 10977                           i1l2974:	
 10978  0E36                     	movlw	low(02h)
 10979  0E36  3002               	subwf	(i1___xxtofl@exp),w
 10980  0E37  0221               	skipnc
 10981  0E38  1803               	goto	u395_21
 10982  0E39  2E3B               	goto	u395_20
 10983  0E3A  2E3C               u395_21:
 10984  0E3B                     	goto	i1l2970
 10985  0E3B  2E26               u395_20:
 10986  0E3C                     	goto	i1l924
 10987  0E3C  2E3D               	
 10988                           i1l923:	
 10989  0E3D                     	
 10990                           i1l924:	
 10991  0E3D                     	line	37
 10992                           	btfsc	(i1___xxtofl@exp),(0)&7
 10993  0E3D  1821               	goto	u396_21
 10994  0E3E  2E40               	goto	u396_20
 10995  0E3F  2E41               u396_21:
 10996  0E40                     	goto	i1l925
 10997  0E40  2E49               u396_20:
 10998  0E41                     	line	38
 10999                           	
 11000                           i1l2976:	
 11001  0E41                     	movlw	0FFh
 11002  0E41  30FF               	andwf	(i1___xxtofl@arg),f
 11003  0E42  05A2               	movlw	0FFh
 11004  0E43  30FF               	andwf	(i1___xxtofl@arg+1),f
 11005  0E44  05A3               	movlw	07Fh
 11006  0E45  307F               	andwf	(i1___xxtofl@arg+2),f
 11007  0E46  05A4               	movlw	0FFh
 11008  0E47  30FF               	andwf	(i1___xxtofl@arg+3),f
 11009  0E48  05A5               	
 11010                           i1l925:	
 11011  0E49                     	line	39
 11012                           	clrc
 11013  0E49  1003               	rrf	(i1___xxtofl@exp),f
 11014  0E4A  0CA1               
 11015                           	line	40
 11016                           	
 11017                           i1l2978:	
 11018  0E4B                     	movf	(i1___xxtofl@exp),w
 11019  0E4B  0821               	movwf	(??i1___xxtofl+0)+0
 11020  0E4C  00F5               	clrf	(??i1___xxtofl+0)+0+1
 11021  0E4D  01F6               	clrf	(??i1___xxtofl+0)+0+2
 11022  0E4E  01F7               	clrf	(??i1___xxtofl+0)+0+3
 11023  0E4F  01F8               	movlw	018h
 11024  0E50  3018               u397_25:
 11025  0E51                     	clrc
 11026  0E51  1003               	rlf	(??i1___xxtofl+0)+0,f
 11027  0E52  0DF5               	rlf	(??i1___xxtofl+0)+1,f
 11028  0E53  0DF6               	rlf	(??i1___xxtofl+0)+2,f
 11029  0E54  0DF7               	rlf	(??i1___xxtofl+0)+3,f
 11030  0E55  0DF8               u397_20:
 11031  0E56                     	addlw	-1
 11032  0E56  3EFF               	skipz
 11033  0E57  1D03               	goto	u397_25
 11034  0E58  2E51               	movf	0+(??i1___xxtofl+0)+0,w
 11035  0E59  0875               	iorwf	(i1___xxtofl@arg),f
 11036  0E5A  04A2               	movf	1+(??i1___xxtofl+0)+0,w
 11037  0E5B  0876               	iorwf	(i1___xxtofl@arg+1),f
 11038  0E5C  04A3               	movf	2+(??i1___xxtofl+0)+0,w
 11039  0E5D  0877               	iorwf	(i1___xxtofl@arg+2),f
 11040  0E5E  04A4               	movf	3+(??i1___xxtofl+0)+0,w
 11041  0E5F  0878               	iorwf	(i1___xxtofl@arg+3),f
 11042  0E60  04A5               	line	41
 11043                           	
 11044                           i1l2980:	
 11045  0E61                     	movf	((i1___xxtofl@sign)),w
 11046  0E61  0820               	btfsc	status,2
 11047  0E62  1903               	goto	u398_21
 11048  0E63  2E65               	goto	u398_20
 11049  0E64  2E66               u398_21:
 11050  0E65                     	goto	i1l2986
 11051  0E65  2E6C               u398_20:
 11052  0E66                     	
 11053                           i1l2982:	
 11054  0E66                     	btfss	(i1___xxtofl@val+3),7
 11055  0E66  1FF4               	goto	u399_21
 11056  0E67  2E69               	goto	u399_20
 11057  0E68  2E6A               u399_21:
 11058  0E69                     	goto	i1l2986
 11059  0E69  2E6C               u399_20:
 11060  0E6A                     	line	42
 11061                           	
 11062                           i1l2984:	
 11063  0E6A                     	bsf	(i1___xxtofl@arg)+(31/8),(31)&7
 11064  0E6A  17A5               	goto	i1l2986
 11065  0E6B  2E6C               	
 11066                           i1l926:	
 11067  0E6C                     	line	43
 11068                           	
 11069                           i1l2986:	
 11070  0E6C                     	movf	(i1___xxtofl@arg+3),w
 11071  0E6C  0825               	movwf	(?i1___xxtofl+3)
 11072  0E6D  00F4               	movf	(i1___xxtofl@arg+2),w
 11073  0E6E  0824               	movwf	(?i1___xxtofl+2)
 11074  0E6F  00F3               	movf	(i1___xxtofl@arg+1),w
 11075  0E70  0823               	movwf	(?i1___xxtofl+1)
 11076  0E71  00F2               	movf	(i1___xxtofl@arg),w
 11077  0E72  0822               	movwf	(?i1___xxtofl)
 11078  0E73  00F1               
 11079                           	goto	i1l913
 11080  0E74  2E75               	
 11081                           i1l2988:	
 11082  0E75                     	line	44
 11083                           	
 11084                           i1l913:	
 11085  0E75                     	return
 11086  0E75  0008               	opt stack 0
 11087                           GLOBAL	__end_ofi1___xxtofl
 11088                           	__end_ofi1___xxtofl:
 11089  0E76                     	signat	i1___xxtofl,92
 11090                           	global	i1___wmul
 11091                           
 11092 ;; *************** function i1___wmul *****************
 11093 ;; Defined at:
 11094 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;  multiplier      2    0[COMMON] unsigned int 
 11097 ;;  multiplicand    2    2[COMMON] unsigned int 
 11098 ;; Auto vars:     Size  Location     Type
 11099 ;;  __wmul          2    4[COMMON] unsigned int 
 11100 ;; Return value:  Size  Location     Type
 11101 ;;                  2    0[COMMON] unsigned int 
 11102 ;; Registers used:
 11103 ;;		wreg, status,2, status,0
 11104 ;; Tracked objects:
 11105 ;;		On entry : 0/0
 11106 ;;		On exit  : 0/0
 11107 ;;		Unchanged: 0/0
 11108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11109 ;;      Params:         4       0       0       0       0
 11110 ;;      Locals:         2       0       0       0       0
 11111 ;;      Temps:          0       0       0       0       0
 11112 ;;      Totals:         6       0       0       0       0
 11113 ;;Total ram usage:        6 bytes
 11114 ;; Hardware stack levels used:    1
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		i1_is_deadzone
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 11122                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
 11123                           	line	15
 11124                           global __ptext33
 11125                           __ptext33:	;psect for function i1___wmul
 11126  135A                     psect	text33
 11127                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
 11128                           	line	15
 11129                           	global	__size_ofi1___wmul
 11130                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
 11131  0028                     	
 11132                           i1___wmul:	
 11133  135A                     ;incstack = 0
 11134 ;; hardware stack exceeded
 11135                           	opt	stack 0
 11136                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 11137                           	line	43
 11138                           	
 11139                           i1l2702:	
 11140  135A                     	clrf	(i1___wmul@product)
 11141  135A  01F5               	clrf	(i1___wmul@product+1)
 11142  135B  01F6               	goto	i1l2704
 11143  135C  2B5D               	line	44
 11144                           	
 11145                           i1l502:	
 11146  135D                     	line	45
 11147                           	
 11148                           i1l2704:	
 11149  135D                     	btfss	(i1___wmul@multiplier),(0)&7
 11150  135D  1C71               	goto	u326_21
 11151  135E  2B60               	goto	u326_20
 11152  135F  2B61               u326_21:
 11153  1360                     	goto	i1l503
 11154  1360  2B67               u326_20:
 11155  1361                     	line	46
 11156                           	
 11157                           i1l2706:	
 11158  1361                     	movf	(i1___wmul@multiplicand),w
 11159  1361  0873               	addwf	(i1___wmul@product),f
 11160  1362  07F5               	skipnc
 11161  1363  1803               	incf	(i1___wmul@product+1),f
 11162  1364  0AF6               	movf	(i1___wmul@multiplicand+1),w
 11163  1365  0874               	addwf	(i1___wmul@product+1),f
 11164  1366  07F6               	
 11165                           i1l503:	
 11166  1367                     	line	47
 11167                           	movlw	01h
 11168  1367  3001               	
 11169                           u327_25:
 11170  1368                     	clrc
 11171  1368  1003               	rlf	(i1___wmul@multiplicand),f
 11172  1369  0DF3               	rlf	(i1___wmul@multiplicand+1),f
 11173  136A  0DF4               	addlw	-1
 11174  136B  3EFF               	skipz
 11175  136C  1D03               	goto	u327_25
 11176  136D  2B68               	line	48
 11177                           	
 11178                           i1l2708:	
 11179  136E                     	movlw	01h
 11180  136E  3001               	
 11181                           u328_25:
 11182  136F                     	clrc
 11183  136F  1003               	rrf	(i1___wmul@multiplier+1),f
 11184  1370  0CF2               	rrf	(i1___wmul@multiplier),f
 11185  1371  0CF1               	addlw	-1
 11186  1372  3EFF               	skipz
 11187  1373  1D03               	goto	u328_25
 11188  1374  2B6F               	line	49
 11189                           	
 11190                           i1l2710:	
 11191  1375                     	movf	((i1___wmul@multiplier)),w
 11192  1375  0871               iorwf	((i1___wmul@multiplier+1)),w
 11193  1376  0472               	btfss	status,2
 11194  1377  1D03               	goto	u329_21
 11195  1378  2B7A               	goto	u329_20
 11196  1379  2B7B               u329_21:
 11197  137A                     	goto	i1l2704
 11198  137A  2B5D               u329_20:
 11199  137B                     	goto	i1l2712
 11200  137B  2B7C               	
 11201                           i1l504:	
 11202  137C                     	line	52
 11203                           	
 11204                           i1l2712:	
 11205  137C                     	movf	(i1___wmul@product+1),w
 11206  137C  0876               	movwf	(?i1___wmul+1)
 11207  137D  00F2               	movf	(i1___wmul@product),w
 11208  137E  0875               	movwf	(?i1___wmul)
 11209  137F  00F1               	goto	i1l505
 11210  1380  2B81               	
 11211                           i1l2714:	
 11212  1381                     	line	53
 11213                           	
 11214                           i1l505:	
 11215  1381                     	return
 11216  1381  0008               	opt stack 0
 11217                           GLOBAL	__end_ofi1___wmul
 11218                           	__end_ofi1___wmul:
 11219  1382                     	signat	i1___wmul,90
 11220                           	global	i1___fltol
 11221                           
 11222 ;; *************** function i1___fltol *****************
 11223 ;; Defined at:
 11224 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
 11225 ;; Parameters:    Size  Location     Type
 11226 ;;  f1              4   26[BANK0 ] unsigned int 
 11227 ;; Auto vars:     Size  Location     Type
 11228 ;;  __fltol         1   36[BANK0 ] unsigned char 
 11229 ;;  __fltol         1   35[BANK0 ] unsigned char 
 11230 ;; Return value:  Size  Location     Type
 11231 ;;                  4   26[BANK0 ] long 
 11232 ;; Registers used:
 11233 ;;		wreg, status,2, status,0
 11234 ;; Tracked objects:
 11235 ;;		On entry : 0/0
 11236 ;;		On exit  : 0/0
 11237 ;;		Unchanged: 0/0
 11238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11239 ;;      Params:         0       4       0       0       0
 11240 ;;      Locals:         0       2       0       0       0
 11241 ;;      Temps:          0       5       0       0       0
 11242 ;;      Totals:         0      11       0       0       0
 11243 ;;Total ram usage:       11 bytes
 11244 ;; Hardware stack levels used:    1
 11245 ;; This function calls:
 11246 ;;		Nothing
 11247 ;; This function is called by:
 11248 ;;		i1_is_deadzone
 11249 ;; This function uses a non-reentrant model
 11250 ;;
 11251                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 11252                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
 11253                           	line	43
 11254                           global __ptext34
 11255                           __ptext34:	;psect for function i1___fltol
 11256  0C7A                     psect	text34
 11257                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
 11258                           	line	43
 11259                           	global	__size_ofi1___fltol
 11260                           	__size_ofi1___fltol	equ	__end_ofi1___fltol-i1___fltol
 11261  009C                     	
 11262                           i1___fltol:	
 11263  0C7A                     ;incstack = 0
 11264 ;; hardware stack exceeded
 11265                           	opt	stack 0
 11266                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 11267                           	line	47
 11268                           	
 11269                           i1l2716:	
 11270  0C7A                     	bcf	status, 5	;RP0=0, select bank0
 11271  0C7A  1283               	bcf	status, 6	;RP1=0, select bank0
 11272  0C7B  1303               	movf	(i1___fltol@f1),w
 11273  0C7C  083A               	movwf	(??i1___fltol+0)+0
 11274  0C7D  00BE               	movf	(i1___fltol@f1+1),w
 11275  0C7E  083B               	movwf	((??i1___fltol+0)+0+1)
 11276  0C7F  00BF               	movf	(i1___fltol@f1+2),w
 11277  0C80  083C               	movwf	((??i1___fltol+0)+0+2)
 11278  0C81  00C0               	movf	(i1___fltol@f1+3),w
 11279  0C82  083D               	movwf	((??i1___fltol+0)+0+3)
 11280  0C83  00C1               	clrc
 11281  0C84  1003               	rlf	(??i1___fltol+0)+2,w
 11282  0C85  0D40               	rlf	(??i1___fltol+0)+3,w
 11283  0C86  0D41               	movwf	(??i1___fltol+4)+0
 11284  0C87  00C2               	movf	(??i1___fltol+4)+0,w
 11285  0C88  0842               	movwf	(i1___fltol@exp1)
 11286  0C89  00C4               	movf	(((i1___fltol@exp1))),w
 11287  0C8A  0844               	btfss	status,2
 11288  0C8B  1D03               	goto	u330_21
 11289  0C8C  2C8E               	goto	u330_20
 11290  0C8D  2C8F               u330_21:
 11291  0C8E                     	goto	i1l2722
 11292  0C8E  2C99               u330_20:
 11293  0C8F                     	line	48
 11294                           	
 11295                           i1l2718:	
 11296  0C8F                     	movlw	high highword(0)
 11297  0C8F  3000               	movwf	(?i1___fltol+3)
 11298  0C90  00BD               	movlw	low highword(0)
 11299  0C91  3000               	movwf	(?i1___fltol+2)
 11300  0C92  00BC               	movlw	high(0)
 11301  0C93  3000               	movwf	(?i1___fltol+1)
 11302  0C94  00BB               	movlw	low(0)
 11303  0C95  3000               	movwf	(?i1___fltol)
 11304  0C96  00BA               
 11305                           	goto	i1l689
 11306  0C97  2D15               	
 11307                           i1l2720:	
 11308  0C98                     	goto	i1l689
 11309  0C98  2D15               	
 11310                           i1l688:	
 11311  0C99                     	line	49
 11312                           	
 11313                           i1l2722:	
 11314  0C99                     	movf	(i1___fltol@f1),w
 11315  0C99  083A               	movwf	(??i1___fltol+0)+0
 11316  0C9A  00BE               	movf	(i1___fltol@f1+1),w
 11317  0C9B  083B               	movwf	((??i1___fltol+0)+0+1)
 11318  0C9C  00BF               	movf	(i1___fltol@f1+2),w
 11319  0C9D  083C               	movwf	((??i1___fltol+0)+0+2)
 11320  0C9E  00C0               	movf	(i1___fltol@f1+3),w
 11321  0C9F  083D               	movwf	((??i1___fltol+0)+0+3)
 11322  0CA0  00C1               	movlw	01Fh
 11323  0CA1  301F               u331_25:
 11324  0CA2                     	clrc
 11325  0CA2  1003               	rrf	(??i1___fltol+0)+3,f
 11326  0CA3  0CC1               	rrf	(??i1___fltol+0)+2,f
 11327  0CA4  0CC0               	rrf	(??i1___fltol+0)+1,f
 11328  0CA5  0CBF               	rrf	(??i1___fltol+0)+0,f
 11329  0CA6  0CBE               u331_20:
 11330  0CA7                     	addlw	-1
 11331  0CA7  3EFF               	skipz
 11332  0CA8  1D03               	goto	u331_25
 11333  0CA9  2CA2               	movf	0+(??i1___fltol+0)+0,w
 11334  0CAA  083E               	movwf	(??i1___fltol+4)+0
 11335  0CAB  00C2               	movf	(??i1___fltol+4)+0,w
 11336  0CAC  0842               	movwf	(i1___fltol@sign1)
 11337  0CAD  00C3               	line	50
 11338                           	
 11339                           i1l2724:	
 11340  0CAE                     	bsf	(i1___fltol@f1)+(23/8),(23)&7
 11341  0CAE  17BC               	line	51
 11342                           	
 11343                           i1l2726:	
 11344  0CAF                     	movlw	0FFh
 11345  0CAF  30FF               	andwf	(i1___fltol@f1),f
 11346  0CB0  05BA               	movlw	0FFh
 11347  0CB1  30FF               	andwf	(i1___fltol@f1+1),f
 11348  0CB2  05BB               	movlw	0FFh
 11349  0CB3  30FF               	andwf	(i1___fltol@f1+2),f
 11350  0CB4  05BC               	movlw	0
 11351  0CB5  3000               	andwf	(i1___fltol@f1+3),f
 11352  0CB6  05BD               	line	52
 11353                           	
 11354                           i1l2728:	
 11355  0CB7                     	movlw	096h
 11356  0CB7  3096               	subwf	(i1___fltol@exp1),f
 11357  0CB8  02C4               	line	53
 11358                           	
 11359                           i1l2730:	
 11360  0CB9                     	btfss	(i1___fltol@exp1),7
 11361  0CB9  1FC4               	goto	u332_21
 11362  0CBA  2CBC               	goto	u332_20
 11363  0CBB  2CBD               u332_21:
 11364  0CBC                     	goto	i1l2740
 11365  0CBC  2CE2               u332_20:
 11366  0CBD                     	line	54
 11367                           	
 11368                           i1l2732:	
 11369  0CBD                     	movf	(i1___fltol@exp1),w
 11370  0CBD  0844               	xorlw	80h
 11371  0CBE  3A80               	addlw	-((-23)^80h)
 11372  0CBF  3E97               	skipnc
 11373  0CC0  1803               	goto	u333_21
 11374  0CC1  2CC3               	goto	u333_20
 11375  0CC2  2CC4               u333_21:
 11376  0CC3                     	goto	i1l2738
 11377  0CC3  2CCF               u333_20:
 11378  0CC4                     	line	55
 11379                           	
 11380                           i1l2734:	
 11381  0CC4                     	movlw	high highword(0)
 11382  0CC4  3000               	movwf	(?i1___fltol+3)
 11383  0CC5  00BD               	movlw	low highword(0)
 11384  0CC6  3000               	movwf	(?i1___fltol+2)
 11385  0CC7  00BC               	movlw	high(0)
 11386  0CC8  3000               	movwf	(?i1___fltol+1)
 11387  0CC9  00BB               	movlw	low(0)
 11388  0CCA  3000               	movwf	(?i1___fltol)
 11389  0CCB  00BA               
 11390                           	goto	i1l689
 11391  0CCC  2D15               	
 11392                           i1l2736:	
 11393  0CCD                     	goto	i1l689
 11394  0CCD  2D15               	
 11395                           i1l691:	
 11396  0CCE                     	goto	i1l2738
 11397  0CCE  2CCF               	line	56
 11398                           	
 11399                           i1l692:	
 11400  0CCF                     	line	57
 11401                           	
 11402                           i1l2738:	
 11403  0CCF                     	movlw	01h
 11404  0CCF  3001               u334_25:
 11405  0CD0                     	clrc
 11406  0CD0  1003               	rrf	(i1___fltol@f1+3),f
 11407  0CD1  0CBD               	rrf	(i1___fltol@f1+2),f
 11408  0CD2  0CBC               	rrf	(i1___fltol@f1+1),f
 11409  0CD3  0CBB               	rrf	(i1___fltol@f1),f
 11410  0CD4  0CBA               	addlw	-1
 11411  0CD5  3EFF               	skipz
 11412  0CD6  1D03               	goto	u334_25
 11413  0CD7  2CD0               
 11414                           	line	58
 11415                           	movlw	low(01h)
 11416  0CD8  3001               	movwf	(??i1___fltol+0)+0
 11417  0CD9  00BE               	movf	(??i1___fltol+0)+0,w
 11418  0CDA  083E               	addwf	(i1___fltol@exp1),f
 11419  0CDB  07C4               	btfss	status,2
 11420  0CDC  1D03               	goto	u335_21
 11421  0CDD  2CDF               	goto	u335_20
 11422  0CDE  2CE0               u335_21:
 11423  0CDF                     	goto	i1l2738
 11424  0CDF  2CCF               u335_20:
 11425  0CE0                     	goto	i1l2748
 11426  0CE0  2D05               	
 11427                           i1l693:	
 11428  0CE1                     	line	59
 11429                           	goto	i1l2748
 11430  0CE1  2D05               	
 11431                           i1l690:	
 11432  0CE2                     	line	60
 11433                           	
 11434                           i1l2740:	
 11435  0CE2                     	movlw	low(020h)
 11436  0CE2  3020               	subwf	(i1___fltol@exp1),w
 11437  0CE3  0244               	skipc
 11438  0CE4  1C03               	goto	u336_21
 11439  0CE5  2CE7               	goto	u336_20
 11440  0CE6  2CE8               u336_21:
 11441  0CE7                     	goto	i1l696
 11442  0CE7  2CFE               u336_20:
 11443  0CE8                     	line	61
 11444                           	
 11445                           i1l2742:	
 11446  0CE8                     	movlw	high highword(0)
 11447  0CE8  3000               	movwf	(?i1___fltol+3)
 11448  0CE9  00BD               	movlw	low highword(0)
 11449  0CEA  3000               	movwf	(?i1___fltol+2)
 11450  0CEB  00BC               	movlw	high(0)
 11451  0CEC  3000               	movwf	(?i1___fltol+1)
 11452  0CED  00BB               	movlw	low(0)
 11453  0CEE  3000               	movwf	(?i1___fltol)
 11454  0CEF  00BA               
 11455                           	goto	i1l689
 11456  0CF0  2D15               	
 11457                           i1l2744:	
 11458  0CF1                     	goto	i1l689
 11459  0CF1  2D15               	
 11460                           i1l695:	
 11461  0CF2                     	line	62
 11462                           	goto	i1l696
 11463  0CF2  2CFE               	
 11464                           i1l697:	
 11465  0CF3                     	line	63
 11466                           	
 11467                           i1l2746:	
 11468  0CF3                     	movlw	01h
 11469  0CF3  3001               	movwf	(??i1___fltol+0)+0
 11470  0CF4  00BE               u337_25:
 11471  0CF5                     	clrc
 11472  0CF5  1003               	rlf	(i1___fltol@f1),f
 11473  0CF6  0DBA               	rlf	(i1___fltol@f1+1),f
 11474  0CF7  0DBB               	rlf	(i1___fltol@f1+2),f
 11475  0CF8  0DBC               	rlf	(i1___fltol@f1+3),f
 11476  0CF9  0DBD               	decfsz	(??i1___fltol+0)+0
 11477  0CFA  0BBE               	goto	u337_25
 11478  0CFB  2CF5               	line	64
 11479                           	movlw	01h
 11480  0CFC  3001               	subwf	(i1___fltol@exp1),f
 11481  0CFD  02C4               	line	65
 11482                           	
 11483                           i1l696:	
 11484  0CFE                     	line	62
 11485                           	movf	((i1___fltol@exp1)),w
 11486  0CFE  0844               	btfss	status,2
 11487  0CFF  1D03               	goto	u338_21
 11488  0D00  2D02               	goto	u338_20
 11489  0D01  2D03               u338_21:
 11490  0D02                     	goto	i1l2746
 11491  0D02  2CF3               u338_20:
 11492  0D03                     	goto	i1l2748
 11493  0D03  2D05               	
 11494                           i1l698:	
 11495  0D04                     	goto	i1l2748
 11496  0D04  2D05               	line	66
 11497                           	
 11498                           i1l694:	
 11499  0D05                     	line	67
 11500                           	
 11501                           i1l2748:	
 11502  0D05                     	movf	((i1___fltol@sign1)),w
 11503  0D05  0843               	btfsc	status,2
 11504  0D06  1903               	goto	u339_21
 11505  0D07  2D09               	goto	u339_20
 11506  0D08  2D0A               u339_21:
 11507  0D09                     	goto	i1l699
 11508  0D09  2D15               u339_20:
 11509  0D0A                     	line	68
 11510                           	
 11511                           i1l2750:	
 11512  0D0A                     	comf	(i1___fltol@f1),f
 11513  0D0A  09BA               	comf	(i1___fltol@f1+1),f
 11514  0D0B  09BB               	comf	(i1___fltol@f1+2),f
 11515  0D0C  09BC               	comf	(i1___fltol@f1+3),f
 11516  0D0D  09BD               	incf	(i1___fltol@f1),f
 11517  0D0E  0ABA               	skipnz
 11518  0D0F  1903               	incf	(i1___fltol@f1+1),f
 11519  0D10  0ABB               	skipnz
 11520  0D11  1903               	incf	(i1___fltol@f1+2),f
 11521  0D12  0ABC               	skipnz
 11522  0D13  1903               	incf	(i1___fltol@f1+3),f
 11523  0D14  0ABD               	
 11524                           i1l699:	
 11525  0D15                     	line	69
 11526                           	line	70
 11527                           	
 11528                           i1l689:	
 11529  0D15                     	return
 11530  0D15  0008               	opt stack 0
 11531                           GLOBAL	__end_ofi1___fltol
 11532                           	__end_ofi1___fltol:
 11533  0D16                     	signat	i1___fltol,92
 11534                           	global	i1___fladd
 11535                           
 11536 ;; *************** function i1___fladd *****************
 11537 ;; Defined at:
 11538 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
 11539 ;; Parameters:    Size  Location     Type
 11540 ;;  b               4    6[BANK0 ] long 
 11541 ;;  a               4   10[BANK0 ] long 
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;  __fladd         1   11[COMMON] unsigned char 
 11544 ;;  __fladd         1   10[COMMON] unsigned char 
 11545 ;;  __fladd         1    9[COMMON] unsigned char 
 11546 ;;  __fladd         1    8[COMMON] unsigned char 
 11547 ;; Return value:  Size  Location     Type
 11548 ;;                  4    6[BANK0 ] unsigned char 
 11549 ;; Registers used:
 11550 ;;		wreg, status,2, status,0, btemp+1
 11551 ;; Tracked objects:
 11552 ;;		On entry : 0/0
 11553 ;;		On exit  : 0/0
 11554 ;;		Unchanged: 0/0
 11555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11556 ;;      Params:         0       8       0       0       0
 11557 ;;      Locals:         4       0       0       0       0
 11558 ;;      Temps:          0      12       0       0       0
 11559 ;;      Totals:         4      20       0       0       0
 11560 ;;Total ram usage:       24 bytes
 11561 ;; Hardware stack levels used:    1
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		i1_is_deadzone
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 11569                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
 11570                           	line	10
 11571                           global __ptext35
 11572                           __ptext35:	;psect for function i1___fladd
 11573  051F                     psect	text35
 11574                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
 11575                           	line	10
 11576                           	global	__size_ofi1___fladd
 11577                           	__size_ofi1___fladd	equ	__end_ofi1___fladd-i1___fladd
 11578  02C4                     	
 11579                           i1___fladd:	
 11580  051F                     ;incstack = 0
 11581 ;; hardware stack exceeded
 11582                           	opt	stack 0
 11583                           ; Regs used in i1___fladd: [wreg+status,2+status,0+btemp+1]
 11584                           	line	21
 11585                           	
 11586                           i1l2752:	
 11587  051F                     	bcf	status, 5	;RP0=0, select bank0
 11588  051F  1283               	bcf	status, 6	;RP1=0, select bank0
 11589  0520  1303               	movf	0+(i1___fladd@b)+03h,w
 11590  0521  0829               	andlw	080h
 11591  0522  3980               	movwf	(??i1___fladd+0)+0
 11592  0523  00AE               	movf	(??i1___fladd+0)+0,w
 11593  0524  082E               	movwf	(i1___fladd@signs)
 11594  0525  00F9               	line	22
 11595                           	
 11596                           i1l2754:	
 11597  0526                     	movf	0+(i1___fladd@b)+03h,w
 11598  0526  0829               	movwf	(??i1___fladd+0)+0
 11599  0527  00AE               	addwf	(??i1___fladd+0)+0,w
 11600  0528  072E               	movwf	(??i1___fladd+1)+0
 11601  0529  00AF               	movf	(??i1___fladd+1)+0,w
 11602  052A  082F               	movwf	(i1___fladd@bexp)
 11603  052B  00FB               	line	23
 11604                           	
 11605                           i1l2756:	
 11606  052C                     	btfss	0+(i1___fladd@b)+02h,(7)&7
 11607  052C  1FA8               	goto	u340_21
 11608  052D  2D2F               	goto	u340_20
 11609  052E  2D30               u340_21:
 11610  052F                     	goto	i1l2760
 11611  052F  2D32               u340_20:
 11612  0530                     	line	24
 11613                           	
 11614                           i1l2758:	
 11615  0530                     	bsf	(i1___fladd@bexp)+(0/8),(0)&7
 11616  0530  147B               	goto	i1l2760
 11617  0531  2D32               	line	25
 11618                           	
 11619                           i1l788:	
 11620  0532                     	line	28
 11621                           	
 11622                           i1l2760:	
 11623  0532                     	movf	((i1___fladd@bexp)),w
 11624  0532  087B               	btfsc	status,2
 11625  0533  1903               	goto	u341_21
 11626  0534  2D36               	goto	u341_20
 11627  0535  2D37               u341_21:
 11628  0536                     	goto	i1l2770
 11629  0536  2D48               u341_20:
 11630  0537                     	line	30
 11631                           	
 11632                           i1l2762:	
 11633  0537                     		incf	((i1___fladd@bexp)),w
 11634  0537  0A7B               	btfss	status,2
 11635  0538  1D03               	goto	u342_21
 11636  0539  2D3B               	goto	u342_20
 11637  053A  2D3C               u342_21:
 11638  053B                     	goto	i1l2766
 11639  053B  2D45               u342_20:
 11640  053C                     	line	32
 11641                           	
 11642                           i1l2764:	
 11643  053C                     	movlw	0x0
 11644  053C  3000               	movwf	(i1___fladd@b+3)
 11645  053D  00A9               	movlw	0x0
 11646  053E  3000               	movwf	(i1___fladd@b+2)
 11647  053F  00A8               	movlw	0x0
 11648  0540  3000               	movwf	(i1___fladd@b+1)
 11649  0541  00A7               	movlw	0x0
 11650  0542  3000               	movwf	(i1___fladd@b)
 11651  0543  00A6               
 11652                           	goto	i1l2766
 11653  0544  2D45               	line	33
 11654                           	
 11655                           i1l790:	
 11656  0545                     	line	35
 11657                           	
 11658                           i1l2766:	
 11659  0545                     	bsf	(i1___fladd@b)+(23/8),(23)&7
 11660  0545  17A8               	line	37
 11661                           	
 11662                           i1l2768:	
 11663  0546                     	clrf	0+(i1___fladd@b)+03h
 11664  0546  01A9               	line	38
 11665                           	goto	i1l2772
 11666  0547  2D51               	line	39
 11667                           	
 11668                           i1l789:	
 11669  0548                     	line	41
 11670                           	
 11671                           i1l2770:	
 11672  0548                     	movlw	0x0
 11673  0548  3000               	movwf	(i1___fladd@b+3)
 11674  0549  00A9               	movlw	0x0
 11675  054A  3000               	movwf	(i1___fladd@b+2)
 11676  054B  00A8               	movlw	0x0
 11677  054C  3000               	movwf	(i1___fladd@b+1)
 11678  054D  00A7               	movlw	0x0
 11679  054E  3000               	movwf	(i1___fladd@b)
 11680  054F  00A6               
 11681                           	goto	i1l2772
 11682  0550  2D51               	line	42
 11683                           	
 11684                           i1l791:	
 11685  0551                     	line	44
 11686                           	
 11687                           i1l2772:	
 11688  0551                     	movf	0+(i1___fladd@a)+03h,w
 11689  0551  082D               	andlw	080h
 11690  0552  3980               	movwf	(??i1___fladd+0)+0
 11691  0553  00AE               	movf	(??i1___fladd+0)+0,w
 11692  0554  082E               	movwf	(i1___fladd@aexp)
 11693  0555  00FA               	line	46
 11694                           	
 11695                           i1l2774:	
 11696  0556                     	movf	(i1___fladd@aexp),w
 11697  0556  087A               	xorwf	(i1___fladd@signs),w
 11698  0557  0679               	skipnz
 11699  0558  1903               	goto	u343_21
 11700  0559  2D5B               	goto	u343_20
 11701  055A  2D5C               u343_21:
 11702  055B                     	goto	i1l2778
 11703  055B  2D5E               u343_20:
 11704  055C                     	line	47
 11705                           	
 11706                           i1l2776:	
 11707  055C                     	bsf	(i1___fladd@signs)+(6/8),(6)&7
 11708  055C  1779               	goto	i1l2778
 11709  055D  2D5E               	line	48
 11710                           	
 11711                           i1l792:	
 11712  055E                     	line	49
 11713                           	
 11714                           i1l2778:	
 11715  055E                     	movf	0+(i1___fladd@a)+03h,w
 11716  055E  082D               	movwf	(??i1___fladd+0)+0
 11717  055F  00AE               	addwf	(??i1___fladd+0)+0,w
 11718  0560  072E               	movwf	(??i1___fladd+1)+0
 11719  0561  00AF               	movf	(??i1___fladd+1)+0,w
 11720  0562  082F               	movwf	(i1___fladd@aexp)
 11721  0563  00FA               	line	50
 11722                           	
 11723                           i1l2780:	
 11724  0564                     	btfss	0+(i1___fladd@a)+02h,(7)&7
 11725  0564  1FAC               	goto	u344_21
 11726  0565  2D67               	goto	u344_20
 11727  0566  2D68               u344_21:
 11728  0567                     	goto	i1l2784
 11729  0567  2D6A               u344_20:
 11730  0568                     	line	51
 11731                           	
 11732                           i1l2782:	
 11733  0568                     	bsf	(i1___fladd@aexp)+(0/8),(0)&7
 11734  0568  147A               	goto	i1l2784
 11735  0569  2D6A               	line	52
 11736                           	
 11737                           i1l793:	
 11738  056A                     	line	55
 11739                           	
 11740                           i1l2784:	
 11741  056A                     	movf	((i1___fladd@aexp)),w
 11742  056A  087A               	btfsc	status,2
 11743  056B  1903               	goto	u345_21
 11744  056C  2D6E               	goto	u345_20
 11745  056D  2D6F               u345_21:
 11746  056E                     	goto	i1l2794
 11747  056E  2D80               u345_20:
 11748  056F                     	line	57
 11749                           	
 11750                           i1l2786:	
 11751  056F                     		incf	((i1___fladd@aexp)),w
 11752  056F  0A7A               	btfss	status,2
 11753  0570  1D03               	goto	u346_21
 11754  0571  2D73               	goto	u346_20
 11755  0572  2D74               u346_21:
 11756  0573                     	goto	i1l2790
 11757  0573  2D7D               u346_20:
 11758  0574                     	line	59
 11759                           	
 11760                           i1l2788:	
 11761  0574                     	movlw	0x0
 11762  0574  3000               	movwf	(i1___fladd@a+3)
 11763  0575  00AD               	movlw	0x0
 11764  0576  3000               	movwf	(i1___fladd@a+2)
 11765  0577  00AC               	movlw	0x0
 11766  0578  3000               	movwf	(i1___fladd@a+1)
 11767  0579  00AB               	movlw	0x0
 11768  057A  3000               	movwf	(i1___fladd@a)
 11769  057B  00AA               
 11770                           	goto	i1l2790
 11771  057C  2D7D               	line	60
 11772                           	
 11773                           i1l795:	
 11774  057D                     	line	62
 11775                           	
 11776                           i1l2790:	
 11777  057D                     	bsf	(i1___fladd@a)+(23/8),(23)&7
 11778  057D  17AC               	line	64
 11779                           	
 11780                           i1l2792:	
 11781  057E                     	clrf	0+(i1___fladd@a)+03h
 11782  057E  01AD               	line	65
 11783                           	goto	i1l796
 11784  057F  2D88               	line	66
 11785                           	
 11786                           i1l794:	
 11787  0580                     	line	68
 11788                           	
 11789                           i1l2794:	
 11790  0580                     	movlw	0x0
 11791  0580  3000               	movwf	(i1___fladd@a+3)
 11792  0581  00AD               	movlw	0x0
 11793  0582  3000               	movwf	(i1___fladd@a+2)
 11794  0583  00AC               	movlw	0x0
 11795  0584  3000               	movwf	(i1___fladd@a+1)
 11796  0585  00AB               	movlw	0x0
 11797  0586  3000               	movwf	(i1___fladd@a)
 11798  0587  00AA               
 11799                           	line	69
 11800                           	
 11801                           i1l796:	
 11802  0588                     	line	75
 11803                           	movf	(i1___fladd@bexp),w
 11804  0588  087B               	subwf	(i1___fladd@aexp),w
 11805  0589  027A               	skipnc
 11806  058A  1803               	goto	u347_21
 11807  058B  2D8D               	goto	u347_20
 11808  058C  2D8E               u347_21:
 11809  058D                     	goto	i1l2830
 11810  058D  2DD4               u347_20:
 11811  058E                     	line	77
 11812                           	
 11813                           i1l2796:	
 11814  058E                     	btfss	(i1___fladd@signs),(6)&7
 11815  058E  1F79               	goto	u348_21
 11816  058F  2D91               	goto	u348_20
 11817  0590  2D92               u348_21:
 11818  0591                     	goto	i1l2800
 11819  0591  2D97               u348_20:
 11820  0592                     	line	78
 11821                           	
 11822                           i1l2798:	
 11823  0592                     	movlw	low(080h)
 11824  0592  3080               	movwf	(??i1___fladd+0)+0
 11825  0593  00AE               	movf	(??i1___fladd+0)+0,w
 11826  0594  082E               	xorwf	(i1___fladd@signs),f
 11827  0595  06F9               	goto	i1l2800
 11828  0596  2D97               	line	79
 11829                           	
 11830                           i1l798:	
 11831  0597                     	line	81
 11832                           	
 11833                           i1l2800:	
 11834  0597                     	movf	(i1___fladd@bexp),w
 11835  0597  087B               	movwf	(??i1___fladd+0)+0
 11836  0598  00AE               	movf	(??i1___fladd+0)+0,w
 11837  0599  082E               	movwf	(i1___fladd@grs)
 11838  059A  00FC               	line	82
 11839                           	
 11840                           i1l2802:	
 11841  059B                     	movf	(i1___fladd@aexp),w
 11842  059B  087A               	movwf	(??i1___fladd+0)+0
 11843  059C  00AE               	movf	(??i1___fladd+0)+0,w
 11844  059D  082E               	movwf	(i1___fladd@bexp)
 11845  059E  00FB               	line	83
 11846                           	
 11847                           i1l2804:	
 11848  059F                     	movf	(i1___fladd@grs),w
 11849  059F  087C               	movwf	(??i1___fladd+0)+0
 11850  05A0  00AE               	movf	(??i1___fladd+0)+0,w
 11851  05A1  082E               	movwf	(i1___fladd@aexp)
 11852  05A2  00FA               	line	84
 11853                           	
 11854                           i1l2806:	
 11855  05A3                     	movf	(i1___fladd@b),w
 11856  05A3  0826               	movwf	(??i1___fladd+0)+0
 11857  05A4  00AE               	movf	(??i1___fladd+0)+0,w
 11858  05A5  082E               	movwf	(i1___fladd@grs)
 11859  05A6  00FC               	line	85
 11860                           	
 11861                           i1l2808:	
 11862  05A7                     	movf	(i1___fladd@a),w
 11863  05A7  082A               	movwf	(??i1___fladd+0)+0
 11864  05A8  00AE               	movf	(??i1___fladd+0)+0,w
 11865  05A9  082E               	movwf	(i1___fladd@b)
 11866  05AA  00A6               	line	86
 11867                           	
 11868                           i1l2810:	
 11869  05AB                     	movf	(i1___fladd@grs),w
 11870  05AB  087C               	movwf	(??i1___fladd+0)+0
 11871  05AC  00AE               	movf	(??i1___fladd+0)+0,w
 11872  05AD  082E               	movwf	(i1___fladd@a)
 11873  05AE  00AA               	line	87
 11874                           	
 11875                           i1l2812:	
 11876  05AF                     	movf	0+(i1___fladd@b)+01h,w
 11877  05AF  0827               	movwf	(??i1___fladd+0)+0
 11878  05B0  00AE               	movf	(??i1___fladd+0)+0,w
 11879  05B1  082E               	movwf	(i1___fladd@grs)
 11880  05B2  00FC               	line	88
 11881                           	
 11882                           i1l2814:	
 11883  05B3                     	movf	0+(i1___fladd@a)+01h,w
 11884  05B3  082B               	movwf	(??i1___fladd+0)+0
 11885  05B4  00AE               	movf	(??i1___fladd+0)+0,w
 11886  05B5  082E               	movwf	0+(i1___fladd@b)+01h
 11887  05B6  00A7               	line	89
 11888                           	
 11889                           i1l2816:	
 11890  05B7                     	movf	(i1___fladd@grs),w
 11891  05B7  087C               	movwf	(??i1___fladd+0)+0
 11892  05B8  00AE               	movf	(??i1___fladd+0)+0,w
 11893  05B9  082E               	movwf	0+(i1___fladd@a)+01h
 11894  05BA  00AB               	line	90
 11895                           	
 11896                           i1l2818:	
 11897  05BB                     	movf	0+(i1___fladd@b)+02h,w
 11898  05BB  0828               	movwf	(??i1___fladd+0)+0
 11899  05BC  00AE               	movf	(??i1___fladd+0)+0,w
 11900  05BD  082E               	movwf	(i1___fladd@grs)
 11901  05BE  00FC               	line	91
 11902                           	
 11903                           i1l2820:	
 11904  05BF                     	movf	0+(i1___fladd@a)+02h,w
 11905  05BF  082C               	movwf	(??i1___fladd+0)+0
 11906  05C0  00AE               	movf	(??i1___fladd+0)+0,w
 11907  05C1  082E               	movwf	0+(i1___fladd@b)+02h
 11908  05C2  00A8               	line	92
 11909                           	
 11910                           i1l2822:	
 11911  05C3                     	movf	(i1___fladd@grs),w
 11912  05C3  087C               	movwf	(??i1___fladd+0)+0
 11913  05C4  00AE               	movf	(??i1___fladd+0)+0,w
 11914  05C5  082E               	movwf	0+(i1___fladd@a)+02h
 11915  05C6  00AC               	line	93
 11916                           	
 11917                           i1l2824:	
 11918  05C7                     	movf	0+(i1___fladd@b)+03h,w
 11919  05C7  0829               	movwf	(??i1___fladd+0)+0
 11920  05C8  00AE               	movf	(??i1___fladd+0)+0,w
 11921  05C9  082E               	movwf	(i1___fladd@grs)
 11922  05CA  00FC               	line	94
 11923                           	
 11924                           i1l2826:	
 11925  05CB                     	movf	0+(i1___fladd@a)+03h,w
 11926  05CB  082D               	movwf	(??i1___fladd+0)+0
 11927  05CC  00AE               	movf	(??i1___fladd+0)+0,w
 11928  05CD  082E               	movwf	0+(i1___fladd@b)+03h
 11929  05CE  00A9               	line	95
 11930                           	
 11931                           i1l2828:	
 11932  05CF                     	movf	(i1___fladd@grs),w
 11933  05CF  087C               	movwf	(??i1___fladd+0)+0
 11934  05D0  00AE               	movf	(??i1___fladd+0)+0,w
 11935  05D1  082E               	movwf	0+(i1___fladd@a)+03h
 11936  05D2  00AD               	goto	i1l2830
 11937  05D3  2DD4               	line	96
 11938                           	
 11939                           i1l797:	
 11940  05D4                     	line	98
 11941                           	
 11942                           i1l2830:	
 11943  05D4                     	clrf	(i1___fladd@grs)
 11944  05D4  01FC               	line	100
 11945                           	
 11946                           i1l2832:	
 11947  05D5                     	movf	(i1___fladd@bexp),w
 11948  05D5  087B               	movwf	(??i1___fladd+0)+0
 11949  05D6  00AE               	clrf	(??i1___fladd+0)+0+1
 11950  05D7  01AF               	comf	(??i1___fladd+0)+0,f
 11951  05D8  09AE               	comf	(??i1___fladd+0)+1,f
 11952  05D9  09AF               	incf	(??i1___fladd+0)+0,f
 11953  05DA  0AAE               	skipnz
 11954  05DB  1903               	incf	(??i1___fladd+0)+1,f
 11955  05DC  0AAF               	movf	(i1___fladd@aexp),w
 11956  05DD  087A               	addwf	0+(??i1___fladd+0)+0,w
 11957  05DE  072E               	movwf	(??i1___fladd+2)+0
 11958  05DF  00B0               	movf	1+(??i1___fladd+0)+0,w
 11959  05E0  082F               	skipnc
 11960  05E1  1803               	incf	1+(??i1___fladd+0)+0,w
 11961  05E2  0A2F               	movwf	((??i1___fladd+2)+0)+1
 11962  05E3  00B1               	movf	1+(??i1___fladd+2)+0,w
 11963  05E4  0831               	xorlw	80h
 11964  05E5  3A80               	movwf	btemp+1
 11965  05E6  00FF               	movlw	(0)^80h
 11966  05E7  3080               	subwf	btemp+1,w
 11967  05E8  027F               	skipz
 11968  05E9  1D03               	goto	u349_25
 11969  05EA  2DED               	movlw	01Ah
 11970  05EB  301A               	subwf	0+(??i1___fladd+2)+0,w
 11971  05EC  0230               u349_25:
 11972  05ED                     
 11973                           	skipc
 11974  05ED  1C03               	goto	u349_21
 11975  05EE  2DF0               	goto	u349_20
 11976  05EF  2DF1               u349_21:
 11977  05F0                     	goto	i1l2848
 11978  05F0  2E36               u349_20:
 11979  05F1                     	line	101
 11980                           	
 11981                           i1l2834:	
 11982  05F1                     	bcf	status, 5	;RP0=0, select bank0
 11983  05F1  1283               	bcf	status, 6	;RP1=0, select bank0
 11984  05F2  1303               	movf	(i1___fladd@b+3),w
 11985  05F3  0829               	iorwf	(i1___fladd@b+2),w
 11986  05F4  0428               	iorwf	(i1___fladd@b+1),w
 11987  05F5  0427               	iorwf	(i1___fladd@b),w
 11988  05F6  0426               	skipz
 11989  05F7  1D03               	goto	u350_21
 11990  05F8  2DFA               	goto	u350_20
 11991  05F9  2DFC               u350_21:
 11992  05FA                     	movlw	1
 11993  05FA  3001               	goto	u351_20
 11994  05FB  2DFD               u350_20:
 11995  05FC                     	movlw	0
 11996  05FC  3000               u351_20:
 11997  05FD                     	movwf	(??i1___fladd+0)+0
 11998  05FD  00AE               	movf	(??i1___fladd+0)+0,w
 11999  05FE  082E               	movwf	(i1___fladd@grs)
 12000  05FF  00FC               	line	102
 12001                           	movlw	high highword(0)
 12002  0600  3000               	movwf	(i1___fladd@b+3)
 12003  0601  00A9               	movlw	low highword(0)
 12004  0602  3000               	movwf	(i1___fladd@b+2)
 12005  0603  00A8               	movlw	high(0)
 12006  0604  3000               	movwf	(i1___fladd@b+1)
 12007  0605  00A7               	movlw	low(0)
 12008  0606  3000               	movwf	(i1___fladd@b)
 12009  0607  00A6               
 12010                           	line	103
 12011                           	movf	(i1___fladd@aexp),w
 12012  0608  087A               	movwf	(??i1___fladd+0)+0
 12013  0609  00AE               	movf	(??i1___fladd+0)+0,w
 12014  060A  082E               	movwf	(i1___fladd@bexp)
 12015  060B  00FB               	line	104
 12016                           	goto	i1l800
 12017  060C  2E3D               	line	105
 12018                           	
 12019                           i1l799:	
 12020  060D                     	line	106
 12021                           	goto	i1l2848
 12022  060D  2E36               	
 12023                           i1l802:	
 12024  060E                     	line	109
 12025                           	btfss	(i1___fladd@grs),(0)&7
 12026  060E  1C7C               	goto	u352_21
 12027  060F  2E11               	goto	u352_20
 12028  0610  2E12               u352_21:
 12029  0611                     	goto	i1l2838
 12030  0611  2E1D               u352_20:
 12031  0612                     	line	110
 12032                           	
 12033                           i1l2836:	
 12034  0612                     	movf	(i1___fladd@grs),w
 12035  0612  087C               	bcf	status, 5	;RP0=0, select bank0
 12036  0613  1283               	bcf	status, 6	;RP1=0, select bank0
 12037  0614  1303               	movwf	(??i1___fladd+0)+0
 12038  0615  00AE               	clrc
 12039  0616  1003               	rrf	(??i1___fladd+0)+0,w
 12040  0617  0C2E               	iorlw	01h
 12041  0618  3801               	movwf	(??i1___fladd+1)+0
 12042  0619  00AF               	movf	(??i1___fladd+1)+0,w
 12043  061A  082F               	movwf	(i1___fladd@grs)
 12044  061B  00FC               	line	111
 12045                           	goto	i1l2840
 12046  061C  2E20               	line	112
 12047                           	
 12048                           i1l803:	
 12049  061D                     	line	113
 12050                           	
 12051                           i1l2838:	
 12052  061D                     	clrc
 12053  061D  1003               	rrf	(i1___fladd@grs),f
 12054  061E  0CFC               
 12055                           	goto	i1l2840
 12056  061F  2E20               	line	114
 12057                           	
 12058                           i1l804:	
 12059  0620                     	line	115
 12060                           	
 12061                           i1l2840:	
 12062  0620                     	bcf	status, 5	;RP0=0, select bank0
 12063  0620  1283               	bcf	status, 6	;RP1=0, select bank0
 12064  0621  1303               	btfss	(i1___fladd@b),(0)&7
 12065  0622  1C26               	goto	u353_21
 12066  0623  2E25               	goto	u353_20
 12067  0624  2E26               u353_21:
 12068  0625                     	goto	i1l2844
 12069  0625  2E28               u353_20:
 12070  0626                     	line	116
 12071                           	
 12072                           i1l2842:	
 12073  0626                     	bsf	(i1___fladd@grs)+(7/8),(7)&7
 12074  0626  17FC               	goto	i1l2844
 12075  0627  2E28               	line	117
 12076                           	
 12077                           i1l805:	
 12078  0628                     	line	118
 12079                           	
 12080                           i1l2844:	
 12081  0628                     	movlw	01h
 12082  0628  3001               	movwf	(??i1___fladd+0)+0
 12083  0629  00AE               u354_25:
 12084  062A                     	rlf	(i1___fladd@b+3),w
 12085  062A  0D29               	rrf	(i1___fladd@b+3),f
 12086  062B  0CA9               	rrf	(i1___fladd@b+2),f
 12087  062C  0CA8               	rrf	(i1___fladd@b+1),f
 12088  062D  0CA7               	rrf	(i1___fladd@b),f
 12089  062E  0CA6               	decfsz	(??i1___fladd+0)+0&07fh,f
 12090  062F  0BAE               	goto	u354_25
 12091  0630  2E2A               
 12092                           	line	119
 12093                           	
 12094                           i1l2846:	
 12095  0631                     	movlw	low(01h)
 12096  0631  3001               	movwf	(??i1___fladd+0)+0
 12097  0632  00AE               	movf	(??i1___fladd+0)+0,w
 12098  0633  082E               	addwf	(i1___fladd@bexp),f
 12099  0634  07FB               	goto	i1l2848
 12100  0635  2E36               	line	120
 12101                           	
 12102                           i1l801:	
 12103  0636                     	line	106
 12104                           	
 12105                           i1l2848:	
 12106  0636                     	movf	(i1___fladd@aexp),w
 12107  0636  087A               	subwf	(i1___fladd@bexp),w
 12108  0637  027B               	skipc
 12109  0638  1C03               	goto	u355_21
 12110  0639  2E3B               	goto	u355_20
 12111  063A  2E3C               u355_21:
 12112  063B                     	goto	i1l802
 12113  063B  2E0E               u355_20:
 12114  063C                     	goto	i1l800
 12115  063C  2E3D               	
 12116                           i1l806:	
 12117  063D                     	line	121
 12118                           	
 12119                           i1l800:	
 12120  063D                     	line	124
 12121                           	btfsc	(i1___fladd@signs),(6)&7
 12122  063D  1B79               	goto	u356_21
 12123  063E  2E40               	goto	u356_20
 12124  063F  2E41               u356_21:
 12125  0640                     	goto	i1l2874
 12126  0640  2E94               u356_20:
 12127  0641                     	line	127
 12128                           	
 12129                           i1l2850:	
 12130  0641                     	movf	((i1___fladd@bexp)),w
 12131  0641  087B               	btfss	status,2
 12132  0642  1D03               	goto	u357_21
 12133  0643  2E45               	goto	u357_20
 12134  0644  2E46               u357_21:
 12135  0645                     	goto	i1l2856
 12136  0645  2E52               u357_20:
 12137  0646                     	line	128
 12138                           	
 12139                           i1l2852:	
 12140  0646                     	movlw	0x0
 12141  0646  3000               	bcf	status, 5	;RP0=0, select bank0
 12142  0647  1283               	bcf	status, 6	;RP1=0, select bank0
 12143  0648  1303               	movwf	(?i1___fladd+3)
 12144  0649  00A9               	movlw	0x0
 12145  064A  3000               	movwf	(?i1___fladd+2)
 12146  064B  00A8               	movlw	0x0
 12147  064C  3000               	movwf	(?i1___fladd+1)
 12148  064D  00A7               	movlw	0x0
 12149  064E  3000               	movwf	(?i1___fladd)
 12150  064F  00A6               
 12151                           	goto	i1l809
 12152  0650  2FE2               	
 12153                           i1l2854:	
 12154  0651                     	goto	i1l809
 12155  0651  2FE2               	line	129
 12156                           	
 12157                           i1l808:	
 12158  0652                     	line	132
 12159                           	
 12160                           i1l2856:	
 12161  0652                     	bcf	status, 5	;RP0=0, select bank0
 12162  0652  1283               	bcf	status, 6	;RP1=0, select bank0
 12163  0653  1303               	movf	(i1___fladd@a),w
 12164  0654  082A               	addwf	(i1___fladd@b),f
 12165  0655  07A6               	movf	(i1___fladd@a+1),w
 12166  0656  082B               	clrz
 12167  0657  1103               	skipnc
 12168  0658  1803               	addlw	1
 12169  0659  3E01               	skipnz
 12170  065A  1903               	goto	u358_21
 12171  065B  2E5D               	addwf	(i1___fladd@b+1),f
 12172  065C  07A7               u358_21:
 12173  065D                     	movf	(i1___fladd@a+2),w
 12174  065D  082C               	clrz
 12175  065E  1103               	skipnc
 12176  065F  1803               	addlw	1
 12177  0660  3E01               	skipnz
 12178  0661  1903               	goto	u358_22
 12179  0662  2E64               	addwf	(i1___fladd@b+2),f
 12180  0663  07A8               u358_22:
 12181  0664                     	movf	(i1___fladd@a+3),w
 12182  0664  082D               	clrz
 12183  0665  1103               	skipnc
 12184  0666  1803               	addlw	1
 12185  0667  3E01               	skipnz
 12186  0668  1903               	goto	u358_23
 12187  0669  2E6B               	addwf	(i1___fladd@b+3),f
 12188  066A  07A9               u358_23:
 12189  066B                     
 12190                           	line	134
 12191                           	
 12192                           i1l2858:	
 12193  066B                     	btfss	(i1___fladd@b+3),(24)&7
 12194  066B  1C29               	goto	u359_21
 12195  066C  2E6E               	goto	u359_20
 12196  066D  2E6F               u359_21:
 12197  066E                     	goto	i1l2908
 12198  066E  2F5F               u359_20:
 12199  066F                     	line	135
 12200                           	
 12201                           i1l2860:	
 12202  066F                     	btfss	(i1___fladd@grs),(0)&7
 12203  066F  1C7C               	goto	u360_21
 12204  0670  2E72               	goto	u360_20
 12205  0671  2E73               u360_21:
 12206  0672                     	goto	i1l2864
 12207  0672  2E7C               u360_20:
 12208  0673                     	line	136
 12209                           	
 12210                           i1l2862:	
 12211  0673                     	movf	(i1___fladd@grs),w
 12212  0673  087C               	movwf	(??i1___fladd+0)+0
 12213  0674  00AE               	clrc
 12214  0675  1003               	rrf	(??i1___fladd+0)+0,w
 12215  0676  0C2E               	iorlw	01h
 12216  0677  3801               	movwf	(??i1___fladd+1)+0
 12217  0678  00AF               	movf	(??i1___fladd+1)+0,w
 12218  0679  082F               	movwf	(i1___fladd@grs)
 12219  067A  00FC               	line	137
 12220                           	goto	i1l2866
 12221  067B  2E7F               	line	138
 12222                           	
 12223                           i1l811:	
 12224  067C                     	line	139
 12225                           	
 12226                           i1l2864:	
 12227  067C                     	clrc
 12228  067C  1003               	rrf	(i1___fladd@grs),f
 12229  067D  0CFC               
 12230                           	goto	i1l2866
 12231  067E  2E7F               	line	140
 12232                           	
 12233                           i1l812:	
 12234  067F                     	line	141
 12235                           	
 12236                           i1l2866:	
 12237  067F                     	btfss	(i1___fladd@b),(0)&7
 12238  067F  1C26               	goto	u361_21
 12239  0680  2E82               	goto	u361_20
 12240  0681  2E83               u361_21:
 12241  0682                     	goto	i1l2870
 12242  0682  2E85               u361_20:
 12243  0683                     	line	142
 12244                           	
 12245                           i1l2868:	
 12246  0683                     	bsf	(i1___fladd@grs)+(7/8),(7)&7
 12247  0683  17FC               	goto	i1l2870
 12248  0684  2E85               	line	143
 12249                           	
 12250                           i1l813:	
 12251  0685                     	line	144
 12252                           	
 12253                           i1l2870:	
 12254  0685                     	movlw	01h
 12255  0685  3001               	movwf	(??i1___fladd+0)+0
 12256  0686  00AE               u362_25:
 12257  0687                     	rlf	(i1___fladd@b+3),w
 12258  0687  0D29               	rrf	(i1___fladd@b+3),f
 12259  0688  0CA9               	rrf	(i1___fladd@b+2),f
 12260  0689  0CA8               	rrf	(i1___fladd@b+1),f
 12261  068A  0CA7               	rrf	(i1___fladd@b),f
 12262  068B  0CA6               	decfsz	(??i1___fladd+0)+0&07fh,f
 12263  068C  0BAE               	goto	u362_25
 12264  068D  2E87               
 12265                           	line	145
 12266                           	
 12267                           i1l2872:	
 12268  068E                     	movlw	low(01h)
 12269  068E  3001               	movwf	(??i1___fladd+0)+0
 12270  068F  00AE               	movf	(??i1___fladd+0)+0,w
 12271  0690  082E               	addwf	(i1___fladd@bexp),f
 12272  0691  07FB               	goto	i1l2908
 12273  0692  2F5F               	line	146
 12274                           	
 12275                           i1l810:	
 12276  0693                     	line	148
 12277                           	goto	i1l2908
 12278  0693  2F5F               	line	149
 12279                           	
 12280                           i1l807:	
 12281  0694                     	line	153
 12282                           	
 12283                           i1l2874:	
 12284  0694                     	bcf	status, 5	;RP0=0, select bank0
 12285  0694  1283               	bcf	status, 6	;RP1=0, select bank0
 12286  0695  1303               	movf	(i1___fladd@b+3),w
 12287  0696  0829               	xorlw	80h
 12288  0697  3A80               	movwf	btemp+1
 12289  0698  00FF               	movf	(i1___fladd@a+3),w
 12290  0699  082D               	xorlw	80h
 12291  069A  3A80               	subwf	btemp+1,w
 12292  069B  027F               	
 12293                           	skipz
 12294  069C  1D03               	goto	u363_23
 12295  069D  2EA8               	movf	(i1___fladd@a+2),w
 12296  069E  082C               	subwf	(i1___fladd@b+2),w
 12297  069F  0228               	skipz
 12298  06A0  1D03               	goto	u363_23
 12299  06A1  2EA8               	movf	(i1___fladd@a+1),w
 12300  06A2  082B               	subwf	(i1___fladd@b+1),w
 12301  06A3  0227               	skipz
 12302  06A4  1D03               	goto	u363_23
 12303  06A5  2EA8               	movf	(i1___fladd@a),w
 12304  06A6  082A               	subwf	(i1___fladd@b),w
 12305  06A7  0226               u363_23:
 12306  06A8                     	skipnc
 12307  06A8  1803               	goto	u363_21
 12308  06A9  2EAB               	goto	u363_20
 12309  06AA  2EAC               u363_21:
 12310  06AB                     	goto	i1l2884
 12311  06AB  2F12               u363_20:
 12312  06AC                     	line	154
 12313                           	
 12314                           i1l2876:	
 12315  06AC                     	movlw	0FFh
 12316  06AC  30FF               	movwf	((??i1___fladd+0)+0)
 12317  06AD  00AE               	movlw	0FFh
 12318  06AE  30FF               	movwf	((??i1___fladd+0)+0+1)
 12319  06AF  00AF               	movlw	0FFh
 12320  06B0  30FF               	movwf	((??i1___fladd+0)+0+2)
 12321  06B1  00B0               	movlw	0FFh
 12322  06B2  30FF               	movwf	((??i1___fladd+0)+0+3)
 12323  06B3  00B1               	movf	(i1___fladd@a),w
 12324  06B4  082A               	movwf	(??i1___fladd+4)+0
 12325  06B5  00B2               	movf	(i1___fladd@a+1),w
 12326  06B6  082B               	movwf	((??i1___fladd+4)+0+1)
 12327  06B7  00B3               	movf	(i1___fladd@a+2),w
 12328  06B8  082C               	movwf	((??i1___fladd+4)+0+2)
 12329  06B9  00B4               	movf	(i1___fladd@a+3),w
 12330  06BA  082D               	movwf	((??i1___fladd+4)+0+3)
 12331  06BB  00B5               	comf	(i1___fladd@b),w
 12332  06BC  0926               	movwf	(??i1___fladd+8)+0
 12333  06BD  00B6               	comf	(i1___fladd@b+1),w
 12334  06BE  0927               	movwf	((??i1___fladd+8)+0+1)
 12335  06BF  00B7               	comf	(i1___fladd@b+2),w
 12336  06C0  0928               	movwf	((??i1___fladd+8)+0+2)
 12337  06C1  00B8               	comf	(i1___fladd@b+3),w
 12338  06C2  0929               	movwf	((??i1___fladd+8)+0+3)
 12339  06C3  00B9               	incf	(??i1___fladd+8)+0,f
 12340  06C4  0AB6               	skipnz
 12341  06C5  1903               	incf	((??i1___fladd+8)+0+1),f
 12342  06C6  0AB7               	skipnz
 12343  06C7  1903               	incf	((??i1___fladd+8)+0+2),f
 12344  06C8  0AB8               	skipnz
 12345  06C9  1903               	incf	((??i1___fladd+8)+0+3),f
 12346  06CA  0AB9               	movf	0+(??i1___fladd+8)+0,w
 12347  06CB  0836               	addwf	(??i1___fladd+4)+0,f
 12348  06CC  07B2               	movf	1+(??i1___fladd+8)+0,w
 12349  06CD  0837               	skipnc
 12350  06CE  1803               	incfsz	1+(??i1___fladd+8)+0,w
 12351  06CF  0F37               	goto	u364_20
 12352  06D0  2ED2               	goto	u364_21
 12353  06D1  2ED3               u364_20:
 12354  06D2                     	addwf	(??i1___fladd+4)+1,f
 12355  06D2  07B3               u364_21:
 12356  06D3                     	movf	2+(??i1___fladd+8)+0,w
 12357  06D3  0838               	skipnc
 12358  06D4  1803               	incfsz	2+(??i1___fladd+8)+0,w
 12359  06D5  0F38               	goto	u364_22
 12360  06D6  2ED8               	goto	u364_23
 12361  06D7  2ED9               u364_22:
 12362  06D8                     	addwf	(??i1___fladd+4)+2,f
 12363  06D8  07B4               u364_23:
 12364  06D9                     	movf	3+(??i1___fladd+8)+0,w
 12365  06D9  0839               	skipnc
 12366  06DA  1803               	incf	3+(??i1___fladd+8)+0,w
 12367  06DB  0A39               	addwf	(??i1___fladd+4)+3,f
 12368  06DC  07B5               	movf	0+(??i1___fladd+4)+0,w
 12369  06DD  0832               	addwf	(??i1___fladd+0)+0,f
 12370  06DE  07AE               	movf	1+(??i1___fladd+4)+0,w
 12371  06DF  0833               	skipnc
 12372  06E0  1803               	incfsz	1+(??i1___fladd+4)+0,w
 12373  06E1  0F33               	goto	u365_20
 12374  06E2  2EE4               	goto	u365_21
 12375  06E3  2EE5               u365_20:
 12376  06E4                     	addwf	(??i1___fladd+0)+1,f
 12377  06E4  07AF               u365_21:
 12378  06E5                     	movf	2+(??i1___fladd+4)+0,w
 12379  06E5  0834               	skipnc
 12380  06E6  1803               	incfsz	2+(??i1___fladd+4)+0,w
 12381  06E7  0F34               	goto	u365_22
 12382  06E8  2EEA               	goto	u365_23
 12383  06E9  2EEB               u365_22:
 12384  06EA                     	addwf	(??i1___fladd+0)+2,f
 12385  06EA  07B0               u365_23:
 12386  06EB                     	movf	3+(??i1___fladd+4)+0,w
 12387  06EB  0835               	skipnc
 12388  06EC  1803               	incf	3+(??i1___fladd+4)+0,w
 12389  06ED  0A35               	addwf	(??i1___fladd+0)+3,f
 12390  06EE  07B1               	movf	3+(??i1___fladd+0)+0,w
 12391  06EF  0831               	movwf	(i1___fladd@b+3)
 12392  06F0  00A9               	movf	2+(??i1___fladd+0)+0,w
 12393  06F1  0830               	movwf	(i1___fladd@b+2)
 12394  06F2  00A8               	movf	1+(??i1___fladd+0)+0,w
 12395  06F3  082F               	movwf	(i1___fladd@b+1)
 12396  06F4  00A7               	movf	0+(??i1___fladd+0)+0,w
 12397  06F5  082E               	movwf	(i1___fladd@b)
 12398  06F6  00A6               
 12399                           	line	155
 12400                           	movlw	low(080h)
 12401  06F7  3080               	movwf	(??i1___fladd+0)+0
 12402  06F8  00AE               	movf	(??i1___fladd+0)+0,w
 12403  06F9  082E               	xorwf	(i1___fladd@signs),f
 12404  06FA  06F9               	line	156
 12405                           	
 12406                           i1l2878:	
 12407  06FB                     	comf	(i1___fladd@grs),f
 12408  06FB  09FC               	incf	(i1___fladd@grs),f
 12409  06FC  0AFC               	line	157
 12410                           	
 12411                           i1l2880:	
 12412  06FD                     	movf	((i1___fladd@grs)),w
 12413  06FD  087C               	btfss	status,2
 12414  06FE  1D03               	goto	u366_21
 12415  06FF  2F01               	goto	u366_20
 12416  0700  2F02               u366_21:
 12417  0701                     	goto	i1l817
 12418  0701  2F20               u366_20:
 12419  0702                     	line	158
 12420                           	
 12421                           i1l2882:	
 12422  0702                     	movlw	01h
 12423  0702  3001               	addwf	(i1___fladd@b),f
 12424  0703  07A6               	movlw	0
 12425  0704  3000               	skipnc
 12426  0705  1803               movlw 1
 12427  0706  3001               	addwf	(i1___fladd@b+1),f
 12428  0707  07A7               	movlw	0
 12429  0708  3000               	skipnc
 12430  0709  1803               movlw 1
 12431  070A  3001               	addwf	(i1___fladd@b+2),f
 12432  070B  07A8               	movlw	0
 12433  070C  3000               	skipnc
 12434  070D  1803               movlw 1
 12435  070E  3001               	addwf	(i1___fladd@b+3),f
 12436  070F  07A9               	goto	i1l817
 12437  0710  2F20               	line	159
 12438                           	
 12439                           i1l816:	
 12440  0711                     	line	160
 12441                           	goto	i1l817
 12442  0711  2F20               	line	161
 12443                           	
 12444                           i1l815:	
 12445  0712                     	line	162
 12446                           	
 12447                           i1l2884:	
 12448  0712                     	movf	(i1___fladd@a),w
 12449  0712  082A               	subwf	(i1___fladd@b),f
 12450  0713  02A6               	movf	(i1___fladd@a+1),w
 12451  0714  082B               	skipc
 12452  0715  1C03               	incfsz	(i1___fladd@a+1),w
 12453  0716  0F2B               	subwf	(i1___fladd@b+1),f
 12454  0717  02A7               	movf	(i1___fladd@a+2),w
 12455  0718  082C               	skipc
 12456  0719  1C03               	incfsz	(i1___fladd@a+2),w
 12457  071A  0F2C               	subwf	(i1___fladd@b+2),f
 12458  071B  02A8               	movf	(i1___fladd@a+3),w
 12459  071C  082D               	skipc
 12460  071D  1C03               	incfsz	(i1___fladd@a+3),w
 12461  071E  0F2D               	subwf	(i1___fladd@b+3),f
 12462  071F  02A9               	line	163
 12463                           	
 12464                           i1l817:	
 12465  0720                     	line	166
 12466                           	movf	(i1___fladd@b+3),w
 12467  0720  0829               	iorwf	(i1___fladd@b+2),w
 12468  0721  0428               	iorwf	(i1___fladd@b+1),w
 12469  0722  0427               	iorwf	(i1___fladd@b),w
 12470  0723  0426               	skipz
 12471  0724  1D03               	goto	u367_21
 12472  0725  2F27               	goto	u367_20
 12473  0726  2F28               u367_21:
 12474  0727                     	goto	i1l2906
 12475  0727  2F59               u367_20:
 12476  0728                     	
 12477                           i1l2886:	
 12478  0728                     	movf	((i1___fladd@grs)),w
 12479  0728  087C               	btfss	status,2
 12480  0729  1D03               	goto	u368_21
 12481  072A  2F2C               	goto	u368_20
 12482  072B  2F2D               u368_21:
 12483  072C                     	goto	i1l2906
 12484  072C  2F59               u368_20:
 12485  072D                     	line	167
 12486                           	
 12487                           i1l2888:	
 12488  072D                     	movlw	0x0
 12489  072D  3000               	movwf	(?i1___fladd+3)
 12490  072E  00A9               	movlw	0x0
 12491  072F  3000               	movwf	(?i1___fladd+2)
 12492  0730  00A8               	movlw	0x0
 12493  0731  3000               	movwf	(?i1___fladd+1)
 12494  0732  00A7               	movlw	0x0
 12495  0733  3000               	movwf	(?i1___fladd)
 12496  0734  00A6               
 12497                           	goto	i1l809
 12498  0735  2FE2               	
 12499                           i1l2890:	
 12500  0736                     	goto	i1l809
 12501  0736  2FE2               	line	168
 12502                           	
 12503                           i1l818:	
 12504  0737                     	line	171
 12505                           	goto	i1l2906
 12506  0737  2F59               	
 12507                           i1l820:	
 12508  0738                     	line	172
 12509                           	
 12510                           i1l2892:	
 12511  0738                     	movlw	01h
 12512  0738  3001               	movwf	(??i1___fladd+0)+0
 12513  0739  00AE               u369_25:
 12514  073A                     	clrc
 12515  073A  1003               	rlf	(i1___fladd@b),f
 12516  073B  0DA6               	rlf	(i1___fladd@b+1),f
 12517  073C  0DA7               	rlf	(i1___fladd@b+2),f
 12518  073D  0DA8               	rlf	(i1___fladd@b+3),f
 12519  073E  0DA9               	decfsz	(??i1___fladd+0)+0
 12520  073F  0BAE               	goto	u369_25
 12521  0740  2F3A               	line	173
 12522                           	
 12523                           i1l2894:	
 12524  0741                     	btfss	(i1___fladd@grs),(7)&7
 12525  0741  1FFC               	goto	u370_21
 12526  0742  2F44               	goto	u370_20
 12527  0743  2F45               u370_21:
 12528  0744                     	goto	i1l821
 12529  0744  2F46               u370_20:
 12530  0745                     	line	174
 12531                           	
 12532                           i1l2896:	
 12533  0745                     	bsf	(i1___fladd@b)+(0/8),(0)&7
 12534  0745  1426               	line	175
 12535                           	
 12536                           i1l821:	
 12537  0746                     	line	176
 12538                           	btfss	(i1___fladd@grs),(0)&7
 12539  0746  1C7C               	goto	u371_21
 12540  0747  2F49               	goto	u371_20
 12541  0748  2F4A               u371_21:
 12542  0749                     	goto	i1l2900
 12543  0749  2F4D               u371_20:
 12544  074A                     	line	177
 12545                           	
 12546                           i1l2898:	
 12547  074A                     	setc
 12548  074A  1403               	rlf	(i1___fladd@grs),f
 12549  074B  0DFC               	line	178
 12550                           	goto	i1l2902
 12551  074C  2F50               	line	179
 12552                           	
 12553                           i1l822:	
 12554  074D                     	line	180
 12555                           	
 12556                           i1l2900:	
 12557  074D                     	clrc
 12558  074D  1003               	rlf	(i1___fladd@grs),f
 12559  074E  0DFC               
 12560                           	goto	i1l2902
 12561  074F  2F50               	line	181
 12562                           	
 12563                           i1l823:	
 12564  0750                     	line	182
 12565                           	
 12566                           i1l2902:	
 12567  0750                     	movf	((i1___fladd@bexp)),w
 12568  0750  087B               	btfsc	status,2
 12569  0751  1903               	goto	u372_21
 12570  0752  2F54               	goto	u372_20
 12571  0753  2F55               u372_21:
 12572  0754                     	goto	i1l2906
 12573  0754  2F59               u372_20:
 12574  0755                     	line	183
 12575                           	
 12576                           i1l2904:	
 12577  0755                     	movlw	01h
 12578  0755  3001               	subwf	(i1___fladd@bexp),f
 12579  0756  02FB               	goto	i1l2906
 12580  0757  2F59               	line	184
 12581                           	
 12582                           i1l824:	
 12583  0758                     	goto	i1l2906
 12584  0758  2F59               	line	185
 12585                           	
 12586                           i1l819:	
 12587  0759                     	line	171
 12588                           	
 12589                           i1l2906:	
 12590  0759                     	btfss	(i1___fladd@b+2),(23)&7
 12591  0759  1FA8               	goto	u373_21
 12592  075A  2F5C               	goto	u373_20
 12593  075B  2F5D               u373_21:
 12594  075C                     	goto	i1l2892
 12595  075C  2F38               u373_20:
 12596  075D                     	goto	i1l2908
 12597  075D  2F5F               	
 12598                           i1l825:	
 12599  075E                     	goto	i1l2908
 12600  075E  2F5F               	line	186
 12601                           	
 12602                           i1l814:	
 12603  075F                     	line	192
 12604                           	
 12605                           i1l2908:	
 12606  075F                     	clrf	(i1___fladd@aexp)
 12607  075F  01FA               	line	193
 12608                           	
 12609                           i1l2910:	
 12610  0760                     	btfss	(i1___fladd@grs),(7)&7
 12611  0760  1FFC               	goto	u374_21
 12612  0761  2F63               	goto	u374_20
 12613  0762  2F64               u374_21:
 12614  0763                     	goto	i1l2918
 12615  0763  2F76               u374_20:
 12616  0764                     	line	194
 12617                           	
 12618                           i1l2912:	
 12619  0764                     	movf	(i1___fladd@grs),w
 12620  0764  087C               	andlw	07Fh
 12621  0765  397F               	btfsc	status,2
 12622  0766  1903               	goto	u375_21
 12623  0767  2F69               	goto	u375_20
 12624  0768  2F6A               u375_21:
 12625  0769                     	goto	i1l827
 12626  0769  2F6D               u375_20:
 12627  076A                     	line	195
 12628                           	
 12629                           i1l2914:	
 12630  076A                     	clrf	(i1___fladd@aexp)
 12631  076A  01FA               	incf	(i1___fladd@aexp),f
 12632  076B  0AFA               	line	196
 12633                           	goto	i1l2918
 12634  076C  2F76               	line	197
 12635                           	
 12636                           i1l827:	
 12637  076D                     	line	198
 12638                           	btfss	(i1___fladd@b),(0)&7
 12639  076D  1C26               	goto	u376_21
 12640  076E  2F70               	goto	u376_20
 12641  076F  2F71               u376_21:
 12642  0770                     	goto	i1l2918
 12643  0770  2F76               u376_20:
 12644  0771                     	line	199
 12645                           	
 12646                           i1l2916:	
 12647  0771                     	clrf	(i1___fladd@aexp)
 12648  0771  01FA               	incf	(i1___fladd@aexp),f
 12649  0772  0AFA               	goto	i1l2918
 12650  0773  2F76               	line	200
 12651                           	
 12652                           i1l829:	
 12653  0774                     	goto	i1l2918
 12654  0774  2F76               	line	201
 12655                           	
 12656                           i1l828:	
 12657  0775                     	goto	i1l2918
 12658  0775  2F76               	line	202
 12659                           	
 12660                           i1l826:	
 12661  0776                     	line	203
 12662                           	
 12663                           i1l2918:	
 12664  0776                     	movf	((i1___fladd@aexp)),w
 12665  0776  087A               	btfsc	status,2
 12666  0777  1903               	goto	u377_21
 12667  0778  2F7A               	goto	u377_20
 12668  0779  2F7B               u377_21:
 12669  077A                     	goto	i1l830
 12670  077A  2FB1               u377_20:
 12671  077B                     	line	204
 12672                           	
 12673                           i1l2920:	
 12674  077B                     	movlw	01h
 12675  077B  3001               	addwf	(i1___fladd@b),f
 12676  077C  07A6               	movlw	0
 12677  077D  3000               	skipnc
 12678  077E  1803               movlw 1
 12679  077F  3001               	addwf	(i1___fladd@b+1),f
 12680  0780  07A7               	movlw	0
 12681  0781  3000               	skipnc
 12682  0782  1803               movlw 1
 12683  0783  3001               	addwf	(i1___fladd@b+2),f
 12684  0784  07A8               	movlw	0
 12685  0785  3000               	skipnc
 12686  0786  1803               movlw 1
 12687  0787  3001               	addwf	(i1___fladd@b+3),f
 12688  0788  07A9               	line	205
 12689                           	
 12690                           i1l2922:	
 12691  0789                     	btfss	(i1___fladd@b+3),(24)&7
 12692  0789  1C29               	goto	u378_21
 12693  078A  2F8C               	goto	u378_20
 12694  078B  2F8D               u378_21:
 12695  078C                     	goto	i1l830
 12696  078C  2FB1               u378_20:
 12697  078D                     	line	206
 12698                           	
 12699                           i1l2924:	
 12700  078D                     	movf	(i1___fladd@b),w
 12701  078D  0826               	movwf	(??i1___fladd+0)+0
 12702  078E  00AE               	movf	(i1___fladd@b+1),w
 12703  078F  0827               	movwf	((??i1___fladd+0)+0+1)
 12704  0790  00AF               	movf	(i1___fladd@b+2),w
 12705  0791  0828               	movwf	((??i1___fladd+0)+0+2)
 12706  0792  00B0               	movf	(i1___fladd@b+3),w
 12707  0793  0829               	movwf	((??i1___fladd+0)+0+3)
 12708  0794  00B1               	movlw	01h
 12709  0795  3001               	movwf	(??i1___fladd+4)+0
 12710  0796  00B2               u379_25:
 12711  0797                     	rlf	(??i1___fladd+0)+3,w
 12712  0797  0D31               	rrf	(??i1___fladd+0)+3,f
 12713  0798  0CB1               	rrf	(??i1___fladd+0)+2,f
 12714  0799  0CB0               	rrf	(??i1___fladd+0)+1,f
 12715  079A  0CAF               	rrf	(??i1___fladd+0)+0,f
 12716  079B  0CAE               u379_20:
 12717  079C                     	decfsz	(??i1___fladd+4)+0,f
 12718  079C  0BB2               	goto	u379_25
 12719  079D  2F97               	movf	3+(??i1___fladd+0)+0,w
 12720  079E  0831               	movwf	(i1___fladd@b+3)
 12721  079F  00A9               	movf	2+(??i1___fladd+0)+0,w
 12722  07A0  0830               	movwf	(i1___fladd@b+2)
 12723  07A1  00A8               	movf	1+(??i1___fladd+0)+0,w
 12724  07A2  082F               	movwf	(i1___fladd@b+1)
 12725  07A3  00A7               	movf	0+(??i1___fladd+0)+0,w
 12726  07A4  082E               	movwf	(i1___fladd@b)
 12727  07A5  00A6               
 12728                           	line	207
 12729                           		incf	((i1___fladd@bexp)),w
 12730  07A6  0A7B               	btfsc	status,2
 12731  07A7  1903               	goto	u380_21
 12732  07A8  2FAA               	goto	u380_20
 12733  07A9  2FAB               u380_21:
 12734  07AA                     	goto	i1l830
 12735  07AA  2FB1               u380_20:
 12736  07AB                     	line	208
 12737                           	
 12738                           i1l2926:	
 12739  07AB                     	movlw	low(01h)
 12740  07AB  3001               	movwf	(??i1___fladd+0)+0
 12741  07AC  00AE               	movf	(??i1___fladd+0)+0,w
 12742  07AD  082E               	addwf	(i1___fladd@bexp),f
 12743  07AE  07FB               	goto	i1l830
 12744  07AF  2FB1               	line	209
 12745                           	
 12746                           i1l832:	
 12747  07B0                     	goto	i1l830
 12748  07B0  2FB1               	line	210
 12749                           	
 12750                           i1l831:	
 12751  07B1                     	line	211
 12752                           	
 12753                           i1l830:	
 12754  07B1                     	line	215
 12755                           		incf	((i1___fladd@bexp)),w
 12756  07B1  0A7B               	btfsc	status,2
 12757  07B2  1903               	goto	u381_21
 12758  07B3  2FB5               	goto	u381_20
 12759  07B4  2FB6               u381_21:
 12760  07B5                     	goto	i1l2930
 12761  07B5  2FBC               u381_20:
 12762  07B6                     	
 12763                           i1l2928:	
 12764  07B6                     	movf	((i1___fladd@bexp)),w
 12765  07B6  087B               	btfss	status,2
 12766  07B7  1D03               	goto	u382_21
 12767  07B8  2FBA               	goto	u382_20
 12768  07B9  2FBB               u382_21:
 12769  07BA                     	goto	i1l2936
 12770  07BA  2FCC               u382_20:
 12771  07BB                     	goto	i1l2930
 12772  07BB  2FBC               	
 12773                           i1l835:	
 12774  07BC                     	line	216
 12775                           	
 12776                           i1l2930:	
 12777  07BC                     	movlw	high highword(0)
 12778  07BC  3000               	movwf	(i1___fladd@b+3)
 12779  07BD  00A9               	movlw	low highword(0)
 12780  07BE  3000               	movwf	(i1___fladd@b+2)
 12781  07BF  00A8               	movlw	high(0)
 12782  07C0  3000               	movwf	(i1___fladd@b+1)
 12783  07C1  00A7               	movlw	low(0)
 12784  07C2  3000               	movwf	(i1___fladd@b)
 12785  07C3  00A6               
 12786                           	line	218
 12787                           	
 12788                           i1l2932:	
 12789  07C4                     	movf	((i1___fladd@bexp)),w
 12790  07C4  087B               	btfss	status,2
 12791  07C5  1D03               	goto	u383_21
 12792  07C6  2FC8               	goto	u383_20
 12793  07C7  2FC9               u383_21:
 12794  07C8                     	goto	i1l2936
 12795  07C8  2FCC               u383_20:
 12796  07C9                     	line	219
 12797                           	
 12798                           i1l2934:	
 12799  07C9                     	clrf	(i1___fladd@signs)
 12800  07C9  01F9               	goto	i1l2936
 12801  07CA  2FCC               	line	220
 12802                           	
 12803                           i1l836:	
 12804  07CB                     	goto	i1l2936
 12805  07CB  2FCC               	line	221
 12806                           	
 12807                           i1l833:	
 12808  07CC                     	line	225
 12809                           	
 12810                           i1l2936:	
 12811  07CC                     	btfss	(i1___fladd@bexp),(0)&7
 12812  07CC  1C7B               	goto	u384_21
 12813  07CD  2FCF               	goto	u384_20
 12814  07CE  2FD0               u384_21:
 12815  07CF                     	goto	i1l2940
 12816  07CF  2FD2               u384_20:
 12817  07D0                     	line	226
 12818                           	
 12819                           i1l2938:	
 12820  07D0                     	bsf	0+(i1___fladd@b)+02h+(7/8),(7)&7
 12821  07D0  17A8               	line	227
 12822                           	goto	i1l838
 12823  07D1  2FD6               	line	229
 12824                           	
 12825                           i1l837:	
 12826  07D2                     	line	230
 12827                           	
 12828                           i1l2940:	
 12829  07D2                     	movlw	low(07Fh)
 12830  07D2  307F               	movwf	(??i1___fladd+0)+0
 12831  07D3  00AE               	movf	(??i1___fladd+0)+0,w
 12832  07D4  082E               	andwf	0+(i1___fladd@b)+02h,f
 12833  07D5  05A8               	line	231
 12834                           	
 12835                           i1l838:	
 12836  07D6                     	line	232
 12837                           	movf	(i1___fladd@bexp),w
 12838  07D6  087B               	movwf	(??i1___fladd+0)+0
 12839  07D7  00AE               	clrc
 12840  07D8  1003               	rrf	(??i1___fladd+0)+0,w
 12841  07D9  0C2E               	movwf	(??i1___fladd+1)+0
 12842  07DA  00AF               	movf	(??i1___fladd+1)+0,w
 12843  07DB  082F               	movwf	0+(i1___fladd@b)+03h
 12844  07DC  00A9               	line	233
 12845                           	
 12846                           i1l2942:	
 12847  07DD                     	btfss	(i1___fladd@signs),(7)&7
 12848  07DD  1FF9               	goto	u385_21
 12849  07DE  2FE0               	goto	u385_20
 12850  07DF  2FE1               u385_21:
 12851  07E0                     	goto	i1l839
 12852  07E0  2FE2               u385_20:
 12853  07E1                     	line	234
 12854                           	
 12855                           i1l2944:	
 12856  07E1                     	bsf	0+(i1___fladd@b)+03h+(7/8),(7)&7
 12857  07E1  17A9               	line	235
 12858                           	
 12859                           i1l839:	
 12860  07E2                     	line	236
 12861                           	line	237
 12862                           	
 12863                           i1l809:	
 12864  07E2                     	return
 12865  07E2  0008               	opt stack 0
 12866                           GLOBAL	__end_ofi1___fladd
 12867                           	__end_ofi1___fladd:
 12868  07E3                     	signat	i1___fladd,92
 12869                           	global	i1___lwdiv
 12870                           
 12871 ;; *************** function i1___lwdiv *****************
 12872 ;; Defined at:
 12873 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
 12874 ;; Parameters:    Size  Location     Type
 12875 ;;  divisor         2    0[COMMON] unsigned int 
 12876 ;;  dividend        2    2[COMMON] unsigned int 
 12877 ;; Auto vars:     Size  Location     Type
 12878 ;;  __lwdiv         2    5[COMMON] unsigned int 
 12879 ;;  __lwdiv         1    7[COMMON] unsigned char 
 12880 ;; Return value:  Size  Location     Type
 12881 ;;                  2    0[COMMON] unsigned int 
 12882 ;; Registers used:
 12883 ;;		wreg, status,2, status,0
 12884 ;; Tracked objects:
 12885 ;;		On entry : 0/0
 12886 ;;		On exit  : 0/0
 12887 ;;		Unchanged: 0/0
 12888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12889 ;;      Params:         4       0       0       0       0
 12890 ;;      Locals:         3       0       0       0       0
 12891 ;;      Temps:          1       0       0       0       0
 12892 ;;      Totals:         8       0       0       0       0
 12893 ;;Total ram usage:        8 bytes
 12894 ;; Hardware stack levels used:    1
 12895 ;; This function calls:
 12896 ;;		Nothing
 12897 ;; This function is called by:
 12898 ;;		i1_get_volume
 12899 ;; This function uses a non-reentrant model
 12900 ;;
 12901                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 12902                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
 12903                           	line	5
 12904                           global __ptext36
 12905                           __ptext36:	;psect for function i1___lwdiv
 12906  1532                     psect	text36
 12907                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
 12908                           	line	5
 12909                           	global	__size_ofi1___lwdiv
 12910                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
 12911  004B                     	
 12912                           i1___lwdiv:	
 12913  1532                     ;incstack = 0
 12914 ;; hardware stack exceeded
 12915                           	opt	stack 0
 12916                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 12917                           	line	13
 12918                           	
 12919                           i1l3096:	
 12920  1532                     	clrf	(i1___lwdiv@quotient)
 12921  1532  01F6               	clrf	(i1___lwdiv@quotient+1)
 12922  1533  01F7               	line	14
 12923                           	
 12924                           i1l3098:	
 12925  1534                     	movf	((i1___lwdiv@divisor)),w
 12926  1534  0871               iorwf	((i1___lwdiv@divisor+1)),w
 12927  1535  0472               	btfsc	status,2
 12928  1536  1903               	goto	u413_21
 12929  1537  2D39               	goto	u413_20
 12930  1538  2D3A               u413_21:
 12931  1539                     	goto	i1l3118
 12932  1539  2D77               u413_20:
 12933  153A                     	line	15
 12934                           	
 12935                           i1l3100:	
 12936  153A                     	clrf	(i1___lwdiv@counter)
 12937  153A  01F8               	incf	(i1___lwdiv@counter),f
 12938  153B  0AF8               	line	16
 12939                           	goto	i1l3106
 12940  153C  2D49               	
 12941                           i1l770:	
 12942  153D                     	line	17
 12943                           	
 12944                           i1l3102:	
 12945  153D                     	movlw	01h
 12946  153D  3001               	
 12947                           u414_25:
 12948  153E                     	clrc
 12949  153E  1003               	rlf	(i1___lwdiv@divisor),f
 12950  153F  0DF1               	rlf	(i1___lwdiv@divisor+1),f
 12951  1540  0DF2               	addlw	-1
 12952  1541  3EFF               	skipz
 12953  1542  1D03               	goto	u414_25
 12954  1543  2D3E               	line	18
 12955                           	
 12956                           i1l3104:	
 12957  1544                     	movlw	low(01h)
 12958  1544  3001               	movwf	(??i1___lwdiv+0)+0
 12959  1545  00F5               	movf	(??i1___lwdiv+0)+0,w
 12960  1546  0875               	addwf	(i1___lwdiv@counter),f
 12961  1547  07F8               	goto	i1l3106
 12962  1548  2D49               	line	19
 12963                           	
 12964                           i1l769:	
 12965  1549                     	line	16
 12966                           	
 12967                           i1l3106:	
 12968  1549                     	btfss	(i1___lwdiv@divisor+1),(15)&7
 12969  1549  1FF2               	goto	u415_21
 12970  154A  2D4C               	goto	u415_20
 12971  154B  2D4D               u415_21:
 12972  154C                     	goto	i1l3102
 12973  154C  2D3D               u415_20:
 12974  154D                     	goto	i1l3108
 12975  154D  2D4F               	
 12976                           i1l771:	
 12977  154E                     	goto	i1l3108
 12978  154E  2D4F               	line	20
 12979                           	
 12980                           i1l772:	
 12981  154F                     	line	21
 12982                           	
 12983                           i1l3108:	
 12984  154F                     	movlw	01h
 12985  154F  3001               	
 12986                           u416_25:
 12987  1550                     	clrc
 12988  1550  1003               	rlf	(i1___lwdiv@quotient),f
 12989  1551  0DF6               	rlf	(i1___lwdiv@quotient+1),f
 12990  1552  0DF7               	addlw	-1
 12991  1553  3EFF               	skipz
 12992  1554  1D03               	goto	u416_25
 12993  1555  2D50               	line	22
 12994                           	movf	(i1___lwdiv@divisor+1),w
 12995  1556  0872               	subwf	(i1___lwdiv@dividend+1),w
 12996  1557  0274               	skipz
 12997  1558  1D03               	goto	u417_25
 12998  1559  2D5C               	movf	(i1___lwdiv@divisor),w
 12999  155A  0871               	subwf	(i1___lwdiv@dividend),w
 13000  155B  0273               u417_25:
 13001  155C                     	skipc
 13002  155C  1C03               	goto	u417_21
 13003  155D  2D5F               	goto	u417_20
 13004  155E  2D60               u417_21:
 13005  155F                     	goto	i1l3114
 13006  155F  2D68               u417_20:
 13007  1560                     	line	23
 13008                           	
 13009                           i1l3110:	
 13010  1560                     	movf	(i1___lwdiv@divisor),w
 13011  1560  0871               	subwf	(i1___lwdiv@dividend),f
 13012  1561  02F3               	movf	(i1___lwdiv@divisor+1),w
 13013  1562  0872               	skipc
 13014  1563  1C03               	decf	(i1___lwdiv@dividend+1),f
 13015  1564  03F4               	subwf	(i1___lwdiv@dividend+1),f
 13016  1565  02F4               	line	24
 13017                           	
 13018                           i1l3112:	
 13019  1566                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
 13020  1566  1476               	goto	i1l3114
 13021  1567  2D68               	line	25
 13022                           	
 13023                           i1l773:	
 13024  1568                     	line	26
 13025                           	
 13026                           i1l3114:	
 13027  1568                     	movlw	01h
 13028  1568  3001               	
 13029                           u418_25:
 13030  1569                     	clrc
 13031  1569  1003               	rrf	(i1___lwdiv@divisor+1),f
 13032  156A  0CF2               	rrf	(i1___lwdiv@divisor),f
 13033  156B  0CF1               	addlw	-1
 13034  156C  3EFF               	skipz
 13035  156D  1D03               	goto	u418_25
 13036  156E  2D69               	line	27
 13037                           	
 13038                           i1l3116:	
 13039  156F                     	movlw	01h
 13040  156F  3001               	subwf	(i1___lwdiv@counter),f
 13041  1570  02F8               	btfss	status,2
 13042  1571  1D03               	goto	u419_21
 13043  1572  2D74               	goto	u419_20
 13044  1573  2D75               u419_21:
 13045  1574                     	goto	i1l3108
 13046  1574  2D4F               u419_20:
 13047  1575                     	goto	i1l3118
 13048  1575  2D77               	
 13049                           i1l774:	
 13050  1576                     	goto	i1l3118
 13051  1576  2D77               	line	28
 13052                           	
 13053                           i1l768:	
 13054  1577                     	line	29
 13055                           	
 13056                           i1l3118:	
 13057  1577                     	movf	(i1___lwdiv@quotient+1),w
 13058  1577  0877               	movwf	(?i1___lwdiv+1)
 13059  1578  00F2               	movf	(i1___lwdiv@quotient),w
 13060  1579  0876               	movwf	(?i1___lwdiv)
 13061  157A  00F1               	goto	i1l775
 13062  157B  2D7C               	
 13063                           i1l3120:	
 13064  157C                     	line	30
 13065                           	
 13066                           i1l775:	
 13067  157C                     	return
 13068  157C  0008               	opt stack 0
 13069                           GLOBAL	__end_ofi1___lwdiv
 13070                           	__end_ofi1___lwdiv:
 13071  157D                     	signat	i1___lwdiv,90
 13072                           global	___latbits
 13073                           ___latbits	equ	2
 13074  0002                     	global	btemp
 13075                           	btemp set 07Eh
 13076  007E                     
 13077                           	DABS	1,126,2	;btemp
 13078                           	global	wtemp0
 13079                           	wtemp0 set btemp+0
 13080  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     12      13
    BANK0            80     64      79
    BANK1            80     75      80
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _start_receive->_handle_remote
    i1_is_deadzone->i1___fladd
    i1___fltol->i1___fladd
    i1___fladd->i1___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->i1_get_volume
    i1_get_volume->i1_is_deadzone
    i1_is_deadzone->i1___fltol
    i1___fltol->i1___fladd
    i1___fladd->i1___xxtofl

Critical Paths under _main in BANK1

    _main->_update_vol_motor
    _update_volume->_write_int
    _update_vol_motor->_get_volume
    _get_volume->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd
    ___fladd->___xxtofl
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15886
                                             73 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                       _update_input
                   _update_vol_motor
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5526
                                             33 BANK1      2     2      0
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_vol_motor                                     5     5      0    4836
                                             68 BANK1      5     5      0
                         _get_volume
 ---------------------------------------------------------------------------------
 (2) _get_volume                                           6     4      2    4723
                                             62 BANK1      6     4      2
                            ___lwdiv
                        _is_deadzone
 ---------------------------------------------------------------------------------
 (3) _is_deadzone                                         13     9      4    3998
                                             49 BANK1     13     9      4
                            ___fladd
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     381
                                             38 BANK1     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             24    16      8    2414
                                             14 BANK1     24    16      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5502
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    3937
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1299
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0    1003
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     736
                                              6 BANK1     10     8      2
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1363
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    3792
                                             60 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _start_receive
 ---------------------------------------------------------------------------------
 (8) _start_receive                                       10    10      0      53
                                              1 COMMON    10    10      0
                      _handle_remote
 ---------------------------------------------------------------------------------
 (9) _handle_remote                                        1     1      0       7
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      4     4      0    3605
                                             56 BANK0      4     4      0
                       i1_get_volume
 ---------------------------------------------------------------------------------
 (9) i1_get_volume                                         6     4      2    3493
                                             50 BANK0      6     4      2
                          i1___lwdiv
                      i1_is_deadzone
 ---------------------------------------------------------------------------------
 (10) i1_is_deadzone                                      13     9      4    3120
                                             37 BANK0     13     9      4
                          i1___fladd
                          i1___fltol
                           i1___wmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (11) i1___xxtofl                                         14    10      4     374
                                              0 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (11) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) i1___fltol                                          11     7      4     281
                                             26 BANK0     11     7      4
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___fladd                                          24    16      8    2088
                                              8 COMMON     4     4      0
                                              6 BANK0     20    12      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___lwdiv                                           8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
   _update_input
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite
   _update_vol_motor
     _get_volume
       ___lwdiv
       _is_deadzone
         ___fladd
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___wmul
         ___xxtofl
   _update_volume
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     i1_get_volume
       i1___lwdiv
       i1_is_deadzone
         i1___fladd
           i1___xxtofl (ARG)
         i1___fltol
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___wmul
         i1___xxtofl
   _handle_rotary
   _start_receive
     _handle_remote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      C       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     40      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4B      50       7      100.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jan 28 12:13:07 2019

                  _update_input 161A          __size_of_start_receive 006C                               pc 0002  
                   i1___fladd@a 002A                     i1___fladd@b 0026                     __CFG_CP$OFF 0000  
                   _SSPSTATbits 0094                              l60 140B                              l61 140B  
                            l57 13E3                              l58 13EB                              l59 140A  
                            fsr 0004             ___wmul@multiplicand 00A2                i1___wmul@product 0075  
                  spiWrite@data 00A0                   _update_volume 09BE                      i1___xxtofl 0DB2  
                           l200 144B                             l201 147B                             l202 1465  
                           l130 166D                             l203 1450                             l204 147A  
                           l140 002D                             l205 1454                             l141 0049  
                           l133 09D2                             l206 1458                             l126 1619  
                           l142 0060                             l134 0A26                             l207 145C  
                           l143 0060                             l135 09FF                             l208 1460  
                           l160 172E                             l152 1428                             l320 0A9C  
                           l161 172F                             l153 1443                             l129 162E  
                           l321 0B05                             l170 1346                             l162 1731  
                           l146 14D9                             l138 0051                             l322 0AF2  
                           l330 0AF0                             l171 1349                             l147 14BC  
                           l139 001A                             l331 0AFF                             l323 0AA4  
                           l180 1359                             l156 16F0                             l148 14EE  
                           l324 0AA8                             l181 1359                             l317 09BD  
                           l165 1681                             l157 1731                             l149 14EE  
                           l325 0AA8                             l174 1337                             l502 1387  
                           l166 16CF                             l158 170F                             l326 0AAD  
                           l175 133A                             l503 1391                             l167 16CF  
                           l159 1730                             l335 0122                             l327 0AC8  
                           l504 13A6                             l336 012C                             l344 0B36  
                           l328 0ADB                             l505 13AB                             l329 0AF1  
                           l178 1352                             l346 0B31                             l179 1352  
                           l347 0B7E                             l276 1796                             l348 0B79  
                           l349 0B78                             l480 023B                             l800 037F  
                           l481 0135                             l801 0376                             l490 0193  
                           l482 0147                             l810 03D1                             l802 0352  
                           l491 019D                             l483 014E                             l811 03BA  
                           l803 035F                             l492 01D1                             l484 0149  
                           l820 0474                             l812 03BD                             l804 0362  
                           l485 025D                             l493 01C6                             l821 0482  
                           l813 03C3                             l805 0368                             l494 01E3  
                           l486 014A                             l830 04ED                             l814 049B  
                           l822 0489                             l806 037F                             l910 0E92  
                           l495 0230                             l487 014B                             l831 04ED  
                           l823 048C                             l815 044E                             l807 03D2  
                           l911 0E9A                             l496 01E8                             l488 0179  
                           l832 04EC                             l824 0494                             l816 044D  
                           l808 0392                             l920 0EF6                             l912 0EAC  
                           l497 023A                             l489 014C                             l833 0508  
                           l825 049A                             l817 045C                             l809 051E  
                           l921 0EEA                             l913 0F39                             l770 158A  
                           l498 025C                             l826 04B2                             l818 0473  
                           l690 0D7E                             l914 0EBF                             l771 159B  
                           l499 0262                             l835 04F8                             l827 04A9  
                           l819 0495                             l691 0D6A                             l923 0F01  
                           l915 0EB1                             l772 159C                             l780 14FA  
                           l836 0507                             l828 04B1                             l692 0D6B  
                           l924 0F01                             l916 0EC6                             l773 15B5  
                           l781 150B                             l837 050E                             l829 04B0  
                           l693 0D7D                             l925 0F0D                             l917 0EE2  
                           l774 15C3                             l782 150C                             l838 0512  
                           l790 0289                             l694 0DA1                             l926 0F30  
                           l918 0EC7                             l775 15C9                             l783 151D  
                           l839 051E                             l791 0295                             l695 0D8E  
                           l919 0EE9                             l768 15C4                             l784 152B  
                           l792 02A2                             l696 0D9A                             l688 0D35  
                           l769 1596                             l785 1531                             l793 02AE  
                           l697 0D8F                             l689 0DB1                             l778 152C  
                           l794 02C4                             l698 0DA0                             l779 1506  
                           l795 02C1                             l699 0DB1                             l796 02CC  
                           l788 0276                             l797 0318                             l789 028C  
                           l798 02DB                             l799 0351                             _GIE 005F  
                           _RC0 0038                             _RC1 0039                   ?_display_init 0071  
                  __CFG_CPD$OFF 0000           get_volume@currentStep 00E2                             _isr 13AC  
                           fsr0 0004                             indf 0000                    i1___fltol@f1 003A  
                 i1___fladd@grs 007C                   write_char@pos 00B0                    __CFG_LVP$OFF 0000  
                  ___fltol@exp1 00D0                            l3000 0135                            l3010 014E  
                          l3002 013B                            l3020 018D                            l3012 0179  
                          l3004 0142                            l3030 01C5                            l3022 0193  
                          l3014 0181                            l3006 0147                            l3040 01E3  
                          l3032 01C6                            l3024 0195                            l3016 0185  
                          l3008 014D                            l3200 0033                            l2400 0D69  
                          l3130 15D7                            l3122 15CA                            l3042 01E8  
                          l3026 019C                            l3034 01D1                            l3018 0189  
                          l3050 023B                            l2330 1382                            l3210 1427  
                          l3202 003B                            l2410 0D8F                            l2402 0D6B  
                          l3140 15DC                            l3132 15D8                            l3124 15D2  
                          l3220 09B1                            l2420 1587                            l3044 0224  
                          l3036 01D7                            l3028 019D                            l3052 025D  
                          l2340 13A6                            l2332 1387                            l3212 1428  
                          l3204 0049                            l2500 02B8                            l2412 0DA1  
                          l2404 0D7E                            l3060 0061                            l3150 15ED  
                          l3142 15E2                            l3134 15D9                            l3126 15D3  
                          l3222 09B4                            l3214 132C                            l2430 15AD  
                          l2422 158A                            l3054 0262                            l3046 022B  
                          l3038 01DE                            l2342 13AB                            l2334 138B  
                          l2350 1681                            l3206 140E                            l2510 02D6  
                          l2502 02C1                            l2414 0DA6                            l2406 0D84  
                          l3070 010D                            l3062 0088                            l3230 0B0E  
                          l2328 134D                            l3160 15F4                            l3152 15F0  
                          l3144 15E5                            l3136 15DA                            l3128 15D4  
                          l3224 09B7                            l3216 1333                            l2440 15C9  
                          l2432 15B3                            l2424 1591                            l2416 157D  
                          l3048 0230                            l2336 1398                            l2352 16B9  
                          l2344 166E                            l2360 16DF                            l3208 141D  
                          l2600 0469                            l2520 02EB                            l2512 02DB  
                          l2504 02C2                            l2408 0D8D                            l3072 011D  
                          l3064 00C3                            l3240 0B72                            l3232 0B31  
                          l3400 09FF                            l3170 1600                            l3162 15F5  
                          l3154 15F1                            l3146 15E6                            l3138 15DB  
                          l3226 09BA                            l3218 09A7                            l3330 173A  
                          l2434 15B5                            l2426 1596                            l2418 1581  
                          l2450 1506                            l2442 14EF                            l2338 139F  
                          l2354 16C1                            l2346 1672                            l2370 1705  
                          l2362 16E6                            l3410 162D                            l2610 0486  
                          l2602 0472                            l2530 02FF                            l2522 02EF  
                          l2514 02DF                            l2506 02C4                            l3074 0122  
                          l3066 00FE                            l3242 0B77                            l3234 0B34  
                          l3402 0A0A                            l3180 160C                            l3172 1601  
                          l3164 15F6                            l3156 15F2                            l3148 15E7  
                          l3340 1744                            l3332 173B                            l3324 1732  
                          l2436 15BC                            l2428 159C                            l2452 150C  
                          l2444 14F7                            l2460 152C                            l2348 1680  
                          l2372 170F                            l2364 16F0                            l2356 16D3  
                          l3420 165C                            l3412 1632                            l2612 0489  
                          l2604 0474                            l2620 049B                            l2540 0313  
                          l2532 0303                            l2524 02F3                            l2516 02E3  
                          l2508 02D2                            l2380 0D16                            l2700 0F39  
                          l3076 012C                            l3068 00FF                            l3244 0B79  
                          l3236 0B35                            l3228 0B06                            l3404 0A15  
                          l3430 1450                            l3182 160F                            l3174 1602  
                          l3166 15F7                            l3158 15F3                            l3350 174F  
                          l3342 1745                            l3334 173C                            l3326 1738  
                          l2438 15C4                            l2462 1531                            l2454 1516  
                          l2446 14FA                            l2374 1717                            l2366 16F8  
                          l2358 16D9                            l3190 0015                            l3422 1661  
                          l3414 1637                            l2630 04B2                            l2622 049C  
                          l2614 048C                            l2606 047D                            l2550 035F  
                          l2534 0307                            l2526 02F7                            l2518 02E7  
                          l2542 0318                            l2470 0274                            l2390 0D4B  
                          l2382 0D2B                            l3246 0B7E                            l3238 0B36  
                          l3406 0A1A                            l3440 1464                            l3432 1454  
                          l3424 1444                            l3184 1615                            l3176 1608  
                          l3168 15FD                            l3360 175C                            l3352 1752  
                          l3344 1748                            l3336 173D                            l3328 1739  
                          l2456 151D                            l2448 1501                            l2376 171D  
                          l2368 16FE                            l3192 001A                            l3416 1642  
                          l3408 161A                            l2640 04F2                            l2632 04B7  
                          l2624 04A0                            l2616 0491                            l2608 0481  
                          l2552 0362                            l2560 0376                            l2544 0319  
                          l2536 030B                            l2528 02FB                            l2480 028A  
                          l2472 0276                            l2464 0263                            l2392 0D53  
                          l2384 0D34                            l3434 1458                            l3442 1465  
                          l3426 144A                            l3178 160B                            l3370 176B  
                          l3362 1761                            l3354 1755                            l3346 1749  
                          l3338 1741                            l3186 133B                            l2458 1524  
                          l2378 1724                            l3194 001E                            l3418 164D  
                          l2650 050C                            l2642 04F8                            l2634 04C5  
                          l2626 04A6                            l2618 0495                            l2570 03A9  
                          l2562 0383                            l2554 0366                            l2546 0335  
                          l2538 030F                            l2490 02A2                            l2474 027B  
                          l2482 028C                            l2466 026A                            l2394 0D55  
                          l2386 0D35                            l3450 0A93                            l3436 145C  
                          l3444 147A                            l3428 144B                            l3380 1772  
                          l3372 176C                            l3364 1766                            l3356 1758  
                          l3348 174C                            l3188 1342                            l3196 002C  
                          l2652 050E                            l2644 0500                            l2636 04C9  
                          l2628 04AD                            l2580 03C1                            l2572 03AD  
                          l2564 0388                            l2556 0368                            l2548 0356  
                          l2492 02A8                            l2484 0295                            l2476 0280  
                          l2468 0270                            l2396 0D59                            l2388 0D4A  
                          l2660 0E7E                            l3460 0AC2                            l3452 0A9B  
                          l3540 13E9                            l3438 1460                            l3382 1784  
                          l3374 176D                            l3366 1769                            l3358 1759  
                          l3198 002D                            l2654 0519                            l2646 0505  
                          l2638 04E7                            l2590 0437                            l2582 03C3  
                          l2574 03B1                            l2566 0391                            l2558 0371  
                          l2494 02AC                            l2486 029A                            l2478 0289  
                          l2398 0D60                            l2670 0EAC                            l2662 0E82  
                          l3470 0AEB                            l3462 0AC7                            l3454 0A9D  
                          l3390 09D5                            l3542 13EB                            l3376 176E  
                          l3368 176A                            l2656 051D                            l2648 0508  
                          l2592 0439                            l2584 03CC                            l2576 03BA  
                          l2568 0392                            l2496 02AE                            l2488 02A0  
                          l2680 0ED9                            l2672 0EB1                            l2664 0E92  
                          l3464 0AC8                            l3456 0AAD                            l3472 0AF2  
                          l3392 09DA                            l3384 09BE                            l3544 13F5  
                          l3536 13DD                            l3378 1770                            l2594 043E  
                          l2578 03BD                            l2586 03D2                            l2498 02B3  
                          l2690 0F0F                            l2682 0EEA                            l2674 0EBF  
                          l2666 0EA2                            l2658 0E79                            l3474 0AFF  
                          l3466 0AD6                            l3458 0AB3                            l3394 09E5  
                          l3386 09D1                            l3546 13FA                            l3538 13E3  
                          l2588 03E8                            l2596 044E                            l2692 0F25  
                          l2684 0EF6                            l2676 0EC7                            l2668 0EAB  
                          l3476 0B02                            l3468 0ADB                            l3396 09EB  
                          l3388 09D2                            l3548 13FF                            l2598 0464  
                          l2694 0F2A                            l2686 0EFA                            l2678 0ECB  
                          l3478 0B04                            l3398 09F8                            l2696 0F2E  
                          l2688 0F05                            l3666 016E                            l2698 0F30  
                          l3668 146C                            l2990 14B5                            l2992 14BC  
                          l2994 14D2                            l2996 14D9                            l2998 0130  
                          ?_isr 0071                            STR_1 0990                            STR_2 0996  
                          STR_3 099A                            u3000 04A0                            u3001 049F  
                          u3010 04A6                            u3011 04A5                            u2300 1358  
                          u3100 050C                            u3020 04AD                            u2301 1357  
                          u3101 050B                            u3021 04AC                            u2310 138B  
                          u3110 051D                            u3030 04B7                            u2311 138A  
                          u3111 051C                            u3031 04B6                            u2400 16FE  
                          u4000 14ED                            u3040 04C9                            u3200 0EFA  
                          u3120 0E7E                            u2401 16FD                            u4001 14EC  
                          u3041 04C8                            u3201 0EF9                            u3121 0E7D  
                          u4010 013B                            u2410 1717                            u3050 04D8  
                          u3210 0F00                            u3130 0E82                            u4011 013A  
                          u2411 1716                            u3211 0EFF                            u3131 0E81  
                          u4020 0189                            u2340 13A5                            u2420 171D  
                          u3060 04E7                            u3220 0F05                            u3140 0EA2  
                          u4100 011D                            u4021 0188                            u2341 13A4  
                          u2325 1392                            u2421 171C                            u3061 04E6  
                          u3221 0F04                            u3141 0EA1                            u4101 011C  
                          u4030 019B                            u2350 167F                            u3070 04F2  
                          u2510 0D9F                            u2430 0D2B                            u3230 0F1A  
                          u4031 019A                            u2335 1399                            u2351 167E  
                          u3071 04F1                            u3055 04D3                            u2511 0D9E  
                          u2431 0D2A                            u4200 1342                            u2600 14F7  
                          u4040 01C4                            u2360 16CE                            u3080 04F7  
                          u2520 0DA6                            u2440 0D43                            u3240 0F2A  
                          u3160 0EC5                            u4201 1341                            u2601 14F6  
                          u4041 01C3                            u2361 16CD                            u3081 04F6  
                          u2521 0DA5                            u2505 0D91                            u3241 0F29  
                          u3161 0EC4                            u4105 0119                            u2530 1587  
                          u4050 01D0                            u2370 16D9                            u4210 002B  
                          u3090 0505                            u2450 0D59                            u3250 0F2E  
                          u2531 1586                            u4051 01CF                            u2355 167B  
                          u2371 16D8                            u4211 002A                            u3091 0504  
                          u2451 0D58                            u3251 0F2D                            u3235 0F15  
                          u3155 0EB6                            u2620 150A                            u4060 01D7  
                          u2380 16DF                            u4220 0048                            u2700 02AC  
                          u2460 0D60                            u3180 0EE8                            u2621 1509  
                          u4061 01D6                            u4045 01C0                            u2365 16CA  
                          u2381 16DE                            u4221 0047                            u2701 02AB  
                          u2461 0D5F                            u2445 0D3E                            u3181 0EE7  
                          u2550 159A                            u2630 1516                            u4070 0239  
                          u2390 16F8                            u4230 005F                            u2710 02B3  
                          u2551 1599                            u2631 1515                            u2615 14FB  
                          u4071 0238                            u2391 16F7                            u4231 005E  
                          u4215 0027                            u2711 02B2                            u3175 0EDA  
                          u4080 025B                            u4240 141D                            u2720 02B8  
                          u2480 0D7C                            u4400 0AEB                            u4320 09D0  
                          u2545 158B                            u4081 025A                            u4241 141C  
                          u4225 0044                            u2721 02B7                            u2481 0D7B  
                          u4401 0AEA                            u4321 09CF                            u4250 1333  
                          u2570 15AD                            u2650 152A                            u2810 037E  
                          u2730 02D2                            u2490 0D84                            u4090 010D  
                          u4410 0AFE                            u4330 09F8                            u4251 1332  
                          u2571 15AC                            u2651 1529                            u2635 1512  
                          u4235 005B                            u2811 037D                            u2731 02D1  
                          u2491 0D83                            u2475 0D6C                            u3195 0EEE  
                          u4091 010C                            u4411 0AFD                            u4331 09F7  
                          u4340 162C                            u2900 040E                            u2820 0383  
                          u2740 02D6                            u2660 0274                            u4260 0B0E  
                          u2565 159D                            u2645 151E                            u4245 1419  
                          u4341 162B                            u2901 040F                            u2821 0382  
                          u2805 036A                            u2741 02D5                            u2661 0273  
                          u4261 0B0D                            u4405 0AE7                            u4325 09CC  
                          u4350 1449                            u2590 15C2                            u2910 0420  
                          u2902 0414                            u2830 0388                            u2750 0335  
                          u2670 027B                            u4270 0B30                            u4351 1448  
                          u2591 15C1                            u2575 15A9                            u2911 0421  
                          u2903 0415                            u2831 0387                            u2751 0334  
                          u2671 027A                            u4095 0109                            u4271 0B2F  
                          u4415 0AFA                            u4335 09F4                            u2920 043E  
                          u2912 0426                            u2760 0340                            u2680 0280  
                          u4280 0B72                            u4360 0A9A                            u2585 15B6  
                          u4345 1628                            u2921 043D                            u2913 0427  
                          u2841 039B                            u2761 033E                            u2681 027F  
                          u4281 0B71                            u4361 0A99                            u2930 0464  
                          u2850 03AD                            u2842 03A2                            u2770 0341  
                          u2690 02A0                            u4370 0AAC                            u2931 0463  
                          u2851 03AC                            u2843 03A9                            u2755 0331  
                          u2691 029F                            u4275 0B2C                            u4371 0AAB  
                          u2940 0469                            u2860 03B1                            u2780 0356  
                          u4380 0AC6                            u2941 0468                            u2861 03B0  
                          u2781 0355                            u4381 0AC5                            u2870 03C1  
                          u2790 0366                            u4390 0AD6                            u4550 13E9  
                          u2871 03C0                            u2791 0365                            u4391 0AD5  
                          u4551 13E8                            u2960 0481                            u2961 0480  
                          u2970 0486                            u2890 03E8                            u2971 0485  
                          u2955 0476                            u2891 03E7                            u4395 0AD2  
                          u2980 0491                            u2981 0490                            u2893 03E4  
                          u2885 03C5                            u2990 0499                            u2991 0498  
                          i1l66 13C3                            i1l67 13C1                            i1l68 13D2  
                          i1l69 13D2                            u4597 1405                    __CFG_WRT$OFF 0000  
                          _main 13DD                            _font 0812          is_deadzone@deadzoneLow 00D7  
                          btemp 007E  update_vol_motor@curPotmeterVol 00E7                   __CFG_BOREN$ON 0000  
        i1is_deadzone@turnPoint 0050                  i1___fladd@aexp 007A                  i1___fladd@bexp 007B  
                          start 0012                   __CFG_IESO$OFF 0000                    ?_is_deadzone 00D1  
                         ??_isr 005C                  ?_update_volume 0071                   ___fltol@sign1 00CF  
                ??_display_init 00A1                 __end_of___fladd 051F                           ?_main 0071  
                 __CFG_WDTE$OFF 0000                 __end_of___fltol 0DB2                 __end_of___lwdiv 15CA  
                         i1l211 0C3E                           i1l212 0C3D                           i1l213 0C39  
                         i1l214 0C3C                           i1l215 0C6E                           i1l216 0C6E  
                         i1l217 0C68                           i1l218 0C6D                           i1l219 0C79  
                         i1l340 14B4                           i1l341 14AF                           i1l502 135D  
                         i1l503 1367                           i1l335 0FF5                           i1l504 137C  
                         i1l336 0FFF                           i1l344 17BF                           i1l505 1381  
               __end_of___lwmod 1532                           i1l346 17BA                           i1l347 17FF  
                         i1l339 1492                           i1l348 17FA                           i1l349 17F9  
                         i1l381 0BCA                           i1l382 0B81                           i1l383 0BEF  
                         i1l800 063D                           i1l384 0B8A                           i1l376 0A47  
                         i1l801 0636                           i1l385 0B95                           i1l377 0A8D  
                         i1l810 0693                           i1l802 060E                           i1l386 0BA0  
                         i1l378 0A92                           i1l811 067C                           i1l803 061D  
                         i1l387 0BAB                           i1l820 0738                           i1l812 067F  
                         i1l804 0620                           i1l388 0BBA                           i1l821 0746  
                         i1l813 0685                           i1l805 0628                           i1l389 0BF8  
                         i1l830 07B1                           i1l814 075F                           i1l822 074D  
                         i1l806 063D                           i1l910 0DCE                           i1l831 07B1  
                         i1l823 0750                           i1l815 0712                           i1l807 0694  
                         i1l911 0DD6                           i1l832 07B0                           i1l824 0758  
                         i1l816 0711                           i1l808 0652                           i1l920 0E32  
                         i1l912 0DE8                           i1l833 07CC                           i1l825 075E  
                         i1l817 0720                           i1l809 07E2                           i1l921 0E26  
                         i1l913 0E75                           i1l770 153D                           i1l826 0776  
                         i1l818 0737                           i1l690 0CE2                           i1l914 0DFB  
                         i1l771 154E                           i1l835 07BC                           i1l827 076D  
                         i1l819 0759                           i1l691 0CCE                           i1l923 0E3D  
                         i1l915 0DED                           i1l772 154F                           i1l836 07CB  
                         i1l828 0775                           i1l692 0CCF                           i1l924 0E3D  
                         i1l916 0E02                           i1l773 1568                           i1l837 07D2  
                         i1l829 0774                           i1l693 0CE1                           i1l925 0E49  
                         i1l917 0E1E                           i1l774 1576                           i1l838 07D6  
                         i1l790 0545                           i1l694 0D05                           i1l926 0E6C  
                         i1l918 0E03                           i1l775 157C                           i1l839 07E2  
                         i1l791 0551                           i1l695 0CF2                           i1l919 0E25  
                         i1l768 1577                           i1l792 055E                           i1l696 0CFE  
                         i1l688 0C99                           i1l769 1549                           i1l793 056A  
                         i1l697 0CF3                           i1l689 0D15                           i1l794 0580  
                         i1l698 0D04                           i1l795 057D                           i1l699 0D15  
                         i1l796 0588                           i1l788 0532                           i1l797 05D4  
                         i1l789 0548                           i1l798 0597                           i1l799 060D  
                         _PORTA 0005                           _PORTC 0007           __size_ofi1_get_volume 0069  
                         _TRISC 0087                           _TRISD 0088           _activateSelectedRelay 1444  
                __CFG_FCMEN$OFF 0000                     _write_space 0015                 __end_of_dpowers 098E  
                 _start_receive 0A27         is_deadzone@deadzoneHigh 00D9                           pclath 000A  
              __end_ofi1___wmul 1382                  i1___fltol@exp1 0044                           status 0003  
           i1___wmul@multiplier 0071                           wtemp0 007E                 __end_of_sprintf 0263  
            __size_ofi1___fladd 02C4                 i1___fladd@signs 0079              __size_ofi1___fltol 009C  
            __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 00DC       i1is_deadzone@deadzoneHigh 004D  
                __CFG_MCLRE$OFF 0000                 __initialization 07E3                    __end_of_main 140E  
                  __end_of_font 0984                _update_vol_motor 0A93                    i1_get_volume 1797  
            handle_rotary@portA 0074              handle_rotary@portB 0076             _display_write_start 133B  
                        ??_main 00E9                     ?i1___xxtofl 0071                 _handle_potmeter 147C  
                write_text@text 00B3                  ?_start_receive 0071                          _ADRESH 001E  
                        _ADRESL 009E            ?_display_write_start 0071                          i1l3100 153A  
                        i1l3110 1560                          i1l3102 153D                          i1l3120 157C  
                        i1l3112 1566                          i1l3104 1544                          i1l3114 1568  
                        i1l3106 1549                          i1l3116 156F                          i1l3108 154F  
                        i1l3118 1577                          i1l3310 17BD                          i1l3080 0F5B  
                        i1l3320 17FA                          i1l3312 17BE                          i1l3304 1797  
                        i1l3090 0FF0                          i1l3082 0F96                          i1l3322 17FF  
                        i1l3314 17BF                          i1l3306 179F                          i1l3250 0B81  
                        i1l3092 0FF5                          i1l3084 0FD1                          i1l3316 17F3  
                        i1l3308 17BA                          i1l3500 0C59                          i1l3260 0B92  
                        i1l3252 0B85                          i1l2710 1375                          i1l2702 135A  
                        i1l3094 0FFF                          i1l3086 0FD2                          i1l3078 0F3A  
                        i1l3318 17F8                          i1l3502 0C61                          i1l3270 0BA6  
                        i1l3262 0B95                          i1l3254 0B87                          i1l3510 0A36  
                        i1l3096 1532                          i1l2800 0597                          i1l2720 0C98  
                        i1l2712 137C                          i1l2704 135D                          i1l3088 0FE0  
                        i1l3504 0C68                          i1l3280 0BBA                          i1l3272 0BA8  
                        i1l3264 0B9B                          i1l3256 0B8A                          i1l3248 0B7F  
                        i1l3520 0A79                          i1l3512 0A38                          i1l3098 1534  
                        i1l2810 05AB                          i1l2802 059B                          i1l2730 0CB9  
                        i1l2722 0C99                          i1l2714 1381                          i1l2706 1361  
                        i1l3530 1492                          i1l3506 0C77                          i1l3282 0BC2  
                        i1l3274 0BAB                          i1l3266 0B9D                          i1l3258 0B90  
                        i1l3290 0BEF                          i1l3522 0A7F                          i1l3514 0A46  
                        i1l2900 074D                          i1l2820 05BF                          i1l2812 05AF  
                        i1l2804 059F                          i1l2732 0CBD                          i1l2740 0CE2  
                        i1l2724 0CAE                          i1l2716 0C7A                          i1l2708 136E  
                        i1l3532 14A1                          i1l3284 0BC4                          i1l3276 0BB3  
                        i1l3268 0BA0                          i1l3524 0A8D                          i1l3516 0A47  
                        i1l3508 0A27                          i1l2910 0760                          i1l2902 0750  
                        i1l2822 05C3                          i1l2814 05B3                          i1l2806 05A3  
                        i1l2830 05D4                          i1l2750 0D0A                          i1l2742 0CE8  
                        i1l2734 0CC4                          i1l2726 0CAF                          i1l2718 0C8F  
                        i1l3534 14A5                          i1l3526 147C                          i1l3286 0BC9  
                        i1l3278 0BB5                          i1l3518 0A74                          i1l3550 13AC  
                        i1l2920 077B                          i1l2912 0764                          i1l2904 0755  
                        i1l2840 0620                          i1l2832 05D5                          i1l2824 05C7  
                        i1l2816 05B7                          i1l2808 05A7                          i1l2760 0532  
                        i1l2752 051F                          i1l2744 0CF1                          i1l2736 0CCD  
                        i1l2728 0CB7                          i1l3528 1491                          i1l3480 0BF9  
                        i1l3288 0BCA                          i1l3552 13B0                          i1l3560 13C3  
                        i1l2930 07BC                          i1l2922 0789                          i1l2914 076A  
                        i1l2906 0759                          i1l2850 0641                          i1l2842 0626  
                        i1l2834 05F1                          i1l2826 05CB                          i1l2818 05BB  
                        i1l2762 0537                          i1l2770 0548                          i1l2754 0526  
                        i1l2746 0CF3                          i1l2738 0CCF                          i1l3490 0C32  
                        i1l3482 0C0D                          i1l3562 13C9                          i1l3554 13B5  
                        i1l2940 07D2                          i1l2932 07C4                          i1l2924 078D  
                        i1l2916 0771                          i1l2860 066F                          i1l2908 075F  
                        i1l2852 0646                          i1l2844 0628                          i1l2836 0612  
                        i1l2828 05CF                          i1l2780 0564                          i1l2772 0551  
                        i1l2764 053C                          i1l2756 052C                          i1l2748 0D05  
                        i1l3492 0C39                          i1l3484 0C17                          i1l3564 13CE  
                        i1l3556 13BB                          i1l2942 07DD                          i1l2934 07C9  
                        i1l2926 07AB                          i1l2918 0776                          i1l2870 0685  
                        i1l2862 0673                          i1l2854 0651                          i1l2846 0631  
                        i1l2838 061D                          i1l2790 057D                          i1l2782 0568  
                        i1l2774 0556                          i1l2766 0545                          i1l2758 0530  
                        i1l2950 0DBE                          i1l3486 0C21                          i1l3494 0C3E  
                        i1l3670 0BD1                          i1l3558 13C1                          i1l2944 07E1  
                        i1l2936 07CC                          i1l2928 07B6                          i1l2880 06FD  
                        i1l2872 068E                          i1l2864 067C                          i1l2856 0652  
                        i1l2848 0636                          i1l2792 057E                          i1l2784 056A  
                        i1l2776 055C                          i1l2768 0546                          i1l2960 0DED  
                        i1l2952 0DCE                          i1l3496 0C49                          i1l3488 0C27  
                        i1l3672 0BEA                          i1l2938 07D0                          i1l2890 0736  
                        i1l2882 0702                          i1l2866 067F                          i1l2858 066B  
                        i1l2874 0694                          i1l2786 056F                          i1l2794 0580  
                        i1l2778 055E                          i1l2970 0E26                          i1l2962 0DFB  
                        i1l2954 0DDE                          i1l2946 0DB5                          i1l3498 0C53  
                        i1l3674 0BD6                          i1l2892 0738                          i1l2876 06AC  
                        i1l2884 0712                          i1l2868 0683                          i1l2796 058E  
                        i1l2788 0574                          i1l2980 0E61                          i1l2972 0E32  
                        i1l2964 0E03                          i1l2956 0DE7                          i1l2948 0DBA  
                        i1l2894 0741                          i1l2886 0728                          i1l2878 06FB  
                        i1l2798 0592                          i1l2982 0E66                          i1l2974 0E36  
                        i1l2966 0E07                          i1l2958 0DE8                          i1l2896 0745  
                        i1l2888 072D                          i1l2984 0E6A                          i1l2976 0E41  
                        i1l2968 0E15                          i1l2898 074A                          i1l2986 0E6C  
                        i1l2978 0E4B                          i1l2988 0E75                          u330_20 0C8F  
                        u330_21 0C8E                          u331_20 0CA7                          u411_20 0FE0  
                        u411_21 0FDF                          u331_25 0CA2                          u411_25 0FDC  
                        u340_20 0530                          u332_20 0CBD                          u412_20 0FF0  
                        u340_21 052F                          u332_21 0CBC                          u412_21 0FEF  
                        u412_25 0FEC                          u413_20 153A                          u341_20 0537  
                        u333_20 0CC4                          u413_21 1539                          u341_21 0536  
                        u333_21 0CC3                          u350_20 05FC                          u342_20 053C  
                        u326_20 1361                          u430_20 17B9                          u350_21 05FA  
                        u342_21 053B                          u326_21 1360                          u430_21 17B8  
                        u414_25 153E                          u334_25 0CD0                          u430_25 17B5  
                        u415_20 154D                          u351_20 05FD                          u343_20 055C  
                        u335_20 0CE0                          u431_20 17F3                          u415_21 154C  
                        u343_21 055B                          u335_21 0CDF                          u431_21 17F2  
                        u327_25 1368                          u360_20 0673                          u352_20 0612  
                        u344_20 0568                          u336_20 0CE8                          u360_21 0672  
                        u352_21 0611                          u344_21 0567                          u336_21 0CE7  
                        u416_25 1550                          u328_25 136F                          u417_20 1560  
                        u361_20 0683                          u353_20 0626                          u345_20 056F  
                        u329_20 137B                          u417_21 155F                          u361_21 0682  
                        u353_21 0625                          u345_21 056E                          u329_21 137A  
                        u417_25 155C                          u337_25 0CF5                          u370_20 0745  
                        u346_20 0574                          u338_20 0D03                          u442_20 0C17  
                        u450_20 0A45                          u370_21 0744                          u346_21 0573  
                        u338_21 0D02                          u442_21 0C16                          u450_21 0A44  
                        u418_25 1569                          u362_25 0687                          u354_25 062A  
                        u442_25 0C13                          u450_25 0A41                          u419_20 1575  
                        u371_20 074A                          u363_20 06AC                          u355_20 063C  
                        u347_20 058E                          u339_20 0D0A                          u443_20 0C21  
                        u451_20 0A61                          u419_21 1574                          u371_21 0749  
                        u363_21 06AB                          u355_21 063B                          u347_21 058D  
                        u339_21 0D09                          u443_21 0C20                          u363_23 06A8  
                        u443_25 0C1D                          u451_25 0A5C                          u380_20 07AB  
                        u372_20 0755                          u364_20 06D2                          u356_20 0641  
                        u348_20 0592                          u444_20 0C27                          u452_20 0A8C  
                        u380_21 07AA                          u372_21 0754                          u364_21 06D3  
                        u356_21 0640                          u348_21 0591                          u444_21 0C26  
                        u452_21 0A8B                          u364_22 06D8                          u364_23 06D9  
                        u452_25 0A88                          u460_27 0A33                          u381_20 07B6  
                        u373_20 075D                          u365_20 06E4                          u357_20 0646  
                        u349_20 05F1                          u429_20 179F                          u453_20 1490  
                        u445_20 0C32                          u381_21 07B5                          u373_21 075C  
                        u365_21 06E5                          u357_21 0645                          u349_21 05F0  
                        u429_21 179E                          u453_21 148F                          u445_21 0C31  
                        u365_22 06EA                          u365_23 06EB                          u349_25 05ED  
                        u453_25 148C                          u461_27 0A76                          u382_20 07BB  
                        u374_20 0764                          u366_20 0702                          u390_20 0E01  
                        u454_20 14A5                          u446_20 0C49                          u382_21 07BA  
                        u374_21 0763                          u366_21 0701                          u358_21 065D  
                        u390_21 0E00                          u454_21 14A4                          u446_21 0C48  
                        u358_22 0664                          u358_23 066B                          u446_25 0C45  
                        u383_20 07C9                          u375_20 076A                          u367_20 0728  
                        u359_20 066F                          u447_20 0C53                          u383_21 07C8  
                        u375_21 0769                          u367_21 0727                          u359_21 066E  
                        u447_21 0C52                          u391_25 0E16                          u447_25 0C4F  
                        u384_20 07D0                          u376_20 0771                          u368_20 072D  
                        u392_20 0E24                          u448_20 0C59                          u456_20 13B0  
                        u384_21 07CF                          u376_21 0770                          u368_21 072C  
                        u392_21 0E23                          u448_21 0C58                          u456_21 13AF  
                        u385_20 07E1                          u377_20 077B                          u449_20 0C61  
                        u457_20 13BB                          u385_21 07E0                          u377_21 077A  
                        u449_21 0C60                          u457_21 13BA                          u369_25 073A  
                        u393_25 0E2A                          u378_20 078D                          u394_20 0E36  
                        u386_20 0DBA                          u458_20 13C9                          u378_21 078C  
                        u394_21 0E35                          u386_21 0DB9                          u458_21 13C8  
                        u379_20 079C                          u395_20 0E3C                          u387_20 0DBE  
                        u395_21 0E3B                          u387_21 0DBD                          u379_25 0797  
                        u396_20 0E41                          u388_20 0DDE                          u396_21 0E40  
                        u388_21 0DDD                          u397_20 0E56                          u397_25 0E51  
                        u389_25 0DF2                          u398_20 0E66                          u398_21 0E65  
                        u399_20 0E6A                          u399_21 0E69                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 0F3A                  __CFG_PWRTE$OFF 0000  
                     ??___fladd 00B6                          ___wmul 1382                          __lastA 006C  
                        __lastB 006A                 ??_update_volume 00C1                       ??___fltol 00CA  
                     ??___lwdiv 00A4                       ??___lwmod 00AC                          _config 1732  
              __end_of_init_adc 09BE                          _volume 00EB                 write_int@number 00BD  
             __end_ofi1___fladd 07E3          ?_activateSelectedRelay 0071               __end_ofi1___fltol 0D16  
             __end_ofi1___lwdiv 157D                          saved_w 007E                __end_of_spiWrite 135A  
               i1___fltol@sign1 0043          __size_ofi1_is_deadzone 00C6                       ??_sprintf 00B2  
         ??_display_write_start 00A0                    ___xxtofl@arg 00AA                    ___xxtofl@exp 00A9  
                  ___xxtofl@val 00A0         __end_of__initialization 07FC          is_deadzone@currentStep 00D1  
          __end_of_display_init 161A             __size_ofi1___xxtofl 00C4                      ___fltol@f1 00C6  
                __pcstackCOMMON 0071            __size_of_is_deadzone 00CC         __end_of_handle_potmeter 14B5  
                     ?i1___wmul 0071                 ??_start_receive 0072               i1_is_deadzone$899 004F  
                    __pbssBANK0 0060                      __pbssBANK1 00EB           __end_of_handle_remote 0BF9  
         __end_of_handle_rotary 0C7A                  i1___xxtofl@arg 0022                  i1___xxtofl@exp 0021  
                i1___xxtofl@val 0071                   i1_is_deadzone 0F3A                      __pmaintext 13DD  
                       ?___wmul 00A0                      __pintentry 0004                         ?_config 0071  
                    ??i1___wmul 0075                  __selectedInput 00ED                       ?___xxtofl 00A0  
                  ?_write_space 00A1        __end_of_update_vol_motor 0B06                      _get_volume 0B06  
                       _SSPSTAT 0094                      __stringtab 0800                       ?_init_adc 0071  
            __size_of_write_int 0036                  ?i1_is_deadzone 0045                      _lastVolume 0068  
                     ?_spiWrite 0071                         ___fladd 0263                ?_handle_potmeter 0071  
                       ___fltol 0D16           i1get_volume@ad_result 0052                 __size_of___wmul 002A  
                       ___lwdiv 157D                         ___lwmod 14EF                 __size_of_config 0065  
                     _ANSELbits 0188                    ??i1___xxtofl 0075                         __ptext1 09BE  
                       __ptext2 0A93                         __ptext3 0B06                         __ptext4 0061  
                       __ptext5 0E76                         __ptext6 0D16                         __ptext7 0263  
                       __ptext8 161A                         __ptext9 0015                __selectedDisplay 00EF  
                       _dpowers 0984               i1___lwdiv@divisor 0071                    __size_of_isr 0031  
             i1___lwdiv@counter 0078                      ??___xxtofl 00A4                         _sprintf 012D  
         __size_of_display_init 0050            end_of_initialization 07FC                      ??_init_adc 00A0  
            __end_ofi1___xxtofl 0E76                      ??_spiWrite 00A0                    __pstringtext 0800  
             __end_of_step_size 0990           i1___wmul@multiplicand 0073         ??_activateSelectedRelay 00A0  
                     _PORTBbits 0006                       _PORTCbits 0007                       _PORTDbits 0008  
          __inputUpdateRequired 007D                    _display_init 15CA                     ___fladd@grs 00C5  
             __end_of_write_int 1444                   ___xxtofl@sign 00A8                       _TRISAbits 0085  
                     _TRISBbits 0086                       _TRISCbits 0087                       _TRISEbits 0089  
                     i1___fladd 051F                       i1___fltol 0C7A                       i1___lwdiv 1532  
                   ?_get_volume 00DE                 ??i1_is_deadzone 0049                    write_int@num 00BF  
                  write_space@i 00A4                    write_space@x 00A6                   ?_update_input 0071  
                __end_of___wmul 13AC           __end_of_update_volume 0A27                      _write_char 16D0  
                    _write_font 166E                  __end_of_config 1797                      _write_text 14B5  
   __end_of_display_write_start 134A             start_initialization 07E3               __size_ofi1___wmul 0028  
                    ?i1___fladd 0026                     __end_of_isr 13DD                      ?i1___fltol 003A  
                    ?i1___lwdiv 0071            __size_of_write_space 004C                write_space@count 00A1  
                 ??_is_deadzone 00D5                  ??_update_input 00C1                        ??___wmul 00A4  
                      ??_config 00A1             __size_of_get_volume 0079             update_volume@spaces 00C1  
                     ___fladd@a 00B2                       ___fladd@b 00AE                     __pbssCOMMON 007D  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
         __end_of_start_receive 0A93               __size_of___xxtofl 00C4               ?_update_vol_motor 0071  
        __CFG_FOSC$INTRC_CLKOUT 0000                 i1___xxtofl@sign 0020              ??_update_vol_motor 00E4  
                   sprintf@flag 00B7                     sprintf@prec 00B8       update_vol_motor@ad_result 00E5  
             __size_of_init_adc 0017                ___lwdiv@dividend 00A2                        ?___fladd 00AE  
                 ?i1_get_volume 0052                        ?___fltol 00C6                        ?___lwdiv 00A0  
                      ?___lwmod 00A8             __end_of_is_deadzone 012D                     ?_write_char 0071  
             __size_of_spiWrite 0010                     ?_write_font 00A6                     ?_write_text 00B3  
        __size_of_handle_remote 007A          __size_of_handle_rotary 0081                       _lastInput 0066  
                   ??i1___fladd 002E                     ??i1___fltol 003E                ___lwdiv@quotient 00A5  
                   ??i1___lwdiv 0075                        ?_sprintf 00AE                 _is_deadzone$899 00DB  
             interrupt_function 0004                  ___wmul@product 00A4                        _IOCBbits 0096  
                      _PIE1bits 008C                        _PIR1bits 000C                  ??i1_get_volume 0054  
__size_of_activateSelectedRelay 0038                      _ADCON0bits 001F                     __stringbase 0812  
                    _ADCON1bits 009F               ___wmul@multiplier 00A0   __end_of_activateSelectedRelay 147C  
                      i1___wmul 135A                       _step_size 098E                     write_char@c 00B2  
      __size_of_handle_potmeter 0039                       _vol_motor 006E                     write_font@x 00AE  
                   write_text@c 00B5            __end_of_update_input 166E        i1is_deadzone@deadzoneLow 004B  
                  ??_get_volume 00E0                       _write_int 140E               _display_write_end 132C  
           __size_of_write_char 0062                   _handle_remote 0B7F             __size_of_write_font 0062  
           __size_of_write_text 003A                   _handle_rotary 0BF9              ?_display_write_end 0071  
                   _is_deadzone 0061             ??_display_write_end 00A0                __size_of___fladd 02BC  
                __lastAdcResult 0064                __size_of___fltol 009C                __size_of___lwdiv 004D  
              __size_of___lwmod 0043              __end_of_get_volume 0B7F              __end_of__stringtab 0812  
                    _ANSELHbits 0189                      sprintf@val 00B9                        ___xxtofl 0E76  
               ___lwdiv@divisor 00A0                 ___lwdiv@counter 00A7                        __ptext10 140E  
                      __ptext11 14B5                        __ptext20 1732                        __ptext12 16D0  
                      __ptext21 09A7                        __ptext13 166E                        __ptext30 1797  
                      __ptext22 15CA                        __ptext14 1382                        __ptext31 0F3A  
                      __ptext23 134A                        __ptext15 012D                        __ptext32 0DB2  
                      __ptext24 1444                        __ptext16 14EF                        __ptext33 135A  
                      __ptext25 13AC                        __ptext17 157D                        __ptext34 0C7A  
                      __ptext26 0A27                        __ptext18 133B                        __ptext35 051F  
                      __ptext27 0B7F                        __ptext19 132C                        __ptext36 1532  
                      __ptext28 0BF9                        __ptext29 147C               __CFG_BOR4V$BOR21V 0000  
                    ?_write_int 00BD       __end_of_display_write_end 133B                __size_of_sprintf 0136  
            i1___lwdiv@dividend 0073                  ?_handle_remote 0071                        _ir_input 0060  
                ?_handle_rotary 0071                        _init_adc 09A7                   __size_of_main 0031  
             write_font@fontPos 00A6           __end_ofi1_is_deadzone 1000           handle_potmeter@newVol 0058  
      handle_potmeter@ad_result 005A                        _spiWrite 134A         i1get_volume@currentStep 0056  
            i1___lwdiv@quotient 0076                      _INTCONbits 000B                   ??_write_space 00A3  
          __end_ofi1_get_volume 1800               ??_handle_potmeter 007D                        intlevel1 0000  
                     sprintf@ap 00B6    __size_of_display_write_start 000F                       sprintf@sp 00BB  
        i1is_deadzone@adcResult 0047                ___lwmod@dividend 00AA          __size_of_update_volume 0069  
                     stringcode 080A                      _OSCCONbits 008F       __size_of_update_vol_motor 0073  
           get_volume@ad_result 00DE                    ??_write_char 00B0                    ??_write_font 00A8  
                  ??_write_text 00B5              handle_remote@found 0071                        sprintf@c 00BC  
                      sprintf@f 00AE           __size_of_update_input 0054                  start_receive@i 007A  
               ___lwmod@divisor 00A8                 ___lwmod@counter 00AD                        stringtab 0800  
      i1is_deadzone@currentStep 0045                     ??_write_int 00BF                   ___fladd@signs 00C2  
               ??_handle_remote 0071      __size_of_display_write_end 000F                 ??_handle_rotary 0071  
           __end_of_write_space 0061                    ___fladd@aexp 00C3                    ___fladd@bexp 00C4  
          is_deadzone@adcResult 00D3              __end_of_write_char 1732              __end_of_write_font 16D0  
            __end_of_write_text 14EF  
