

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Jan 27 12:58:00 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_update_input
  1182                           	FNCALL	_main,_update_volume
  1183                           	FNCALL	_update_volume,_display_write_end
  1184                           	FNCALL	_update_volume,_display_write_start
  1185                           	FNCALL	_update_volume,_write_int
  1186                           	FNCALL	_update_volume,_write_space
  1187                           	FNCALL	_update_volume,_write_text
  1188                           	FNCALL	_update_input,_display_write_end
  1189                           	FNCALL	_update_input,_display_write_start
  1190                           	FNCALL	_update_input,_write_int
  1191                           	FNCALL	_update_input,_write_space
  1192                           	FNCALL	_update_input,_write_text
  1193                           	FNCALL	_write_space,_spiWrite
  1194                           	FNCALL	_write_int,_sprintf
  1195                           	FNCALL	_write_int,_write_char
  1196                           	FNCALL	_write_int,_write_text
  1197                           	FNCALL	_write_text,_write_char
  1198                           	FNCALL	_write_char,_write_font
  1199                           	FNCALL	_write_font,___wmul
  1200                           	FNCALL	_write_font,_spiWrite
  1201                           	FNCALL	_sprintf,___lwdiv
  1202                           	FNCALL	_sprintf,___lwmod
  1203                           	FNCALL	_config,_display_init
  1204                           	FNCALL	_config,_init_adc
  1205                           	FNCALL	_config,_init_remote
  1206                           	FNCALL	_display_init,_spiWrite
  1207                           	FNROOT	_main
  1208                           	FNCALL	_isr,_handle_potmeter
  1209                           	FNCALL	_isr,_handle_rotary
  1210                           	FNCALL	_isr,_start_receive
  1211                           	FNCALL	_start_receive,_handle_remote
  1212                           	FNCALL	_handle_potmeter,_is_deadzone
  1213                           	FNCALL	_handle_potmeter,i1___lwdiv
  1214                           	FNCALL	_is_deadzone,___fladd
  1215                           	FNCALL	_is_deadzone,___fltol
  1216                           	FNCALL	_is_deadzone,___xxtofl
  1217                           	FNCALL	_is_deadzone,i1___wmul
  1218                           	FNCALL	intlevel1,_isr
  1219                           	global	intlevel1
  1220                           	FNROOT	intlevel1
  1221                           	global	_font
  1222                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1223                           global __pstringtext
  1224                           __pstringtext:
  1225  0000'                    stringtab:
  1226  0000'                    	global    __stringtab
  1227                           __stringtab:
  1228  0000'                    ;	String table - string pointers are 2 bytes each
  1229                           	btfsc	(btemp+1),7
  1230  0000' 1BFF               	ljmp	stringcode
  1231  0001' 2800'              	bcf	status,7
  1232  0002' 1383               	btfsc	(btemp+1),0
  1233  0003' 187F               	bsf	status,7
  1234  0004' 1783               	movf	indf,w
  1235  0005' 0800               	incf fsr
  1236  0006' 0A84               skipnz
  1237  0007' 1903               incf btemp+1
  1238  0008' 0AFF               	return
  1239  0009' 0008               stringcode:
  1240  000A'                    	movf btemp+1,w
  1241  000A' 087F               andlw 7Fh
  1242  000B' 397F               movwf	pclath
  1243  000C' 008A               	movf	fsr,w
  1244  000D' 0804               incf fsr
  1245  000E' 0A84               skipnz
  1246  000F' 1903               incf btemp+1
  1247  0010' 0AFF               	movwf pc
  1248  0011' 0082               	global __stringbase
  1249                           __stringbase:
  1250  0012'                    	global    __end_of__stringtab
  1251                           __end_of__stringtab:
  1252  0012'                    	file	"./Font.h"
  1253                           	line	4
  1254                           _font:
  1255  0012'                    	retlw	03Eh
  1256  0012' 343E               	retlw	0
  1257  0013' 3400               
  1258                           	retlw	051h
  1259  0014' 3451               	retlw	0
  1260  0015' 3400               
  1261                           	retlw	049h
  1262  0016' 3449               	retlw	0
  1263  0017' 3400               
  1264                           	retlw	045h
  1265  0018' 3445               	retlw	0
  1266  0019' 3400               
  1267                           	retlw	03Eh
  1268  001A' 343E               	retlw	0
  1269  001B' 3400               
  1270                           	retlw	low(0)
  1271  001C' 3400               	retlw	high(0)
  1272  001D' 3400               
  1273                           	retlw	042h
  1274  001E' 3442               	retlw	0
  1275  001F' 3400               
  1276                           	retlw	07Fh
  1277  0020' 347F               	retlw	0
  1278  0021' 3400               
  1279                           	retlw	040h
  1280  0022' 3440               	retlw	0
  1281  0023' 3400               
  1282                           	retlw	low(0)
  1283  0024' 3400               	retlw	high(0)
  1284  0025' 3400               
  1285                           	retlw	042h
  1286  0026' 3442               	retlw	0
  1287  0027' 3400               
  1288                           	retlw	061h
  1289  0028' 3461               	retlw	0
  1290  0029' 3400               
  1291                           	retlw	051h
  1292  002A' 3451               	retlw	0
  1293  002B' 3400               
  1294                           	retlw	049h
  1295  002C' 3449               	retlw	0
  1296  002D' 3400               
  1297                           	retlw	046h
  1298  002E' 3446               	retlw	0
  1299  002F' 3400               
  1300                           	retlw	021h
  1301  0030' 3421               	retlw	0
  1302  0031' 3400               
  1303                           	retlw	041h
  1304  0032' 3441               	retlw	0
  1305  0033' 3400               
  1306                           	retlw	045h
  1307  0034' 3445               	retlw	0
  1308  0035' 3400               
  1309                           	retlw	04Bh
  1310  0036' 344B               	retlw	0
  1311  0037' 3400               
  1312                           	retlw	031h
  1313  0038' 3431               	retlw	0
  1314  0039' 3400               
  1315                           	retlw	018h
  1316  003A' 3418               	retlw	0
  1317  003B' 3400               
  1318                           	retlw	014h
  1319  003C' 3414               	retlw	0
  1320  003D' 3400               
  1321                           	retlw	012h
  1322  003E' 3412               	retlw	0
  1323  003F' 3400               
  1324                           	retlw	07Fh
  1325  0040' 347F               	retlw	0
  1326  0041' 3400               
  1327                           	retlw	010h
  1328  0042' 3410               	retlw	0
  1329  0043' 3400               
  1330                           	retlw	027h
  1331  0044' 3427               	retlw	0
  1332  0045' 3400               
  1333                           	retlw	045h
  1334  0046' 3445               	retlw	0
  1335  0047' 3400               
  1336                           	retlw	045h
  1337  0048' 3445               	retlw	0
  1338  0049' 3400               
  1339                           	retlw	045h
  1340  004A' 3445               	retlw	0
  1341  004B' 3400               
  1342                           	retlw	039h
  1343  004C' 3439               	retlw	0
  1344  004D' 3400               
  1345                           	retlw	03Ch
  1346  004E' 343C               	retlw	0
  1347  004F' 3400               
  1348                           	retlw	04Ah
  1349  0050' 344A               	retlw	0
  1350  0051' 3400               
  1351                           	retlw	049h
  1352  0052' 3449               	retlw	0
  1353  0053' 3400               
  1354                           	retlw	049h
  1355  0054' 3449               	retlw	0
  1356  0055' 3400               
  1357                           	retlw	030h
  1358  0056' 3430               	retlw	0
  1359  0057' 3400               
  1360                           	retlw	01h
  1361  0058' 3401               	retlw	0
  1362  0059' 3400               
  1363                           	retlw	071h
  1364  005A' 3471               	retlw	0
  1365  005B' 3400               
  1366                           	retlw	09h
  1367  005C' 3409               	retlw	0
  1368  005D' 3400               
  1369                           	retlw	05h
  1370  005E' 3405               	retlw	0
  1371  005F' 3400               
  1372                           	retlw	03h
  1373  0060' 3403               	retlw	0
  1374  0061' 3400               
  1375                           	retlw	036h
  1376  0062' 3436               	retlw	0
  1377  0063' 3400               
  1378                           	retlw	049h
  1379  0064' 3449               	retlw	0
  1380  0065' 3400               
  1381                           	retlw	049h
  1382  0066' 3449               	retlw	0
  1383  0067' 3400               
  1384                           	retlw	049h
  1385  0068' 3449               	retlw	0
  1386  0069' 3400               
  1387                           	retlw	036h
  1388  006A' 3436               	retlw	0
  1389  006B' 3400               
  1390                           	retlw	06h
  1391  006C' 3406               	retlw	0
  1392  006D' 3400               
  1393                           	retlw	049h
  1394  006E' 3449               	retlw	0
  1395  006F' 3400               
  1396                           	retlw	049h
  1397  0070' 3449               	retlw	0
  1398  0071' 3400               
  1399                           	retlw	029h
  1400  0072' 3429               	retlw	0
  1401  0073' 3400               
  1402                           	retlw	01Eh
  1403  0074' 341E               	retlw	0
  1404  0075' 3400               
  1405                           	retlw	07Eh
  1406  0076' 347E               	retlw	0
  1407  0077' 3400               
  1408                           	retlw	011h
  1409  0078' 3411               	retlw	0
  1410  0079' 3400               
  1411                           	retlw	011h
  1412  007A' 3411               	retlw	0
  1413  007B' 3400               
  1414                           	retlw	011h
  1415  007C' 3411               	retlw	0
  1416  007D' 3400               
  1417                           	retlw	07Eh
  1418  007E' 347E               	retlw	0
  1419  007F' 3400               
  1420                           	retlw	07Fh
  1421  0080' 347F               	retlw	0
  1422  0081' 3400               
  1423                           	retlw	049h
  1424  0082' 3449               	retlw	0
  1425  0083' 3400               
  1426                           	retlw	049h
  1427  0084' 3449               	retlw	0
  1428  0085' 3400               
  1429                           	retlw	049h
  1430  0086' 3449               	retlw	0
  1431  0087' 3400               
  1432                           	retlw	036h
  1433  0088' 3436               	retlw	0
  1434  0089' 3400               
  1435                           	retlw	03Eh
  1436  008A' 343E               	retlw	0
  1437  008B' 3400               
  1438                           	retlw	041h
  1439  008C' 3441               	retlw	0
  1440  008D' 3400               
  1441                           	retlw	041h
  1442  008E' 3441               	retlw	0
  1443  008F' 3400               
  1444                           	retlw	041h
  1445  0090' 3441               	retlw	0
  1446  0091' 3400               
  1447                           	retlw	022h
  1448  0092' 3422               	retlw	0
  1449  0093' 3400               
  1450                           	retlw	07Fh
  1451  0094' 347F               	retlw	0
  1452  0095' 3400               
  1453                           	retlw	041h
  1454  0096' 3441               	retlw	0
  1455  0097' 3400               
  1456                           	retlw	041h
  1457  0098' 3441               	retlw	0
  1458  0099' 3400               
  1459                           	retlw	022h
  1460  009A' 3422               	retlw	0
  1461  009B' 3400               
  1462                           	retlw	01Ch
  1463  009C' 341C               	retlw	0
  1464  009D' 3400               
  1465                           	retlw	07Fh
  1466  009E' 347F               	retlw	0
  1467  009F' 3400               
  1468                           	retlw	049h
  1469  00A0' 3449               	retlw	0
  1470  00A1' 3400               
  1471                           	retlw	049h
  1472  00A2' 3449               	retlw	0
  1473  00A3' 3400               
  1474                           	retlw	049h
  1475  00A4' 3449               	retlw	0
  1476  00A5' 3400               
  1477                           	retlw	041h
  1478  00A6' 3441               	retlw	0
  1479  00A7' 3400               
  1480                           	retlw	07Fh
  1481  00A8' 347F               	retlw	0
  1482  00A9' 3400               
  1483                           	retlw	09h
  1484  00AA' 3409               	retlw	0
  1485  00AB' 3400               
  1486                           	retlw	09h
  1487  00AC' 3409               	retlw	0
  1488  00AD' 3400               
  1489                           	retlw	01h
  1490  00AE' 3401               	retlw	0
  1491  00AF' 3400               
  1492                           	retlw	01h
  1493  00B0' 3401               	retlw	0
  1494  00B1' 3400               
  1495                           	retlw	03Eh
  1496  00B2' 343E               	retlw	0
  1497  00B3' 3400               
  1498                           	retlw	041h
  1499  00B4' 3441               	retlw	0
  1500  00B5' 3400               
  1501                           	retlw	041h
  1502  00B6' 3441               	retlw	0
  1503  00B7' 3400               
  1504                           	retlw	051h
  1505  00B8' 3451               	retlw	0
  1506  00B9' 3400               
  1507                           	retlw	032h
  1508  00BA' 3432               	retlw	0
  1509  00BB' 3400               
  1510                           	retlw	07Fh
  1511  00BC' 347F               	retlw	0
  1512  00BD' 3400               
  1513                           	retlw	08h
  1514  00BE' 3408               	retlw	0
  1515  00BF' 3400               
  1516                           	retlw	08h
  1517  00C0' 3408               	retlw	0
  1518  00C1' 3400               
  1519                           	retlw	08h
  1520  00C2' 3408               	retlw	0
  1521  00C3' 3400               
  1522                           	retlw	07Fh
  1523  00C4' 347F               	retlw	0
  1524  00C5' 3400               
  1525                           	retlw	low(0)
  1526  00C6' 3400               	retlw	high(0)
  1527  00C7' 3400               
  1528                           	retlw	041h
  1529  00C8' 3441               	retlw	0
  1530  00C9' 3400               
  1531                           	retlw	07Fh
  1532  00CA' 347F               	retlw	0
  1533  00CB' 3400               
  1534                           	retlw	041h
  1535  00CC' 3441               	retlw	0
  1536  00CD' 3400               
  1537                           	retlw	low(0)
  1538  00CE' 3400               	retlw	high(0)
  1539  00CF' 3400               
  1540                           	retlw	020h
  1541  00D0' 3420               	retlw	0
  1542  00D1' 3400               
  1543                           	retlw	040h
  1544  00D2' 3440               	retlw	0
  1545  00D3' 3400               
  1546                           	retlw	041h
  1547  00D4' 3441               	retlw	0
  1548  00D5' 3400               
  1549                           	retlw	03Fh
  1550  00D6' 343F               	retlw	0
  1551  00D7' 3400               
  1552                           	retlw	01h
  1553  00D8' 3401               	retlw	0
  1554  00D9' 3400               
  1555                           	retlw	07Fh
  1556  00DA' 347F               	retlw	0
  1557  00DB' 3400               
  1558                           	retlw	08h
  1559  00DC' 3408               	retlw	0
  1560  00DD' 3400               
  1561                           	retlw	014h
  1562  00DE' 3414               	retlw	0
  1563  00DF' 3400               
  1564                           	retlw	022h
  1565  00E0' 3422               	retlw	0
  1566  00E1' 3400               
  1567                           	retlw	041h
  1568  00E2' 3441               	retlw	0
  1569  00E3' 3400               
  1570                           	retlw	07Fh
  1571  00E4' 347F               	retlw	0
  1572  00E5' 3400               
  1573                           	retlw	040h
  1574  00E6' 3440               	retlw	0
  1575  00E7' 3400               
  1576                           	retlw	040h
  1577  00E8' 3440               	retlw	0
  1578  00E9' 3400               
  1579                           	retlw	040h
  1580  00EA' 3440               	retlw	0
  1581  00EB' 3400               
  1582                           	retlw	040h
  1583  00EC' 3440               	retlw	0
  1584  00ED' 3400               
  1585                           	retlw	07Fh
  1586  00EE' 347F               	retlw	0
  1587  00EF' 3400               
  1588                           	retlw	02h
  1589  00F0' 3402               	retlw	0
  1590  00F1' 3400               
  1591                           	retlw	04h
  1592  00F2' 3404               	retlw	0
  1593  00F3' 3400               
  1594                           	retlw	02h
  1595  00F4' 3402               	retlw	0
  1596  00F5' 3400               
  1597                           	retlw	07Fh
  1598  00F6' 347F               	retlw	0
  1599  00F7' 3400               
  1600                           	retlw	07Fh
  1601  00F8' 347F               	retlw	0
  1602  00F9' 3400               
  1603                           	retlw	04h
  1604  00FA' 3404               	retlw	0
  1605  00FB' 3400               
  1606                           	retlw	08h
  1607  00FC' 3408               	retlw	0
  1608  00FD' 3400               
  1609                           	retlw	010h
  1610  00FE' 3410               	retlw	0
  1611  00FF' 3400               
  1612                           	retlw	07Fh
  1613  0100' 347F               	retlw	0
  1614  0101' 3400               
  1615                           	retlw	03Eh
  1616  0102' 343E               	retlw	0
  1617  0103' 3400               
  1618                           	retlw	041h
  1619  0104' 3441               	retlw	0
  1620  0105' 3400               
  1621                           	retlw	041h
  1622  0106' 3441               	retlw	0
  1623  0107' 3400               
  1624                           	retlw	041h
  1625  0108' 3441               	retlw	0
  1626  0109' 3400               
  1627                           	retlw	03Eh
  1628  010A' 343E               	retlw	0
  1629  010B' 3400               
  1630                           	retlw	07Fh
  1631  010C' 347F               	retlw	0
  1632  010D' 3400               
  1633                           	retlw	09h
  1634  010E' 3409               	retlw	0
  1635  010F' 3400               
  1636                           	retlw	09h
  1637  0110' 3409               	retlw	0
  1638  0111' 3400               
  1639                           	retlw	09h
  1640  0112' 3409               	retlw	0
  1641  0113' 3400               
  1642                           	retlw	06h
  1643  0114' 3406               	retlw	0
  1644  0115' 3400               
  1645                           	retlw	03Eh
  1646  0116' 343E               	retlw	0
  1647  0117' 3400               
  1648                           	retlw	041h
  1649  0118' 3441               	retlw	0
  1650  0119' 3400               
  1651                           	retlw	051h
  1652  011A' 3451               	retlw	0
  1653  011B' 3400               
  1654                           	retlw	021h
  1655  011C' 3421               	retlw	0
  1656  011D' 3400               
  1657                           	retlw	05Eh
  1658  011E' 345E               	retlw	0
  1659  011F' 3400               
  1660                           	retlw	07Fh
  1661  0120' 347F               	retlw	0
  1662  0121' 3400               
  1663                           	retlw	09h
  1664  0122' 3409               	retlw	0
  1665  0123' 3400               
  1666                           	retlw	019h
  1667  0124' 3419               	retlw	0
  1668  0125' 3400               
  1669                           	retlw	029h
  1670  0126' 3429               	retlw	0
  1671  0127' 3400               
  1672                           	retlw	046h
  1673  0128' 3446               	retlw	0
  1674  0129' 3400               
  1675                           	retlw	046h
  1676  012A' 3446               	retlw	0
  1677  012B' 3400               
  1678                           	retlw	049h
  1679  012C' 3449               	retlw	0
  1680  012D' 3400               
  1681                           	retlw	049h
  1682  012E' 3449               	retlw	0
  1683  012F' 3400               
  1684                           	retlw	049h
  1685  0130' 3449               	retlw	0
  1686  0131' 3400               
  1687                           	retlw	031h
  1688  0132' 3431               	retlw	0
  1689  0133' 3400               
  1690                           	retlw	01h
  1691  0134' 3401               	retlw	0
  1692  0135' 3400               
  1693                           	retlw	01h
  1694  0136' 3401               	retlw	0
  1695  0137' 3400               
  1696                           	retlw	07Fh
  1697  0138' 347F               	retlw	0
  1698  0139' 3400               
  1699                           	retlw	01h
  1700  013A' 3401               	retlw	0
  1701  013B' 3400               
  1702                           	retlw	01h
  1703  013C' 3401               	retlw	0
  1704  013D' 3400               
  1705                           	retlw	03Fh
  1706  013E' 343F               	retlw	0
  1707  013F' 3400               
  1708                           	retlw	040h
  1709  0140' 3440               	retlw	0
  1710  0141' 3400               
  1711                           	retlw	040h
  1712  0142' 3440               	retlw	0
  1713  0143' 3400               
  1714                           	retlw	040h
  1715  0144' 3440               	retlw	0
  1716  0145' 3400               
  1717                           	retlw	03Fh
  1718  0146' 343F               	retlw	0
  1719  0147' 3400               
  1720                           	retlw	01Fh
  1721  0148' 341F               	retlw	0
  1722  0149' 3400               
  1723                           	retlw	020h
  1724  014A' 3420               	retlw	0
  1725  014B' 3400               
  1726                           	retlw	040h
  1727  014C' 3440               	retlw	0
  1728  014D' 3400               
  1729                           	retlw	020h
  1730  014E' 3420               	retlw	0
  1731  014F' 3400               
  1732                           	retlw	01Fh
  1733  0150' 341F               	retlw	0
  1734  0151' 3400               
  1735                           	retlw	07Fh
  1736  0152' 347F               	retlw	0
  1737  0153' 3400               
  1738                           	retlw	020h
  1739  0154' 3420               	retlw	0
  1740  0155' 3400               
  1741                           	retlw	018h
  1742  0156' 3418               	retlw	0
  1743  0157' 3400               
  1744                           	retlw	020h
  1745  0158' 3420               	retlw	0
  1746  0159' 3400               
  1747                           	retlw	07Fh
  1748  015A' 347F               	retlw	0
  1749  015B' 3400               
  1750                           	retlw	063h
  1751  015C' 3463               	retlw	0
  1752  015D' 3400               
  1753                           	retlw	014h
  1754  015E' 3414               	retlw	0
  1755  015F' 3400               
  1756                           	retlw	08h
  1757  0160' 3408               	retlw	0
  1758  0161' 3400               
  1759                           	retlw	014h
  1760  0162' 3414               	retlw	0
  1761  0163' 3400               
  1762                           	retlw	063h
  1763  0164' 3463               	retlw	0
  1764  0165' 3400               
  1765                           	retlw	03h
  1766  0166' 3403               	retlw	0
  1767  0167' 3400               
  1768                           	retlw	04h
  1769  0168' 3404               	retlw	0
  1770  0169' 3400               
  1771                           	retlw	078h
  1772  016A' 3478               	retlw	0
  1773  016B' 3400               
  1774                           	retlw	04h
  1775  016C' 3404               	retlw	0
  1776  016D' 3400               
  1777                           	retlw	03h
  1778  016E' 3403               	retlw	0
  1779  016F' 3400               
  1780                           	retlw	061h
  1781  0170' 3461               	retlw	0
  1782  0171' 3400               
  1783                           	retlw	051h
  1784  0172' 3451               	retlw	0
  1785  0173' 3400               
  1786                           	retlw	049h
  1787  0174' 3449               	retlw	0
  1788  0175' 3400               
  1789                           	retlw	045h
  1790  0176' 3445               	retlw	0
  1791  0177' 3400               
  1792                           	retlw	043h
  1793  0178' 3443               	retlw	0
  1794  0179' 3400               
  1795                           	retlw	low(0)
  1796  017A' 3400               	retlw	high(0)
  1797  017B' 3400               
  1798                           	retlw	low(0)
  1799  017C' 3400               	retlw	high(0)
  1800  017D' 3400               
  1801                           	retlw	low(0)
  1802  017E' 3400               	retlw	high(0)
  1803  017F' 3400               
  1804                           	retlw	low(0)
  1805  0180' 3400               	retlw	high(0)
  1806  0181' 3400               
  1807                           	retlw	low(0)
  1808  0182' 3400               	retlw	high(0)
  1809  0183' 3400               
  1810                           	global __end_of_font
  1811                           __end_of_font:
  1812  0184'                    	global	_dpowers
  1813                           psect	stringtext
  1814                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1815                           	line	358
  1816                           _dpowers:
  1817  0184'                    	retlw	01h
  1818  0184' 3401               	retlw	0
  1819  0185' 3400               
  1820                           	retlw	0Ah
  1821  0186' 340A               	retlw	0
  1822  0187' 3400               
  1823                           	retlw	064h
  1824  0188' 3464               	retlw	0
  1825  0189' 3400               
  1826                           	retlw	0E8h
  1827  018A' 34E8               	retlw	03h
  1828  018B' 3403               
  1829                           	retlw	010h
  1830  018C' 3410               	retlw	027h
  1831  018D' 3427               
  1832                           	global __end_of_dpowers
  1833                           __end_of_dpowers:
  1834  018E'                    	global	_step_size
  1835                           psect	stringtext
  1836                           	file	"./Volume.h"
  1837                           	line	5
  1838                           _step_size:
  1839  018E'                    	retlw	019h
  1840  018E' 3419               	retlw	0
  1841  018F' 3400               
  1842                           	global __end_of_step_size
  1843                           __end_of_step_size:
  1844  0190'                    	global	_font
  1845                           	global	_dpowers
  1846                           	global	_step_size
  1847                           	global	_ir_input
  1848                           	global	__lastAdcResult
  1849                           	global	__lastB
  1850                           	global	__lastA
  1851                           	global	__inputUpdateRequired
  1852                           	global	_lastInput
  1853                           	global	_lastVolume
  1854                           	global	_volume
  1855                           	global	__selectedInput
  1856                           	global	__selectedDisplay
  1857                           	global	_ADRESH
  1858                           _ADRESH	set	0x1E
  1859  001E                     	global	_PORTC
  1860                           _PORTC	set	0x7
  1861  0007                     	global	_PORTA
  1862                           _PORTA	set	0x5
  1863  0005                     	global	_SSPBUF
  1864                           _SSPBUF	set	0x13
  1865  0013                     	global	_PORTCbits
  1866                           _PORTCbits	set	0x7
  1867  0007                     	global	_PORTDbits
  1868                           _PORTDbits	set	0x8
  1869  0008                     	global	_SSPCON
  1870                           _SSPCON	set	0x14
  1871  0014                     	global	_PIR1bits
  1872                           _PIR1bits	set	0xC
  1873  000C                     	global	_PORTBbits
  1874                           _PORTBbits	set	0x6
  1875  0006                     	global	_INTCONbits
  1876                           _INTCONbits	set	0xB
  1877  000B                     	global	_ADCON0bits
  1878                           _ADCON0bits	set	0x1F
  1879  001F                     	global	_ADRESL
  1880                           _ADRESL	set	0x9E
  1881  009E                     	global	_PIE1bits
  1882                           _PIE1bits	set	0x8C
  1883  008C                     	global	_ADCON1bits
  1884                           _ADCON1bits	set	0x9F
  1885  009F                     	global	_IOCBbits
  1886                           _IOCBbits	set	0x96
  1887  0096                     	global	_TRISCbits
  1888                           _TRISCbits	set	0x87
  1889  0087                     	global	_TRISEbits
  1890                           _TRISEbits	set	0x89
  1891  0089                     	global	_TRISBbits
  1892                           _TRISBbits	set	0x86
  1893  0086                     	global	_TRISAbits
  1894                           _TRISAbits	set	0x85
  1895  0085                     	global	_OSCCONbits
  1896                           _OSCCONbits	set	0x8F
  1897  008F                     	global	_SSPSTATbits
  1898                           _SSPSTATbits	set	0x94
  1899  0094                     	global	_TRISC
  1900                           _TRISC	set	0x87
  1901  0087                     	global	_TRISD
  1902                           _TRISD	set	0x88
  1903  0088                     	global	_SSPSTAT
  1904                           _SSPSTAT	set	0x94
  1905  0094                     	global	_ANSELbits
  1906                           _ANSELbits	set	0x188
  1907  0188                     	global	_ANSELHbits
  1908                           _ANSELHbits	set	0x189
  1909  0189                     	
  1910                           STR_1:	
  1911  0190'                    	retlw	73	;'I'
  1912  0190' 3449               	retlw	78	;'N'
  1913  0191' 344E               	retlw	80	;'P'
  1914  0192' 3450               	retlw	85	;'U'
  1915  0193' 3455               	retlw	84	;'T'
  1916  0194' 3454               	retlw	0
  1917  0195' 3400               psect	stringtext
  1918                           	
  1919                           STR_2:	
  1920  0196'                    	retlw	86	;'V'
  1921  0196' 3456               	retlw	79	;'O'
  1922  0197' 344F               	retlw	76	;'L'
  1923  0198' 344C               	retlw	0
  1924  0199' 3400               psect	stringtext
  1925                           	
  1926                           STR_3:	
  1927  019A'                    	retlw	37	;'%'
  1928  019A' 3425               	retlw	100	;'d'
  1929  019B' 3464               	retlw	0
  1930  019C' 3400               psect	stringtext
  1931                           ; #config settings
  1932                           global __CFG_FOSC$INTRC_CLKOUT
  1933                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1934  0000                     global __CFG_WDTE$OFF
  1935                           __CFG_WDTE$OFF equ 0x0
  1936  0000                     global __CFG_PWRTE$OFF
  1937                           __CFG_PWRTE$OFF equ 0x0
  1938  0000                     global __CFG_MCLRE$OFF
  1939                           __CFG_MCLRE$OFF equ 0x0
  1940  0000                     global __CFG_CP$OFF
  1941                           __CFG_CP$OFF equ 0x0
  1942  0000                     global __CFG_CPD$OFF
  1943                           __CFG_CPD$OFF equ 0x0
  1944  0000                     global __CFG_BOREN$ON
  1945                           __CFG_BOREN$ON equ 0x0
  1946  0000                     global __CFG_IESO$OFF
  1947                           __CFG_IESO$OFF equ 0x0
  1948  0000                     global __CFG_FCMEN$OFF
  1949                           __CFG_FCMEN$OFF equ 0x0
  1950  0000                     global __CFG_LVP$OFF
  1951                           __CFG_LVP$OFF equ 0x0
  1952  0000                     global __CFG_BOR4V$BOR21V
  1953                           __CFG_BOR4V$BOR21V equ 0x0
  1954  0000                     global __CFG_WRT$OFF
  1955                           __CFG_WRT$OFF equ 0x0
  1956  0000                     	file	"C:\Users\Vincent\AppData\Local\Temp\sj2c."
  1957                           	line	#
  1958                           psect cinit,class=CODE,delta=2
  1959                           global start_initialization
  1960                           start_initialization:
  1961  0000'                    
  1962                           global __initialization
  1963                           __initialization:
  1964  0000'                    psect	bssBANK0,class=BANK0,space=1,noexec
  1965                           global __pbssBANK0
  1966                           __pbssBANK0:
  1967  0000'                    _ir_input:
  1968  0000'                           ds      4
  1969  0000'                    
  1970                           __lastAdcResult:
  1971  0004'                           ds      2
  1972  0004'                    
  1973                           __lastB:
  1974  0006'                           ds      2
  1975  0006'                    
  1976                           __lastA:
  1977  0008'                           ds      2
  1978  0008'                    
  1979                           __inputUpdateRequired:
  1980  000A'                           ds      1
  1981  000A'                    
  1982                           psect	bssBANK1,class=BANK1,space=1,noexec
  1983                           global __pbssBANK1
  1984                           __pbssBANK1:
  1985  0000'                    _lastInput:
  1986  0000'                           ds      2
  1987  0000'                    
  1988                           _lastVolume:
  1989  0002'                           ds      2
  1990  0002'                    
  1991                           _volume:
  1992  0004'                           ds      2
  1993  0004'                    
  1994                           __selectedInput:
  1995  0006'                           ds      2
  1996  0006'                    
  1997                           __selectedDisplay:
  1998  0008'                           ds      1
  1999  0008'                    
  2000                           	file	"C:\Users\Vincent\AppData\Local\Temp\sj2c."
  2001                           	line	#
  2002                           ; Clear objects allocated to BANK0
  2003                           psect cinit,class=CODE,delta=2,merge=1
  2004                           	bcf	status, 5	;RP0=0, select bank0
  2005  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  2006  0001' 1303               	clrf	((__pbssBANK0)+0)&07Fh
  2007  0002' 0180'              	clrf	((__pbssBANK0)+1)&07Fh
  2008  0003' 0180'              	clrf	((__pbssBANK0)+2)&07Fh
  2009  0004' 0180'              	clrf	((__pbssBANK0)+3)&07Fh
  2010  0005' 0180'              	clrf	((__pbssBANK0)+4)&07Fh
  2011  0006' 0180'              	clrf	((__pbssBANK0)+5)&07Fh
  2012  0007' 0180'              	clrf	((__pbssBANK0)+6)&07Fh
  2013  0008' 0180'              	clrf	((__pbssBANK0)+7)&07Fh
  2014  0009' 0180'              	clrf	((__pbssBANK0)+8)&07Fh
  2015  000A' 0180'              	clrf	((__pbssBANK0)+9)&07Fh
  2016  000B' 0180'              	clrf	((__pbssBANK0)+10)&07Fh
  2017  000C' 0180'              ; Clear objects allocated to BANK1
  2018                           psect cinit,class=CODE,delta=2,merge=1
  2019                           	bsf	status, 5	;RP0=1, select bank1
  2020  000D' 1683               	bcf	status, 6	;RP1=0, select bank1
  2021  000E' 1303               	clrf	((__pbssBANK1)+0)&07Fh
  2022  000F' 0180'              	clrf	((__pbssBANK1)+1)&07Fh
  2023  0010' 0180'              	clrf	((__pbssBANK1)+2)&07Fh
  2024  0011' 0180'              	clrf	((__pbssBANK1)+3)&07Fh
  2025  0012' 0180'              	clrf	((__pbssBANK1)+4)&07Fh
  2026  0013' 0180'              	clrf	((__pbssBANK1)+5)&07Fh
  2027  0014' 0180'              	clrf	((__pbssBANK1)+6)&07Fh
  2028  0015' 0180'              	clrf	((__pbssBANK1)+7)&07Fh
  2029  0016' 0180'              	clrf	((__pbssBANK1)+8)&07Fh
  2030  0017' 0180'              psect cinit,class=CODE,delta=2,merge=1
  2031                           global end_of_initialization,__end_of__initialization
  2032                           
  2033                           ;End of C runtime variable initialization code
  2034                           
  2035                           end_of_initialization:
  2036  0018'                    __end_of__initialization:
  2037  0018'                    clrf status
  2038  0018' 0183               ljmp _main	;jump to C main() function
  2039  0019' 120A' 118A' 2800'  psect	cstackBANK1,class=BANK1,space=1,noexec
  2040                           global __pcstackBANK1
  2041                           __pcstackBANK1:
  2042  0000'                    ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2043  0000'                    ??_spiWrite:	; 1 bytes @ 0x0
  2044  0000'                    ??_display_write_start:	; 1 bytes @ 0x0
  2045  0000'                    ??_display_write_end:	; 1 bytes @ 0x0
  2046  0000'                    ??_init_adc:	; 1 bytes @ 0x0
  2047  0000'                    ??_init_remote:	; 1 bytes @ 0x0
  2048  0000'                    	global	?___wmul
  2049                           ?___wmul:	; 2 bytes @ 0x0
  2050  0000'                    	global	?___lwdiv
  2051                           ?___lwdiv:	; 2 bytes @ 0x0
  2052  0000'                    	global	spiWrite@data
  2053                           spiWrite@data:	; 1 bytes @ 0x0
  2054  0000'                    	global	___wmul@multiplier
  2055                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2056  0000'                    	global	___lwdiv@divisor
  2057                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2058  0000'                    	ds	1
  2059  0000'                    ??_config:	; 1 bytes @ 0x1
  2060  0001'                    ?_write_space:	; 1 bytes @ 0x1
  2061  0001'                    ??_display_init:	; 1 bytes @ 0x1
  2062  0001'                    	global	write_space@count
  2063                           write_space@count:	; 2 bytes @ 0x1
  2064  0001'                    	ds	1
  2065  0001'                    	global	___wmul@multiplicand
  2066                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2067  0002'                    	global	___lwdiv@dividend
  2068                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2069  0002'                    	ds	1
  2070  0002'                    ??_write_space:	; 1 bytes @ 0x3
  2071  0003'                    	ds	1
  2072  0003'                    ??___wmul:	; 1 bytes @ 0x4
  2073  0004'                    ??___lwdiv:	; 1 bytes @ 0x4
  2074  0004'                    	global	write_space@i
  2075                           write_space@i:	; 2 bytes @ 0x4
  2076  0004'                    	global	___wmul@product
  2077                           ___wmul@product:	; 2 bytes @ 0x4
  2078  0004'                    	ds	1
  2079  0004'                    	global	___lwdiv@quotient
  2080                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2081  0005'                    	ds	1
  2082  0005'                    ?_write_font:	; 1 bytes @ 0x6
  2083  0006'                    	global	write_space@x
  2084                           write_space@x:	; 2 bytes @ 0x6
  2085  0006'                    	global	write_font@fontPos
  2086                           write_font@fontPos:	; 2 bytes @ 0x6
  2087  0006'                    	ds	1
  2088  0006'                    	global	___lwdiv@counter
  2089                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2090  0007'                    	ds	1
  2091  0007'                    ??_write_font:	; 1 bytes @ 0x8
  2092  0008'                    	global	?___lwmod
  2093                           ?___lwmod:	; 2 bytes @ 0x8
  2094  0008'                    	global	___lwmod@divisor
  2095                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2096  0008'                    	ds	2
  2097  0008'                    	global	___lwmod@dividend
  2098                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2099  000A'                    	ds	2
  2100  000A'                    ??___lwmod:	; 1 bytes @ 0xC
  2101  000C'                    	ds	1
  2102  000C'                    	global	___lwmod@counter
  2103                           ___lwmod@counter:	; 1 bytes @ 0xD
  2104  000D'                    	ds	1
  2105  000D'                    	global	?_sprintf
  2106                           ?_sprintf:	; 2 bytes @ 0xE
  2107  000E'                    	global	write_font@x
  2108                           write_font@x:	; 2 bytes @ 0xE
  2109  000E'                    	global	sprintf@f
  2110                           sprintf@f:	; 2 bytes @ 0xE
  2111  000E'                    	ds	2
  2112  000E'                    ??_write_char:	; 1 bytes @ 0x10
  2113  0010'                    	global	write_char@pos
  2114                           write_char@pos:	; 2 bytes @ 0x10
  2115  0010'                    	ds	2
  2116  0010'                    ??_sprintf:	; 1 bytes @ 0x12
  2117  0012'                    	global	write_char@c
  2118                           write_char@c:	; 1 bytes @ 0x12
  2119  0012'                    	ds	1
  2120  0012'                    ?_write_text:	; 1 bytes @ 0x13
  2121  0013'                    	global	write_text@text
  2122                           write_text@text:	; 2 bytes @ 0x13
  2123  0013'                    	ds	2
  2124  0013'                    ??_write_text:	; 1 bytes @ 0x15
  2125  0015'                    	global	write_text@c
  2126                           write_text@c:	; 2 bytes @ 0x15
  2127  0015'                    	ds	1
  2128  0015'                    	global	sprintf@ap
  2129                           sprintf@ap:	; 1 bytes @ 0x16
  2130  0016'                    	ds	1
  2131  0016'                    	global	sprintf@flag
  2132                           sprintf@flag:	; 1 bytes @ 0x17
  2133  0017'                    	ds	1
  2134  0017'                    	global	sprintf@prec
  2135                           sprintf@prec:	; 1 bytes @ 0x18
  2136  0018'                    	ds	1
  2137  0018'                    	global	sprintf@val
  2138                           sprintf@val:	; 2 bytes @ 0x19
  2139  0019'                    	ds	2
  2140  0019'                    	global	sprintf@sp
  2141                           sprintf@sp:	; 1 bytes @ 0x1B
  2142  001B'                    	ds	1
  2143  001B'                    	global	sprintf@c
  2144                           sprintf@c:	; 1 bytes @ 0x1C
  2145  001C'                    	ds	1
  2146  001C'                    ?_write_int:	; 1 bytes @ 0x1D
  2147  001D'                    	global	write_int@number
  2148                           write_int@number:	; 2 bytes @ 0x1D
  2149  001D'                    	ds	2
  2150  001D'                    ??_write_int:	; 1 bytes @ 0x1F
  2151  001F'                    	global	write_int@num
  2152                           write_int@num:	; 2 bytes @ 0x1F
  2153  001F'                    	ds	2
  2154  001F'                    ??_update_volume:	; 1 bytes @ 0x21
  2155  0021'                    ??_update_input:	; 1 bytes @ 0x21
  2156  0021'                    	global	update_volume@spaces
  2157                           update_volume@spaces:	; 2 bytes @ 0x21
  2158  0021'                    	ds	2
  2159  0021'                    ??_main:	; 1 bytes @ 0x23
  2160  0023'                    	ds	2
  2161  0023'                    psect	cstackCOMMON,class=COMMON,space=1,noexec
  2162                           global __pcstackCOMMON
  2163                           __pcstackCOMMON:
  2164  0000'                    ?_config:	; 1 bytes @ 0x0
  2165  0000'                    ?_update_volume:	; 1 bytes @ 0x0
  2166  0000'                    ?_update_input:	; 1 bytes @ 0x0
  2167  0000'                    ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2168  0000'                    ?_handle_rotary:	; 1 bytes @ 0x0
  2169  0000'                    ??_handle_rotary:	; 1 bytes @ 0x0
  2170  0000'                    ?_start_receive:	; 1 bytes @ 0x0
  2171  0000'                    ?_handle_potmeter:	; 1 bytes @ 0x0
  2172  0000'                    ?_spiWrite:	; 1 bytes @ 0x0
  2173  0000'                    ?_display_write_start:	; 1 bytes @ 0x0
  2174  0000'                    ?_display_write_end:	; 1 bytes @ 0x0
  2175  0000'                    ?_write_char:	; 1 bytes @ 0x0
  2176  0000'                    ?_init_adc:	; 1 bytes @ 0x0
  2177  0000'                    ?_handle_remote:	; 1 bytes @ 0x0
  2178  0000'                    ??_handle_remote:	; 1 bytes @ 0x0
  2179  0000'                    ?_main:	; 1 bytes @ 0x0
  2180  0000'                    ?_isr:	; 1 bytes @ 0x0
  2181  0000'                    ?_display_init:	; 1 bytes @ 0x0
  2182  0000'                    ?_init_remote:	; 2 bytes @ 0x0
  2183  0000'                    	global	?i1___wmul
  2184                           ?i1___wmul:	; 2 bytes @ 0x0
  2185  0000'                    	global	?i1___lwdiv
  2186                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2187  0000'                    	global	?___xxtofl
  2188                           ?___xxtofl:	; 4 bytes @ 0x0
  2189  0000'                    	global	handle_remote@mask
  2190                           handle_remote@mask:	; 2 bytes @ 0x0
  2191  0000'                    	global	i1___wmul@multiplier
  2192                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2193  0000'                    	global	i1___lwdiv@divisor
  2194                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2195  0000'                    	global	___xxtofl@val
  2196                           ___xxtofl@val:	; 4 bytes @ 0x0
  2197  0000'                    	ds	2
  2198  0000'                    	global	handle_remote@data
  2199                           handle_remote@data:	; 2 bytes @ 0x2
  2200  0002'                    	global	i1___wmul@multiplicand
  2201                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2202  0002'                    	global	i1___lwdiv@dividend
  2203                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2204  0002'                    	ds	1
  2205  0002'                    	global	handle_rotary@portA
  2206                           handle_rotary@portA:	; 2 bytes @ 0x3
  2207  0003'                    	ds	1
  2208  0003'                    ??___xxtofl:	; 1 bytes @ 0x4
  2209  0004'                    ??i1___wmul:	; 1 bytes @ 0x4
  2210  0004'                    ??i1___lwdiv:	; 1 bytes @ 0x4
  2211  0004'                    	global	handle_remote@found
  2212                           handle_remote@found:	; 1 bytes @ 0x4
  2213  0004'                    	global	i1___wmul@product
  2214                           i1___wmul@product:	; 2 bytes @ 0x4
  2215  0004'                    	ds	1
  2216  0004'                    ??_start_receive:	; 1 bytes @ 0x5
  2217  0005'                    	global	handle_rotary@portB
  2218                           handle_rotary@portB:	; 2 bytes @ 0x5
  2219  0005'                    	global	i1___lwdiv@quotient
  2220                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2221  0005'                    	ds	2
  2222  0005'                    	global	i1___lwdiv@counter
  2223                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2224  0007'                    	ds	1
  2225  0007'                    	global	___xxtofl@sign
  2226                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2227  0008'                    	ds	1
  2228  0008'                    	global	___xxtofl@exp
  2229                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2230  0009'                    	ds	1
  2231  0009'                    	global	___xxtofl@arg
  2232                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2233  000A'                    	ds	4
  2234  000A'                    psect	cstackBANK0,class=BANK0,space=1,noexec
  2235                           global __pcstackBANK0
  2236                           __pcstackBANK0:
  2237  0000'                    	global	?___fladd
  2238                           ?___fladd:	; 4 bytes @ 0x0
  2239  0000'                    	global	start_receive@i
  2240                           start_receive@i:	; 2 bytes @ 0x0
  2241  0000'                    	global	___fladd@b
  2242                           ___fladd@b:	; 4 bytes @ 0x0
  2243  0000'                    	ds	4
  2244  0000'                    	global	___fladd@a
  2245                           ___fladd@a:	; 4 bytes @ 0x4
  2246  0004'                    	ds	4
  2247  0004'                    ??___fladd:	; 1 bytes @ 0x8
  2248  0008'                    	ds	12
  2249  0008'                    	global	___fladd@signs
  2250                           ___fladd@signs:	; 1 bytes @ 0x14
  2251  0014'                    	ds	1
  2252  0014'                    	global	___fladd@aexp
  2253                           ___fladd@aexp:	; 1 bytes @ 0x15
  2254  0015'                    	ds	1
  2255  0015'                    	global	___fladd@bexp
  2256                           ___fladd@bexp:	; 1 bytes @ 0x16
  2257  0016'                    	ds	1
  2258  0016'                    	global	___fladd@grs
  2259                           ___fladd@grs:	; 1 bytes @ 0x17
  2260  0017'                    	ds	1
  2261  0017'                    	global	?___fltol
  2262                           ?___fltol:	; 4 bytes @ 0x18
  2263  0018'                    	global	___fltol@f1
  2264                           ___fltol@f1:	; 4 bytes @ 0x18
  2265  0018'                    	ds	4
  2266  0018'                    ??___fltol:	; 1 bytes @ 0x1C
  2267  001C'                    	ds	5
  2268  001C'                    	global	___fltol@sign1
  2269                           ___fltol@sign1:	; 1 bytes @ 0x21
  2270  0021'                    	ds	1
  2271  0021'                    	global	___fltol@exp1
  2272                           ___fltol@exp1:	; 1 bytes @ 0x22
  2273  0022'                    	ds	1
  2274  0022'                    	global	?_is_deadzone
  2275                           ?_is_deadzone:	; 2 bytes @ 0x23
  2276  0023'                    	global	is_deadzone@currentStep
  2277                           is_deadzone@currentStep:	; 2 bytes @ 0x23
  2278  0023'                    	ds	2
  2279  0023'                    	global	is_deadzone@adcResult
  2280                           is_deadzone@adcResult:	; 2 bytes @ 0x25
  2281  0025'                    	ds	2
  2282  0025'                    ??_is_deadzone:	; 1 bytes @ 0x27
  2283  0027'                    	ds	2
  2284  0027'                    	global	is_deadzone@deadzoneLow
  2285                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x29
  2286  0029'                    	ds	2
  2287  0029'                    	global	is_deadzone@deadzoneHigh
  2288                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2B
  2289  002B'                    	ds	2
  2290  002B'                    	global	_is_deadzone$871
  2291                           _is_deadzone$871:	; 1 bytes @ 0x2D
  2292  002D'                    	ds	1
  2293  002D'                    	global	is_deadzone@turnPoint
  2294                           is_deadzone@turnPoint:	; 2 bytes @ 0x2E
  2295  002E'                    	ds	2
  2296  002E'                    ??_handle_potmeter:	; 1 bytes @ 0x30
  2297  0030'                    	ds	2
  2298  0030'                    	global	handle_potmeter@currentStep
  2299                           handle_potmeter@currentStep:	; 2 bytes @ 0x32
  2300  0032'                    	ds	2
  2301  0032'                    	global	handle_potmeter@ad_result
  2302                           handle_potmeter@ad_result:	; 2 bytes @ 0x34
  2303  0034'                    	ds	2
  2304  0034'                    ??_isr:	; 1 bytes @ 0x36
  2305  0036'                    	ds	4
  2306  0036'                    ;!
  2307                           ;!Data Sizes:
  2308                           ;!    Strings     13
  2309                           ;!    Constant    382
  2310                           ;!    Data        0
  2311                           ;!    BSS         20
  2312                           ;!    Persistent  0
  2313                           ;!    Stack       0
  2314                           ;!
  2315                           ;!Auto Spaces:
  2316                           ;!    Space          Size  Autos    Used
  2317                           ;!    COMMON           14     14      14
  2318                           ;!    BANK0            80     58      69
  2319                           ;!    BANK1            80     37      46
  2320                           ;!    BANK3            96      0       0
  2321                           ;!    BANK2            96      0       0
  2322                           
  2323                           ;!
  2324                           ;!Pointer List with Targets:
  2325                           ;!
  2326                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2327                           ;!		 -> STR_3(CODE[3]), 
  2328                           ;!
  2329                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2330                           ;!		 -> write_int@num(BANK1[2]), 
  2331                           ;!
  2332                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2333                           ;!		 -> ?_sprintf(BANK1[2]), 
  2334                           ;!
  2335                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2336                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2337                           ;!
  2338                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2339                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2340                           ;!
  2341                           
  2342                           
  2343                           ;!
  2344                           ;!Critical Paths under _main in COMMON
  2345                           ;!
  2346                           ;!    None.
  2347                           ;!
  2348                           ;!Critical Paths under _isr in COMMON
  2349                           ;!
  2350                           ;!    _start_receive->_handle_remote
  2351                           ;!    _is_deadzone->___xxtofl
  2352                           ;!    ___fltol->___xxtofl
  2353                           ;!    ___fladd->___xxtofl
  2354                           ;!
  2355                           ;!Critical Paths under _main in BANK0
  2356                           ;!
  2357                           ;!    None.
  2358                           ;!
  2359                           ;!Critical Paths under _isr in BANK0
  2360                           ;!
  2361                           ;!    _isr->_handle_potmeter
  2362                           ;!    _handle_potmeter->_is_deadzone
  2363                           ;!    _is_deadzone->___fltol
  2364                           ;!    ___fltol->___fladd
  2365                           ;!
  2366                           ;!Critical Paths under _main in BANK1
  2367                           ;!
  2368                           ;!    _main->_update_volume
  2369                           ;!    _update_volume->_write_int
  2370                           ;!    _update_input->_write_int
  2371                           ;!    _write_space->_spiWrite
  2372                           ;!    _write_int->_sprintf
  2373                           ;!    _write_text->_write_char
  2374                           ;!    _write_char->_write_font
  2375                           ;!    _write_font->___wmul
  2376                           ;!    _sprintf->___lwmod
  2377                           ;!    ___lwmod->___lwdiv
  2378                           ;!    _display_init->_spiWrite
  2379                           ;!
  2380                           ;!Critical Paths under _isr in BANK1
  2381                           ;!
  2382                           ;!    None.
  2383                           ;!
  2384                           ;!Critical Paths under _main in BANK3
  2385                           ;!
  2386                           ;!    None.
  2387                           ;!
  2388                           ;!Critical Paths under _isr in BANK3
  2389                           ;!
  2390                           ;!    None.
  2391                           ;!
  2392                           ;!Critical Paths under _main in BANK2
  2393                           ;!
  2394                           ;!    None.
  2395                           ;!
  2396                           ;!Critical Paths under _isr in BANK2
  2397                           ;!
  2398                           ;!    None.
  2399                           
  2400 ;;
  2401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2402 ;;
  2403                           
  2404                           ;!
  2405                           ;!Call Graph Tables:
  2406                           ;!
  2407                           ;! ---------------------------------------------------------------------------------
  2408                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2409                           ;! ---------------------------------------------------------------------------------
  2410                           ;! (0) _main                                                 2     2      0   10634
  2411                           ;!                                             35 BANK1      2     2      0
  2412                           ;!              _activateSelectedRelay
  2413                           ;!                             _config
  2414                           ;!                       _update_input
  2415                           ;!                      _update_volume
  2416                           ;! ---------------------------------------------------------------------------------
  2417                           ;! (1) _update_volume                                        2     2      0    5318
  2418                           ;!                                             33 BANK1      2     2      0
  2419                           ;!                  _display_write_end
  2420                           ;!                _display_write_start
  2421                           ;!                          _write_int
  2422                           ;!                        _write_space
  2423                           ;!                         _write_text
  2424                           ;! ---------------------------------------------------------------------------------
  2425                           ;! (1) _update_input                                         0     0      0    5294
  2426                           ;!                  _display_write_end
  2427                           ;!                _display_write_start
  2428                           ;!                          _write_int
  2429                           ;!                        _write_space
  2430                           ;!                         _write_text
  2431                           ;! ---------------------------------------------------------------------------------
  2432                           ;! (2) _write_space                                          7     5      2     266
  2433                           ;!                                              1 BANK1      7     5      2
  2434                           ;!                           _spiWrite
  2435                           ;! ---------------------------------------------------------------------------------
  2436                           ;! (2) _write_int                                            4     2      2    3781
  2437                           ;!                                             29 BANK1      4     2      2
  2438                           ;!                            _sprintf
  2439                           ;!                         _write_char
  2440                           ;!                         _write_text
  2441                           ;! ---------------------------------------------------------------------------------
  2442                           ;! (2) _write_text                                           4     2      2    1247
  2443                           ;!                                             19 BANK1      4     2      2
  2444                           ;!                         _write_char
  2445                           ;! ---------------------------------------------------------------------------------
  2446                           ;! (3) _write_char                                           3     3      0     951
  2447                           ;!                                             16 BANK1      3     3      0
  2448                           ;!                         _write_font
  2449                           ;! ---------------------------------------------------------------------------------
  2450                           ;! (4) _write_font                                          10     8      2     684
  2451                           ;!                                              6 BANK1     10     8      2
  2452                           ;!                             ___wmul
  2453                           ;!                           _spiWrite
  2454                           ;! ---------------------------------------------------------------------------------
  2455                           ;! (5) ___wmul                                               6     2      4     344
  2456                           ;!                                              0 BANK1      6     2      4
  2457                           ;! ---------------------------------------------------------------------------------
  2458                           ;! (3) _sprintf                                             23    19      4    1311
  2459                           ;!                                             14 BANK1     15    11      4
  2460                           ;!                            ___lwdiv
  2461                           ;!                            ___lwmod
  2462                           ;! ---------------------------------------------------------------------------------
  2463                           ;! (4) ___lwmod                                              6     2      4     311
  2464                           ;!                                              8 BANK1      6     2      4
  2465                           ;!                            ___lwdiv (ARG)
  2466                           ;! ---------------------------------------------------------------------------------
  2467                           ;! (4) ___lwdiv                                              8     4      4     414
  2468                           ;!                                              0 BANK1      8     4      4
  2469                           ;! ---------------------------------------------------------------------------------
  2470                           ;! (2) _display_write_start                                  0     0      0       0
  2471                           ;! ---------------------------------------------------------------------------------
  2472                           ;! (2) _display_write_end                                    0     0      0       0
  2473                           ;! ---------------------------------------------------------------------------------
  2474                           ;! (1) _config                                               3     3      0      22
  2475                           ;!                                              1 BANK1      3     3      0
  2476                           ;!                       _display_init
  2477                           ;!                           _init_adc
  2478                           ;!                        _init_remote
  2479                           ;! ---------------------------------------------------------------------------------
  2480                           ;! (2) _init_remote                                          0     0      0       0
  2481                           ;! ---------------------------------------------------------------------------------
  2482                           ;! (2) _init_adc                                             0     0      0       0
  2483                           ;! ---------------------------------------------------------------------------------
  2484                           ;! (2) _display_init                                         0     0      0      22
  2485                           ;!                           _spiWrite
  2486                           ;! ---------------------------------------------------------------------------------
  2487                           ;! (5) _spiWrite                                             1     1      0      22
  2488                           ;!                                              0 BANK1      1     1      0
  2489                           ;! ---------------------------------------------------------------------------------
  2490                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2491                           ;! ---------------------------------------------------------------------------------
  2492                           ;! Estimated maximum stack depth 5
  2493                           ;! ---------------------------------------------------------------------------------
  2494                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2495                           ;! ---------------------------------------------------------------------------------
  2496                           ;! (7) _isr                                                  4     4      0    4371
  2497                           ;!                                             54 BANK0      4     4      0
  2498                           ;!                    _handle_potmeter
  2499                           ;!                      _handle_rotary
  2500                           ;!                      _start_receive
  2501                           ;! ---------------------------------------------------------------------------------
  2502                           ;! (8) _start_receive                                       10    10      0      99
  2503                           ;!                                              5 COMMON     8     8      0
  2504                           ;!                                              0 BANK0      2     2      0
  2505                           ;!                      _handle_remote
  2506                           ;! ---------------------------------------------------------------------------------
  2507                           ;! (9) _handle_remote                                        5     5      0      53
  2508                           ;!                                              0 COMMON     5     5      0
  2509                           ;! ---------------------------------------------------------------------------------
  2510                           ;! (8) _handle_rotary                                        7     7      0     134
  2511                           ;!                                              0 COMMON     7     7      0
  2512                           ;! ---------------------------------------------------------------------------------
  2513                           ;! (8) _handle_potmeter                                      6     6      0    4138
  2514                           ;!                                             48 BANK0      6     6      0
  2515                           ;!                        _is_deadzone
  2516                           ;!                          i1___lwdiv
  2517                           ;! ---------------------------------------------------------------------------------
  2518                           ;! (9) i1___lwdiv                                            8     4      4     214
  2519                           ;!                                              0 COMMON     8     4      4
  2520                           ;! ---------------------------------------------------------------------------------
  2521                           ;! (9) _is_deadzone                                         13     9      4    3746
  2522                           ;!                                             35 BANK0     13     9      4
  2523                           ;!                            ___fladd
  2524                           ;!                            ___fltol
  2525                           ;!                           ___xxtofl
  2526                           ;!                           i1___wmul
  2527                           ;! ---------------------------------------------------------------------------------
  2528                           ;! (10) i1___wmul                                            6     2      4     144
  2529                           ;!                                              0 COMMON     6     2      4
  2530                           ;! ---------------------------------------------------------------------------------
  2531                           ;! (10) ___xxtofl                                           14    10      4     474
  2532                           ;!                                              0 COMMON    14    10      4
  2533                           ;! ---------------------------------------------------------------------------------
  2534                           ;! (10) ___fltol                                            11     7      4     381
  2535                           ;!                                             24 BANK0     11     7      4
  2536                           ;!                            ___fladd (ARG)
  2537                           ;!                           ___xxtofl (ARG)
  2538                           ;! ---------------------------------------------------------------------------------
  2539                           ;! (10) ___fladd                                            24    16      8    2414
  2540                           ;!                                              0 BANK0     24    16      8
  2541                           ;!                           ___xxtofl (ARG)
  2542                           ;! ---------------------------------------------------------------------------------
  2543                           ;! Estimated maximum stack depth 10
  2544                           ;! ---------------------------------------------------------------------------------
  2545                           ;!
  2546                           ;! Call Graph Graphs:
  2547                           ;!
  2548                           ;! _main (ROOT)
  2549                           ;!   _activateSelectedRelay
  2550                           ;!   _config
  2551                           ;!     _display_init
  2552                           ;!       _spiWrite
  2553                           ;!     _init_adc
  2554                           ;!     _init_remote
  2555                           ;!   _update_input
  2556                           ;!     _display_write_end
  2557                           ;!     _display_write_start
  2558                           ;!     _write_int
  2559                           ;!       _sprintf
  2560                           ;!         ___lwdiv
  2561                           ;!         ___lwmod
  2562                           ;!           ___lwdiv (ARG)
  2563                           ;!       _write_char
  2564                           ;!         _write_font
  2565                           ;!           ___wmul
  2566                           ;!           _spiWrite
  2567                           ;!       _write_text
  2568                           ;!         _write_char
  2569                           ;!           _write_font
  2570                           ;!             ___wmul
  2571                           ;!             _spiWrite
  2572                           ;!     _write_space
  2573                           ;!       _spiWrite
  2574                           ;!     _write_text
  2575                           ;!       _write_char
  2576                           ;!         _write_font
  2577                           ;!           ___wmul
  2578                           ;!           _spiWrite
  2579                           ;!   _update_volume
  2580                           ;!     _display_write_end
  2581                           ;!     _display_write_start
  2582                           ;!     _write_int
  2583                           ;!       _sprintf
  2584                           ;!         ___lwdiv
  2585                           ;!         ___lwmod
  2586                           ;!           ___lwdiv (ARG)
  2587                           ;!       _write_char
  2588                           ;!         _write_font
  2589                           ;!           ___wmul
  2590                           ;!           _spiWrite
  2591                           ;!       _write_text
  2592                           ;!         _write_char
  2593                           ;!           _write_font
  2594                           ;!             ___wmul
  2595                           ;!             _spiWrite
  2596                           ;!     _write_space
  2597                           ;!       _spiWrite
  2598                           ;!     _write_text
  2599                           ;!       _write_char
  2600                           ;!         _write_font
  2601                           ;!           ___wmul
  2602                           ;!           _spiWrite
  2603                           ;!
  2604                           ;! _isr (ROOT)
  2605                           ;!   _handle_potmeter
  2606                           ;!     _is_deadzone
  2607                           ;!       ___fladd
  2608                           ;!         ___xxtofl (ARG)
  2609                           ;!       ___fltol
  2610                           ;!         ___fladd (ARG)
  2611                           ;!           ___xxtofl (ARG)
  2612                           ;!         ___xxtofl (ARG)
  2613                           ;!       ___xxtofl
  2614                           ;!       i1___wmul
  2615                           ;!     i1___lwdiv
  2616                           ;!   _handle_rotary
  2617                           ;!   _start_receive
  2618                           ;!     _handle_remote
  2619                           ;!
  2620                           
  2621                           ;! Address spaces:
  2622                           
  2623                           ;!Name               Size   Autos  Total    Cost      Usage
  2624                           ;!BITCOMMON            E      0       0       0        0.0%
  2625                           ;!EEDATA             100      0       0       0        0.0%
  2626                           ;!NULL                 0      0       0       0        0.0%
  2627                           ;!CODE                 0      0       0       0        0.0%
  2628                           ;!COMMON               E      E       E       1      100.0%
  2629                           ;!BITSFR0              0      0       0       1        0.0%
  2630                           ;!SFR0                 0      0       0       1        0.0%
  2631                           ;!BITSFR1              0      0       0       2        0.0%
  2632                           ;!SFR1                 0      0       0       2        0.0%
  2633                           ;!STACK                0      0       0       2        0.0%
  2634                           ;!ABS                  0      0      81       3        0.0%
  2635                           ;!BITBANK0            50      0       0       4        0.0%
  2636                           ;!BITSFR3              0      0       0       4        0.0%
  2637                           ;!SFR3                 0      0       0       4        0.0%
  2638                           ;!BANK0               50     3A      45       5       86.3%
  2639                           ;!BITSFR2              0      0       0       5        0.0%
  2640                           ;!SFR2                 0      0       0       5        0.0%
  2641                           ;!BITBANK1            50      0       0       6        0.0%
  2642                           ;!BANK1               50     25      2E       7       57.5%
  2643                           ;!BITBANK3            60      0       0       8        0.0%
  2644                           ;!BANK3               60      0       0       9        0.0%
  2645                           ;!BITBANK2            60      0       0      10        0.0%
  2646                           ;!BANK2               60      0       0      11        0.0%
  2647                           ;!DATA                 0      0      81      12        0.0%
  2648                           
  2649                           	global	_main
  2650                           
  2651 ;; *************** function _main *****************
  2652 ;; Defined at:
  2653 ;;		line 28 in file "main.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : B00/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2667 ;;      Params:         0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0
  2669 ;;      Temps:          0       0       2       0       0
  2670 ;;      Totals:         0       0       2       0       0
  2671 ;;Total ram usage:        2 bytes
  2672 ;; Hardware stack levels required when called:   10
  2673 ;; This function calls:
  2674 ;;		_activateSelectedRelay
  2675 ;;		_config
  2676 ;;		_update_input
  2677 ;;		_update_volume
  2678 ;; This function is called by:
  2679 ;;		Startup code after reset
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2683                           	file	"main.c"
  2684                           	line	28
  2685                           global __pmaintext
  2686                           __pmaintext:	;psect for function _main
  2687  0000'                    psect	maintext
  2688                           	file	"main.c"
  2689                           	line	28
  2690                           	global	__size_of_main
  2691                           	__size_of_main	equ	__end_of_main-_main
  2692  002C                     	
  2693                           _main:	
  2694  0000'                    ;incstack = 0
  2695 ;; hardware stack exceeded
  2696                           	opt	stack 0
  2697                           ; Regs used in _main: [allreg]
  2698                           	line	30
  2699                           	
  2700                           l2750:	
  2701  0000'                    ;main.c: 30:     config();
  2702                           	fcall	_config
  2703  0000' 120A' 118A' 2000' 120A' 118A' 	goto	l2752
  2704  0005' 2800'              	line	32
  2705                           ;main.c: 32:     while(1)
  2706                           	
  2707                           l53:	
  2708  0006'                    	line	34
  2709                           	
  2710                           l2752:	
  2711  0006'                    ;main.c: 33:     {;main.c: 34:         if (!ADCON0bits.GO)
  2712                           	bcf	status, 5	;RP0=0, select bank0
  2713  0006' 1283               	bcf	status, 6	;RP1=0, select bank0
  2714  0007' 1303               	btfsc	(31),1	;volatile
  2715  0008' 189F               	goto	u2911
  2716  0009' 2800'              	goto	u2910
  2717  000A' 2800'              u2911:
  2718  000B'                    	goto	l2756
  2719  000B' 2800'              u2910:
  2720  000C'                    	line	35
  2721                           	
  2722                           l2754:	
  2723  000C'                    ;main.c: 35:             ADCON0bits.GO = 1;
  2724                           	bsf	(31),1	;volatile
  2725  000C' 149F               	goto	l2756
  2726  000D' 2800'              	
  2727                           l54:	
  2728  000E'                    	line	37
  2729                           	
  2730                           l2756:	
  2731  000E'                    ;main.c: 37:         update_volume();
  2732                           	fcall	_update_volume
  2733  000E' 120A' 118A' 2000' 120A' 118A' 	line	38
  2734                           ;main.c: 38:         update_input();
  2735                           	fcall	_update_input
  2736  0013' 120A' 118A' 2000' 120A' 118A' 	line	39
  2737                           	
  2738                           l2758:	
  2739  0018'                    ;main.c: 39:         activateSelectedRelay();
  2740                           	fcall	_activateSelectedRelay
  2741  0018' 120A' 118A' 2000' 120A' 118A' 	line	41
  2742                           	
  2743                           l2760:	
  2744  001D'                    ;main.c: 41:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2745                           	opt asmopt_push
  2746                           opt asmopt_off
  2747                           movlw	13
  2748  001D' 300D               	bsf	status, 5	;RP0=1, select bank1
  2749  001E' 1683               	bcf	status, 6	;RP1=0, select bank1
  2750  001F' 1303               movwf	((??_main+0)^080h+0+1),f
  2751  0020' 0081'              	movlw	251
  2752  0021' 30FB               movwf	((??_main+0)^080h+0),f
  2753  0022' 0080'              	u2957:
  2754  0023'                    decfsz	((??_main+0)^080h+0),f
  2755  0023' 0B80'              	goto	u2957
  2756  0024' 2800'              	decfsz	((??_main+0)^080h+0+1),f
  2757  0025' 0B81'              	goto	u2957
  2758  0026' 2800'              opt asmopt_pop
  2759                           
  2760                           	goto	l2752
  2761  0027' 2800'              	line	42
  2762                           ;main.c: 42:     }
  2763                           	
  2764                           l55:	
  2765  0028'                    	goto	l2752
  2766  0028' 2800'              	
  2767                           l56:	
  2768  0029'                    	line	44
  2769                           	
  2770                           l57:	
  2771  0029'                    	global	start
  2772                           	ljmp	start
  2773  0029' 120A' 118A' 2800'  	opt stack 0
  2774                           GLOBAL	__end_of_main
  2775                           	__end_of_main:
  2776  002C'                    	signat	_main,89
  2777                           	global	_update_volume
  2778                           
  2779 ;; *************** function _update_volume *****************
  2780 ;; Defined at:
  2781 ;;		line 83 in file "Display.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;		None
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  spaces          2   33[BANK1 ] int 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      void 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2795 ;;      Params:         0       0       0       0       0
  2796 ;;      Locals:         0       0       2       0       0
  2797 ;;      Temps:          0       0       0       0       0
  2798 ;;      Totals:         0       0       2       0       0
  2799 ;;Total ram usage:        2 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    9
  2802 ;; This function calls:
  2803 ;;		_display_write_end
  2804 ;;		_display_write_start
  2805 ;;		_write_int
  2806 ;;		_write_space
  2807 ;;		_write_text
  2808 ;; This function is called by:
  2809 ;;		_main
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2813                           	file	"Display.c"
  2814                           	line	83
  2815                           global __ptext1
  2816                           __ptext1:	;psect for function _update_volume
  2817  0000'                    psect	text1
  2818                           	file	"Display.c"
  2819                           	line	83
  2820                           	global	__size_of_update_volume
  2821                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2822  005B                     	
  2823                           _update_volume:	
  2824  0000'                    ;incstack = 0
  2825 ;; hardware stack exceeded
  2826                           	opt	stack 0
  2827                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2828                           	line	85
  2829                           	
  2830                           l2624:	
  2831  0000'                    ;Display.c: 85:     if (lastVolume == volume) return;
  2832                           	bsf	status, 5	;RP0=1, select bank1
  2833  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  2834  0001' 1303               	movf	(_volume+1)^080h,w
  2835  0002' 0800'              	xorwf	(_lastVolume+1)^080h,w
  2836  0003' 0600'              	skipz
  2837  0004' 1D03               	goto	u2725
  2838  0005' 2800'              	movf	(_volume)^080h,w
  2839  0006' 0800'              	xorwf	(_lastVolume)^080h,w
  2840  0007' 0600'              u2725:
  2841  0008'                    
  2842                           	skipz
  2843  0008' 1D03               	goto	u2721
  2844  0009' 2800'              	goto	u2720
  2845  000A' 2800'              u2721:
  2846  000B'                    	goto	l2628
  2847  000B' 2800'              u2720:
  2848  000C'                    	goto	l128
  2849  000C' 2800'              	
  2850                           l2626:	
  2851  000D'                    	goto	l128
  2852  000D' 2800'              	
  2853                           l127:	
  2854  000E'                    	line	87
  2855                           	
  2856                           l2628:	
  2857  000E'                    ;Display.c: 87:     _selectedDisplay = 0;
  2858                           	clrf	(__selectedDisplay)^080h
  2859  000E' 0180'              	line	88
  2860                           	
  2861                           l2630:	
  2862  000F'                    ;Display.c: 88:     display_write_start();
  2863                           	fcall	_display_write_start
  2864  000F' 120A' 118A' 2000' 120A' 118A' 	line	90
  2865                           	
  2866                           l2632:	
  2867  0014'                    ;Display.c: 90:     write_text("VOL");
  2868                           	movlw	low(((STR_2)|8000h))
  2869  0014' 3000'              	bsf	status, 5	;RP0=1, select bank1
  2870  0015' 1683               	bcf	status, 6	;RP1=0, select bank1
  2871  0016' 1303               	movwf	(write_text@text)^080h
  2872  0017' 0080'              	movlw	high(((STR_2)|8000h))
  2873  0018' 3000'              	movwf	((write_text@text)^080h)+1
  2874  0019' 0081'              	fcall	_write_text
  2875  001A' 120A' 118A' 2000' 120A' 118A' 	line	93
  2876                           	
  2877                           l2634:	
  2878  001F'                    ;Display.c: 93:     int spaces = 3;
  2879                           	movlw	03h
  2880  001F' 3003               	bsf	status, 5	;RP0=1, select bank1
  2881  0020' 1683               	bcf	status, 6	;RP1=0, select bank1
  2882  0021' 1303               	movwf	(update_volume@spaces)^080h
  2883  0022' 0080'              	movlw	0
  2884  0023' 3000               	movwf	((update_volume@spaces)^080h)+1
  2885  0024' 0081'              	line	94
  2886                           	
  2887                           l2636:	
  2888  0025'                    ;Display.c: 94:     if (volume < 10)
  2889                           	movf	(_volume+1)^080h,w
  2890  0025' 0800'              	xorlw	80h
  2891  0026' 3A80               	movwf	btemp+1
  2892  0027' 00FF               	movlw	(0)^80h
  2893  0028' 3080               	subwf	btemp+1,w
  2894  0029' 027F               	skipz
  2895  002A' 1D03               	goto	u2735
  2896  002B' 2800'              	movlw	0Ah
  2897  002C' 300A               	subwf	(_volume)^080h,w
  2898  002D' 0200'              u2735:
  2899  002E'                    
  2900                           	skipnc
  2901  002E' 1803               	goto	u2731
  2902  002F' 2800'              	goto	u2730
  2903  0030' 2800'              u2731:
  2904  0031'                    	goto	l2640
  2905  0031' 2800'              u2730:
  2906  0032'                    	line	95
  2907                           	
  2908                           l2638:	
  2909  0032'                    ;Display.c: 95:         spaces = 4;
  2910                           	movlw	04h
  2911  0032' 3004               	bsf	status, 5	;RP0=1, select bank1
  2912  0033' 1683               	bcf	status, 6	;RP1=0, select bank1
  2913  0034' 1303               	movwf	(update_volume@spaces)^080h
  2914  0035' 0080'              	movlw	0
  2915  0036' 3000               	movwf	((update_volume@spaces)^080h)+1
  2916  0037' 0081'              	goto	l2640
  2917  0038' 2800'              	
  2918                           l129:	
  2919  0039'                    	line	98
  2920                           	
  2921                           l2640:	
  2922  0039'                    ;Display.c: 98:     write_space(spaces);
  2923                           	bsf	status, 5	;RP0=1, select bank1
  2924  0039' 1683               	bcf	status, 6	;RP1=0, select bank1
  2925  003A' 1303               	movf	(update_volume@spaces+1)^080h,w
  2926  003B' 0800'              	movwf	(write_space@count+1)^080h
  2927  003C' 0080'              	movf	(update_volume@spaces)^080h,w
  2928  003D' 0800'              	movwf	(write_space@count)^080h
  2929  003E' 0080'              	fcall	_write_space
  2930  003F' 120A' 118A' 2000' 120A' 118A' 	line	100
  2931                           	
  2932                           l2642:	
  2933  0044'                    ;Display.c: 100:     write_int(volume);
  2934                           	bsf	status, 5	;RP0=1, select bank1
  2935  0044' 1683               	bcf	status, 6	;RP1=0, select bank1
  2936  0045' 1303               	movf	(_volume+1)^080h,w
  2937  0046' 0800'              	movwf	(write_int@number+1)^080h
  2938  0047' 0080'              	movf	(_volume)^080h,w
  2939  0048' 0800'              	movwf	(write_int@number)^080h
  2940  0049' 0080'              	fcall	_write_int
  2941  004A' 120A' 118A' 2000' 120A' 118A' 	line	101
  2942                           	
  2943                           l2644:	
  2944  004F'                    ;Display.c: 101:     display_write_end();
  2945                           	fcall	_display_write_end
  2946  004F' 120A' 118A' 2000' 120A' 118A' 	line	103
  2947                           	
  2948                           l2646:	
  2949  0054'                    ;Display.c: 103:     lastVolume = volume;
  2950                           	bsf	status, 5	;RP0=1, select bank1
  2951  0054' 1683               	bcf	status, 6	;RP1=0, select bank1
  2952  0055' 1303               	movf	(_volume+1)^080h,w
  2953  0056' 0800'              	movwf	(_lastVolume+1)^080h
  2954  0057' 0080'              	movf	(_volume)^080h,w
  2955  0058' 0800'              	movwf	(_lastVolume)^080h
  2956  0059' 0080'              	line	105
  2957                           	
  2958                           l128:	
  2959  005A'                    	return
  2960  005A' 0008               	opt stack 0
  2961                           GLOBAL	__end_of_update_volume
  2962                           	__end_of_update_volume:
  2963  005B'                    	signat	_update_volume,89
  2964                           	global	_update_input
  2965                           
  2966 ;; *************** function _update_input *****************
  2967 ;; Defined at:
  2968 ;;		line 65 in file "Display.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    9
  2989 ;; This function calls:
  2990 ;;		_display_write_end
  2991 ;;		_display_write_start
  2992 ;;		_write_int
  2993 ;;		_write_space
  2994 ;;		_write_text
  2995 ;; This function is called by:
  2996 ;;		_main
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3000                           	line	65
  3001                           global __ptext2
  3002                           __ptext2:	;psect for function _update_input
  3003  0000'                    psect	text2
  3004                           	file	"Display.c"
  3005                           	line	65
  3006                           	global	__size_of_update_input
  3007                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  3008  0046                     	
  3009                           _update_input:	
  3010  0000'                    ;incstack = 0
  3011 ;; hardware stack exceeded
  3012                           	opt	stack 0
  3013                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3014                           	line	67
  3015                           	
  3016                           l2648:	
  3017  0000'                    ;Display.c: 67:     if (lastInput == _selectedInput) return;
  3018                           	bsf	status, 5	;RP0=1, select bank1
  3019  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  3020  0001' 1303               	movf	(__selectedInput+1)^080h,w
  3021  0002' 0800'              	xorwf	(_lastInput+1)^080h,w
  3022  0003' 0600'              	skipz
  3023  0004' 1D03               	goto	u2745
  3024  0005' 2800'              	movf	(__selectedInput)^080h,w
  3025  0006' 0800'              	xorwf	(_lastInput)^080h,w
  3026  0007' 0600'              u2745:
  3027  0008'                    
  3028                           	skipz
  3029  0008' 1D03               	goto	u2741
  3030  0009' 2800'              	goto	u2740
  3031  000A' 2800'              u2741:
  3032  000B'                    	goto	l123
  3033  000B' 2800'              u2740:
  3034  000C'                    	goto	l124
  3035  000C' 2800'              	
  3036                           l2650:	
  3037  000D'                    	goto	l124
  3038  000D' 2800'              	
  3039                           l123:	
  3040  000E'                    	line	69
  3041                           ;Display.c: 69:     _selectedDisplay = 1;
  3042                           	clrf	(__selectedDisplay)^080h
  3043  000E' 0180'              	incf	(__selectedDisplay)^080h,f
  3044  000F' 0A80'              	line	70
  3045                           	
  3046                           l2652:	
  3047  0010'                    ;Display.c: 70:     display_write_start();
  3048                           	fcall	_display_write_start
  3049  0010' 120A' 118A' 2000' 120A' 118A' 	line	72
  3050                           	
  3051                           l2654:	
  3052  0015'                    ;Display.c: 72:     write_text("INPUT");
  3053                           	movlw	low(((STR_1)|8000h))
  3054  0015' 3000'              	bsf	status, 5	;RP0=1, select bank1
  3055  0016' 1683               	bcf	status, 6	;RP1=0, select bank1
  3056  0017' 1303               	movwf	(write_text@text)^080h
  3057  0018' 0080'              	movlw	high(((STR_1)|8000h))
  3058  0019' 3000'              	movwf	((write_text@text)^080h)+1
  3059  001A' 0081'              	fcall	_write_text
  3060  001B' 120A' 118A' 2000' 120A' 118A' 	line	74
  3061                           	
  3062                           l2656:	
  3063  0020'                    ;Display.c: 74:     write_space(2);
  3064                           	movlw	02h
  3065  0020' 3002               	bsf	status, 5	;RP0=1, select bank1
  3066  0021' 1683               	bcf	status, 6	;RP1=0, select bank1
  3067  0022' 1303               	movwf	(write_space@count)^080h
  3068  0023' 0080'              	movlw	0
  3069  0024' 3000               	movwf	((write_space@count)^080h)+1
  3070  0025' 0081'              	fcall	_write_space
  3071  0026' 120A' 118A' 2000' 120A' 118A' 	line	76
  3072                           	
  3073                           l2658:	
  3074  002B'                    ;Display.c: 76:     write_int(_selectedInput+1);
  3075                           	bsf	status, 5	;RP0=1, select bank1
  3076  002B' 1683               	bcf	status, 6	;RP1=0, select bank1
  3077  002C' 1303               	movf	(__selectedInput)^080h,w
  3078  002D' 0800'              	addlw	low(01h)
  3079  002E' 3E01               	movwf	(write_int@number)^080h
  3080  002F' 0080'              	movf	(__selectedInput+1)^080h,w
  3081  0030' 0800'              	skipnc
  3082  0031' 1803               	addlw	1
  3083  0032' 3E01               	addlw	high(01h)
  3084  0033' 3E00               	movwf	1+(write_int@number)^080h
  3085  0034' 0080'              	fcall	_write_int
  3086  0035' 120A' 118A' 2000' 120A' 118A' 	line	77
  3087                           	
  3088                           l2660:	
  3089  003A'                    ;Display.c: 77:     display_write_end();
  3090                           	fcall	_display_write_end
  3091  003A' 120A' 118A' 2000' 120A' 118A' 	line	79
  3092                           	
  3093                           l2662:	
  3094  003F'                    ;Display.c: 79:     lastInput = _selectedInput;
  3095                           	bsf	status, 5	;RP0=1, select bank1
  3096  003F' 1683               	bcf	status, 6	;RP1=0, select bank1
  3097  0040' 1303               	movf	(__selectedInput+1)^080h,w
  3098  0041' 0800'              	movwf	(_lastInput+1)^080h
  3099  0042' 0080'              	movf	(__selectedInput)^080h,w
  3100  0043' 0800'              	movwf	(_lastInput)^080h
  3101  0044' 0080'              	line	81
  3102                           	
  3103                           l124:	
  3104  0045'                    	return
  3105  0045' 0008               	opt stack 0
  3106                           GLOBAL	__end_of_update_input
  3107                           	__end_of_update_input:
  3108  0046'                    	signat	_update_input,89
  3109                           	global	_write_space
  3110                           
  3111 ;; *************** function _write_space *****************
  3112 ;; Defined at:
  3113 ;;		line 107 in file "Display.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  count           2    1[BANK1 ] int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  x               2    6[BANK1 ] int 
  3118 ;;  i               2    4[BANK1 ] int 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3128 ;;      Params:         0       0       2       0       0
  3129 ;;      Locals:         0       0       4       0       0
  3130 ;;      Temps:          0       0       1       0       0
  3131 ;;      Totals:         0       0       7       0       0
  3132 ;;Total ram usage:        7 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    5
  3135 ;; This function calls:
  3136 ;;		_spiWrite
  3137 ;; This function is called by:
  3138 ;;		_update_input
  3139 ;;		_update_volume
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3143                           	line	107
  3144                           global __ptext3
  3145                           __ptext3:	;psect for function _write_space
  3146  0000'                    psect	text3
  3147                           	file	"Display.c"
  3148                           	line	107
  3149                           	global	__size_of_write_space
  3150                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  3151  004C                     	
  3152                           _write_space:	
  3153  0000'                    ;incstack = 0
  3154                           	opt	stack 1
  3155                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3156                           	line	109
  3157                           	
  3158                           l2428:	
  3159  0000'                    ;Display.c: 107: void write_space(int count);Display.c: 108: {;Display.c: 109:     for (
                                 int i = 0; i < count; i++) {
  3160                           	bsf	status, 5	;RP0=1, select bank1
  3161  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  3162  0001' 1303               	clrf	(write_space@i)^080h
  3163  0002' 0180'              	clrf	(write_space@i+1)^080h
  3164  0003' 0180'              	goto	l132
  3165  0004' 2800'              	
  3166                           l133:	
  3167  0005'                    	line	111
  3168                           	
  3169                           l2430:	
  3170  0005'                    ;Display.c: 111:         for (int x = 0; x < 5; x++) {
  3171                           	bsf	status, 5	;RP0=1, select bank1
  3172  0005' 1683               	bcf	status, 6	;RP1=0, select bank1
  3173  0006' 1303               	clrf	(write_space@x)^080h
  3174  0007' 0180'              	clrf	(write_space@x+1)^080h
  3175  0008' 0180'              	
  3176                           l2432:	
  3177  0009'                    	movf	(write_space@x+1)^080h,w
  3178  0009' 0800'              	xorlw	80h
  3179  000A' 3A80               	movwf	btemp+1
  3180  000B' 00FF               	movlw	(0)^80h
  3181  000C' 3080               	subwf	btemp+1,w
  3182  000D' 027F               	skipz
  3183  000E' 1D03               	goto	u2585
  3184  000F' 2800'              	movlw	05h
  3185  0010' 3005               	subwf	(write_space@x)^080h,w
  3186  0011' 0200'              u2585:
  3187  0012'                    
  3188                           	skipc
  3189  0012' 1C03               	goto	u2581
  3190  0013' 2800'              	goto	u2580
  3191  0014' 2800'              u2581:
  3192  0015'                    	goto	l2436
  3193  0015' 2800'              u2580:
  3194  0016'                    	goto	l2442
  3195  0016' 2800'              	
  3196                           l2434:	
  3197  0017'                    	goto	l2442
  3198  0017' 2800'              	
  3199                           l134:	
  3200  0018'                    	line	113
  3201                           	
  3202                           l2436:	
  3203  0018'                    ;Display.c: 113:             spiWrite(0x00);
  3204                           	movlw	low(0)
  3205  0018' 3000               	fcall	_spiWrite
  3206  0019' 120A' 118A' 2000' 120A' 118A' 	line	115
  3207                           	
  3208                           l2438:	
  3209  001E'                    ;Display.c: 115:         }
  3210                           	movlw	01h
  3211  001E' 3001               	bsf	status, 5	;RP0=1, select bank1
  3212  001F' 1683               	bcf	status, 6	;RP1=0, select bank1
  3213  0020' 1303               	addwf	(write_space@x)^080h,f
  3214  0021' 0780'              	skipnc
  3215  0022' 1803               	incf	(write_space@x+1)^080h,f
  3216  0023' 0A80'              	movlw	0
  3217  0024' 3000               	addwf	(write_space@x+1)^080h,f
  3218  0025' 0780'              	
  3219                           l2440:	
  3220  0026'                    	movf	(write_space@x+1)^080h,w
  3221  0026' 0800'              	xorlw	80h
  3222  0027' 3A80               	movwf	btemp+1
  3223  0028' 00FF               	movlw	(0)^80h
  3224  0029' 3080               	subwf	btemp+1,w
  3225  002A' 027F               	skipz
  3226  002B' 1D03               	goto	u2595
  3227  002C' 2800'              	movlw	05h
  3228  002D' 3005               	subwf	(write_space@x)^080h,w
  3229  002E' 0200'              u2595:
  3230  002F'                    
  3231                           	skipc
  3232  002F' 1C03               	goto	u2591
  3233  0030' 2800'              	goto	u2590
  3234  0031' 2800'              u2591:
  3235  0032'                    	goto	l2436
  3236  0032' 2800'              u2590:
  3237  0033'                    	goto	l2442
  3238  0033' 2800'              	
  3239                           l135:	
  3240  0034'                    	line	116
  3241                           	
  3242                           l2442:	
  3243  0034'                    ;Display.c: 116:     }
  3244                           	movlw	01h
  3245  0034' 3001               	bsf	status, 5	;RP0=1, select bank1
  3246  0035' 1683               	bcf	status, 6	;RP1=0, select bank1
  3247  0036' 1303               	addwf	(write_space@i)^080h,f
  3248  0037' 0780'              	skipnc
  3249  0038' 1803               	incf	(write_space@i+1)^080h,f
  3250  0039' 0A80'              	movlw	0
  3251  003A' 3000               	addwf	(write_space@i+1)^080h,f
  3252  003B' 0780'              	
  3253                           l132:	
  3254  003C'                    	movf	(write_space@i+1)^080h,w
  3255  003C' 0800'              	xorlw	80h
  3256  003D' 3A80               	movwf	(??_write_space+0)^080h+0
  3257  003E' 0080'              	movf	(write_space@count+1)^080h,w
  3258  003F' 0800'              	xorlw	80h
  3259  0040' 3A80               	subwf	(??_write_space+0)^080h+0,w
  3260  0041' 0200'              	skipz
  3261  0042' 1D03               	goto	u2605
  3262  0043' 2800'              	movf	(write_space@count)^080h,w
  3263  0044' 0800'              	subwf	(write_space@i)^080h,w
  3264  0045' 0200'              u2605:
  3265  0046'                    
  3266                           	skipc
  3267  0046' 1C03               	goto	u2601
  3268  0047' 2800'              	goto	u2600
  3269  0048' 2800'              u2601:
  3270  0049'                    	goto	l2430
  3271  0049' 2800'              u2600:
  3272  004A'                    	goto	l137
  3273  004A' 2800'              	
  3274                           l136:	
  3275  004B'                    	line	117
  3276                           	
  3277                           l137:	
  3278  004B'                    	return
  3279  004B' 0008               	opt stack 0
  3280                           GLOBAL	__end_of_write_space
  3281                           	__end_of_write_space:
  3282  004C'                    	signat	_write_space,4217
  3283                           	global	_write_int
  3284                           
  3285 ;; *************** function _write_int *****************
  3286 ;; Defined at:
  3287 ;;		line 129 in file "Display.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  number          2   29[BANK1 ] int 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  num             2   31[BANK1 ] unsigned char [2]
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         0       0       2       0       0
  3302 ;;      Locals:         0       0       2       0       0
  3303 ;;      Temps:          0       0       0       0       0
  3304 ;;      Totals:         0       0       4       0       0
  3305 ;;Total ram usage:        4 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    8
  3308 ;; This function calls:
  3309 ;;		_sprintf
  3310 ;;		_write_char
  3311 ;;		_write_text
  3312 ;; This function is called by:
  3313 ;;		_update_input
  3314 ;;		_update_volume
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3318                           	line	129
  3319                           global __ptext4
  3320                           __ptext4:	;psect for function _write_int
  3321  0000'                    psect	text4
  3322                           	file	"Display.c"
  3323                           	line	129
  3324                           	global	__size_of_write_int
  3325                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  3326  0036                     	
  3327                           _write_int:	
  3328  0000'                    ;incstack = 0
  3329 ;; hardware stack exceeded
  3330                           	opt	stack 0
  3331                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3332                           	line	131
  3333                           	
  3334                           l2444:	
  3335  0000'                    ;Display.c: 129: void write_int(int number);Display.c: 130: {;Display.c: 131:     if (nu
                                 mber < 10) {
  3336                           	bsf	status, 5	;RP0=1, select bank1
  3337  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  3338  0001' 1303               	movf	(write_int@number+1)^080h,w
  3339  0002' 0800'              	xorlw	80h
  3340  0003' 3A80               	movwf	btemp+1
  3341  0004' 00FF               	movlw	(0)^80h
  3342  0005' 3080               	subwf	btemp+1,w
  3343  0006' 027F               	skipz
  3344  0007' 1D03               	goto	u2615
  3345  0008' 2800'              	movlw	0Ah
  3346  0009' 300A               	subwf	(write_int@number)^080h,w
  3347  000A' 0200'              u2615:
  3348  000B'                    
  3349                           	skipnc
  3350  000B' 1803               	goto	u2611
  3351  000C' 2800'              	goto	u2610
  3352  000D' 2800'              u2611:
  3353  000E'                    	goto	l2450
  3354  000E' 2800'              u2610:
  3355  000F'                    	line	132
  3356                           	
  3357                           l2446:	
  3358  000F'                    ;Display.c: 132:         write_char(number + 48);
  3359                           	bsf	status, 5	;RP0=1, select bank1
  3360  000F' 1683               	bcf	status, 6	;RP1=0, select bank1
  3361  0010' 1303               	movf	(write_int@number)^080h,w
  3362  0011' 0800'              	addlw	030h
  3363  0012' 3E30               	fcall	_write_char
  3364  0013' 120A' 118A' 2000' 120A' 118A' 	goto	l147
  3365  0018' 2800'              	line	133
  3366                           	
  3367                           l2448:	
  3368  0019'                    ;Display.c: 133:         return;
  3369                           	goto	l147
  3370  0019' 2800'              	line	134
  3371                           ;Display.c: 134:     }
  3372                           	
  3373                           l146:	
  3374  001A'                    	line	137
  3375                           	
  3376                           l2450:	
  3377  001A'                    ;Display.c: 136:     char num[2];;Display.c: 137:     sprintf(num, "%d", number);
  3378                           	movlw	low(((STR_3)|8000h))
  3379  001A' 3000'              	bsf	status, 5	;RP0=1, select bank1
  3380  001B' 1683               	bcf	status, 6	;RP1=0, select bank1
  3381  001C' 1303               	movwf	(sprintf@f)^080h
  3382  001D' 0080'              	movlw	high(((STR_3)|8000h))
  3383  001E' 3000'              	movwf	((sprintf@f)^080h)+1
  3384  001F' 0081'              	movf	(write_int@number+1)^080h,w
  3385  0020' 0800'              	movwf	1+(?_sprintf)^080h+02h
  3386  0021' 0082'              	movf	(write_int@number)^080h,w
  3387  0022' 0800'              	movwf	0+(?_sprintf)^080h+02h
  3388  0023' 0082'              	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  3389  0024' 3000'              	fcall	_sprintf
  3390  0025' 120A' 118A' 2000' 120A' 118A' 	line	139
  3391                           ;Display.c: 139:     write_text(num);
  3392                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  3393  002A' 3000'              	bsf	status, 5	;RP0=1, select bank1
  3394  002B' 1683               	bcf	status, 6	;RP1=0, select bank1
  3395  002C' 1303               	movwf	(write_text@text)^080h
  3396  002D' 0080'              	movlw	(0x0)
  3397  002E' 3000               	movwf	(write_text@text+1)^080h
  3398  002F' 0080'              	fcall	_write_text
  3399  0030' 120A' 118A' 2000' 120A' 118A' 	line	140
  3400                           	
  3401                           l147:	
  3402  0035'                    	return
  3403  0035' 0008               	opt stack 0
  3404                           GLOBAL	__end_of_write_int
  3405                           	__end_of_write_int:
  3406  0036'                    	signat	_write_int,4217
  3407                           	global	_write_text
  3408                           
  3409 ;; *************** function _write_text *****************
  3410 ;; Defined at:
  3411 ;;		line 119 in file "Display.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  text            2   19[BANK1 ] PTR unsigned char 
  3414 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  c               2   21[BANK1 ] PTR unsigned char 
  3417 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3427 ;;      Params:         0       0       2       0       0
  3428 ;;      Locals:         0       0       2       0       0
  3429 ;;      Temps:          0       0       0       0       0
  3430 ;;      Totals:         0       0       4       0       0
  3431 ;;Total ram usage:        4 bytes
  3432 ;; Hardware stack levels used:    1
  3433 ;; Hardware stack levels required when called:    7
  3434 ;; This function calls:
  3435 ;;		_write_char
  3436 ;; This function is called by:
  3437 ;;		_update_input
  3438 ;;		_update_volume
  3439 ;;		_write_int
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3443                           	line	119
  3444                           global __ptext5
  3445                           __ptext5:	;psect for function _write_text
  3446  0000'                    psect	text5
  3447                           	file	"Display.c"
  3448                           	line	119
  3449                           	global	__size_of_write_text
  3450                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  3451  003A                     	
  3452                           _write_text:	
  3453  0000'                    ;incstack = 0
  3454 ;; hardware stack exceeded
  3455                           	opt	stack 0
  3456                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3457                           	line	123
  3458                           	
  3459                           l2002:	
  3460  0000'                    ;Display.c: 119: void write_text(char* text);Display.c: 120: {;Display.c: 121:     char*
                                  c;;Display.c: 123:     for (c = text; *c != '\0'; c++) {
  3461                           	bsf	status, 5	;RP0=1, select bank1
  3462  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  3463  0001' 1303               		movf	(write_text@text)^080h,w
  3464  0002' 0800'              	movwf	(write_text@c)^080h
  3465  0003' 0080'              movf	(write_text@text+1)^080h,w
  3466  0004' 0800'              movwf	(write_text@c+1)^080h
  3467  0005' 0080'              
  3468                           	goto	l2008
  3469  0006' 2800'              	
  3470                           l141:	
  3471  0007'                    	line	124
  3472                           	
  3473                           l2004:	
  3474  0007'                    ;Display.c: 124:         write_char(*c);
  3475                           	bsf	status, 5	;RP0=1, select bank1
  3476  0007' 1683               	bcf	status, 6	;RP1=0, select bank1
  3477  0008' 1303               	movf	(write_text@c+1)^080h,w
  3478  0009' 0800'              	bcf	status, 5	;RP0=0, select bank0
  3479  000A' 1283               	bcf	status, 6	;RP1=0, select bank0
  3480  000B' 1303               	movwf	btemp+1
  3481  000C' 00FF               	bsf	status, 5	;RP0=1, select bank1
  3482  000D' 1683               	bcf	status, 6	;RP1=0, select bank1
  3483  000E' 1303               	movf	(write_text@c)^080h,w
  3484  000F' 0800'              	movwf	fsr0
  3485  0010' 0084               	bcf	status, 5	;RP0=0, select bank0
  3486  0011' 1283               	bcf	status, 6	;RP1=0, select bank0
  3487  0012' 1303               	fcall	stringtab
  3488  0013' 120A' 118A' 2000' 120A' 118A' 	fcall	_write_char
  3489  0018' 120A' 118A' 2000' 120A' 118A' 	line	125
  3490                           	
  3491                           l2006:	
  3492  001D'                    ;Display.c: 125:     }
  3493                           	movlw	01h
  3494  001D' 3001               	bsf	status, 5	;RP0=1, select bank1
  3495  001E' 1683               	bcf	status, 6	;RP1=0, select bank1
  3496  001F' 1303               	addwf	(write_text@c)^080h,f
  3497  0020' 0780'              	skipnc
  3498  0021' 1803               	incf	(write_text@c+1)^080h,f
  3499  0022' 0A80'              	goto	l2008
  3500  0023' 2800'              	
  3501                           l140:	
  3502  0024'                    	
  3503                           l2008:	
  3504  0024'                    	movf	(write_text@c+1)^080h,w
  3505  0024' 0800'              	bcf	status, 5	;RP0=0, select bank0
  3506  0025' 1283               	bcf	status, 6	;RP1=0, select bank0
  3507  0026' 1303               	movwf	btemp+1
  3508  0027' 00FF               	bsf	status, 5	;RP0=1, select bank1
  3509  0028' 1683               	bcf	status, 6	;RP1=0, select bank1
  3510  0029' 1303               	movf	(write_text@c)^080h,w
  3511  002A' 0800'              	movwf	fsr0
  3512  002B' 0084               	bcf	status, 5	;RP0=0, select bank0
  3513  002C' 1283               	bcf	status, 6	;RP1=0, select bank0
  3514  002D' 1303               	fcall	stringtab
  3515  002E' 120A' 118A' 2000' 120A' 118A' 	xorlw	0
  3516  0033' 3A00               	skipz
  3517  0034' 1D03               	goto	u1741
  3518  0035' 2800'              	goto	u1740
  3519  0036' 2800'              u1741:
  3520  0037'                    	goto	l2004
  3521  0037' 2800'              u1740:
  3522  0038'                    	goto	l143
  3523  0038' 2800'              	
  3524                           l142:	
  3525  0039'                    	line	127
  3526                           	
  3527                           l143:	
  3528  0039'                    	return
  3529  0039' 0008               	opt stack 0
  3530                           GLOBAL	__end_of_write_text
  3531                           	__end_of_write_text:
  3532  003A'                    	signat	_write_text,4217
  3533                           	global	_write_char
  3534                           
  3535 ;; *************** function _write_char *****************
  3536 ;; Defined at:
  3537 ;;		line 142 in file "Display.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  c               1    wreg     unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  c               1   18[BANK1 ] unsigned char 
  3542 ;;  pos             2   16[BANK1 ] int 
  3543 ;; Return value:  Size  Location     Type
  3544 ;;                  1    wreg      void 
  3545 ;; Registers used:
  3546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3547 ;; Tracked objects:
  3548 ;;		On entry : 0/0
  3549 ;;		On exit  : 0/0
  3550 ;;		Unchanged: 0/0
  3551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3552 ;;      Params:         0       0       0       0       0
  3553 ;;      Locals:         0       0       3       0       0
  3554 ;;      Temps:          0       0       0       0       0
  3555 ;;      Totals:         0       0       3       0       0
  3556 ;;Total ram usage:        3 bytes
  3557 ;; Hardware stack levels used:    1
  3558 ;; Hardware stack levels required when called:    6
  3559 ;; This function calls:
  3560 ;;		_write_font
  3561 ;; This function is called by:
  3562 ;;		_write_text
  3563 ;;		_write_int
  3564 ;; This function uses a non-reentrant model
  3565 ;;
  3566                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3567                           	line	142
  3568                           global __ptext6
  3569                           __ptext6:	;psect for function _write_char
  3570  0000'                    psect	text6
  3571                           	file	"Display.c"
  3572                           	line	142
  3573                           	global	__size_of_write_char
  3574                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  3575  0062                     	
  3576                           _write_char:	
  3577  0000'                    ;incstack = 0
  3578 ;; hardware stack exceeded
  3579                           	opt	stack 0
  3580                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3581                           ;write_char@c stored from wreg
  3582                           	bsf	status, 5	;RP0=1, select bank1
  3583  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  3584  0001' 1303               	movwf	(write_char@c)^080h
  3585  0002' 0080'              	line	147
  3586                           	
  3587                           l1930:	
  3588  0003'                    ;Display.c: 142: void write_char(char c);Display.c: 143: {;Display.c: 144:     int pos;;
                                 Display.c: 147:     if (c >= 48 && c <= 57) {
  3589                           	movlw	low(030h)
  3590  0003' 3030               	subwf	(write_char@c)^080h,w
  3591  0004' 0200'              	skipc
  3592  0005' 1C03               	goto	u1551
  3593  0006' 2800'              	goto	u1550
  3594  0007' 2800'              u1551:
  3595  0008'                    	goto	l1938
  3596  0008' 2800'              u1550:
  3597  0009'                    	
  3598                           l1932:	
  3599  0009'                    	movlw	low(03Ah)
  3600  0009' 303A               	subwf	(write_char@c)^080h,w
  3601  000A' 0200'              	skipnc
  3602  000B' 1803               	goto	u1561
  3603  000C' 2800'              	goto	u1560
  3604  000D' 2800'              u1561:
  3605  000E'                    	goto	l1938
  3606  000E' 2800'              u1560:
  3607  000F'                    	line	148
  3608                           	
  3609                           l1934:	
  3610  000F'                    ;Display.c: 148:         pos = c - 48;
  3611                           	movf	(write_char@c)^080h,w
  3612  000F' 0800'              	addlw	low(-48)
  3613  0010' 3ED0               	movwf	(write_char@pos)^080h
  3614  0011' 0080'              	movlw	high(-48)
  3615  0012' 30FF               	skipnc
  3616  0013' 1803               	movlw	(high(-48)+1)&0ffh
  3617  0014' 3000               	movwf	((write_char@pos)^080h)+1
  3618  0015' 0081'              	line	149
  3619                           	
  3620                           l1936:	
  3621  0016'                    ;Display.c: 149:         write_font(pos);
  3622                           	movf	(write_char@pos+1)^080h,w
  3623  0016' 0800'              	movwf	(write_font@fontPos+1)^080h
  3624  0017' 0080'              	movf	(write_char@pos)^080h,w
  3625  0018' 0800'              	movwf	(write_font@fontPos)^080h
  3626  0019' 0080'              	fcall	_write_font
  3627  001A' 120A' 118A' 2000' 120A' 118A' 	line	150
  3628                           ;Display.c: 150:     } else if (c >= 65 && c <= 90) {
  3629                           	goto	l156
  3630  001F' 2800'              	
  3631                           l150:	
  3632  0020'                    	
  3633                           l1938:	
  3634  0020'                    	movlw	low(041h)
  3635  0020' 3041               	bsf	status, 5	;RP0=1, select bank1
  3636  0021' 1683               	bcf	status, 6	;RP1=0, select bank1
  3637  0022' 1303               	subwf	(write_char@c)^080h,w
  3638  0023' 0200'              	skipc
  3639  0024' 1C03               	goto	u1571
  3640  0025' 2800'              	goto	u1570
  3641  0026' 2800'              u1571:
  3642  0027'                    	goto	l1946
  3643  0027' 2800'              u1570:
  3644  0028'                    	
  3645                           l1940:	
  3646  0028'                    	movlw	low(05Bh)
  3647  0028' 305B               	subwf	(write_char@c)^080h,w
  3648  0029' 0200'              	skipnc
  3649  002A' 1803               	goto	u1581
  3650  002B' 2800'              	goto	u1580
  3651  002C' 2800'              u1581:
  3652  002D'                    	goto	l1946
  3653  002D' 2800'              u1580:
  3654  002E'                    	line	151
  3655                           	
  3656                           l1942:	
  3657  002E'                    ;Display.c: 151:         pos = (c - 65) + 10;
  3658                           	movf	(write_char@c)^080h,w
  3659  002E' 0800'              	addlw	low(-55)
  3660  002F' 3EC9               	movwf	(write_char@pos)^080h
  3661  0030' 0080'              	movlw	high(-55)
  3662  0031' 30FF               	skipnc
  3663  0032' 1803               	movlw	(high(-55)+1)&0ffh
  3664  0033' 3000               	movwf	((write_char@pos)^080h)+1
  3665  0034' 0081'              	line	152
  3666                           	
  3667                           l1944:	
  3668  0035'                    ;Display.c: 152:         write_font(pos);
  3669                           	movf	(write_char@pos+1)^080h,w
  3670  0035' 0800'              	movwf	(write_font@fontPos+1)^080h
  3671  0036' 0080'              	movf	(write_char@pos)^080h,w
  3672  0037' 0800'              	movwf	(write_font@fontPos)^080h
  3673  0038' 0080'              	fcall	_write_font
  3674  0039' 120A' 118A' 2000' 120A' 118A' 	line	153
  3675                           ;Display.c: 153:     } else if (c >= 97 && c <= 122) {
  3676                           	goto	l156
  3677  003E' 2800'              	
  3678                           l152:	
  3679  003F'                    	
  3680                           l1946:	
  3681  003F'                    	movlw	low(061h)
  3682  003F' 3061               	bsf	status, 5	;RP0=1, select bank1
  3683  0040' 1683               	bcf	status, 6	;RP1=0, select bank1
  3684  0041' 1303               	subwf	(write_char@c)^080h,w
  3685  0042' 0200'              	skipc
  3686  0043' 1C03               	goto	u1591
  3687  0044' 2800'              	goto	u1590
  3688  0045' 2800'              u1591:
  3689  0046'                    	goto	l156
  3690  0046' 2800'              u1590:
  3691  0047'                    	
  3692                           l1948:	
  3693  0047'                    	movlw	low(07Bh)
  3694  0047' 307B               	subwf	(write_char@c)^080h,w
  3695  0048' 0200'              	skipnc
  3696  0049' 1803               	goto	u1601
  3697  004A' 2800'              	goto	u1600
  3698  004B' 2800'              u1601:
  3699  004C'                    	goto	l156
  3700  004C' 2800'              u1600:
  3701  004D'                    	line	154
  3702                           	
  3703                           l1950:	
  3704  004D'                    ;Display.c: 154:         pos = (c - 97) + 10;
  3705                           	movf	(write_char@c)^080h,w
  3706  004D' 0800'              	addlw	low(-87)
  3707  004E' 3EA9               	movwf	(write_char@pos)^080h
  3708  004F' 0080'              	movlw	high(-87)
  3709  0050' 30FF               	skipnc
  3710  0051' 1803               	movlw	(high(-87)+1)&0ffh
  3711  0052' 3000               	movwf	((write_char@pos)^080h)+1
  3712  0053' 0081'              	line	155
  3713                           	
  3714                           l1952:	
  3715  0054'                    ;Display.c: 155:         write_font(pos);
  3716                           	movf	(write_char@pos+1)^080h,w
  3717  0054' 0800'              	movwf	(write_font@fontPos+1)^080h
  3718  0055' 0080'              	movf	(write_char@pos)^080h,w
  3719  0056' 0800'              	movwf	(write_font@fontPos)^080h
  3720  0057' 0080'              	fcall	_write_font
  3721  0058' 120A' 118A' 2000' 120A' 118A' 	line	156
  3722                           ;Display.c: 156:     } else {
  3723                           	goto	l156
  3724  005D' 2800'              	
  3725                           l154:	
  3726  005E'                    	goto	l156
  3727  005E' 2800'              	line	159
  3728                           ;Display.c: 159:     }
  3729                           	
  3730                           l155:	
  3731  005F'                    	goto	l156
  3732  005F' 2800'              	
  3733                           l153:	
  3734  0060'                    	goto	l156
  3735  0060' 2800'              	
  3736                           l151:	
  3737  0061'                    	line	160
  3738                           	
  3739                           l156:	
  3740  0061'                    	return
  3741  0061' 0008               	opt stack 0
  3742                           GLOBAL	__end_of_write_char
  3743                           	__end_of_write_char:
  3744  0062'                    	signat	_write_char,4217
  3745                           	global	_write_font
  3746                           
  3747 ;; *************** function _write_font *****************
  3748 ;; Defined at:
  3749 ;;		line 162 in file "Display.c"
  3750 ;; Parameters:    Size  Location     Type
  3751 ;;  fontPos         2    6[BANK1 ] int 
  3752 ;; Auto vars:     Size  Location     Type
  3753 ;;  x               2   14[BANK1 ] int 
  3754 ;; Return value:  Size  Location     Type
  3755 ;;                  1    wreg      void 
  3756 ;; Registers used:
  3757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3758 ;; Tracked objects:
  3759 ;;		On entry : 0/0
  3760 ;;		On exit  : 0/0
  3761 ;;		Unchanged: 0/0
  3762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3763 ;;      Params:         0       0       2       0       0
  3764 ;;      Locals:         0       0       2       0       0
  3765 ;;      Temps:          0       0       6       0       0
  3766 ;;      Totals:         0       0      10       0       0
  3767 ;;Total ram usage:       10 bytes
  3768 ;; Hardware stack levels used:    1
  3769 ;; Hardware stack levels required when called:    5
  3770 ;; This function calls:
  3771 ;;		___wmul
  3772 ;;		_spiWrite
  3773 ;; This function is called by:
  3774 ;;		_write_char
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3778                           	line	162
  3779                           global __ptext7
  3780                           __ptext7:	;psect for function _write_font
  3781  0000'                    psect	text7
  3782                           	file	"Display.c"
  3783                           	line	162
  3784                           	global	__size_of_write_font
  3785                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  3786  0062                     	
  3787                           _write_font:	
  3788  0000'                    ;incstack = 0
  3789 ;; hardware stack exceeded
  3790                           	opt	stack 0
  3791                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3792                           	line	164
  3793                           	
  3794                           l1918:	
  3795  0000'                    ;Display.c: 162: void write_font(int fontPos);Display.c: 163: {;Display.c: 164:     for(
                                 int x=0; x < 5; x++){
  3796                           	bsf	status, 5	;RP0=1, select bank1
  3797  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  3798  0001' 1303               	clrf	(write_font@x)^080h
  3799  0002' 0180'              	clrf	(write_font@x+1)^080h
  3800  0003' 0180'              	
  3801                           l1920:	
  3802  0004'                    	movf	(write_font@x+1)^080h,w
  3803  0004' 0800'              	xorlw	80h
  3804  0005' 3A80               	movwf	btemp+1
  3805  0006' 00FF               	movlw	(0)^80h
  3806  0007' 3080               	subwf	btemp+1,w
  3807  0008' 027F               	skipz
  3808  0009' 1D03               	goto	u1535
  3809  000A' 2800'              	movlw	05h
  3810  000B' 3005               	subwf	(write_font@x)^080h,w
  3811  000C' 0200'              u1535:
  3812  000D'                    
  3813                           	skipc
  3814  000D' 1C03               	goto	u1531
  3815  000E' 2800'              	goto	u1530
  3816  000F' 2800'              u1531:
  3817  0010'                    	goto	l1924
  3818  0010' 2800'              u1530:
  3819  0011'                    	goto	l161
  3820  0011' 2800'              	
  3821                           l1922:	
  3822  0012'                    	goto	l161
  3823  0012' 2800'              	
  3824                           l159:	
  3825  0013'                    	line	165
  3826                           	
  3827                           l1924:	
  3828  0013'                    ;Display.c: 165:         spiWrite(font[fontPos][x]);
  3829                           	bsf	status, 5	;RP0=1, select bank1
  3830  0013' 1683               	bcf	status, 6	;RP1=0, select bank1
  3831  0014' 1303               	movf	(write_font@x+1)^080h,w
  3832  0015' 0800'              	movwf	(??_write_font+0)^080h+0+1
  3833  0016' 0081'              	movf	(write_font@x)^080h,w
  3834  0017' 0800'              	movwf	(??_write_font+0)^080h+0
  3835  0018' 0080'              	clrc
  3836  0019' 1003               	rlf	(??_write_font+0)^080h+0,f
  3837  001A' 0D80'              	rlf	(??_write_font+0)^080h+1,f
  3838  001B' 0D81'              	movf	(write_font@fontPos+1)^080h,w
  3839  001C' 0800'              	movwf	(___wmul@multiplier+1)^080h
  3840  001D' 0080'              	movf	(write_font@fontPos)^080h,w
  3841  001E' 0800'              	movwf	(___wmul@multiplier)^080h
  3842  001F' 0080'              	movlw	0Ah
  3843  0020' 300A               	movwf	(___wmul@multiplicand)^080h
  3844  0021' 0080'              	movlw	0
  3845  0022' 3000               	movwf	((___wmul@multiplicand)^080h)+1
  3846  0023' 0081'              	fcall	___wmul
  3847  0024' 120A' 118A' 2000' 120A' 118A' 	movlw	low(((_font)|8000h))
  3848  0029' 3000'              	bsf	status, 5	;RP0=1, select bank1
  3849  002A' 1683               	bcf	status, 6	;RP1=0, select bank1
  3850  002B' 1303               	movwf	(??_write_font+2)^080h+0
  3851  002C' 0080'              	movlw	high(((_font)|8000h))
  3852  002D' 3000'              	movwf	(??_write_font+2)^080h+0+1
  3853  002E' 0081'              	movf	(0+(?___wmul))^080h,w
  3854  002F' 0800'              	addwf	0+(??_write_font+2)^080h+0,w
  3855  0030' 0700'              	movwf	(??_write_font+4)^080h+0
  3856  0031' 0080'              	movf	(1+(?___wmul))^080h,w
  3857  0032' 0800'              	skipnc
  3858  0033' 1803               	incf	(1+(?___wmul))^080h,w
  3859  0034' 0A00'              	addwf	1+(??_write_font+2)^080h+0,w
  3860  0035' 0700'              	movwf	1+(??_write_font+4)^080h+0
  3861  0036' 0080'              	movf	0+(??_write_font+0)^080h+0,w
  3862  0037' 0800'              	addwf	0+(??_write_font+4)^080h+0,w
  3863  0038' 0700'              	movwf	fsr0
  3864  0039' 0084               	movf	1+(??_write_font+0)^080h+0,w
  3865  003A' 0800'              	skipnc
  3866  003B' 1803               	incf	1+(??_write_font+0)^080h+0,w
  3867  003C' 0A00'              	addwf	1+(??_write_font+4)^080h+0,w
  3868  003D' 0700'              	bcf	status, 5	;RP0=0, select bank0
  3869  003E' 1283               	bcf	status, 6	;RP1=0, select bank0
  3870  003F' 1303               	movwf	btemp+1
  3871  0040' 00FF               	fcall	stringtab
  3872  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	_spiWrite
  3873  0046' 120A' 118A' 2000' 120A' 118A' 	line	166
  3874                           	
  3875                           l1926:	
  3876  004B'                    ;Display.c: 166:     }
  3877                           	movlw	01h
  3878  004B' 3001               	bsf	status, 5	;RP0=1, select bank1
  3879  004C' 1683               	bcf	status, 6	;RP1=0, select bank1
  3880  004D' 1303               	addwf	(write_font@x)^080h,f
  3881  004E' 0780'              	skipnc
  3882  004F' 1803               	incf	(write_font@x+1)^080h,f
  3883  0050' 0A80'              	movlw	0
  3884  0051' 3000               	addwf	(write_font@x+1)^080h,f
  3885  0052' 0780'              	
  3886                           l1928:	
  3887  0053'                    	movf	(write_font@x+1)^080h,w
  3888  0053' 0800'              	xorlw	80h
  3889  0054' 3A80               	movwf	btemp+1
  3890  0055' 00FF               	movlw	(0)^80h
  3891  0056' 3080               	subwf	btemp+1,w
  3892  0057' 027F               	skipz
  3893  0058' 1D03               	goto	u1545
  3894  0059' 2800'              	movlw	05h
  3895  005A' 3005               	subwf	(write_font@x)^080h,w
  3896  005B' 0200'              u1545:
  3897  005C'                    
  3898                           	skipc
  3899  005C' 1C03               	goto	u1541
  3900  005D' 2800'              	goto	u1540
  3901  005E' 2800'              u1541:
  3902  005F'                    	goto	l1924
  3903  005F' 2800'              u1540:
  3904  0060'                    	goto	l161
  3905  0060' 2800'              	
  3906                           l160:	
  3907  0061'                    	line	167
  3908                           	
  3909                           l161:	
  3910  0061'                    	return
  3911  0061' 0008               	opt stack 0
  3912                           GLOBAL	__end_of_write_font
  3913                           	__end_of_write_font:
  3914  0062'                    	signat	_write_font,4217
  3915                           	global	___wmul
  3916                           
  3917 ;; *************** function ___wmul *****************
  3918 ;; Defined at:
  3919 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  multiplier      2    0[BANK1 ] unsigned int 
  3922 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  product         2    4[BANK1 ] unsigned int 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  2    0[BANK1 ] unsigned int 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3934 ;;      Params:         0       0       4       0       0
  3935 ;;      Locals:         0       0       2       0       0
  3936 ;;      Temps:          0       0       0       0       0
  3937 ;;      Totals:         0       0       6       0       0
  3938 ;;Total ram usage:        6 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    4
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_write_font
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3948                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3949                           	line	15
  3950                           global __ptext8
  3951                           __ptext8:	;psect for function ___wmul
  3952  0000'                    psect	text8
  3953                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3954                           	line	15
  3955                           	global	__size_of___wmul
  3956                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3957  002A                     	
  3958                           ___wmul:	
  3959  0000'                    ;incstack = 0
  3960 ;; hardware stack exceeded
  3961                           	opt	stack 0
  3962                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3963                           	line	43
  3964                           	
  3965                           l1904:	
  3966  0000'                    	bsf	status, 5	;RP0=1, select bank1
  3967  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  3968  0001' 1303               	clrf	(___wmul@product)^080h
  3969  0002' 0180'              	clrf	(___wmul@product+1)^080h
  3970  0003' 0180'              	goto	l1906
  3971  0004' 2800'              	line	44
  3972                           	
  3973                           l458:	
  3974  0005'                    	line	45
  3975                           	
  3976                           l1906:	
  3977  0005'                    	btfss	(___wmul@multiplier)^080h,(0)&7
  3978  0005' 1C00'              	goto	u1491
  3979  0006' 2800'              	goto	u1490
  3980  0007' 2800'              u1491:
  3981  0008'                    	goto	l459
  3982  0008' 2800'              u1490:
  3983  0009'                    	line	46
  3984                           	
  3985                           l1908:	
  3986  0009'                    	movf	(___wmul@multiplicand)^080h,w
  3987  0009' 0800'              	addwf	(___wmul@product)^080h,f
  3988  000A' 0780'              	skipnc
  3989  000B' 1803               	incf	(___wmul@product+1)^080h,f
  3990  000C' 0A80'              	movf	(___wmul@multiplicand+1)^080h,w
  3991  000D' 0800'              	addwf	(___wmul@product+1)^080h,f
  3992  000E' 0780'              	
  3993                           l459:	
  3994  000F'                    	line	47
  3995                           	movlw	01h
  3996  000F' 3001               	
  3997                           u1505:
  3998  0010'                    	clrc
  3999  0010' 1003               	rlf	(___wmul@multiplicand)^080h,f
  4000  0011' 0D80'              	rlf	(___wmul@multiplicand+1)^080h,f
  4001  0012' 0D80'              	addlw	-1
  4002  0013' 3EFF               	skipz
  4003  0014' 1D03               	goto	u1505
  4004  0015' 2800'              	line	48
  4005                           	
  4006                           l1910:	
  4007  0016'                    	movlw	01h
  4008  0016' 3001               	
  4009                           u1515:
  4010  0017'                    	clrc
  4011  0017' 1003               	rrf	(___wmul@multiplier+1)^080h,f
  4012  0018' 0C80'              	rrf	(___wmul@multiplier)^080h,f
  4013  0019' 0C80'              	addlw	-1
  4014  001A' 3EFF               	skipz
  4015  001B' 1D03               	goto	u1515
  4016  001C' 2800'              	line	49
  4017                           	
  4018                           l1912:	
  4019  001D'                    	movf	((___wmul@multiplier)^080h),w
  4020  001D' 0800'              iorwf	((___wmul@multiplier+1)^080h),w
  4021  001E' 0400'              	btfss	status,2
  4022  001F' 1D03               	goto	u1521
  4023  0020' 2800'              	goto	u1520
  4024  0021' 2800'              u1521:
  4025  0022'                    	goto	l1906
  4026  0022' 2800'              u1520:
  4027  0023'                    	goto	l1914
  4028  0023' 2800'              	
  4029                           l460:	
  4030  0024'                    	line	52
  4031                           	
  4032                           l1914:	
  4033  0024'                    	movf	(___wmul@product+1)^080h,w
  4034  0024' 0800'              	movwf	(?___wmul+1)^080h
  4035  0025' 0080'              	movf	(___wmul@product)^080h,w
  4036  0026' 0800'              	movwf	(?___wmul)^080h
  4037  0027' 0080'              	goto	l461
  4038  0028' 2800'              	
  4039                           l1916:	
  4040  0029'                    	line	53
  4041                           	
  4042                           l461:	
  4043  0029'                    	return
  4044  0029' 0008               	opt stack 0
  4045                           GLOBAL	__end_of___wmul
  4046                           	__end_of___wmul:
  4047  002A'                    	signat	___wmul,8314
  4048                           	global	_sprintf
  4049                           
  4050 ;; *************** function _sprintf *****************
  4051 ;; Defined at:
  4052 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  sp              1    wreg     PTR unsigned char 
  4055 ;;		 -> write_int@num(2), 
  4056 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4057 ;;		 -> STR_3(3), 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  4060 ;;		 -> write_int@num(2), 
  4061 ;;  tmpval          4    0        struct .
  4062 ;;  val             2   25[BANK1 ] unsigned int 
  4063 ;;  cp              2    0        PTR const unsigned char 
  4064 ;;  len             2    0        unsigned int 
  4065 ;;  c               1   28[BANK1 ] unsigned char 
  4066 ;;  prec            1   24[BANK1 ] char 
  4067 ;;  flag            1   23[BANK1 ] unsigned char 
  4068 ;;  ap              1   22[BANK1 ] PTR void [1]
  4069 ;;		 -> ?_sprintf(2), 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  2   14[BANK1 ] int 
  4072 ;; Registers used:
  4073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4079 ;;      Params:         0       0       4       0       0
  4080 ;;      Locals:         0       0       7       0       0
  4081 ;;      Temps:          0       0       4       0       0
  4082 ;;      Totals:         0       0      15       0       0
  4083 ;;Total ram usage:       15 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    5
  4086 ;; This function calls:
  4087 ;;		___lwdiv
  4088 ;;		___lwmod
  4089 ;; This function is called by:
  4090 ;;		_write_int
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4094                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4095                           	line	500
  4096                           global __ptext9
  4097                           __ptext9:	;psect for function _sprintf
  4098  0000'                    psect	text9
  4099                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4100                           	line	500
  4101                           	global	__size_of_sprintf
  4102                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4103  0136                     	
  4104                           _sprintf:	
  4105  0000'                    ;incstack = 0
  4106 ;; using string table level
  4107                           	opt	stack 1
  4108                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4109                           ;sprintf@sp stored from wreg
  4110                           	bsf	status, 5	;RP0=1, select bank1
  4111  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  4112  0001' 1303               	movwf	(sprintf@sp)^080h
  4113  0002' 0080'              	line	545
  4114                           	
  4115                           l2010:	
  4116  0003'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  4117                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  4118  0003' 3000'              	movwf	(??_sprintf+0)^080h+0
  4119  0004' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4120  0005' 0800'              	movwf	(sprintf@ap)^080h
  4121  0006' 0080'              	line	548
  4122                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4123                           	goto	l2062
  4124  0007' 2800'              	
  4125                           l437:	
  4126  0008'                    	line	550
  4127                           	
  4128                           l2012:	
  4129  0008'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  4130                           		movlw	37
  4131  0008' 3025               	xorwf	((sprintf@c)^080h),w
  4132  0009' 0600'              	btfsc	status,2
  4133  000A' 1903               	goto	u1751
  4134  000B' 2800'              	goto	u1750
  4135  000C' 2800'              u1751:
  4136  000D'                    	goto	l2018
  4137  000D' 2800'              u1750:
  4138  000E'                    	line	553
  4139                           	
  4140                           l2014:	
  4141  000E'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  4142                           	movf	(sprintf@c)^080h,w
  4143  000E' 0800'              	movwf	(??_sprintf+0)^080h+0
  4144  000F' 0080'              	movf	(sprintf@sp)^080h,w
  4145  0010' 0800'              	movwf	fsr0
  4146  0011' 0084               	movf	(??_sprintf+0)^080h+0,w
  4147  0012' 0800'              	bcf	status, 7	;select IRP bank0
  4148  0013' 1383               	movwf	indf
  4149  0014' 0080               	
  4150                           l2016:	
  4151  0015'                    	movlw	low(01h)
  4152  0015' 3001               	movwf	(??_sprintf+0)^080h+0
  4153  0016' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4154  0017' 0800'              	addwf	(sprintf@sp)^080h,f
  4155  0018' 0780'              	line	554
  4156                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  4157                           	goto	l2062
  4158  0019' 2800'              	line	555
  4159                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  4160                           	
  4161                           l438:	
  4162  001A'                    	line	560
  4163                           	
  4164                           l2018:	
  4165  001A'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  4166                           	clrf	(sprintf@flag)^080h
  4167  001A' 0180'              	line	654
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  4169                           	goto	l2022
  4170  001B' 2800'              	line	656
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  4172                           	
  4173                           l440:	
  4174  001C'                    	line	657
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  4176                           	goto	l2064
  4177  001C' 2800'              	line	716
  4178                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  4179                           	
  4180                           l442:	
  4181  001D'                    	goto	l2024
  4182  001D' 2800'              	line	717
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  4184                           	
  4185                           l443:	
  4186  001E'                    	line	718
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  4188                           	goto	l2024
  4189  001E' 2800'              	line	821
  4190                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  4191                           	
  4192                           l445:	
  4193  001F'                    	line	832
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  4195                           	goto	l2062
  4196  001F' 2800'              	line	841
  4197                           	
  4198                           l2020:	
  4199  0020'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  4200                           	goto	l2024
  4201  0020' 2800'              	
  4202                           l439:	
  4203  0021'                    	
  4204                           l2022:	
  4205  0021'                    	movf	(sprintf@f+1)^080h,w
  4206  0021' 0800'              	movwf	(??_sprintf+0)^080h+0+1
  4207  0022' 0081'              	movf	(sprintf@f)^080h,w
  4208  0023' 0800'              	movwf	(??_sprintf+0)^080h+0
  4209  0024' 0080'              	incf	(sprintf@f)^080h,f
  4210  0025' 0A80'              	skipnz
  4211  0026' 1903               	incf	(sprintf@f+1)^080h,f
  4212  0027' 0A80'              	movf	1+(??_sprintf+0)^080h+0,w
  4213  0028' 0800'              	bcf	status, 5	;RP0=0, select bank0
  4214  0029' 1283               	bcf	status, 6	;RP1=0, select bank0
  4215  002A' 1303               	movwf	btemp+1
  4216  002B' 00FF               	bsf	status, 5	;RP0=1, select bank1
  4217  002C' 1683               	bcf	status, 6	;RP1=0, select bank1
  4218  002D' 1303               	movf	0+(??_sprintf+0)^080h+0,w
  4219  002E' 0800'              	movwf	fsr0
  4220  002F' 0084               	bcf	status, 5	;RP0=0, select bank0
  4221  0030' 1283               	bcf	status, 6	;RP1=0, select bank0
  4222  0031' 1303               	fcall	stringtab
  4223  0032' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4224  0037' 1683               	bcf	status, 6	;RP1=0, select bank1
  4225  0038' 1303               	movwf	(sprintf@c)^080h
  4226  0039' 0080'              	movwf	(??_sprintf+2)^080h+0
  4227  003A' 0080'              	clrf	(??_sprintf+2)^080h+0+1
  4228  003B' 0181'              	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4229                           ; Switch size 1, requested type "space"
  4230                           ; Number of cases is 1, Range of values is 0 to 0
  4231                           ; switch strategies available:
  4232                           ; Name         Instructions Cycles
  4233                           ; simple_byte            4     3 (average)
  4234                           ; direct_byte           11     8 (fixed)
  4235                           ; jumptable            260     6 (fixed)
  4236                           ;	Chosen strategy is simple_byte
  4237                           
  4238                           	movf 1+(??_sprintf+2)^080h+0,w
  4239  003C' 0800'              	opt asmopt_push
  4240                           	opt asmopt_off
  4241                           	xorlw	0^0	; case 0
  4242  003D' 3A00               	skipnz
  4243  003E' 1903               	goto	l2858
  4244  003F' 2800'              	goto	l2062
  4245  0040' 2800'              	opt asmopt_pop
  4246                           	
  4247                           l2858:	
  4248  0041'                    ; Switch size 1, requested type "space"
  4249                           ; Number of cases is 3, Range of values is 0 to 105
  4250                           ; switch strategies available:
  4251                           ; Name         Instructions Cycles
  4252                           ; simple_byte           10     6 (average)
  4253                           ; jumptable            260     6 (fixed)
  4254                           ;	Chosen strategy is simple_byte
  4255                           
  4256                           	movf 0+(??_sprintf+2)^080h+0,w
  4257  0041' 0800'              	opt asmopt_push
  4258                           	opt asmopt_off
  4259                           	xorlw	0^0	; case 0
  4260  0042' 3A00               	skipnz
  4261  0043' 1903               	goto	l2064
  4262  0044' 2800'              	xorlw	100^0	; case 100
  4263  0045' 3A64               	skipnz
  4264  0046' 1903               	goto	l2024
  4265  0047' 2800'              	xorlw	105^100	; case 105
  4266  0048' 3A0D               	skipnz
  4267  0049' 1903               	goto	l2024
  4268  004A' 2800'              	goto	l2062
  4269  004B' 2800'              	opt asmopt_pop
  4270                           
  4271                           	
  4272                           l444:	
  4273  004C'                    	line	1278
  4274                           	
  4275                           l2024:	
  4276  004C'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4277                           	movf	(sprintf@ap)^080h,w
  4278  004C' 0800'              	movwf	fsr0
  4279  004D' 0084               	bcf	status, 7	;select IRP bank0
  4280  004E' 1383               	movf	indf,w
  4281  004F' 0800               	movwf	(sprintf@val)^080h
  4282  0050' 0080'              	incf	fsr0,f
  4283  0051' 0A84               	movf	indf,w
  4284  0052' 0800               	movwf	(sprintf@val+1)^080h
  4285  0053' 0080'              	
  4286                           l2026:	
  4287  0054'                    	movlw	low(02h)
  4288  0054' 3002               	movwf	(??_sprintf+0)^080h+0
  4289  0055' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4290  0056' 0800'              	addwf	(sprintf@ap)^080h,f
  4291  0057' 0780'              	line	1280
  4292                           	
  4293                           l2028:	
  4294  0058'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  4295                           	btfss	(sprintf@val+1)^080h,7
  4296  0058' 1F80'              	goto	u1761
  4297  0059' 2800'              	goto	u1760
  4298  005A' 2800'              u1761:
  4299  005B'                    	goto	l2034
  4300  005B' 2800'              u1760:
  4301  005C'                    	line	1281
  4302                           	
  4303                           l2030:	
  4304  005C'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  4305                           	movlw	low(03h)
  4306  005C' 3003               	movwf	(??_sprintf+0)^080h+0
  4307  005D' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4308  005E' 0800'              	iorwf	(sprintf@flag)^080h,f
  4309  005F' 0480'              	line	1282
  4310                           	
  4311                           l2032:	
  4312  0060'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  4313                           	comf	(sprintf@val)^080h,f
  4314  0060' 0980'              	comf	(sprintf@val+1)^080h,f
  4315  0061' 0980'              	incf	(sprintf@val)^080h,f
  4316  0062' 0A80'              	skipnz
  4317  0063' 1903               	incf	(sprintf@val+1)^080h,f
  4318  0064' 0A80'              	goto	l2034
  4319  0065' 2800'              	line	1283
  4320                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  4321                           	
  4322                           l446:	
  4323  0066'                    	line	1324
  4324                           	
  4325                           l2034:	
  4326  0066'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4327                           	clrf	(sprintf@c)^080h
  4328  0066' 0180'              	incf	(sprintf@c)^080h,f
  4329  0067' 0A80'              	
  4330                           l2036:	
  4331  0068'                    		movlw	5
  4332  0068' 3005               	xorwf	((sprintf@c)^080h),w
  4333  0069' 0600'              	btfss	status,2
  4334  006A' 1D03               	goto	u1771
  4335  006B' 2800'              	goto	u1770
  4336  006C' 2800'              u1771:
  4337  006D'                    	goto	l2040
  4338  006D' 2800'              u1770:
  4339  006E'                    	goto	l2046
  4340  006E' 2800'              	
  4341                           l2038:	
  4342  006F'                    	goto	l2046
  4343  006F' 2800'              	
  4344                           l447:	
  4345  0070'                    	line	1325
  4346                           	
  4347                           l2040:	
  4348  0070'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  4349                           	movf	(sprintf@c)^080h,w
  4350  0070' 0800'              	movwf	(??_sprintf+0)^080h+0
  4351  0071' 0080'              	addwf	(??_sprintf+0)^080h+0,w
  4352  0072' 0700'              	addlw	low(((_dpowers)|8000h))
  4353  0073' 3E00'              	movwf	fsr0
  4354  0074' 0084               	movlw	high(((_dpowers)|8000h))
  4355  0075' 3000'              	skipnc
  4356  0076' 1803               	addlw	1
  4357  0077' 3E01               	bcf	status, 5	;RP0=0, select bank0
  4358  0078' 1283               	bcf	status, 6	;RP1=0, select bank0
  4359  0079' 1303               	movwf	btemp+1
  4360  007A' 00FF               	fcall	stringtab
  4361  007B' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4362  0080' 1683               	bcf	status, 6	;RP1=0, select bank1
  4363  0081' 1303               	movwf	(??_sprintf+1)^080h+0
  4364  0082' 0080'              	bcf	status, 5	;RP0=0, select bank0
  4365  0083' 1283               	bcf	status, 6	;RP1=0, select bank0
  4366  0084' 1303               	fcall	stringtab
  4367  0085' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4368  008A' 1683               	bcf	status, 6	;RP1=0, select bank1
  4369  008B' 1303               	movwf	(??_sprintf+1)^080h+0+1
  4370  008C' 0081'              	movf	1+(??_sprintf+1)^080h+0,w
  4371  008D' 0800'              	subwf	(sprintf@val+1)^080h,w
  4372  008E' 0200'              	skipz
  4373  008F' 1D03               	goto	u1785
  4374  0090' 2800'              	movf	0+(??_sprintf+1)^080h+0,w
  4375  0091' 0800'              	subwf	(sprintf@val)^080h,w
  4376  0092' 0200'              u1785:
  4377  0093'                    	skipnc
  4378  0093' 1803               	goto	u1781
  4379  0094' 2800'              	goto	u1780
  4380  0095' 2800'              u1781:
  4381  0096'                    	goto	l2044
  4382  0096' 2800'              u1780:
  4383  0097'                    	goto	l2046
  4384  0097' 2800'              	line	1326
  4385                           	
  4386                           l2042:	
  4387  0098'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  4388                           	goto	l2046
  4389  0098' 2800'              	
  4390                           l449:	
  4391  0099'                    	
  4392                           l2044:	
  4393  0099'                    	movlw	low(01h)
  4394  0099' 3001               	movwf	(??_sprintf+0)^080h+0
  4395  009A' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4396  009B' 0800'              	addwf	(sprintf@c)^080h,f
  4397  009C' 0780'              		movlw	5
  4398  009D' 3005               	xorwf	((sprintf@c)^080h),w
  4399  009E' 0600'              	btfss	status,2
  4400  009F' 1D03               	goto	u1791
  4401  00A0' 2800'              	goto	u1790
  4402  00A1' 2800'              u1791:
  4403  00A2'                    	goto	l2040
  4404  00A2' 2800'              u1790:
  4405  00A3'                    	goto	l2046
  4406  00A3' 2800'              	
  4407                           l448:	
  4408  00A4'                    	line	1457
  4409                           	
  4410                           l2046:	
  4411  00A4'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  4412                           	movf	(sprintf@flag)^080h,w
  4413  00A4' 0800'              	andlw	03h
  4414  00A5' 3903               	btfsc	status,2
  4415  00A6' 1903               	goto	u1801
  4416  00A7' 2800'              	goto	u1800
  4417  00A8' 2800'              u1801:
  4418  00A9'                    	goto	l2052
  4419  00A9' 2800'              u1800:
  4420  00AA'                    	line	1458
  4421                           	
  4422                           l2048:	
  4423  00AA'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  4424                           	movlw	low(02Dh)
  4425  00AA' 302D               	movwf	(??_sprintf+0)^080h+0
  4426  00AB' 0080'              	movf	(sprintf@sp)^080h,w
  4427  00AC' 0800'              	movwf	fsr0
  4428  00AD' 0084               	movf	(??_sprintf+0)^080h+0,w
  4429  00AE' 0800'              	bcf	status, 7	;select IRP bank0
  4430  00AF' 1383               	movwf	indf
  4431  00B0' 0080               	
  4432                           l2050:	
  4433  00B1'                    	movlw	low(01h)
  4434  00B1' 3001               	movwf	(??_sprintf+0)^080h+0
  4435  00B2' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4436  00B3' 0800'              	addwf	(sprintf@sp)^080h,f
  4437  00B4' 0780'              	goto	l2052
  4438  00B5' 2800'              	
  4439                           l450:	
  4440  00B6'                    	line	1491
  4441                           	
  4442                           l2052:	
  4443  00B6'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  4444                           	movf	(sprintf@c)^080h,w
  4445  00B6' 0800'              	movwf	(??_sprintf+0)^080h+0
  4446  00B7' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4447  00B8' 0800'              	movwf	(sprintf@prec)^080h
  4448  00B9' 0080'              	line	1493
  4449                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4450                           	goto	l2060
  4451  00BA' 2800'              	
  4452                           l452:	
  4453  00BB'                    	line	1508
  4454                           	
  4455                           l2054:	
  4456  00BB'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  4457                           	movlw	0Ah
  4458  00BB' 300A               	movwf	(___lwmod@divisor)^080h
  4459  00BC' 0080'              	movlw	0
  4460  00BD' 3000               	movwf	((___lwmod@divisor)^080h)+1
  4461  00BE' 0081'              	movf	(sprintf@prec)^080h,w
  4462  00BF' 0800'              	movwf	(??_sprintf+0)^080h+0
  4463  00C0' 0080'              	addwf	(??_sprintf+0)^080h+0,w
  4464  00C1' 0700'              	addlw	low(((_dpowers)|8000h))
  4465  00C2' 3E00'              	movwf	fsr0
  4466  00C3' 0084               	movlw	high(((_dpowers)|8000h))
  4467  00C4' 3000'              	skipnc
  4468  00C5' 1803               	addlw	1
  4469  00C6' 3E01               	bcf	status, 5	;RP0=0, select bank0
  4470  00C7' 1283               	bcf	status, 6	;RP1=0, select bank0
  4471  00C8' 1303               	movwf	btemp+1
  4472  00C9' 00FF               	fcall	stringtab
  4473  00CA' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4474  00CF' 1683               	bcf	status, 6	;RP1=0, select bank1
  4475  00D0' 1303               	movwf	(___lwdiv@divisor)^080h
  4476  00D1' 0080'              	bcf	status, 5	;RP0=0, select bank0
  4477  00D2' 1283               	bcf	status, 6	;RP1=0, select bank0
  4478  00D3' 1303               	fcall	stringtab
  4479  00D4' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4480  00D9' 1683               	bcf	status, 6	;RP1=0, select bank1
  4481  00DA' 1303               	movwf	(___lwdiv@divisor+1)^080h
  4482  00DB' 0080'              	movf	(sprintf@val+1)^080h,w
  4483  00DC' 0800'              	movwf	(___lwdiv@dividend+1)^080h
  4484  00DD' 0080'              	movf	(sprintf@val)^080h,w
  4485  00DE' 0800'              	movwf	(___lwdiv@dividend)^080h
  4486  00DF' 0080'              	fcall	___lwdiv
  4487  00E0' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4488  00E5' 1683               	bcf	status, 6	;RP1=0, select bank1
  4489  00E6' 1303               	movf	(1+(?___lwdiv))^080h,w
  4490  00E7' 0800'              	movwf	(___lwmod@dividend+1)^080h
  4491  00E8' 0080'              	movf	(0+(?___lwdiv))^080h,w
  4492  00E9' 0800'              	movwf	(___lwmod@dividend)^080h
  4493  00EA' 0080'              	fcall	___lwmod
  4494  00EB' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4495  00F0' 1683               	bcf	status, 6	;RP1=0, select bank1
  4496  00F1' 1303               	movf	(0+(?___lwmod))^080h,w
  4497  00F2' 0800'              	addlw	030h
  4498  00F3' 3E30               	movwf	(??_sprintf+1)^080h+0
  4499  00F4' 0080'              	movf	(??_sprintf+1)^080h+0,w
  4500  00F5' 0800'              	movwf	(sprintf@c)^080h
  4501  00F6' 0080'              	line	1543
  4502                           	
  4503                           l2056:	
  4504  00F7'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  4505                           	movf	(sprintf@c)^080h,w
  4506  00F7' 0800'              	movwf	(??_sprintf+0)^080h+0
  4507  00F8' 0080'              	movf	(sprintf@sp)^080h,w
  4508  00F9' 0800'              	movwf	fsr0
  4509  00FA' 0084               	movf	(??_sprintf+0)^080h+0,w
  4510  00FB' 0800'              	bcf	status, 7	;select IRP bank0
  4511  00FC' 1383               	movwf	indf
  4512  00FD' 0080               	
  4513                           l2058:	
  4514  00FE'                    	movlw	low(01h)
  4515  00FE' 3001               	movwf	(??_sprintf+0)^080h+0
  4516  00FF' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4517  0100' 0800'              	addwf	(sprintf@sp)^080h,f
  4518  0101' 0780'              	goto	l2060
  4519  0102' 2800'              	line	1544
  4520                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  4521                           	
  4522                           l451:	
  4523  0103'                    	line	1493
  4524                           	
  4525                           l2060:	
  4526  0103'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4527                           	movlw	low(-1)
  4528  0103' 30FF               	movwf	(??_sprintf+0)^080h+0
  4529  0104' 0080'              	movf	(??_sprintf+0)^080h+0,w
  4530  0105' 0800'              	addwf	(sprintf@prec)^080h,f
  4531  0106' 0780'              		incf	(((sprintf@prec)^080h)),w
  4532  0107' 0A00'              	btfss	status,2
  4533  0108' 1D03               	goto	u1811
  4534  0109' 2800'              	goto	u1810
  4535  010A' 2800'              u1811:
  4536  010B'                    	goto	l2054
  4537  010B' 2800'              u1810:
  4538  010C'                    	goto	l2062
  4539  010C' 2800'              	
  4540                           l453:	
  4541  010D'                    	goto	l2062
  4542  010D' 2800'              	line	1552
  4543                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  4544                           	
  4545                           l436:	
  4546  010E'                    	line	548
  4547                           	
  4548                           l2062:	
  4549  010E'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4550                           	movf	(sprintf@f+1)^080h,w
  4551  010E' 0800'              	movwf	(??_sprintf+0)^080h+0+1
  4552  010F' 0081'              	movf	(sprintf@f)^080h,w
  4553  0110' 0800'              	movwf	(??_sprintf+0)^080h+0
  4554  0111' 0080'              	incf	(sprintf@f)^080h,f
  4555  0112' 0A80'              	skipnz
  4556  0113' 1903               	incf	(sprintf@f+1)^080h,f
  4557  0114' 0A80'              	movf	1+(??_sprintf+0)^080h+0,w
  4558  0115' 0800'              	bcf	status, 5	;RP0=0, select bank0
  4559  0116' 1283               	bcf	status, 6	;RP1=0, select bank0
  4560  0117' 1303               	movwf	btemp+1
  4561  0118' 00FF               	bsf	status, 5	;RP0=1, select bank1
  4562  0119' 1683               	bcf	status, 6	;RP1=0, select bank1
  4563  011A' 1303               	movf	0+(??_sprintf+0)^080h+0,w
  4564  011B' 0800'              	movwf	fsr0
  4565  011C' 0084               	bcf	status, 5	;RP0=0, select bank0
  4566  011D' 1283               	bcf	status, 6	;RP1=0, select bank0
  4567  011E' 1303               	fcall	stringtab
  4568  011F' 120A' 118A' 2000' 120A' 118A' 	bsf	status, 5	;RP0=1, select bank1
  4569  0124' 1683               	bcf	status, 6	;RP1=0, select bank1
  4570  0125' 1303               	movwf	(??_sprintf+2)^080h+0
  4571  0126' 0080'              	movf	(??_sprintf+2)^080h+0,w
  4572  0127' 0800'              	movwf	(sprintf@c)^080h
  4573  0128' 0080'              	movf	(((sprintf@c)^080h)),w
  4574  0129' 0800'              	btfss	status,2
  4575  012A' 1D03               	goto	u1821
  4576  012B' 2800'              	goto	u1820
  4577  012C' 2800'              u1821:
  4578  012D'                    	goto	l2012
  4579  012D' 2800'              u1820:
  4580  012E'                    	goto	l2064
  4581  012E' 2800'              	
  4582                           l454:	
  4583  012F'                    	goto	l2064
  4584  012F' 2800'              	line	1554
  4585                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  4586                           	
  4587                           l441:	
  4588  0130'                    	line	1557
  4589                           	
  4590                           l2064:	
  4591  0130'                    ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  4592                           	movf	(sprintf@sp)^080h,w
  4593  0130' 0800'              	movwf	fsr0
  4594  0131' 0084               	bcf	status, 7	;select IRP bank0
  4595  0132' 1383               	clrf	indf
  4596  0133' 0180               	goto	l455
  4597  0134' 2800'              	line	1559
  4598                           	
  4599                           l2066:	
  4600  0135'                    	line	1560
  4601                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  4602                           	
  4603                           l455:	
  4604  0135'                    	return
  4605  0135' 0008               	opt stack 0
  4606                           GLOBAL	__end_of_sprintf
  4607                           	__end_of_sprintf:
  4608  0136'                    	signat	_sprintf,4698
  4609                           	global	___lwmod
  4610                           
  4611 ;; *************** function ___lwmod *****************
  4612 ;; Defined at:
  4613 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;  divisor         2    8[BANK1 ] unsigned int 
  4616 ;;  dividend        2   10[BANK1 ] unsigned int 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  counter         1   13[BANK1 ] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  2    8[BANK1 ] unsigned int 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       0       4       0       0
  4629 ;;      Locals:         0       0       1       0       0
  4630 ;;      Temps:          0       0       1       0       0
  4631 ;;      Totals:         0       0       6       0       0
  4632 ;;Total ram usage:        6 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    4
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_sprintf
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4642                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4643                           	line	5
  4644                           global __ptext10
  4645                           __ptext10:	;psect for function ___lwmod
  4646  0000'                    psect	text10
  4647                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4648                           	line	5
  4649                           	global	__size_of___lwmod
  4650                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4651  0043                     	
  4652                           ___lwmod:	
  4653  0000'                    ;incstack = 0
  4654                           	opt	stack 0
  4655                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4656                           	line	12
  4657                           	
  4658                           l1980:	
  4659  0000'                    	bsf	status, 5	;RP0=1, select bank1
  4660  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  4661  0001' 1303               	movf	((___lwmod@divisor)^080h),w
  4662  0002' 0800'              iorwf	((___lwmod@divisor+1)^080h),w
  4663  0003' 0400'              	btfsc	status,2
  4664  0004' 1903               	goto	u1681
  4665  0005' 2800'              	goto	u1680
  4666  0006' 2800'              u1681:
  4667  0007'                    	goto	l1998
  4668  0007' 2800'              u1680:
  4669  0008'                    	line	13
  4670                           	
  4671                           l1982:	
  4672  0008'                    	clrf	(___lwmod@counter)^080h
  4673  0008' 0180'              	incf	(___lwmod@counter)^080h,f
  4674  0009' 0A80'              	line	14
  4675                           	goto	l1988
  4676  000A' 2800'              	
  4677                           l736:	
  4678  000B'                    	line	15
  4679                           	
  4680                           l1984:	
  4681  000B'                    	movlw	01h
  4682  000B' 3001               	
  4683                           u1695:
  4684  000C'                    	clrc
  4685  000C' 1003               	rlf	(___lwmod@divisor)^080h,f
  4686  000D' 0D80'              	rlf	(___lwmod@divisor+1)^080h,f
  4687  000E' 0D80'              	addlw	-1
  4688  000F' 3EFF               	skipz
  4689  0010' 1D03               	goto	u1695
  4690  0011' 2800'              	line	16
  4691                           	
  4692                           l1986:	
  4693  0012'                    	movlw	low(01h)
  4694  0012' 3001               	movwf	(??___lwmod+0)^080h+0
  4695  0013' 0080'              	movf	(??___lwmod+0)^080h+0,w
  4696  0014' 0800'              	addwf	(___lwmod@counter)^080h,f
  4697  0015' 0780'              	goto	l1988
  4698  0016' 2800'              	line	17
  4699                           	
  4700                           l735:	
  4701  0017'                    	line	14
  4702                           	
  4703                           l1988:	
  4704  0017'                    	btfss	(___lwmod@divisor+1)^080h,(15)&7
  4705  0017' 1F80'              	goto	u1701
  4706  0018' 2800'              	goto	u1700
  4707  0019' 2800'              u1701:
  4708  001A'                    	goto	l1984
  4709  001A' 2800'              u1700:
  4710  001B'                    	goto	l1990
  4711  001B' 2800'              	
  4712                           l737:	
  4713  001C'                    	goto	l1990
  4714  001C' 2800'              	line	18
  4715                           	
  4716                           l738:	
  4717  001D'                    	line	19
  4718                           	
  4719                           l1990:	
  4720  001D'                    	movf	(___lwmod@divisor+1)^080h,w
  4721  001D' 0800'              	subwf	(___lwmod@dividend+1)^080h,w
  4722  001E' 0200'              	skipz
  4723  001F' 1D03               	goto	u1715
  4724  0020' 2800'              	movf	(___lwmod@divisor)^080h,w
  4725  0021' 0800'              	subwf	(___lwmod@dividend)^080h,w
  4726  0022' 0200'              u1715:
  4727  0023'                    	skipc
  4728  0023' 1C03               	goto	u1711
  4729  0024' 2800'              	goto	u1710
  4730  0025' 2800'              u1711:
  4731  0026'                    	goto	l1994
  4732  0026' 2800'              u1710:
  4733  0027'                    	line	20
  4734                           	
  4735                           l1992:	
  4736  0027'                    	movf	(___lwmod@divisor)^080h,w
  4737  0027' 0800'              	subwf	(___lwmod@dividend)^080h,f
  4738  0028' 0280'              	movf	(___lwmod@divisor+1)^080h,w
  4739  0029' 0800'              	skipc
  4740  002A' 1C03               	decf	(___lwmod@dividend+1)^080h,f
  4741  002B' 0380'              	subwf	(___lwmod@dividend+1)^080h,f
  4742  002C' 0280'              	goto	l1994
  4743  002D' 2800'              	
  4744                           l739:	
  4745  002E'                    	line	21
  4746                           	
  4747                           l1994:	
  4748  002E'                    	movlw	01h
  4749  002E' 3001               	
  4750                           u1725:
  4751  002F'                    	clrc
  4752  002F' 1003               	rrf	(___lwmod@divisor+1)^080h,f
  4753  0030' 0C80'              	rrf	(___lwmod@divisor)^080h,f
  4754  0031' 0C80'              	addlw	-1
  4755  0032' 3EFF               	skipz
  4756  0033' 1D03               	goto	u1725
  4757  0034' 2800'              	line	22
  4758                           	
  4759                           l1996:	
  4760  0035'                    	movlw	01h
  4761  0035' 3001               	subwf	(___lwmod@counter)^080h,f
  4762  0036' 0280'              	btfss	status,2
  4763  0037' 1D03               	goto	u1731
  4764  0038' 2800'              	goto	u1730
  4765  0039' 2800'              u1731:
  4766  003A'                    	goto	l1990
  4767  003A' 2800'              u1730:
  4768  003B'                    	goto	l1998
  4769  003B' 2800'              	
  4770                           l740:	
  4771  003C'                    	goto	l1998
  4772  003C' 2800'              	line	23
  4773                           	
  4774                           l734:	
  4775  003D'                    	line	24
  4776                           	
  4777                           l1998:	
  4778  003D'                    	movf	(___lwmod@dividend+1)^080h,w
  4779  003D' 0800'              	movwf	(?___lwmod+1)^080h
  4780  003E' 0080'              	movf	(___lwmod@dividend)^080h,w
  4781  003F' 0800'              	movwf	(?___lwmod)^080h
  4782  0040' 0080'              	goto	l741
  4783  0041' 2800'              	
  4784                           l2000:	
  4785  0042'                    	line	25
  4786                           	
  4787                           l741:	
  4788  0042'                    	return
  4789  0042' 0008               	opt stack 0
  4790                           GLOBAL	__end_of___lwmod
  4791                           	__end_of___lwmod:
  4792  0043'                    	signat	___lwmod,8314
  4793                           	global	___lwdiv
  4794                           
  4795 ;; *************** function ___lwdiv *****************
  4796 ;; Defined at:
  4797 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  divisor         2    0[BANK1 ] unsigned int 
  4800 ;;  dividend        2    2[BANK1 ] unsigned int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  quotient        2    5[BANK1 ] unsigned int 
  4803 ;;  counter         1    7[BANK1 ] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2    0[BANK1 ] unsigned int 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         0       0       4       0       0
  4814 ;;      Locals:         0       0       3       0       0
  4815 ;;      Temps:          0       0       1       0       0
  4816 ;;      Totals:         0       0       8       0       0
  4817 ;;Total ram usage:        8 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    4
  4820 ;; This function calls:
  4821 ;;		Nothing
  4822 ;; This function is called by:
  4823 ;;		_sprintf
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  4827                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4828                           	line	5
  4829                           global __ptext11
  4830                           __ptext11:	;psect for function ___lwdiv
  4831  0000'                    psect	text11
  4832                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4833                           	line	5
  4834                           	global	__size_of___lwdiv
  4835                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4836  004D                     	
  4837                           ___lwdiv:	
  4838  0000'                    ;incstack = 0
  4839                           	opt	stack 0
  4840                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4841                           	line	13
  4842                           	
  4843                           l1954:	
  4844  0000'                    	bsf	status, 5	;RP0=1, select bank1
  4845  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  4846  0001' 1303               	clrf	(___lwdiv@quotient)^080h
  4847  0002' 0180'              	clrf	(___lwdiv@quotient+1)^080h
  4848  0003' 0180'              	line	14
  4849                           	
  4850                           l1956:	
  4851  0004'                    	movf	((___lwdiv@divisor)^080h),w
  4852  0004' 0800'              iorwf	((___lwdiv@divisor+1)^080h),w
  4853  0005' 0400'              	btfsc	status,2
  4854  0006' 1903               	goto	u1611
  4855  0007' 2800'              	goto	u1610
  4856  0008' 2800'              u1611:
  4857  0009'                    	goto	l1976
  4858  0009' 2800'              u1610:
  4859  000A'                    	line	15
  4860                           	
  4861                           l1958:	
  4862  000A'                    	clrf	(___lwdiv@counter)^080h
  4863  000A' 0180'              	incf	(___lwdiv@counter)^080h,f
  4864  000B' 0A80'              	line	16
  4865                           	goto	l1964
  4866  000C' 2800'              	
  4867                           l726:	
  4868  000D'                    	line	17
  4869                           	
  4870                           l1960:	
  4871  000D'                    	movlw	01h
  4872  000D' 3001               	
  4873                           u1625:
  4874  000E'                    	clrc
  4875  000E' 1003               	rlf	(___lwdiv@divisor)^080h,f
  4876  000F' 0D80'              	rlf	(___lwdiv@divisor+1)^080h,f
  4877  0010' 0D80'              	addlw	-1
  4878  0011' 3EFF               	skipz
  4879  0012' 1D03               	goto	u1625
  4880  0013' 2800'              	line	18
  4881                           	
  4882                           l1962:	
  4883  0014'                    	movlw	low(01h)
  4884  0014' 3001               	movwf	(??___lwdiv+0)^080h+0
  4885  0015' 0080'              	movf	(??___lwdiv+0)^080h+0,w
  4886  0016' 0800'              	addwf	(___lwdiv@counter)^080h,f
  4887  0017' 0780'              	goto	l1964
  4888  0018' 2800'              	line	19
  4889                           	
  4890                           l725:	
  4891  0019'                    	line	16
  4892                           	
  4893                           l1964:	
  4894  0019'                    	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  4895  0019' 1F80'              	goto	u1631
  4896  001A' 2800'              	goto	u1630
  4897  001B' 2800'              u1631:
  4898  001C'                    	goto	l1960
  4899  001C' 2800'              u1630:
  4900  001D'                    	goto	l1966
  4901  001D' 2800'              	
  4902                           l727:	
  4903  001E'                    	goto	l1966
  4904  001E' 2800'              	line	20
  4905                           	
  4906                           l728:	
  4907  001F'                    	line	21
  4908                           	
  4909                           l1966:	
  4910  001F'                    	movlw	01h
  4911  001F' 3001               	
  4912                           u1645:
  4913  0020'                    	clrc
  4914  0020' 1003               	rlf	(___lwdiv@quotient)^080h,f
  4915  0021' 0D80'              	rlf	(___lwdiv@quotient+1)^080h,f
  4916  0022' 0D80'              	addlw	-1
  4917  0023' 3EFF               	skipz
  4918  0024' 1D03               	goto	u1645
  4919  0025' 2800'              	line	22
  4920                           	movf	(___lwdiv@divisor+1)^080h,w
  4921  0026' 0800'              	subwf	(___lwdiv@dividend+1)^080h,w
  4922  0027' 0200'              	skipz
  4923  0028' 1D03               	goto	u1655
  4924  0029' 2800'              	movf	(___lwdiv@divisor)^080h,w
  4925  002A' 0800'              	subwf	(___lwdiv@dividend)^080h,w
  4926  002B' 0200'              u1655:
  4927  002C'                    	skipc
  4928  002C' 1C03               	goto	u1651
  4929  002D' 2800'              	goto	u1650
  4930  002E' 2800'              u1651:
  4931  002F'                    	goto	l1972
  4932  002F' 2800'              u1650:
  4933  0030'                    	line	23
  4934                           	
  4935                           l1968:	
  4936  0030'                    	movf	(___lwdiv@divisor)^080h,w
  4937  0030' 0800'              	subwf	(___lwdiv@dividend)^080h,f
  4938  0031' 0280'              	movf	(___lwdiv@divisor+1)^080h,w
  4939  0032' 0800'              	skipc
  4940  0033' 1C03               	decf	(___lwdiv@dividend+1)^080h,f
  4941  0034' 0380'              	subwf	(___lwdiv@dividend+1)^080h,f
  4942  0035' 0280'              	line	24
  4943                           	
  4944                           l1970:	
  4945  0036'                    	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  4946  0036' 1400'              	goto	l1972
  4947  0037' 2800'              	line	25
  4948                           	
  4949                           l729:	
  4950  0038'                    	line	26
  4951                           	
  4952                           l1972:	
  4953  0038'                    	movlw	01h
  4954  0038' 3001               	
  4955                           u1665:
  4956  0039'                    	clrc
  4957  0039' 1003               	rrf	(___lwdiv@divisor+1)^080h,f
  4958  003A' 0C80'              	rrf	(___lwdiv@divisor)^080h,f
  4959  003B' 0C80'              	addlw	-1
  4960  003C' 3EFF               	skipz
  4961  003D' 1D03               	goto	u1665
  4962  003E' 2800'              	line	27
  4963                           	
  4964                           l1974:	
  4965  003F'                    	movlw	01h
  4966  003F' 3001               	subwf	(___lwdiv@counter)^080h,f
  4967  0040' 0280'              	btfss	status,2
  4968  0041' 1D03               	goto	u1671
  4969  0042' 2800'              	goto	u1670
  4970  0043' 2800'              u1671:
  4971  0044'                    	goto	l1966
  4972  0044' 2800'              u1670:
  4973  0045'                    	goto	l1976
  4974  0045' 2800'              	
  4975                           l730:	
  4976  0046'                    	goto	l1976
  4977  0046' 2800'              	line	28
  4978                           	
  4979                           l724:	
  4980  0047'                    	line	29
  4981                           	
  4982                           l1976:	
  4983  0047'                    	movf	(___lwdiv@quotient+1)^080h,w
  4984  0047' 0800'              	movwf	(?___lwdiv+1)^080h
  4985  0048' 0080'              	movf	(___lwdiv@quotient)^080h,w
  4986  0049' 0800'              	movwf	(?___lwdiv)^080h
  4987  004A' 0080'              	goto	l731
  4988  004B' 2800'              	
  4989                           l1978:	
  4990  004C'                    	line	30
  4991                           	
  4992                           l731:	
  4993  004C'                    	return
  4994  004C' 0008               	opt stack 0
  4995                           GLOBAL	__end_of___lwdiv
  4996                           	__end_of___lwdiv:
  4997  004D'                    	signat	___lwdiv,8314
  4998                           	global	_display_write_start
  4999                           
  5000 ;; *************** function _display_write_start *****************
  5001 ;; Defined at:
  5002 ;;		line 170 in file "Display.c"
  5003 ;; Parameters:    Size  Location     Type
  5004 ;;		None
  5005 ;; Auto vars:     Size  Location     Type
  5006 ;;		None
  5007 ;; Return value:  Size  Location     Type
  5008 ;;                  1    wreg      void 
  5009 ;; Registers used:
  5010 ;;		wreg, status,2, status,0
  5011 ;; Tracked objects:
  5012 ;;		On entry : 0/0
  5013 ;;		On exit  : 0/0
  5014 ;;		Unchanged: 0/0
  5015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5016 ;;      Params:         0       0       0       0       0
  5017 ;;      Locals:         0       0       0       0       0
  5018 ;;      Temps:          0       0       0       0       0
  5019 ;;      Totals:         0       0       0       0       0
  5020 ;;Total ram usage:        0 bytes
  5021 ;; Hardware stack levels used:    1
  5022 ;; Hardware stack levels required when called:    4
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_update_input
  5027 ;;		_update_volume
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5031                           	file	"Display.c"
  5032                           	line	170
  5033                           global __ptext12
  5034                           __ptext12:	;psect for function _display_write_start
  5035  0000'                    psect	text12
  5036                           	file	"Display.c"
  5037                           	line	170
  5038                           	global	__size_of_display_write_start
  5039                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  5040  000F                     	
  5041                           _display_write_start:	
  5042  0000'                    ;incstack = 0
  5043                           	opt	stack 2
  5044                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  5045                           	line	172
  5046                           	
  5047                           l2424:	
  5048  0000'                    ;Display.c: 172:     if (_selectedDisplay == 0) {
  5049                           	bsf	status, 5	;RP0=1, select bank1
  5050  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  5051  0001' 1303               	movf	((__selectedDisplay)^080h),w
  5052  0002' 0800'              	btfss	status,2
  5053  0003' 1D03               	goto	u2571
  5054  0004' 2800'              	goto	u2570
  5055  0005' 2800'              u2571:
  5056  0006'                    	goto	l164
  5057  0006' 2800'              u2570:
  5058  0007'                    	line	173
  5059                           	
  5060                           l2426:	
  5061  0007'                    ;Display.c: 173:         PORTCbits.RC4 = 0;
  5062                           	bcf	status, 5	;RP0=0, select bank0
  5063  0007' 1283               	bcf	status, 6	;RP1=0, select bank0
  5064  0008' 1303               	bcf	(7),4	;volatile
  5065  0009' 1207               	line	174
  5066                           ;Display.c: 174:         return;
  5067                           	goto	l165
  5068  000A' 2800'              	line	175
  5069                           ;Display.c: 175:     }
  5070                           	
  5071                           l164:	
  5072  000B'                    	line	177
  5073                           ;Display.c: 177:     PORTDbits.RD4 = 0;
  5074                           	bcf	status, 5	;RP0=0, select bank0
  5075  000B' 1283               	bcf	status, 6	;RP1=0, select bank0
  5076  000C' 1303               	bcf	(8),4	;volatile
  5077  000D' 1208               	line	178
  5078                           	
  5079                           l165:	
  5080  000E'                    	return
  5081  000E' 0008               	opt stack 0
  5082                           GLOBAL	__end_of_display_write_start
  5083                           	__end_of_display_write_start:
  5084  000F'                    	signat	_display_write_start,89
  5085                           	global	_display_write_end
  5086                           
  5087 ;; *************** function _display_write_end *****************
  5088 ;; Defined at:
  5089 ;;		line 181 in file "Display.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2, status,0
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5103 ;;      Params:         0       0       0       0       0
  5104 ;;      Locals:         0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0
  5106 ;;      Totals:         0       0       0       0       0
  5107 ;;Total ram usage:        0 bytes
  5108 ;; Hardware stack levels used:    1
  5109 ;; Hardware stack levels required when called:    4
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_update_input
  5114 ;;		_update_volume
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5118                           	line	181
  5119                           global __ptext13
  5120                           __ptext13:	;psect for function _display_write_end
  5121  0000'                    psect	text13
  5122                           	file	"Display.c"
  5123                           	line	181
  5124                           	global	__size_of_display_write_end
  5125                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  5126  000F                     	
  5127                           _display_write_end:	
  5128  0000'                    ;incstack = 0
  5129                           	opt	stack 2
  5130                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  5131                           	line	183
  5132                           	
  5133                           l2452:	
  5134  0000'                    ;Display.c: 183:     if (_selectedDisplay == 0) {
  5135                           	bsf	status, 5	;RP0=1, select bank1
  5136  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  5137  0001' 1303               	movf	((__selectedDisplay)^080h),w
  5138  0002' 0800'              	btfss	status,2
  5139  0003' 1D03               	goto	u2621
  5140  0004' 2800'              	goto	u2620
  5141  0005' 2800'              u2621:
  5142  0006'                    	goto	l168
  5143  0006' 2800'              u2620:
  5144  0007'                    	line	184
  5145                           	
  5146                           l2454:	
  5147  0007'                    ;Display.c: 184:         PORTCbits.RC4 = 1;
  5148                           	bcf	status, 5	;RP0=0, select bank0
  5149  0007' 1283               	bcf	status, 6	;RP1=0, select bank0
  5150  0008' 1303               	bsf	(7),4	;volatile
  5151  0009' 1607               	line	185
  5152                           ;Display.c: 185:         return;
  5153                           	goto	l169
  5154  000A' 2800'              	line	186
  5155                           ;Display.c: 186:     }
  5156                           	
  5157                           l168:	
  5158  000B'                    	line	188
  5159                           ;Display.c: 188:     PORTDbits.RD4 = 1;
  5160                           	bcf	status, 5	;RP0=0, select bank0
  5161  000B' 1283               	bcf	status, 6	;RP1=0, select bank0
  5162  000C' 1303               	bsf	(8),4	;volatile
  5163  000D' 1608               	line	189
  5164                           	
  5165                           l169:	
  5166  000E'                    	return
  5167  000E' 0008               	opt stack 0
  5168                           GLOBAL	__end_of_display_write_end
  5169                           	__end_of_display_write_end:
  5170  000F'                    	signat	_display_write_end,89
  5171                           	global	_config
  5172                           
  5173 ;; *************** function _config *****************
  5174 ;; Defined at:
  5175 ;;		line 3 in file "Config.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;		None
  5178 ;; Auto vars:     Size  Location     Type
  5179 ;;		None
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         0       0       0       0       0
  5190 ;;      Locals:         0       0       0       0       0
  5191 ;;      Temps:          0       0       3       0       0
  5192 ;;      Totals:         0       0       3       0       0
  5193 ;;Total ram usage:        3 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; Hardware stack levels required when called:    6
  5196 ;; This function calls:
  5197 ;;		_display_init
  5198 ;;		_init_adc
  5199 ;;		_init_remote
  5200 ;; This function is called by:
  5201 ;;		_main
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5205                           	file	"Config.c"
  5206                           	line	3
  5207                           global __ptext14
  5208                           __ptext14:	;psect for function _config
  5209  0000'                    psect	text14
  5210                           	file	"Config.c"
  5211                           	line	3
  5212                           	global	__size_of_config
  5213                           	__size_of_config	equ	__end_of_config-_config
  5214  006E                     	
  5215                           _config:	
  5216  0000'                    ;incstack = 0
  5217                           	opt	stack 1
  5218                           ; Regs used in _config: [allreg]
  5219                           	line	5
  5220                           	
  5221                           l2562:	
  5222  0000'                    ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  5223                           	bsf	status, 5	;RP0=1, select bank1
  5224  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  5225  0001' 1303               	movf	(143)^080h,w	;volatile
  5226  0002' 080F               	andlw	not (((1<<3)-1)<<4)
  5227  0003' 398F               	iorlw	(06h & ((1<<3)-1))<<4
  5228  0004' 3860               	movwf	(143)^080h	;volatile
  5229  0005' 008F               	line	6
  5230                           	
  5231                           l2564:	
  5232  0006'                    ;Config.c: 6:     OSCCONbits.OSTS = 0;
  5233                           	bcf	(143)^080h,3	;volatile
  5234  0006' 118F               	line	13
  5235                           	
  5236                           l2566:	
  5237  0007'                    ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  5238                           	bcf	(133)^080h,0	;volatile
  5239  0007' 1005               	line	14
  5240                           	
  5241                           l2568:	
  5242  0008'                    ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  5243                           	bcf	(133)^080h,1	;volatile
  5244  0008' 1085               	line	15
  5245                           	
  5246                           l2570:	
  5247  0009'                    ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  5248                           	bcf	(133)^080h,2	;volatile
  5249  0009' 1105               	line	16
  5250                           	
  5251                           l2572:	
  5252  000A'                    ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  5253                           	bcf	(133)^080h,3	;volatile
  5254  000A' 1185               	line	18
  5255                           	
  5256                           l2574:	
  5257  000B'                    ;Config.c: 18:     PORTA = 0x0F;
  5258                           	movlw	low(0Fh)
  5259  000B' 300F               	bcf	status, 5	;RP0=0, select bank0
  5260  000C' 1283               	bcf	status, 6	;RP1=0, select bank0
  5261  000D' 1303               	movwf	(5)	;volatile
  5262  000E' 0085               	line	25
  5263                           	
  5264                           l2576:	
  5265  000F'                    ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  5266                           	bsf	status, 5	;RP0=1, select bank1
  5267  000F' 1683               	bcf	status, 6	;RP1=0, select bank1
  5268  0010' 1303               	bsf	(134)^080h,4	;volatile
  5269  0011' 1606               	line	26
  5270                           	
  5271                           l2578:	
  5272  0012'                    ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  5273                           	bsf	(134)^080h,5	;volatile
  5274  0012' 1686               	line	28
  5275                           	
  5276                           l2580:	
  5277  0013'                    ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  5278                           	bsf	status, 5	;RP0=1, select bank3
  5279  0013' 1683               	bsf	status, 6	;RP1=1, select bank3
  5280  0014' 1703               	bcf	(393)^0180h,3	;volatile
  5281  0015' 1189               	line	29
  5282                           	
  5283                           l2582:	
  5284  0016'                    ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  5285                           	bcf	(393)^0180h,5	;volatile
  5286  0016' 1289               	line	35
  5287                           	
  5288                           l2584:	
  5289  0017'                    ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  5290                           	bsf	status, 5	;RP0=1, select bank1
  5291  0017' 1683               	bcf	status, 6	;RP1=0, select bank1
  5292  0018' 1303               	bsf	(137)^080h,2	;volatile
  5293  0019' 1509               	line	36
  5294                           	
  5295                           l2586:	
  5296  001A'                    ;Config.c: 36:     ANSELbits.ANS7 = 1;
  5297                           	bsf	status, 5	;RP0=1, select bank3
  5298  001A' 1683               	bsf	status, 6	;RP1=1, select bank3
  5299  001B' 1703               	bsf	(392)^0180h,7	;volatile
  5300  001C' 1788               	line	41
  5301                           	
  5302                           l2588:	
  5303  001D'                    ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  5304                           	bsf	status, 5	;RP0=1, select bank1
  5305  001D' 1683               	bcf	status, 6	;RP1=0, select bank1
  5306  001E' 1303               	bsf	(134)^080h,0	;volatile
  5307  001F' 1406               	line	42
  5308                           	
  5309                           l2590:	
  5310  0020'                    ;Config.c: 42:     ANSELHbits.ANS12 = 0;
  5311                           	bsf	status, 5	;RP0=1, select bank3
  5312  0020' 1683               	bsf	status, 6	;RP1=1, select bank3
  5313  0021' 1703               	bcf	(393)^0180h,4	;volatile
  5314  0022' 1209               	line	48
  5315                           	
  5316                           l2592:	
  5317  0023'                    ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  5318                           	bsf	status, 5	;RP0=1, select bank1
  5319  0023' 1683               	bcf	status, 6	;RP1=0, select bank1
  5320  0024' 1303               	bcf	(135)^080h,0	;volatile
  5321  0025' 1007               	line	49
  5322                           	
  5323                           l2594:	
  5324  0026'                    ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  5325                           	bcf	(135)^080h,1	;volatile
  5326  0026' 1087               	line	51
  5327                           	
  5328                           l2596:	
  5329  0027'                    ;Config.c: 51:     PORTC = 0x00;
  5330                           	bcf	status, 5	;RP0=0, select bank0
  5331  0027' 1283               	bcf	status, 6	;RP1=0, select bank0
  5332  0028' 1303               	clrf	(7)	;volatile
  5333  0029' 0187               	line	57
  5334                           	
  5335                           l2598:	
  5336  002A'                    ;Config.c: 57:     display_init();
  5337                           	fcall	_display_init
  5338  002A' 120A' 118A' 2000' 120A' 118A' 	line	60
  5339                           	
  5340                           l2600:	
  5341  002F'                    ;Config.c: 60:     init_adc();
  5342                           	fcall	_init_adc
  5343  002F' 120A' 118A' 2000' 120A' 118A' 	line	62
  5344                           	
  5345                           l2602:	
  5346  0034'                    ;Config.c: 62:     init_remote();
  5347                           	fcall	_init_remote
  5348  0034' 120A' 118A' 2000' 120A' 118A' 	line	70
  5349                           	
  5350                           l2604:	
  5351  0039'                    ;Config.c: 70:     IOCBbits.IOCB0 = 1;
  5352                           	bsf	status, 5	;RP0=1, select bank1
  5353  0039' 1683               	bcf	status, 6	;RP1=0, select bank1
  5354  003A' 1303               	bsf	(150)^080h,0	;volatile
  5355  003B' 1416               	line	71
  5356                           	
  5357                           l2606:	
  5358  003C'                    ;Config.c: 71:     IOCBbits.IOCB4 = 1;
  5359                           	bsf	(150)^080h,4	;volatile
  5360  003C' 1616               	line	72
  5361                           	
  5362                           l2608:	
  5363  003D'                    ;Config.c: 72:     IOCBbits.IOCB5 = 1;
  5364                           	bsf	(150)^080h,5	;volatile
  5365  003D' 1696               	line	74
  5366                           	
  5367                           l2610:	
  5368  003E'                    ;Config.c: 74:     INTCONbits.PEIE = 1;
  5369                           	bsf	(11),6	;volatile
  5370  003E' 170B               	line	75
  5371                           	
  5372                           l2612:	
  5373  003F'                    ;Config.c: 75:     INTCONbits.RBIE = 1;
  5374                           	bsf	(11),3	;volatile
  5375  003F' 158B               	line	77
  5376                           	
  5377                           l2614:	
  5378  0040'                    ;Config.c: 77:     INTCONbits.GIE = 1;
  5379                           	bsf	(11),7	;volatile
  5380  0040' 178B               	line	86
  5381                           	
  5382                           l2616:	
  5383  0041'                    ;Config.c: 86:     _inputUpdateRequired = 1;
  5384                           	bcf	status, 5	;RP0=0, select bank0
  5385  0041' 1283               	bcf	status, 6	;RP1=0, select bank0
  5386  0042' 1303               	clrf	(__inputUpdateRequired)
  5387  0043' 018A'              	incf	(__inputUpdateRequired),f
  5388  0044' 0A8A'              	line	87
  5389                           	
  5390                           l2618:	
  5391  0045'                    ;Config.c: 87:     _selectedInput = 0;
  5392                           	bsf	status, 5	;RP0=1, select bank1
  5393  0045' 1683               	bcf	status, 6	;RP1=0, select bank1
  5394  0046' 1303               	clrf	(__selectedInput)^080h
  5395  0047' 0180'              	clrf	(__selectedInput+1)^080h
  5396  0048' 0180'              	line	88
  5397                           	
  5398                           l2620:	
  5399  0049'                    ;Config.c: 88:     _lastA = PORTBbits.RB4;
  5400                           	bcf	status, 5	;RP0=0, select bank0
  5401  0049' 1283               	bcf	status, 6	;RP1=0, select bank0
  5402  004A' 1303               	swapf	(6),w	;volatile
  5403  004B' 0E06               	andlw	(1<<1)-1
  5404  004C' 3901               	bsf	status, 5	;RP0=1, select bank1
  5405  004D' 1683               	bcf	status, 6	;RP1=0, select bank1
  5406  004E' 1303               	movwf	(??_config+0)^080h+0
  5407  004F' 0080'              	clrf	(??_config+0)^080h+0+1
  5408  0050' 0181'              	movf	0+(??_config+0)^080h+0,w
  5409  0051' 0800'              	bcf	status, 5	;RP0=0, select bank0
  5410  0052' 1283               	bcf	status, 6	;RP1=0, select bank0
  5411  0053' 1303               	movwf	(__lastA)
  5412  0054' 0088'              	bsf	status, 5	;RP0=1, select bank1
  5413  0055' 1683               	bcf	status, 6	;RP1=0, select bank1
  5414  0056' 1303               	movf	1+(??_config+0)^080h+0,w
  5415  0057' 0800'              	bcf	status, 5	;RP0=0, select bank0
  5416  0058' 1283               	bcf	status, 6	;RP1=0, select bank0
  5417  0059' 1303               	movwf	(__lastA+1)
  5418  005A' 0089'              	line	89
  5419                           	
  5420                           l2622:	
  5421  005B'                    ;Config.c: 89:     _lastB = PORTBbits.RB5;
  5422                           	swapf	(6),w	;volatile
  5423  005B' 0E06               	bsf	status, 5	;RP0=1, select bank1
  5424  005C' 1683               	bcf	status, 6	;RP1=0, select bank1
  5425  005D' 1303               	movwf	(??_config+0)^080h+0
  5426  005E' 0080'              	rrf	(??_config+0)^080h+0,w
  5427  005F' 0C00'              	andlw	(1<<1)-1
  5428  0060' 3901               	movwf	(??_config+1)^080h+0
  5429  0061' 0080'              	clrf	(??_config+1)^080h+0+1
  5430  0062' 0181'              	movf	0+(??_config+1)^080h+0,w
  5431  0063' 0800'              	bcf	status, 5	;RP0=0, select bank0
  5432  0064' 1283               	bcf	status, 6	;RP1=0, select bank0
  5433  0065' 1303               	movwf	(__lastB)
  5434  0066' 0086'              	bsf	status, 5	;RP0=1, select bank1
  5435  0067' 1683               	bcf	status, 6	;RP1=0, select bank1
  5436  0068' 1303               	movf	1+(??_config+1)^080h+0,w
  5437  0069' 0800'              	bcf	status, 5	;RP0=0, select bank0
  5438  006A' 1283               	bcf	status, 6	;RP1=0, select bank0
  5439  006B' 1303               	movwf	(__lastB+1)
  5440  006C' 0087'              	line	90
  5441                           	
  5442                           l268:	
  5443  006D'                    	return
  5444  006D' 0008               	opt stack 0
  5445                           GLOBAL	__end_of_config
  5446                           	__end_of_config:
  5447  006E'                    	signat	_config,89
  5448                           	global	_init_remote
  5449                           	global	_init_adc
  5450                           
  5451 ;; *************** function _init_adc *****************
  5452 ;; Defined at:
  5453 ;;		line 5 in file "Volume.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;		None
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;		None
  5458 ;; Return value:  Size  Location     Type
  5459 ;;                  1    wreg      void 
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5467 ;;      Params:         0       0       0       0       0
  5468 ;;      Locals:         0       0       0       0       0
  5469 ;;      Temps:          0       0       0       0       0
  5470 ;;      Totals:         0       0       0       0       0
  5471 ;;Total ram usage:        0 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    4
  5474 ;; This function calls:
  5475 ;;		Nothing
  5476 ;; This function is called by:
  5477 ;;		_config
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5481                           	file	"Volume.c"
  5482                           	line	5
  5483                           global __ptext15
  5484                           __ptext15:	;psect for function _init_adc
  5485  0000'                    psect	text15
  5486                           	file	"Volume.c"
  5487                           	line	5
  5488                           	global	__size_of_init_adc
  5489                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5490  0017                     	
  5491                           _init_adc:	
  5492  0000'                    ;incstack = 0
  5493                           	opt	stack 2
  5494                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  5495                           	line	7
  5496                           	
  5497                           l2456:	
  5498  0000'                    ;Volume.c: 7:     ADCON0bits.CHS = 0b0111;
  5499                           	bcf	status, 5	;RP0=0, select bank0
  5500  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  5501  0001' 1303               	movf	(31),w	;volatile
  5502  0002' 081F               	andlw	not (((1<<4)-1)<<2)
  5503  0003' 39C3               	iorlw	(07h & ((1<<4)-1))<<2
  5504  0004' 381C               	movwf	(31)	;volatile
  5505  0005' 009F               	line	8
  5506                           ;Volume.c: 8:     ADCON0bits.ADCS = 0b001;
  5507                           	movf	(31),w	;volatile
  5508  0006' 081F               	andlw	not (((1<<2)-1)<<6)
  5509  0007' 393F               	iorlw	(01h & ((1<<2)-1))<<6
  5510  0008' 3840               	movwf	(31)	;volatile
  5511  0009' 009F               	line	9
  5512                           	
  5513                           l2458:	
  5514  000A'                    ;Volume.c: 9:     ADCON1bits.ADFM = 1;
  5515                           	bsf	status, 5	;RP0=1, select bank1
  5516  000A' 1683               	bcf	status, 6	;RP1=0, select bank1
  5517  000B' 1303               	bsf	(159)^080h,7	;volatile
  5518  000C' 179F               	line	11
  5519                           	
  5520                           l2460:	
  5521  000D'                    ;Volume.c: 11:     PIR1bits.ADIF = 0;
  5522                           	bcf	status, 5	;RP0=0, select bank0
  5523  000D' 1283               	bcf	status, 6	;RP1=0, select bank0
  5524  000E' 1303               	bcf	(12),6	;volatile
  5525  000F' 130C               	line	12
  5526                           	
  5527                           l2462:	
  5528  0010'                    ;Volume.c: 12:     PIE1bits.ADIE = 1;
  5529                           	bsf	status, 5	;RP0=1, select bank1
  5530  0010' 1683               	bcf	status, 6	;RP1=0, select bank1
  5531  0011' 1303               	bsf	(140)^080h,6	;volatile
  5532  0012' 170C               	line	14
  5533                           	
  5534                           l2464:	
  5535  0013'                    ;Volume.c: 14:     ADCON0bits.ADON = 1;
  5536                           	bcf	status, 5	;RP0=0, select bank0
  5537  0013' 1283               	bcf	status, 6	;RP1=0, select bank0
  5538  0014' 1303               	bsf	(31),0	;volatile
  5539  0015' 141F               	line	15
  5540                           	
  5541                           l297:	
  5542  0016'                    	return
  5543  0016' 0008               	opt stack 0
  5544                           GLOBAL	__end_of_init_adc
  5545                           	__end_of_init_adc:
  5546  0017'                    	signat	_init_adc,89
  5547                           	global	_display_init
  5548                           
  5549 ;; *************** function _display_init *****************
  5550 ;; Defined at:
  5551 ;;		line 3 in file "Display.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;		None
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, status,2, status,0, pclath, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5565 ;;      Params:         0       0       0       0       0
  5566 ;;      Locals:         0       0       0       0       0
  5567 ;;      Temps:          0       0       0       0       0
  5568 ;;      Totals:         0       0       0       0       0
  5569 ;;Total ram usage:        0 bytes
  5570 ;; Hardware stack levels used:    1
  5571 ;; Hardware stack levels required when called:    5
  5572 ;; This function calls:
  5573 ;;		_spiWrite
  5574 ;; This function is called by:
  5575 ;;		_config
  5576 ;; This function uses a non-reentrant model
  5577 ;;
  5578                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5579                           	file	"Display.c"
  5580                           	line	3
  5581                           global __ptext16
  5582                           __ptext16:	;psect for function _display_init
  5583  0000'                    psect	text16
  5584                           	file	"Display.c"
  5585                           	line	3
  5586                           	global	__size_of_display_init
  5587                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  5588  004E                     	
  5589                           _display_init:	
  5590  0000'                    ;incstack = 0
  5591                           	opt	stack 1
  5592                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  5593                           	line	7
  5594                           	
  5595                           l2360:	
  5596  0000'                    ;Display.c: 7:     SSPCON = 0b00100000;
  5597                           	movlw	low(020h)
  5598  0000' 3020               	bcf	status, 5	;RP0=0, select bank0
  5599  0001' 1283               	bcf	status, 6	;RP1=0, select bank0
  5600  0002' 1303               	movwf	(20)	;volatile
  5601  0003' 0094               	line	8
  5602                           ;Display.c: 8:     SSPSTAT = 0b01000000;
  5603                           	movlw	low(040h)
  5604  0004' 3040               	bsf	status, 5	;RP0=1, select bank1
  5605  0005' 1683               	bcf	status, 6	;RP1=0, select bank1
  5606  0006' 1303               	movwf	(148)^080h	;volatile
  5607  0007' 0094               	line	11
  5608                           	
  5609                           l2362:	
  5610  0008'                    ;Display.c: 11:     TRISD = 0x00;
  5611                           	clrf	(136)^080h	;volatile
  5612  0008' 0188               	line	12
  5613                           	
  5614                           l2364:	
  5615  0009'                    ;Display.c: 12:     TRISC = 0x00;
  5616                           	clrf	(135)^080h	;volatile
  5617  0009' 0187               	line	15
  5618                           	
  5619                           l2366:	
  5620  000A'                    ;Display.c: 15:     PORTDbits.RD2 = 1;
  5621                           	bcf	status, 5	;RP0=0, select bank0
  5622  000A' 1283               	bcf	status, 6	;RP1=0, select bank0
  5623  000B' 1303               	bsf	(8),2	;volatile
  5624  000C' 1508               	line	16
  5625                           	
  5626                           l2368:	
  5627  000D'                    ;Display.c: 16:     PORTDbits.RD6 = 0;
  5628                           	bcf	(8),6	;volatile
  5629  000D' 1308               	line	17
  5630                           	
  5631                           l2370:	
  5632  000E'                    ;Display.c: 17:     PORTDbits.RD4 = 1;
  5633                           	bsf	(8),4	;volatile
  5634  000E' 1608               	line	18
  5635                           	
  5636                           l2372:	
  5637  000F'                    ;Display.c: 18:     PORTCbits.RC3 = 0;
  5638                           	bcf	(7),3	;volatile
  5639  000F' 1187               	line	21
  5640                           	
  5641                           l2374:	
  5642  0010'                    ;Display.c: 21:     PORTDbits.RD7 = 1;
  5643                           	bsf	(8),7	;volatile
  5644  0010' 1788               	line	22
  5645                           	
  5646                           l2376:	
  5647  0011'                    ;Display.c: 22:     PORTDbits.RD4 = 0;
  5648                           	bcf	(8),4	;volatile
  5649  0011' 1208               	line	23
  5650                           	
  5651                           l2378:	
  5652  0012'                    ;Display.c: 23:     spiWrite(0b01001111);
  5653                           	movlw	low(04Fh)
  5654  0012' 304F               	fcall	_spiWrite
  5655  0013' 120A' 118A' 2000' 120A' 118A' 	line	24
  5656                           	
  5657                           l2380:	
  5658  0018'                    ;Display.c: 24:     PORTDbits.RD4 = 1;
  5659                           	bcf	status, 5	;RP0=0, select bank0
  5660  0018' 1283               	bcf	status, 6	;RP1=0, select bank0
  5661  0019' 1303               	bsf	(8),4	;volatile
  5662  001A' 1608               	line	27
  5663                           	
  5664                           l2382:	
  5665  001B'                    ;Display.c: 27:     PORTDbits.RD7 = 1;
  5666                           	bsf	(8),7	;volatile
  5667  001B' 1788               	line	28
  5668                           	
  5669                           l2384:	
  5670  001C'                    ;Display.c: 28:     PORTDbits.RD4 = 0;
  5671                           	bcf	(8),4	;volatile
  5672  001C' 1208               	line	29
  5673                           	
  5674                           l2386:	
  5675  001D'                    ;Display.c: 29:     spiWrite(0b10000001);
  5676                           	movlw	low(081h)
  5677  001D' 3081               	fcall	_spiWrite
  5678  001E' 120A' 118A' 2000' 120A' 118A' 	line	30
  5679                           	
  5680                           l2388:	
  5681  0023'                    ;Display.c: 30:     PORTDbits.RD4 = 1;
  5682                           	bcf	status, 5	;RP0=0, select bank0
  5683  0023' 1283               	bcf	status, 6	;RP1=0, select bank0
  5684  0024' 1303               	bsf	(8),4	;volatile
  5685  0025' 1608               	line	34
  5686                           	
  5687                           l2390:	
  5688  0026'                    ;Display.c: 34:     PORTDbits.RD7 = 0;
  5689                           	bcf	(8),7	;volatile
  5690  0026' 1388               	line	38
  5691                           	
  5692                           l2392:	
  5693  0027'                    ;Display.c: 38:     PORTCbits.RC2 = 1;
  5694                           	bsf	(7),2	;volatile
  5695  0027' 1507               	line	39
  5696                           	
  5697                           l2394:	
  5698  0028'                    ;Display.c: 39:     PORTCbits.RC6 = 0;
  5699                           	bcf	(7),6	;volatile
  5700  0028' 1307               	line	40
  5701                           	
  5702                           l2396:	
  5703  0029'                    ;Display.c: 40:     PORTCbits.RC4 = 1;
  5704                           	bsf	(7),4	;volatile
  5705  0029' 1607               	line	41
  5706                           	
  5707                           l2398:	
  5708  002A'                    ;Display.c: 41:     PORTCbits.RC3 = 0;
  5709                           	bcf	(7),3	;volatile
  5710  002A' 1187               	line	43
  5711                           	
  5712                           l2400:	
  5713  002B'                    ;Display.c: 43:     PORTCbits.RC7 = 1;
  5714                           	bsf	(7),7	;volatile
  5715  002B' 1787               	line	44
  5716                           	
  5717                           l2402:	
  5718  002C'                    ;Display.c: 44:     PORTCbits.RC4 = 0;
  5719                           	bcf	(7),4	;volatile
  5720  002C' 1207               	line	45
  5721                           	
  5722                           l2404:	
  5723  002D'                    ;Display.c: 45:     spiWrite(0b01001111);
  5724                           	movlw	low(04Fh)
  5725  002D' 304F               	fcall	_spiWrite
  5726  002E' 120A' 118A' 2000' 120A' 118A' 	line	47
  5727                           	
  5728                           l2406:	
  5729  0033'                    ;Display.c: 47:     PORTCbits.RC4 = 1;
  5730                           	bcf	status, 5	;RP0=0, select bank0
  5731  0033' 1283               	bcf	status, 6	;RP1=0, select bank0
  5732  0034' 1303               	bsf	(7),4	;volatile
  5733  0035' 1607               	line	49
  5734                           	
  5735                           l2408:	
  5736  0036'                    ;Display.c: 49:     PORTCbits.RC7 = 1;
  5737                           	bsf	(7),7	;volatile
  5738  0036' 1787               	line	50
  5739                           	
  5740                           l2410:	
  5741  0037'                    ;Display.c: 50:     PORTCbits.RC4 = 0;
  5742                           	bcf	(7),4	;volatile
  5743  0037' 1207               	line	52
  5744                           	
  5745                           l2412:	
  5746  0038'                    ;Display.c: 52:     spiWrite(0b10000001);
  5747                           	movlw	low(081h)
  5748  0038' 3081               	fcall	_spiWrite
  5749  0039' 120A' 118A' 2000' 120A' 118A' 	line	53
  5750                           	
  5751                           l2414:	
  5752  003E'                    ;Display.c: 53:     PORTCbits.RC4 = 1;
  5753                           	bcf	status, 5	;RP0=0, select bank0
  5754  003E' 1283               	bcf	status, 6	;RP1=0, select bank0
  5755  003F' 1303               	bsf	(7),4	;volatile
  5756  0040' 1607               	line	56
  5757                           	
  5758                           l2416:	
  5759  0041'                    ;Display.c: 56:     PORTCbits.RC7 = 0;
  5760                           	bcf	(7),7	;volatile
  5761  0041' 1387               	line	59
  5762                           	
  5763                           l2418:	
  5764  0042'                    ;Display.c: 59:     _selectedDisplay = 0;
  5765                           	bsf	status, 5	;RP0=1, select bank1
  5766  0042' 1683               	bcf	status, 6	;RP1=0, select bank1
  5767  0043' 1303               	clrf	(__selectedDisplay)^080h
  5768  0044' 0180'              	line	60
  5769                           	
  5770                           l2420:	
  5771  0045'                    ;Display.c: 60:     lastVolume = 99;
  5772                           	movlw	063h
  5773  0045' 3063               	movwf	(_lastVolume)^080h
  5774  0046' 0080'              	movlw	0
  5775  0047' 3000               	movwf	((_lastVolume)^080h)+1
  5776  0048' 0081'              	line	61
  5777                           	
  5778                           l2422:	
  5779  0049'                    ;Display.c: 61:     lastInput = 99;
  5780                           	movlw	063h
  5781  0049' 3063               	movwf	(_lastInput)^080h
  5782  004A' 0080'              	movlw	0
  5783  004B' 3000               	movwf	((_lastInput)^080h)+1
  5784  004C' 0081'              	line	63
  5785                           	
  5786                           l120:	
  5787  004D'                    	return
  5788  004D' 0008               	opt stack 0
  5789                           GLOBAL	__end_of_display_init
  5790                           	__end_of_display_init:
  5791  004E'                    	signat	_display_init,89
  5792                           	global	_spiWrite
  5793                           
  5794 ;; *************** function _spiWrite *****************
  5795 ;; Defined at:
  5796 ;;		line 192 in file "Display.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;  data            1    wreg     unsigned char 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  data            1    0[BANK1 ] unsigned char 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5810 ;;      Params:         0       0       0       0       0
  5811 ;;      Locals:         0       0       1       0       0
  5812 ;;      Temps:          0       0       0       0       0
  5813 ;;      Totals:         0       0       1       0       0
  5814 ;;Total ram usage:        1 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    4
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_display_init
  5821 ;;		_write_space
  5822 ;;		_write_font
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5826                           	line	192
  5827                           global __ptext17
  5828                           __ptext17:	;psect for function _spiWrite
  5829  0000'                    psect	text17
  5830                           	file	"Display.c"
  5831                           	line	192
  5832                           	global	__size_of_spiWrite
  5833                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  5834  0010                     	
  5835                           _spiWrite:	
  5836  0000'                    ;incstack = 0
  5837 ;; hardware stack exceeded
  5838                           	opt	stack 0
  5839                           ; Regs used in _spiWrite: [wreg]
  5840                           ;spiWrite@data stored from wreg
  5841                           	bsf	status, 5	;RP0=1, select bank1
  5842  0000' 1683               	bcf	status, 6	;RP1=0, select bank1
  5843  0001' 1303               	movwf	(spiWrite@data)^080h
  5844  0002' 0080'              	line	194
  5845                           	
  5846                           l1902:	
  5847  0003'                    ;Display.c: 192: void spiWrite(char data);Display.c: 193: {;Display.c: 194:     SSPBUF =
                                  data;
  5848                           	movf	(spiWrite@data)^080h,w
  5849  0003' 0800'              	bcf	status, 5	;RP0=0, select bank0
  5850  0004' 1283               	bcf	status, 6	;RP1=0, select bank0
  5851  0005' 1303               	movwf	(19)	;volatile
  5852  0006' 0093               	line	196
  5853                           ;Display.c: 196:     while(!SSPSTATbits.BF);
  5854                           	goto	l172
  5855  0007' 2800'              	
  5856                           l173:	
  5857  0008'                    	
  5858                           l172:	
  5859  0008'                    	bsf	status, 5	;RP0=1, select bank1
  5860  0008' 1683               	bcf	status, 6	;RP1=0, select bank1
  5861  0009' 1303               	btfss	(148)^080h,0	;volatile
  5862  000A' 1C14               	goto	u1481
  5863  000B' 2800'              	goto	u1480
  5864  000C' 2800'              u1481:
  5865  000D'                    	goto	l172
  5866  000D' 2800'              u1480:
  5867  000E'                    	goto	l175
  5868  000E' 2800'              	
  5869                           l174:	
  5870  000F'                    	line	197
  5871                           	
  5872                           l175:	
  5873  000F'                    	return
  5874  000F' 0008               	opt stack 0
  5875                           GLOBAL	__end_of_spiWrite
  5876                           	__end_of_spiWrite:
  5877  0010'                    	signat	_spiWrite,4217
  5878                           	global	_activateSelectedRelay
  5879                           
  5880 ;; *************** function _activateSelectedRelay *****************
  5881 ;; Defined at:
  5882 ;;		line 3 in file "Input.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;		None
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;                  1    wreg      void 
  5889 ;; Registers used:
  5890 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5896 ;;      Params:         0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0
  5899 ;;      Totals:         0       0       0       0       0
  5900 ;;Total ram usage:        0 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    4
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_main
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5910                           	file	"Input.c"
  5911                           	line	3
  5912                           global __ptext18
  5913                           __ptext18:	;psect for function _activateSelectedRelay
  5914  0000'                    psect	text18
  5915                           	file	"Input.c"
  5916                           	line	3
  5917                           	global	__size_of_activateSelectedRelay
  5918                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  5919  0039                     	
  5920                           _activateSelectedRelay:	
  5921  0000'                    ;incstack = 0
  5922                           	opt	stack 3
  5923                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  5924                           	line	5
  5925                           	
  5926                           l2664:	
  5927  0000'                    ;Input.c: 5:     if (!_inputUpdateRequired) return;
  5928                           	bcf	status, 5	;RP0=0, select bank0
  5929  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  5930  0001' 1303               	movf	((__inputUpdateRequired)),w
  5931  0002' 080A'              	btfss	status,2
  5932  0003' 1D03               	goto	u2751
  5933  0004' 2800'              	goto	u2750
  5934  0005' 2800'              u2751:
  5935  0006'                    	goto	l2668
  5936  0006' 2800'              u2750:
  5937  0007'                    	goto	l193
  5938  0007' 2800'              	
  5939                           l2666:	
  5940  0008'                    	goto	l193
  5941  0008' 2800'              	
  5942                           l192:	
  5943  0009'                    	line	7
  5944                           	
  5945                           l2668:	
  5946  0009'                    ;Input.c: 7:     PORTA = 0x0F;
  5947                           	movlw	low(0Fh)
  5948  0009' 300F               	movwf	(5)	;volatile
  5949  000A' 0085               	line	9
  5950                           ;Input.c: 9:     switch (_selectedInput) {
  5951                           	goto	l2682
  5952  000B' 2800'              	line	10
  5953                           ;Input.c: 10:         case 0:
  5954                           	
  5955                           l195:	
  5956  000C'                    	line	11
  5957                           	
  5958                           l2670:	
  5959  000C'                    ;Input.c: 11:             PORTA = ~0x01;
  5960                           	movlw	low(0FEh)
  5961  000C' 30FE               	bcf	status, 5	;RP0=0, select bank0
  5962  000D' 1283               	movwf	(5)	;volatile
  5963  000E' 0085               	line	12
  5964                           ;Input.c: 12:             break;
  5965                           	goto	l2684
  5966  000F' 2800'              	line	13
  5967                           ;Input.c: 13:         case 1:
  5968                           	
  5969                           l197:	
  5970  0010'                    	line	14
  5971                           	
  5972                           l2672:	
  5973  0010'                    ;Input.c: 14:             PORTA = ~0x02;
  5974                           	movlw	low(0FDh)
  5975  0010' 30FD               	bcf	status, 5	;RP0=0, select bank0
  5976  0011' 1283               	movwf	(5)	;volatile
  5977  0012' 0085               	line	15
  5978                           ;Input.c: 15:             break;
  5979                           	goto	l2684
  5980  0013' 2800'              	line	16
  5981                           ;Input.c: 16:         case 2:
  5982                           	
  5983                           l198:	
  5984  0014'                    	line	17
  5985                           	
  5986                           l2674:	
  5987  0014'                    ;Input.c: 17:             PORTA = ~0x04;
  5988                           	movlw	low(0FBh)
  5989  0014' 30FB               	bcf	status, 5	;RP0=0, select bank0
  5990  0015' 1283               	movwf	(5)	;volatile
  5991  0016' 0085               	line	18
  5992                           ;Input.c: 18:             break;
  5993                           	goto	l2684
  5994  0017' 2800'              	line	19
  5995                           ;Input.c: 19:         case 3:
  5996                           	
  5997                           l199:	
  5998  0018'                    	line	20
  5999                           	
  6000                           l2676:	
  6001  0018'                    ;Input.c: 20:             PORTA = ~0x08;
  6002                           	movlw	low(0F7h)
  6003  0018' 30F7               	bcf	status, 5	;RP0=0, select bank0
  6004  0019' 1283               	movwf	(5)	;volatile
  6005  001A' 0085               	line	21
  6006                           ;Input.c: 21:             break;
  6007                           	goto	l2684
  6008  001B' 2800'              	line	22
  6009                           ;Input.c: 22:         default:
  6010                           	
  6011                           l200:	
  6012  001C'                    	line	23
  6013                           	
  6014                           l2678:	
  6015  001C'                    ;Input.c: 23:             PORTA = ~0x01;
  6016                           	movlw	low(0FEh)
  6017  001C' 30FE               	bcf	status, 5	;RP0=0, select bank0
  6018  001D' 1283               	movwf	(5)	;volatile
  6019  001E' 0085               	line	24
  6020                           ;Input.c: 24:             break;
  6021                           	goto	l2684
  6022  001F' 2800'              	line	25
  6023                           	
  6024                           l2680:	
  6025  0020'                    ;Input.c: 25:     }
  6026                           	goto	l2684
  6027  0020' 2800'              	
  6028                           l194:	
  6029  0021'                    	
  6030                           l2682:	
  6031  0021'                    	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6032                           ; Switch size 1, requested type "space"
  6033                           ; Number of cases is 1, Range of values is 0 to 0
  6034                           ; switch strategies available:
  6035                           ; Name         Instructions Cycles
  6036                           ; simple_byte            4     3 (average)
  6037                           ; direct_byte           11     8 (fixed)
  6038                           ; jumptable            260     6 (fixed)
  6039                           ;	Chosen strategy is simple_byte
  6040                           
  6041                           	bsf	status, 5	;RP0=1, select bank1
  6042  0021' 1683               	bcf	status, 6	;RP1=0, select bank1
  6043  0022' 1303               	movf (__selectedInput+1)^080h,w
  6044  0023' 0800'              	opt asmopt_push
  6045                           	opt asmopt_off
  6046                           	xorlw	0^0	; case 0
  6047  0024' 3A00               	skipnz
  6048  0025' 1903               	goto	l2860
  6049  0026' 2800'              	goto	l2678
  6050  0027' 2800'              	opt asmopt_pop
  6051                           	
  6052                           l2860:	
  6053  0028'                    ; Switch size 1, requested type "space"
  6054                           ; Number of cases is 4, Range of values is 0 to 3
  6055                           ; switch strategies available:
  6056                           ; Name         Instructions Cycles
  6057                           ; simple_byte           13     7 (average)
  6058                           ; direct_byte           20     8 (fixed)
  6059                           ; jumptable            260     6 (fixed)
  6060                           ;	Chosen strategy is simple_byte
  6061                           
  6062                           	movf (__selectedInput)^080h,w
  6063  0028' 0800'              	opt asmopt_push
  6064                           	opt asmopt_off
  6065                           	xorlw	0^0	; case 0
  6066  0029' 3A00               	skipnz
  6067  002A' 1903               	goto	l2670
  6068  002B' 2800'              	xorlw	1^0	; case 1
  6069  002C' 3A01               	skipnz
  6070  002D' 1903               	goto	l2672
  6071  002E' 2800'              	xorlw	2^1	; case 2
  6072  002F' 3A03               	skipnz
  6073  0030' 1903               	goto	l2674
  6074  0031' 2800'              	xorlw	3^2	; case 3
  6075  0032' 3A01               	skipnz
  6076  0033' 1903               	goto	l2676
  6077  0034' 2800'              	goto	l2678
  6078  0035' 2800'              	opt asmopt_pop
  6079                           
  6080                           	
  6081                           l196:	
  6082  0036'                    	line	27
  6083                           	
  6084                           l2684:	
  6085  0036'                    ;Input.c: 27:     _inputUpdateRequired = 0;
  6086                           	bcf	status, 5	;RP0=0, select bank0
  6087  0036' 1283               	clrf	(__inputUpdateRequired)
  6088  0037' 018A'              	line	28
  6089                           	
  6090                           l193:	
  6091  0038'                    	return
  6092  0038' 0008               	opt stack 0
  6093                           GLOBAL	__end_of_activateSelectedRelay
  6094                           	__end_of_activateSelectedRelay:
  6095  0039'                    	signat	_activateSelectedRelay,89
  6096                           	global	_isr
  6097                           
  6098 ;; *************** function _isr *****************
  6099 ;; Defined at:
  6100 ;;		line 46 in file "main.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;		None
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;		None
  6105 ;; Return value:  Size  Location     Type
  6106 ;;                  1    wreg      void 
  6107 ;; Registers used:
  6108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6109 ;; Tracked objects:
  6110 ;;		On entry : 0/0
  6111 ;;		On exit  : 0/0
  6112 ;;		Unchanged: 0/0
  6113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6114 ;;      Params:         0       0       0       0       0
  6115 ;;      Locals:         0       0       0       0       0
  6116 ;;      Temps:          0       4       0       0       0
  6117 ;;      Totals:         0       4       0       0       0
  6118 ;;Total ram usage:        4 bytes
  6119 ;; Hardware stack levels used:    1
  6120 ;; Hardware stack levels required when called:    3
  6121 ;; This function calls:
  6122 ;;		_handle_potmeter
  6123 ;;		_handle_rotary
  6124 ;;		_start_receive
  6125 ;; This function is called by:
  6126 ;;		Interrupt level 1
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6130                           	file	"main.c"
  6131                           	line	46
  6132                           global __ptext19
  6133                           __ptext19:	;psect for function _isr
  6134  0000'                    psect	text19
  6135                           	file	"main.c"
  6136                           	line	46
  6137                           	global	__size_of_isr
  6138                           	__size_of_isr	equ	__end_of_isr-_isr
  6139  0031                     	
  6140                           _isr:	
  6141  0000'                    ;incstack = 0
  6142 ;; hardware stack exceeded
  6143                           	opt	stack 0
  6144                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6145                           psect	intentry,class=CODE,delta=2
  6146                           global __pintentry
  6147                           __pintentry:
  6148  0000'                    global interrupt_function
  6149                           interrupt_function:
  6150  0000'                    	global saved_w
  6151                           	saved_w	set	btemp+0
  6152  007E                     	movwf	saved_w
  6153  0000' 00FE               	swapf	status,w
  6154  0001' 0E03               	bcf	status, 5	;RP0=0, select bank0
  6155  0002' 1283               	bcf	status, 6	;RP1=0, select bank0
  6156  0003' 1303               	movwf	(??_isr+0)
  6157  0004' 00B6'              	movf	fsr0,w
  6158  0005' 0804               	movwf	(??_isr+1)
  6159  0006' 00B7'              	movf	pclath,w
  6160  0007' 080A               	movwf	(??_isr+2)
  6161  0008' 00B8'              	movf	btemp+1,w
  6162  0009' 087F               	movwf	(??_isr+3)
  6163  000A' 00B9'              	ljmp	_isr
  6164  000B' 120A' 118A' 2800'  psect	text19
  6165                           	line	48
  6166                           	
  6167                           i1l2762:	
  6168  0000'                    ;main.c: 48:     if (INTCONbits.RBIF) {
  6169                           	btfss	(11),0	;volatile
  6170  0000' 1C0B               	goto	u292_21
  6171  0001' 2800'              	goto	u292_20
  6172  0002' 2800'              u292_21:
  6173  0003'                    	goto	i1l2772
  6174  0003' 2800'              u292_20:
  6175  0004'                    	line	50
  6176                           	
  6177                           i1l2764:	
  6178  0004'                    ;main.c: 50:         handle_rotary();
  6179                           	fcall	_handle_rotary
  6180  0004' 120A' 118A' 2000' 120A' 118A' 	line	52
  6181                           	
  6182                           i1l2766:	
  6183  0009'                    ;main.c: 52:         if (PORTBbits.RB0 == 0) {
  6184                           	bcf	status, 5	;RP0=0, select bank0
  6185  0009' 1283               	bcf	status, 6	;RP1=0, select bank0
  6186  000A' 1303               	btfsc	(6),0	;volatile
  6187  000B' 1806               	goto	u293_21
  6188  000C' 2800'              	goto	u293_20
  6189  000D' 2800'              u293_21:
  6190  000E'                    	goto	i1l2770
  6191  000E' 2800'              u293_20:
  6192  000F'                    	line	53
  6193                           	
  6194                           i1l2768:	
  6195  000F'                    ;main.c: 53:             start_receive();
  6196                           	fcall	_start_receive
  6197  000F' 120A' 118A' 2000' 120A' 118A' 	goto	i1l2770
  6198  0014' 2800'              	line	54
  6199                           ;main.c: 54:         }
  6200                           	
  6201                           i1l63:	
  6202  0015'                    	line	56
  6203                           	
  6204                           i1l2770:	
  6205  0015'                    ;main.c: 56:         INTCONbits.RBIF = 0;
  6206                           	bcf	(11),0	;volatile
  6207  0015' 100B               	goto	i1l2772
  6208  0016' 2800'              	line	57
  6209                           ;main.c: 57:     }
  6210                           	
  6211                           i1l62:	
  6212  0017'                    	line	59
  6213                           	
  6214                           i1l2772:	
  6215  0017'                    ;main.c: 59:     if (PIR1bits.ADIF) {
  6216                           	bcf	status, 5	;RP0=0, select bank0
  6217  0017' 1283               	bcf	status, 6	;RP1=0, select bank0
  6218  0018' 1303               	btfss	(12),6	;volatile
  6219  0019' 1F0C               	goto	u294_21
  6220  001A' 2800'              	goto	u294_20
  6221  001B' 2800'              u294_21:
  6222  001C'                    	goto	i1l65
  6223  001C' 2800'              u294_20:
  6224  001D'                    	line	61
  6225                           	
  6226                           i1l2774:	
  6227  001D'                    ;main.c: 61:         handle_potmeter();
  6228                           	fcall	_handle_potmeter
  6229  001D' 120A' 118A' 2000' 120A' 118A' 	line	63
  6230                           	
  6231                           i1l2776:	
  6232  0022'                    ;main.c: 63:         PIR1bits.ADIF = 0;
  6233                           	bcf	status, 5	;RP0=0, select bank0
  6234  0022' 1283               	bcf	status, 6	;RP1=0, select bank0
  6235  0023' 1303               	bcf	(12),6	;volatile
  6236  0024' 130C               	goto	i1l65
  6237  0025' 2800'              	line	64
  6238                           ;main.c: 64:     }
  6239                           	
  6240                           i1l64:	
  6241  0026'                    	line	67
  6242                           	
  6243                           i1l65:	
  6244  0026'                    	movf	(??_isr+3),w
  6245  0026' 0839'              	movwf	btemp+1
  6246  0027' 00FF               	movf	(??_isr+2),w
  6247  0028' 0838'              	movwf	pclath
  6248  0029' 008A               	movf	(??_isr+1),w
  6249  002A' 0837'              	movwf	fsr0
  6250  002B' 0084               	swapf	(??_isr+0)^00h,w
  6251  002C' 0E00'              	movwf	status
  6252  002D' 0083               	swapf	saved_w,f
  6253  002E' 0EFE               	swapf	saved_w,w
  6254  002F' 0E7E               	retfie
  6255  0030' 0009               	opt stack 0
  6256                           GLOBAL	__end_of_isr
  6257                           	__end_of_isr:
  6258  0031'                    	signat	_isr,89
  6259                           	global	_start_receive
  6260                           
  6261 ;; *************** function _start_receive *****************
  6262 ;; Defined at:
  6263 ;;		line 9 in file "Remote.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;		None
  6266 ;; Auto vars:     Size  Location     Type
  6267 ;;  i               2    0[BANK0 ] int 
  6268 ;; Return value:  Size  Location     Type
  6269 ;;                  1    wreg      void 
  6270 ;; Registers used:
  6271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6272 ;; Tracked objects:
  6273 ;;		On entry : 0/0
  6274 ;;		On exit  : 0/0
  6275 ;;		Unchanged: 0/0
  6276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6277 ;;      Params:         0       0       0       0       0
  6278 ;;      Locals:         0       2       0       0       0
  6279 ;;      Temps:          8       0       0       0       0
  6280 ;;      Totals:         8       2       0       0       0
  6281 ;;Total ram usage:       10 bytes
  6282 ;; Hardware stack levels used:    1
  6283 ;; Hardware stack levels required when called:    1
  6284 ;; This function calls:
  6285 ;;		_handle_remote
  6286 ;; This function is called by:
  6287 ;;		_isr
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6291                           	file	"Remote.c"
  6292                           	line	9
  6293                           global __ptext20
  6294                           __ptext20:	;psect for function _start_receive
  6295  0000'                    psect	text20
  6296                           	file	"Remote.c"
  6297                           	line	9
  6298                           	global	__size_of_start_receive
  6299                           	__size_of_start_receive	equ	__end_of_start_receive-_start_receive
  6300  0070                     	
  6301                           _start_receive:	
  6302  0000'                    ;incstack = 0
  6303 ;; hardware stack exceeded
  6304                           	opt	stack 0
  6305                           ; Regs used in _start_receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6306                           	line	11
  6307                           	
  6308                           i1l2718:	
  6309  0000'                    ;Remote.c: 11:     ir_input = 0;
  6310                           	movlw	high highword(0)
  6311  0000' 3000               	bcf	status, 5	;RP0=0, select bank0
  6312  0001' 1283               	bcf	status, 6	;RP1=0, select bank0
  6313  0002' 1303               	movwf	(_ir_input+3)
  6314  0003' 0083'              	movlw	low highword(0)
  6315  0004' 3000               	movwf	(_ir_input+2)
  6316  0005' 0082'              	movlw	high(0)
  6317  0006' 3000               	movwf	(_ir_input+1)
  6318  0007' 0081'              	movlw	low(0)
  6319  0008' 3000               	movwf	(_ir_input)
  6320  0009' 0080'              
  6321                           	line	14
  6322                           ;Remote.c: 14:     _delay((unsigned long)((631)*(4000000/4000000.0)));
  6323                           	opt asmopt_push
  6324                           opt asmopt_off
  6325                           	movlw	210
  6326  000A' 30D2               movwf	((??_start_receive+0)+0),f
  6327  000B' 0085'              	u296_27:
  6328  000C'                    decfsz	(??_start_receive+0)+0,f
  6329  000C' 0B85'              	goto	u296_27
  6330  000D' 2800'              opt asmopt_pop
  6331                           
  6332                           	line	15
  6333                           	
  6334                           i1l2720:	
  6335  000E'                    ;Remote.c: 15:     for (int i = 0; i < 12; i++) {
  6336                           	bcf	status, 5	;RP0=0, select bank0
  6337  000E' 1283               	bcf	status, 6	;RP1=0, select bank0
  6338  000F' 1303               	clrf	(start_receive@i)
  6339  0010' 0180'              	clrf	(start_receive@i+1)
  6340  0011' 0181'              	
  6341                           i1l2722:	
  6342  0012'                    	movf	(start_receive@i+1),w
  6343  0012' 0801'              	xorlw	80h
  6344  0013' 3A80               	movwf	btemp+1
  6345  0014' 00FF               	movlw	(0)^80h
  6346  0015' 3080               	subwf	btemp+1,w
  6347  0016' 027F               	skipz
  6348  0017' 1D03               	goto	u284_25
  6349  0018' 2800'              	movlw	0Ch
  6350  0019' 300C               	subwf	(start_receive@i),w
  6351  001A' 0200'              u284_25:
  6352  001B'                    
  6353                           	skipc
  6354  001B' 1C03               	goto	u284_21
  6355  001C' 2800'              	goto	u284_20
  6356  001D' 2800'              u284_21:
  6357  001E'                    	goto	i1l2726
  6358  001E' 2800'              u284_20:
  6359  001F'                    	goto	i1l2734
  6360  001F' 2800'              	
  6361                           i1l2724:	
  6362  0020'                    	goto	i1l2734
  6363  0020' 2800'              	
  6364                           i1l332:	
  6365  0021'                    	line	16
  6366                           	
  6367                           i1l2726:	
  6368  0021'                    ;Remote.c: 16:         ir_input = (ir_input << 1) | !PORTBbits.RB0;
  6369                           	clrc
  6370  0021' 1003               	bcf	status, 5	;RP0=0, select bank0
  6371  0022' 1283               	bcf	status, 6	;RP1=0, select bank0
  6372  0023' 1303               	btfss	(6),0	;volatile
  6373  0024' 1C06               	setc
  6374  0025' 1403               	movlw	0
  6375  0026' 3000               	skipnc
  6376  0027' 1803               	movlw	1
  6377  0028' 3001               
  6378                           	movwf	(??_start_receive+0)+0
  6379  0029' 0085'              	clrf	((??_start_receive+0)+0+1)
  6380  002A' 0186'              	clrf	((??_start_receive+0)+0+2)
  6381  002B' 0187'              	clrf	((??_start_receive+0)+0+3)
  6382  002C' 0188'              	movf	(_ir_input),w
  6383  002D' 0800'              	movwf	(??_start_receive+4)+0
  6384  002E' 0089'              	movf	(_ir_input+1),w
  6385  002F' 0801'              	movwf	((??_start_receive+4)+0+1)
  6386  0030' 008A'              	movf	(_ir_input+2),w
  6387  0031' 0802'              	movwf	((??_start_receive+4)+0+2)
  6388  0032' 008B'              	movf	(_ir_input+3),w
  6389  0033' 0803'              	movwf	((??_start_receive+4)+0+3)
  6390  0034' 008C'              	movlw	01h
  6391  0035' 3001               u285_25:
  6392  0036'                    	clrc
  6393  0036' 1003               	rlf	(??_start_receive+4)+0,f
  6394  0037' 0D89'              	rlf	(??_start_receive+4)+1,f
  6395  0038' 0D8A'              	rlf	(??_start_receive+4)+2,f
  6396  0039' 0D8B'              	rlf	(??_start_receive+4)+3,f
  6397  003A' 0D8C'              u285_20:
  6398  003B'                    	addlw	-1
  6399  003B' 3EFF               	skipz
  6400  003C' 1D03               	goto	u285_25
  6401  003D' 2800'              	movf	0+(??_start_receive+4)+0,w
  6402  003E' 0809'              	iorwf	(??_start_receive+0)+0,f
  6403  003F' 0485'              	movf	1+(??_start_receive+4)+0,w
  6404  0040' 080A'              	iorwf	(??_start_receive+0)+1,f
  6405  0041' 0486'              	movf	2+(??_start_receive+4)+0,w
  6406  0042' 080B'              	iorwf	(??_start_receive+0)+2,f
  6407  0043' 0487'              	movf	3+(??_start_receive+4)+0,w
  6408  0044' 080C'              	iorwf	(??_start_receive+0)+3,f
  6409  0045' 0488'              	movf	3+(??_start_receive+0)+0,w
  6410  0046' 0808'              	movwf	(_ir_input+3)
  6411  0047' 0083'              	movf	2+(??_start_receive+0)+0,w
  6412  0048' 0807'              	movwf	(_ir_input+2)
  6413  0049' 0082'              	movf	1+(??_start_receive+0)+0,w
  6414  004A' 0806'              	movwf	(_ir_input+1)
  6415  004B' 0081'              	movf	0+(??_start_receive+0)+0,w
  6416  004C' 0805'              	movwf	(_ir_input)
  6417  004D' 0080'              
  6418                           	line	18
  6419                           	
  6420                           i1l2728:	
  6421  004E'                    ;Remote.c: 18:         _delay((unsigned long)((842)*(4000000/4000000.0)));
  6422                           	opt asmopt_push
  6423                           opt asmopt_off
  6424                           	movlw	168
  6425  004E' 30A8               movwf	((??_start_receive+0)+0),f
  6426  004F' 0085'              	u297_27:
  6427  0050'                    	nop2
  6428  0050' 2800'              decfsz	(??_start_receive+0)+0,f
  6429  0051' 0B85'              	goto	u297_27
  6430  0052' 2800'              	nop
  6431  0053' 0000               opt asmopt_pop
  6432                           
  6433                           	line	19
  6434                           	
  6435                           i1l2730:	
  6436  0054'                    ;Remote.c: 19:     }
  6437                           	movlw	01h
  6438  0054' 3001               	bcf	status, 5	;RP0=0, select bank0
  6439  0055' 1283               	bcf	status, 6	;RP1=0, select bank0
  6440  0056' 1303               	addwf	(start_receive@i),f
  6441  0057' 0780'              	skipnc
  6442  0058' 1803               	incf	(start_receive@i+1),f
  6443  0059' 0A81'              	movlw	0
  6444  005A' 3000               	addwf	(start_receive@i+1),f
  6445  005B' 0781'              	
  6446                           i1l2732:	
  6447  005C'                    	movf	(start_receive@i+1),w
  6448  005C' 0801'              	xorlw	80h
  6449  005D' 3A80               	movwf	btemp+1
  6450  005E' 00FF               	movlw	(0)^80h
  6451  005F' 3080               	subwf	btemp+1,w
  6452  0060' 027F               	skipz
  6453  0061' 1D03               	goto	u286_25
  6454  0062' 2800'              	movlw	0Ch
  6455  0063' 300C               	subwf	(start_receive@i),w
  6456  0064' 0200'              u286_25:
  6457  0065'                    
  6458                           	skipc
  6459  0065' 1C03               	goto	u286_21
  6460  0066' 2800'              	goto	u286_20
  6461  0067' 2800'              u286_21:
  6462  0068'                    	goto	i1l2726
  6463  0068' 2800'              u286_20:
  6464  0069'                    	goto	i1l2734
  6465  0069' 2800'              	
  6466                           i1l333:	
  6467  006A'                    	line	21
  6468                           	
  6469                           i1l2734:	
  6470  006A'                    ;Remote.c: 21:     handle_remote();
  6471                           	fcall	_handle_remote
  6472  006A' 120A' 118A' 2000' 120A' 118A' 	line	22
  6473                           	
  6474                           i1l334:	
  6475  006F'                    	return
  6476  006F' 0008               	opt stack 0
  6477                           GLOBAL	__end_of_start_receive
  6478                           	__end_of_start_receive:
  6479  0070'                    	signat	_start_receive,89
  6480                           	global	_handle_remote
  6481                           
  6482 ;; *************** function _handle_remote *****************
  6483 ;; Defined at:
  6484 ;;		line 25 in file "Remote.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;  data            2    2[COMMON] unsigned int 
  6489 ;;  mask            2    0[COMMON] unsigned int 
  6490 ;;  found           1    4[COMMON] unsigned char 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6500 ;;      Params:         0       0       0       0       0
  6501 ;;      Locals:         5       0       0       0       0
  6502 ;;      Temps:          0       0       0       0       0
  6503 ;;      Totals:         5       0       0       0       0
  6504 ;;Total ram usage:        5 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; This function calls:
  6507 ;;		Nothing
  6508 ;; This function is called by:
  6509 ;;		_start_receive
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6513                           	line	25
  6514                           global __ptext21
  6515                           __ptext21:	;psect for function _handle_remote
  6516  0000'                    psect	text21
  6517                           	file	"Remote.c"
  6518                           	line	25
  6519                           	global	__size_of_handle_remote
  6520                           	__size_of_handle_remote	equ	__end_of_handle_remote-_handle_remote
  6521  007F                     	
  6522                           _handle_remote:	
  6523  0000'                    ;incstack = 0
  6524 ;; hardware stack exceeded
  6525                           	opt	stack 0
  6526                           ; Regs used in _handle_remote: [wreg-fsr0h+status,2+status,0]
  6527                           	line	27
  6528                           	
  6529                           i1l2484:	
  6530  0000'                    ;Remote.c: 27:     char found = 0;
  6531                           	clrf	(handle_remote@found)
  6532  0000' 0184'              	line	29
  6533                           	
  6534                           i1l2486:	
  6535  0001'                    ;Remote.c: 29:     unsigned int mask = 0b0000000111111111;
  6536                           	movlw	0FFh
  6537  0001' 30FF               	movwf	(handle_remote@mask)
  6538  0002' 0080'              	movlw	01h
  6539  0003' 3001               	movwf	((handle_remote@mask))+1
  6540  0004' 0081'              	line	31
  6541                           	
  6542                           i1l2488:	
  6543  0005'                    ;Remote.c: 31:     unsigned int data = ir_input & mask;
  6544                           	bcf	status, 5	;RP0=0, select bank0
  6545  0005' 1283               	bcf	status, 6	;RP1=0, select bank0
  6546  0006' 1303               	movf	(_ir_input),w
  6547  0007' 0800'              	andwf	(handle_remote@mask),w
  6548  0008' 0500'              	movwf	(handle_remote@data)
  6549  0009' 0082'              	movf	(_ir_input+1),w
  6550  000A' 0801'              	andwf	(handle_remote@mask+1),w
  6551  000B' 0501'              	movwf	1+(handle_remote@data)
  6552  000C' 0083'              	line	33
  6553                           ;Remote.c: 33:     switch (data) {
  6554                           	goto	i1l2524
  6555  000D' 2800'              	line	34
  6556                           ;Remote.c: 34:         case 72:
  6557                           	
  6558                           i1l338:	
  6559  000E'                    	line	35
  6560                           	
  6561                           i1l2490:	
  6562  000E'                    ;Remote.c: 35:             _selectedInput = 0;
  6563                           	bsf	status, 5	;RP0=1, select bank1
  6564  000E' 1683               	bcf	status, 6	;RP1=0, select bank1
  6565  000F' 1303               	clrf	(__selectedInput)^080h
  6566  0010' 0180'              	clrf	(__selectedInput+1)^080h
  6567  0011' 0180'              	line	36
  6568                           	
  6569                           i1l2492:	
  6570  0012'                    ;Remote.c: 36:             _inputUpdateRequired = 1;
  6571                           	bcf	status, 5	;RP0=0, select bank0
  6572  0012' 1283               	bcf	status, 6	;RP1=0, select bank0
  6573  0013' 1303               	clrf	(__inputUpdateRequired)
  6574  0014' 018A'              	incf	(__inputUpdateRequired),f
  6575  0015' 0A8A'              	line	37
  6576                           	
  6577                           i1l2494:	
  6578  0016'                    ;Remote.c: 37:             found = 1;
  6579                           	clrf	(handle_remote@found)
  6580  0016' 0184'              	incf	(handle_remote@found),f
  6581  0017' 0A84'              	line	38
  6582                           ;Remote.c: 38:             break;
  6583                           	goto	i1l2526
  6584  0018' 2800'              	line	39
  6585                           ;Remote.c: 39:         case 264:
  6586                           	
  6587                           i1l340:	
  6588  0019'                    	line	40
  6589                           	
  6590                           i1l2496:	
  6591  0019'                    ;Remote.c: 40:             _selectedInput = 1;
  6592                           	movlw	01h
  6593  0019' 3001               	bsf	status, 5	;RP0=1, select bank1
  6594  001A' 1683               	bcf	status, 6	;RP1=0, select bank1
  6595  001B' 1303               	movwf	(__selectedInput)^080h
  6596  001C' 0080'              	movlw	0
  6597  001D' 3000               	movwf	((__selectedInput)^080h)+1
  6598  001E' 0081'              	line	41
  6599                           	
  6600                           i1l2498:	
  6601  001F'                    ;Remote.c: 41:             _inputUpdateRequired = 1;
  6602                           	bcf	status, 5	;RP0=0, select bank0
  6603  001F' 1283               	bcf	status, 6	;RP1=0, select bank0
  6604  0020' 1303               	clrf	(__inputUpdateRequired)
  6605  0021' 018A'              	incf	(__inputUpdateRequired),f
  6606  0022' 0A8A'              	line	42
  6607                           	
  6608                           i1l2500:	
  6609  0023'                    ;Remote.c: 42:             found = 1;
  6610                           	clrf	(handle_remote@found)
  6611  0023' 0184'              	incf	(handle_remote@found),f
  6612  0024' 0A84'              	line	43
  6613                           ;Remote.c: 43:             break;
  6614                           	goto	i1l2526
  6615  0025' 2800'              	line	44
  6616                           ;Remote.c: 44:         case 160:
  6617                           	
  6618                           i1l341:	
  6619  0026'                    	line	45
  6620                           	
  6621                           i1l2502:	
  6622  0026'                    ;Remote.c: 45:             _selectedInput = 2;
  6623                           	movlw	02h
  6624  0026' 3002               	bsf	status, 5	;RP0=1, select bank1
  6625  0027' 1683               	bcf	status, 6	;RP1=0, select bank1
  6626  0028' 1303               	movwf	(__selectedInput)^080h
  6627  0029' 0080'              	movlw	0
  6628  002A' 3000               	movwf	((__selectedInput)^080h)+1
  6629  002B' 0081'              	line	46
  6630                           	
  6631                           i1l2504:	
  6632  002C'                    ;Remote.c: 46:             _inputUpdateRequired = 1;
  6633                           	bcf	status, 5	;RP0=0, select bank0
  6634  002C' 1283               	bcf	status, 6	;RP1=0, select bank0
  6635  002D' 1303               	clrf	(__inputUpdateRequired)
  6636  002E' 018A'              	incf	(__inputUpdateRequired),f
  6637  002F' 0A8A'              	line	47
  6638                           	
  6639                           i1l2506:	
  6640  0030'                    ;Remote.c: 47:             found = 1;
  6641                           	clrf	(handle_remote@found)
  6642  0030' 0184'              	incf	(handle_remote@found),f
  6643  0031' 0A84'              	line	48
  6644                           ;Remote.c: 48:             break;
  6645                           	goto	i1l2526
  6646  0032' 2800'              	line	49
  6647                           ;Remote.c: 49:         case 136:
  6648                           	
  6649                           i1l342:	
  6650  0033'                    	line	50
  6651                           	
  6652                           i1l2508:	
  6653  0033'                    ;Remote.c: 50:             _selectedInput = 3;
  6654                           	movlw	03h
  6655  0033' 3003               	bsf	status, 5	;RP0=1, select bank1
  6656  0034' 1683               	bcf	status, 6	;RP1=0, select bank1
  6657  0035' 1303               	movwf	(__selectedInput)^080h
  6658  0036' 0080'              	movlw	0
  6659  0037' 3000               	movwf	((__selectedInput)^080h)+1
  6660  0038' 0081'              	line	51
  6661                           	
  6662                           i1l2510:	
  6663  0039'                    ;Remote.c: 51:             _inputUpdateRequired = 1;
  6664                           	bcf	status, 5	;RP0=0, select bank0
  6665  0039' 1283               	bcf	status, 6	;RP1=0, select bank0
  6666  003A' 1303               	clrf	(__inputUpdateRequired)
  6667  003B' 018A'              	incf	(__inputUpdateRequired),f
  6668  003C' 0A8A'              	line	52
  6669                           	
  6670                           i1l2512:	
  6671  003D'                    ;Remote.c: 52:             found = 1;
  6672                           	clrf	(handle_remote@found)
  6673  003D' 0184'              	incf	(handle_remote@found),f
  6674  003E' 0A84'              	line	53
  6675                           ;Remote.c: 53:             break;
  6676                           	goto	i1l2526
  6677  003F' 2800'              	line	54
  6678                           ;Remote.c: 54:         case 288:
  6679                           	
  6680                           i1l343:	
  6681  0040'                    	line	55
  6682                           	
  6683                           i1l2514:	
  6684  0040'                    ;Remote.c: 55:             volume++;
  6685                           	movlw	01h
  6686  0040' 3001               	bsf	status, 5	;RP0=1, select bank1
  6687  0041' 1683               	bcf	status, 6	;RP1=0, select bank1
  6688  0042' 1303               	addwf	(_volume)^080h,f
  6689  0043' 0780'              	skipnc
  6690  0044' 1803               	incf	(_volume+1)^080h,f
  6691  0045' 0A80'              	movlw	0
  6692  0046' 3000               	addwf	(_volume+1)^080h,f
  6693  0047' 0780'              	line	56
  6694                           	
  6695                           i1l2516:	
  6696  0048'                    ;Remote.c: 56:             found = 1;
  6697                           	clrf	(handle_remote@found)
  6698  0048' 0184'              	incf	(handle_remote@found),f
  6699  0049' 0A84'              	line	57
  6700                           ;Remote.c: 57:             break;
  6701                           	goto	i1l2526
  6702  004A' 2800'              	line	58
  6703                           ;Remote.c: 58:         case 272:
  6704                           	
  6705                           i1l344:	
  6706  004B'                    	line	59
  6707                           	
  6708                           i1l2518:	
  6709  004B'                    ;Remote.c: 59:             volume--;
  6710                           	movlw	0FFh
  6711  004B' 30FF               	bsf	status, 5	;RP0=1, select bank1
  6712  004C' 1683               	bcf	status, 6	;RP1=0, select bank1
  6713  004D' 1303               	addwf	(_volume)^080h,f
  6714  004E' 0780'              	skipnc
  6715  004F' 1803               	incf	(_volume+1)^080h,f
  6716  0050' 0A80'              	movlw	0FFh
  6717  0051' 30FF               	addwf	(_volume+1)^080h,f
  6718  0052' 0780'              	line	60
  6719                           	
  6720                           i1l2520:	
  6721  0053'                    ;Remote.c: 60:             found = 1;
  6722                           	clrf	(handle_remote@found)
  6723  0053' 0184'              	incf	(handle_remote@found),f
  6724  0054' 0A84'              	line	61
  6725                           ;Remote.c: 61:             break;
  6726                           	goto	i1l2526
  6727  0055' 2800'              	line	62
  6728                           	
  6729                           i1l2522:	
  6730  0056'                    ;Remote.c: 62:     }
  6731                           	goto	i1l2526
  6732  0056' 2800'              	
  6733                           i1l337:	
  6734  0057'                    	
  6735                           i1l2524:	
  6736  0057'                    	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  6737                           ; Switch size 1, requested type "space"
  6738                           ; Number of cases is 2, Range of values is 0 to 1
  6739                           ; switch strategies available:
  6740                           ; Name         Instructions Cycles
  6741                           ; simple_byte            7     4 (average)
  6742                           ; direct_byte           14     8 (fixed)
  6743                           ; jumptable            260     6 (fixed)
  6744                           ;	Chosen strategy is simple_byte
  6745                           
  6746                           	movf (handle_remote@data+1),w
  6747  0057' 0803'              	opt asmopt_push
  6748                           	opt asmopt_off
  6749                           	xorlw	0^0	; case 0
  6750  0058' 3A00               	skipnz
  6751  0059' 1903               	goto	i1l2862
  6752  005A' 2800'              	xorlw	1^0	; case 1
  6753  005B' 3A01               	skipnz
  6754  005C' 1903               	goto	i1l2864
  6755  005D' 2800'              	goto	i1l2526
  6756  005E' 2800'              	opt asmopt_pop
  6757                           	
  6758                           i1l2862:	
  6759  005F'                    ; Switch size 1, requested type "space"
  6760                           ; Number of cases is 3, Range of values is 72 to 160
  6761                           ; switch strategies available:
  6762                           ; Name         Instructions Cycles
  6763                           ; simple_byte           10     6 (average)
  6764                           ; jumptable            263     9 (fixed)
  6765                           ;	Chosen strategy is simple_byte
  6766                           
  6767                           	movf (handle_remote@data),w
  6768  005F' 0802'              	opt asmopt_push
  6769                           	opt asmopt_off
  6770                           	xorlw	72^0	; case 72
  6771  0060' 3A48               	skipnz
  6772  0061' 1903               	goto	i1l2490
  6773  0062' 2800'              	xorlw	136^72	; case 136
  6774  0063' 3AC0               	skipnz
  6775  0064' 1903               	goto	i1l2508
  6776  0065' 2800'              	xorlw	160^136	; case 160
  6777  0066' 3A28               	skipnz
  6778  0067' 1903               	goto	i1l2502
  6779  0068' 2800'              	goto	i1l2526
  6780  0069' 2800'              	opt asmopt_pop
  6781                           	
  6782                           i1l2864:	
  6783  006A'                    ; Switch size 1, requested type "space"
  6784                           ; Number of cases is 3, Range of values is 8 to 32
  6785                           ; switch strategies available:
  6786                           ; Name         Instructions Cycles
  6787                           ; simple_byte           10     6 (average)
  6788                           ; direct_byte           86    11 (fixed)
  6789                           ; jumptable            263     9 (fixed)
  6790                           ;	Chosen strategy is simple_byte
  6791                           
  6792                           	movf (handle_remote@data),w
  6793  006A' 0802'              	opt asmopt_push
  6794                           	opt asmopt_off
  6795                           	xorlw	8^0	; case 8
  6796  006B' 3A08               	skipnz
  6797  006C' 1903               	goto	i1l2496
  6798  006D' 2800'              	xorlw	16^8	; case 16
  6799  006E' 3A18               	skipnz
  6800  006F' 1903               	goto	i1l2518
  6801  0070' 2800'              	xorlw	32^16	; case 32
  6802  0071' 3A30               	skipnz
  6803  0072' 1903               	goto	i1l2514
  6804  0073' 2800'              	goto	i1l2526
  6805  0074' 2800'              	opt asmopt_pop
  6806                           
  6807                           	
  6808                           i1l339:	
  6809  0075'                    	line	64
  6810                           	
  6811                           i1l2526:	
  6812  0075'                    ;Remote.c: 64:     ir_input = 0;
  6813                           	movlw	high highword(0)
  6814  0075' 3000               	bcf	status, 5	;RP0=0, select bank0
  6815  0076' 1283               	movwf	(_ir_input+3)
  6816  0077' 0083'              	movlw	low highword(0)
  6817  0078' 3000               	movwf	(_ir_input+2)
  6818  0079' 0082'              	movlw	high(0)
  6819  007A' 3000               	movwf	(_ir_input+1)
  6820  007B' 0081'              	movlw	low(0)
  6821  007C' 3000               	movwf	(_ir_input)
  6822  007D' 0080'              
  6823                           	line	66
  6824                           	
  6825                           i1l345:	
  6826  007E'                    	return
  6827  007E' 0008               	opt stack 0
  6828                           GLOBAL	__end_of_handle_remote
  6829                           	__end_of_handle_remote:
  6830  007F'                    	signat	_handle_remote,89
  6831                           	global	_handle_rotary
  6832                           
  6833 ;; *************** function _handle_rotary *****************
  6834 ;; Defined at:
  6835 ;;		line 30 in file "Input.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;		None
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  portB           2    5[COMMON] int 
  6840 ;;  portA           2    3[COMMON] int 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6850 ;;      Params:         0       0       0       0       0
  6851 ;;      Locals:         4       0       0       0       0
  6852 ;;      Temps:          3       0       0       0       0
  6853 ;;      Totals:         7       0       0       0       0
  6854 ;;Total ram usage:        7 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; This function calls:
  6857 ;;		Nothing
  6858 ;; This function is called by:
  6859 ;;		_isr
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6863                           	file	"Input.c"
  6864                           	line	30
  6865                           global __ptext22
  6866                           __ptext22:	;psect for function _handle_rotary
  6867  0000'                    psect	text22
  6868                           	file	"Input.c"
  6869                           	line	30
  6870                           	global	__size_of_handle_rotary
  6871                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  6872  0081                     	
  6873                           _handle_rotary:	
  6874  0000'                    ;incstack = 0
  6875                           	opt	stack 0
  6876                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  6877                           	line	32
  6878                           	
  6879                           i1l2690:	
  6880  0000'                    ;Input.c: 32:         int portA = PORTBbits.RB4;
  6881                           	bcf	status, 5	;RP0=0, select bank0
  6882  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  6883  0001' 1303               	swapf	(6),w	;volatile
  6884  0002' 0E06               	andlw	(1<<1)-1
  6885  0003' 3901               	movwf	(??_handle_rotary+0)+0
  6886  0004' 0080'              	clrf	(??_handle_rotary+0)+0+1
  6887  0005' 0181'              	movf	0+(??_handle_rotary+0)+0,w
  6888  0006' 0800'              	movwf	(handle_rotary@portA)
  6889  0007' 0083'              	movf	1+(??_handle_rotary+0)+0,w
  6890  0008' 0801'              	movwf	(handle_rotary@portA+1)
  6891  0009' 0084'              	line	33
  6892                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  6893                           	swapf	(6),w	;volatile
  6894  000A' 0E06               	movwf	(??_handle_rotary+0)+0
  6895  000B' 0080'              	rrf	(??_handle_rotary+0)+0,w
  6896  000C' 0C00'              	andlw	(1<<1)-1
  6897  000D' 3901               	movwf	(??_handle_rotary+1)+0
  6898  000E' 0081'              	clrf	(??_handle_rotary+1)+0+1
  6899  000F' 0182'              	movf	0+(??_handle_rotary+1)+0,w
  6900  0010' 0801'              	movwf	(handle_rotary@portB)
  6901  0011' 0085'              	movf	1+(??_handle_rotary+1)+0,w
  6902  0012' 0802'              	movwf	(handle_rotary@portB+1)
  6903  0013' 0086'              	line	35
  6904                           	
  6905                           i1l2692:	
  6906  0014'                    ;Input.c: 35:         if (_lastA != portA) {
  6907                           	movf	(__lastA+1),w
  6908  0014' 0809'              	xorwf	(handle_rotary@portA+1),w
  6909  0015' 0604'              	skipz
  6910  0016' 1D03               	goto	u276_25
  6911  0017' 2800'              	movf	(__lastA),w
  6912  0018' 0808'              	xorwf	(handle_rotary@portA),w
  6913  0019' 0603'              u276_25:
  6914  001A'                    
  6915                           	skipnz
  6916  001A' 1903               	goto	u276_21
  6917  001B' 2800'              	goto	u276_20
  6918  001C' 2800'              u276_21:
  6919  001D'                    	goto	i1l2704
  6920  001D' 2800'              u276_20:
  6921  001E'                    	line	36
  6922                           	
  6923                           i1l2694:	
  6924  001E'                    ;Input.c: 36:             if (_lastA == _lastB && portA) {
  6925                           	movf	(__lastB+1),w
  6926  001E' 0807'              	xorwf	(__lastA+1),w
  6927  001F' 0609'              	skipz
  6928  0020' 1D03               	goto	u277_25
  6929  0021' 2800'              	movf	(__lastB),w
  6930  0022' 0806'              	xorwf	(__lastA),w
  6931  0023' 0608'              u277_25:
  6932  0024'                    
  6933                           	skipz
  6934  0024' 1D03               	goto	u277_21
  6935  0025' 2800'              	goto	u277_20
  6936  0026' 2800'              u277_21:
  6937  0027'                    	goto	i1l2704
  6938  0027' 2800'              u277_20:
  6939  0028'                    	
  6940                           i1l2696:	
  6941  0028'                    	movf	((handle_rotary@portA)),w
  6942  0028' 0803'              iorwf	((handle_rotary@portA+1)),w
  6943  0029' 0404'              	btfsc	status,2
  6944  002A' 1903               	goto	u278_21
  6945  002B' 2800'              	goto	u278_20
  6946  002C' 2800'              u278_21:
  6947  002D'                    	goto	i1l2704
  6948  002D' 2800'              u278_20:
  6949  002E'                    	line	37
  6950                           	
  6951                           i1l2698:	
  6952  002E'                    ;Input.c: 37:                 if (_selectedInput < 3) {
  6953                           	movlw	0
  6954  002E' 3000               	bsf	status, 5	;RP0=1, select bank1
  6955  002F' 1683               	bcf	status, 6	;RP1=0, select bank1
  6956  0030' 1303               	subwf	(__selectedInput+1)^080h,w
  6957  0031' 0200'              	movlw	03h
  6958  0032' 3003               	skipnz
  6959  0033' 1903               	subwf	(__selectedInput)^080h,w
  6960  0034' 0200'              	skipnc
  6961  0035' 1803               	goto	u279_21
  6962  0036' 2800'              	goto	u279_20
  6963  0037' 2800'              u279_21:
  6964  0038'                    	goto	i1l2702
  6965  0038' 2800'              u279_20:
  6966  0039'                    	line	38
  6967                           	
  6968                           i1l2700:	
  6969  0039'                    ;Input.c: 38:                     _selectedInput++;
  6970                           	movlw	01h
  6971  0039' 3001               	addwf	(__selectedInput)^080h,f
  6972  003A' 0780'              	skipnc
  6973  003B' 1803               	incf	(__selectedInput+1)^080h,f
  6974  003C' 0A80'              	movlw	0
  6975  003D' 3000               	addwf	(__selectedInput+1)^080h,f
  6976  003E' 0780'              	line	39
  6977                           ;Input.c: 39:                 } else {
  6978                           	goto	i1l2704
  6979  003F' 2800'              	
  6980                           i1l205:	
  6981  0040'                    	line	40
  6982                           	
  6983                           i1l2702:	
  6984  0040'                    ;Input.c: 40:                     _selectedInput = 0;
  6985                           	clrf	(__selectedInput)^080h
  6986  0040' 0180'              	clrf	(__selectedInput+1)^080h
  6987  0041' 0180'              	goto	i1l2704
  6988  0042' 2800'              	line	41
  6989                           ;Input.c: 41:                 }
  6990                           	
  6991                           i1l206:	
  6992  0043'                    	goto	i1l2704
  6993  0043' 2800'              	line	42
  6994                           ;Input.c: 42:             }
  6995                           	
  6996                           i1l204:	
  6997  0044'                    	goto	i1l2704
  6998  0044' 2800'              	line	43
  6999                           ;Input.c: 43:         }
  7000                           	
  7001                           i1l203:	
  7002  0045'                    	line	45
  7003                           	
  7004                           i1l2704:	
  7005  0045'                    ;Input.c: 45:         if (_lastB != portB) {
  7006                           	bcf	status, 5	;RP0=0, select bank0
  7007  0045' 1283               	movf	(__lastB+1),w
  7008  0046' 0807'              	xorwf	(handle_rotary@portB+1),w
  7009  0047' 0606'              	skipz
  7010  0048' 1D03               	goto	u280_25
  7011  0049' 2800'              	movf	(__lastB),w
  7012  004A' 0806'              	xorwf	(handle_rotary@portB),w
  7013  004B' 0605'              u280_25:
  7014  004C'                    
  7015                           	skipnz
  7016  004C' 1903               	goto	u280_21
  7017  004D' 2800'              	goto	u280_20
  7018  004E' 2800'              u280_21:
  7019  004F'                    	goto	i1l207
  7020  004F' 2800'              u280_20:
  7021  0050'                    	line	46
  7022                           	
  7023                           i1l2706:	
  7024  0050'                    ;Input.c: 46:             if (_lastA == _lastB && portB) {
  7025                           	movf	(__lastB+1),w
  7026  0050' 0807'              	xorwf	(__lastA+1),w
  7027  0051' 0609'              	skipz
  7028  0052' 1D03               	goto	u281_25
  7029  0053' 2800'              	movf	(__lastB),w
  7030  0054' 0806'              	xorwf	(__lastA),w
  7031  0055' 0608'              u281_25:
  7032  0056'                    
  7033                           	skipz
  7034  0056' 1D03               	goto	u281_21
  7035  0057' 2800'              	goto	u281_20
  7036  0058' 2800'              u281_21:
  7037  0059'                    	goto	i1l207
  7038  0059' 2800'              u281_20:
  7039  005A'                    	
  7040                           i1l2708:	
  7041  005A'                    	movf	((handle_rotary@portB)),w
  7042  005A' 0805'              iorwf	((handle_rotary@portB+1)),w
  7043  005B' 0406'              	btfsc	status,2
  7044  005C' 1903               	goto	u282_21
  7045  005D' 2800'              	goto	u282_20
  7046  005E' 2800'              u282_21:
  7047  005F'                    	goto	i1l207
  7048  005F' 2800'              u282_20:
  7049  0060'                    	line	47
  7050                           	
  7051                           i1l2710:	
  7052  0060'                    ;Input.c: 47:                 if (_selectedInput > 0) {
  7053                           	bsf	status, 5	;RP0=1, select bank1
  7054  0060' 1683               	bcf	status, 6	;RP1=0, select bank1
  7055  0061' 1303               	movf	((__selectedInput)^080h),w
  7056  0062' 0800'              iorwf	((__selectedInput+1)^080h),w
  7057  0063' 0400'              	btfsc	status,2
  7058  0064' 1903               	goto	u283_21
  7059  0065' 2800'              	goto	u283_20
  7060  0066' 2800'              u283_21:
  7061  0067'                    	goto	i1l2714
  7062  0067' 2800'              u283_20:
  7063  0068'                    	line	48
  7064                           	
  7065                           i1l2712:	
  7066  0068'                    ;Input.c: 48:                     _selectedInput--;
  7067                           	movlw	01h
  7068  0068' 3001               	subwf	(__selectedInput)^080h,f
  7069  0069' 0280'              	movlw	0
  7070  006A' 3000               	skipc
  7071  006B' 1C03               	decf	(__selectedInput+1)^080h,f
  7072  006C' 0380'              	subwf	(__selectedInput+1)^080h,f
  7073  006D' 0280'              	line	49
  7074                           ;Input.c: 49:                 } else {
  7075                           	goto	i1l207
  7076  006E' 2800'              	
  7077                           i1l209:	
  7078  006F'                    	line	50
  7079                           	
  7080                           i1l2714:	
  7081  006F'                    ;Input.c: 50:                     _selectedInput = 3;
  7082                           	movlw	03h
  7083  006F' 3003               	movwf	(__selectedInput)^080h
  7084  0070' 0080'              	movlw	0
  7085  0071' 3000               	movwf	((__selectedInput)^080h)+1
  7086  0072' 0081'              	goto	i1l207
  7087  0073' 2800'              	line	51
  7088                           ;Input.c: 51:                 }
  7089                           	
  7090                           i1l210:	
  7091  0074'                    	goto	i1l207
  7092  0074' 2800'              	line	52
  7093                           ;Input.c: 52:             }
  7094                           	
  7095                           i1l208:	
  7096  0075'                    	line	53
  7097                           ;Input.c: 53:         }
  7098                           	
  7099                           i1l207:	
  7100  0075'                    	line	55
  7101                           ;Input.c: 55:         _lastA = portA;
  7102                           	movf	(handle_rotary@portA+1),w
  7103  0075' 0804'              	bcf	status, 5	;RP0=0, select bank0
  7104  0076' 1283               	movwf	(__lastA+1)
  7105  0077' 0089'              	movf	(handle_rotary@portA),w
  7106  0078' 0803'              	movwf	(__lastA)
  7107  0079' 0088'              	line	56
  7108                           ;Input.c: 56:         _lastB = portB;
  7109                           	movf	(handle_rotary@portB+1),w
  7110  007A' 0806'              	movwf	(__lastB+1)
  7111  007B' 0087'              	movf	(handle_rotary@portB),w
  7112  007C' 0805'              	movwf	(__lastB)
  7113  007D' 0086'              	line	57
  7114                           	
  7115                           i1l2716:	
  7116  007E'                    ;Input.c: 57:         _inputUpdateRequired = 1;
  7117                           	clrf	(__inputUpdateRequired)
  7118  007E' 018A'              	incf	(__inputUpdateRequired),f
  7119  007F' 0A8A'              	line	58
  7120                           	
  7121                           i1l211:	
  7122  0080'                    	return
  7123  0080' 0008               	opt stack 0
  7124                           GLOBAL	__end_of_handle_rotary
  7125                           	__end_of_handle_rotary:
  7126  0081'                    	signat	_handle_rotary,89
  7127                           	global	_handle_potmeter
  7128                           
  7129 ;; *************** function _handle_potmeter *****************
  7130 ;; Defined at:
  7131 ;;		line 30 in file "Volume.c"
  7132 ;; Parameters:    Size  Location     Type
  7133 ;;		None
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  currentStep     2   50[BANK0 ] unsigned int 
  7136 ;;  ad_result       2   52[BANK0 ] unsigned int 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  1    wreg      void 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7146 ;;      Params:         0       0       0       0       0
  7147 ;;      Locals:         0       4       0       0       0
  7148 ;;      Temps:          0       2       0       0       0
  7149 ;;      Totals:         0       6       0       0       0
  7150 ;;Total ram usage:        6 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    2
  7153 ;; This function calls:
  7154 ;;		_is_deadzone
  7155 ;;		i1___lwdiv
  7156 ;; This function is called by:
  7157 ;;		_isr
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7161                           	file	"Volume.c"
  7162                           	line	30
  7163                           global __ptext23
  7164                           __ptext23:	;psect for function _handle_potmeter
  7165  0000'                    psect	text23
  7166                           	file	"Volume.c"
  7167                           	line	30
  7168                           	global	__size_of_handle_potmeter
  7169                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
  7170  0082                     	
  7171                           _handle_potmeter:	
  7172  0000'                    ;incstack = 0
  7173 ;; hardware stack exceeded
  7174                           	opt	stack 0
  7175                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7176                           	line	32
  7177                           	
  7178                           i1l2736:	
  7179  0000'                    ;Volume.c: 32:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
  7180                           	bcf	status, 5	;RP0=0, select bank0
  7181  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  7182  0001' 1303               	movf	(30),w	;volatile
  7183  0002' 081E               	movwf	(handle_potmeter@ad_result+1)
  7184  0003' 00B5'              	bsf	status, 5	;RP0=1, select bank1
  7185  0004' 1683               	bcf	status, 6	;RP1=0, select bank1
  7186  0005' 1303               	movf	(158)^080h,w	;volatile
  7187  0006' 081E               	bcf	status, 5	;RP0=0, select bank0
  7188  0007' 1283               	bcf	status, 6	;RP1=0, select bank0
  7189  0008' 1303               	movwf	(handle_potmeter@ad_result)
  7190  0009' 00B4'              	line	34
  7191                           ;Volume.c: 34:     if (ad_result == _lastAdcResult)
  7192                           	movf	(__lastAdcResult+1),w
  7193  000A' 0805'              	xorwf	(handle_potmeter@ad_result+1),w
  7194  000B' 0635'              	skipz
  7195  000C' 1D03               	goto	u287_25
  7196  000D' 2800'              	movf	(__lastAdcResult),w
  7197  000E' 0804'              	xorwf	(handle_potmeter@ad_result),w
  7198  000F' 0634'              u287_25:
  7199  0010'                    
  7200                           	skipz
  7201  0010' 1D03               	goto	u287_21
  7202  0011' 2800'              	goto	u287_20
  7203  0012' 2800'              u287_21:
  7204  0013'                    	goto	i1l2740
  7205  0013' 2800'              u287_20:
  7206  0014'                    	goto	i1l306
  7207  0014' 2800'              	line	35
  7208                           	
  7209                           i1l2738:	
  7210  0015'                    ;Volume.c: 35:         return;
  7211                           	goto	i1l306
  7212  0015' 2800'              	
  7213                           i1l305:	
  7214  0016'                    	line	37
  7215                           	
  7216                           i1l2740:	
  7217  0016'                    ;Volume.c: 37:     if (ad_result == 0 || ad_result < step_size) {
  7218                           	movf	((handle_potmeter@ad_result)),w
  7219  0016' 0834'              iorwf	((handle_potmeter@ad_result+1)),w
  7220  0017' 0435'              	btfsc	status,2
  7221  0018' 1903               	goto	u288_21
  7222  0019' 2800'              	goto	u288_20
  7223  001A' 2800'              u288_21:
  7224  001B'                    	goto	i1l2744
  7225  001B' 2800'              u288_20:
  7226  001C'                    	
  7227                           i1l2742:	
  7228  001C'                    	movlw	low(_step_size|8000h)
  7229  001C' 3000'              	movwf	fsr0
  7230  001D' 0084               	movlw	high(_step_size|8000h)
  7231  001E' 3000'              	movwf	btemp+1
  7232  001F' 00FF               	fcall	stringtab
  7233  0020' 120A' 118A' 2000' 120A' 118A' 	movwf	(??_handle_potmeter+0)+0
  7234  0025' 00B0'              	fcall	stringtab
  7235  0026' 120A' 118A' 2000' 120A' 118A' 	movwf	(??_handle_potmeter+0)+0+1
  7236  002B' 00B1'              	movf	1+(??_handle_potmeter+0)+0,w
  7237  002C' 0831'              	subwf	(handle_potmeter@ad_result+1),w
  7238  002D' 0235'              	skipz
  7239  002E' 1D03               	goto	u289_25
  7240  002F' 2800'              	movf	0+(??_handle_potmeter+0)+0,w
  7241  0030' 0830'              	subwf	(handle_potmeter@ad_result),w
  7242  0031' 0234'              u289_25:
  7243  0032'                    	skipnc
  7244  0032' 1803               	goto	u289_21
  7245  0033' 2800'              	goto	u289_20
  7246  0034' 2800'              u289_21:
  7247  0035'                    	goto	i1l2746
  7248  0035' 2800'              u289_20:
  7249  0036'                    	goto	i1l2744
  7250  0036' 2800'              	
  7251                           i1l309:	
  7252  0037'                    	line	38
  7253                           	
  7254                           i1l2744:	
  7255  0037'                    ;Volume.c: 38:             volume = 0;
  7256                           	bsf	status, 5	;RP0=1, select bank1
  7257  0037' 1683               	bcf	status, 6	;RP1=0, select bank1
  7258  0038' 1303               	clrf	(_volume)^080h
  7259  0039' 0180'              	clrf	(_volume+1)^080h
  7260  003A' 0180'              	line	39
  7261                           ;Volume.c: 39:     } else {
  7262                           	goto	i1l310
  7263  003B' 2800'              	
  7264                           i1l307:	
  7265  003C'                    	line	40
  7266                           	
  7267                           i1l2746:	
  7268  003C'                    ;Volume.c: 40:         unsigned int currentStep = ad_result / step_size;
  7269                           	movlw	low(_step_size|8000h)
  7270  003C' 3000'              	movwf	fsr0
  7271  003D' 0084               	movlw	high(_step_size|8000h)
  7272  003E' 3000'              	bcf	status, 5	;RP0=0, select bank0
  7273  003F' 1283               	movwf	btemp+1
  7274  0040' 00FF               	fcall	stringtab
  7275  0041' 120A' 118A' 2000' 120A' 118A' 	movwf	(i1___lwdiv@divisor)
  7276  0046' 0080'              	fcall	stringtab
  7277  0047' 120A' 118A' 2000' 120A' 118A' 	movwf	(i1___lwdiv@divisor+1)
  7278  004C' 0081'              	movf	(handle_potmeter@ad_result+1),w
  7279  004D' 0835'              	movwf	(i1___lwdiv@dividend+1)
  7280  004E' 0083'              	movf	(handle_potmeter@ad_result),w
  7281  004F' 0834'              	movwf	(i1___lwdiv@dividend)
  7282  0050' 0082'              	fcall	i1___lwdiv
  7283  0051' 120A' 118A' 2000' 120A' 118A' 	movf	(1+(?i1___lwdiv)),w
  7284  0056' 0801'              	bcf	status, 5	;RP0=0, select bank0
  7285  0057' 1283               	bcf	status, 6	;RP1=0, select bank0
  7286  0058' 1303               	movwf	(handle_potmeter@currentStep+1)
  7287  0059' 00B3'              	movf	(0+(?i1___lwdiv)),w
  7288  005A' 0800'              	movwf	(handle_potmeter@currentStep)
  7289  005B' 00B2'              	line	42
  7290                           ;Volume.c: 42:         if (!is_deadzone(currentStep, ad_result))
  7291                           	movf	(handle_potmeter@currentStep+1),w
  7292  005C' 0833'              	movwf	(is_deadzone@currentStep+1)
  7293  005D' 00A4'              	movf	(handle_potmeter@currentStep),w
  7294  005E' 0832'              	movwf	(is_deadzone@currentStep)
  7295  005F' 00A3'              	movf	(handle_potmeter@ad_result+1),w
  7296  0060' 0835'              	movwf	(is_deadzone@adcResult+1)
  7297  0061' 00A6'              	movf	(handle_potmeter@ad_result),w
  7298  0062' 0834'              	movwf	(is_deadzone@adcResult)
  7299  0063' 00A5'              	fcall	_is_deadzone
  7300  0064' 120A' 118A' 2000' 120A' 118A' 	bcf	status, 5	;RP0=0, select bank0
  7301  0069' 1283               	bcf	status, 6	;RP1=0, select bank0
  7302  006A' 1303               	movf	((0+(?_is_deadzone))),w
  7303  006B' 0823'              iorwf	((1+(?_is_deadzone))),w
  7304  006C' 0424'              	btfss	status,2
  7305  006D' 1D03               	goto	u290_21
  7306  006E' 2800'              	goto	u290_20
  7307  006F' 2800'              u290_21:
  7308  0070'                    	goto	i1l310
  7309  0070' 2800'              u290_20:
  7310  0071'                    	line	43
  7311                           	
  7312                           i1l2748:	
  7313  0071'                    ;Volume.c: 43:             volume = currentStep;
  7314                           	movf	(handle_potmeter@currentStep+1),w
  7315  0071' 0833'              	bsf	status, 5	;RP0=1, select bank1
  7316  0072' 1683               	bcf	status, 6	;RP1=0, select bank1
  7317  0073' 1303               	movwf	(_volume+1)^080h
  7318  0074' 0080'              	bcf	status, 5	;RP0=0, select bank0
  7319  0075' 1283               	bcf	status, 6	;RP1=0, select bank0
  7320  0076' 1303               	movf	(handle_potmeter@currentStep),w
  7321  0077' 0832'              	bsf	status, 5	;RP0=1, select bank1
  7322  0078' 1683               	bcf	status, 6	;RP1=0, select bank1
  7323  0079' 1303               	movwf	(_volume)^080h
  7324  007A' 0080'              	goto	i1l310
  7325  007B' 2800'              	
  7326                           i1l311:	
  7327  007C'                    	line	44
  7328                           ;Volume.c: 44:     }
  7329                           	
  7330                           i1l310:	
  7331  007C'                    	line	46
  7332                           ;Volume.c: 46:     _lastAdcResult = ad_result;
  7333                           	bcf	status, 5	;RP0=0, select bank0
  7334  007C' 1283               	movf	(handle_potmeter@ad_result+1),w
  7335  007D' 0835'              	movwf	(__lastAdcResult+1)
  7336  007E' 0085'              	movf	(handle_potmeter@ad_result),w
  7337  007F' 0834'              	movwf	(__lastAdcResult)
  7338  0080' 0084'              	line	48
  7339                           	
  7340                           i1l306:	
  7341  0081'                    	return
  7342  0081' 0008               	opt stack 0
  7343                           GLOBAL	__end_of_handle_potmeter
  7344                           	__end_of_handle_potmeter:
  7345  0082'                    	signat	_handle_potmeter,89
  7346                           	global	i1___lwdiv
  7347                           
  7348 ;; *************** function i1___lwdiv *****************
  7349 ;; Defined at:
  7350 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;  divisor         2    0[COMMON] unsigned int 
  7353 ;;  dividend        2    2[COMMON] unsigned int 
  7354 ;; Auto vars:     Size  Location     Type
  7355 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7356 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  2    0[COMMON] unsigned int 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7366 ;;      Params:         4       0       0       0       0
  7367 ;;      Locals:         3       0       0       0       0
  7368 ;;      Temps:          1       0       0       0       0
  7369 ;;      Totals:         8       0       0       0       0
  7370 ;;Total ram usage:        8 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_handle_potmeter
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7379                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7380                           	line	5
  7381                           global __ptext24
  7382                           __ptext24:	;psect for function i1___lwdiv
  7383  0000'                    psect	text24
  7384                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7385                           	line	5
  7386                           	global	__size_ofi1___lwdiv
  7387                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
  7388  004B                     	
  7389                           i1___lwdiv:	
  7390  0000'                    ;incstack = 0
  7391 ;; hardware stack exceeded
  7392                           	opt	stack 0
  7393                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7394                           	line	13
  7395                           	
  7396                           i1l2536:	
  7397  0000'                    	clrf	(i1___lwdiv@quotient)
  7398  0000' 0185'              	clrf	(i1___lwdiv@quotient+1)
  7399  0001' 0186'              	line	14
  7400                           	
  7401                           i1l2538:	
  7402  0002'                    	movf	((i1___lwdiv@divisor)),w
  7403  0002' 0800'              iorwf	((i1___lwdiv@divisor+1)),w
  7404  0003' 0401'              	btfsc	status,2
  7405  0004' 1903               	goto	u265_21
  7406  0005' 2800'              	goto	u265_20
  7407  0006' 2800'              u265_21:
  7408  0007'                    	goto	i1l2558
  7409  0007' 2800'              u265_20:
  7410  0008'                    	line	15
  7411                           	
  7412                           i1l2540:	
  7413  0008'                    	clrf	(i1___lwdiv@counter)
  7414  0008' 0187'              	incf	(i1___lwdiv@counter),f
  7415  0009' 0A87'              	line	16
  7416                           	goto	i1l2546
  7417  000A' 2800'              	
  7418                           i1l726:	
  7419  000B'                    	line	17
  7420                           	
  7421                           i1l2542:	
  7422  000B'                    	movlw	01h
  7423  000B' 3001               	
  7424                           u266_25:
  7425  000C'                    	clrc
  7426  000C' 1003               	rlf	(i1___lwdiv@divisor),f
  7427  000D' 0D80'              	rlf	(i1___lwdiv@divisor+1),f
  7428  000E' 0D81'              	addlw	-1
  7429  000F' 3EFF               	skipz
  7430  0010' 1D03               	goto	u266_25
  7431  0011' 2800'              	line	18
  7432                           	
  7433                           i1l2544:	
  7434  0012'                    	movlw	low(01h)
  7435  0012' 3001               	movwf	(??i1___lwdiv+0)+0
  7436  0013' 0084'              	movf	(??i1___lwdiv+0)+0,w
  7437  0014' 0804'              	addwf	(i1___lwdiv@counter),f
  7438  0015' 0787'              	goto	i1l2546
  7439  0016' 2800'              	line	19
  7440                           	
  7441                           i1l725:	
  7442  0017'                    	line	16
  7443                           	
  7444                           i1l2546:	
  7445  0017'                    	btfss	(i1___lwdiv@divisor+1),(15)&7
  7446  0017' 1F81'              	goto	u267_21
  7447  0018' 2800'              	goto	u267_20
  7448  0019' 2800'              u267_21:
  7449  001A'                    	goto	i1l2542
  7450  001A' 2800'              u267_20:
  7451  001B'                    	goto	i1l2548
  7452  001B' 2800'              	
  7453                           i1l727:	
  7454  001C'                    	goto	i1l2548
  7455  001C' 2800'              	line	20
  7456                           	
  7457                           i1l728:	
  7458  001D'                    	line	21
  7459                           	
  7460                           i1l2548:	
  7461  001D'                    	movlw	01h
  7462  001D' 3001               	
  7463                           u268_25:
  7464  001E'                    	clrc
  7465  001E' 1003               	rlf	(i1___lwdiv@quotient),f
  7466  001F' 0D85'              	rlf	(i1___lwdiv@quotient+1),f
  7467  0020' 0D86'              	addlw	-1
  7468  0021' 3EFF               	skipz
  7469  0022' 1D03               	goto	u268_25
  7470  0023' 2800'              	line	22
  7471                           	movf	(i1___lwdiv@divisor+1),w
  7472  0024' 0801'              	subwf	(i1___lwdiv@dividend+1),w
  7473  0025' 0203'              	skipz
  7474  0026' 1D03               	goto	u269_25
  7475  0027' 2800'              	movf	(i1___lwdiv@divisor),w
  7476  0028' 0800'              	subwf	(i1___lwdiv@dividend),w
  7477  0029' 0202'              u269_25:
  7478  002A'                    	skipc
  7479  002A' 1C03               	goto	u269_21
  7480  002B' 2800'              	goto	u269_20
  7481  002C' 2800'              u269_21:
  7482  002D'                    	goto	i1l2554
  7483  002D' 2800'              u269_20:
  7484  002E'                    	line	23
  7485                           	
  7486                           i1l2550:	
  7487  002E'                    	movf	(i1___lwdiv@divisor),w
  7488  002E' 0800'              	subwf	(i1___lwdiv@dividend),f
  7489  002F' 0282'              	movf	(i1___lwdiv@divisor+1),w
  7490  0030' 0801'              	skipc
  7491  0031' 1C03               	decf	(i1___lwdiv@dividend+1),f
  7492  0032' 0383'              	subwf	(i1___lwdiv@dividend+1),f
  7493  0033' 0283'              	line	24
  7494                           	
  7495                           i1l2552:	
  7496  0034'                    	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
  7497  0034' 1405'              	goto	i1l2554
  7498  0035' 2800'              	line	25
  7499                           	
  7500                           i1l729:	
  7501  0036'                    	line	26
  7502                           	
  7503                           i1l2554:	
  7504  0036'                    	movlw	01h
  7505  0036' 3001               	
  7506                           u270_25:
  7507  0037'                    	clrc
  7508  0037' 1003               	rrf	(i1___lwdiv@divisor+1),f
  7509  0038' 0C81'              	rrf	(i1___lwdiv@divisor),f
  7510  0039' 0C80'              	addlw	-1
  7511  003A' 3EFF               	skipz
  7512  003B' 1D03               	goto	u270_25
  7513  003C' 2800'              	line	27
  7514                           	
  7515                           i1l2556:	
  7516  003D'                    	movlw	01h
  7517  003D' 3001               	subwf	(i1___lwdiv@counter),f
  7518  003E' 0287'              	btfss	status,2
  7519  003F' 1D03               	goto	u271_21
  7520  0040' 2800'              	goto	u271_20
  7521  0041' 2800'              u271_21:
  7522  0042'                    	goto	i1l2548
  7523  0042' 2800'              u271_20:
  7524  0043'                    	goto	i1l2558
  7525  0043' 2800'              	
  7526                           i1l730:	
  7527  0044'                    	goto	i1l2558
  7528  0044' 2800'              	line	28
  7529                           	
  7530                           i1l724:	
  7531  0045'                    	line	29
  7532                           	
  7533                           i1l2558:	
  7534  0045'                    	movf	(i1___lwdiv@quotient+1),w
  7535  0045' 0806'              	movwf	(?i1___lwdiv+1)
  7536  0046' 0081'              	movf	(i1___lwdiv@quotient),w
  7537  0047' 0805'              	movwf	(?i1___lwdiv)
  7538  0048' 0080'              	goto	i1l731
  7539  0049' 2800'              	
  7540                           i1l2560:	
  7541  004A'                    	line	30
  7542                           	
  7543                           i1l731:	
  7544  004A'                    	return
  7545  004A' 0008               	opt stack 0
  7546                           GLOBAL	__end_ofi1___lwdiv
  7547                           	__end_ofi1___lwdiv:
  7548  004B'                    	signat	i1___lwdiv,90
  7549                           	global	_is_deadzone
  7550                           
  7551 ;; *************** function _is_deadzone *****************
  7552 ;; Defined at:
  7553 ;;		line 20 in file "Volume.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;  currentStep     2   35[BANK0 ] int 
  7556 ;;  adcResult       2   37[BANK0 ] int 
  7557 ;; Auto vars:     Size  Location     Type
  7558 ;;  turnPoint       2   46[BANK0 ] int 
  7559 ;;  deadzoneHigh    2   43[BANK0 ] int 
  7560 ;;  deadzoneLow     2   41[BANK0 ] int 
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  2   35[BANK0 ] int 
  7563 ;; Registers used:
  7564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7570 ;;      Params:         0       4       0       0       0
  7571 ;;      Locals:         0       7       0       0       0
  7572 ;;      Temps:          0       2       0       0       0
  7573 ;;      Totals:         0      13       0       0       0
  7574 ;;Total ram usage:       13 bytes
  7575 ;; Hardware stack levels used:    1
  7576 ;; Hardware stack levels required when called:    1
  7577 ;; This function calls:
  7578 ;;		___fladd
  7579 ;;		___fltol
  7580 ;;		___xxtofl
  7581 ;;		i1___wmul
  7582 ;; This function is called by:
  7583 ;;		_handle_potmeter
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7587                           	file	"Volume.c"
  7588                           	line	20
  7589                           global __ptext25
  7590                           __ptext25:	;psect for function _is_deadzone
  7591  0000'                    psect	text25
  7592                           	file	"Volume.c"
  7593                           	line	20
  7594                           	global	__size_of_is_deadzone
  7595                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  7596  00C6                     	
  7597                           _is_deadzone:	
  7598  0000'                    ;incstack = 0
  7599 ;; hardware stack exceeded
  7600                           	opt	stack 0
  7601                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7602                           	line	22
  7603                           	
  7604                           i1l2466:	
  7605  0000'                    ;Volume.c: 20: int is_deadzone(int currentStep, int adcResult);Volume.c: 21: {;Volume.c:
                                  22:     int turnPoint = step_size * currentStep;
  7606                           	movlw	low(_step_size|8000h)
  7607  0000' 3000'              	movwf	fsr0
  7608  0001' 0084               	movlw	high(_step_size|8000h)
  7609  0002' 3000'              	bcf	status, 5	;RP0=0, select bank0
  7610  0003' 1283               	bcf	status, 6	;RP1=0, select bank0
  7611  0004' 1303               	movwf	btemp+1
  7612  0005' 00FF               	fcall	stringtab
  7613  0006' 120A' 118A' 2000' 120A' 118A' 	movwf	(i1___wmul@multiplier)
  7614  000B' 0080'              	fcall	stringtab
  7615  000C' 120A' 118A' 2000' 120A' 118A' 	movwf	(i1___wmul@multiplier+1)
  7616  0011' 0081'              	movf	(is_deadzone@currentStep+1),w
  7617  0012' 0824'              	movwf	(i1___wmul@multiplicand+1)
  7618  0013' 0083'              	movf	(is_deadzone@currentStep),w
  7619  0014' 0823'              	movwf	(i1___wmul@multiplicand)
  7620  0015' 0082'              	fcall	i1___wmul
  7621  0016' 120A' 118A' 2000' 120A' 118A' 	movf	(1+(?i1___wmul)),w
  7622  001B' 0801'              	bcf	status, 5	;RP0=0, select bank0
  7623  001C' 1283               	bcf	status, 6	;RP1=0, select bank0
  7624  001D' 1303               	movwf	(is_deadzone@turnPoint+1)
  7625  001E' 00AF'              	movf	(0+(?i1___wmul)),w
  7626  001F' 0800'              	movwf	(is_deadzone@turnPoint)
  7627  0020' 00AE'              	line	24
  7628                           	
  7629                           i1l2468:	
  7630  0021'                    ;Volume.c: 24:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  7631                           	movf	(is_deadzone@turnPoint),w
  7632  0021' 082E'              	movwf	(___xxtofl@val)
  7633  0022' 0080'              	movf	(is_deadzone@turnPoint+1),w
  7634  0023' 082F'              	movwf	(___xxtofl@val+1)
  7635  0024' 0081'              	movlw	0
  7636  0025' 3000               	btfsc	(___xxtofl@val+1),7
  7637  0026' 1B81'              	movlw	255
  7638  0027' 30FF               	movwf	(___xxtofl@val+2)
  7639  0028' 0082'              	movwf	(___xxtofl@val+3)
  7640  0029' 0083'              	movlw	low(01h)
  7641  002A' 3001               	fcall	___xxtofl
  7642  002B' 120A' 118A' 2000' 120A' 118A' 	movf	(3+(?___xxtofl)),w
  7643  0030' 0803'              	bcf	status, 5	;RP0=0, select bank0
  7644  0031' 1283               	bcf	status, 6	;RP1=0, select bank0
  7645  0032' 1303               	movwf	(___fladd@a+3)
  7646  0033' 0087'              	movf	(2+(?___xxtofl)),w
  7647  0034' 0802'              	movwf	(___fladd@a+2)
  7648  0035' 0086'              	movf	(1+(?___xxtofl)),w
  7649  0036' 0801'              	movwf	(___fladd@a+1)
  7650  0037' 0085'              	movf	(0+(?___xxtofl)),w
  7651  0038' 0800'              	movwf	(___fladd@a)
  7652  0039' 0084'              
  7653                           	movlw	0xc1
  7654  003A' 30C1               	movwf	(___fladd@b+3)
  7655  003B' 0083'              	movlw	0x23
  7656  003C' 3023               	movwf	(___fladd@b+2)
  7657  003D' 0082'              	movlw	0xae
  7658  003E' 30AE               	movwf	(___fladd@b+1)
  7659  003F' 0081'              	movlw	0x14
  7660  0040' 3014               	movwf	(___fladd@b)
  7661  0041' 0080'              
  7662                           	fcall	___fladd
  7663  0042' 120A' 118A' 2000' 120A' 118A' 	bcf	status, 5	;RP0=0, select bank0
  7664  0047' 1283               	bcf	status, 6	;RP1=0, select bank0
  7665  0048' 1303               	movf	(3+(?___fladd)),w
  7666  0049' 0803'              	movwf	(___fltol@f1+3)
  7667  004A' 009B'              	movf	(2+(?___fladd)),w
  7668  004B' 0802'              	movwf	(___fltol@f1+2)
  7669  004C' 009A'              	movf	(1+(?___fladd)),w
  7670  004D' 0801'              	movwf	(___fltol@f1+1)
  7671  004E' 0099'              	movf	(0+(?___fladd)),w
  7672  004F' 0800'              	movwf	(___fltol@f1)
  7673  0050' 0098'              
  7674                           	fcall	___fltol
  7675  0051' 120A' 118A' 2000' 120A' 118A' 	bcf	status, 5	;RP0=0, select bank0
  7676  0056' 1283               	bcf	status, 6	;RP1=0, select bank0
  7677  0057' 1303               	movf	(1+(?___fltol)),w
  7678  0058' 0819'              	movwf	(is_deadzone@deadzoneLow+1)
  7679  0059' 00AA'              	movf	(0+(?___fltol)),w
  7680  005A' 0818'              	movwf	(is_deadzone@deadzoneLow)
  7681  005B' 00A9'              	line	25
  7682                           	
  7683                           i1l2470:	
  7684  005C'                    ;Volume.c: 25:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  7685                           	movf	(is_deadzone@turnPoint),w
  7686  005C' 082E'              	movwf	(___xxtofl@val)
  7687  005D' 0080'              	movf	(is_deadzone@turnPoint+1),w
  7688  005E' 082F'              	movwf	(___xxtofl@val+1)
  7689  005F' 0081'              	movlw	0
  7690  0060' 3000               	btfsc	(___xxtofl@val+1),7
  7691  0061' 1B81'              	movlw	255
  7692  0062' 30FF               	movwf	(___xxtofl@val+2)
  7693  0063' 0082'              	movwf	(___xxtofl@val+3)
  7694  0064' 0083'              	movlw	low(01h)
  7695  0065' 3001               	fcall	___xxtofl
  7696  0066' 120A' 118A' 2000' 120A' 118A' 	movf	(3+(?___xxtofl)),w
  7697  006B' 0803'              	bcf	status, 5	;RP0=0, select bank0
  7698  006C' 1283               	bcf	status, 6	;RP1=0, select bank0
  7699  006D' 1303               	movwf	(___fladd@a+3)
  7700  006E' 0087'              	movf	(2+(?___xxtofl)),w
  7701  006F' 0802'              	movwf	(___fladd@a+2)
  7702  0070' 0086'              	movf	(1+(?___xxtofl)),w
  7703  0071' 0801'              	movwf	(___fladd@a+1)
  7704  0072' 0085'              	movf	(0+(?___xxtofl)),w
  7705  0073' 0800'              	movwf	(___fladd@a)
  7706  0074' 0084'              
  7707                           	movlw	0x41
  7708  0075' 3041               	movwf	(___fladd@b+3)
  7709  0076' 0083'              	movlw	0x23
  7710  0077' 3023               	movwf	(___fladd@b+2)
  7711  0078' 0082'              	movlw	0xae
  7712  0079' 30AE               	movwf	(___fladd@b+1)
  7713  007A' 0081'              	movlw	0x14
  7714  007B' 3014               	movwf	(___fladd@b)
  7715  007C' 0080'              
  7716                           	fcall	___fladd
  7717  007D' 120A' 118A' 2000' 120A' 118A' 	bcf	status, 5	;RP0=0, select bank0
  7718  0082' 1283               	bcf	status, 6	;RP1=0, select bank0
  7719  0083' 1303               	movf	(3+(?___fladd)),w
  7720  0084' 0803'              	movwf	(___fltol@f1+3)
  7721  0085' 009B'              	movf	(2+(?___fladd)),w
  7722  0086' 0802'              	movwf	(___fltol@f1+2)
  7723  0087' 009A'              	movf	(1+(?___fladd)),w
  7724  0088' 0801'              	movwf	(___fltol@f1+1)
  7725  0089' 0099'              	movf	(0+(?___fladd)),w
  7726  008A' 0800'              	movwf	(___fltol@f1)
  7727  008B' 0098'              
  7728                           	fcall	___fltol
  7729  008C' 120A' 118A' 2000' 120A' 118A' 	bcf	status, 5	;RP0=0, select bank0
  7730  0091' 1283               	bcf	status, 6	;RP1=0, select bank0
  7731  0092' 1303               	movf	(1+(?___fltol)),w
  7732  0093' 0819'              	movwf	(is_deadzone@deadzoneHigh+1)
  7733  0094' 00AC'              	movf	(0+(?___fltol)),w
  7734  0095' 0818'              	movwf	(is_deadzone@deadzoneHigh)
  7735  0096' 00AB'              	line	27
  7736                           	
  7737                           i1l2472:	
  7738  0097'                    ;Volume.c: 27:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  7739                           	clrf	(_is_deadzone$871)
  7740  0097' 01AD'              	
  7741                           i1l2474:	
  7742  0098'                    	movf	(is_deadzone@deadzoneLow+1),w
  7743  0098' 082A'              	xorlw	80h
  7744  0099' 3A80               	movwf	(??_is_deadzone+0)+0
  7745  009A' 00A7'              	movf	(is_deadzone@adcResult+1),w
  7746  009B' 0826'              	xorlw	80h
  7747  009C' 3A80               	subwf	(??_is_deadzone+0)+0,w
  7748  009D' 0227'              	skipz
  7749  009E' 1D03               	goto	u263_25
  7750  009F' 2800'              	movf	(is_deadzone@adcResult),w
  7751  00A0' 0825'              	subwf	(is_deadzone@deadzoneLow),w
  7752  00A1' 0229'              u263_25:
  7753  00A2'                    
  7754                           	skipnc
  7755  00A2' 1803               	goto	u263_21
  7756  00A3' 2800'              	goto	u263_20
  7757  00A4' 2800'              u263_21:
  7758  00A5'                    	goto	i1l2480
  7759  00A5' 2800'              u263_20:
  7760  00A6'                    	
  7761                           i1l2476:	
  7762  00A6'                    	bcf	status, 5	;RP0=0, select bank0
  7763  00A6' 1283               	bcf	status, 6	;RP1=0, select bank0
  7764  00A7' 1303               	movf	(is_deadzone@adcResult+1),w
  7765  00A8' 0826'              	xorlw	80h
  7766  00A9' 3A80               	movwf	(??_is_deadzone+0)+0
  7767  00AA' 00A7'              	movf	(is_deadzone@deadzoneHigh+1),w
  7768  00AB' 082C'              	xorlw	80h
  7769  00AC' 3A80               	subwf	(??_is_deadzone+0)+0,w
  7770  00AD' 0227'              	skipz
  7771  00AE' 1D03               	goto	u264_25
  7772  00AF' 2800'              	movf	(is_deadzone@deadzoneHigh),w
  7773  00B0' 082B'              	subwf	(is_deadzone@adcResult),w
  7774  00B1' 0225'              u264_25:
  7775  00B2'                    
  7776                           	skipnc
  7777  00B2' 1803               	goto	u264_21
  7778  00B3' 2800'              	goto	u264_20
  7779  00B4' 2800'              u264_21:
  7780  00B5'                    	goto	i1l2480
  7781  00B5' 2800'              u264_20:
  7782  00B6'                    	
  7783                           i1l2478:	
  7784  00B6'                    	bcf	status, 5	;RP0=0, select bank0
  7785  00B6' 1283               	bcf	status, 6	;RP1=0, select bank0
  7786  00B7' 1303               	clrf	(_is_deadzone$871)
  7787  00B8' 01AD'              	incf	(_is_deadzone$871),f
  7788  00B9' 0AAD'              	goto	i1l2480
  7789  00BA' 2800'              	
  7790                           i1l301:	
  7791  00BB'                    	
  7792                           i1l2480:	
  7793  00BB'                    	bcf	status, 5	;RP0=0, select bank0
  7794  00BB' 1283               	bcf	status, 6	;RP1=0, select bank0
  7795  00BC' 1303               	movf	(_is_deadzone$871),w
  7796  00BD' 082D'              	movwf	(??_is_deadzone+0)+0
  7797  00BE' 00A7'              	clrf	(??_is_deadzone+0)+0+1
  7798  00BF' 01A8'              	movf	0+(??_is_deadzone+0)+0,w
  7799  00C0' 0827'              	movwf	(?_is_deadzone)
  7800  00C1' 00A3'              	movf	1+(??_is_deadzone+0)+0,w
  7801  00C2' 0828'              	movwf	(?_is_deadzone+1)
  7802  00C3' 00A4'              	goto	i1l302
  7803  00C4' 2800'              	
  7804                           i1l2482:	
  7805  00C5'                    	line	28
  7806                           	
  7807                           i1l302:	
  7808  00C5'                    	return
  7809  00C5' 0008               	opt stack 0
  7810                           GLOBAL	__end_of_is_deadzone
  7811                           	__end_of_is_deadzone:
  7812  00C6'                    	signat	_is_deadzone,8314
  7813                           	global	i1___wmul
  7814                           
  7815 ;; *************** function i1___wmul *****************
  7816 ;; Defined at:
  7817 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;  multiplier      2    0[COMMON] unsigned int 
  7820 ;;  multiplicand    2    2[COMMON] unsigned int 
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;  __wmul          2    4[COMMON] unsigned int 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2    0[COMMON] unsigned int 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7832 ;;      Params:         4       0       0       0       0
  7833 ;;      Locals:         2       0       0       0       0
  7834 ;;      Temps:          0       0       0       0       0
  7835 ;;      Totals:         6       0       0       0       0
  7836 ;;Total ram usage:        6 bytes
  7837 ;; Hardware stack levels used:    1
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_is_deadzone
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7845                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7846                           	line	15
  7847                           global __ptext26
  7848                           __ptext26:	;psect for function i1___wmul
  7849  0000'                    psect	text26
  7850                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7851                           	line	15
  7852                           	global	__size_ofi1___wmul
  7853                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  7854  0028                     	
  7855                           i1___wmul:	
  7856  0000'                    ;incstack = 0
  7857 ;; hardware stack exceeded
  7858                           	opt	stack 0
  7859                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7860                           	line	43
  7861                           	
  7862                           i1l2346:	
  7863  0000'                    	clrf	(i1___wmul@product)
  7864  0000' 0184'              	clrf	(i1___wmul@product+1)
  7865  0001' 0185'              	goto	i1l2348
  7866  0002' 2800'              	line	44
  7867                           	
  7868                           i1l458:	
  7869  0003'                    	line	45
  7870                           	
  7871                           i1l2348:	
  7872  0003'                    	btfss	(i1___wmul@multiplier),(0)&7
  7873  0003' 1C00'              	goto	u253_21
  7874  0004' 2800'              	goto	u253_20
  7875  0005' 2800'              u253_21:
  7876  0006'                    	goto	i1l459
  7877  0006' 2800'              u253_20:
  7878  0007'                    	line	46
  7879                           	
  7880                           i1l2350:	
  7881  0007'                    	movf	(i1___wmul@multiplicand),w
  7882  0007' 0802'              	addwf	(i1___wmul@product),f
  7883  0008' 0784'              	skipnc
  7884  0009' 1803               	incf	(i1___wmul@product+1),f
  7885  000A' 0A85'              	movf	(i1___wmul@multiplicand+1),w
  7886  000B' 0803'              	addwf	(i1___wmul@product+1),f
  7887  000C' 0785'              	
  7888                           i1l459:	
  7889  000D'                    	line	47
  7890                           	movlw	01h
  7891  000D' 3001               	
  7892                           u254_25:
  7893  000E'                    	clrc
  7894  000E' 1003               	rlf	(i1___wmul@multiplicand),f
  7895  000F' 0D82'              	rlf	(i1___wmul@multiplicand+1),f
  7896  0010' 0D83'              	addlw	-1
  7897  0011' 3EFF               	skipz
  7898  0012' 1D03               	goto	u254_25
  7899  0013' 2800'              	line	48
  7900                           	
  7901                           i1l2352:	
  7902  0014'                    	movlw	01h
  7903  0014' 3001               	
  7904                           u255_25:
  7905  0015'                    	clrc
  7906  0015' 1003               	rrf	(i1___wmul@multiplier+1),f
  7907  0016' 0C81'              	rrf	(i1___wmul@multiplier),f
  7908  0017' 0C80'              	addlw	-1
  7909  0018' 3EFF               	skipz
  7910  0019' 1D03               	goto	u255_25
  7911  001A' 2800'              	line	49
  7912                           	
  7913                           i1l2354:	
  7914  001B'                    	movf	((i1___wmul@multiplier)),w
  7915  001B' 0800'              iorwf	((i1___wmul@multiplier+1)),w
  7916  001C' 0401'              	btfss	status,2
  7917  001D' 1D03               	goto	u256_21
  7918  001E' 2800'              	goto	u256_20
  7919  001F' 2800'              u256_21:
  7920  0020'                    	goto	i1l2348
  7921  0020' 2800'              u256_20:
  7922  0021'                    	goto	i1l2356
  7923  0021' 2800'              	
  7924                           i1l460:	
  7925  0022'                    	line	52
  7926                           	
  7927                           i1l2356:	
  7928  0022'                    	movf	(i1___wmul@product+1),w
  7929  0022' 0805'              	movwf	(?i1___wmul+1)
  7930  0023' 0081'              	movf	(i1___wmul@product),w
  7931  0024' 0804'              	movwf	(?i1___wmul)
  7932  0025' 0080'              	goto	i1l461
  7933  0026' 2800'              	
  7934                           i1l2358:	
  7935  0027'                    	line	53
  7936                           	
  7937                           i1l461:	
  7938  0027'                    	return
  7939  0027' 0008               	opt stack 0
  7940                           GLOBAL	__end_ofi1___wmul
  7941                           	__end_ofi1___wmul:
  7942  0028'                    	signat	i1___wmul,90
  7943                           	global	___xxtofl
  7944                           
  7945 ;; *************** function ___xxtofl *****************
  7946 ;; Defined at:
  7947 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7948 ;; Parameters:    Size  Location     Type
  7949 ;;  sign            1    wreg     unsigned char 
  7950 ;;  val             4    0[COMMON] long 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  sign            1    8[COMMON] unsigned char 
  7953 ;;  arg             4   10[COMMON] unsigned long 
  7954 ;;  exp             1    9[COMMON] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  4    0[COMMON] unsigned char 
  7957 ;; Registers used:
  7958 ;;		wreg, status,2, status,0
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7964 ;;      Params:         4       0       0       0       0
  7965 ;;      Locals:         6       0       0       0       0
  7966 ;;      Temps:          4       0       0       0       0
  7967 ;;      Totals:        14       0       0       0       0
  7968 ;;Total ram usage:       14 bytes
  7969 ;; Hardware stack levels used:    1
  7970 ;; This function calls:
  7971 ;;		Nothing
  7972 ;; This function is called by:
  7973 ;;		_is_deadzone
  7974 ;; This function uses a non-reentrant model
  7975 ;;
  7976                           psect	text27,local,class=CODE,delta=2,merge=1,group=1
  7977                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7978                           	line	10
  7979                           global __ptext27
  7980                           __ptext27:	;psect for function ___xxtofl
  7981  0000'                    psect	text27
  7982                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7983                           	line	10
  7984                           	global	__size_of___xxtofl
  7985                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  7986  00C2                     	
  7987                           ___xxtofl:	
  7988  0000'                    ;incstack = 0
  7989 ;; hardware stack exceeded
  7990                           	opt	stack 0
  7991                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7992                           ;___xxtofl@sign stored from wreg
  7993                           	movwf	(___xxtofl@sign)
  7994  0000' 0088'              	line	15
  7995                           	
  7996                           i1l2302:	
  7997  0001'                    	movf	((___xxtofl@sign)),w
  7998  0001' 0808'              	btfsc	status,2
  7999  0002' 1903               	goto	u239_21
  8000  0003' 2800'              	goto	u239_20
  8001  0004' 2800'              u239_21:
  8002  0005'                    	goto	i1l2308
  8003  0005' 2800'              u239_20:
  8004  0006'                    	
  8005                           i1l2304:	
  8006  0006'                    	btfss	(___xxtofl@val+3),7
  8007  0006' 1F83'              	goto	u240_21
  8008  0007' 2800'              	goto	u240_20
  8009  0008' 2800'              u240_21:
  8010  0009'                    	goto	i1l2308
  8011  0009' 2800'              u240_20:
  8012  000A'                    	line	16
  8013                           	
  8014                           i1l2306:	
  8015  000A'                    	comf	(___xxtofl@val)+0,w
  8016  000A' 0900'              	movwf	(___xxtofl@arg)
  8017  000B' 008A'              	comf	(___xxtofl@val)+1,w
  8018  000C' 0901'              	movwf	(___xxtofl@arg+1)
  8019  000D' 008B'              	comf	(___xxtofl@val)+2,w
  8020  000E' 0902'              	movwf	(___xxtofl@arg+2)
  8021  000F' 008C'              	comf	(___xxtofl@val)+3,w
  8022  0010' 0903'              	movwf	(___xxtofl@arg+3)
  8023  0011' 008D'              	incf	(___xxtofl@arg),f
  8024  0012' 0A8A'              	skipnz
  8025  0013' 1903               	incf	(___xxtofl@arg+1),f
  8026  0014' 0A8B'              	skipnz
  8027  0015' 1903               	incf	(___xxtofl@arg+2),f
  8028  0016' 0A8C'              	skipnz
  8029  0017' 1903               	incf	(___xxtofl@arg+3),f
  8030  0018' 0A8D'              	line	17
  8031                           	goto	i1l867
  8032  0019' 2800'              	line	18
  8033                           	
  8034                           i1l866:	
  8035  001A'                    	line	19
  8036                           	
  8037                           i1l2308:	
  8038  001A'                    	movf	(___xxtofl@val+3),w
  8039  001A' 0803'              	movwf	(___xxtofl@arg+3)
  8040  001B' 008D'              	movf	(___xxtofl@val+2),w
  8041  001C' 0802'              	movwf	(___xxtofl@arg+2)
  8042  001D' 008C'              	movf	(___xxtofl@val+1),w
  8043  001E' 0801'              	movwf	(___xxtofl@arg+1)
  8044  001F' 008B'              	movf	(___xxtofl@val),w
  8045  0020' 0800'              	movwf	(___xxtofl@arg)
  8046  0021' 008A'              
  8047                           	line	20
  8048                           	
  8049                           i1l867:	
  8050  0022'                    	line	21
  8051                           	movf	(___xxtofl@val+3),w
  8052  0022' 0803'              	iorwf	(___xxtofl@val+2),w
  8053  0023' 0402'              	iorwf	(___xxtofl@val+1),w
  8054  0024' 0401'              	iorwf	(___xxtofl@val),w
  8055  0025' 0400'              	skipz
  8056  0026' 1D03               	goto	u241_21
  8057  0027' 2800'              	goto	u241_20
  8058  0028' 2800'              u241_21:
  8059  0029'                    	goto	i1l2314
  8060  0029' 2800'              u241_20:
  8061  002A'                    	line	22
  8062                           	
  8063                           i1l2310:	
  8064  002A'                    	movlw	0x0
  8065  002A' 3000               	movwf	(?___xxtofl+3)
  8066  002B' 0083'              	movlw	0x0
  8067  002C' 3000               	movwf	(?___xxtofl+2)
  8068  002D' 0082'              	movlw	0x0
  8069  002E' 3000               	movwf	(?___xxtofl+1)
  8070  002F' 0081'              	movlw	0x0
  8071  0030' 3000               	movwf	(?___xxtofl)
  8072  0031' 0080'              
  8073                           	goto	i1l869
  8074  0032' 2800'              	
  8075                           i1l2312:	
  8076  0033'                    	goto	i1l869
  8077  0033' 2800'              	
  8078                           i1l868:	
  8079  0034'                    	line	23
  8080                           	
  8081                           i1l2314:	
  8082  0034'                    	movlw	low(096h)
  8083  0034' 3096               	movwf	(??___xxtofl+0)+0
  8084  0035' 0084'              	movf	(??___xxtofl+0)+0,w
  8085  0036' 0804'              	movwf	(___xxtofl@exp)
  8086  0037' 0089'              	line	24
  8087                           	goto	i1l2318
  8088  0038' 2800'              	
  8089                           i1l871:	
  8090  0039'                    	line	25
  8091                           	
  8092                           i1l2316:	
  8093  0039'                    	movlw	low(01h)
  8094  0039' 3001               	movwf	(??___xxtofl+0)+0
  8095  003A' 0084'              	movf	(??___xxtofl+0)+0,w
  8096  003B' 0804'              	addwf	(___xxtofl@exp),f
  8097  003C' 0789'              	line	26
  8098                           	movlw	01h
  8099  003D' 3001               u242_25:
  8100  003E'                    	clrc
  8101  003E' 1003               	rrf	(___xxtofl@arg+3),f
  8102  003F' 0C8D'              	rrf	(___xxtofl@arg+2),f
  8103  0040' 0C8C'              	rrf	(___xxtofl@arg+1),f
  8104  0041' 0C8B'              	rrf	(___xxtofl@arg),f
  8105  0042' 0C8A'              	addlw	-1
  8106  0043' 3EFF               	skipz
  8107  0044' 1D03               	goto	u242_25
  8108  0045' 2800'              
  8109                           	goto	i1l2318
  8110  0046' 2800'              	line	27
  8111                           	
  8112                           i1l870:	
  8113  0047'                    	line	24
  8114                           	
  8115                           i1l2318:	
  8116  0047'                    	movlw	high highword(0FE000000h)
  8117  0047' 30FE               	andwf	(___xxtofl@arg+3),w
  8118  0048' 050D'              	btfss	status,2
  8119  0049' 1D03               	goto	u243_21
  8120  004A' 2800'              	goto	u243_20
  8121  004B' 2800'              u243_21:
  8122  004C'                    	goto	i1l2316
  8123  004C' 2800'              u243_20:
  8124  004D'                    	goto	i1l873
  8125  004D' 2800'              	
  8126                           i1l872:	
  8127  004E'                    	line	28
  8128                           	goto	i1l873
  8129  004E' 2800'              	
  8130                           i1l874:	
  8131  004F'                    	line	29
  8132                           	
  8133                           i1l2320:	
  8134  004F'                    	movlw	low(01h)
  8135  004F' 3001               	movwf	(??___xxtofl+0)+0
  8136  0050' 0084'              	movf	(??___xxtofl+0)+0,w
  8137  0051' 0804'              	addwf	(___xxtofl@exp),f
  8138  0052' 0789'              	line	30
  8139                           	
  8140                           i1l2322:	
  8141  0053'                    	movlw	01h
  8142  0053' 3001               	addwf	(___xxtofl@arg),f
  8143  0054' 078A'              	movlw	0
  8144  0055' 3000               	skipnc
  8145  0056' 1803               movlw 1
  8146  0057' 3001               	addwf	(___xxtofl@arg+1),f
  8147  0058' 078B'              	movlw	0
  8148  0059' 3000               	skipnc
  8149  005A' 1803               movlw 1
  8150  005B' 3001               	addwf	(___xxtofl@arg+2),f
  8151  005C' 078C'              	movlw	0
  8152  005D' 3000               	skipnc
  8153  005E' 1803               movlw 1
  8154  005F' 3001               	addwf	(___xxtofl@arg+3),f
  8155  0060' 078D'              	line	31
  8156                           	
  8157                           i1l2324:	
  8158  0061'                    	movlw	01h
  8159  0061' 3001               u244_25:
  8160  0062'                    	clrc
  8161  0062' 1003               	rrf	(___xxtofl@arg+3),f
  8162  0063' 0C8D'              	rrf	(___xxtofl@arg+2),f
  8163  0064' 0C8C'              	rrf	(___xxtofl@arg+1),f
  8164  0065' 0C8B'              	rrf	(___xxtofl@arg),f
  8165  0066' 0C8A'              	addlw	-1
  8166  0067' 3EFF               	skipz
  8167  0068' 1D03               	goto	u244_25
  8168  0069' 2800'              
  8169                           	line	32
  8170                           	
  8171                           i1l873:	
  8172  006A'                    	line	28
  8173                           	movlw	high highword(0FF000000h)
  8174  006A' 30FF               	andwf	(___xxtofl@arg+3),w
  8175  006B' 050D'              	btfss	status,2
  8176  006C' 1D03               	goto	u245_21
  8177  006D' 2800'              	goto	u245_20
  8178  006E' 2800'              u245_21:
  8179  006F'                    	goto	i1l2320
  8180  006F' 2800'              u245_20:
  8181  0070'                    	goto	i1l2328
  8182  0070' 2800'              	
  8183                           i1l875:	
  8184  0071'                    	line	33
  8185                           	goto	i1l2328
  8186  0071' 2800'              	
  8187                           i1l877:	
  8188  0072'                    	line	34
  8189                           	
  8190                           i1l2326:	
  8191  0072'                    	movlw	01h
  8192  0072' 3001               	subwf	(___xxtofl@exp),f
  8193  0073' 0289'              	line	35
  8194                           	movlw	01h
  8195  0074' 3001               	movwf	(??___xxtofl+0)+0
  8196  0075' 0084'              u246_25:
  8197  0076'                    	clrc
  8198  0076' 1003               	rlf	(___xxtofl@arg),f
  8199  0077' 0D8A'              	rlf	(___xxtofl@arg+1),f
  8200  0078' 0D8B'              	rlf	(___xxtofl@arg+2),f
  8201  0079' 0D8C'              	rlf	(___xxtofl@arg+3),f
  8202  007A' 0D8D'              	decfsz	(??___xxtofl+0)+0
  8203  007B' 0B84'              	goto	u246_25
  8204  007C' 2800'              	goto	i1l2328
  8205  007D' 2800'              	line	36
  8206                           	
  8207                           i1l876:	
  8208  007E'                    	line	33
  8209                           	
  8210                           i1l2328:	
  8211  007E'                    	btfsc	(___xxtofl@arg+2),(23)&7
  8212  007E' 1B8C'              	goto	u247_21
  8213  007F' 2800'              	goto	u247_20
  8214  0080' 2800'              u247_21:
  8215  0081'                    	goto	i1l880
  8216  0081' 2800'              u247_20:
  8217  0082'                    	
  8218                           i1l2330:	
  8219  0082'                    	movlw	low(02h)
  8220  0082' 3002               	subwf	(___xxtofl@exp),w
  8221  0083' 0209'              	skipnc
  8222  0084' 1803               	goto	u248_21
  8223  0085' 2800'              	goto	u248_20
  8224  0086' 2800'              u248_21:
  8225  0087'                    	goto	i1l2326
  8226  0087' 2800'              u248_20:
  8227  0088'                    	goto	i1l880
  8228  0088' 2800'              	
  8229                           i1l879:	
  8230  0089'                    	
  8231                           i1l880:	
  8232  0089'                    	line	37
  8233                           	btfsc	(___xxtofl@exp),(0)&7
  8234  0089' 1809'              	goto	u249_21
  8235  008A' 2800'              	goto	u249_20
  8236  008B' 2800'              u249_21:
  8237  008C'                    	goto	i1l881
  8238  008C' 2800'              u249_20:
  8239  008D'                    	line	38
  8240                           	
  8241                           i1l2332:	
  8242  008D'                    	movlw	0FFh
  8243  008D' 30FF               	andwf	(___xxtofl@arg),f
  8244  008E' 058A'              	movlw	0FFh
  8245  008F' 30FF               	andwf	(___xxtofl@arg+1),f
  8246  0090' 058B'              	movlw	07Fh
  8247  0091' 307F               	andwf	(___xxtofl@arg+2),f
  8248  0092' 058C'              	movlw	0FFh
  8249  0093' 30FF               	andwf	(___xxtofl@arg+3),f
  8250  0094' 058D'              	
  8251                           i1l881:	
  8252  0095'                    	line	39
  8253                           	clrc
  8254  0095' 1003               	rrf	(___xxtofl@exp),f
  8255  0096' 0C89'              
  8256                           	line	40
  8257                           	
  8258                           i1l2334:	
  8259  0097'                    	movf	(___xxtofl@exp),w
  8260  0097' 0809'              	movwf	(??___xxtofl+0)+0
  8261  0098' 0084'              	clrf	(??___xxtofl+0)+0+1
  8262  0099' 0185'              	clrf	(??___xxtofl+0)+0+2
  8263  009A' 0186'              	clrf	(??___xxtofl+0)+0+3
  8264  009B' 0187'              	movlw	018h
  8265  009C' 3018               u250_25:
  8266  009D'                    	clrc
  8267  009D' 1003               	rlf	(??___xxtofl+0)+0,f
  8268  009E' 0D84'              	rlf	(??___xxtofl+0)+1,f
  8269  009F' 0D85'              	rlf	(??___xxtofl+0)+2,f
  8270  00A0' 0D86'              	rlf	(??___xxtofl+0)+3,f
  8271  00A1' 0D87'              u250_20:
  8272  00A2'                    	addlw	-1
  8273  00A2' 3EFF               	skipz
  8274  00A3' 1D03               	goto	u250_25
  8275  00A4' 2800'              	movf	0+(??___xxtofl+0)+0,w
  8276  00A5' 0804'              	iorwf	(___xxtofl@arg),f
  8277  00A6' 048A'              	movf	1+(??___xxtofl+0)+0,w
  8278  00A7' 0805'              	iorwf	(___xxtofl@arg+1),f
  8279  00A8' 048B'              	movf	2+(??___xxtofl+0)+0,w
  8280  00A9' 0806'              	iorwf	(___xxtofl@arg+2),f
  8281  00AA' 048C'              	movf	3+(??___xxtofl+0)+0,w
  8282  00AB' 0807'              	iorwf	(___xxtofl@arg+3),f
  8283  00AC' 048D'              	line	41
  8284                           	
  8285                           i1l2336:	
  8286  00AD'                    	movf	((___xxtofl@sign)),w
  8287  00AD' 0808'              	btfsc	status,2
  8288  00AE' 1903               	goto	u251_21
  8289  00AF' 2800'              	goto	u251_20
  8290  00B0' 2800'              u251_21:
  8291  00B1'                    	goto	i1l2342
  8292  00B1' 2800'              u251_20:
  8293  00B2'                    	
  8294                           i1l2338:	
  8295  00B2'                    	btfss	(___xxtofl@val+3),7
  8296  00B2' 1F83'              	goto	u252_21
  8297  00B3' 2800'              	goto	u252_20
  8298  00B4' 2800'              u252_21:
  8299  00B5'                    	goto	i1l2342
  8300  00B5' 2800'              u252_20:
  8301  00B6'                    	line	42
  8302                           	
  8303                           i1l2340:	
  8304  00B6'                    	bsf	(___xxtofl@arg)+(31/8),(31)&7
  8305  00B6' 178D'              	goto	i1l2342
  8306  00B7' 2800'              	
  8307                           i1l882:	
  8308  00B8'                    	line	43
  8309                           	
  8310                           i1l2342:	
  8311  00B8'                    	movf	(___xxtofl@arg+3),w
  8312  00B8' 080D'              	movwf	(?___xxtofl+3)
  8313  00B9' 0083'              	movf	(___xxtofl@arg+2),w
  8314  00BA' 080C'              	movwf	(?___xxtofl+2)
  8315  00BB' 0082'              	movf	(___xxtofl@arg+1),w
  8316  00BC' 080B'              	movwf	(?___xxtofl+1)
  8317  00BD' 0081'              	movf	(___xxtofl@arg),w
  8318  00BE' 080A'              	movwf	(?___xxtofl)
  8319  00BF' 0080'              
  8320                           	goto	i1l869
  8321  00C0' 2800'              	
  8322                           i1l2344:	
  8323  00C1'                    	line	44
  8324                           	
  8325                           i1l869:	
  8326  00C1'                    	return
  8327  00C1' 0008               	opt stack 0
  8328                           GLOBAL	__end_of___xxtofl
  8329                           	__end_of___xxtofl:
  8330  00C2'                    	signat	___xxtofl,8316
  8331                           	global	___fltol
  8332                           
  8333 ;; *************** function ___fltol *****************
  8334 ;; Defined at:
  8335 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8336 ;; Parameters:    Size  Location     Type
  8337 ;;  f1              4   24[BANK0 ] unsigned char 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  exp1            1   34[BANK0 ] unsigned char 
  8340 ;;  sign1           1   33[BANK0 ] unsigned char 
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  4   24[BANK0 ] long 
  8343 ;; Registers used:
  8344 ;;		wreg, status,2, status,0
  8345 ;; Tracked objects:
  8346 ;;		On entry : 0/0
  8347 ;;		On exit  : 0/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8350 ;;      Params:         0       4       0       0       0
  8351 ;;      Locals:         0       2       0       0       0
  8352 ;;      Temps:          0       5       0       0       0
  8353 ;;      Totals:         0      11       0       0       0
  8354 ;;Total ram usage:       11 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; This function calls:
  8357 ;;		Nothing
  8358 ;; This function is called by:
  8359 ;;		_is_deadzone
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           psect	text28,local,class=CODE,delta=2,merge=1,group=1
  8363                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8364                           	line	43
  8365                           global __ptext28
  8366                           __ptext28:	;psect for function ___fltol
  8367  0000'                    psect	text28
  8368                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8369                           	line	43
  8370                           	global	__size_of___fltol
  8371                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  8372  009C                     	
  8373                           ___fltol:	
  8374  0000'                    ;incstack = 0
  8375 ;; hardware stack exceeded
  8376                           	opt	stack 0
  8377                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8378                           	line	47
  8379                           	
  8380                           i1l2072:	
  8381  0000'                    	bcf	status, 5	;RP0=0, select bank0
  8382  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  8383  0001' 1303               	movf	(___fltol@f1),w
  8384  0002' 0818'              	movwf	(??___fltol+0)+0
  8385  0003' 009C'              	movf	(___fltol@f1+1),w
  8386  0004' 0819'              	movwf	((??___fltol+0)+0+1)
  8387  0005' 009D'              	movf	(___fltol@f1+2),w
  8388  0006' 081A'              	movwf	((??___fltol+0)+0+2)
  8389  0007' 009E'              	movf	(___fltol@f1+3),w
  8390  0008' 081B'              	movwf	((??___fltol+0)+0+3)
  8391  0009' 009F'              	clrc
  8392  000A' 1003               	rlf	(??___fltol+0)+2,w
  8393  000B' 0D1E'              	rlf	(??___fltol+0)+3,w
  8394  000C' 0D1F'              	movwf	(??___fltol+4)+0
  8395  000D' 00A0'              	movf	(??___fltol+4)+0,w
  8396  000E' 0820'              	movwf	(___fltol@exp1)
  8397  000F' 00A2'              	movf	(((___fltol@exp1))),w
  8398  0010' 0822'              	btfss	status,2
  8399  0011' 1D03               	goto	u183_21
  8400  0012' 2800'              	goto	u183_20
  8401  0013' 2800'              u183_21:
  8402  0014'                    	goto	i1l2078
  8403  0014' 2800'              u183_20:
  8404  0015'                    	line	48
  8405                           	
  8406                           i1l2074:	
  8407  0015'                    	movlw	high highword(0)
  8408  0015' 3000               	movwf	(?___fltol+3)
  8409  0016' 009B'              	movlw	low highword(0)
  8410  0017' 3000               	movwf	(?___fltol+2)
  8411  0018' 009A'              	movlw	high(0)
  8412  0019' 3000               	movwf	(?___fltol+1)
  8413  001A' 0099'              	movlw	low(0)
  8414  001B' 3000               	movwf	(?___fltol)
  8415  001C' 0098'              
  8416                           	goto	i1l645
  8417  001D' 2800'              	
  8418                           i1l2076:	
  8419  001E'                    	goto	i1l645
  8420  001E' 2800'              	
  8421                           i1l644:	
  8422  001F'                    	line	49
  8423                           	
  8424                           i1l2078:	
  8425  001F'                    	movf	(___fltol@f1),w
  8426  001F' 0818'              	movwf	(??___fltol+0)+0
  8427  0020' 009C'              	movf	(___fltol@f1+1),w
  8428  0021' 0819'              	movwf	((??___fltol+0)+0+1)
  8429  0022' 009D'              	movf	(___fltol@f1+2),w
  8430  0023' 081A'              	movwf	((??___fltol+0)+0+2)
  8431  0024' 009E'              	movf	(___fltol@f1+3),w
  8432  0025' 081B'              	movwf	((??___fltol+0)+0+3)
  8433  0026' 009F'              	movlw	01Fh
  8434  0027' 301F               u184_25:
  8435  0028'                    	clrc
  8436  0028' 1003               	rrf	(??___fltol+0)+3,f
  8437  0029' 0C9F'              	rrf	(??___fltol+0)+2,f
  8438  002A' 0C9E'              	rrf	(??___fltol+0)+1,f
  8439  002B' 0C9D'              	rrf	(??___fltol+0)+0,f
  8440  002C' 0C9C'              u184_20:
  8441  002D'                    	addlw	-1
  8442  002D' 3EFF               	skipz
  8443  002E' 1D03               	goto	u184_25
  8444  002F' 2800'              	movf	0+(??___fltol+0)+0,w
  8445  0030' 081C'              	movwf	(??___fltol+4)+0
  8446  0031' 00A0'              	movf	(??___fltol+4)+0,w
  8447  0032' 0820'              	movwf	(___fltol@sign1)
  8448  0033' 00A1'              	line	50
  8449                           	
  8450                           i1l2080:	
  8451  0034'                    	bsf	(___fltol@f1)+(23/8),(23)&7
  8452  0034' 179A'              	line	51
  8453                           	
  8454                           i1l2082:	
  8455  0035'                    	movlw	0FFh
  8456  0035' 30FF               	andwf	(___fltol@f1),f
  8457  0036' 0598'              	movlw	0FFh
  8458  0037' 30FF               	andwf	(___fltol@f1+1),f
  8459  0038' 0599'              	movlw	0FFh
  8460  0039' 30FF               	andwf	(___fltol@f1+2),f
  8461  003A' 059A'              	movlw	0
  8462  003B' 3000               	andwf	(___fltol@f1+3),f
  8463  003C' 059B'              	line	52
  8464                           	
  8465                           i1l2084:	
  8466  003D'                    	movlw	096h
  8467  003D' 3096               	subwf	(___fltol@exp1),f
  8468  003E' 02A2'              	line	53
  8469                           	
  8470                           i1l2086:	
  8471  003F'                    	btfss	(___fltol@exp1),7
  8472  003F' 1FA2'              	goto	u185_21
  8473  0040' 2800'              	goto	u185_20
  8474  0041' 2800'              u185_21:
  8475  0042'                    	goto	i1l2096
  8476  0042' 2800'              u185_20:
  8477  0043'                    	line	54
  8478                           	
  8479                           i1l2088:	
  8480  0043'                    	movf	(___fltol@exp1),w
  8481  0043' 0822'              	xorlw	80h
  8482  0044' 3A80               	addlw	-((-23)^80h)
  8483  0045' 3E97               	skipnc
  8484  0046' 1803               	goto	u186_21
  8485  0047' 2800'              	goto	u186_20
  8486  0048' 2800'              u186_21:
  8487  0049'                    	goto	i1l2094
  8488  0049' 2800'              u186_20:
  8489  004A'                    	line	55
  8490                           	
  8491                           i1l2090:	
  8492  004A'                    	movlw	high highword(0)
  8493  004A' 3000               	movwf	(?___fltol+3)
  8494  004B' 009B'              	movlw	low highword(0)
  8495  004C' 3000               	movwf	(?___fltol+2)
  8496  004D' 009A'              	movlw	high(0)
  8497  004E' 3000               	movwf	(?___fltol+1)
  8498  004F' 0099'              	movlw	low(0)
  8499  0050' 3000               	movwf	(?___fltol)
  8500  0051' 0098'              
  8501                           	goto	i1l645
  8502  0052' 2800'              	
  8503                           i1l2092:	
  8504  0053'                    	goto	i1l645
  8505  0053' 2800'              	
  8506                           i1l647:	
  8507  0054'                    	goto	i1l2094
  8508  0054' 2800'              	line	56
  8509                           	
  8510                           i1l648:	
  8511  0055'                    	line	57
  8512                           	
  8513                           i1l2094:	
  8514  0055'                    	movlw	01h
  8515  0055' 3001               u187_25:
  8516  0056'                    	clrc
  8517  0056' 1003               	rrf	(___fltol@f1+3),f
  8518  0057' 0C9B'              	rrf	(___fltol@f1+2),f
  8519  0058' 0C9A'              	rrf	(___fltol@f1+1),f
  8520  0059' 0C99'              	rrf	(___fltol@f1),f
  8521  005A' 0C98'              	addlw	-1
  8522  005B' 3EFF               	skipz
  8523  005C' 1D03               	goto	u187_25
  8524  005D' 2800'              
  8525                           	line	58
  8526                           	movlw	low(01h)
  8527  005E' 3001               	movwf	(??___fltol+0)+0
  8528  005F' 009C'              	movf	(??___fltol+0)+0,w
  8529  0060' 081C'              	addwf	(___fltol@exp1),f
  8530  0061' 07A2'              	btfss	status,2
  8531  0062' 1D03               	goto	u188_21
  8532  0063' 2800'              	goto	u188_20
  8533  0064' 2800'              u188_21:
  8534  0065'                    	goto	i1l2094
  8535  0065' 2800'              u188_20:
  8536  0066'                    	goto	i1l2104
  8537  0066' 2800'              	
  8538                           i1l649:	
  8539  0067'                    	line	59
  8540                           	goto	i1l2104
  8541  0067' 2800'              	
  8542                           i1l646:	
  8543  0068'                    	line	60
  8544                           	
  8545                           i1l2096:	
  8546  0068'                    	movlw	low(020h)
  8547  0068' 3020               	subwf	(___fltol@exp1),w
  8548  0069' 0222'              	skipc
  8549  006A' 1C03               	goto	u189_21
  8550  006B' 2800'              	goto	u189_20
  8551  006C' 2800'              u189_21:
  8552  006D'                    	goto	i1l652
  8553  006D' 2800'              u189_20:
  8554  006E'                    	line	61
  8555                           	
  8556                           i1l2098:	
  8557  006E'                    	movlw	high highword(0)
  8558  006E' 3000               	movwf	(?___fltol+3)
  8559  006F' 009B'              	movlw	low highword(0)
  8560  0070' 3000               	movwf	(?___fltol+2)
  8561  0071' 009A'              	movlw	high(0)
  8562  0072' 3000               	movwf	(?___fltol+1)
  8563  0073' 0099'              	movlw	low(0)
  8564  0074' 3000               	movwf	(?___fltol)
  8565  0075' 0098'              
  8566                           	goto	i1l645
  8567  0076' 2800'              	
  8568                           i1l2100:	
  8569  0077'                    	goto	i1l645
  8570  0077' 2800'              	
  8571                           i1l651:	
  8572  0078'                    	line	62
  8573                           	goto	i1l652
  8574  0078' 2800'              	
  8575                           i1l653:	
  8576  0079'                    	line	63
  8577                           	
  8578                           i1l2102:	
  8579  0079'                    	movlw	01h
  8580  0079' 3001               	movwf	(??___fltol+0)+0
  8581  007A' 009C'              u190_25:
  8582  007B'                    	clrc
  8583  007B' 1003               	rlf	(___fltol@f1),f
  8584  007C' 0D98'              	rlf	(___fltol@f1+1),f
  8585  007D' 0D99'              	rlf	(___fltol@f1+2),f
  8586  007E' 0D9A'              	rlf	(___fltol@f1+3),f
  8587  007F' 0D9B'              	decfsz	(??___fltol+0)+0
  8588  0080' 0B9C'              	goto	u190_25
  8589  0081' 2800'              	line	64
  8590                           	movlw	01h
  8591  0082' 3001               	subwf	(___fltol@exp1),f
  8592  0083' 02A2'              	line	65
  8593                           	
  8594                           i1l652:	
  8595  0084'                    	line	62
  8596                           	movf	((___fltol@exp1)),w
  8597  0084' 0822'              	btfss	status,2
  8598  0085' 1D03               	goto	u191_21
  8599  0086' 2800'              	goto	u191_20
  8600  0087' 2800'              u191_21:
  8601  0088'                    	goto	i1l2102
  8602  0088' 2800'              u191_20:
  8603  0089'                    	goto	i1l2104
  8604  0089' 2800'              	
  8605                           i1l654:	
  8606  008A'                    	goto	i1l2104
  8607  008A' 2800'              	line	66
  8608                           	
  8609                           i1l650:	
  8610  008B'                    	line	67
  8611                           	
  8612                           i1l2104:	
  8613  008B'                    	movf	((___fltol@sign1)),w
  8614  008B' 0821'              	btfsc	status,2
  8615  008C' 1903               	goto	u192_21
  8616  008D' 2800'              	goto	u192_20
  8617  008E' 2800'              u192_21:
  8618  008F'                    	goto	i1l655
  8619  008F' 2800'              u192_20:
  8620  0090'                    	line	68
  8621                           	
  8622                           i1l2106:	
  8623  0090'                    	comf	(___fltol@f1),f
  8624  0090' 0998'              	comf	(___fltol@f1+1),f
  8625  0091' 0999'              	comf	(___fltol@f1+2),f
  8626  0092' 099A'              	comf	(___fltol@f1+3),f
  8627  0093' 099B'              	incf	(___fltol@f1),f
  8628  0094' 0A98'              	skipnz
  8629  0095' 1903               	incf	(___fltol@f1+1),f
  8630  0096' 0A99'              	skipnz
  8631  0097' 1903               	incf	(___fltol@f1+2),f
  8632  0098' 0A9A'              	skipnz
  8633  0099' 1903               	incf	(___fltol@f1+3),f
  8634  009A' 0A9B'              	
  8635                           i1l655:	
  8636  009B'                    	line	69
  8637                           	line	70
  8638                           	
  8639                           i1l645:	
  8640  009B'                    	return
  8641  009B' 0008               	opt stack 0
  8642                           GLOBAL	__end_of___fltol
  8643                           	__end_of___fltol:
  8644  009C'                    	signat	___fltol,4220
  8645                           	global	___fladd
  8646                           
  8647 ;; *************** function ___fladd *****************
  8648 ;; Defined at:
  8649 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  b               4    0[BANK0 ] long 
  8652 ;;  a               4    4[BANK0 ] long 
  8653 ;; Auto vars:     Size  Location     Type
  8654 ;;  grs             1   23[BANK0 ] unsigned char 
  8655 ;;  bexp            1   22[BANK0 ] unsigned char 
  8656 ;;  aexp            1   21[BANK0 ] unsigned char 
  8657 ;;  signs           1   20[BANK0 ] unsigned char 
  8658 ;; Return value:  Size  Location     Type
  8659 ;;                  4    0[BANK0 ] unsigned char 
  8660 ;; Registers used:
  8661 ;;		wreg, status,2, status,0, btemp+1
  8662 ;; Tracked objects:
  8663 ;;		On entry : 0/0
  8664 ;;		On exit  : 0/0
  8665 ;;		Unchanged: 0/0
  8666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8667 ;;      Params:         0       8       0       0       0
  8668 ;;      Locals:         0       4       0       0       0
  8669 ;;      Temps:          0      12       0       0       0
  8670 ;;      Totals:         0      24       0       0       0
  8671 ;;Total ram usage:       24 bytes
  8672 ;; Hardware stack levels used:    1
  8673 ;; This function calls:
  8674 ;;		Nothing
  8675 ;; This function is called by:
  8676 ;;		_is_deadzone
  8677 ;; This function uses a non-reentrant model
  8678 ;;
  8679                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
  8680                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8681                           	line	10
  8682                           global __ptext29
  8683                           __ptext29:	;psect for function ___fladd
  8684  0000'                    psect	text29
  8685                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8686                           	line	10
  8687                           	global	__size_of___fladd
  8688                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8689  02BC                     	
  8690                           ___fladd:	
  8691  0000'                    ;incstack = 0
  8692 ;; hardware stack exceeded
  8693                           	opt	stack 0
  8694                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8695                           	line	21
  8696                           	
  8697                           i1l2108:	
  8698  0000'                    	bcf	status, 5	;RP0=0, select bank0
  8699  0000' 1283               	bcf	status, 6	;RP1=0, select bank0
  8700  0001' 1303               	movf	0+(___fladd@b)+03h,w
  8701  0002' 0803'              	andlw	080h
  8702  0003' 3980               	movwf	(??___fladd+0)+0
  8703  0004' 0088'              	movf	(??___fladd+0)+0,w
  8704  0005' 0808'              	movwf	(___fladd@signs)
  8705  0006' 0094'              	line	22
  8706                           	
  8707                           i1l2110:	
  8708  0007'                    	movf	0+(___fladd@b)+03h,w
  8709  0007' 0803'              	movwf	(??___fladd+0)+0
  8710  0008' 0088'              	addwf	(??___fladd+0)+0,w
  8711  0009' 0708'              	movwf	(??___fladd+1)+0
  8712  000A' 0089'              	movf	(??___fladd+1)+0,w
  8713  000B' 0809'              	movwf	(___fladd@bexp)
  8714  000C' 0096'              	line	23
  8715                           	
  8716                           i1l2112:	
  8717  000D'                    	btfss	0+(___fladd@b)+02h,(7)&7
  8718  000D' 1F82'              	goto	u193_21
  8719  000E' 2800'              	goto	u193_20
  8720  000F' 2800'              u193_21:
  8721  0010'                    	goto	i1l2116
  8722  0010' 2800'              u193_20:
  8723  0011'                    	line	24
  8724                           	
  8725                           i1l2114:	
  8726  0011'                    	bsf	(___fladd@bexp)+(0/8),(0)&7
  8727  0011' 1416'              	goto	i1l2116
  8728  0012' 2800'              	line	25
  8729                           	
  8730                           i1l744:	
  8731  0013'                    	line	28
  8732                           	
  8733                           i1l2116:	
  8734  0013'                    	movf	((___fladd@bexp)),w
  8735  0013' 0816'              	btfsc	status,2
  8736  0014' 1903               	goto	u194_21
  8737  0015' 2800'              	goto	u194_20
  8738  0016' 2800'              u194_21:
  8739  0017'                    	goto	i1l2126
  8740  0017' 2800'              u194_20:
  8741  0018'                    	line	30
  8742                           	
  8743                           i1l2118:	
  8744  0018'                    		incf	((___fladd@bexp)),w
  8745  0018' 0A16'              	btfss	status,2
  8746  0019' 1D03               	goto	u195_21
  8747  001A' 2800'              	goto	u195_20
  8748  001B' 2800'              u195_21:
  8749  001C'                    	goto	i1l2122
  8750  001C' 2800'              u195_20:
  8751  001D'                    	line	32
  8752                           	
  8753                           i1l2120:	
  8754  001D'                    	movlw	0x0
  8755  001D' 3000               	movwf	(___fladd@b+3)
  8756  001E' 0083'              	movlw	0x0
  8757  001F' 3000               	movwf	(___fladd@b+2)
  8758  0020' 0082'              	movlw	0x0
  8759  0021' 3000               	movwf	(___fladd@b+1)
  8760  0022' 0081'              	movlw	0x0
  8761  0023' 3000               	movwf	(___fladd@b)
  8762  0024' 0080'              
  8763                           	goto	i1l2122
  8764  0025' 2800'              	line	33
  8765                           	
  8766                           i1l746:	
  8767  0026'                    	line	35
  8768                           	
  8769                           i1l2122:	
  8770  0026'                    	bsf	(___fladd@b)+(23/8),(23)&7
  8771  0026' 1782'              	line	37
  8772                           	
  8773                           i1l2124:	
  8774  0027'                    	clrf	0+(___fladd@b)+03h
  8775  0027' 0183'              	line	38
  8776                           	goto	i1l2128
  8777  0028' 2800'              	line	39
  8778                           	
  8779                           i1l745:	
  8780  0029'                    	line	41
  8781                           	
  8782                           i1l2126:	
  8783  0029'                    	movlw	0x0
  8784  0029' 3000               	movwf	(___fladd@b+3)
  8785  002A' 0083'              	movlw	0x0
  8786  002B' 3000               	movwf	(___fladd@b+2)
  8787  002C' 0082'              	movlw	0x0
  8788  002D' 3000               	movwf	(___fladd@b+1)
  8789  002E' 0081'              	movlw	0x0
  8790  002F' 3000               	movwf	(___fladd@b)
  8791  0030' 0080'              
  8792                           	goto	i1l2128
  8793  0031' 2800'              	line	42
  8794                           	
  8795                           i1l747:	
  8796  0032'                    	line	44
  8797                           	
  8798                           i1l2128:	
  8799  0032'                    	movf	0+(___fladd@a)+03h,w
  8800  0032' 0807'              	andlw	080h
  8801  0033' 3980               	movwf	(??___fladd+0)+0
  8802  0034' 0088'              	movf	(??___fladd+0)+0,w
  8803  0035' 0808'              	movwf	(___fladd@aexp)
  8804  0036' 0095'              	line	46
  8805                           	
  8806                           i1l2130:	
  8807  0037'                    	movf	(___fladd@aexp),w
  8808  0037' 0815'              	xorwf	(___fladd@signs),w
  8809  0038' 0614'              	skipnz
  8810  0039' 1903               	goto	u196_21
  8811  003A' 2800'              	goto	u196_20
  8812  003B' 2800'              u196_21:
  8813  003C'                    	goto	i1l2134
  8814  003C' 2800'              u196_20:
  8815  003D'                    	line	47
  8816                           	
  8817                           i1l2132:	
  8818  003D'                    	bsf	(___fladd@signs)+(6/8),(6)&7
  8819  003D' 1714'              	goto	i1l2134
  8820  003E' 2800'              	line	48
  8821                           	
  8822                           i1l748:	
  8823  003F'                    	line	49
  8824                           	
  8825                           i1l2134:	
  8826  003F'                    	movf	0+(___fladd@a)+03h,w
  8827  003F' 0807'              	movwf	(??___fladd+0)+0
  8828  0040' 0088'              	addwf	(??___fladd+0)+0,w
  8829  0041' 0708'              	movwf	(??___fladd+1)+0
  8830  0042' 0089'              	movf	(??___fladd+1)+0,w
  8831  0043' 0809'              	movwf	(___fladd@aexp)
  8832  0044' 0095'              	line	50
  8833                           	
  8834                           i1l2136:	
  8835  0045'                    	btfss	0+(___fladd@a)+02h,(7)&7
  8836  0045' 1F86'              	goto	u197_21
  8837  0046' 2800'              	goto	u197_20
  8838  0047' 2800'              u197_21:
  8839  0048'                    	goto	i1l2140
  8840  0048' 2800'              u197_20:
  8841  0049'                    	line	51
  8842                           	
  8843                           i1l2138:	
  8844  0049'                    	bsf	(___fladd@aexp)+(0/8),(0)&7
  8845  0049' 1415'              	goto	i1l2140
  8846  004A' 2800'              	line	52
  8847                           	
  8848                           i1l749:	
  8849  004B'                    	line	55
  8850                           	
  8851                           i1l2140:	
  8852  004B'                    	movf	((___fladd@aexp)),w
  8853  004B' 0815'              	btfsc	status,2
  8854  004C' 1903               	goto	u198_21
  8855  004D' 2800'              	goto	u198_20
  8856  004E' 2800'              u198_21:
  8857  004F'                    	goto	i1l2150
  8858  004F' 2800'              u198_20:
  8859  0050'                    	line	57
  8860                           	
  8861                           i1l2142:	
  8862  0050'                    		incf	((___fladd@aexp)),w
  8863  0050' 0A15'              	btfss	status,2
  8864  0051' 1D03               	goto	u199_21
  8865  0052' 2800'              	goto	u199_20
  8866  0053' 2800'              u199_21:
  8867  0054'                    	goto	i1l2146
  8868  0054' 2800'              u199_20:
  8869  0055'                    	line	59
  8870                           	
  8871                           i1l2144:	
  8872  0055'                    	movlw	0x0
  8873  0055' 3000               	movwf	(___fladd@a+3)
  8874  0056' 0087'              	movlw	0x0
  8875  0057' 3000               	movwf	(___fladd@a+2)
  8876  0058' 0086'              	movlw	0x0
  8877  0059' 3000               	movwf	(___fladd@a+1)
  8878  005A' 0085'              	movlw	0x0
  8879  005B' 3000               	movwf	(___fladd@a)
  8880  005C' 0084'              
  8881                           	goto	i1l2146
  8882  005D' 2800'              	line	60
  8883                           	
  8884                           i1l751:	
  8885  005E'                    	line	62
  8886                           	
  8887                           i1l2146:	
  8888  005E'                    	bsf	(___fladd@a)+(23/8),(23)&7
  8889  005E' 1786'              	line	64
  8890                           	
  8891                           i1l2148:	
  8892  005F'                    	clrf	0+(___fladd@a)+03h
  8893  005F' 0187'              	line	65
  8894                           	goto	i1l752
  8895  0060' 2800'              	line	66
  8896                           	
  8897                           i1l750:	
  8898  0061'                    	line	68
  8899                           	
  8900                           i1l2150:	
  8901  0061'                    	movlw	0x0
  8902  0061' 3000               	movwf	(___fladd@a+3)
  8903  0062' 0087'              	movlw	0x0
  8904  0063' 3000               	movwf	(___fladd@a+2)
  8905  0064' 0086'              	movlw	0x0
  8906  0065' 3000               	movwf	(___fladd@a+1)
  8907  0066' 0085'              	movlw	0x0
  8908  0067' 3000               	movwf	(___fladd@a)
  8909  0068' 0084'              
  8910                           	line	69
  8911                           	
  8912                           i1l752:	
  8913  0069'                    	line	75
  8914                           	movf	(___fladd@bexp),w
  8915  0069' 0816'              	subwf	(___fladd@aexp),w
  8916  006A' 0215'              	skipnc
  8917  006B' 1803               	goto	u200_21
  8918  006C' 2800'              	goto	u200_20
  8919  006D' 2800'              u200_21:
  8920  006E'                    	goto	i1l2186
  8921  006E' 2800'              u200_20:
  8922  006F'                    	line	77
  8923                           	
  8924                           i1l2152:	
  8925  006F'                    	btfss	(___fladd@signs),(6)&7
  8926  006F' 1F14'              	goto	u201_21
  8927  0070' 2800'              	goto	u201_20
  8928  0071' 2800'              u201_21:
  8929  0072'                    	goto	i1l2156
  8930  0072' 2800'              u201_20:
  8931  0073'                    	line	78
  8932                           	
  8933                           i1l2154:	
  8934  0073'                    	movlw	low(080h)
  8935  0073' 3080               	movwf	(??___fladd+0)+0
  8936  0074' 0088'              	movf	(??___fladd+0)+0,w
  8937  0075' 0808'              	xorwf	(___fladd@signs),f
  8938  0076' 0694'              	goto	i1l2156
  8939  0077' 2800'              	line	79
  8940                           	
  8941                           i1l754:	
  8942  0078'                    	line	81
  8943                           	
  8944                           i1l2156:	
  8945  0078'                    	movf	(___fladd@bexp),w
  8946  0078' 0816'              	movwf	(??___fladd+0)+0
  8947  0079' 0088'              	movf	(??___fladd+0)+0,w
  8948  007A' 0808'              	movwf	(___fladd@grs)
  8949  007B' 0097'              	line	82
  8950                           	
  8951                           i1l2158:	
  8952  007C'                    	movf	(___fladd@aexp),w
  8953  007C' 0815'              	movwf	(??___fladd+0)+0
  8954  007D' 0088'              	movf	(??___fladd+0)+0,w
  8955  007E' 0808'              	movwf	(___fladd@bexp)
  8956  007F' 0096'              	line	83
  8957                           	
  8958                           i1l2160:	
  8959  0080'                    	movf	(___fladd@grs),w
  8960  0080' 0817'              	movwf	(??___fladd+0)+0
  8961  0081' 0088'              	movf	(??___fladd+0)+0,w
  8962  0082' 0808'              	movwf	(___fladd@aexp)
  8963  0083' 0095'              	line	84
  8964                           	
  8965                           i1l2162:	
  8966  0084'                    	movf	(___fladd@b),w
  8967  0084' 0800'              	movwf	(??___fladd+0)+0
  8968  0085' 0088'              	movf	(??___fladd+0)+0,w
  8969  0086' 0808'              	movwf	(___fladd@grs)
  8970  0087' 0097'              	line	85
  8971                           	
  8972                           i1l2164:	
  8973  0088'                    	movf	(___fladd@a),w
  8974  0088' 0804'              	movwf	(??___fladd+0)+0
  8975  0089' 0088'              	movf	(??___fladd+0)+0,w
  8976  008A' 0808'              	movwf	(___fladd@b)
  8977  008B' 0080'              	line	86
  8978                           	
  8979                           i1l2166:	
  8980  008C'                    	movf	(___fladd@grs),w
  8981  008C' 0817'              	movwf	(??___fladd+0)+0
  8982  008D' 0088'              	movf	(??___fladd+0)+0,w
  8983  008E' 0808'              	movwf	(___fladd@a)
  8984  008F' 0084'              	line	87
  8985                           	
  8986                           i1l2168:	
  8987  0090'                    	movf	0+(___fladd@b)+01h,w
  8988  0090' 0801'              	movwf	(??___fladd+0)+0
  8989  0091' 0088'              	movf	(??___fladd+0)+0,w
  8990  0092' 0808'              	movwf	(___fladd@grs)
  8991  0093' 0097'              	line	88
  8992                           	
  8993                           i1l2170:	
  8994  0094'                    	movf	0+(___fladd@a)+01h,w
  8995  0094' 0805'              	movwf	(??___fladd+0)+0
  8996  0095' 0088'              	movf	(??___fladd+0)+0,w
  8997  0096' 0808'              	movwf	0+(___fladd@b)+01h
  8998  0097' 0081'              	line	89
  8999                           	
  9000                           i1l2172:	
  9001  0098'                    	movf	(___fladd@grs),w
  9002  0098' 0817'              	movwf	(??___fladd+0)+0
  9003  0099' 0088'              	movf	(??___fladd+0)+0,w
  9004  009A' 0808'              	movwf	0+(___fladd@a)+01h
  9005  009B' 0085'              	line	90
  9006                           	
  9007                           i1l2174:	
  9008  009C'                    	movf	0+(___fladd@b)+02h,w
  9009  009C' 0802'              	movwf	(??___fladd+0)+0
  9010  009D' 0088'              	movf	(??___fladd+0)+0,w
  9011  009E' 0808'              	movwf	(___fladd@grs)
  9012  009F' 0097'              	line	91
  9013                           	
  9014                           i1l2176:	
  9015  00A0'                    	movf	0+(___fladd@a)+02h,w
  9016  00A0' 0806'              	movwf	(??___fladd+0)+0
  9017  00A1' 0088'              	movf	(??___fladd+0)+0,w
  9018  00A2' 0808'              	movwf	0+(___fladd@b)+02h
  9019  00A3' 0082'              	line	92
  9020                           	
  9021                           i1l2178:	
  9022  00A4'                    	movf	(___fladd@grs),w
  9023  00A4' 0817'              	movwf	(??___fladd+0)+0
  9024  00A5' 0088'              	movf	(??___fladd+0)+0,w
  9025  00A6' 0808'              	movwf	0+(___fladd@a)+02h
  9026  00A7' 0086'              	line	93
  9027                           	
  9028                           i1l2180:	
  9029  00A8'                    	movf	0+(___fladd@b)+03h,w
  9030  00A8' 0803'              	movwf	(??___fladd+0)+0
  9031  00A9' 0088'              	movf	(??___fladd+0)+0,w
  9032  00AA' 0808'              	movwf	(___fladd@grs)
  9033  00AB' 0097'              	line	94
  9034                           	
  9035                           i1l2182:	
  9036  00AC'                    	movf	0+(___fladd@a)+03h,w
  9037  00AC' 0807'              	movwf	(??___fladd+0)+0
  9038  00AD' 0088'              	movf	(??___fladd+0)+0,w
  9039  00AE' 0808'              	movwf	0+(___fladd@b)+03h
  9040  00AF' 0083'              	line	95
  9041                           	
  9042                           i1l2184:	
  9043  00B0'                    	movf	(___fladd@grs),w
  9044  00B0' 0817'              	movwf	(??___fladd+0)+0
  9045  00B1' 0088'              	movf	(??___fladd+0)+0,w
  9046  00B2' 0808'              	movwf	0+(___fladd@a)+03h
  9047  00B3' 0087'              	goto	i1l2186
  9048  00B4' 2800'              	line	96
  9049                           	
  9050                           i1l753:	
  9051  00B5'                    	line	98
  9052                           	
  9053                           i1l2186:	
  9054  00B5'                    	clrf	(___fladd@grs)
  9055  00B5' 0197'              	line	100
  9056                           	
  9057                           i1l2188:	
  9058  00B6'                    	movf	(___fladd@bexp),w
  9059  00B6' 0816'              	movwf	(??___fladd+0)+0
  9060  00B7' 0088'              	clrf	(??___fladd+0)+0+1
  9061  00B8' 0189'              	comf	(??___fladd+0)+0,f
  9062  00B9' 0988'              	comf	(??___fladd+0)+1,f
  9063  00BA' 0989'              	incf	(??___fladd+0)+0,f
  9064  00BB' 0A88'              	skipnz
  9065  00BC' 1903               	incf	(??___fladd+0)+1,f
  9066  00BD' 0A89'              	movf	(___fladd@aexp),w
  9067  00BE' 0815'              	addwf	0+(??___fladd+0)+0,w
  9068  00BF' 0708'              	movwf	(??___fladd+2)+0
  9069  00C0' 008A'              	movf	1+(??___fladd+0)+0,w
  9070  00C1' 0809'              	skipnc
  9071  00C2' 1803               	incf	1+(??___fladd+0)+0,w
  9072  00C3' 0A09'              	movwf	((??___fladd+2)+0)+1
  9073  00C4' 008B'              	movf	1+(??___fladd+2)+0,w
  9074  00C5' 080B'              	xorlw	80h
  9075  00C6' 3A80               	movwf	btemp+1
  9076  00C7' 00FF               	movlw	(0)^80h
  9077  00C8' 3080               	subwf	btemp+1,w
  9078  00C9' 027F               	skipz
  9079  00CA' 1D03               	goto	u202_25
  9080  00CB' 2800'              	movlw	01Ah
  9081  00CC' 301A               	subwf	0+(??___fladd+2)+0,w
  9082  00CD' 020A'              u202_25:
  9083  00CE'                    
  9084                           	skipc
  9085  00CE' 1C03               	goto	u202_21
  9086  00CF' 2800'              	goto	u202_20
  9087  00D0' 2800'              u202_21:
  9088  00D1'                    	goto	i1l2204
  9089  00D1' 2800'              u202_20:
  9090  00D2'                    	line	101
  9091                           	
  9092                           i1l2190:	
  9093  00D2'                    	bcf	status, 5	;RP0=0, select bank0
  9094  00D2' 1283               	bcf	status, 6	;RP1=0, select bank0
  9095  00D3' 1303               	movf	(___fladd@b+3),w
  9096  00D4' 0803'              	iorwf	(___fladd@b+2),w
  9097  00D5' 0402'              	iorwf	(___fladd@b+1),w
  9098  00D6' 0401'              	iorwf	(___fladd@b),w
  9099  00D7' 0400'              	skipz
  9100  00D8' 1D03               	goto	u203_21
  9101  00D9' 2800'              	goto	u203_20
  9102  00DA' 2800'              u203_21:
  9103  00DB'                    	movlw	1
  9104  00DB' 3001               	goto	u204_20
  9105  00DC' 2800'              u203_20:
  9106  00DD'                    	movlw	0
  9107  00DD' 3000               u204_20:
  9108  00DE'                    	movwf	(??___fladd+0)+0
  9109  00DE' 0088'              	movf	(??___fladd+0)+0,w
  9110  00DF' 0808'              	movwf	(___fladd@grs)
  9111  00E0' 0097'              	line	102
  9112                           	movlw	high highword(0)
  9113  00E1' 3000               	movwf	(___fladd@b+3)
  9114  00E2' 0083'              	movlw	low highword(0)
  9115  00E3' 3000               	movwf	(___fladd@b+2)
  9116  00E4' 0082'              	movlw	high(0)
  9117  00E5' 3000               	movwf	(___fladd@b+1)
  9118  00E6' 0081'              	movlw	low(0)
  9119  00E7' 3000               	movwf	(___fladd@b)
  9120  00E8' 0080'              
  9121                           	line	103
  9122                           	movf	(___fladd@aexp),w
  9123  00E9' 0815'              	movwf	(??___fladd+0)+0
  9124  00EA' 0088'              	movf	(??___fladd+0)+0,w
  9125  00EB' 0808'              	movwf	(___fladd@bexp)
  9126  00EC' 0096'              	line	104
  9127                           	goto	i1l756
  9128  00ED' 2800'              	line	105
  9129                           	
  9130                           i1l755:	
  9131  00EE'                    	line	106
  9132                           	goto	i1l2204
  9133  00EE' 2800'              	
  9134                           i1l758:	
  9135  00EF'                    	line	109
  9136                           	btfss	(___fladd@grs),(0)&7
  9137  00EF' 1C17'              	goto	u205_21
  9138  00F0' 2800'              	goto	u205_20
  9139  00F1' 2800'              u205_21:
  9140  00F2'                    	goto	i1l2194
  9141  00F2' 2800'              u205_20:
  9142  00F3'                    	line	110
  9143                           	
  9144                           i1l2192:	
  9145  00F3'                    	movf	(___fladd@grs),w
  9146  00F3' 0817'              	movwf	(??___fladd+0)+0
  9147  00F4' 0088'              	clrc
  9148  00F5' 1003               	rrf	(??___fladd+0)+0,w
  9149  00F6' 0C08'              	iorlw	01h
  9150  00F7' 3801               	movwf	(??___fladd+1)+0
  9151  00F8' 0089'              	movf	(??___fladd+1)+0,w
  9152  00F9' 0809'              	movwf	(___fladd@grs)
  9153  00FA' 0097'              	line	111
  9154                           	goto	i1l2196
  9155  00FB' 2800'              	line	112
  9156                           	
  9157                           i1l759:	
  9158  00FC'                    	line	113
  9159                           	
  9160                           i1l2194:	
  9161  00FC'                    	clrc
  9162  00FC' 1003               	rrf	(___fladd@grs),f
  9163  00FD' 0C97'              
  9164                           	goto	i1l2196
  9165  00FE' 2800'              	line	114
  9166                           	
  9167                           i1l760:	
  9168  00FF'                    	line	115
  9169                           	
  9170                           i1l2196:	
  9171  00FF'                    	btfss	(___fladd@b),(0)&7
  9172  00FF' 1C00'              	goto	u206_21
  9173  0100' 2800'              	goto	u206_20
  9174  0101' 2800'              u206_21:
  9175  0102'                    	goto	i1l2200
  9176  0102' 2800'              u206_20:
  9177  0103'                    	line	116
  9178                           	
  9179                           i1l2198:	
  9180  0103'                    	bsf	(___fladd@grs)+(7/8),(7)&7
  9181  0103' 1797'              	goto	i1l2200
  9182  0104' 2800'              	line	117
  9183                           	
  9184                           i1l761:	
  9185  0105'                    	line	118
  9186                           	
  9187                           i1l2200:	
  9188  0105'                    	movlw	01h
  9189  0105' 3001               	movwf	(??___fladd+0)+0
  9190  0106' 0088'              u207_25:
  9191  0107'                    	rlf	(___fladd@b+3),w
  9192  0107' 0D03'              	rrf	(___fladd@b+3),f
  9193  0108' 0C83'              	rrf	(___fladd@b+2),f
  9194  0109' 0C82'              	rrf	(___fladd@b+1),f
  9195  010A' 0C81'              	rrf	(___fladd@b),f
  9196  010B' 0C80'              	decfsz	(??___fladd+0)+0&07fh,f
  9197  010C' 0B80'              	goto	u207_25
  9198  010D' 2800'              
  9199                           	line	119
  9200                           	
  9201                           i1l2202:	
  9202  010E'                    	movlw	low(01h)
  9203  010E' 3001               	movwf	(??___fladd+0)+0
  9204  010F' 0088'              	movf	(??___fladd+0)+0,w
  9205  0110' 0808'              	addwf	(___fladd@bexp),f
  9206  0111' 0796'              	goto	i1l2204
  9207  0112' 2800'              	line	120
  9208                           	
  9209                           i1l757:	
  9210  0113'                    	line	106
  9211                           	
  9212                           i1l2204:	
  9213  0113'                    	bcf	status, 5	;RP0=0, select bank0
  9214  0113' 1283               	bcf	status, 6	;RP1=0, select bank0
  9215  0114' 1303               	movf	(___fladd@aexp),w
  9216  0115' 0815'              	subwf	(___fladd@bexp),w
  9217  0116' 0216'              	skipc
  9218  0117' 1C03               	goto	u208_21
  9219  0118' 2800'              	goto	u208_20
  9220  0119' 2800'              u208_21:
  9221  011A'                    	goto	i1l758
  9222  011A' 2800'              u208_20:
  9223  011B'                    	goto	i1l756
  9224  011B' 2800'              	
  9225                           i1l762:	
  9226  011C'                    	line	121
  9227                           	
  9228                           i1l756:	
  9229  011C'                    	line	124
  9230                           	btfsc	(___fladd@signs),(6)&7
  9231  011C' 1B14'              	goto	u209_21
  9232  011D' 2800'              	goto	u209_20
  9233  011E' 2800'              u209_21:
  9234  011F'                    	goto	i1l2230
  9235  011F' 2800'              u209_20:
  9236  0120'                    	line	127
  9237                           	
  9238                           i1l2206:	
  9239  0120'                    	movf	((___fladd@bexp)),w
  9240  0120' 0816'              	btfss	status,2
  9241  0121' 1D03               	goto	u210_21
  9242  0122' 2800'              	goto	u210_20
  9243  0123' 2800'              u210_21:
  9244  0124'                    	goto	i1l2212
  9245  0124' 2800'              u210_20:
  9246  0125'                    	line	128
  9247                           	
  9248                           i1l2208:	
  9249  0125'                    	movlw	0x0
  9250  0125' 3000               	movwf	(?___fladd+3)
  9251  0126' 0083'              	movlw	0x0
  9252  0127' 3000               	movwf	(?___fladd+2)
  9253  0128' 0082'              	movlw	0x0
  9254  0129' 3000               	movwf	(?___fladd+1)
  9255  012A' 0081'              	movlw	0x0
  9256  012B' 3000               	movwf	(?___fladd)
  9257  012C' 0080'              
  9258                           	goto	i1l765
  9259  012D' 2800'              	
  9260                           i1l2210:	
  9261  012E'                    	goto	i1l765
  9262  012E' 2800'              	line	129
  9263                           	
  9264                           i1l764:	
  9265  012F'                    	line	132
  9266                           	
  9267                           i1l2212:	
  9268  012F'                    	movf	(___fladd@a),w
  9269  012F' 0804'              	addwf	(___fladd@b),f
  9270  0130' 0780'              	movf	(___fladd@a+1),w
  9271  0131' 0805'              	clrz
  9272  0132' 1103               	skipnc
  9273  0133' 1803               	addlw	1
  9274  0134' 3E01               	skipnz
  9275  0135' 1903               	goto	u211_21
  9276  0136' 2800'              	addwf	(___fladd@b+1),f
  9277  0137' 0781'              u211_21:
  9278  0138'                    	movf	(___fladd@a+2),w
  9279  0138' 0806'              	clrz
  9280  0139' 1103               	skipnc
  9281  013A' 1803               	addlw	1
  9282  013B' 3E01               	skipnz
  9283  013C' 1903               	goto	u211_22
  9284  013D' 2800'              	addwf	(___fladd@b+2),f
  9285  013E' 0782'              u211_22:
  9286  013F'                    	movf	(___fladd@a+3),w
  9287  013F' 0807'              	clrz
  9288  0140' 1103               	skipnc
  9289  0141' 1803               	addlw	1
  9290  0142' 3E01               	skipnz
  9291  0143' 1903               	goto	u211_23
  9292  0144' 2800'              	addwf	(___fladd@b+3),f
  9293  0145' 0783'              u211_23:
  9294  0146'                    
  9295                           	line	134
  9296                           	
  9297                           i1l2214:	
  9298  0146'                    	btfss	(___fladd@b+3),(24)&7
  9299  0146' 1C03'              	goto	u212_21
  9300  0147' 2800'              	goto	u212_20
  9301  0148' 2800'              u212_21:
  9302  0149'                    	goto	i1l2264
  9303  0149' 2800'              u212_20:
  9304  014A'                    	line	135
  9305                           	
  9306                           i1l2216:	
  9307  014A'                    	btfss	(___fladd@grs),(0)&7
  9308  014A' 1C17'              	goto	u213_21
  9309  014B' 2800'              	goto	u213_20
  9310  014C' 2800'              u213_21:
  9311  014D'                    	goto	i1l2220
  9312  014D' 2800'              u213_20:
  9313  014E'                    	line	136
  9314                           	
  9315                           i1l2218:	
  9316  014E'                    	movf	(___fladd@grs),w
  9317  014E' 0817'              	movwf	(??___fladd+0)+0
  9318  014F' 0088'              	clrc
  9319  0150' 1003               	rrf	(??___fladd+0)+0,w
  9320  0151' 0C08'              	iorlw	01h
  9321  0152' 3801               	movwf	(??___fladd+1)+0
  9322  0153' 0089'              	movf	(??___fladd+1)+0,w
  9323  0154' 0809'              	movwf	(___fladd@grs)
  9324  0155' 0097'              	line	137
  9325                           	goto	i1l2222
  9326  0156' 2800'              	line	138
  9327                           	
  9328                           i1l767:	
  9329  0157'                    	line	139
  9330                           	
  9331                           i1l2220:	
  9332  0157'                    	clrc
  9333  0157' 1003               	rrf	(___fladd@grs),f
  9334  0158' 0C97'              
  9335                           	goto	i1l2222
  9336  0159' 2800'              	line	140
  9337                           	
  9338                           i1l768:	
  9339  015A'                    	line	141
  9340                           	
  9341                           i1l2222:	
  9342  015A'                    	btfss	(___fladd@b),(0)&7
  9343  015A' 1C00'              	goto	u214_21
  9344  015B' 2800'              	goto	u214_20
  9345  015C' 2800'              u214_21:
  9346  015D'                    	goto	i1l2226
  9347  015D' 2800'              u214_20:
  9348  015E'                    	line	142
  9349                           	
  9350                           i1l2224:	
  9351  015E'                    	bsf	(___fladd@grs)+(7/8),(7)&7
  9352  015E' 1797'              	goto	i1l2226
  9353  015F' 2800'              	line	143
  9354                           	
  9355                           i1l769:	
  9356  0160'                    	line	144
  9357                           	
  9358                           i1l2226:	
  9359  0160'                    	movlw	01h
  9360  0160' 3001               	movwf	(??___fladd+0)+0
  9361  0161' 0088'              u215_25:
  9362  0162'                    	rlf	(___fladd@b+3),w
  9363  0162' 0D03'              	rrf	(___fladd@b+3),f
  9364  0163' 0C83'              	rrf	(___fladd@b+2),f
  9365  0164' 0C82'              	rrf	(___fladd@b+1),f
  9366  0165' 0C81'              	rrf	(___fladd@b),f
  9367  0166' 0C80'              	decfsz	(??___fladd+0)+0&07fh,f
  9368  0167' 0B80'              	goto	u215_25
  9369  0168' 2800'              
  9370                           	line	145
  9371                           	
  9372                           i1l2228:	
  9373  0169'                    	movlw	low(01h)
  9374  0169' 3001               	movwf	(??___fladd+0)+0
  9375  016A' 0088'              	movf	(??___fladd+0)+0,w
  9376  016B' 0808'              	addwf	(___fladd@bexp),f
  9377  016C' 0796'              	goto	i1l2264
  9378  016D' 2800'              	line	146
  9379                           	
  9380                           i1l766:	
  9381  016E'                    	line	148
  9382                           	goto	i1l2264
  9383  016E' 2800'              	line	149
  9384                           	
  9385                           i1l763:	
  9386  016F'                    	line	153
  9387                           	
  9388                           i1l2230:	
  9389  016F'                    	movf	(___fladd@b+3),w
  9390  016F' 0803'              	xorlw	80h
  9391  0170' 3A80               	movwf	btemp+1
  9392  0171' 00FF               	movf	(___fladd@a+3),w
  9393  0172' 0807'              	xorlw	80h
  9394  0173' 3A80               	subwf	btemp+1,w
  9395  0174' 027F               	
  9396                           	skipz
  9397  0175' 1D03               	goto	u216_23
  9398  0176' 2800'              	movf	(___fladd@a+2),w
  9399  0177' 0806'              	subwf	(___fladd@b+2),w
  9400  0178' 0202'              	skipz
  9401  0179' 1D03               	goto	u216_23
  9402  017A' 2800'              	movf	(___fladd@a+1),w
  9403  017B' 0805'              	subwf	(___fladd@b+1),w
  9404  017C' 0201'              	skipz
  9405  017D' 1D03               	goto	u216_23
  9406  017E' 2800'              	movf	(___fladd@a),w
  9407  017F' 0804'              	subwf	(___fladd@b),w
  9408  0180' 0200'              u216_23:
  9409  0181'                    	skipnc
  9410  0181' 1803               	goto	u216_21
  9411  0182' 2800'              	goto	u216_20
  9412  0183' 2800'              u216_21:
  9413  0184'                    	goto	i1l2240
  9414  0184' 2800'              u216_20:
  9415  0185'                    	line	154
  9416                           	
  9417                           i1l2232:	
  9418  0185'                    	movlw	0FFh
  9419  0185' 30FF               	movwf	((??___fladd+0)+0)
  9420  0186' 0088'              	movlw	0FFh
  9421  0187' 30FF               	movwf	((??___fladd+0)+0+1)
  9422  0188' 0089'              	movlw	0FFh
  9423  0189' 30FF               	movwf	((??___fladd+0)+0+2)
  9424  018A' 008A'              	movlw	0FFh
  9425  018B' 30FF               	movwf	((??___fladd+0)+0+3)
  9426  018C' 008B'              	movf	(___fladd@a),w
  9427  018D' 0804'              	movwf	(??___fladd+4)+0
  9428  018E' 008C'              	movf	(___fladd@a+1),w
  9429  018F' 0805'              	movwf	((??___fladd+4)+0+1)
  9430  0190' 008D'              	movf	(___fladd@a+2),w
  9431  0191' 0806'              	movwf	((??___fladd+4)+0+2)
  9432  0192' 008E'              	movf	(___fladd@a+3),w
  9433  0193' 0807'              	movwf	((??___fladd+4)+0+3)
  9434  0194' 008F'              	comf	(___fladd@b),w
  9435  0195' 0900'              	movwf	(??___fladd+8)+0
  9436  0196' 0090'              	comf	(___fladd@b+1),w
  9437  0197' 0901'              	movwf	((??___fladd+8)+0+1)
  9438  0198' 0091'              	comf	(___fladd@b+2),w
  9439  0199' 0902'              	movwf	((??___fladd+8)+0+2)
  9440  019A' 0092'              	comf	(___fladd@b+3),w
  9441  019B' 0903'              	movwf	((??___fladd+8)+0+3)
  9442  019C' 0093'              	incf	(??___fladd+8)+0,f
  9443  019D' 0A90'              	skipnz
  9444  019E' 1903               	incf	((??___fladd+8)+0+1),f
  9445  019F' 0A91'              	skipnz
  9446  01A0' 1903               	incf	((??___fladd+8)+0+2),f
  9447  01A1' 0A92'              	skipnz
  9448  01A2' 1903               	incf	((??___fladd+8)+0+3),f
  9449  01A3' 0A93'              	movf	0+(??___fladd+8)+0,w
  9450  01A4' 0810'              	addwf	(??___fladd+4)+0,f
  9451  01A5' 078C'              	movf	1+(??___fladd+8)+0,w
  9452  01A6' 0811'              	skipnc
  9453  01A7' 1803               	incfsz	1+(??___fladd+8)+0,w
  9454  01A8' 0F11'              	goto	u217_20
  9455  01A9' 2800'              	goto	u217_21
  9456  01AA' 2800'              u217_20:
  9457  01AB'                    	addwf	(??___fladd+4)+1,f
  9458  01AB' 078D'              u217_21:
  9459  01AC'                    	movf	2+(??___fladd+8)+0,w
  9460  01AC' 0812'              	skipnc
  9461  01AD' 1803               	incfsz	2+(??___fladd+8)+0,w
  9462  01AE' 0F12'              	goto	u217_22
  9463  01AF' 2800'              	goto	u217_23
  9464  01B0' 2800'              u217_22:
  9465  01B1'                    	addwf	(??___fladd+4)+2,f
  9466  01B1' 078E'              u217_23:
  9467  01B2'                    	movf	3+(??___fladd+8)+0,w
  9468  01B2' 0813'              	skipnc
  9469  01B3' 1803               	incf	3+(??___fladd+8)+0,w
  9470  01B4' 0A13'              	addwf	(??___fladd+4)+3,f
  9471  01B5' 078F'              	movf	0+(??___fladd+4)+0,w
  9472  01B6' 080C'              	addwf	(??___fladd+0)+0,f
  9473  01B7' 0788'              	movf	1+(??___fladd+4)+0,w
  9474  01B8' 080D'              	skipnc
  9475  01B9' 1803               	incfsz	1+(??___fladd+4)+0,w
  9476  01BA' 0F0D'              	goto	u218_20
  9477  01BB' 2800'              	goto	u218_21
  9478  01BC' 2800'              u218_20:
  9479  01BD'                    	addwf	(??___fladd+0)+1,f
  9480  01BD' 0789'              u218_21:
  9481  01BE'                    	movf	2+(??___fladd+4)+0,w
  9482  01BE' 080E'              	skipnc
  9483  01BF' 1803               	incfsz	2+(??___fladd+4)+0,w
  9484  01C0' 0F0E'              	goto	u218_22
  9485  01C1' 2800'              	goto	u218_23
  9486  01C2' 2800'              u218_22:
  9487  01C3'                    	addwf	(??___fladd+0)+2,f
  9488  01C3' 078A'              u218_23:
  9489  01C4'                    	movf	3+(??___fladd+4)+0,w
  9490  01C4' 080F'              	skipnc
  9491  01C5' 1803               	incf	3+(??___fladd+4)+0,w
  9492  01C6' 0A0F'              	addwf	(??___fladd+0)+3,f
  9493  01C7' 078B'              	movf	3+(??___fladd+0)+0,w
  9494  01C8' 080B'              	movwf	(___fladd@b+3)
  9495  01C9' 0083'              	movf	2+(??___fladd+0)+0,w
  9496  01CA' 080A'              	movwf	(___fladd@b+2)
  9497  01CB' 0082'              	movf	1+(??___fladd+0)+0,w
  9498  01CC' 0809'              	movwf	(___fladd@b+1)
  9499  01CD' 0081'              	movf	0+(??___fladd+0)+0,w
  9500  01CE' 0808'              	movwf	(___fladd@b)
  9501  01CF' 0080'              
  9502                           	line	155
  9503                           	movlw	low(080h)
  9504  01D0' 3080               	movwf	(??___fladd+0)+0
  9505  01D1' 0088'              	movf	(??___fladd+0)+0,w
  9506  01D2' 0808'              	xorwf	(___fladd@signs),f
  9507  01D3' 0694'              	line	156
  9508                           	
  9509                           i1l2234:	
  9510  01D4'                    	comf	(___fladd@grs),f
  9511  01D4' 0997'              	incf	(___fladd@grs),f
  9512  01D5' 0A97'              	line	157
  9513                           	
  9514                           i1l2236:	
  9515  01D6'                    	movf	((___fladd@grs)),w
  9516  01D6' 0817'              	btfss	status,2
  9517  01D7' 1D03               	goto	u219_21
  9518  01D8' 2800'              	goto	u219_20
  9519  01D9' 2800'              u219_21:
  9520  01DA'                    	goto	i1l773
  9521  01DA' 2800'              u219_20:
  9522  01DB'                    	line	158
  9523                           	
  9524                           i1l2238:	
  9525  01DB'                    	movlw	01h
  9526  01DB' 3001               	addwf	(___fladd@b),f
  9527  01DC' 0780'              	movlw	0
  9528  01DD' 3000               	skipnc
  9529  01DE' 1803               movlw 1
  9530  01DF' 3001               	addwf	(___fladd@b+1),f
  9531  01E0' 0781'              	movlw	0
  9532  01E1' 3000               	skipnc
  9533  01E2' 1803               movlw 1
  9534  01E3' 3001               	addwf	(___fladd@b+2),f
  9535  01E4' 0782'              	movlw	0
  9536  01E5' 3000               	skipnc
  9537  01E6' 1803               movlw 1
  9538  01E7' 3001               	addwf	(___fladd@b+3),f
  9539  01E8' 0783'              	goto	i1l773
  9540  01E9' 2800'              	line	159
  9541                           	
  9542                           i1l772:	
  9543  01EA'                    	line	160
  9544                           	goto	i1l773
  9545  01EA' 2800'              	line	161
  9546                           	
  9547                           i1l771:	
  9548  01EB'                    	line	162
  9549                           	
  9550                           i1l2240:	
  9551  01EB'                    	movf	(___fladd@a),w
  9552  01EB' 0804'              	subwf	(___fladd@b),f
  9553  01EC' 0280'              	movf	(___fladd@a+1),w
  9554  01ED' 0805'              	skipc
  9555  01EE' 1C03               	incfsz	(___fladd@a+1),w
  9556  01EF' 0F05'              	subwf	(___fladd@b+1),f
  9557  01F0' 0281'              	movf	(___fladd@a+2),w
  9558  01F1' 0806'              	skipc
  9559  01F2' 1C03               	incfsz	(___fladd@a+2),w
  9560  01F3' 0F06'              	subwf	(___fladd@b+2),f
  9561  01F4' 0282'              	movf	(___fladd@a+3),w
  9562  01F5' 0807'              	skipc
  9563  01F6' 1C03               	incfsz	(___fladd@a+3),w
  9564  01F7' 0F07'              	subwf	(___fladd@b+3),f
  9565  01F8' 0283'              	line	163
  9566                           	
  9567                           i1l773:	
  9568  01F9'                    	line	166
  9569                           	movf	(___fladd@b+3),w
  9570  01F9' 0803'              	iorwf	(___fladd@b+2),w
  9571  01FA' 0402'              	iorwf	(___fladd@b+1),w
  9572  01FB' 0401'              	iorwf	(___fladd@b),w
  9573  01FC' 0400'              	skipz
  9574  01FD' 1D03               	goto	u220_21
  9575  01FE' 2800'              	goto	u220_20
  9576  01FF' 2800'              u220_21:
  9577  0200'                    	goto	i1l2262
  9578  0200' 2800'              u220_20:
  9579  0201'                    	
  9580                           i1l2242:	
  9581  0201'                    	movf	((___fladd@grs)),w
  9582  0201' 0817'              	btfss	status,2
  9583  0202' 1D03               	goto	u221_21
  9584  0203' 2800'              	goto	u221_20
  9585  0204' 2800'              u221_21:
  9586  0205'                    	goto	i1l2262
  9587  0205' 2800'              u221_20:
  9588  0206'                    	line	167
  9589                           	
  9590                           i1l2244:	
  9591  0206'                    	movlw	0x0
  9592  0206' 3000               	movwf	(?___fladd+3)
  9593  0207' 0083'              	movlw	0x0
  9594  0208' 3000               	movwf	(?___fladd+2)
  9595  0209' 0082'              	movlw	0x0
  9596  020A' 3000               	movwf	(?___fladd+1)
  9597  020B' 0081'              	movlw	0x0
  9598  020C' 3000               	movwf	(?___fladd)
  9599  020D' 0080'              
  9600                           	goto	i1l765
  9601  020E' 2800'              	
  9602                           i1l2246:	
  9603  020F'                    	goto	i1l765
  9604  020F' 2800'              	line	168
  9605                           	
  9606                           i1l774:	
  9607  0210'                    	line	171
  9608                           	goto	i1l2262
  9609  0210' 2800'              	
  9610                           i1l776:	
  9611  0211'                    	line	172
  9612                           	
  9613                           i1l2248:	
  9614  0211'                    	movlw	01h
  9615  0211' 3001               	movwf	(??___fladd+0)+0
  9616  0212' 0088'              u222_25:
  9617  0213'                    	clrc
  9618  0213' 1003               	rlf	(___fladd@b),f
  9619  0214' 0D80'              	rlf	(___fladd@b+1),f
  9620  0215' 0D81'              	rlf	(___fladd@b+2),f
  9621  0216' 0D82'              	rlf	(___fladd@b+3),f
  9622  0217' 0D83'              	decfsz	(??___fladd+0)+0
  9623  0218' 0B88'              	goto	u222_25
  9624  0219' 2800'              	line	173
  9625                           	
  9626                           i1l2250:	
  9627  021A'                    	btfss	(___fladd@grs),(7)&7
  9628  021A' 1F97'              	goto	u223_21
  9629  021B' 2800'              	goto	u223_20
  9630  021C' 2800'              u223_21:
  9631  021D'                    	goto	i1l777
  9632  021D' 2800'              u223_20:
  9633  021E'                    	line	174
  9634                           	
  9635                           i1l2252:	
  9636  021E'                    	bsf	(___fladd@b)+(0/8),(0)&7
  9637  021E' 1400'              	line	175
  9638                           	
  9639                           i1l777:	
  9640  021F'                    	line	176
  9641                           	btfss	(___fladd@grs),(0)&7
  9642  021F' 1C17'              	goto	u224_21
  9643  0220' 2800'              	goto	u224_20
  9644  0221' 2800'              u224_21:
  9645  0222'                    	goto	i1l2256
  9646  0222' 2800'              u224_20:
  9647  0223'                    	line	177
  9648                           	
  9649                           i1l2254:	
  9650  0223'                    	setc
  9651  0223' 1403               	rlf	(___fladd@grs),f
  9652  0224' 0D97'              	line	178
  9653                           	goto	i1l2258
  9654  0225' 2800'              	line	179
  9655                           	
  9656                           i1l778:	
  9657  0226'                    	line	180
  9658                           	
  9659                           i1l2256:	
  9660  0226'                    	clrc
  9661  0226' 1003               	rlf	(___fladd@grs),f
  9662  0227' 0D97'              
  9663                           	goto	i1l2258
  9664  0228' 2800'              	line	181
  9665                           	
  9666                           i1l779:	
  9667  0229'                    	line	182
  9668                           	
  9669                           i1l2258:	
  9670  0229'                    	movf	((___fladd@bexp)),w
  9671  0229' 0816'              	btfsc	status,2
  9672  022A' 1903               	goto	u225_21
  9673  022B' 2800'              	goto	u225_20
  9674  022C' 2800'              u225_21:
  9675  022D'                    	goto	i1l2262
  9676  022D' 2800'              u225_20:
  9677  022E'                    	line	183
  9678                           	
  9679                           i1l2260:	
  9680  022E'                    	movlw	01h
  9681  022E' 3001               	subwf	(___fladd@bexp),f
  9682  022F' 0296'              	goto	i1l2262
  9683  0230' 2800'              	line	184
  9684                           	
  9685                           i1l780:	
  9686  0231'                    	goto	i1l2262
  9687  0231' 2800'              	line	185
  9688                           	
  9689                           i1l775:	
  9690  0232'                    	line	171
  9691                           	
  9692                           i1l2262:	
  9693  0232'                    	btfss	(___fladd@b+2),(23)&7
  9694  0232' 1F82'              	goto	u226_21
  9695  0233' 2800'              	goto	u226_20
  9696  0234' 2800'              u226_21:
  9697  0235'                    	goto	i1l2248
  9698  0235' 2800'              u226_20:
  9699  0236'                    	goto	i1l2264
  9700  0236' 2800'              	
  9701                           i1l781:	
  9702  0237'                    	goto	i1l2264
  9703  0237' 2800'              	line	186
  9704                           	
  9705                           i1l770:	
  9706  0238'                    	line	192
  9707                           	
  9708                           i1l2264:	
  9709  0238'                    	clrf	(___fladd@aexp)
  9710  0238' 0195'              	line	193
  9711                           	
  9712                           i1l2266:	
  9713  0239'                    	btfss	(___fladd@grs),(7)&7
  9714  0239' 1F97'              	goto	u227_21
  9715  023A' 2800'              	goto	u227_20
  9716  023B' 2800'              u227_21:
  9717  023C'                    	goto	i1l2274
  9718  023C' 2800'              u227_20:
  9719  023D'                    	line	194
  9720                           	
  9721                           i1l2268:	
  9722  023D'                    	movf	(___fladd@grs),w
  9723  023D' 0817'              	andlw	07Fh
  9724  023E' 397F               	btfsc	status,2
  9725  023F' 1903               	goto	u228_21
  9726  0240' 2800'              	goto	u228_20
  9727  0241' 2800'              u228_21:
  9728  0242'                    	goto	i1l783
  9729  0242' 2800'              u228_20:
  9730  0243'                    	line	195
  9731                           	
  9732                           i1l2270:	
  9733  0243'                    	clrf	(___fladd@aexp)
  9734  0243' 0195'              	incf	(___fladd@aexp),f
  9735  0244' 0A95'              	line	196
  9736                           	goto	i1l2274
  9737  0245' 2800'              	line	197
  9738                           	
  9739                           i1l783:	
  9740  0246'                    	line	198
  9741                           	btfss	(___fladd@b),(0)&7
  9742  0246' 1C00'              	goto	u229_21
  9743  0247' 2800'              	goto	u229_20
  9744  0248' 2800'              u229_21:
  9745  0249'                    	goto	i1l2274
  9746  0249' 2800'              u229_20:
  9747  024A'                    	line	199
  9748                           	
  9749                           i1l2272:	
  9750  024A'                    	clrf	(___fladd@aexp)
  9751  024A' 0195'              	incf	(___fladd@aexp),f
  9752  024B' 0A95'              	goto	i1l2274
  9753  024C' 2800'              	line	200
  9754                           	
  9755                           i1l785:	
  9756  024D'                    	goto	i1l2274
  9757  024D' 2800'              	line	201
  9758                           	
  9759                           i1l784:	
  9760  024E'                    	goto	i1l2274
  9761  024E' 2800'              	line	202
  9762                           	
  9763                           i1l782:	
  9764  024F'                    	line	203
  9765                           	
  9766                           i1l2274:	
  9767  024F'                    	movf	((___fladd@aexp)),w
  9768  024F' 0815'              	btfsc	status,2
  9769  0250' 1903               	goto	u230_21
  9770  0251' 2800'              	goto	u230_20
  9771  0252' 2800'              u230_21:
  9772  0253'                    	goto	i1l786
  9773  0253' 2800'              u230_20:
  9774  0254'                    	line	204
  9775                           	
  9776                           i1l2276:	
  9777  0254'                    	movlw	01h
  9778  0254' 3001               	addwf	(___fladd@b),f
  9779  0255' 0780'              	movlw	0
  9780  0256' 3000               	skipnc
  9781  0257' 1803               movlw 1
  9782  0258' 3001               	addwf	(___fladd@b+1),f
  9783  0259' 0781'              	movlw	0
  9784  025A' 3000               	skipnc
  9785  025B' 1803               movlw 1
  9786  025C' 3001               	addwf	(___fladd@b+2),f
  9787  025D' 0782'              	movlw	0
  9788  025E' 3000               	skipnc
  9789  025F' 1803               movlw 1
  9790  0260' 3001               	addwf	(___fladd@b+3),f
  9791  0261' 0783'              	line	205
  9792                           	
  9793                           i1l2278:	
  9794  0262'                    	btfss	(___fladd@b+3),(24)&7
  9795  0262' 1C03'              	goto	u231_21
  9796  0263' 2800'              	goto	u231_20
  9797  0264' 2800'              u231_21:
  9798  0265'                    	goto	i1l786
  9799  0265' 2800'              u231_20:
  9800  0266'                    	line	206
  9801                           	
  9802                           i1l2280:	
  9803  0266'                    	movf	(___fladd@b),w
  9804  0266' 0800'              	movwf	(??___fladd+0)+0
  9805  0267' 0088'              	movf	(___fladd@b+1),w
  9806  0268' 0801'              	movwf	((??___fladd+0)+0+1)
  9807  0269' 0089'              	movf	(___fladd@b+2),w
  9808  026A' 0802'              	movwf	((??___fladd+0)+0+2)
  9809  026B' 008A'              	movf	(___fladd@b+3),w
  9810  026C' 0803'              	movwf	((??___fladd+0)+0+3)
  9811  026D' 008B'              	movlw	01h
  9812  026E' 3001               	movwf	(??___fladd+4)+0
  9813  026F' 008C'              u232_25:
  9814  0270'                    	rlf	(??___fladd+0)+3,w
  9815  0270' 0D0B'              	rrf	(??___fladd+0)+3,f
  9816  0271' 0C8B'              	rrf	(??___fladd+0)+2,f
  9817  0272' 0C8A'              	rrf	(??___fladd+0)+1,f
  9818  0273' 0C89'              	rrf	(??___fladd+0)+0,f
  9819  0274' 0C88'              u232_20:
  9820  0275'                    	decfsz	(??___fladd+4)+0,f
  9821  0275' 0B8C'              	goto	u232_25
  9822  0276' 2800'              	movf	3+(??___fladd+0)+0,w
  9823  0277' 080B'              	movwf	(___fladd@b+3)
  9824  0278' 0083'              	movf	2+(??___fladd+0)+0,w
  9825  0279' 080A'              	movwf	(___fladd@b+2)
  9826  027A' 0082'              	movf	1+(??___fladd+0)+0,w
  9827  027B' 0809'              	movwf	(___fladd@b+1)
  9828  027C' 0081'              	movf	0+(??___fladd+0)+0,w
  9829  027D' 0808'              	movwf	(___fladd@b)
  9830  027E' 0080'              
  9831                           	line	207
  9832                           		incf	((___fladd@bexp)),w
  9833  027F' 0A16'              	btfsc	status,2
  9834  0280' 1903               	goto	u233_21
  9835  0281' 2800'              	goto	u233_20
  9836  0282' 2800'              u233_21:
  9837  0283'                    	goto	i1l786
  9838  0283' 2800'              u233_20:
  9839  0284'                    	line	208
  9840                           	
  9841                           i1l2282:	
  9842  0284'                    	movlw	low(01h)
  9843  0284' 3001               	movwf	(??___fladd+0)+0
  9844  0285' 0088'              	movf	(??___fladd+0)+0,w
  9845  0286' 0808'              	addwf	(___fladd@bexp),f
  9846  0287' 0796'              	goto	i1l786
  9847  0288' 2800'              	line	209
  9848                           	
  9849                           i1l788:	
  9850  0289'                    	goto	i1l786
  9851  0289' 2800'              	line	210
  9852                           	
  9853                           i1l787:	
  9854  028A'                    	line	211
  9855                           	
  9856                           i1l786:	
  9857  028A'                    	line	215
  9858                           		incf	((___fladd@bexp)),w
  9859  028A' 0A16'              	btfsc	status,2
  9860  028B' 1903               	goto	u234_21
  9861  028C' 2800'              	goto	u234_20
  9862  028D' 2800'              u234_21:
  9863  028E'                    	goto	i1l2286
  9864  028E' 2800'              u234_20:
  9865  028F'                    	
  9866                           i1l2284:	
  9867  028F'                    	movf	((___fladd@bexp)),w
  9868  028F' 0816'              	btfss	status,2
  9869  0290' 1D03               	goto	u235_21
  9870  0291' 2800'              	goto	u235_20
  9871  0292' 2800'              u235_21:
  9872  0293'                    	goto	i1l2292
  9873  0293' 2800'              u235_20:
  9874  0294'                    	goto	i1l2286
  9875  0294' 2800'              	
  9876                           i1l791:	
  9877  0295'                    	line	216
  9878                           	
  9879                           i1l2286:	
  9880  0295'                    	movlw	high highword(0)
  9881  0295' 3000               	movwf	(___fladd@b+3)
  9882  0296' 0083'              	movlw	low highword(0)
  9883  0297' 3000               	movwf	(___fladd@b+2)
  9884  0298' 0082'              	movlw	high(0)
  9885  0299' 3000               	movwf	(___fladd@b+1)
  9886  029A' 0081'              	movlw	low(0)
  9887  029B' 3000               	movwf	(___fladd@b)
  9888  029C' 0080'              
  9889                           	line	218
  9890                           	
  9891                           i1l2288:	
  9892  029D'                    	movf	((___fladd@bexp)),w
  9893  029D' 0816'              	btfss	status,2
  9894  029E' 1D03               	goto	u236_21
  9895  029F' 2800'              	goto	u236_20
  9896  02A0' 2800'              u236_21:
  9897  02A1'                    	goto	i1l2292
  9898  02A1' 2800'              u236_20:
  9899  02A2'                    	line	219
  9900                           	
  9901                           i1l2290:	
  9902  02A2'                    	clrf	(___fladd@signs)
  9903  02A2' 0194'              	goto	i1l2292
  9904  02A3' 2800'              	line	220
  9905                           	
  9906                           i1l792:	
  9907  02A4'                    	goto	i1l2292
  9908  02A4' 2800'              	line	221
  9909                           	
  9910                           i1l789:	
  9911  02A5'                    	line	225
  9912                           	
  9913                           i1l2292:	
  9914  02A5'                    	btfss	(___fladd@bexp),(0)&7
  9915  02A5' 1C16'              	goto	u237_21
  9916  02A6' 2800'              	goto	u237_20
  9917  02A7' 2800'              u237_21:
  9918  02A8'                    	goto	i1l2296
  9919  02A8' 2800'              u237_20:
  9920  02A9'                    	line	226
  9921                           	
  9922                           i1l2294:	
  9923  02A9'                    	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  9924  02A9' 1782'              	line	227
  9925                           	goto	i1l794
  9926  02AA' 2800'              	line	229
  9927                           	
  9928                           i1l793:	
  9929  02AB'                    	line	230
  9930                           	
  9931                           i1l2296:	
  9932  02AB'                    	movlw	low(07Fh)
  9933  02AB' 307F               	movwf	(??___fladd+0)+0
  9934  02AC' 0088'              	movf	(??___fladd+0)+0,w
  9935  02AD' 0808'              	andwf	0+(___fladd@b)+02h,f
  9936  02AE' 0582'              	line	231
  9937                           	
  9938                           i1l794:	
  9939  02AF'                    	line	232
  9940                           	movf	(___fladd@bexp),w
  9941  02AF' 0816'              	movwf	(??___fladd+0)+0
  9942  02B0' 0088'              	clrc
  9943  02B1' 1003               	rrf	(??___fladd+0)+0,w
  9944  02B2' 0C08'              	movwf	(??___fladd+1)+0
  9945  02B3' 0089'              	movf	(??___fladd+1)+0,w
  9946  02B4' 0809'              	movwf	0+(___fladd@b)+03h
  9947  02B5' 0083'              	line	233
  9948                           	
  9949                           i1l2298:	
  9950  02B6'                    	btfss	(___fladd@signs),(7)&7
  9951  02B6' 1F94'              	goto	u238_21
  9952  02B7' 2800'              	goto	u238_20
  9953  02B8' 2800'              u238_21:
  9954  02B9'                    	goto	i1l795
  9955  02B9' 2800'              u238_20:
  9956  02BA'                    	line	234
  9957                           	
  9958                           i1l2300:	
  9959  02BA'                    	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  9960  02BA' 1783'              	line	235
  9961                           	
  9962                           i1l795:	
  9963  02BB'                    	line	236
  9964                           	line	237
  9965                           	
  9966                           i1l765:	
  9967  02BB'                    	return
  9968  02BB' 0008               	opt stack 0
  9969                           GLOBAL	__end_of___fladd
  9970                           	__end_of___fladd:
  9971  02BC'                    	signat	___fladd,8316
  9972                           global	___latbits
  9973                           ___latbits	equ	2
  9974  0002                     	global	btemp
  9975                           	btemp set 07Eh
  9976  007E                     
  9977                           	DABS	1,126,2	;btemp
  9978                           	global	wtemp0
  9979                           	wtemp0 set btemp+0
  9980  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      69
    BANK1            80     37      46
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _start_receive->_handle_remote
    _is_deadzone->___xxtofl
    ___fltol->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd

Critical Paths under _main in BANK1

    _main->_update_volume
    _update_volume->_write_int
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10634
                                             35 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                       _update_input
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5318
                                             33 BANK1      2     2      0
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5294
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    3781
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1247
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0     951
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     684
                                              6 BANK1     10     8      2
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     344
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1311
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
                        _init_remote
 ---------------------------------------------------------------------------------
 (2) _init_remote                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    4371
                                             54 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _start_receive
 ---------------------------------------------------------------------------------
 (8) _start_receive                                       10    10      0      99
                                              5 COMMON     8     8      0
                                              0 BANK0      2     2      0
                      _handle_remote
 ---------------------------------------------------------------------------------
 (9) _handle_remote                                        5     5      0      53
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      6     6      0    4138
                                             48 BANK0      6     6      0
                        _is_deadzone
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _is_deadzone                                         13     9      4    3746
                                             35 BANK0     13     9      4
                            ___fladd
                            ___fltol
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            11     7      4     381
                                             24 BANK0     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            24    16      8    2414
                                              0 BANK0     24    16      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
     _init_remote
   _update_input
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite
   _update_volume
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     _is_deadzone
       ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       i1___wmul
     i1___lwdiv
   _handle_rotary
   _start_receive
     _handle_remote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      81       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     25      2E       7       57.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      81      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Jan 27 12:58:00 2019

                  _update_input 0000          __size_of_start_receive 0070                               pc 0002  
                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              l53 0006  
                            l54 000E                              l55 0028                              l56 0029  
                            l57 0029                              fsr 0004             ___wmul@multiplicand 0002  
              i1___wmul@product 0004                    spiWrite@data 0000                   _update_volume 0000  
                           l200 001C                             l120 004D                             l123 000E  
                           l140 0024                             l132 003C                             l124 0045  
                           l141 0007                             l133 0005                             l150 0020  
                           l142 0039                             l134 0018                             l151 0061  
                           l143 0039                             l135 0034                             l127 000E  
                           l160 0061                             l152 003F                             l136 004B  
                           l128 005A                             l161 0061                             l153 0060  
                           l137 004B                             l129 0039                             l154 005E  
                           l146 001A                             l155 005F                             l147 0035  
                           l172 0008                             l164 000B                             l156 0061  
                           l173 0008                             l165 000E                             l174 000F  
                           l175 000F                             l159 0013                             l192 0009  
                           l168 000B                             l440 001C                             l193 0038  
                           l169 000E                             l441 0130                             l194 0021  
                           l450 00B6                             l442 001D                             l195 000C  
                           l451 0103                             l443 001E                             l196 0036  
                           l268 006D                             l436 010E                             l452 00BB  
                           l444 004C                             l460 0024                             l197 0010  
                           l453 010D                             l445 001F                             l437 0008  
                           l461 0029                             l198 0014                             l454 012F  
                           l446 0066                             l438 001A                             l199 0018  
                           l455 0135                             l447 0070                             l439 0021  
                           l448 00A4                             l297 0016                             l449 0099  
                           l730 0046                             l458 0005                             l731 004C  
                           l459 000F                             l724 0047                             l740 003C  
                           l725 0019                             l741 0042                             l726 000D  
                           l734 003D                             l727 001E                             l735 0017  
                           l728 001F                             l736 000B                             l729 0038  
                           l737 001C                             l738 001D                             l739 002E  
                 ?_display_init 0000                    __CFG_CPD$OFF 0000                             _isr 0000  
                           fsr0 0004                             indf 0000                   write_char@pos 0010  
                  __CFG_LVP$OFF 0000                    ___fltol@exp1 0022                            l2000 0042  
                          l2010 0003                            l2002 0000                            l2020 0020  
                          l2012 0008                            l2004 0007                            l2030 005C  
                          l2022 0021                            l2014 000E                            l2006 001D  
                          l2040 0070                            l2032 0060                            l2024 004C  
                          l2016 0015                            l2008 0024                            l2050 00B1  
                          l2042 0098                            l2034 0066                            l2026 0054  
                          l2018 001A                            l2060 0103                            l2052 00B6  
                          l2044 0099                            l2036 0068                            l2028 0058  
                          l2054 00BB                            l2038 006F                            l2046 00A4  
                          l2062 010E                            l2400 002B                            l2056 00F7  
                          l2048 00AA                            l2064 0130                            l2410 0037  
                          l2402 002C                            l2066 0135                            l2058 00FE  
                          l2420 0045                            l2412 0038                            l2404 002D  
                          l2422 0049                            l2414 003E                            l2406 0033  
                          l2430 0005                            l2416 0041                            l2408 0036  
                          l2360 0000                            l2600 002F                            l2424 0000  
                          l2440 0026                            l2432 0009                            l2418 0042  
                          l2370 000E                            l2362 0008                            l2610 003E  
                          l2602 0034                            l2426 0007                            l2450 001A  
                          l2434 0017                            l2442 0034                            l2380 0018  
                          l2372 000F                            l2364 0009                            l2460 000D  
                          l2620 0049                            l2612 003F                            l2604 0039  
                          l2452 0000                            l2444 0000                            l2436 0018  
                          l2428 0000                            l1902 0003                            l2390 0026  
                          l2382 001B                            l2374 0010                            l2366 000A  
                          l2462 0010                            l2622 005B                            l2614 0040  
                          l2606 003C                            l2454 0007                            l1910 0016  
                          l2446 000F                            l2438 001E                            l2630 000F  
                          l2392 0027                            l2384 001C                            l2376 0011  
                          l2368 000D                            l2464 0013                            l2456 0000  
                          l2616 0041                            l2608 003D                            l1912 001D  
                          l1904 0000                            l1920 0004                            l2448 0019  
                          l2640 0039                            l2632 0014                            l2624 0000  
                          l2394 0028                            l2386 001D                            l2378 0012  
                          l2458 000A                            l2618 0045                            l2570 0009  
                          l2562 0000                            l1914 0024                            l1906 0005  
                          l1922 0012                            l1930 0003                            l2650 000D  
                          l2642 0044                            l2634 001F                            l2626 000D  
                          l2396 0029                            l2388 0023                            l2580 0013  
                          l2572 000A                            l2564 0006                            l1916 0029  
                          l1908 0009                            l1924 0013                            l1940 0028  
                          l1932 0009                            l2660 003A                            l2652 0010  
                          l2644 004F                            l2636 0025                            l2628 000E  
                          l2670 000C                            l2398 002A                            l2590 0020  
                          l2582 0016                            l2574 000B                            l2566 0007  
                          l1926 004B                            l1918 0000                            l1950 004D  
                          l1942 002E                            l1934 000F                            l2662 003F  
                          l2654 0015                            l2646 0054                            l2638 0032  
                          l2750 0000                            l2680 0020                            l2672 0010  
                          l2664 0000                            l2592 0023                            l2584 0017  
                          l2576 000F                            l2568 0008                            l1960 000D  
                          l1928 0053                            l1952 0054                            l1944 0035  
                          l1936 0016                            l2656 0020                            l2648 0000  
                          l2760 001D                            l2752 0006                            l2674 0014  
                          l2682 0021                            l2666 0008                            l2594 0026  
                          l2586 001A                            l2578 0012                            l1970 0036  
                          l1962 0014                            l1954 0000                            l1946 003F  
                          l1938 0020                            l2658 002B                            l2754 000C  
                          l2860 0028                            l2676 0018                            l2684 0036  
                          l2668 0009                            l2596 0027                            l2588 001D  
                          l1972 0038                            l1964 0019                            l1956 0004  
                          l1980 0000                            l1948 0047                            l2756 000E  
                          l2678 001C                            l2598 002A                            l1974 003F  
                          l1966 001F                            l1958 000A                            l1990 001D  
                          l1982 0008                            l2758 0018                            l1968 0030  
                          l1976 0047                            l1992 0027                            l1984 000B  
                          l1978 004C                            l1994 002E                            l1986 0012  
                          l2858 0041                            l1996 0035                            l1988 0017  
                          l1998 003D                            ?_isr 0000                            STR_1 0190  
                          STR_2 0196                            STR_3 019A                            u1520 0023  
                          u1600 004D                            u1521 0022                            u1505 0010  
                          u1601 004C                            u1610 000A                            u1530 0011  
                          u1611 0009                            u1515 0017                            u1531 0010  
                          u1700 001B                            u1540 0060                            u1701 001A  
                          u1541 005F                            u1630 001D                            u1710 0027  
                          u1550 0009                            u1631 001C                            u1711 0026  
                          u1535 000D                            u1551 0008                            u1480 000E  
                          u1800 00AA                            u1560 000F                            u2600 004A  
                          u1481 000D                            u1625 000E                            u1801 00A9  
                          u1545 005C                            u1561 000E                            u2601 0049  
                          u1650 0030                            u1730 003B                            u1810 010C  
                          u1490 0009                            u1570 0028                            u2610 000F  
                          u1651 002F                            u1731 003A                            u1715 0023  
                          u1811 010B                            u1491 0008                            u1571 0027  
                          u2611 000E                            u2620 0007                            u1820 012E  
                          u1580 002E                            u1740 0038                            u2621 0006  
                          u1645 0020                            u1725 002F                            u1821 012D  
                          u1581 002D                            u1741 0037                            u2605 0046  
                          u1670 0045                            u1750 000E                            u1590 0047  
                          u1671 0044                            u1655 002C                            u1751 000D  
                          u1591 0046                            u2615 000B                            u1680 0008  
                          u1760 005C                            u2720 000C                            u1665 0039  
                          u1681 0007                            u1761 005B                            u2721 000B  
                          u2570 0007                            u1770 006E                            u2730 0032  
                          u2571 0006                            u1771 006D                            u2731 0031  
                          u1780 0097                            u2580 0016                            u2740 000C  
                          u1781 0096                            u2581 0015                            u2741 000B  
                          u2725 0008                            u2750 0007                            u1790 00A3  
                          u2590 0033                            u2910 000C                            u2751 0006  
                          u1695 000C                            u1791 00A2                            u2591 0032  
                          u2735 002E                            u2911 000B                            u1785 0093  
                          u2585 0012                            u2745 0008                            u2595 002F  
                          u2957 0023                            i1l62 0017                            i1l63 0015  
                          i1l64 0026                            i1l65 0026                    __CFG_WRT$OFF 0000  
                          _main 0000                            _font 0012          is_deadzone@deadzoneLow 0029  
                          btemp 007E                   __CFG_BOREN$ON 0000                            start 0000* 
                 __CFG_IESO$OFF 0000                    ?_is_deadzone 0023                           ??_isr 0036  
                ?_update_volume 0000                   ___fltol@sign1 0021                  ??_display_init 0001  
               __end_of___fladd 02BC                           ?_main 0000                   __CFG_WDTE$OFF 0000  
               __end_of___fltol 009C                 __end_of___lwdiv 004D                           i1l210 0074  
                         i1l211 0080                           i1l203 0045                           i1l204 0044  
                         i1l301 00BB                           i1l205 0040                           i1l302 00C5  
                         i1l310 007C                           i1l206 0043                           i1l311 007C  
                         i1l207 0075                           i1l208 0075                           i1l305 0016  
                         i1l209 006F                           i1l306 0081                           i1l307 003C  
                         i1l340 0019                           i1l332 0021                           i1l309 0037  
                         i1l341 0026                           i1l333 006A                           i1l342 0033  
                         i1l334 006F                           i1l343 0040                           i1l344 004B  
                         i1l345 007E                           i1l337 0057                 __end_of___lwmod 0043  
                         i1l338 000E                           i1l339 0075                           i1l460 0022  
                         i1l461 0027                           i1l650 008B                           i1l458 0003  
                         i1l730 0044                           i1l651 0078                           i1l459 000D  
                         i1l731 004A                           i1l652 0084                           i1l644 001F  
                         i1l724 0045                           i1l653 0079                           i1l645 009B  
                         i1l725 0017                           i1l750 0061                           i1l654 008A  
                         i1l646 0068                           i1l726 000B                           i1l751 005E  
                         i1l655 009B                           i1l647 0054                           i1l727 001C  
                         i1l760 00FF                           i1l752 0069                           i1l744 0013  
                         i1l648 0055                           i1l728 001D                           i1l761 0105  
                         i1l753 00B5                           i1l745 0029                           i1l649 0067  
                         i1l729 0036                           i1l770 0238                           i1l762 011C  
                         i1l754 0078                           i1l746 0026                           i1l771 01EB  
                         i1l763 016F                           i1l755 00EE                           i1l747 0032  
                         i1l780 0231                           i1l772 01EA                           i1l764 012F  
                         i1l756 011C                           i1l748 003F                           i1l781 0237  
                         i1l773 01F9                           i1l765 02BB                           i1l757 0113  
                         i1l749 004B                           i1l782 024F                           i1l774 0210  
                         i1l766 016E                           i1l758 00EF                           i1l870 0047  
                         i1l791 0295                           i1l783 0246                           i1l775 0232  
                         i1l767 0157                           i1l759 00FC                           i1l871 0039  
                         i1l792 02A4                           i1l784 024E                           i1l776 0211  
                         i1l768 015A                           i1l880 0089                           i1l872 004E  
                         i1l793 02AB                           i1l785 024D                           i1l777 021F  
                         i1l769 0160                           i1l881 0095                           i1l873 006A  
                         i1l794 02AF                           i1l786 028A                           i1l778 0226  
                         i1l882 00B8                           i1l874 004F                           i1l866 001A  
                         i1l795 02BB                           i1l787 028A                           i1l779 0229  
                         i1l875 0071                           i1l867 0022                           i1l788 0289  
                         i1l876 007E                           i1l868 0034                           i1l789 02A5  
                         i1l877 0072                           i1l869 00C1                           i1l879 0089  
                         _PORTA 0005                           _PORTC 0007                           _TRISC 0087  
                         _TRISD 0088           _activateSelectedRelay 0000                    ?_init_remote 0000  
                __CFG_FCMEN$OFF 0000                     _write_space 0000                 __end_of_dpowers 018E  
                 _start_receive 0000         is_deadzone@deadzoneHigh 002B                           pclath 000A  
              __end_ofi1___wmul 0028                           status 0003             i1___wmul@multiplier 0000  
                         wtemp0 007E                 __end_of_sprintf 0136              __size_ofi1___lwdiv 004B  
          is_deadzone@turnPoint 002E                  __CFG_MCLRE$OFF 0000                 __initialization 0000  
                  __end_of_main 002C                    __end_of_font 0184              handle_rotary@portA 0003  
            handle_rotary@portB 0005             _display_write_start 0000                          ??_main 0023  
               _handle_potmeter 0000                  write_text@text 0013                  ?_start_receive 0000  
                        _ADRESH 001E                          _ADRESL 009E            ?_display_write_start 0000  
                        i1l2100 0077                          i1l2110 0007                          i1l2102 0079  
                        i1l2200 0105                          i1l2120 001D                          i1l2112 000D  
                        i1l2104 008B                          i1l2210 012E                          i1l2202 010E  
                        i1l2130 0037                          i1l2122 0026                          i1l2114 0011  
                        i1l2106 0090                          i1l2300 02BA                          i1l2220 0157  
                        i1l2212 012F                          i1l2204 0113                          i1l2140 004B  
                        i1l2132 003D                          i1l2124 0027                          i1l2116 0013  
                        i1l2108 0000                          i1l2222 015A                          i1l2214 0146  
                        i1l2206 0120                          i1l2230 016F                          i1l2142 0050  
                        i1l2150 0061                          i1l2134 003F                          i1l2118 0018  
                        i1l2126 0029                          i1l2310 002A                          i1l2302 0001  
                        i1l2232 0185                          i1l2240 01EB                          i1l2224 015E  
                        i1l2216 014A                          i1l2208 0125                          i1l2160 0080  
                        i1l2152 006F                          u200_20 006F                          i1l2144 0055  
                        i1l2136 0045                          i1l2128 0032                          i1l2080 0034  
                        i1l2072 0000                          i1l2320 004F                          i1l2312 0033  
                        i1l2304 0006                          u200_21 006E                          i1l2250 021A  
                        i1l2242 0201                          i1l2234 01D4                          i1l2226 0160  
                        i1l2218 014E                          i1l2170 0094                          i1l2162 0084  
                        i1l2154 0073                          i1l2146 005E                          i1l2138 0049  
                        i1l2090 004A                          i1l2082 0035                          i1l2074 0015  
                        i1l2330 0082                          i1l2322 0053                          i1l2314 0034  
                        i1l2306 000A                          i1l2260 022E                          i1l2252 021E  
                        i1l2244 0206                          i1l2236 01D6                          i1l2228 0169  
                        i1l2180 00A8                          i1l2172 0098                          i1l2164 0088  
                        i1l2156 0078                          i1l2148 005F                          i1l2092 0053  
                        i1l2084 003D                          i1l2076 001E                          i1l2340 00B6  
                        i1l2332 008D                          i1l2324 0061                          i1l2316 0039  
                        i1l2308 001A                          i1l2500 0023                          i1l2270 0243  
                        i1l2254 0223                          i1l2246 020F                          i1l2262 0232  
                        i1l2238 01DB                          i1l2190 00D2                          i1l2182 00AC  
                        i1l2174 009C                          i1l2166 008C                          i1l2158 007C  
                        i1l2094 0055                          i1l2086 003F                          i1l2078 001F  
                        i1l2342 00B8                          i1l2334 0097                          i1l2326 0072  
                        i1l2318 0047                          i1l2350 0007                          i1l2510 0039  
                        i1l2502 0026                          i1l2280 0266                          i1l2272 024A  
                        i1l2256 0226                          i1l2248 0211                          i1l2264 0238  
                        i1l2192 00F3                          i1l2184 00B0                          i1l2176 00A0  
                        i1l2168 0090                          u201_20 0073                          i1l2088 0043  
                        i1l2096 0068                          i1l2344 00C1                          i1l2336 00AD  
                        i1l2328 007E                          i1l2352 0014                          i1l2520 0053  
                        i1l2512 003D                          i1l2504 002C                          u201_21 0072  
                        i1l2290 02A2                          i1l2282 0284                          i1l2274 024F  
                        i1l2266 0239                          i1l2258 0229                          i1l2194 00FC  
                        i1l2178 00A4                          i1l2186 00B5                          i1l2098 006E  
                        i1l2338 00B2                          i1l2354 001B                          i1l2346 0000  
                        i1l2522 0056                          i1l2514 0040                          i1l2506 0030  
                        i1l2292 02A5                          i1l2284 028F                          i1l2276 0254  
                        i1l2268 023D                          i1l2196 00FF                          i1l2188 00B6  
                        i1l2356 0022                          i1l2348 0003                          i1l2540 0008  
                        i1l2700 0039                          i1l2516 0048                          i1l2508 0033  
                        i1l2524 0057                          i1l2294 02A9                          i1l2286 0295  
                        i1l2278 0262                          i1l2198 0103                          i1l2358 0027  
                        i1l2470 005C                          i1l2550 002E                          i1l2542 000B  
                        i1l2710 0060                          i1l2702 0040                          i1l2518 004B  
                        i1l2526 0075                          i1l2296 02AB                          i1l2288 029D  
                        u210_20 0125                          u202_20 00D2                          i1l2480 00BB  
                        i1l2472 0097                          i1l2560 004A                          i1l2552 0034  
                        i1l2544 0012                          i1l2536 0000                          i1l2712 0068  
                        i1l2704 0045                          i1l2720 000E                          u210_21 0124  
                        u202_21 00D1                          i1l2298 02B6                          i1l2482 00C5  
                        i1l2474 0098                          i1l2466 0000                          i1l2554 0036  
                        i1l2546 0017                          i1l2538 0002                          i1l2714 006F  
                        i1l2706 0050                          i1l2490 000E                          i1l2730 0054  
                        i1l2722 0012                          i1l2476 00A6                          i1l2468 0021  
                        i1l2556 003D                          i1l2548 001D                          i1l2740 0016  
                        i1l2716 007E                          i1l2708 005A                          i1l2492 0012  
                        i1l2484 0000                          i1l2732 005C                          i1l2724 0020  
                        u202_25 00CE                          i1l2478 00B6                          i1l2558 0045  
                        i1l2742 001C                          i1l2494 0016                          i1l2486 0001  
                        i1l2734 006A                          i1l2726 0021                          i1l2718 0000  
                        u203_20 00DD                          i1l2744 0037                          i1l2736 0000  
                        i1l2496 0019                          i1l2488 0005                          i1l2728 004E  
                        u211_21 0138                          u203_21 00DB                          u211_22 013F  
                        i1l2746 003C                          i1l2738 0015                          i1l2690 0000  
                        i1l2498 001F                          i1l2770 0015                          i1l2762 0000  
                        u211_23 0146                          i1l2748 0071                          i1l2692 0014  
                        i1l2764 0004                          i1l2772 0017                          i1l2694 001E  
                        i1l2862 005F                          i1l2774 001D                          i1l2766 0009  
                        u220_20 0201                          u212_20 014A                          u204_20 00DE  
                        i1l2696 0028                          i1l2864 006A                          i1l2776 0022  
                        i1l2768 000F                          u220_21 0200                          u212_21 0149  
                        i1l2698 002E                          u221_20 0206                          u213_20 014E  
                        u205_20 00F3                          u221_21 0205                          u213_21 014D  
                        u205_21 00F2                          u230_20 0254                          u214_20 015E  
                        u206_20 0103                          u230_21 0253                          u214_21 015D  
                        u206_21 0102                          u222_25 0213                          u231_20 0266  
                        u223_20 021E                          u231_21 0265                          u223_21 021D  
                        u215_25 0162                          u207_25 0107                          u232_20 0275  
                        u224_20 0223                          u216_20 0185                          u208_20 011B  
                        u240_20 000A                          u224_21 0222                          u216_21 0184  
                        u208_21 011A                          u240_21 0009                          u216_23 0181  
                        u232_25 0270                          u233_20 0284                          u225_20 022E  
                        u217_20 01AB                          u209_20 0120                          u241_20 002A  
                        u233_21 0283                          u225_21 022D                          u217_21 01AC  
                        u209_21 011F                          u241_21 0029                          u217_22 01B1  
                        u217_23 01B2                          u234_20 028F                          u226_20 0236  
                        u218_20 01BD                          u250_20 00A2                          u234_21 028E  
                        u226_21 0235                          u218_21 01BE                          u218_22 01C3  
                        u218_23 01C4                          u250_25 009D                          u242_25 003E  
                        u235_20 0294                          u227_20 023D                          u219_20 01DB  
                        u251_20 00B2                          u243_20 004D                          u235_21 0293  
                        u227_21 023C                          u219_21 01DA                          u251_21 00B1  
                        u243_21 004C                          u236_20 02A2                          u228_20 0243  
                        u252_20 00B6                          u236_21 02A1                          u228_21 0242  
                        u252_21 00B5                          u244_25 0062                          u237_20 02A9  
                        u229_20 024A                          u245_20 0070                          u253_20 0007  
                        u237_21 02A8                          u229_21 0249                          u245_21 006F  
                        u253_21 0006                          u238_20 02BA                          u238_21 02B9  
                        u190_25 007B                          u246_25 0076                          u254_25 000E  
                        u270_25 0037                          u191_20 0089                          u183_20 0015  
                        u247_20 0082                          u239_20 0006                          u263_20 00A6  
                        u271_20 0043                          u191_21 0088                          u183_21 0014  
                        u247_21 0081                          u239_21 0005                          u263_21 00A5  
                        u271_21 0042                          u255_25 0015                          u263_25 00A2  
                        u192_20 0090                          u184_20 002D                          u248_20 0088  
                        u256_20 0021                          u264_20 00B6                          u280_20 0050  
                        u192_21 008F                          u248_21 0087                          u256_21 0020  
                        u264_21 00B5                          u280_21 004F                          u184_25 0028  
                        u264_25 00B2                          u280_25 004C                          u193_20 0011  
                        u185_20 0043                          u249_20 008D                          u265_20 0008  
                        u281_20 005A                          u193_21 0010                          u185_21 0042  
                        u249_21 008C                          u265_21 0007                          u281_21 0059  
                        u281_25 0056                          u194_20 0018                          u186_20 004A  
                        u290_20 0071                          u282_20 0060                          u194_21 0017  
                        u186_21 0049                          u290_21 0070                          u282_21 005F  
                        u266_25 000C                          u195_20 001D                          u267_20 001B  
                        u283_20 0068                          u195_21 001C                          u267_21 001A  
                        u283_21 0067                          u187_25 0056                          u196_20 003D  
                        u188_20 0066                          u276_20 001E                          u284_20 001F  
                        u292_20 0004                          u196_21 003C                          u188_21 0065  
                        u276_21 001D                          u284_21 001E                          u292_21 0003  
                        u268_25 001E                          u276_25 001A                          u284_25 001B  
                        u197_20 0049                          u189_20 006E                          u269_20 002E  
                        u277_20 0028                          u285_20 003B                          u293_20 000F  
                        u197_21 0048                          u189_21 006D                          u269_21 002D  
                        u277_21 0027                          u293_21 000E                          u269_25 002A  
                        u277_25 0024                          u285_25 0036                          u198_20 0050  
                        u278_20 002E                          u286_20 0069                          u294_20 001D  
                        u198_21 004F                          u278_21 002D                          u286_21 0068  
                        u294_21 001C                          u286_25 0065                          u199_20 0055  
                        u287_20 0014                          u279_20 0039                          u199_21 0054  
                        u287_21 0013                          u279_21 0038                          u287_25 0010  
                        u288_20 001C                          u288_21 001B                          u296_27 000C  
                        u289_20 0036                          u289_21 0035                          u289_25 0032  
                        u297_27 0050                          _SSPCON 0014                          _SSPBUF 0013  
              __end_of___xxtofl 00C2                  __CFG_PWRTE$OFF 0000                       ??___fladd 0008  
                        ___wmul 0000                          __lastA 0008                          __lastB 0006  
               ??_update_volume 0021                       ??___fltol 001C                       ??___lwdiv 0004  
                     ??___lwmod 000C                          _config 0000                __end_of_init_adc 0017  
                        _volume 0004                 write_int@number 001D          ?_activateSelectedRelay 0000  
             __end_ofi1___lwdiv 004B                          saved_w 007E                __end_of_spiWrite 0010  
                     ??_sprintf 0012           ??_display_write_start 0000                    ___xxtofl@arg 000A  
                  ___xxtofl@exp 0009                    ___xxtofl@val 0000         __end_of__initialization 0018  
        is_deadzone@currentStep 0023            __end_of_display_init 004E                      ___fltol@f1 0018  
                __pcstackCOMMON 0000            __size_of_is_deadzone 00C6         __end_of_handle_potmeter 0082  
                     ?i1___wmul 0000                 ??_start_receive 0005                      __pbssBANK0 0000  
                    __pbssBANK1 0000           __end_of_handle_remote 007F           __end_of_handle_rotary 0081  
                    __pmaintext 0000                         ?___wmul 0000                      __pintentry 0000  
                       ?_config 0000                      ??i1___wmul 0004                  __selectedInput 0006  
                     ?___xxtofl 0000                    ?_write_space 0001                         _SSPSTAT 0094  
                    __stringtab 0000                       ?_init_adc 0000              __size_of_write_int 0036  
                    _lastVolume 0002                       ?_spiWrite 0000                         ___fladd 0000  
              ?_handle_potmeter 0000                         ___fltol 0000                 __size_of___wmul 002A  
                       ___lwdiv 0000                         ___lwmod 0000                 __size_of_config 006E  
                     _ANSELbits 0188                         __ptext1 0000                         __ptext2 0000  
                       __ptext3 0000                         __ptext4 0000                         __ptext5 0000  
                       __ptext6 0000                         __ptext7 0000                         __ptext8 0000  
                       __ptext9 0000                __selectedDisplay 0008                         _dpowers 0184  
             i1___lwdiv@divisor 0000                    __size_of_isr 0031               i1___lwdiv@counter 0007  
                    ??___xxtofl 0004                         _sprintf 0000           __size_of_display_init 004E  
          end_of_initialization 0018                      ??_init_adc 0000                      ??_spiWrite 0000  
                  __pstringtext 0000               handle_remote@data 0002               __end_of_step_size 0190  
             handle_remote@mask 0000           i1___wmul@multiplicand 0002         ??_activateSelectedRelay 0000  
                     _PORTBbits 0006                       _PORTCbits 0007                       _PORTDbits 0008  
          __inputUpdateRequired 000A      handle_potmeter@currentStep 0032                    _display_init 0000  
                   ___fladd@grs 0017               __end_of_write_int 0036                   ___xxtofl@sign 0008  
                     _TRISAbits 0085                       _TRISBbits 0086                       _TRISCbits 0087  
                     _TRISEbits 0089                       i1___lwdiv 0000                    write_int@num 001F  
                  write_space@i 0004                    write_space@x 0006                   ?_update_input 0000  
                __end_of___wmul 002A           __end_of_update_volume 005B                      _write_char 0000  
                    _write_font 0000                  __end_of_config 006E                      _write_text 0000  
   __end_of_display_write_start 000F             start_initialization 0000               __size_ofi1___wmul 0028  
                   __end_of_isr 0031                      ?i1___lwdiv 0000            __size_of_write_space 004C  
              write_space@count 0001                   ??_is_deadzone 0027                  ??_update_input 0021  
                      ??___wmul 0004                        ??_config 0001             update_volume@spaces 0021  
                     ___fladd@a 0004                       ___fladd@b 0000                   ??_init_remote 0000  
                     ___latbits 0002                   __pcstackBANK0 0000                   __pcstackBANK1 0000  
         __end_of_start_receive 0070               __size_of___xxtofl 00C2          __CFG_FOSC$INTRC_CLKOUT 0000  
                   sprintf@flag 0017                     sprintf@prec 0018               __size_of_init_adc 0017  
              ___lwdiv@dividend 0002                        ?___fladd 0000                        ?___fltol 0018  
                      ?___lwdiv 0000                        ?___lwmod 0008             __end_of_is_deadzone 00C6  
                   ?_write_char 0000               __size_of_spiWrite 0010                     ?_write_font 0006  
                   ?_write_text 0013          __size_of_handle_remote 007F          __size_of_handle_rotary 0081  
                     _lastInput 0000                ___lwdiv@quotient 0005                     ??i1___lwdiv 0004  
                      ?_sprintf 000E                 _is_deadzone$871 002D               interrupt_function 0000  
                ___wmul@product 0004                        _IOCBbits 0096                        _PIE1bits 008C  
                      _PIR1bits 000C  __size_of_activateSelectedRelay 0039                      _ADCON0bits 001F  
                   __stringbase 0012                      _ADCON1bits 009F               ___wmul@multiplier 0000  
 __end_of_activateSelectedRelay 0039                        i1___wmul 0000                       _step_size 018E  
                   write_char@c 0012        __size_of_handle_potmeter 0082                     write_font@x 000E  
                   write_text@c 0015            __end_of_update_input 0046                       _write_int 0000  
             _display_write_end 0000             __size_of_write_char 0062                   _handle_remote 0000  
           __size_of_write_font 0062             __size_of_write_text 003A                   _handle_rotary 0000  
            ?_display_write_end 0000                     _is_deadzone 0000             ??_display_write_end 0000  
              __size_of___fladd 02BC                  __lastAdcResult 0004                __size_of___fltol 009C  
              __size_of___lwdiv 004D                __size_of___lwmod 0043              __end_of__stringtab 0012  
                    _ANSELHbits 0189                      sprintf@val 0019                        ___xxtofl 0000  
                   _init_remote 0000*                ___lwdiv@divisor 0000                 ___lwdiv@counter 0007  
                      __ptext10 0000                        __ptext11 0000                        __ptext20 0000  
                      __ptext12 0000                        __ptext21 0000                        __ptext13 0000  
                      __ptext22 0000                        __ptext14 0000                        __ptext23 0000  
                      __ptext15 0000                        __ptext24 0000                        __ptext16 0000  
                      __ptext25 0000                        __ptext17 0000                        __ptext26 0000  
                      __ptext18 0000                        __ptext27 0000                        __ptext19 0000  
                      __ptext28 0000                        __ptext29 0000               __CFG_BOR4V$BOR21V 0000  
                    ?_write_int 001D       __end_of_display_write_end 000F                __size_of_sprintf 0136  
            i1___lwdiv@dividend 0002                  ?_handle_remote 0000                        _ir_input 0000  
                ?_handle_rotary 0000                        _init_adc 0000                   __size_of_main 002C  
             write_font@fontPos 0006        handle_potmeter@ad_result 0034                        _spiWrite 0000  
            i1___lwdiv@quotient 0005                      _INTCONbits 000B                   ??_write_space 0003  
             ??_handle_potmeter 0030                        intlevel1 0000*                      sprintf@ap 0016  
  __size_of_display_write_start 000F                       sprintf@sp 001B                ___lwmod@dividend 000A  
        __size_of_update_volume 005B                       stringcode 000A                      _OSCCONbits 008F  
                  ??_write_char 0010                    ??_write_font 0008                    ??_write_text 0015  
            handle_remote@found 0004                        sprintf@c 001C                        sprintf@f 000E  
         __size_of_update_input 0046                  start_receive@i 0000                 ___lwmod@divisor 0008  
               ___lwmod@counter 000D                        stringtab 0000                     ??_write_int 001F  
                 ___fladd@signs 0014                 ??_handle_remote 0000      __size_of_display_write_end 000F  
               ??_handle_rotary 0000             __end_of_write_space 004C                    ___fladd@aexp 0015  
                  ___fladd@bexp 0016            is_deadzone@adcResult 0025              __end_of_write_char 0062  
            __end_of_write_font 0062              __end_of_write_text 003A  
