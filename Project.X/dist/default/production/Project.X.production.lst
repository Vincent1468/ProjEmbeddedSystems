

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 10 12:37:22 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_handle_remote
  1182                           	FNCALL	_main,_update_input
  1183                           	FNCALL	_main,_update_volume
  1184                           	FNCALL	_update_volume,_display_write_end
  1185                           	FNCALL	_update_volume,_display_write_start
  1186                           	FNCALL	_update_volume,_write_int
  1187                           	FNCALL	_update_volume,_write_space
  1188                           	FNCALL	_update_volume,_write_text
  1189                           	FNCALL	_update_input,_display_write_end
  1190                           	FNCALL	_update_input,_display_write_start
  1191                           	FNCALL	_update_input,_write_int
  1192                           	FNCALL	_update_input,_write_space
  1193                           	FNCALL	_update_input,_write_text
  1194                           	FNCALL	_write_space,_spiWrite
  1195                           	FNCALL	_write_int,_sprintf
  1196                           	FNCALL	_write_int,_write_char
  1197                           	FNCALL	_write_int,_write_text
  1198                           	FNCALL	_write_text,_write_char
  1199                           	FNCALL	_write_char,_write_font
  1200                           	FNCALL	_write_font,___wmul
  1201                           	FNCALL	_write_font,_spiWrite
  1202                           	FNCALL	_sprintf,___lwdiv
  1203                           	FNCALL	_sprintf,___lwmod
  1204                           	FNCALL	_config,_display_init
  1205                           	FNCALL	_config,_init_adc
  1206                           	FNCALL	_config,_init_remote
  1207                           	FNCALL	_display_init,_spiWrite
  1208                           	FNROOT	_main
  1209                           	FNCALL	_isr,_handle_potmeter
  1210                           	FNCALL	_isr,_handle_rotary
  1211                           	FNCALL	_isr,_poll_receiver
  1212                           	FNCALL	_isr,_start_receive
  1213                           	FNCALL	_start_receive,_poll_receiver
  1214                           	FNCALL	_handle_potmeter,_is_deadzone
  1215                           	FNCALL	_handle_potmeter,i1___lwdiv
  1216                           	FNCALL	_is_deadzone,___fladd
  1217                           	FNCALL	_is_deadzone,___fltol
  1218                           	FNCALL	_is_deadzone,___xxtofl
  1219                           	FNCALL	_is_deadzone,i1___wmul
  1220                           	FNCALL	intlevel1,_isr
  1221                           	global	intlevel1
  1222                           	FNROOT	intlevel1
  1223                           	global	_font
  1224                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1225                           global __pstringtext
  1226                           __pstringtext:
  1227  0300                     stringtab:
  1228  0300                     	global    __stringtab
  1229                           __stringtab:
  1230  0300                     ;	String table - string pointers are 2 bytes each
  1231                           	btfsc	(btemp+1),7
  1232  0300  1BFF               	ljmp	stringcode
  1233  0301  2B0A               	bcf	status,7
  1234  0302  1383               	btfsc	(btemp+1),0
  1235  0303  187F               	bsf	status,7
  1236  0304  1783               	movf	indf,w
  1237  0305  0800               	incf fsr
  1238  0306  0A84               skipnz
  1239  0307  1903               incf btemp+1
  1240  0308  0AFF               	return
  1241  0309  0008               stringcode:
  1242  030A                     	movf btemp+1,w
  1243  030A  087F               andlw 7Fh
  1244  030B  397F               movwf	pclath
  1245  030C  008A               	movf	fsr,w
  1246  030D  0804               incf fsr
  1247  030E  0A84               skipnz
  1248  030F  1903               incf btemp+1
  1249  0310  0AFF               	movwf pc
  1250  0311  0082               	global __stringbase
  1251                           __stringbase:
  1252  0312                     	global    __end_of__stringtab
  1253                           __end_of__stringtab:
  1254  0312                     	file	"./Font.h"
  1255                           	line	4
  1256                           _font:
  1257  0312                     	retlw	03Eh
  1258  0312  343E               	retlw	0
  1259  0313  3400               
  1260                           	retlw	051h
  1261  0314  3451               	retlw	0
  1262  0315  3400               
  1263                           	retlw	049h
  1264  0316  3449               	retlw	0
  1265  0317  3400               
  1266                           	retlw	045h
  1267  0318  3445               	retlw	0
  1268  0319  3400               
  1269                           	retlw	03Eh
  1270  031A  343E               	retlw	0
  1271  031B  3400               
  1272                           	retlw	low(0)
  1273  031C  3400               	retlw	high(0)
  1274  031D  3400               
  1275                           	retlw	042h
  1276  031E  3442               	retlw	0
  1277  031F  3400               
  1278                           	retlw	07Fh
  1279  0320  347F               	retlw	0
  1280  0321  3400               
  1281                           	retlw	040h
  1282  0322  3440               	retlw	0
  1283  0323  3400               
  1284                           	retlw	low(0)
  1285  0324  3400               	retlw	high(0)
  1286  0325  3400               
  1287                           	retlw	042h
  1288  0326  3442               	retlw	0
  1289  0327  3400               
  1290                           	retlw	061h
  1291  0328  3461               	retlw	0
  1292  0329  3400               
  1293                           	retlw	051h
  1294  032A  3451               	retlw	0
  1295  032B  3400               
  1296                           	retlw	049h
  1297  032C  3449               	retlw	0
  1298  032D  3400               
  1299                           	retlw	046h
  1300  032E  3446               	retlw	0
  1301  032F  3400               
  1302                           	retlw	021h
  1303  0330  3421               	retlw	0
  1304  0331  3400               
  1305                           	retlw	041h
  1306  0332  3441               	retlw	0
  1307  0333  3400               
  1308                           	retlw	045h
  1309  0334  3445               	retlw	0
  1310  0335  3400               
  1311                           	retlw	04Bh
  1312  0336  344B               	retlw	0
  1313  0337  3400               
  1314                           	retlw	031h
  1315  0338  3431               	retlw	0
  1316  0339  3400               
  1317                           	retlw	018h
  1318  033A  3418               	retlw	0
  1319  033B  3400               
  1320                           	retlw	014h
  1321  033C  3414               	retlw	0
  1322  033D  3400               
  1323                           	retlw	012h
  1324  033E  3412               	retlw	0
  1325  033F  3400               
  1326                           	retlw	07Fh
  1327  0340  347F               	retlw	0
  1328  0341  3400               
  1329                           	retlw	010h
  1330  0342  3410               	retlw	0
  1331  0343  3400               
  1332                           	retlw	027h
  1333  0344  3427               	retlw	0
  1334  0345  3400               
  1335                           	retlw	045h
  1336  0346  3445               	retlw	0
  1337  0347  3400               
  1338                           	retlw	045h
  1339  0348  3445               	retlw	0
  1340  0349  3400               
  1341                           	retlw	045h
  1342  034A  3445               	retlw	0
  1343  034B  3400               
  1344                           	retlw	039h
  1345  034C  3439               	retlw	0
  1346  034D  3400               
  1347                           	retlw	03Ch
  1348  034E  343C               	retlw	0
  1349  034F  3400               
  1350                           	retlw	04Ah
  1351  0350  344A               	retlw	0
  1352  0351  3400               
  1353                           	retlw	049h
  1354  0352  3449               	retlw	0
  1355  0353  3400               
  1356                           	retlw	049h
  1357  0354  3449               	retlw	0
  1358  0355  3400               
  1359                           	retlw	030h
  1360  0356  3430               	retlw	0
  1361  0357  3400               
  1362                           	retlw	01h
  1363  0358  3401               	retlw	0
  1364  0359  3400               
  1365                           	retlw	071h
  1366  035A  3471               	retlw	0
  1367  035B  3400               
  1368                           	retlw	09h
  1369  035C  3409               	retlw	0
  1370  035D  3400               
  1371                           	retlw	05h
  1372  035E  3405               	retlw	0
  1373  035F  3400               
  1374                           	retlw	03h
  1375  0360  3403               	retlw	0
  1376  0361  3400               
  1377                           	retlw	036h
  1378  0362  3436               	retlw	0
  1379  0363  3400               
  1380                           	retlw	049h
  1381  0364  3449               	retlw	0
  1382  0365  3400               
  1383                           	retlw	049h
  1384  0366  3449               	retlw	0
  1385  0367  3400               
  1386                           	retlw	049h
  1387  0368  3449               	retlw	0
  1388  0369  3400               
  1389                           	retlw	036h
  1390  036A  3436               	retlw	0
  1391  036B  3400               
  1392                           	retlw	06h
  1393  036C  3406               	retlw	0
  1394  036D  3400               
  1395                           	retlw	049h
  1396  036E  3449               	retlw	0
  1397  036F  3400               
  1398                           	retlw	049h
  1399  0370  3449               	retlw	0
  1400  0371  3400               
  1401                           	retlw	029h
  1402  0372  3429               	retlw	0
  1403  0373  3400               
  1404                           	retlw	01Eh
  1405  0374  341E               	retlw	0
  1406  0375  3400               
  1407                           	retlw	07Eh
  1408  0376  347E               	retlw	0
  1409  0377  3400               
  1410                           	retlw	011h
  1411  0378  3411               	retlw	0
  1412  0379  3400               
  1413                           	retlw	011h
  1414  037A  3411               	retlw	0
  1415  037B  3400               
  1416                           	retlw	011h
  1417  037C  3411               	retlw	0
  1418  037D  3400               
  1419                           	retlw	07Eh
  1420  037E  347E               	retlw	0
  1421  037F  3400               
  1422                           	retlw	07Fh
  1423  0380  347F               	retlw	0
  1424  0381  3400               
  1425                           	retlw	049h
  1426  0382  3449               	retlw	0
  1427  0383  3400               
  1428                           	retlw	049h
  1429  0384  3449               	retlw	0
  1430  0385  3400               
  1431                           	retlw	049h
  1432  0386  3449               	retlw	0
  1433  0387  3400               
  1434                           	retlw	036h
  1435  0388  3436               	retlw	0
  1436  0389  3400               
  1437                           	retlw	03Eh
  1438  038A  343E               	retlw	0
  1439  038B  3400               
  1440                           	retlw	041h
  1441  038C  3441               	retlw	0
  1442  038D  3400               
  1443                           	retlw	041h
  1444  038E  3441               	retlw	0
  1445  038F  3400               
  1446                           	retlw	041h
  1447  0390  3441               	retlw	0
  1448  0391  3400               
  1449                           	retlw	022h
  1450  0392  3422               	retlw	0
  1451  0393  3400               
  1452                           	retlw	07Fh
  1453  0394  347F               	retlw	0
  1454  0395  3400               
  1455                           	retlw	041h
  1456  0396  3441               	retlw	0
  1457  0397  3400               
  1458                           	retlw	041h
  1459  0398  3441               	retlw	0
  1460  0399  3400               
  1461                           	retlw	022h
  1462  039A  3422               	retlw	0
  1463  039B  3400               
  1464                           	retlw	01Ch
  1465  039C  341C               	retlw	0
  1466  039D  3400               
  1467                           	retlw	07Fh
  1468  039E  347F               	retlw	0
  1469  039F  3400               
  1470                           	retlw	049h
  1471  03A0  3449               	retlw	0
  1472  03A1  3400               
  1473                           	retlw	049h
  1474  03A2  3449               	retlw	0
  1475  03A3  3400               
  1476                           	retlw	049h
  1477  03A4  3449               	retlw	0
  1478  03A5  3400               
  1479                           	retlw	041h
  1480  03A6  3441               	retlw	0
  1481  03A7  3400               
  1482                           	retlw	07Fh
  1483  03A8  347F               	retlw	0
  1484  03A9  3400               
  1485                           	retlw	09h
  1486  03AA  3409               	retlw	0
  1487  03AB  3400               
  1488                           	retlw	09h
  1489  03AC  3409               	retlw	0
  1490  03AD  3400               
  1491                           	retlw	01h
  1492  03AE  3401               	retlw	0
  1493  03AF  3400               
  1494                           	retlw	01h
  1495  03B0  3401               	retlw	0
  1496  03B1  3400               
  1497                           	retlw	03Eh
  1498  03B2  343E               	retlw	0
  1499  03B3  3400               
  1500                           	retlw	041h
  1501  03B4  3441               	retlw	0
  1502  03B5  3400               
  1503                           	retlw	041h
  1504  03B6  3441               	retlw	0
  1505  03B7  3400               
  1506                           	retlw	051h
  1507  03B8  3451               	retlw	0
  1508  03B9  3400               
  1509                           	retlw	032h
  1510  03BA  3432               	retlw	0
  1511  03BB  3400               
  1512                           	retlw	07Fh
  1513  03BC  347F               	retlw	0
  1514  03BD  3400               
  1515                           	retlw	08h
  1516  03BE  3408               	retlw	0
  1517  03BF  3400               
  1518                           	retlw	08h
  1519  03C0  3408               	retlw	0
  1520  03C1  3400               
  1521                           	retlw	08h
  1522  03C2  3408               	retlw	0
  1523  03C3  3400               
  1524                           	retlw	07Fh
  1525  03C4  347F               	retlw	0
  1526  03C5  3400               
  1527                           	retlw	low(0)
  1528  03C6  3400               	retlw	high(0)
  1529  03C7  3400               
  1530                           	retlw	041h
  1531  03C8  3441               	retlw	0
  1532  03C9  3400               
  1533                           	retlw	07Fh
  1534  03CA  347F               	retlw	0
  1535  03CB  3400               
  1536                           	retlw	041h
  1537  03CC  3441               	retlw	0
  1538  03CD  3400               
  1539                           	retlw	low(0)
  1540  03CE  3400               	retlw	high(0)
  1541  03CF  3400               
  1542                           	retlw	020h
  1543  03D0  3420               	retlw	0
  1544  03D1  3400               
  1545                           	retlw	040h
  1546  03D2  3440               	retlw	0
  1547  03D3  3400               
  1548                           	retlw	041h
  1549  03D4  3441               	retlw	0
  1550  03D5  3400               
  1551                           	retlw	03Fh
  1552  03D6  343F               	retlw	0
  1553  03D7  3400               
  1554                           	retlw	01h
  1555  03D8  3401               	retlw	0
  1556  03D9  3400               
  1557                           	retlw	07Fh
  1558  03DA  347F               	retlw	0
  1559  03DB  3400               
  1560                           	retlw	08h
  1561  03DC  3408               	retlw	0
  1562  03DD  3400               
  1563                           	retlw	014h
  1564  03DE  3414               	retlw	0
  1565  03DF  3400               
  1566                           	retlw	022h
  1567  03E0  3422               	retlw	0
  1568  03E1  3400               
  1569                           	retlw	041h
  1570  03E2  3441               	retlw	0
  1571  03E3  3400               
  1572                           	retlw	07Fh
  1573  03E4  347F               	retlw	0
  1574  03E5  3400               
  1575                           	retlw	040h
  1576  03E6  3440               	retlw	0
  1577  03E7  3400               
  1578                           	retlw	040h
  1579  03E8  3440               	retlw	0
  1580  03E9  3400               
  1581                           	retlw	040h
  1582  03EA  3440               	retlw	0
  1583  03EB  3400               
  1584                           	retlw	040h
  1585  03EC  3440               	retlw	0
  1586  03ED  3400               
  1587                           	retlw	07Fh
  1588  03EE  347F               	retlw	0
  1589  03EF  3400               
  1590                           	retlw	02h
  1591  03F0  3402               	retlw	0
  1592  03F1  3400               
  1593                           	retlw	04h
  1594  03F2  3404               	retlw	0
  1595  03F3  3400               
  1596                           	retlw	02h
  1597  03F4  3402               	retlw	0
  1598  03F5  3400               
  1599                           	retlw	07Fh
  1600  03F6  347F               	retlw	0
  1601  03F7  3400               
  1602                           	retlw	07Fh
  1603  03F8  347F               	retlw	0
  1604  03F9  3400               
  1605                           	retlw	04h
  1606  03FA  3404               	retlw	0
  1607  03FB  3400               
  1608                           	retlw	08h
  1609  03FC  3408               	retlw	0
  1610  03FD  3400               
  1611                           	retlw	010h
  1612  03FE  3410               	retlw	0
  1613  03FF  3400               
  1614                           	retlw	07Fh
  1615  0400  347F               	retlw	0
  1616  0401  3400               
  1617                           	retlw	03Eh
  1618  0402  343E               	retlw	0
  1619  0403  3400               
  1620                           	retlw	041h
  1621  0404  3441               	retlw	0
  1622  0405  3400               
  1623                           	retlw	041h
  1624  0406  3441               	retlw	0
  1625  0407  3400               
  1626                           	retlw	041h
  1627  0408  3441               	retlw	0
  1628  0409  3400               
  1629                           	retlw	03Eh
  1630  040A  343E               	retlw	0
  1631  040B  3400               
  1632                           	retlw	07Fh
  1633  040C  347F               	retlw	0
  1634  040D  3400               
  1635                           	retlw	09h
  1636  040E  3409               	retlw	0
  1637  040F  3400               
  1638                           	retlw	09h
  1639  0410  3409               	retlw	0
  1640  0411  3400               
  1641                           	retlw	09h
  1642  0412  3409               	retlw	0
  1643  0413  3400               
  1644                           	retlw	06h
  1645  0414  3406               	retlw	0
  1646  0415  3400               
  1647                           	retlw	03Eh
  1648  0416  343E               	retlw	0
  1649  0417  3400               
  1650                           	retlw	041h
  1651  0418  3441               	retlw	0
  1652  0419  3400               
  1653                           	retlw	051h
  1654  041A  3451               	retlw	0
  1655  041B  3400               
  1656                           	retlw	021h
  1657  041C  3421               	retlw	0
  1658  041D  3400               
  1659                           	retlw	05Eh
  1660  041E  345E               	retlw	0
  1661  041F  3400               
  1662                           	retlw	07Fh
  1663  0420  347F               	retlw	0
  1664  0421  3400               
  1665                           	retlw	09h
  1666  0422  3409               	retlw	0
  1667  0423  3400               
  1668                           	retlw	019h
  1669  0424  3419               	retlw	0
  1670  0425  3400               
  1671                           	retlw	029h
  1672  0426  3429               	retlw	0
  1673  0427  3400               
  1674                           	retlw	046h
  1675  0428  3446               	retlw	0
  1676  0429  3400               
  1677                           	retlw	046h
  1678  042A  3446               	retlw	0
  1679  042B  3400               
  1680                           	retlw	049h
  1681  042C  3449               	retlw	0
  1682  042D  3400               
  1683                           	retlw	049h
  1684  042E  3449               	retlw	0
  1685  042F  3400               
  1686                           	retlw	049h
  1687  0430  3449               	retlw	0
  1688  0431  3400               
  1689                           	retlw	031h
  1690  0432  3431               	retlw	0
  1691  0433  3400               
  1692                           	retlw	01h
  1693  0434  3401               	retlw	0
  1694  0435  3400               
  1695                           	retlw	01h
  1696  0436  3401               	retlw	0
  1697  0437  3400               
  1698                           	retlw	07Fh
  1699  0438  347F               	retlw	0
  1700  0439  3400               
  1701                           	retlw	01h
  1702  043A  3401               	retlw	0
  1703  043B  3400               
  1704                           	retlw	01h
  1705  043C  3401               	retlw	0
  1706  043D  3400               
  1707                           	retlw	03Fh
  1708  043E  343F               	retlw	0
  1709  043F  3400               
  1710                           	retlw	040h
  1711  0440  3440               	retlw	0
  1712  0441  3400               
  1713                           	retlw	040h
  1714  0442  3440               	retlw	0
  1715  0443  3400               
  1716                           	retlw	040h
  1717  0444  3440               	retlw	0
  1718  0445  3400               
  1719                           	retlw	03Fh
  1720  0446  343F               	retlw	0
  1721  0447  3400               
  1722                           	retlw	01Fh
  1723  0448  341F               	retlw	0
  1724  0449  3400               
  1725                           	retlw	020h
  1726  044A  3420               	retlw	0
  1727  044B  3400               
  1728                           	retlw	040h
  1729  044C  3440               	retlw	0
  1730  044D  3400               
  1731                           	retlw	020h
  1732  044E  3420               	retlw	0
  1733  044F  3400               
  1734                           	retlw	01Fh
  1735  0450  341F               	retlw	0
  1736  0451  3400               
  1737                           	retlw	07Fh
  1738  0452  347F               	retlw	0
  1739  0453  3400               
  1740                           	retlw	020h
  1741  0454  3420               	retlw	0
  1742  0455  3400               
  1743                           	retlw	018h
  1744  0456  3418               	retlw	0
  1745  0457  3400               
  1746                           	retlw	020h
  1747  0458  3420               	retlw	0
  1748  0459  3400               
  1749                           	retlw	07Fh
  1750  045A  347F               	retlw	0
  1751  045B  3400               
  1752                           	retlw	063h
  1753  045C  3463               	retlw	0
  1754  045D  3400               
  1755                           	retlw	014h
  1756  045E  3414               	retlw	0
  1757  045F  3400               
  1758                           	retlw	08h
  1759  0460  3408               	retlw	0
  1760  0461  3400               
  1761                           	retlw	014h
  1762  0462  3414               	retlw	0
  1763  0463  3400               
  1764                           	retlw	063h
  1765  0464  3463               	retlw	0
  1766  0465  3400               
  1767                           	retlw	03h
  1768  0466  3403               	retlw	0
  1769  0467  3400               
  1770                           	retlw	04h
  1771  0468  3404               	retlw	0
  1772  0469  3400               
  1773                           	retlw	078h
  1774  046A  3478               	retlw	0
  1775  046B  3400               
  1776                           	retlw	04h
  1777  046C  3404               	retlw	0
  1778  046D  3400               
  1779                           	retlw	03h
  1780  046E  3403               	retlw	0
  1781  046F  3400               
  1782                           	retlw	061h
  1783  0470  3461               	retlw	0
  1784  0471  3400               
  1785                           	retlw	051h
  1786  0472  3451               	retlw	0
  1787  0473  3400               
  1788                           	retlw	049h
  1789  0474  3449               	retlw	0
  1790  0475  3400               
  1791                           	retlw	045h
  1792  0476  3445               	retlw	0
  1793  0477  3400               
  1794                           	retlw	043h
  1795  0478  3443               	retlw	0
  1796  0479  3400               
  1797                           	retlw	low(0)
  1798  047A  3400               	retlw	high(0)
  1799  047B  3400               
  1800                           	retlw	low(0)
  1801  047C  3400               	retlw	high(0)
  1802  047D  3400               
  1803                           	retlw	low(0)
  1804  047E  3400               	retlw	high(0)
  1805  047F  3400               
  1806                           	retlw	low(0)
  1807  0480  3400               	retlw	high(0)
  1808  0481  3400               
  1809                           	retlw	low(0)
  1810  0482  3400               	retlw	high(0)
  1811  0483  3400               
  1812                           	global __end_of_font
  1813                           __end_of_font:
  1814  0484                     	global	_dpowers
  1815                           psect	stringtext
  1816                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  1817                           	line	358
  1818                           _dpowers:
  1819  0484                     	retlw	01h
  1820  0484  3401               	retlw	0
  1821  0485  3400               
  1822                           	retlw	0Ah
  1823  0486  340A               	retlw	0
  1824  0487  3400               
  1825                           	retlw	064h
  1826  0488  3464               	retlw	0
  1827  0489  3400               
  1828                           	retlw	0E8h
  1829  048A  34E8               	retlw	03h
  1830  048B  3403               
  1831                           	retlw	010h
  1832  048C  3410               	retlw	027h
  1833  048D  3427               
  1834                           	global __end_of_dpowers
  1835                           __end_of_dpowers:
  1836  048E                     	global	_step_size
  1837                           psect	stringtext
  1838                           	file	"./Volume.h"
  1839                           	line	5
  1840                           _step_size:
  1841  048E                     	retlw	019h
  1842  048E  3419               	retlw	0
  1843  048F  3400               
  1844                           	global __end_of_step_size
  1845                           __end_of_step_size:
  1846  0490                     	global	_font
  1847                           	global	_dpowers
  1848                           	global	_step_size
  1849                           	global	__lastB
  1850                           	global	__lastA
  1851                           	global	_receive_count
  1852                           	global	_ir_input
  1853                           	global	_lastInput
  1854                           	global	_lastVolume
  1855                           	global	_volume
  1856                           	global	__selectedInput
  1857                           	global	__selectedDisplay
  1858                           	global	__inputUpdateRequired
  1859                           	global	_T2CONbits
  1860                           _T2CONbits	set	0x12
  1861  0012                     	global	_ADRESH
  1862                           _ADRESH	set	0x1E
  1863  001E                     	global	_PORTC
  1864                           _PORTC	set	0x7
  1865  0007                     	global	_PORTA
  1866                           _PORTA	set	0x5
  1867  0005                     	global	_SSPBUF
  1868                           _SSPBUF	set	0x13
  1869  0013                     	global	_PORTCbits
  1870                           _PORTCbits	set	0x7
  1871  0007                     	global	_PORTDbits
  1872                           _PORTDbits	set	0x8
  1873  0008                     	global	_SSPCON
  1874                           _SSPCON	set	0x14
  1875  0014                     	global	_PIR1bits
  1876                           _PIR1bits	set	0xC
  1877  000C                     	global	_PORTBbits
  1878                           _PORTBbits	set	0x6
  1879  0006                     	global	_INTCONbits
  1880                           _INTCONbits	set	0xB
  1881  000B                     	global	_ADCON0bits
  1882                           _ADCON0bits	set	0x1F
  1883  001F                     	global	_ADRESL
  1884                           _ADRESL	set	0x9E
  1885  009E                     	global	_PIE1bits
  1886                           _PIE1bits	set	0x8C
  1887  008C                     	global	_ADCON1bits
  1888                           _ADCON1bits	set	0x9F
  1889  009F                     	global	_IOCBbits
  1890                           _IOCBbits	set	0x96
  1891  0096                     	global	_TRISCbits
  1892                           _TRISCbits	set	0x87
  1893  0087                     	global	_TRISEbits
  1894                           _TRISEbits	set	0x89
  1895  0089                     	global	_TRISBbits
  1896                           _TRISBbits	set	0x86
  1897  0086                     	global	_TRISAbits
  1898                           _TRISAbits	set	0x85
  1899  0085                     	global	_OSCCONbits
  1900                           _OSCCONbits	set	0x8F
  1901  008F                     	global	_SSPSTATbits
  1902                           _SSPSTATbits	set	0x94
  1903  0094                     	global	_TRISC
  1904                           _TRISC	set	0x87
  1905  0087                     	global	_TRISD
  1906                           _TRISD	set	0x88
  1907  0088                     	global	_SSPSTAT
  1908                           _SSPSTAT	set	0x94
  1909  0094                     	global	_PR2
  1910                           _PR2	set	0x92
  1911  0092                     	global	_ANSELbits
  1912                           _ANSELbits	set	0x188
  1913  0188                     	global	_ANSELHbits
  1914                           _ANSELHbits	set	0x189
  1915  0189                     	
  1916                           STR_1:	
  1917  0490                     	retlw	73	;'I'
  1918  0490  3449               	retlw	78	;'N'
  1919  0491  344E               	retlw	80	;'P'
  1920  0492  3450               	retlw	85	;'U'
  1921  0493  3455               	retlw	84	;'T'
  1922  0494  3454               	retlw	0
  1923  0495  3400               psect	stringtext
  1924                           	
  1925                           STR_2:	
  1926  0496                     	retlw	86	;'V'
  1927  0496  3456               	retlw	79	;'O'
  1928  0497  344F               	retlw	76	;'L'
  1929  0498  344C               	retlw	0
  1930  0499  3400               psect	stringtext
  1931                           	
  1932                           STR_3:	
  1933  049A                     	retlw	37	;'%'
  1934  049A  3425               	retlw	100	;'d'
  1935  049B  3464               	retlw	0
  1936  049C  3400               psect	stringtext
  1937                           ; #config settings
  1938                           global __CFG_FOSC$INTRC_CLKOUT
  1939                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1940  0000                     global __CFG_WDTE$OFF
  1941                           __CFG_WDTE$OFF equ 0x0
  1942  0000                     global __CFG_PWRTE$OFF
  1943                           __CFG_PWRTE$OFF equ 0x0
  1944  0000                     global __CFG_MCLRE$OFF
  1945                           __CFG_MCLRE$OFF equ 0x0
  1946  0000                     global __CFG_CP$OFF
  1947                           __CFG_CP$OFF equ 0x0
  1948  0000                     global __CFG_CPD$OFF
  1949                           __CFG_CPD$OFF equ 0x0
  1950  0000                     global __CFG_BOREN$ON
  1951                           __CFG_BOREN$ON equ 0x0
  1952  0000                     global __CFG_IESO$OFF
  1953                           __CFG_IESO$OFF equ 0x0
  1954  0000                     global __CFG_FCMEN$OFF
  1955                           __CFG_FCMEN$OFF equ 0x0
  1956  0000                     global __CFG_LVP$OFF
  1957                           __CFG_LVP$OFF equ 0x0
  1958  0000                     global __CFG_BOR4V$BOR21V
  1959                           __CFG_BOR4V$BOR21V equ 0x0
  1960  0000                     global __CFG_WRT$OFF
  1961                           __CFG_WRT$OFF equ 0x0
  1962  0000                     	file	"/tmp/xcXWaAM8D"
  1963                           	line	#
  1964                           psect cinit,class=CODE,delta=2
  1965                           global start_initialization
  1966                           start_initialization:
  1967  0015                     
  1968                           global __initialization
  1969                           __initialization:
  1970  0015                     psect	bssBANK0,class=BANK0,space=1,noexec
  1971                           global __pbssBANK0
  1972                           __pbssBANK0:
  1973  005A                     __lastB:
  1974  005A                            ds      2
  1975  005A                     
  1976                           __lastA:
  1977  005C                            ds      2
  1978  005C                     
  1979                           _receive_count:
  1980  005E                            ds      1
  1981  005E                     
  1982                           _ignore_poll:
  1983  005F                            ds      1
  1984  005F                     
  1985                           psect	bssBANK1,class=BANK1,space=1,noexec
  1986                           global __pbssBANK1
  1987                           __pbssBANK1:
  1988  00C5                     _ir_input:
  1989  00C5                            ds      4
  1990  00C5                     
  1991                           _lastInput:
  1992  00C9                            ds      2
  1993  00C9                     
  1994                           _lastVolume:
  1995  00CB                            ds      2
  1996  00CB                     
  1997                           _volume:
  1998  00CD                            ds      2
  1999  00CD                     
  2000                           __selectedInput:
  2001  00CF                            ds      2
  2002  00CF                     
  2003                           __selectedDisplay:
  2004  00D1                            ds      1
  2005  00D1                     
  2006                           __inputUpdateRequired:
  2007  00D2                            ds      1
  2008  00D2                     
  2009                           	file	"/tmp/xcXWaAM8D"
  2010                           	line	#
  2011                           ; Clear objects allocated to BANK0
  2012                           psect cinit,class=CODE,delta=2,merge=1
  2013                           	bcf	status, 5	;RP0=0, select bank0
  2014  0015  1283               	bcf	status, 6	;RP1=0, select bank0
  2015  0016  1303               	clrf	((__pbssBANK0)+0)&07Fh
  2016  0017  01DA               	clrf	((__pbssBANK0)+1)&07Fh
  2017  0018  01DB               	clrf	((__pbssBANK0)+2)&07Fh
  2018  0019  01DC               	clrf	((__pbssBANK0)+3)&07Fh
  2019  001A  01DD               	clrf	((__pbssBANK0)+4)&07Fh
  2020  001B  01DE               	clrf	((__pbssBANK0)+5)&07Fh
  2021  001C  01DF               ; Clear objects allocated to BANK1
  2022                           psect cinit,class=CODE,delta=2,merge=1
  2023                           	bsf	status, 5	;RP0=1, select bank1
  2024  001D  1683               	bcf	status, 6	;RP1=0, select bank1
  2025  001E  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2026  001F  01C5               	clrf	((__pbssBANK1)+1)&07Fh
  2027  0020  01C6               	clrf	((__pbssBANK1)+2)&07Fh
  2028  0021  01C7               	clrf	((__pbssBANK1)+3)&07Fh
  2029  0022  01C8               	clrf	((__pbssBANK1)+4)&07Fh
  2030  0023  01C9               	clrf	((__pbssBANK1)+5)&07Fh
  2031  0024  01CA               	clrf	((__pbssBANK1)+6)&07Fh
  2032  0025  01CB               	clrf	((__pbssBANK1)+7)&07Fh
  2033  0026  01CC               	clrf	((__pbssBANK1)+8)&07Fh
  2034  0027  01CD               	clrf	((__pbssBANK1)+9)&07Fh
  2035  0028  01CE               	clrf	((__pbssBANK1)+10)&07Fh
  2036  0029  01CF               	clrf	((__pbssBANK1)+11)&07Fh
  2037  002A  01D0               	clrf	((__pbssBANK1)+12)&07Fh
  2038  002B  01D1               	clrf	((__pbssBANK1)+13)&07Fh
  2039  002C  01D2               psect cinit,class=CODE,delta=2,merge=1
  2040                           global end_of_initialization,__end_of__initialization
  2041                           
  2042                           ;End of C runtime variable initialization code
  2043                           
  2044                           end_of_initialization:
  2045  002D                     __end_of__initialization:
  2046  002D                     clrf status
  2047  002D  0183               ljmp _main	;jump to C main() function
  2048  002E  120A  158A  29C9   psect	cstackBANK1,class=BANK1,space=1,noexec
  2049                           global __pcstackBANK1
  2050                           __pcstackBANK1:
  2051  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2052  00A0                     ??_handle_remote:	; 1 bytes @ 0x0
  2053  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2054  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2055  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2056  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2057  00A0                     ??_init_remote:	; 1 bytes @ 0x0
  2058  00A0                     	global	?___wmul
  2059                           ?___wmul:	; 2 bytes @ 0x0
  2060  00A0                     	global	?___lwdiv
  2061                           ?___lwdiv:	; 2 bytes @ 0x0
  2062  00A0                     	global	spiWrite@data
  2063                           spiWrite@data:	; 1 bytes @ 0x0
  2064  00A0                     	global	handle_remote@mask
  2065                           handle_remote@mask:	; 2 bytes @ 0x0
  2066  00A0                     	global	___wmul@multiplier
  2067                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2068  00A0                     	global	___lwdiv@divisor
  2069                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2070  00A0                     	ds	1
  2071  00A0                     ??_config:	; 1 bytes @ 0x1
  2072  00A1                     ?_write_space:	; 1 bytes @ 0x1
  2073  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2074  00A1                     	global	write_space@count
  2075                           write_space@count:	; 2 bytes @ 0x1
  2076  00A1                     	ds	1
  2077  00A1                     	global	handle_remote@data
  2078                           handle_remote@data:	; 2 bytes @ 0x2
  2079  00A2                     	global	___wmul@multiplicand
  2080                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2081  00A2                     	global	___lwdiv@dividend
  2082                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2083  00A2                     	ds	1
  2084  00A2                     ??_write_space:	; 1 bytes @ 0x3
  2085  00A3                     	ds	1
  2086  00A3                     ??___wmul:	; 1 bytes @ 0x4
  2087  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2088  00A4                     	global	handle_remote@found
  2089                           handle_remote@found:	; 1 bytes @ 0x4
  2090  00A4                     	global	write_space@i
  2091                           write_space@i:	; 2 bytes @ 0x4
  2092  00A4                     	global	___wmul@product
  2093                           ___wmul@product:	; 2 bytes @ 0x4
  2094  00A4                     	ds	1
  2095  00A4                     	global	___lwdiv@quotient
  2096                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2097  00A5                     	ds	1
  2098  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2099  00A6                     	global	write_space@x
  2100                           write_space@x:	; 2 bytes @ 0x6
  2101  00A6                     	global	write_font@fontPos
  2102                           write_font@fontPos:	; 2 bytes @ 0x6
  2103  00A6                     	ds	1
  2104  00A6                     	global	___lwdiv@counter
  2105                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2106  00A7                     	ds	1
  2107  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2108  00A8                     	global	?___lwmod
  2109                           ?___lwmod:	; 2 bytes @ 0x8
  2110  00A8                     	global	___lwmod@divisor
  2111                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2112  00A8                     	ds	2
  2113  00A8                     	global	___lwmod@dividend
  2114                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2115  00AA                     	ds	2
  2116  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2117  00AC                     	ds	1
  2118  00AC                     	global	___lwmod@counter
  2119                           ___lwmod@counter:	; 1 bytes @ 0xD
  2120  00AD                     	ds	1
  2121  00AD                     	global	?_sprintf
  2122                           ?_sprintf:	; 2 bytes @ 0xE
  2123  00AE                     	global	write_font@x
  2124                           write_font@x:	; 2 bytes @ 0xE
  2125  00AE                     	global	sprintf@f
  2126                           sprintf@f:	; 2 bytes @ 0xE
  2127  00AE                     	ds	2
  2128  00AE                     ??_write_char:	; 1 bytes @ 0x10
  2129  00B0                     	global	write_char@pos
  2130                           write_char@pos:	; 2 bytes @ 0x10
  2131  00B0                     	ds	2
  2132  00B0                     ??_sprintf:	; 1 bytes @ 0x12
  2133  00B2                     	global	write_char@c
  2134                           write_char@c:	; 1 bytes @ 0x12
  2135  00B2                     	ds	1
  2136  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2137  00B3                     	global	write_text@text
  2138                           write_text@text:	; 2 bytes @ 0x13
  2139  00B3                     	ds	2
  2140  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2141  00B5                     	global	write_text@c
  2142                           write_text@c:	; 2 bytes @ 0x15
  2143  00B5                     	ds	1
  2144  00B5                     	global	sprintf@ap
  2145                           sprintf@ap:	; 1 bytes @ 0x16
  2146  00B6                     	ds	1
  2147  00B6                     	global	sprintf@flag
  2148                           sprintf@flag:	; 1 bytes @ 0x17
  2149  00B7                     	ds	1
  2150  00B7                     	global	sprintf@prec
  2151                           sprintf@prec:	; 1 bytes @ 0x18
  2152  00B8                     	ds	1
  2153  00B8                     	global	sprintf@val
  2154                           sprintf@val:	; 2 bytes @ 0x19
  2155  00B9                     	ds	2
  2156  00B9                     	global	sprintf@sp
  2157                           sprintf@sp:	; 1 bytes @ 0x1B
  2158  00BB                     	ds	1
  2159  00BB                     	global	sprintf@c
  2160                           sprintf@c:	; 1 bytes @ 0x1C
  2161  00BC                     	ds	1
  2162  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2163  00BD                     	global	write_int@number
  2164                           write_int@number:	; 2 bytes @ 0x1D
  2165  00BD                     	ds	2
  2166  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2167  00BF                     	global	write_int@num
  2168                           write_int@num:	; 2 bytes @ 0x1F
  2169  00BF                     	ds	2
  2170  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2171  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2172  00C1                     	global	update_volume@spaces
  2173                           update_volume@spaces:	; 2 bytes @ 0x21
  2174  00C1                     	ds	2
  2175  00C1                     ??_main:	; 1 bytes @ 0x23
  2176  00C3                     	ds	2
  2177  00C3                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2178                           global __pcstackCOMMON
  2179                           __pcstackCOMMON:
  2180  0070                     ?_config:	; 1 bytes @ 0x0
  2181  0070                     ?_update_volume:	; 1 bytes @ 0x0
  2182  0070                     ?_update_input:	; 1 bytes @ 0x0
  2183  0070                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2184  0070                     ?_handle_remote:	; 1 bytes @ 0x0
  2185  0070                     ?_handle_rotary:	; 1 bytes @ 0x0
  2186  0070                     ??_handle_rotary:	; 1 bytes @ 0x0
  2187  0070                     ?_start_receive:	; 1 bytes @ 0x0
  2188  0070                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2189  0070                     ?_poll_receiver:	; 1 bytes @ 0x0
  2190  0070                     ??_poll_receiver:	; 1 bytes @ 0x0
  2191  0070                     ?_spiWrite:	; 1 bytes @ 0x0
  2192  0070                     ?_display_write_start:	; 1 bytes @ 0x0
  2193  0070                     ?_display_write_end:	; 1 bytes @ 0x0
  2194  0070                     ?_write_char:	; 1 bytes @ 0x0
  2195  0070                     ?_init_adc:	; 1 bytes @ 0x0
  2196  0070                     ?_init_remote:	; 1 bytes @ 0x0
  2197  0070                     ?_main:	; 1 bytes @ 0x0
  2198  0070                     ?_isr:	; 1 bytes @ 0x0
  2199  0070                     ?_display_init:	; 1 bytes @ 0x0
  2200  0070                     	global	?i1___wmul
  2201                           ?i1___wmul:	; 2 bytes @ 0x0
  2202  0070                     	global	?i1___lwdiv
  2203                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2204  0070                     	global	?___xxtofl
  2205                           ?___xxtofl:	; 4 bytes @ 0x0
  2206  0070                     	global	i1___wmul@multiplier
  2207                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2208  0070                     	global	i1___lwdiv@divisor
  2209                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2210  0070                     	global	___xxtofl@val
  2211                           ___xxtofl@val:	; 4 bytes @ 0x0
  2212  0070                     	ds	2
  2213  0070                     	global	i1___wmul@multiplicand
  2214                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2215  0072                     	global	i1___lwdiv@dividend
  2216                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2217  0072                     	ds	1
  2218  0072                     	global	handle_rotary@portA
  2219                           handle_rotary@portA:	; 2 bytes @ 0x3
  2220  0073                     	ds	1
  2221  0073                     ??___xxtofl:	; 1 bytes @ 0x4
  2222  0074                     ??i1___wmul:	; 1 bytes @ 0x4
  2223  0074                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2224  0074                     	global	i1___wmul@product
  2225                           i1___wmul@product:	; 2 bytes @ 0x4
  2226  0074                     	ds	1
  2227  0074                     	global	handle_rotary@portB
  2228                           handle_rotary@portB:	; 2 bytes @ 0x5
  2229  0075                     	global	i1___lwdiv@quotient
  2230                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2231  0075                     	ds	2
  2232  0075                     	global	i1___lwdiv@counter
  2233                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2234  0077                     	ds	1
  2235  0077                     ??_start_receive:	; 1 bytes @ 0x8
  2236  0078                     	global	___xxtofl@sign
  2237                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2238  0078                     	ds	1
  2239  0078                     	global	___xxtofl@exp
  2240                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2241  0079                     	ds	1
  2242  0079                     	global	___xxtofl@arg
  2243                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2244  007A                     	ds	4
  2245  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2246                           global __pcstackBANK0
  2247                           __pcstackBANK0:
  2248  0020                     	global	?___fladd
  2249                           ?___fladd:	; 4 bytes @ 0x0
  2250  0020                     	global	___fladd@b
  2251                           ___fladd@b:	; 4 bytes @ 0x0
  2252  0020                     	ds	4
  2253  0020                     	global	___fladd@a
  2254                           ___fladd@a:	; 4 bytes @ 0x4
  2255  0024                     	ds	4
  2256  0024                     ??___fladd:	; 1 bytes @ 0x8
  2257  0028                     	ds	12
  2258  0028                     	global	___fladd@signs
  2259                           ___fladd@signs:	; 1 bytes @ 0x14
  2260  0034                     	ds	1
  2261  0034                     	global	___fladd@aexp
  2262                           ___fladd@aexp:	; 1 bytes @ 0x15
  2263  0035                     	ds	1
  2264  0035                     	global	___fladd@bexp
  2265                           ___fladd@bexp:	; 1 bytes @ 0x16
  2266  0036                     	ds	1
  2267  0036                     	global	___fladd@grs
  2268                           ___fladd@grs:	; 1 bytes @ 0x17
  2269  0037                     	ds	1
  2270  0037                     	global	?___fltol
  2271                           ?___fltol:	; 4 bytes @ 0x18
  2272  0038                     	global	___fltol@f1
  2273                           ___fltol@f1:	; 4 bytes @ 0x18
  2274  0038                     	ds	4
  2275  0038                     ??___fltol:	; 1 bytes @ 0x1C
  2276  003C                     	ds	5
  2277  003C                     	global	___fltol@sign1
  2278                           ___fltol@sign1:	; 1 bytes @ 0x21
  2279  0041                     	ds	1
  2280  0041                     	global	___fltol@exp1
  2281                           ___fltol@exp1:	; 1 bytes @ 0x22
  2282  0042                     	ds	1
  2283  0042                     	global	?_is_deadzone
  2284                           ?_is_deadzone:	; 2 bytes @ 0x23
  2285  0043                     	global	is_deadzone@currentStep
  2286                           is_deadzone@currentStep:	; 2 bytes @ 0x23
  2287  0043                     	ds	2
  2288  0043                     	global	is_deadzone@adcResult
  2289                           is_deadzone@adcResult:	; 2 bytes @ 0x25
  2290  0045                     	ds	2
  2291  0045                     ??_is_deadzone:	; 1 bytes @ 0x27
  2292  0047                     	ds	2
  2293  0047                     	global	is_deadzone@deadzoneLow
  2294                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x29
  2295  0049                     	ds	2
  2296  0049                     	global	is_deadzone@deadzoneHigh
  2297                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2B
  2298  004B                     	ds	2
  2299  004B                     	global	_is_deadzone$890
  2300                           _is_deadzone$890:	; 1 bytes @ 0x2D
  2301  004D                     	ds	1
  2302  004D                     	global	is_deadzone@turnPoint
  2303                           is_deadzone@turnPoint:	; 2 bytes @ 0x2E
  2304  004E                     	ds	2
  2305  004E                     ??_handle_potmeter:	; 1 bytes @ 0x30
  2306  0050                     	ds	2
  2307  0050                     	global	handle_potmeter@currentStep
  2308                           handle_potmeter@currentStep:	; 2 bytes @ 0x32
  2309  0052                     	ds	2
  2310  0052                     	global	handle_potmeter@ad_result
  2311                           handle_potmeter@ad_result:	; 2 bytes @ 0x34
  2312  0054                     	ds	2
  2313  0054                     ??_isr:	; 1 bytes @ 0x36
  2314  0056                     	ds	4
  2315  0056                     ;!
  2316                           ;!Data Sizes:
  2317                           ;!    Strings     13
  2318                           ;!    Constant    382
  2319                           ;!    Data        0
  2320                           ;!    BSS         20
  2321                           ;!    Persistent  0
  2322                           ;!    Stack       0
  2323                           ;!
  2324                           ;!Auto Spaces:
  2325                           ;!    Space          Size  Autos    Used
  2326                           ;!    COMMON           14     14      14
  2327                           ;!    BANK0            80     58      64
  2328                           ;!    BANK1            80     37      51
  2329                           ;!    BANK3            96      0       0
  2330                           ;!    BANK2            96      0       0
  2331                           
  2332                           ;!
  2333                           ;!Pointer List with Targets:
  2334                           ;!
  2335                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2336                           ;!		 -> STR_3(CODE[3]), 
  2337                           ;!
  2338                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2339                           ;!		 -> write_int@num(BANK1[2]), 
  2340                           ;!
  2341                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2342                           ;!		 -> ?_sprintf(BANK1[2]), 
  2343                           ;!
  2344                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2345                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2346                           ;!
  2347                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2348                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2349                           ;!
  2350                           
  2351                           
  2352                           ;!
  2353                           ;!Critical Paths under _main in COMMON
  2354                           ;!
  2355                           ;!    None.
  2356                           ;!
  2357                           ;!Critical Paths under _isr in COMMON
  2358                           ;!
  2359                           ;!    _start_receive->_poll_receiver
  2360                           ;!    _is_deadzone->___xxtofl
  2361                           ;!    ___fltol->___xxtofl
  2362                           ;!    ___fladd->___xxtofl
  2363                           ;!
  2364                           ;!Critical Paths under _main in BANK0
  2365                           ;!
  2366                           ;!    None.
  2367                           ;!
  2368                           ;!Critical Paths under _isr in BANK0
  2369                           ;!
  2370                           ;!    _isr->_handle_potmeter
  2371                           ;!    _handle_potmeter->_is_deadzone
  2372                           ;!    _is_deadzone->___fltol
  2373                           ;!    ___fltol->___fladd
  2374                           ;!
  2375                           ;!Critical Paths under _main in BANK1
  2376                           ;!
  2377                           ;!    _main->_update_volume
  2378                           ;!    _update_volume->_write_int
  2379                           ;!    _update_input->_write_int
  2380                           ;!    _write_space->_spiWrite
  2381                           ;!    _write_int->_sprintf
  2382                           ;!    _write_text->_write_char
  2383                           ;!    _write_char->_write_font
  2384                           ;!    _write_font->___wmul
  2385                           ;!    _sprintf->___lwmod
  2386                           ;!    ___lwmod->___lwdiv
  2387                           ;!    _display_init->_spiWrite
  2388                           ;!
  2389                           ;!Critical Paths under _isr in BANK1
  2390                           ;!
  2391                           ;!    None.
  2392                           ;!
  2393                           ;!Critical Paths under _main in BANK3
  2394                           ;!
  2395                           ;!    None.
  2396                           ;!
  2397                           ;!Critical Paths under _isr in BANK3
  2398                           ;!
  2399                           ;!    None.
  2400                           ;!
  2401                           ;!Critical Paths under _main in BANK2
  2402                           ;!
  2403                           ;!    None.
  2404                           ;!
  2405                           ;!Critical Paths under _isr in BANK2
  2406                           ;!
  2407                           ;!    None.
  2408                           
  2409 ;;
  2410 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2411 ;;
  2412                           
  2413                           ;!
  2414                           ;!Call Graph Tables:
  2415                           ;!
  2416                           ;! ---------------------------------------------------------------------------------
  2417                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2418                           ;! ---------------------------------------------------------------------------------
  2419                           ;! (0) _main                                                 2     2      0   11621
  2420                           ;!                                             35 BANK1      2     2      0
  2421                           ;!              _activateSelectedRelay
  2422                           ;!                             _config
  2423                           ;!                      _handle_remote
  2424                           ;!                       _update_input
  2425                           ;!                      _update_volume
  2426                           ;! ---------------------------------------------------------------------------------
  2427                           ;! (1) _update_volume                                        2     2      0    5774
  2428                           ;!                                             33 BANK1      2     2      0
  2429                           ;!                  _display_write_end
  2430                           ;!                _display_write_start
  2431                           ;!                          _write_int
  2432                           ;!                        _write_space
  2433                           ;!                         _write_text
  2434                           ;! ---------------------------------------------------------------------------------
  2435                           ;! (1) _update_input                                         0     0      0    5750
  2436                           ;!                  _display_write_end
  2437                           ;!                _display_write_start
  2438                           ;!                          _write_int
  2439                           ;!                        _write_space
  2440                           ;!                         _write_text
  2441                           ;! ---------------------------------------------------------------------------------
  2442                           ;! (2) _write_space                                          7     5      2     266
  2443                           ;!                                              1 BANK1      7     5      2
  2444                           ;!                           _spiWrite
  2445                           ;! ---------------------------------------------------------------------------------
  2446                           ;! (2) _write_int                                            4     2      2    4085
  2447                           ;!                                             29 BANK1      4     2      2
  2448                           ;!                            _sprintf
  2449                           ;!                         _write_char
  2450                           ;!                         _write_text
  2451                           ;! ---------------------------------------------------------------------------------
  2452                           ;! (2) _write_text                                           4     2      2    1399
  2453                           ;!                                             19 BANK1      4     2      2
  2454                           ;!                         _write_char
  2455                           ;! ---------------------------------------------------------------------------------
  2456                           ;! (3) _write_char                                           3     3      0    1103
  2457                           ;!                                             16 BANK1      3     3      0
  2458                           ;!                         _write_font
  2459                           ;! ---------------------------------------------------------------------------------
  2460                           ;! (4) _write_font                                          10     8      2     836
  2461                           ;!                                              6 BANK1     10     8      2
  2462                           ;!                             ___wmul
  2463                           ;!                           _spiWrite
  2464                           ;! ---------------------------------------------------------------------------------
  2465                           ;! (5) ___wmul                                               6     2      4     496
  2466                           ;!                                              0 BANK1      6     2      4
  2467                           ;! ---------------------------------------------------------------------------------
  2468                           ;! (3) _sprintf                                             23    19      4    1311
  2469                           ;!                                             14 BANK1     15    11      4
  2470                           ;!                            ___lwdiv
  2471                           ;!                            ___lwmod
  2472                           ;! ---------------------------------------------------------------------------------
  2473                           ;! (4) ___lwmod                                              6     2      4     311
  2474                           ;!                                              8 BANK1      6     2      4
  2475                           ;!                            ___lwdiv (ARG)
  2476                           ;! ---------------------------------------------------------------------------------
  2477                           ;! (4) ___lwdiv                                              8     4      4     414
  2478                           ;!                                              0 BANK1      8     4      4
  2479                           ;! ---------------------------------------------------------------------------------
  2480                           ;! (2) _display_write_start                                  0     0      0       0
  2481                           ;! ---------------------------------------------------------------------------------
  2482                           ;! (2) _display_write_end                                    0     0      0       0
  2483                           ;! ---------------------------------------------------------------------------------
  2484                           ;! (1) _handle_remote                                        5     5      0      75
  2485                           ;!                                              0 BANK1      5     5      0
  2486                           ;! ---------------------------------------------------------------------------------
  2487                           ;! (1) _config                                               3     3      0      22
  2488                           ;!                                              1 BANK1      3     3      0
  2489                           ;!                       _display_init
  2490                           ;!                           _init_adc
  2491                           ;!                        _init_remote
  2492                           ;! ---------------------------------------------------------------------------------
  2493                           ;! (2) _init_remote                                          0     0      0       0
  2494                           ;! ---------------------------------------------------------------------------------
  2495                           ;! (2) _init_adc                                             0     0      0       0
  2496                           ;! ---------------------------------------------------------------------------------
  2497                           ;! (2) _display_init                                         0     0      0      22
  2498                           ;!                           _spiWrite
  2499                           ;! ---------------------------------------------------------------------------------
  2500                           ;! (5) _spiWrite                                             1     1      0      22
  2501                           ;!                                              0 BANK1      1     1      0
  2502                           ;! ---------------------------------------------------------------------------------
  2503                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2504                           ;! ---------------------------------------------------------------------------------
  2505                           ;! Estimated maximum stack depth 5
  2506                           ;! ---------------------------------------------------------------------------------
  2507                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2508                           ;! ---------------------------------------------------------------------------------
  2509                           ;! (7) _isr                                                  4     4      0    4228
  2510                           ;!                                             54 BANK0      4     4      0
  2511                           ;!                    _handle_potmeter
  2512                           ;!                      _handle_rotary
  2513                           ;!                      _poll_receiver
  2514                           ;!                      _start_receive
  2515                           ;! ---------------------------------------------------------------------------------
  2516                           ;! (8) _start_receive                                        0     0      0       0
  2517                           ;!                      _poll_receiver
  2518                           ;! ---------------------------------------------------------------------------------
  2519                           ;! (9) _poll_receiver                                        8     8      0       0
  2520                           ;!                                              0 COMMON     8     8      0
  2521                           ;! ---------------------------------------------------------------------------------
  2522                           ;! (8) _handle_rotary                                        7     7      0     134
  2523                           ;!                                              0 COMMON     7     7      0
  2524                           ;! ---------------------------------------------------------------------------------
  2525                           ;! (8) _handle_potmeter                                      6     6      0    4094
  2526                           ;!                                             48 BANK0      6     6      0
  2527                           ;!                        _is_deadzone
  2528                           ;!                          i1___lwdiv
  2529                           ;! ---------------------------------------------------------------------------------
  2530                           ;! (9) i1___lwdiv                                            8     4      4     214
  2531                           ;!                                              0 COMMON     8     4      4
  2532                           ;! ---------------------------------------------------------------------------------
  2533                           ;! (9) _is_deadzone                                         13     9      4    3746
  2534                           ;!                                             35 BANK0     13     9      4
  2535                           ;!                            ___fladd
  2536                           ;!                            ___fltol
  2537                           ;!                           ___xxtofl
  2538                           ;!                           i1___wmul
  2539                           ;! ---------------------------------------------------------------------------------
  2540                           ;! (10) i1___wmul                                            6     2      4     144
  2541                           ;!                                              0 COMMON     6     2      4
  2542                           ;! ---------------------------------------------------------------------------------
  2543                           ;! (10) ___xxtofl                                           14    10      4     474
  2544                           ;!                                              0 COMMON    14    10      4
  2545                           ;! ---------------------------------------------------------------------------------
  2546                           ;! (10) ___fltol                                            11     7      4     381
  2547                           ;!                                             24 BANK0     11     7      4
  2548                           ;!                            ___fladd (ARG)
  2549                           ;!                           ___xxtofl (ARG)
  2550                           ;! ---------------------------------------------------------------------------------
  2551                           ;! (10) ___fladd                                            24    16      8    2414
  2552                           ;!                                              0 BANK0     24    16      8
  2553                           ;!                           ___xxtofl (ARG)
  2554                           ;! ---------------------------------------------------------------------------------
  2555                           ;! Estimated maximum stack depth 10
  2556                           ;! ---------------------------------------------------------------------------------
  2557                           ;!
  2558                           ;! Call Graph Graphs:
  2559                           ;!
  2560                           ;! _main (ROOT)
  2561                           ;!   _activateSelectedRelay
  2562                           ;!   _config
  2563                           ;!     _display_init
  2564                           ;!       _spiWrite
  2565                           ;!     _init_adc
  2566                           ;!     _init_remote
  2567                           ;!   _handle_remote
  2568                           ;!   _update_input
  2569                           ;!     _display_write_end
  2570                           ;!     _display_write_start
  2571                           ;!     _write_int
  2572                           ;!       _sprintf
  2573                           ;!         ___lwdiv
  2574                           ;!         ___lwmod
  2575                           ;!           ___lwdiv (ARG)
  2576                           ;!       _write_char
  2577                           ;!         _write_font
  2578                           ;!           ___wmul
  2579                           ;!           _spiWrite
  2580                           ;!       _write_text
  2581                           ;!         _write_char
  2582                           ;!           _write_font
  2583                           ;!             ___wmul
  2584                           ;!             _spiWrite
  2585                           ;!     _write_space
  2586                           ;!       _spiWrite
  2587                           ;!     _write_text
  2588                           ;!       _write_char
  2589                           ;!         _write_font
  2590                           ;!           ___wmul
  2591                           ;!           _spiWrite
  2592                           ;!   _update_volume
  2593                           ;!     _display_write_end
  2594                           ;!     _display_write_start
  2595                           ;!     _write_int
  2596                           ;!       _sprintf
  2597                           ;!         ___lwdiv
  2598                           ;!         ___lwmod
  2599                           ;!           ___lwdiv (ARG)
  2600                           ;!       _write_char
  2601                           ;!         _write_font
  2602                           ;!           ___wmul
  2603                           ;!           _spiWrite
  2604                           ;!       _write_text
  2605                           ;!         _write_char
  2606                           ;!           _write_font
  2607                           ;!             ___wmul
  2608                           ;!             _spiWrite
  2609                           ;!     _write_space
  2610                           ;!       _spiWrite
  2611                           ;!     _write_text
  2612                           ;!       _write_char
  2613                           ;!         _write_font
  2614                           ;!           ___wmul
  2615                           ;!           _spiWrite
  2616                           ;!
  2617                           ;! _isr (ROOT)
  2618                           ;!   _handle_potmeter
  2619                           ;!     _is_deadzone
  2620                           ;!       ___fladd
  2621                           ;!         ___xxtofl (ARG)
  2622                           ;!       ___fltol
  2623                           ;!         ___fladd (ARG)
  2624                           ;!           ___xxtofl (ARG)
  2625                           ;!         ___xxtofl (ARG)
  2626                           ;!       ___xxtofl
  2627                           ;!       i1___wmul
  2628                           ;!     i1___lwdiv
  2629                           ;!   _handle_rotary
  2630                           ;!   _poll_receiver
  2631                           ;!   _start_receive
  2632                           ;!     _poll_receiver
  2633                           ;!
  2634                           
  2635                           ;! Address spaces:
  2636                           
  2637                           ;!Name               Size   Autos  Total    Cost      Usage
  2638                           ;!BITCOMMON            E      0       0       0        0.0%
  2639                           ;!EEDATA             100      0       0       0        0.0%
  2640                           ;!NULL                 0      0       0       0        0.0%
  2641                           ;!CODE                 0      0       0       0        0.0%
  2642                           ;!COMMON               E      E       E       1      100.0%
  2643                           ;!BITSFR0              0      0       0       1        0.0%
  2644                           ;!SFR0                 0      0       0       1        0.0%
  2645                           ;!BITSFR1              0      0       0       2        0.0%
  2646                           ;!SFR1                 0      0       0       2        0.0%
  2647                           ;!STACK                0      0       0       2        0.0%
  2648                           ;!ABS                  0      0      81       3        0.0%
  2649                           ;!BITBANK0            50      0       0       4        0.0%
  2650                           ;!BITSFR3              0      0       0       4        0.0%
  2651                           ;!SFR3                 0      0       0       4        0.0%
  2652                           ;!BANK0               50     3A      40       5       80.0%
  2653                           ;!BITSFR2              0      0       0       5        0.0%
  2654                           ;!SFR2                 0      0       0       5        0.0%
  2655                           ;!BITBANK1            50      0       0       6        0.0%
  2656                           ;!BANK1               50     25      33       7       63.8%
  2657                           ;!BITBANK3            60      0       0       8        0.0%
  2658                           ;!BANK3               60      0       0       9        0.0%
  2659                           ;!BITBANK2            60      0       0      10        0.0%
  2660                           ;!BANK2               60      0       0      11        0.0%
  2661                           ;!DATA                 0      0      81      12        0.0%
  2662                           
  2663                           	global	_main
  2664                           
  2665 ;; *************** function _main *****************
  2666 ;; Defined at:
  2667 ;;		line 28 in file "main.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;		None
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;		None
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      void 
  2674 ;; Registers used:
  2675 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : B00/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         0       0       0       0       0
  2682 ;;      Locals:         0       0       0       0       0
  2683 ;;      Temps:          0       0       2       0       0
  2684 ;;      Totals:         0       0       2       0       0
  2685 ;;Total ram usage:        2 bytes
  2686 ;; Hardware stack levels required when called:   10
  2687 ;; This function calls:
  2688 ;;		_activateSelectedRelay
  2689 ;;		_config
  2690 ;;		_handle_remote
  2691 ;;		_update_input
  2692 ;;		_update_volume
  2693 ;; This function is called by:
  2694 ;;		Startup code after reset
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2698                           	file	"main.c"
  2699                           	line	28
  2700                           global __pmaintext
  2701                           __pmaintext:	;psect for function _main
  2702  09C9                     psect	maintext
  2703                           	file	"main.c"
  2704                           	line	28
  2705                           	global	__size_of_main
  2706                           	__size_of_main	equ	__end_of_main-_main
  2707  0031                     	
  2708                           _main:	
  2709  09C9                     ;incstack = 0
  2710 ;; hardware stack exceeded
  2711                           	opt	stack 0
  2712                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2713                           	line	30
  2714                           	
  2715                           l2922:	
  2716  09C9                     ;main.c: 30:     config();
  2717                           	fcall	_config
  2718  09C9  120A  158A  2613  120A  158A  	goto	l2924
  2719  09CE  29CF               	line	33
  2720                           ;main.c: 33:     while(1)
  2721                           	
  2722                           l59:	
  2723  09CF                     	line	37
  2724                           	
  2725                           l2924:	
  2726  09CF                     ;main.c: 34:     {;main.c: 37:         if (!ADCON0bits.GO)
  2727                           	bcf	status, 5	;RP0=0, select bank0
  2728  09CF  1283               	bcf	status, 6	;RP1=0, select bank0
  2729  09D0  1303               	btfsc	(31),1	;volatile
  2730  09D1  189F               	goto	u3041
  2731  09D2  29D4               	goto	u3040
  2732  09D3  29D5               u3041:
  2733  09D4                     	goto	l2928
  2734  09D4  29D7               u3040:
  2735  09D5                     	line	38
  2736                           	
  2737                           l2926:	
  2738  09D5                     ;main.c: 38:             ADCON0bits.GO = 1;
  2739                           	bsf	(31),1	;volatile
  2740  09D5  149F               	goto	l2928
  2741  09D6  29D7               	
  2742                           l60:	
  2743  09D7                     	line	40
  2744                           	
  2745                           l2928:	
  2746  09D7                     ;main.c: 40:         update_volume();
  2747                           	fcall	_update_volume
  2748  09D7  120A  158A  24F4  120A  158A  	line	41
  2749                           ;main.c: 41:         update_input();
  2750                           	fcall	_update_input
  2751  09DC  120A  158A  232B  120A  158A  	line	42
  2752                           	
  2753                           l2930:	
  2754  09E1                     ;main.c: 42:         activateSelectedRelay();
  2755                           	fcall	_activateSelectedRelay
  2756  09E1  120A  158A  226A  120A  158A  	line	43
  2757                           	
  2758                           l2932:	
  2759  09E6                     ;main.c: 43:         handle_remote();
  2760                           	fcall	_handle_remote
  2761  09E6  120A  158A  2772  120A  158A  	line	45
  2762                           	
  2763                           l2934:	
  2764  09EB                     ;main.c: 45:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2765                           	opt asmopt_push
  2766                           opt asmopt_off
  2767                           movlw	13
  2768  09EB  300D               	bsf	status, 5	;RP0=1, select bank1
  2769  09EC  1683               	bcf	status, 6	;RP1=0, select bank1
  2770  09ED  1303               movwf	((??_main+0)^080h+0+1),f
  2771  09EE  00C4               	movlw	251
  2772  09EF  30FB               movwf	((??_main+0)^080h+0),f
  2773  09F0  00C3               	u3157:
  2774  09F1                     decfsz	((??_main+0)^080h+0),f
  2775  09F1  0BC3               	goto	u3157
  2776  09F2  29F1               	decfsz	((??_main+0)^080h+0+1),f
  2777  09F3  0BC4               	goto	u3157
  2778  09F4  29F1               opt asmopt_pop
  2779                           
  2780                           	goto	l2924
  2781  09F5  29CF               	line	47
  2782                           ;main.c: 47:     }
  2783                           	
  2784                           l61:	
  2785  09F6                     	goto	l2924
  2786  09F6  29CF               	
  2787                           l62:	
  2788  09F7                     	line	49
  2789                           	
  2790                           l63:	
  2791  09F7                     	global	start
  2792                           	ljmp	start
  2793  09F7  120A  118A  2812   	opt stack 0
  2794                           GLOBAL	__end_of_main
  2795                           	__end_of_main:
  2796  09FA                     	signat	_main,89
  2797                           	global	_update_volume
  2798                           
  2799 ;; *************** function _update_volume *****************
  2800 ;; Defined at:
  2801 ;;		line 152 in file "Display.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;		None
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  spaces          2   33[BANK1 ] int 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  1    wreg      void 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       0       0       0       0
  2816 ;;      Locals:         0       0       2       0       0
  2817 ;;      Temps:          0       0       0       0       0
  2818 ;;      Totals:         0       0       2       0       0
  2819 ;;Total ram usage:        2 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    9
  2822 ;; This function calls:
  2823 ;;		_display_write_end
  2824 ;;		_display_write_start
  2825 ;;		_write_int
  2826 ;;		_write_space
  2827 ;;		_write_text
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2833                           	file	"Display.c"
  2834                           	line	152
  2835                           global __ptext1
  2836                           __ptext1:	;psect for function _update_volume
  2837  0CF4                     psect	text1
  2838                           	file	"Display.c"
  2839                           	line	152
  2840                           	global	__size_of_update_volume
  2841                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2842  005B                     	
  2843                           _update_volume:	
  2844  0CF4                     ;incstack = 0
  2845 ;; hardware stack exceeded
  2846                           	opt	stack 0
  2847                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2848                           	line	154
  2849                           	
  2850                           l2732:	
  2851  0CF4                     ;Display.c: 154:     if (lastVolume == volume) return;
  2852                           	bsf	status, 5	;RP0=1, select bank1
  2853  0CF4  1683               	bcf	status, 6	;RP1=0, select bank1
  2854  0CF5  1303               	movf	(_volume+1)^080h,w
  2855  0CF6  084E               	xorwf	(_lastVolume+1)^080h,w
  2856  0CF7  064C               	skipz
  2857  0CF8  1D03               	goto	u2845
  2858  0CF9  2CFC               	movf	(_volume)^080h,w
  2859  0CFA  084D               	xorwf	(_lastVolume)^080h,w
  2860  0CFB  064B               u2845:
  2861  0CFC                     
  2862                           	skipz
  2863  0CFC  1D03               	goto	u2841
  2864  0CFD  2CFF               	goto	u2840
  2865  0CFE  2D00               u2841:
  2866  0CFF                     	goto	l2736
  2867  0CFF  2D02               u2840:
  2868  0D00                     	goto	l154
  2869  0D00  2D4E               	
  2870                           l2734:	
  2871  0D01                     	goto	l154
  2872  0D01  2D4E               	
  2873                           l153:	
  2874  0D02                     	line	158
  2875                           	
  2876                           l2736:	
  2877  0D02                     ;Display.c: 158:     _selectedDisplay = 0;
  2878                           	clrf	(__selectedDisplay)^080h
  2879  0D02  01D1               	line	159
  2880                           	
  2881                           l2738:	
  2882  0D03                     ;Display.c: 159:     display_write_start();
  2883                           	fcall	_display_write_start
  2884  0D03  120A  158A  2141  120A  158A  	line	161
  2885                           	
  2886                           l2740:	
  2887  0D08                     ;Display.c: 161:     write_text("VOL");
  2888                           	movlw	low(((STR_2)|8000h))
  2889  0D08  3096               	bsf	status, 5	;RP0=1, select bank1
  2890  0D09  1683               	bcf	status, 6	;RP1=0, select bank1
  2891  0D0A  1303               	movwf	(write_text@text)^080h
  2892  0D0B  00B3               	movlw	high(((STR_2)|8000h))
  2893  0D0C  3084               	movwf	((write_text@text)^080h)+1
  2894  0D0D  00B4               	fcall	_write_text
  2895  0D0E  120A  158A  2230  120A  158A  	line	164
  2896                           	
  2897                           l2742:	
  2898  0D13                     ;Display.c: 164:     int spaces = 3;
  2899                           	movlw	03h
  2900  0D13  3003               	bsf	status, 5	;RP0=1, select bank1
  2901  0D14  1683               	bcf	status, 6	;RP1=0, select bank1
  2902  0D15  1303               	movwf	(update_volume@spaces)^080h
  2903  0D16  00C1               	movlw	0
  2904  0D17  3000               	movwf	((update_volume@spaces)^080h)+1
  2905  0D18  00C2               	line	165
  2906                           	
  2907                           l2744:	
  2908  0D19                     ;Display.c: 165:     if (volume < 10)
  2909                           	movf	(_volume+1)^080h,w
  2910  0D19  084E               	xorlw	80h
  2911  0D1A  3A80               	movwf	btemp+1
  2912  0D1B  00FF               	movlw	(0)^80h
  2913  0D1C  3080               	subwf	btemp+1,w
  2914  0D1D  027F               	skipz
  2915  0D1E  1D03               	goto	u2855
  2916  0D1F  2D22               	movlw	0Ah
  2917  0D20  300A               	subwf	(_volume)^080h,w
  2918  0D21  024D               u2855:
  2919  0D22                     
  2920                           	skipnc
  2921  0D22  1803               	goto	u2851
  2922  0D23  2D25               	goto	u2850
  2923  0D24  2D26               u2851:
  2924  0D25                     	goto	l2748
  2925  0D25  2D2D               u2850:
  2926  0D26                     	line	166
  2927                           	
  2928                           l2746:	
  2929  0D26                     ;Display.c: 166:         spaces = 4;
  2930                           	movlw	04h
  2931  0D26  3004               	bsf	status, 5	;RP0=1, select bank1
  2932  0D27  1683               	bcf	status, 6	;RP1=0, select bank1
  2933  0D28  1303               	movwf	(update_volume@spaces)^080h
  2934  0D29  00C1               	movlw	0
  2935  0D2A  3000               	movwf	((update_volume@spaces)^080h)+1
  2936  0D2B  00C2               	goto	l2748
  2937  0D2C  2D2D               	
  2938                           l155:	
  2939  0D2D                     	line	169
  2940                           	
  2941                           l2748:	
  2942  0D2D                     ;Display.c: 169:     write_space(spaces);
  2943                           	bsf	status, 5	;RP0=1, select bank1
  2944  0D2D  1683               	bcf	status, 6	;RP1=0, select bank1
  2945  0D2E  1303               	movf	(update_volume@spaces+1)^080h,w
  2946  0D2F  0842               	movwf	(write_space@count+1)^080h
  2947  0D30  00A2               	movf	(update_volume@spaces)^080h,w
  2948  0D31  0841               	movwf	(write_space@count)^080h
  2949  0D32  00A1               	fcall	_write_space
  2950  0D33  120A  158A  23BC  120A  158A  	line	171
  2951                           	
  2952                           l2750:	
  2953  0D38                     ;Display.c: 171:     write_int(volume);
  2954                           	bsf	status, 5	;RP0=1, select bank1
  2955  0D38  1683               	bcf	status, 6	;RP1=0, select bank1
  2956  0D39  1303               	movf	(_volume+1)^080h,w
  2957  0D3A  084E               	movwf	(write_int@number+1)^080h
  2958  0D3B  00BE               	movf	(_volume)^080h,w
  2959  0D3C  084D               	movwf	(write_int@number)^080h
  2960  0D3D  00BD               	fcall	_write_int
  2961  0D3E  120A  158A  21FA  120A  158A  	line	172
  2962                           	
  2963                           l2752:	
  2964  0D43                     ;Display.c: 172:     display_write_end();
  2965                           	fcall	_display_write_end
  2966  0D43  120A  158A  2132  120A  158A  	line	174
  2967                           	
  2968                           l2754:	
  2969  0D48                     ;Display.c: 174:     lastVolume = volume;
  2970                           	bsf	status, 5	;RP0=1, select bank1
  2971  0D48  1683               	bcf	status, 6	;RP1=0, select bank1
  2972  0D49  1303               	movf	(_volume+1)^080h,w
  2973  0D4A  084E               	movwf	(_lastVolume+1)^080h
  2974  0D4B  00CC               	movf	(_volume)^080h,w
  2975  0D4C  084D               	movwf	(_lastVolume)^080h
  2976  0D4D  00CB               	line	176
  2977                           	
  2978                           l154:	
  2979  0D4E                     	return
  2980  0D4E  0008               	opt stack 0
  2981                           GLOBAL	__end_of_update_volume
  2982                           	__end_of_update_volume:
  2983  0D4F                     	signat	_update_volume,89
  2984                           	global	_update_input
  2985                           
  2986 ;; *************** function _update_input *****************
  2987 ;; Defined at:
  2988 ;;		line 134 in file "Display.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  1    wreg      void 
  2995 ;; Registers used:
  2996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    9
  3009 ;; This function calls:
  3010 ;;		_display_write_end
  3011 ;;		_display_write_start
  3012 ;;		_write_int
  3013 ;;		_write_space
  3014 ;;		_write_text
  3015 ;; This function is called by:
  3016 ;;		_main
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3020                           	line	134
  3021                           global __ptext2
  3022                           __ptext2:	;psect for function _update_input
  3023  0B2B                     psect	text2
  3024                           	file	"Display.c"
  3025                           	line	134
  3026                           	global	__size_of_update_input
  3027                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  3028  0046                     	
  3029                           _update_input:	
  3030  0B2B                     ;incstack = 0
  3031 ;; hardware stack exceeded
  3032                           	opt	stack 0
  3033                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3034                           	line	136
  3035                           	
  3036                           l2756:	
  3037  0B2B                     ;Display.c: 136:     if (lastInput == _selectedInput) return;
  3038                           	bsf	status, 5	;RP0=1, select bank1
  3039  0B2B  1683               	bcf	status, 6	;RP1=0, select bank1
  3040  0B2C  1303               	movf	(__selectedInput+1)^080h,w
  3041  0B2D  0850               	xorwf	(_lastInput+1)^080h,w
  3042  0B2E  064A               	skipz
  3043  0B2F  1D03               	goto	u2865
  3044  0B30  2B33               	movf	(__selectedInput)^080h,w
  3045  0B31  084F               	xorwf	(_lastInput)^080h,w
  3046  0B32  0649               u2865:
  3047  0B33                     
  3048                           	skipz
  3049  0B33  1D03               	goto	u2861
  3050  0B34  2B36               	goto	u2860
  3051  0B35  2B37               u2861:
  3052  0B36                     	goto	l149
  3053  0B36  2B39               u2860:
  3054  0B37                     	goto	l150
  3055  0B37  2B70               	
  3056                           l2758:	
  3057  0B38                     	goto	l150
  3058  0B38  2B70               	
  3059                           l149:	
  3060  0B39                     	line	138
  3061                           ;Display.c: 138:     _selectedDisplay = 1;
  3062                           	clrf	(__selectedDisplay)^080h
  3063  0B39  01D1               	incf	(__selectedDisplay)^080h,f
  3064  0B3A  0AD1               	line	139
  3065                           	
  3066                           l2760:	
  3067  0B3B                     ;Display.c: 139:     display_write_start();
  3068                           	fcall	_display_write_start
  3069  0B3B  120A  158A  2141  120A  158A  	line	141
  3070                           	
  3071                           l2762:	
  3072  0B40                     ;Display.c: 141:     write_text("INPUT");
  3073                           	movlw	low(((STR_1)|8000h))
  3074  0B40  3090               	bsf	status, 5	;RP0=1, select bank1
  3075  0B41  1683               	bcf	status, 6	;RP1=0, select bank1
  3076  0B42  1303               	movwf	(write_text@text)^080h
  3077  0B43  00B3               	movlw	high(((STR_1)|8000h))
  3078  0B44  3084               	movwf	((write_text@text)^080h)+1
  3079  0B45  00B4               	fcall	_write_text
  3080  0B46  120A  158A  2230  120A  158A  	line	143
  3081                           	
  3082                           l2764:	
  3083  0B4B                     ;Display.c: 143:     write_space(2);
  3084                           	movlw	02h
  3085  0B4B  3002               	bsf	status, 5	;RP0=1, select bank1
  3086  0B4C  1683               	bcf	status, 6	;RP1=0, select bank1
  3087  0B4D  1303               	movwf	(write_space@count)^080h
  3088  0B4E  00A1               	movlw	0
  3089  0B4F  3000               	movwf	((write_space@count)^080h)+1
  3090  0B50  00A2               	fcall	_write_space
  3091  0B51  120A  158A  23BC  120A  158A  	line	145
  3092                           	
  3093                           l2766:	
  3094  0B56                     ;Display.c: 145:     write_int(_selectedInput+1);
  3095                           	bsf	status, 5	;RP0=1, select bank1
  3096  0B56  1683               	bcf	status, 6	;RP1=0, select bank1
  3097  0B57  1303               	movf	(__selectedInput)^080h,w
  3098  0B58  084F               	addlw	low(01h)
  3099  0B59  3E01               	movwf	(write_int@number)^080h
  3100  0B5A  00BD               	movf	(__selectedInput+1)^080h,w
  3101  0B5B  0850               	skipnc
  3102  0B5C  1803               	addlw	1
  3103  0B5D  3E01               	addlw	high(01h)
  3104  0B5E  3E00               	movwf	1+(write_int@number)^080h
  3105  0B5F  00BE               	fcall	_write_int
  3106  0B60  120A  158A  21FA  120A  158A  	line	146
  3107                           	
  3108                           l2768:	
  3109  0B65                     ;Display.c: 146:     display_write_end();
  3110                           	fcall	_display_write_end
  3111  0B65  120A  158A  2132  120A  158A  	line	148
  3112                           	
  3113                           l2770:	
  3114  0B6A                     ;Display.c: 148:     lastInput = _selectedInput;
  3115                           	bsf	status, 5	;RP0=1, select bank1
  3116  0B6A  1683               	bcf	status, 6	;RP1=0, select bank1
  3117  0B6B  1303               	movf	(__selectedInput+1)^080h,w
  3118  0B6C  0850               	movwf	(_lastInput+1)^080h
  3119  0B6D  00CA               	movf	(__selectedInput)^080h,w
  3120  0B6E  084F               	movwf	(_lastInput)^080h
  3121  0B6F  00C9               	line	150
  3122                           	
  3123                           l150:	
  3124  0B70                     	return
  3125  0B70  0008               	opt stack 0
  3126                           GLOBAL	__end_of_update_input
  3127                           	__end_of_update_input:
  3128  0B71                     	signat	_update_input,89
  3129                           	global	_write_space
  3130                           
  3131 ;; *************** function _write_space *****************
  3132 ;; Defined at:
  3133 ;;		line 178 in file "Display.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  count           2    1[BANK1 ] int 
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  x               2    6[BANK1 ] int 
  3138 ;;  i               2    4[BANK1 ] int 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  1    wreg      void 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3148 ;;      Params:         0       0       2       0       0
  3149 ;;      Locals:         0       0       4       0       0
  3150 ;;      Temps:          0       0       1       0       0
  3151 ;;      Totals:         0       0       7       0       0
  3152 ;;Total ram usage:        7 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    5
  3155 ;; This function calls:
  3156 ;;		_spiWrite
  3157 ;; This function is called by:
  3158 ;;		_update_input
  3159 ;;		_update_volume
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3163                           	line	178
  3164                           global __ptext3
  3165                           __ptext3:	;psect for function _write_space
  3166  0BBC                     psect	text3
  3167                           	file	"Display.c"
  3168                           	line	178
  3169                           	global	__size_of_write_space
  3170                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  3171  004C                     	
  3172                           _write_space:	
  3173  0BBC                     ;incstack = 0
  3174                           	opt	stack 1
  3175                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3176                           	line	180
  3177                           	
  3178                           l2580:	
  3179  0BBC                     ;Display.c: 178: void write_space(int count);Display.c: 179: {;Display.c: 180:     for (
                                 int i = 0; i < count; i++) {
  3180                           	bsf	status, 5	;RP0=1, select bank1
  3181  0BBC  1683               	bcf	status, 6	;RP1=0, select bank1
  3182  0BBD  1303               	clrf	(write_space@i)^080h
  3183  0BBE  01A4               	clrf	(write_space@i+1)^080h
  3184  0BBF  01A5               	goto	l158
  3185  0BC0  2BF8               	
  3186                           l159:	
  3187  0BC1                     	line	183
  3188                           	
  3189                           l2582:	
  3190  0BC1                     ;Display.c: 183:         for (int x = 0; x < 5; x++) {
  3191                           	bsf	status, 5	;RP0=1, select bank1
  3192  0BC1  1683               	bcf	status, 6	;RP1=0, select bank1
  3193  0BC2  1303               	clrf	(write_space@x)^080h
  3194  0BC3  01A6               	clrf	(write_space@x+1)^080h
  3195  0BC4  01A7               	
  3196                           l2584:	
  3197  0BC5                     	movf	(write_space@x+1)^080h,w
  3198  0BC5  0827               	xorlw	80h
  3199  0BC6  3A80               	movwf	btemp+1
  3200  0BC7  00FF               	movlw	(0)^80h
  3201  0BC8  3080               	subwf	btemp+1,w
  3202  0BC9  027F               	skipz
  3203  0BCA  1D03               	goto	u2705
  3204  0BCB  2BCE               	movlw	05h
  3205  0BCC  3005               	subwf	(write_space@x)^080h,w
  3206  0BCD  0226               u2705:
  3207  0BCE                     
  3208                           	skipc
  3209  0BCE  1C03               	goto	u2701
  3210  0BCF  2BD1               	goto	u2700
  3211  0BD0  2BD2               u2701:
  3212  0BD1                     	goto	l2588
  3213  0BD1  2BD4               u2700:
  3214  0BD2                     	goto	l2594
  3215  0BD2  2BF0               	
  3216                           l2586:	
  3217  0BD3                     	goto	l2594
  3218  0BD3  2BF0               	
  3219                           l160:	
  3220  0BD4                     	line	185
  3221                           	
  3222                           l2588:	
  3223  0BD4                     ;Display.c: 185:             spiWrite(0x00);
  3224                           	movlw	low(0)
  3225  0BD4  3000               	fcall	_spiWrite
  3226  0BD5  120A  158A  2150  120A  158A  	line	187
  3227                           	
  3228                           l2590:	
  3229  0BDA                     ;Display.c: 187:         }
  3230                           	movlw	01h
  3231  0BDA  3001               	bsf	status, 5	;RP0=1, select bank1
  3232  0BDB  1683               	bcf	status, 6	;RP1=0, select bank1
  3233  0BDC  1303               	addwf	(write_space@x)^080h,f
  3234  0BDD  07A6               	skipnc
  3235  0BDE  1803               	incf	(write_space@x+1)^080h,f
  3236  0BDF  0AA7               	movlw	0
  3237  0BE0  3000               	addwf	(write_space@x+1)^080h,f
  3238  0BE1  07A7               	
  3239                           l2592:	
  3240  0BE2                     	movf	(write_space@x+1)^080h,w
  3241  0BE2  0827               	xorlw	80h
  3242  0BE3  3A80               	movwf	btemp+1
  3243  0BE4  00FF               	movlw	(0)^80h
  3244  0BE5  3080               	subwf	btemp+1,w
  3245  0BE6  027F               	skipz
  3246  0BE7  1D03               	goto	u2715
  3247  0BE8  2BEB               	movlw	05h
  3248  0BE9  3005               	subwf	(write_space@x)^080h,w
  3249  0BEA  0226               u2715:
  3250  0BEB                     
  3251                           	skipc
  3252  0BEB  1C03               	goto	u2711
  3253  0BEC  2BEE               	goto	u2710
  3254  0BED  2BEF               u2711:
  3255  0BEE                     	goto	l2588
  3256  0BEE  2BD4               u2710:
  3257  0BEF                     	goto	l2594
  3258  0BEF  2BF0               	
  3259                           l161:	
  3260  0BF0                     	line	188
  3261                           	
  3262                           l2594:	
  3263  0BF0                     ;Display.c: 188:     }
  3264                           	movlw	01h
  3265  0BF0  3001               	bsf	status, 5	;RP0=1, select bank1
  3266  0BF1  1683               	bcf	status, 6	;RP1=0, select bank1
  3267  0BF2  1303               	addwf	(write_space@i)^080h,f
  3268  0BF3  07A4               	skipnc
  3269  0BF4  1803               	incf	(write_space@i+1)^080h,f
  3270  0BF5  0AA5               	movlw	0
  3271  0BF6  3000               	addwf	(write_space@i+1)^080h,f
  3272  0BF7  07A5               	
  3273                           l158:	
  3274  0BF8                     	movf	(write_space@i+1)^080h,w
  3275  0BF8  0825               	xorlw	80h
  3276  0BF9  3A80               	movwf	(??_write_space+0)^080h+0
  3277  0BFA  00A3               	movf	(write_space@count+1)^080h,w
  3278  0BFB  0822               	xorlw	80h
  3279  0BFC  3A80               	subwf	(??_write_space+0)^080h+0,w
  3280  0BFD  0223               	skipz
  3281  0BFE  1D03               	goto	u2725
  3282  0BFF  2C02               	movf	(write_space@count)^080h,w
  3283  0C00  0821               	subwf	(write_space@i)^080h,w
  3284  0C01  0224               u2725:
  3285  0C02                     
  3286                           	skipc
  3287  0C02  1C03               	goto	u2721
  3288  0C03  2C05               	goto	u2720
  3289  0C04  2C06               u2721:
  3290  0C05                     	goto	l2582
  3291  0C05  2BC1               u2720:
  3292  0C06                     	goto	l163
  3293  0C06  2C07               	
  3294                           l162:	
  3295  0C07                     	line	189
  3296                           	
  3297                           l163:	
  3298  0C07                     	return
  3299  0C07  0008               	opt stack 0
  3300                           GLOBAL	__end_of_write_space
  3301                           	__end_of_write_space:
  3302  0C08                     	signat	_write_space,4217
  3303                           	global	_write_int
  3304                           
  3305 ;; *************** function _write_int *****************
  3306 ;; Defined at:
  3307 ;;		line 201 in file "Display.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  number          2   29[BANK1 ] int 
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;  num             2   31[BANK1 ] unsigned char [2]
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3316 ;; Tracked objects:
  3317 ;;		On entry : 0/0
  3318 ;;		On exit  : 0/0
  3319 ;;		Unchanged: 0/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3321 ;;      Params:         0       0       2       0       0
  3322 ;;      Locals:         0       0       2       0       0
  3323 ;;      Temps:          0       0       0       0       0
  3324 ;;      Totals:         0       0       4       0       0
  3325 ;;Total ram usage:        4 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; Hardware stack levels required when called:    8
  3328 ;; This function calls:
  3329 ;;		_sprintf
  3330 ;;		_write_char
  3331 ;;		_write_text
  3332 ;; This function is called by:
  3333 ;;		_update_input
  3334 ;;		_update_volume
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3338                           	line	201
  3339                           global __ptext4
  3340                           __ptext4:	;psect for function _write_int
  3341  09FA                     psect	text4
  3342                           	file	"Display.c"
  3343                           	line	201
  3344                           	global	__size_of_write_int
  3345                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  3346  0036                     	
  3347                           _write_int:	
  3348  09FA                     ;incstack = 0
  3349 ;; hardware stack exceeded
  3350                           	opt	stack 0
  3351                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3352                           	line	203
  3353                           	
  3354                           l2596:	
  3355  09FA                     ;Display.c: 201: void write_int(int number);Display.c: 202: {;Display.c: 203:     if (nu
                                 mber < 10) {
  3356                           	bsf	status, 5	;RP0=1, select bank1
  3357  09FA  1683               	bcf	status, 6	;RP1=0, select bank1
  3358  09FB  1303               	movf	(write_int@number+1)^080h,w
  3359  09FC  083E               	xorlw	80h
  3360  09FD  3A80               	movwf	btemp+1
  3361  09FE  00FF               	movlw	(0)^80h
  3362  09FF  3080               	subwf	btemp+1,w
  3363  0A00  027F               	skipz
  3364  0A01  1D03               	goto	u2735
  3365  0A02  2A05               	movlw	0Ah
  3366  0A03  300A               	subwf	(write_int@number)^080h,w
  3367  0A04  023D               u2735:
  3368  0A05                     
  3369                           	skipnc
  3370  0A05  1803               	goto	u2731
  3371  0A06  2A08               	goto	u2730
  3372  0A07  2A09               u2731:
  3373  0A08                     	goto	l2602
  3374  0A08  2A14               u2730:
  3375  0A09                     	line	204
  3376                           	
  3377                           l2598:	
  3378  0A09                     ;Display.c: 204:         write_char(number + 48);
  3379                           	bsf	status, 5	;RP0=1, select bank1
  3380  0A09  1683               	bcf	status, 6	;RP1=0, select bank1
  3381  0A0A  1303               	movf	(write_int@number)^080h,w
  3382  0A0B  083D               	addlw	030h
  3383  0A0C  3E30               	fcall	_write_char
  3384  0A0D  120A  158A  25B1  120A  158A  	goto	l173
  3385  0A12  2A2F               	line	205
  3386                           	
  3387                           l2600:	
  3388  0A13                     ;Display.c: 205:         return;
  3389                           	goto	l173
  3390  0A13  2A2F               	line	206
  3391                           ;Display.c: 206:     }
  3392                           	
  3393                           l172:	
  3394  0A14                     	line	209
  3395                           	
  3396                           l2602:	
  3397  0A14                     ;Display.c: 208:     char num[2];;Display.c: 209:     sprintf(num, "%d", number);
  3398                           	movlw	low(((STR_3)|8000h))
  3399  0A14  309A               	bsf	status, 5	;RP0=1, select bank1
  3400  0A15  1683               	bcf	status, 6	;RP1=0, select bank1
  3401  0A16  1303               	movwf	(sprintf@f)^080h
  3402  0A17  00AE               	movlw	high(((STR_3)|8000h))
  3403  0A18  3084               	movwf	((sprintf@f)^080h)+1
  3404  0A19  00AF               	movf	(write_int@number+1)^080h,w
  3405  0A1A  083E               	movwf	1+(?_sprintf)^080h+02h
  3406  0A1B  00B1               	movf	(write_int@number)^080h,w
  3407  0A1C  083D               	movwf	0+(?_sprintf)^080h+02h
  3408  0A1D  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  3409  0A1E  30BF               	fcall	_sprintf
  3410  0A1F  120A  118A  249D  120A  158A  	line	211
  3411                           ;Display.c: 211:     write_text(num);
  3412                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  3413  0A24  30BF               	bsf	status, 5	;RP0=1, select bank1
  3414  0A25  1683               	bcf	status, 6	;RP1=0, select bank1
  3415  0A26  1303               	movwf	(write_text@text)^080h
  3416  0A27  00B3               	movlw	(0x0)
  3417  0A28  3000               	movwf	(write_text@text+1)^080h
  3418  0A29  00B4               	fcall	_write_text
  3419  0A2A  120A  158A  2230  120A  158A  	line	212
  3420                           	
  3421                           l173:	
  3422  0A2F                     	return
  3423  0A2F  0008               	opt stack 0
  3424                           GLOBAL	__end_of_write_int
  3425                           	__end_of_write_int:
  3426  0A30                     	signat	_write_int,4217
  3427                           	global	_write_text
  3428                           
  3429 ;; *************** function _write_text *****************
  3430 ;; Defined at:
  3431 ;;		line 191 in file "Display.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  text            2   19[BANK1 ] PTR unsigned char 
  3434 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  c               2   21[BANK1 ] PTR unsigned char 
  3437 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         0       0       2       0       0
  3448 ;;      Locals:         0       0       2       0       0
  3449 ;;      Temps:          0       0       0       0       0
  3450 ;;      Totals:         0       0       4       0       0
  3451 ;;Total ram usage:        4 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    7
  3454 ;; This function calls:
  3455 ;;		_write_char
  3456 ;; This function is called by:
  3457 ;;		_update_input
  3458 ;;		_update_volume
  3459 ;;		_write_int
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3463                           	line	191
  3464                           global __ptext5
  3465                           __ptext5:	;psect for function _write_text
  3466  0A30                     psect	text5
  3467                           	file	"Display.c"
  3468                           	line	191
  3469                           	global	__size_of_write_text
  3470                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  3471  003A                     	
  3472                           _write_text:	
  3473  0A30                     ;incstack = 0
  3474 ;; hardware stack exceeded
  3475                           	opt	stack 0
  3476                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3477                           	line	195
  3478                           	
  3479                           l2142:	
  3480  0A30                     ;Display.c: 191: void write_text(char* text);Display.c: 192: {;Display.c: 193:     char*
                                  c;;Display.c: 195:     for (c = text; *c != '\0'; c++) {
  3481                           	bsf	status, 5	;RP0=1, select bank1
  3482  0A30  1683               	bcf	status, 6	;RP1=0, select bank1
  3483  0A31  1303               		movf	(write_text@text)^080h,w
  3484  0A32  0833               	movwf	(write_text@c)^080h
  3485  0A33  00B5               movf	(write_text@text+1)^080h,w
  3486  0A34  0834               movwf	(write_text@c+1)^080h
  3487  0A35  00B6               
  3488                           	goto	l2148
  3489  0A36  2A54               	
  3490                           l167:	
  3491  0A37                     	line	196
  3492                           	
  3493                           l2144:	
  3494  0A37                     ;Display.c: 196:         write_char(*c);
  3495                           	bsf	status, 5	;RP0=1, select bank1
  3496  0A37  1683               	bcf	status, 6	;RP1=0, select bank1
  3497  0A38  1303               	movf	(write_text@c+1)^080h,w
  3498  0A39  0836               	bcf	status, 5	;RP0=0, select bank0
  3499  0A3A  1283               	bcf	status, 6	;RP1=0, select bank0
  3500  0A3B  1303               	movwf	btemp+1
  3501  0A3C  00FF               	bsf	status, 5	;RP0=1, select bank1
  3502  0A3D  1683               	bcf	status, 6	;RP1=0, select bank1
  3503  0A3E  1303               	movf	(write_text@c)^080h,w
  3504  0A3F  0835               	movwf	fsr0
  3505  0A40  0084               	bcf	status, 5	;RP0=0, select bank0
  3506  0A41  1283               	bcf	status, 6	;RP1=0, select bank0
  3507  0A42  1303               	fcall	stringtab
  3508  0A43  120A  118A  2300  120A  158A  	fcall	_write_char
  3509  0A48  120A  158A  25B1  120A  158A  	line	197
  3510                           	
  3511                           l2146:	
  3512  0A4D                     ;Display.c: 197:     }
  3513                           	movlw	01h
  3514  0A4D  3001               	bsf	status, 5	;RP0=1, select bank1
  3515  0A4E  1683               	bcf	status, 6	;RP1=0, select bank1
  3516  0A4F  1303               	addwf	(write_text@c)^080h,f
  3517  0A50  07B5               	skipnc
  3518  0A51  1803               	incf	(write_text@c+1)^080h,f
  3519  0A52  0AB6               	goto	l2148
  3520  0A53  2A54               	
  3521                           l166:	
  3522  0A54                     	
  3523                           l2148:	
  3524  0A54                     	movf	(write_text@c+1)^080h,w
  3525  0A54  0836               	bcf	status, 5	;RP0=0, select bank0
  3526  0A55  1283               	bcf	status, 6	;RP1=0, select bank0
  3527  0A56  1303               	movwf	btemp+1
  3528  0A57  00FF               	bsf	status, 5	;RP0=1, select bank1
  3529  0A58  1683               	bcf	status, 6	;RP1=0, select bank1
  3530  0A59  1303               	movf	(write_text@c)^080h,w
  3531  0A5A  0835               	movwf	fsr0
  3532  0A5B  0084               	bcf	status, 5	;RP0=0, select bank0
  3533  0A5C  1283               	bcf	status, 6	;RP1=0, select bank0
  3534  0A5D  1303               	fcall	stringtab
  3535  0A5E  120A  118A  2300  120A  158A  	xorlw	0
  3536  0A63  3A00               	skipz
  3537  0A64  1D03               	goto	u1841
  3538  0A65  2A67               	goto	u1840
  3539  0A66  2A68               u1841:
  3540  0A67                     	goto	l2144
  3541  0A67  2A37               u1840:
  3542  0A68                     	goto	l169
  3543  0A68  2A69               	
  3544                           l168:	
  3545  0A69                     	line	199
  3546                           	
  3547                           l169:	
  3548  0A69                     	return
  3549  0A69  0008               	opt stack 0
  3550                           GLOBAL	__end_of_write_text
  3551                           	__end_of_write_text:
  3552  0A6A                     	signat	_write_text,4217
  3553                           	global	_write_char
  3554                           
  3555 ;; *************** function _write_char *****************
  3556 ;; Defined at:
  3557 ;;		line 214 in file "Display.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  c               1    wreg     unsigned char 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;  c               1   18[BANK1 ] unsigned char 
  3562 ;;  pos             2   16[BANK1 ] int 
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3567 ;; Tracked objects:
  3568 ;;		On entry : 0/0
  3569 ;;		On exit  : 0/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3572 ;;      Params:         0       0       0       0       0
  3573 ;;      Locals:         0       0       3       0       0
  3574 ;;      Temps:          0       0       0       0       0
  3575 ;;      Totals:         0       0       3       0       0
  3576 ;;Total ram usage:        3 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; Hardware stack levels required when called:    6
  3579 ;; This function calls:
  3580 ;;		_write_font
  3581 ;; This function is called by:
  3582 ;;		_write_text
  3583 ;;		_write_int
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3587                           	line	214
  3588                           global __ptext6
  3589                           __ptext6:	;psect for function _write_char
  3590  0DB1                     psect	text6
  3591                           	file	"Display.c"
  3592                           	line	214
  3593                           	global	__size_of_write_char
  3594                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  3595  0062                     	
  3596                           _write_char:	
  3597  0DB1                     ;incstack = 0
  3598 ;; hardware stack exceeded
  3599                           	opt	stack 0
  3600                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3601                           ;write_char@c stored from wreg
  3602                           	bsf	status, 5	;RP0=1, select bank1
  3603  0DB1  1683               	bcf	status, 6	;RP1=0, select bank1
  3604  0DB2  1303               	movwf	(write_char@c)^080h
  3605  0DB3  00B2               	line	219
  3606                           	
  3607                           l2070:	
  3608  0DB4                     ;Display.c: 214: void write_char(char c);Display.c: 215: {;Display.c: 216:     int pos;;
                                 Display.c: 219:     if (c >= 48 && c <= 57) {
  3609                           	movlw	low(030h)
  3610  0DB4  3030               	subwf	(write_char@c)^080h,w
  3611  0DB5  0232               	skipc
  3612  0DB6  1C03               	goto	u1651
  3613  0DB7  2DB9               	goto	u1650
  3614  0DB8  2DBA               u1651:
  3615  0DB9                     	goto	l2078
  3616  0DB9  2DD1               u1650:
  3617  0DBA                     	
  3618                           l2072:	
  3619  0DBA                     	movlw	low(03Ah)
  3620  0DBA  303A               	subwf	(write_char@c)^080h,w
  3621  0DBB  0232               	skipnc
  3622  0DBC  1803               	goto	u1661
  3623  0DBD  2DBF               	goto	u1660
  3624  0DBE  2DC0               u1661:
  3625  0DBF                     	goto	l2078
  3626  0DBF  2DD1               u1660:
  3627  0DC0                     	line	220
  3628                           	
  3629                           l2074:	
  3630  0DC0                     ;Display.c: 220:         pos = c - 48;
  3631                           	movf	(write_char@c)^080h,w
  3632  0DC0  0832               	addlw	low(-48)
  3633  0DC1  3ED0               	movwf	(write_char@pos)^080h
  3634  0DC2  00B0               	movlw	high(-48)
  3635  0DC3  30FF               	skipnc
  3636  0DC4  1803               	movlw	(high(-48)+1)&0ffh
  3637  0DC5  3000               	movwf	((write_char@pos)^080h)+1
  3638  0DC6  00B1               	line	221
  3639                           	
  3640                           l2076:	
  3641  0DC7                     ;Display.c: 221:         write_font(pos);
  3642                           	movf	(write_char@pos+1)^080h,w
  3643  0DC7  0831               	movwf	(write_font@fontPos+1)^080h
  3644  0DC8  00A7               	movf	(write_char@pos)^080h,w
  3645  0DC9  0830               	movwf	(write_font@fontPos)^080h
  3646  0DCA  00A6               	fcall	_write_font
  3647  0DCB  120A  158A  254F  120A  158A  	line	222
  3648                           ;Display.c: 222:     } else if (c >= 65 && c <= 90) {
  3649                           	goto	l182
  3650  0DD0  2E12               	
  3651                           l176:	
  3652  0DD1                     	
  3653                           l2078:	
  3654  0DD1                     	movlw	low(041h)
  3655  0DD1  3041               	bsf	status, 5	;RP0=1, select bank1
  3656  0DD2  1683               	bcf	status, 6	;RP1=0, select bank1
  3657  0DD3  1303               	subwf	(write_char@c)^080h,w
  3658  0DD4  0232               	skipc
  3659  0DD5  1C03               	goto	u1671
  3660  0DD6  2DD8               	goto	u1670
  3661  0DD7  2DD9               u1671:
  3662  0DD8                     	goto	l2086
  3663  0DD8  2DF0               u1670:
  3664  0DD9                     	
  3665                           l2080:	
  3666  0DD9                     	movlw	low(05Bh)
  3667  0DD9  305B               	subwf	(write_char@c)^080h,w
  3668  0DDA  0232               	skipnc
  3669  0DDB  1803               	goto	u1681
  3670  0DDC  2DDE               	goto	u1680
  3671  0DDD  2DDF               u1681:
  3672  0DDE                     	goto	l2086
  3673  0DDE  2DF0               u1680:
  3674  0DDF                     	line	223
  3675                           	
  3676                           l2082:	
  3677  0DDF                     ;Display.c: 223:         pos = (c - 65) + 10;
  3678                           	movf	(write_char@c)^080h,w
  3679  0DDF  0832               	addlw	low(-55)
  3680  0DE0  3EC9               	movwf	(write_char@pos)^080h
  3681  0DE1  00B0               	movlw	high(-55)
  3682  0DE2  30FF               	skipnc
  3683  0DE3  1803               	movlw	(high(-55)+1)&0ffh
  3684  0DE4  3000               	movwf	((write_char@pos)^080h)+1
  3685  0DE5  00B1               	line	224
  3686                           	
  3687                           l2084:	
  3688  0DE6                     ;Display.c: 224:         write_font(pos);
  3689                           	movf	(write_char@pos+1)^080h,w
  3690  0DE6  0831               	movwf	(write_font@fontPos+1)^080h
  3691  0DE7  00A7               	movf	(write_char@pos)^080h,w
  3692  0DE8  0830               	movwf	(write_font@fontPos)^080h
  3693  0DE9  00A6               	fcall	_write_font
  3694  0DEA  120A  158A  254F  120A  158A  	line	225
  3695                           ;Display.c: 225:     } else if (c >= 97 && c <= 122) {
  3696                           	goto	l182
  3697  0DEF  2E12               	
  3698                           l178:	
  3699  0DF0                     	
  3700                           l2086:	
  3701  0DF0                     	movlw	low(061h)
  3702  0DF0  3061               	bsf	status, 5	;RP0=1, select bank1
  3703  0DF1  1683               	bcf	status, 6	;RP1=0, select bank1
  3704  0DF2  1303               	subwf	(write_char@c)^080h,w
  3705  0DF3  0232               	skipc
  3706  0DF4  1C03               	goto	u1691
  3707  0DF5  2DF7               	goto	u1690
  3708  0DF6  2DF8               u1691:
  3709  0DF7                     	goto	l182
  3710  0DF7  2E12               u1690:
  3711  0DF8                     	
  3712                           l2088:	
  3713  0DF8                     	movlw	low(07Bh)
  3714  0DF8  307B               	subwf	(write_char@c)^080h,w
  3715  0DF9  0232               	skipnc
  3716  0DFA  1803               	goto	u1701
  3717  0DFB  2DFD               	goto	u1700
  3718  0DFC  2DFE               u1701:
  3719  0DFD                     	goto	l182
  3720  0DFD  2E12               u1700:
  3721  0DFE                     	line	226
  3722                           	
  3723                           l2090:	
  3724  0DFE                     ;Display.c: 226:         pos = (c - 97) + 10;
  3725                           	movf	(write_char@c)^080h,w
  3726  0DFE  0832               	addlw	low(-87)
  3727  0DFF  3EA9               	movwf	(write_char@pos)^080h
  3728  0E00  00B0               	movlw	high(-87)
  3729  0E01  30FF               	skipnc
  3730  0E02  1803               	movlw	(high(-87)+1)&0ffh
  3731  0E03  3000               	movwf	((write_char@pos)^080h)+1
  3732  0E04  00B1               	line	227
  3733                           	
  3734                           l2092:	
  3735  0E05                     ;Display.c: 227:         write_font(pos);
  3736                           	movf	(write_char@pos+1)^080h,w
  3737  0E05  0831               	movwf	(write_font@fontPos+1)^080h
  3738  0E06  00A7               	movf	(write_char@pos)^080h,w
  3739  0E07  0830               	movwf	(write_font@fontPos)^080h
  3740  0E08  00A6               	fcall	_write_font
  3741  0E09  120A  158A  254F  120A  158A  	line	228
  3742                           ;Display.c: 228:     } else {
  3743                           	goto	l182
  3744  0E0E  2E12               	
  3745                           l180:	
  3746  0E0F                     	goto	l182
  3747  0E0F  2E12               	line	231
  3748                           ;Display.c: 231:     }
  3749                           	
  3750                           l181:	
  3751  0E10                     	goto	l182
  3752  0E10  2E12               	
  3753                           l179:	
  3754  0E11                     	goto	l182
  3755  0E11  2E12               	
  3756                           l177:	
  3757  0E12                     	line	232
  3758                           	
  3759                           l182:	
  3760  0E12                     	return
  3761  0E12  0008               	opt stack 0
  3762                           GLOBAL	__end_of_write_char
  3763                           	__end_of_write_char:
  3764  0E13                     	signat	_write_char,4217
  3765                           	global	_write_font
  3766                           
  3767 ;; *************** function _write_font *****************
  3768 ;; Defined at:
  3769 ;;		line 234 in file "Display.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  fontPos         2    6[BANK1 ] int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  x               2   14[BANK1 ] int 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       0       2       0       0
  3784 ;;      Locals:         0       0       2       0       0
  3785 ;;      Temps:          0       0       6       0       0
  3786 ;;      Totals:         0       0      10       0       0
  3787 ;;Total ram usage:       10 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    5
  3790 ;; This function calls:
  3791 ;;		___wmul
  3792 ;;		_spiWrite
  3793 ;; This function is called by:
  3794 ;;		_write_char
  3795 ;; This function uses a non-reentrant model
  3796 ;;
  3797                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3798                           	line	234
  3799                           global __ptext7
  3800                           __ptext7:	;psect for function _write_font
  3801  0D4F                     psect	text7
  3802                           	file	"Display.c"
  3803                           	line	234
  3804                           	global	__size_of_write_font
  3805                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  3806  0062                     	
  3807                           _write_font:	
  3808  0D4F                     ;incstack = 0
  3809 ;; hardware stack exceeded
  3810                           	opt	stack 0
  3811                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3812                           	line	237
  3813                           	
  3814                           l2058:	
  3815  0D4F                     ;Display.c: 234: void write_font(int fontPos);Display.c: 235: {;Display.c: 237:     for(
                                 int x=0; x < 5; x++){
  3816                           	bsf	status, 5	;RP0=1, select bank1
  3817  0D4F  1683               	bcf	status, 6	;RP1=0, select bank1
  3818  0D50  1303               	clrf	(write_font@x)^080h
  3819  0D51  01AE               	clrf	(write_font@x+1)^080h
  3820  0D52  01AF               	
  3821                           l2060:	
  3822  0D53                     	movf	(write_font@x+1)^080h,w
  3823  0D53  082F               	xorlw	80h
  3824  0D54  3A80               	movwf	btemp+1
  3825  0D55  00FF               	movlw	(0)^80h
  3826  0D56  3080               	subwf	btemp+1,w
  3827  0D57  027F               	skipz
  3828  0D58  1D03               	goto	u1635
  3829  0D59  2D5C               	movlw	05h
  3830  0D5A  3005               	subwf	(write_font@x)^080h,w
  3831  0D5B  022E               u1635:
  3832  0D5C                     
  3833                           	skipc
  3834  0D5C  1C03               	goto	u1631
  3835  0D5D  2D5F               	goto	u1630
  3836  0D5E  2D60               u1631:
  3837  0D5F                     	goto	l2064
  3838  0D5F  2D62               u1630:
  3839  0D60                     	goto	l187
  3840  0D60  2DB0               	
  3841                           l2062:	
  3842  0D61                     	goto	l187
  3843  0D61  2DB0               	
  3844                           l185:	
  3845  0D62                     	line	238
  3846                           	
  3847                           l2064:	
  3848  0D62                     ;Display.c: 238:         spiWrite(font[fontPos][x]);
  3849                           	bsf	status, 5	;RP0=1, select bank1
  3850  0D62  1683               	bcf	status, 6	;RP1=0, select bank1
  3851  0D63  1303               	movf	(write_font@x+1)^080h,w
  3852  0D64  082F               	movwf	(??_write_font+0)^080h+0+1
  3853  0D65  00A9               	movf	(write_font@x)^080h,w
  3854  0D66  082E               	movwf	(??_write_font+0)^080h+0
  3855  0D67  00A8               	clrc
  3856  0D68  1003               	rlf	(??_write_font+0)^080h+0,f
  3857  0D69  0DA8               	rlf	(??_write_font+0)^080h+1,f
  3858  0D6A  0DA9               	movf	(write_font@fontPos+1)^080h,w
  3859  0D6B  0827               	movwf	(___wmul@multiplier+1)^080h
  3860  0D6C  00A1               	movf	(write_font@fontPos)^080h,w
  3861  0D6D  0826               	movwf	(___wmul@multiplier)^080h
  3862  0D6E  00A0               	movlw	0Ah
  3863  0D6F  300A               	movwf	(___wmul@multiplicand)^080h
  3864  0D70  00A2               	movlw	0
  3865  0D71  3000               	movwf	((___wmul@multiplicand)^080h)+1
  3866  0D72  00A3               	fcall	___wmul
  3867  0D73  120A  158A  219F  120A  158A  	movlw	low(((_font)|8000h))
  3868  0D78  3012               	bsf	status, 5	;RP0=1, select bank1
  3869  0D79  1683               	bcf	status, 6	;RP1=0, select bank1
  3870  0D7A  1303               	movwf	(??_write_font+2)^080h+0
  3871  0D7B  00AA               	movlw	high(((_font)|8000h))
  3872  0D7C  3083               	movwf	(??_write_font+2)^080h+0+1
  3873  0D7D  00AB               	movf	(0+(?___wmul))^080h,w
  3874  0D7E  0820               	addwf	0+(??_write_font+2)^080h+0,w
  3875  0D7F  072A               	movwf	(??_write_font+4)^080h+0
  3876  0D80  00AC               	movf	(1+(?___wmul))^080h,w
  3877  0D81  0821               	skipnc
  3878  0D82  1803               	incf	(1+(?___wmul))^080h,w
  3879  0D83  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  3880  0D84  072B               	movwf	1+(??_write_font+4)^080h+0
  3881  0D85  00AD               	movf	0+(??_write_font+0)^080h+0,w
  3882  0D86  0828               	addwf	0+(??_write_font+4)^080h+0,w
  3883  0D87  072C               	movwf	fsr0
  3884  0D88  0084               	movf	1+(??_write_font+0)^080h+0,w
  3885  0D89  0829               	skipnc
  3886  0D8A  1803               	incf	1+(??_write_font+0)^080h+0,w
  3887  0D8B  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  3888  0D8C  072D               	bcf	status, 5	;RP0=0, select bank0
  3889  0D8D  1283               	bcf	status, 6	;RP1=0, select bank0
  3890  0D8E  1303               	movwf	btemp+1
  3891  0D8F  00FF               	fcall	stringtab
  3892  0D90  120A  118A  2300  120A  158A  	fcall	_spiWrite
  3893  0D95  120A  158A  2150  120A  158A  	line	239
  3894                           	
  3895                           l2066:	
  3896  0D9A                     ;Display.c: 239:     }
  3897                           	movlw	01h
  3898  0D9A  3001               	bsf	status, 5	;RP0=1, select bank1
  3899  0D9B  1683               	bcf	status, 6	;RP1=0, select bank1
  3900  0D9C  1303               	addwf	(write_font@x)^080h,f
  3901  0D9D  07AE               	skipnc
  3902  0D9E  1803               	incf	(write_font@x+1)^080h,f
  3903  0D9F  0AAF               	movlw	0
  3904  0DA0  3000               	addwf	(write_font@x+1)^080h,f
  3905  0DA1  07AF               	
  3906                           l2068:	
  3907  0DA2                     	movf	(write_font@x+1)^080h,w
  3908  0DA2  082F               	xorlw	80h
  3909  0DA3  3A80               	movwf	btemp+1
  3910  0DA4  00FF               	movlw	(0)^80h
  3911  0DA5  3080               	subwf	btemp+1,w
  3912  0DA6  027F               	skipz
  3913  0DA7  1D03               	goto	u1645
  3914  0DA8  2DAB               	movlw	05h
  3915  0DA9  3005               	subwf	(write_font@x)^080h,w
  3916  0DAA  022E               u1645:
  3917  0DAB                     
  3918                           	skipc
  3919  0DAB  1C03               	goto	u1641
  3920  0DAC  2DAE               	goto	u1640
  3921  0DAD  2DAF               u1641:
  3922  0DAE                     	goto	l2064
  3923  0DAE  2D62               u1640:
  3924  0DAF                     	goto	l187
  3925  0DAF  2DB0               	
  3926                           l186:	
  3927  0DB0                     	line	243
  3928                           	
  3929                           l187:	
  3930  0DB0                     	return
  3931  0DB0  0008               	opt stack 0
  3932                           GLOBAL	__end_of_write_font
  3933                           	__end_of_write_font:
  3934  0DB1                     	signat	_write_font,4217
  3935                           	global	___wmul
  3936                           
  3937 ;; *************** function ___wmul *****************
  3938 ;; Defined at:
  3939 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  multiplier      2    0[BANK1 ] unsigned int 
  3942 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;  product         2    4[BANK1 ] unsigned int 
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  2    0[BANK1 ] unsigned int 
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         0       0       4       0       0
  3955 ;;      Locals:         0       0       2       0       0
  3956 ;;      Temps:          0       0       0       0       0
  3957 ;;      Totals:         0       0       6       0       0
  3958 ;;Total ram usage:        6 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    4
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_write_font
  3965 ;;		_write_volume
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3969                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  3970                           	line	15
  3971                           global __ptext8
  3972                           __ptext8:	;psect for function ___wmul
  3973  099F                     psect	text8
  3974                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  3975                           	line	15
  3976                           	global	__size_of___wmul
  3977                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3978  002A                     	
  3979                           ___wmul:	
  3980  099F                     ;incstack = 0
  3981 ;; hardware stack exceeded
  3982                           	opt	stack 0
  3983                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3984                           	line	43
  3985                           	
  3986                           l2044:	
  3987  099F                     	bsf	status, 5	;RP0=1, select bank1
  3988  099F  1683               	bcf	status, 6	;RP1=0, select bank1
  3989  09A0  1303               	clrf	(___wmul@product)^080h
  3990  09A1  01A4               	clrf	(___wmul@product+1)^080h
  3991  09A2  01A5               	goto	l2046
  3992  09A3  29A4               	line	44
  3993                           	
  3994                           l498:	
  3995  09A4                     	line	45
  3996                           	
  3997                           l2046:	
  3998  09A4                     	btfss	(___wmul@multiplier)^080h,(0)&7
  3999  09A4  1C20               	goto	u1591
  4000  09A5  29A7               	goto	u1590
  4001  09A6  29A8               u1591:
  4002  09A7                     	goto	l499
  4003  09A7  29AE               u1590:
  4004  09A8                     	line	46
  4005                           	
  4006                           l2048:	
  4007  09A8                     	movf	(___wmul@multiplicand)^080h,w
  4008  09A8  0822               	addwf	(___wmul@product)^080h,f
  4009  09A9  07A4               	skipnc
  4010  09AA  1803               	incf	(___wmul@product+1)^080h,f
  4011  09AB  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  4012  09AC  0823               	addwf	(___wmul@product+1)^080h,f
  4013  09AD  07A5               	
  4014                           l499:	
  4015  09AE                     	line	47
  4016                           	movlw	01h
  4017  09AE  3001               	
  4018                           u1605:
  4019  09AF                     	clrc
  4020  09AF  1003               	rlf	(___wmul@multiplicand)^080h,f
  4021  09B0  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  4022  09B1  0DA3               	addlw	-1
  4023  09B2  3EFF               	skipz
  4024  09B3  1D03               	goto	u1605
  4025  09B4  29AF               	line	48
  4026                           	
  4027                           l2050:	
  4028  09B5                     	movlw	01h
  4029  09B5  3001               	
  4030                           u1615:
  4031  09B6                     	clrc
  4032  09B6  1003               	rrf	(___wmul@multiplier+1)^080h,f
  4033  09B7  0CA1               	rrf	(___wmul@multiplier)^080h,f
  4034  09B8  0CA0               	addlw	-1
  4035  09B9  3EFF               	skipz
  4036  09BA  1D03               	goto	u1615
  4037  09BB  29B6               	line	49
  4038                           	
  4039                           l2052:	
  4040  09BC                     	movf	((___wmul@multiplier)^080h),w
  4041  09BC  0820               iorwf	((___wmul@multiplier+1)^080h),w
  4042  09BD  0421               	btfss	status,2
  4043  09BE  1D03               	goto	u1621
  4044  09BF  29C1               	goto	u1620
  4045  09C0  29C2               u1621:
  4046  09C1                     	goto	l2046
  4047  09C1  29A4               u1620:
  4048  09C2                     	goto	l2054
  4049  09C2  29C3               	
  4050                           l500:	
  4051  09C3                     	line	52
  4052                           	
  4053                           l2054:	
  4054  09C3                     	movf	(___wmul@product+1)^080h,w
  4055  09C3  0825               	movwf	(?___wmul+1)^080h
  4056  09C4  00A1               	movf	(___wmul@product)^080h,w
  4057  09C5  0824               	movwf	(?___wmul)^080h
  4058  09C6  00A0               	goto	l501
  4059  09C7  29C8               	
  4060                           l2056:	
  4061  09C8                     	line	53
  4062                           	
  4063                           l501:	
  4064  09C8                     	return
  4065  09C8  0008               	opt stack 0
  4066                           GLOBAL	__end_of___wmul
  4067                           	__end_of___wmul:
  4068  09C9                     	signat	___wmul,8314
  4069                           	global	_sprintf
  4070                           
  4071 ;; *************** function _sprintf *****************
  4072 ;; Defined at:
  4073 ;;		line 500 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  sp              1    wreg     PTR unsigned char 
  4076 ;;		 -> write_int@num(2), 
  4077 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4078 ;;		 -> STR_3(3), 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  4081 ;;		 -> write_int@num(2), 
  4082 ;;  tmpval          4    0        struct .
  4083 ;;  val             2   25[BANK1 ] unsigned int 
  4084 ;;  cp              2    0        PTR const unsigned char 
  4085 ;;  len             2    0        unsigned int 
  4086 ;;  c               1   28[BANK1 ] unsigned char 
  4087 ;;  prec            1   24[BANK1 ] char 
  4088 ;;  flag            1   23[BANK1 ] unsigned char 
  4089 ;;  ap              1   22[BANK1 ] PTR void [1]
  4090 ;;		 -> ?_sprintf(2), 
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  2   14[BANK1 ] int 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4100 ;;      Params:         0       0       4       0       0
  4101 ;;      Locals:         0       0       7       0       0
  4102 ;;      Temps:          0       0       4       0       0
  4103 ;;      Totals:         0       0      15       0       0
  4104 ;;Total ram usage:       15 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    5
  4107 ;; This function calls:
  4108 ;;		___lwdiv
  4109 ;;		___lwmod
  4110 ;; This function is called by:
  4111 ;;		_write_int
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4115                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4116                           	line	500
  4117                           global __ptext9
  4118                           __ptext9:	;psect for function _sprintf
  4119  049D                     psect	text9
  4120                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4121                           	line	500
  4122                           	global	__size_of_sprintf
  4123                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4124  0136                     	
  4125                           _sprintf:	
  4126  049D                     ;incstack = 0
  4127 ;; using string table level
  4128                           	opt	stack 1
  4129                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4130                           ;sprintf@sp stored from wreg
  4131                           	bsf	status, 5	;RP0=1, select bank1
  4132  049D  1683               	bcf	status, 6	;RP1=0, select bank1
  4133  049E  1303               	movwf	(sprintf@sp)^080h
  4134  049F  00BB               	line	545
  4135                           	
  4136                           l2150:	
  4137  04A0                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
                                  char * f, ...);/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
                                 crochip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.00/pic/source
                                 s/c90/common/doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.00/pic/sources/c90/
                                 common/doprnt.c: 520:  unsigned char flag;;/opt/microchip/xc8/v2.00/pic/sources/c90/comm
                                 on/doprnt.c: 538:  } tmpval;
  4138                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  4139  04A0  30B0               	movwf	(??_sprintf+0)^080h+0
  4140  04A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4141  04A2  0832               	movwf	(sprintf@ap)^080h
  4142  04A3  00B6               	line	548
  4143                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4144                           	goto	l2202
  4145  04A4  2DAB               	
  4146                           l477:	
  4147  04A5                     	line	550
  4148                           	
  4149                           l2152:	
  4150  04A5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  4151                           		movlw	37
  4152  04A5  3025               	xorwf	((sprintf@c)^080h),w
  4153  04A6  063C               	btfsc	status,2
  4154  04A7  1903               	goto	u1851
  4155  04A8  2CAA               	goto	u1850
  4156  04A9  2CAB               u1851:
  4157  04AA                     	goto	l2158
  4158  04AA  2CB7               u1850:
  4159  04AB                     	line	553
  4160                           	
  4161                           l2154:	
  4162  04AB                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
                                 2.00/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  4163                           	movf	(sprintf@c)^080h,w
  4164  04AB  083C               	movwf	(??_sprintf+0)^080h+0
  4165  04AC  00B2               	movf	(sprintf@sp)^080h,w
  4166  04AD  083B               	movwf	fsr0
  4167  04AE  0084               	movf	(??_sprintf+0)^080h+0,w
  4168  04AF  0832               	bcf	status, 7	;select IRP bank0
  4169  04B0  1383               	movwf	indf
  4170  04B1  0080               	
  4171                           l2156:	
  4172  04B2                     	movlw	low(01h)
  4173  04B2  3001               	movwf	(??_sprintf+0)^080h+0
  4174  04B3  00B2               	movf	(??_sprintf+0)^080h+0,w
  4175  04B4  0832               	addwf	(sprintf@sp)^080h,f
  4176  04B5  07BB               	line	554
  4177                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 554:    continue;
  4178                           	goto	l2202
  4179  04B6  2DAB               	line	555
  4180                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 555:   }
  4181                           	
  4182                           l478:	
  4183  04B7                     	line	560
  4184                           	
  4185                           l2158:	
  4186  04B7                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  4187                           	clrf	(sprintf@flag)^080h
  4188  04B7  01B7               	line	654
  4189                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 654:   switch(c = *f++) {
  4190                           	goto	l2162
  4191  04B8  2CBE               	line	656
  4192                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 656:   case 0:
  4193                           	
  4194                           l480:	
  4195  04B9                     	line	657
  4196                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 657:    goto alldone;
  4197                           	goto	l2204
  4198  04B9  2DCD               	line	716
  4199                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 716:   case 'd':
  4200                           	
  4201                           l482:	
  4202  04BA                     	goto	l2164
  4203  04BA  2CE9               	line	717
  4204                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 717:   case 'i':
  4205                           	
  4206                           l483:	
  4207  04BB                     	line	718
  4208                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 718:    break;
  4209                           	goto	l2164
  4210  04BB  2CE9               	line	821
  4211                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 821:   default:
  4212                           	
  4213                           l485:	
  4214  04BC                     	line	832
  4215                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 832:    continue;
  4216                           	goto	l2202
  4217  04BC  2DAB               	line	841
  4218                           	
  4219                           l2160:	
  4220  04BD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 841:   }
  4221                           	goto	l2164
  4222  04BD  2CE9               	
  4223                           l479:	
  4224  04BE                     	
  4225                           l2162:	
  4226  04BE                     	movf	(sprintf@f+1)^080h,w
  4227  04BE  082F               	movwf	(??_sprintf+0)^080h+0+1
  4228  04BF  00B3               	movf	(sprintf@f)^080h,w
  4229  04C0  082E               	movwf	(??_sprintf+0)^080h+0
  4230  04C1  00B2               	incf	(sprintf@f)^080h,f
  4231  04C2  0AAE               	skipnz
  4232  04C3  1903               	incf	(sprintf@f+1)^080h,f
  4233  04C4  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4234  04C5  0833               	bcf	status, 5	;RP0=0, select bank0
  4235  04C6  1283               	bcf	status, 6	;RP1=0, select bank0
  4236  04C7  1303               	movwf	btemp+1
  4237  04C8  00FF               	bsf	status, 5	;RP0=1, select bank1
  4238  04C9  1683               	bcf	status, 6	;RP1=0, select bank1
  4239  04CA  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4240  04CB  0832               	movwf	fsr0
  4241  04CC  0084               	bcf	status, 5	;RP0=0, select bank0
  4242  04CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4243  04CE  1303               	fcall	stringtab
  4244  04CF  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4245  04D4  1683               	bcf	status, 6	;RP1=0, select bank1
  4246  04D5  1303               	movwf	(sprintf@c)^080h
  4247  04D6  00BC               	movwf	(??_sprintf+2)^080h+0
  4248  04D7  00B4               	clrf	(??_sprintf+2)^080h+0+1
  4249  04D8  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4250                           ; Switch size 1, requested type "space"
  4251                           ; Number of cases is 1, Range of values is 0 to 0
  4252                           ; switch strategies available:
  4253                           ; Name         Instructions Cycles
  4254                           ; simple_byte            4     3 (average)
  4255                           ; direct_byte           11     8 (fixed)
  4256                           ; jumptable            260     6 (fixed)
  4257                           ;	Chosen strategy is simple_byte
  4258                           
  4259                           	movf 1+(??_sprintf+2)^080h+0,w
  4260  04D9  0835               	opt asmopt_push
  4261                           	opt asmopt_off
  4262                           	xorlw	0^0	; case 0
  4263  04DA  3A00               	skipnz
  4264  04DB  1903               	goto	l3074
  4265  04DC  2CDE               	goto	l2202
  4266  04DD  2DAB               	opt asmopt_pop
  4267                           	
  4268                           l3074:	
  4269  04DE                     ; Switch size 1, requested type "space"
  4270                           ; Number of cases is 3, Range of values is 0 to 105
  4271                           ; switch strategies available:
  4272                           ; Name         Instructions Cycles
  4273                           ; simple_byte           10     6 (average)
  4274                           ; jumptable            260     6 (fixed)
  4275                           ;	Chosen strategy is simple_byte
  4276                           
  4277                           	movf 0+(??_sprintf+2)^080h+0,w
  4278  04DE  0834               	opt asmopt_push
  4279                           	opt asmopt_off
  4280                           	xorlw	0^0	; case 0
  4281  04DF  3A00               	skipnz
  4282  04E0  1903               	goto	l2204
  4283  04E1  2DCD               	xorlw	100^0	; case 100
  4284  04E2  3A64               	skipnz
  4285  04E3  1903               	goto	l2164
  4286  04E4  2CE9               	xorlw	105^100	; case 105
  4287  04E5  3A0D               	skipnz
  4288  04E6  1903               	goto	l2164
  4289  04E7  2CE9               	goto	l2202
  4290  04E8  2DAB               	opt asmopt_pop
  4291                           
  4292                           	
  4293                           l484:	
  4294  04E9                     	line	1278
  4295                           	
  4296                           l2164:	
  4297  04E9                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
                                 ap), (int)0));
  4298                           	movf	(sprintf@ap)^080h,w
  4299  04E9  0836               	movwf	fsr0
  4300  04EA  0084               	bcf	status, 7	;select IRP bank0
  4301  04EB  1383               	movf	indf,w
  4302  04EC  0800               	movwf	(sprintf@val)^080h
  4303  04ED  00B9               	incf	fsr0,f
  4304  04EE  0A84               	movf	indf,w
  4305  04EF  0800               	movwf	(sprintf@val+1)^080h
  4306  04F0  00BA               	
  4307                           l2166:	
  4308  04F1                     	movlw	low(02h)
  4309  04F1  3002               	movwf	(??_sprintf+0)^080h+0
  4310  04F2  00B2               	movf	(??_sprintf+0)^080h+0,w
  4311  04F3  0832               	addwf	(sprintf@ap)^080h,f
  4312  04F4  07B6               	line	1280
  4313                           	
  4314                           l2168:	
  4315  04F5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  4316                           	btfss	(sprintf@val+1)^080h,7
  4317  04F5  1FBA               	goto	u1861
  4318  04F6  2CF8               	goto	u1860
  4319  04F7  2CF9               u1861:
  4320  04F8                     	goto	l2174
  4321  04F8  2D03               u1860:
  4322  04F9                     	line	1281
  4323                           	
  4324                           l2170:	
  4325  04F9                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  4326                           	movlw	low(03h)
  4327  04F9  3003               	movwf	(??_sprintf+0)^080h+0
  4328  04FA  00B2               	movf	(??_sprintf+0)^080h+0,w
  4329  04FB  0832               	iorwf	(sprintf@flag)^080h,f
  4330  04FC  04B7               	line	1282
  4331                           	
  4332                           l2172:	
  4333  04FD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  4334                           	comf	(sprintf@val)^080h,f
  4335  04FD  09B9               	comf	(sprintf@val+1)^080h,f
  4336  04FE  09BA               	incf	(sprintf@val)^080h,f
  4337  04FF  0AB9               	skipnz
  4338  0500  1903               	incf	(sprintf@val+1)^080h,f
  4339  0501  0ABA               	goto	l2174
  4340  0502  2D03               	line	1283
  4341                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1283:    }
  4342                           	
  4343                           l486:	
  4344  0503                     	line	1324
  4345                           	
  4346                           l2174:	
  4347  0503                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
                                 powers[0] ; c++)
  4348                           	clrf	(sprintf@c)^080h
  4349  0503  01BC               	incf	(sprintf@c)^080h,f
  4350  0504  0ABC               	
  4351                           l2176:	
  4352  0505                     		movlw	5
  4353  0505  3005               	xorwf	((sprintf@c)^080h),w
  4354  0506  063C               	btfss	status,2
  4355  0507  1D03               	goto	u1871
  4356  0508  2D0A               	goto	u1870
  4357  0509  2D0B               u1871:
  4358  050A                     	goto	l2180
  4359  050A  2D0D               u1870:
  4360  050B                     	goto	l2186
  4361  050B  2D41               	
  4362                           l2178:	
  4363  050C                     	goto	l2186
  4364  050C  2D41               	
  4365                           l487:	
  4366  050D                     	line	1325
  4367                           	
  4368                           l2180:	
  4369  050D                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
                                 )
  4370                           	movf	(sprintf@c)^080h,w
  4371  050D  083C               	movwf	(??_sprintf+0)^080h+0
  4372  050E  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4373  050F  0732               	addlw	low(((_dpowers)|8000h))
  4374  0510  3E84               	movwf	fsr0
  4375  0511  0084               	movlw	high(((_dpowers)|8000h))
  4376  0512  3084               	skipnc
  4377  0513  1803               	addlw	1
  4378  0514  3E01               	bcf	status, 5	;RP0=0, select bank0
  4379  0515  1283               	bcf	status, 6	;RP1=0, select bank0
  4380  0516  1303               	movwf	btemp+1
  4381  0517  00FF               	fcall	stringtab
  4382  0518  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4383  051D  1683               	bcf	status, 6	;RP1=0, select bank1
  4384  051E  1303               	movwf	(??_sprintf+1)^080h+0
  4385  051F  00B3               	bcf	status, 5	;RP0=0, select bank0
  4386  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  4387  0521  1303               	fcall	stringtab
  4388  0522  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4389  0527  1683               	bcf	status, 6	;RP1=0, select bank1
  4390  0528  1303               	movwf	(??_sprintf+1)^080h+0+1
  4391  0529  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  4392  052A  0834               	subwf	(sprintf@val+1)^080h,w
  4393  052B  023A               	skipz
  4394  052C  1D03               	goto	u1885
  4395  052D  2D30               	movf	0+(??_sprintf+1)^080h+0,w
  4396  052E  0833               	subwf	(sprintf@val)^080h,w
  4397  052F  0239               u1885:
  4398  0530                     	skipnc
  4399  0530  1803               	goto	u1881
  4400  0531  2D33               	goto	u1880
  4401  0532  2D34               u1881:
  4402  0533                     	goto	l2184
  4403  0533  2D36               u1880:
  4404  0534                     	goto	l2186
  4405  0534  2D41               	line	1326
  4406                           	
  4407                           l2182:	
  4408  0535                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1326:      break;
  4409                           	goto	l2186
  4410  0535  2D41               	
  4411                           l489:	
  4412  0536                     	
  4413                           l2184:	
  4414  0536                     	movlw	low(01h)
  4415  0536  3001               	movwf	(??_sprintf+0)^080h+0
  4416  0537  00B2               	movf	(??_sprintf+0)^080h+0,w
  4417  0538  0832               	addwf	(sprintf@c)^080h,f
  4418  0539  07BC               		movlw	5
  4419  053A  3005               	xorwf	((sprintf@c)^080h),w
  4420  053B  063C               	btfss	status,2
  4421  053C  1D03               	goto	u1891
  4422  053D  2D3F               	goto	u1890
  4423  053E  2D40               u1891:
  4424  053F                     	goto	l2180
  4425  053F  2D0D               u1890:
  4426  0540                     	goto	l2186
  4427  0540  2D41               	
  4428                           l488:	
  4429  0541                     	line	1457
  4430                           	
  4431                           l2186:	
  4432  0541                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  4433                           	movf	(sprintf@flag)^080h,w
  4434  0541  0837               	andlw	03h
  4435  0542  3903               	btfsc	status,2
  4436  0543  1903               	goto	u1901
  4437  0544  2D46               	goto	u1900
  4438  0545  2D47               u1901:
  4439  0546                     	goto	l2192
  4440  0546  2D53               u1900:
  4441  0547                     	line	1458
  4442                           	
  4443                           l2188:	
  4444  0547                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));

  4445                           	movlw	low(02Dh)
  4446  0547  302D               	movwf	(??_sprintf+0)^080h+0
  4447  0548  00B2               	movf	(sprintf@sp)^080h,w
  4448  0549  083B               	movwf	fsr0
  4449  054A  0084               	movf	(??_sprintf+0)^080h+0,w
  4450  054B  0832               	bcf	status, 7	;select IRP bank0
  4451  054C  1383               	movwf	indf
  4452  054D  0080               	
  4453                           l2190:	
  4454  054E                     	movlw	low(01h)
  4455  054E  3001               	movwf	(??_sprintf+0)^080h+0
  4456  054F  00B2               	movf	(??_sprintf+0)^080h+0,w
  4457  0550  0832               	addwf	(sprintf@sp)^080h,f
  4458  0551  07BB               	goto	l2192
  4459  0552  2D53               	
  4460                           l490:	
  4461  0553                     	line	1491
  4462                           	
  4463                           l2192:	
  4464  0553                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  4465                           	movf	(sprintf@c)^080h,w
  4466  0553  083C               	movwf	(??_sprintf+0)^080h+0
  4467  0554  00B2               	movf	(??_sprintf+0)^080h+0,w
  4468  0555  0832               	movwf	(sprintf@prec)^080h
  4469  0556  00B8               	line	1493
  4470                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4471                           	goto	l2200
  4472  0557  2DA0               	
  4473                           l492:	
  4474  0558                     	line	1508
  4475                           	
  4476                           l2194:	
  4477  0558                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';

  4478                           	movlw	0Ah
  4479  0558  300A               	movwf	(___lwmod@divisor)^080h
  4480  0559  00A8               	movlw	0
  4481  055A  3000               	movwf	((___lwmod@divisor)^080h)+1
  4482  055B  00A9               	movf	(sprintf@prec)^080h,w
  4483  055C  0838               	movwf	(??_sprintf+0)^080h+0
  4484  055D  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4485  055E  0732               	addlw	low(((_dpowers)|8000h))
  4486  055F  3E84               	movwf	fsr0
  4487  0560  0084               	movlw	high(((_dpowers)|8000h))
  4488  0561  3084               	skipnc
  4489  0562  1803               	addlw	1
  4490  0563  3E01               	bcf	status, 5	;RP0=0, select bank0
  4491  0564  1283               	bcf	status, 6	;RP1=0, select bank0
  4492  0565  1303               	movwf	btemp+1
  4493  0566  00FF               	fcall	stringtab
  4494  0567  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4495  056C  1683               	bcf	status, 6	;RP1=0, select bank1
  4496  056D  1303               	movwf	(___lwdiv@divisor)^080h
  4497  056E  00A0               	bcf	status, 5	;RP0=0, select bank0
  4498  056F  1283               	bcf	status, 6	;RP1=0, select bank0
  4499  0570  1303               	fcall	stringtab
  4500  0571  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4501  0576  1683               	bcf	status, 6	;RP1=0, select bank1
  4502  0577  1303               	movwf	(___lwdiv@divisor+1)^080h
  4503  0578  00A1               	movf	(sprintf@val+1)^080h,w
  4504  0579  083A               	movwf	(___lwdiv@dividend+1)^080h
  4505  057A  00A3               	movf	(sprintf@val)^080h,w
  4506  057B  0839               	movwf	(___lwdiv@dividend)^080h
  4507  057C  00A2               	fcall	___lwdiv
  4508  057D  120A  158A  2408  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4509  0582  1683               	bcf	status, 6	;RP1=0, select bank1
  4510  0583  1303               	movf	(1+(?___lwdiv))^080h,w
  4511  0584  0821               	movwf	(___lwmod@dividend+1)^080h
  4512  0585  00AB               	movf	(0+(?___lwdiv))^080h,w
  4513  0586  0820               	movwf	(___lwmod@dividend)^080h
  4514  0587  00AA               	fcall	___lwmod
  4515  0588  120A  158A  22E8  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4516  058D  1683               	bcf	status, 6	;RP1=0, select bank1
  4517  058E  1303               	movf	(0+(?___lwmod))^080h,w
  4518  058F  0828               	addlw	030h
  4519  0590  3E30               	movwf	(??_sprintf+1)^080h+0
  4520  0591  00B3               	movf	(??_sprintf+1)^080h+0,w
  4521  0592  0833               	movwf	(sprintf@c)^080h
  4522  0593  00BC               	line	1543
  4523                           	
  4524                           l2196:	
  4525  0594                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  4526                           	movf	(sprintf@c)^080h,w
  4527  0594  083C               	movwf	(??_sprintf+0)^080h+0
  4528  0595  00B2               	movf	(sprintf@sp)^080h,w
  4529  0596  083B               	movwf	fsr0
  4530  0597  0084               	movf	(??_sprintf+0)^080h+0,w
  4531  0598  0832               	bcf	status, 7	;select IRP bank0
  4532  0599  1383               	movwf	indf
  4533  059A  0080               	
  4534                           l2198:	
  4535  059B                     	movlw	low(01h)
  4536  059B  3001               	movwf	(??_sprintf+0)^080h+0
  4537  059C  00B2               	movf	(??_sprintf+0)^080h+0,w
  4538  059D  0832               	addwf	(sprintf@sp)^080h,f
  4539  059E  07BB               	goto	l2200
  4540  059F  2DA0               	line	1544
  4541                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1544:   }
  4542                           	
  4543                           l491:	
  4544  05A0                     	line	1493
  4545                           	
  4546                           l2200:	
  4547  05A0                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4548                           	movlw	low(-1)
  4549  05A0  30FF               	movwf	(??_sprintf+0)^080h+0
  4550  05A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4551  05A2  0832               	addwf	(sprintf@prec)^080h,f
  4552  05A3  07B8               		incf	(((sprintf@prec)^080h)),w
  4553  05A4  0A38               	btfss	status,2
  4554  05A5  1D03               	goto	u1911
  4555  05A6  2DA8               	goto	u1910
  4556  05A7  2DA9               u1911:
  4557  05A8                     	goto	l2194
  4558  05A8  2D58               u1910:
  4559  05A9                     	goto	l2202
  4560  05A9  2DAB               	
  4561                           l493:	
  4562  05AA                     	goto	l2202
  4563  05AA  2DAB               	line	1552
  4564                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1552:  }
  4565                           	
  4566                           l476:	
  4567  05AB                     	line	548
  4568                           	
  4569                           l2202:	
  4570  05AB                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4571                           	movf	(sprintf@f+1)^080h,w
  4572  05AB  082F               	movwf	(??_sprintf+0)^080h+0+1
  4573  05AC  00B3               	movf	(sprintf@f)^080h,w
  4574  05AD  082E               	movwf	(??_sprintf+0)^080h+0
  4575  05AE  00B2               	incf	(sprintf@f)^080h,f
  4576  05AF  0AAE               	skipnz
  4577  05B0  1903               	incf	(sprintf@f+1)^080h,f
  4578  05B1  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4579  05B2  0833               	bcf	status, 5	;RP0=0, select bank0
  4580  05B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4581  05B4  1303               	movwf	btemp+1
  4582  05B5  00FF               	bsf	status, 5	;RP0=1, select bank1
  4583  05B6  1683               	bcf	status, 6	;RP1=0, select bank1
  4584  05B7  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4585  05B8  0832               	movwf	fsr0
  4586  05B9  0084               	bcf	status, 5	;RP0=0, select bank0
  4587  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4588  05BB  1303               	fcall	stringtab
  4589  05BC  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4590  05C1  1683               	bcf	status, 6	;RP1=0, select bank1
  4591  05C2  1303               	movwf	(??_sprintf+2)^080h+0
  4592  05C3  00B4               	movf	(??_sprintf+2)^080h+0,w
  4593  05C4  0834               	movwf	(sprintf@c)^080h
  4594  05C5  00BC               	movf	(((sprintf@c)^080h)),w
  4595  05C6  083C               	btfss	status,2
  4596  05C7  1D03               	goto	u1921
  4597  05C8  2DCA               	goto	u1920
  4598  05C9  2DCB               u1921:
  4599  05CA                     	goto	l2152
  4600  05CA  2CA5               u1920:
  4601  05CB                     	goto	l2204
  4602  05CB  2DCD               	
  4603                           l494:	
  4604  05CC                     	goto	l2204
  4605  05CC  2DCD               	line	1554
  4606                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1554: alldone:
  4607                           	
  4608                           l481:	
  4609  05CD                     	line	1557
  4610                           	
  4611                           l2204:	
  4612  05CD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  4613                           	movf	(sprintf@sp)^080h,w
  4614  05CD  083B               	movwf	fsr0
  4615  05CE  0084               	bcf	status, 7	;select IRP bank0
  4616  05CF  1383               	clrf	indf
  4617  05D0  0180               	goto	l495
  4618  05D1  2DD2               	line	1559
  4619                           	
  4620                           l2206:	
  4621  05D2                     	line	1560
  4622                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1559:  return 0;;	Return valu
                                 e of _sprintf is never used
  4623                           	
  4624                           l495:	
  4625  05D2                     	return
  4626  05D2  0008               	opt stack 0
  4627                           GLOBAL	__end_of_sprintf
  4628                           	__end_of_sprintf:
  4629  05D3                     	signat	_sprintf,4698
  4630                           	global	___lwmod
  4631                           
  4632 ;; *************** function ___lwmod *****************
  4633 ;; Defined at:
  4634 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  divisor         2    8[BANK1 ] unsigned int 
  4637 ;;  dividend        2   10[BANK1 ] unsigned int 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  counter         1   13[BANK1 ] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  2    8[BANK1 ] unsigned int 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4649 ;;      Params:         0       0       4       0       0
  4650 ;;      Locals:         0       0       1       0       0
  4651 ;;      Temps:          0       0       1       0       0
  4652 ;;      Totals:         0       0       6       0       0
  4653 ;;Total ram usage:        6 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    4
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_sprintf
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4663                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4664                           	line	5
  4665                           global __ptext10
  4666                           __ptext10:	;psect for function ___lwmod
  4667  0AE8                     psect	text10
  4668                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4669                           	line	5
  4670                           	global	__size_of___lwmod
  4671                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4672  0043                     	
  4673                           ___lwmod:	
  4674  0AE8                     ;incstack = 0
  4675                           	opt	stack 0
  4676                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4677                           	line	12
  4678                           	
  4679                           l2120:	
  4680  0AE8                     	bsf	status, 5	;RP0=1, select bank1
  4681  0AE8  1683               	bcf	status, 6	;RP1=0, select bank1
  4682  0AE9  1303               	movf	((___lwmod@divisor)^080h),w
  4683  0AEA  0828               iorwf	((___lwmod@divisor+1)^080h),w
  4684  0AEB  0429               	btfsc	status,2
  4685  0AEC  1903               	goto	u1781
  4686  0AED  2AEF               	goto	u1780
  4687  0AEE  2AF0               u1781:
  4688  0AEF                     	goto	l2138
  4689  0AEF  2B25               u1780:
  4690  0AF0                     	line	13
  4691                           	
  4692                           l2122:	
  4693  0AF0                     	clrf	(___lwmod@counter)^080h
  4694  0AF0  01AD               	incf	(___lwmod@counter)^080h,f
  4695  0AF1  0AAD               	line	14
  4696                           	goto	l2128
  4697  0AF2  2AFF               	
  4698                           l776:	
  4699  0AF3                     	line	15
  4700                           	
  4701                           l2124:	
  4702  0AF3                     	movlw	01h
  4703  0AF3  3001               	
  4704                           u1795:
  4705  0AF4                     	clrc
  4706  0AF4  1003               	rlf	(___lwmod@divisor)^080h,f
  4707  0AF5  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  4708  0AF6  0DA9               	addlw	-1
  4709  0AF7  3EFF               	skipz
  4710  0AF8  1D03               	goto	u1795
  4711  0AF9  2AF4               	line	16
  4712                           	
  4713                           l2126:	
  4714  0AFA                     	movlw	low(01h)
  4715  0AFA  3001               	movwf	(??___lwmod+0)^080h+0
  4716  0AFB  00AC               	movf	(??___lwmod+0)^080h+0,w
  4717  0AFC  082C               	addwf	(___lwmod@counter)^080h,f
  4718  0AFD  07AD               	goto	l2128
  4719  0AFE  2AFF               	line	17
  4720                           	
  4721                           l775:	
  4722  0AFF                     	line	14
  4723                           	
  4724                           l2128:	
  4725  0AFF                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  4726  0AFF  1FA9               	goto	u1801
  4727  0B00  2B02               	goto	u1800
  4728  0B01  2B03               u1801:
  4729  0B02                     	goto	l2124
  4730  0B02  2AF3               u1800:
  4731  0B03                     	goto	l2130
  4732  0B03  2B05               	
  4733                           l777:	
  4734  0B04                     	goto	l2130
  4735  0B04  2B05               	line	18
  4736                           	
  4737                           l778:	
  4738  0B05                     	line	19
  4739                           	
  4740                           l2130:	
  4741  0B05                     	movf	(___lwmod@divisor+1)^080h,w
  4742  0B05  0829               	subwf	(___lwmod@dividend+1)^080h,w
  4743  0B06  022B               	skipz
  4744  0B07  1D03               	goto	u1815
  4745  0B08  2B0B               	movf	(___lwmod@divisor)^080h,w
  4746  0B09  0828               	subwf	(___lwmod@dividend)^080h,w
  4747  0B0A  022A               u1815:
  4748  0B0B                     	skipc
  4749  0B0B  1C03               	goto	u1811
  4750  0B0C  2B0E               	goto	u1810
  4751  0B0D  2B0F               u1811:
  4752  0B0E                     	goto	l2134
  4753  0B0E  2B16               u1810:
  4754  0B0F                     	line	20
  4755                           	
  4756                           l2132:	
  4757  0B0F                     	movf	(___lwmod@divisor)^080h,w
  4758  0B0F  0828               	subwf	(___lwmod@dividend)^080h,f
  4759  0B10  02AA               	movf	(___lwmod@divisor+1)^080h,w
  4760  0B11  0829               	skipc
  4761  0B12  1C03               	decf	(___lwmod@dividend+1)^080h,f
  4762  0B13  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  4763  0B14  02AB               	goto	l2134
  4764  0B15  2B16               	
  4765                           l779:	
  4766  0B16                     	line	21
  4767                           	
  4768                           l2134:	
  4769  0B16                     	movlw	01h
  4770  0B16  3001               	
  4771                           u1825:
  4772  0B17                     	clrc
  4773  0B17  1003               	rrf	(___lwmod@divisor+1)^080h,f
  4774  0B18  0CA9               	rrf	(___lwmod@divisor)^080h,f
  4775  0B19  0CA8               	addlw	-1
  4776  0B1A  3EFF               	skipz
  4777  0B1B  1D03               	goto	u1825
  4778  0B1C  2B17               	line	22
  4779                           	
  4780                           l2136:	
  4781  0B1D                     	movlw	01h
  4782  0B1D  3001               	subwf	(___lwmod@counter)^080h,f
  4783  0B1E  02AD               	btfss	status,2
  4784  0B1F  1D03               	goto	u1831
  4785  0B20  2B22               	goto	u1830
  4786  0B21  2B23               u1831:
  4787  0B22                     	goto	l2130
  4788  0B22  2B05               u1830:
  4789  0B23                     	goto	l2138
  4790  0B23  2B25               	
  4791                           l780:	
  4792  0B24                     	goto	l2138
  4793  0B24  2B25               	line	23
  4794                           	
  4795                           l774:	
  4796  0B25                     	line	24
  4797                           	
  4798                           l2138:	
  4799  0B25                     	movf	(___lwmod@dividend+1)^080h,w
  4800  0B25  082B               	movwf	(?___lwmod+1)^080h
  4801  0B26  00A9               	movf	(___lwmod@dividend)^080h,w
  4802  0B27  082A               	movwf	(?___lwmod)^080h
  4803  0B28  00A8               	goto	l781
  4804  0B29  2B2A               	
  4805                           l2140:	
  4806  0B2A                     	line	25
  4807                           	
  4808                           l781:	
  4809  0B2A                     	return
  4810  0B2A  0008               	opt stack 0
  4811                           GLOBAL	__end_of___lwmod
  4812                           	__end_of___lwmod:
  4813  0B2B                     	signat	___lwmod,8314
  4814                           	global	___lwdiv
  4815                           
  4816 ;; *************** function ___lwdiv *****************
  4817 ;; Defined at:
  4818 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  divisor         2    0[BANK1 ] unsigned int 
  4821 ;;  dividend        2    2[BANK1 ] unsigned int 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  quotient        2    5[BANK1 ] unsigned int 
  4824 ;;  counter         1    7[BANK1 ] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2    0[BANK1 ] unsigned int 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4834 ;;      Params:         0       0       4       0       0
  4835 ;;      Locals:         0       0       3       0       0
  4836 ;;      Temps:          0       0       1       0       0
  4837 ;;      Totals:         0       0       8       0       0
  4838 ;;Total ram usage:        8 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    4
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_sprintf
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  4848                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4849                           	line	5
  4850                           global __ptext11
  4851                           __ptext11:	;psect for function ___lwdiv
  4852  0C08                     psect	text11
  4853                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4854                           	line	5
  4855                           	global	__size_of___lwdiv
  4856                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4857  004D                     	
  4858                           ___lwdiv:	
  4859  0C08                     ;incstack = 0
  4860                           	opt	stack 0
  4861                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4862                           	line	13
  4863                           	
  4864                           l2094:	
  4865  0C08                     	bsf	status, 5	;RP0=1, select bank1
  4866  0C08  1683               	bcf	status, 6	;RP1=0, select bank1
  4867  0C09  1303               	clrf	(___lwdiv@quotient)^080h
  4868  0C0A  01A5               	clrf	(___lwdiv@quotient+1)^080h
  4869  0C0B  01A6               	line	14
  4870                           	
  4871                           l2096:	
  4872  0C0C                     	movf	((___lwdiv@divisor)^080h),w
  4873  0C0C  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  4874  0C0D  0421               	btfsc	status,2
  4875  0C0E  1903               	goto	u1711
  4876  0C0F  2C11               	goto	u1710
  4877  0C10  2C12               u1711:
  4878  0C11                     	goto	l2116
  4879  0C11  2C4F               u1710:
  4880  0C12                     	line	15
  4881                           	
  4882                           l2098:	
  4883  0C12                     	clrf	(___lwdiv@counter)^080h
  4884  0C12  01A7               	incf	(___lwdiv@counter)^080h,f
  4885  0C13  0AA7               	line	16
  4886                           	goto	l2104
  4887  0C14  2C21               	
  4888                           l766:	
  4889  0C15                     	line	17
  4890                           	
  4891                           l2100:	
  4892  0C15                     	movlw	01h
  4893  0C15  3001               	
  4894                           u1725:
  4895  0C16                     	clrc
  4896  0C16  1003               	rlf	(___lwdiv@divisor)^080h,f
  4897  0C17  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  4898  0C18  0DA1               	addlw	-1
  4899  0C19  3EFF               	skipz
  4900  0C1A  1D03               	goto	u1725
  4901  0C1B  2C16               	line	18
  4902                           	
  4903                           l2102:	
  4904  0C1C                     	movlw	low(01h)
  4905  0C1C  3001               	movwf	(??___lwdiv+0)^080h+0
  4906  0C1D  00A4               	movf	(??___lwdiv+0)^080h+0,w
  4907  0C1E  0824               	addwf	(___lwdiv@counter)^080h,f
  4908  0C1F  07A7               	goto	l2104
  4909  0C20  2C21               	line	19
  4910                           	
  4911                           l765:	
  4912  0C21                     	line	16
  4913                           	
  4914                           l2104:	
  4915  0C21                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  4916  0C21  1FA1               	goto	u1731
  4917  0C22  2C24               	goto	u1730
  4918  0C23  2C25               u1731:
  4919  0C24                     	goto	l2100
  4920  0C24  2C15               u1730:
  4921  0C25                     	goto	l2106
  4922  0C25  2C27               	
  4923                           l767:	
  4924  0C26                     	goto	l2106
  4925  0C26  2C27               	line	20
  4926                           	
  4927                           l768:	
  4928  0C27                     	line	21
  4929                           	
  4930                           l2106:	
  4931  0C27                     	movlw	01h
  4932  0C27  3001               	
  4933                           u1745:
  4934  0C28                     	clrc
  4935  0C28  1003               	rlf	(___lwdiv@quotient)^080h,f
  4936  0C29  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  4937  0C2A  0DA6               	addlw	-1
  4938  0C2B  3EFF               	skipz
  4939  0C2C  1D03               	goto	u1745
  4940  0C2D  2C28               	line	22
  4941                           	movf	(___lwdiv@divisor+1)^080h,w
  4942  0C2E  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  4943  0C2F  0223               	skipz
  4944  0C30  1D03               	goto	u1755
  4945  0C31  2C34               	movf	(___lwdiv@divisor)^080h,w
  4946  0C32  0820               	subwf	(___lwdiv@dividend)^080h,w
  4947  0C33  0222               u1755:
  4948  0C34                     	skipc
  4949  0C34  1C03               	goto	u1751
  4950  0C35  2C37               	goto	u1750
  4951  0C36  2C38               u1751:
  4952  0C37                     	goto	l2112
  4953  0C37  2C40               u1750:
  4954  0C38                     	line	23
  4955                           	
  4956                           l2108:	
  4957  0C38                     	movf	(___lwdiv@divisor)^080h,w
  4958  0C38  0820               	subwf	(___lwdiv@dividend)^080h,f
  4959  0C39  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  4960  0C3A  0821               	skipc
  4961  0C3B  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  4962  0C3C  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  4963  0C3D  02A3               	line	24
  4964                           	
  4965                           l2110:	
  4966  0C3E                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  4967  0C3E  1425               	goto	l2112
  4968  0C3F  2C40               	line	25
  4969                           	
  4970                           l769:	
  4971  0C40                     	line	26
  4972                           	
  4973                           l2112:	
  4974  0C40                     	movlw	01h
  4975  0C40  3001               	
  4976                           u1765:
  4977  0C41                     	clrc
  4978  0C41  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  4979  0C42  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  4980  0C43  0CA0               	addlw	-1
  4981  0C44  3EFF               	skipz
  4982  0C45  1D03               	goto	u1765
  4983  0C46  2C41               	line	27
  4984                           	
  4985                           l2114:	
  4986  0C47                     	movlw	01h
  4987  0C47  3001               	subwf	(___lwdiv@counter)^080h,f
  4988  0C48  02A7               	btfss	status,2
  4989  0C49  1D03               	goto	u1771
  4990  0C4A  2C4C               	goto	u1770
  4991  0C4B  2C4D               u1771:
  4992  0C4C                     	goto	l2106
  4993  0C4C  2C27               u1770:
  4994  0C4D                     	goto	l2116
  4995  0C4D  2C4F               	
  4996                           l770:	
  4997  0C4E                     	goto	l2116
  4998  0C4E  2C4F               	line	28
  4999                           	
  5000                           l764:	
  5001  0C4F                     	line	29
  5002                           	
  5003                           l2116:	
  5004  0C4F                     	movf	(___lwdiv@quotient+1)^080h,w
  5005  0C4F  0826               	movwf	(?___lwdiv+1)^080h
  5006  0C50  00A1               	movf	(___lwdiv@quotient)^080h,w
  5007  0C51  0825               	movwf	(?___lwdiv)^080h
  5008  0C52  00A0               	goto	l771
  5009  0C53  2C54               	
  5010                           l2118:	
  5011  0C54                     	line	30
  5012                           	
  5013                           l771:	
  5014  0C54                     	return
  5015  0C54  0008               	opt stack 0
  5016                           GLOBAL	__end_of___lwdiv
  5017                           	__end_of___lwdiv:
  5018  0C55                     	signat	___lwdiv,8314
  5019                           	global	_display_write_start
  5020                           
  5021 ;; *************** function _display_write_start *****************
  5022 ;; Defined at:
  5023 ;;		line 246 in file "Display.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;		None
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  1    wreg      void 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5037 ;;      Params:         0       0       0       0       0
  5038 ;;      Locals:         0       0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0
  5040 ;;      Totals:         0       0       0       0       0
  5041 ;;Total ram usage:        0 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    4
  5044 ;; This function calls:
  5045 ;;		Nothing
  5046 ;; This function is called by:
  5047 ;;		_update_input
  5048 ;;		_update_volume
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5052                           	file	"Display.c"
  5053                           	line	246
  5054                           global __ptext12
  5055                           __ptext12:	;psect for function _display_write_start
  5056  0941                     psect	text12
  5057                           	file	"Display.c"
  5058                           	line	246
  5059                           	global	__size_of_display_write_start
  5060                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  5061  000F                     	
  5062                           _display_write_start:	
  5063  0941                     ;incstack = 0
  5064                           	opt	stack 2
  5065                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  5066                           	line	248
  5067                           	
  5068                           l2576:	
  5069  0941                     ;Display.c: 248:     if (_selectedDisplay == 0) {
  5070                           	bsf	status, 5	;RP0=1, select bank1
  5071  0941  1683               	bcf	status, 6	;RP1=0, select bank1
  5072  0942  1303               	movf	((__selectedDisplay)^080h),w
  5073  0943  0851               	btfss	status,2
  5074  0944  1D03               	goto	u2691
  5075  0945  2947               	goto	u2690
  5076  0946  2948               u2691:
  5077  0947                     	goto	l190
  5078  0947  294C               u2690:
  5079  0948                     	line	249
  5080                           	
  5081                           l2578:	
  5082  0948                     ;Display.c: 249:         PORTCbits.RC4 = 0;
  5083                           	bcf	status, 5	;RP0=0, select bank0
  5084  0948  1283               	bcf	status, 6	;RP1=0, select bank0
  5085  0949  1303               	bcf	(7),4	;volatile
  5086  094A  1207               	line	250
  5087                           ;Display.c: 250:         return;
  5088                           	goto	l191
  5089  094B  294F               	line	251
  5090                           ;Display.c: 251:     }
  5091                           	
  5092                           l190:	
  5093  094C                     	line	253
  5094                           ;Display.c: 253:     PORTDbits.RD4 = 0;
  5095                           	bcf	status, 5	;RP0=0, select bank0
  5096  094C  1283               	bcf	status, 6	;RP1=0, select bank0
  5097  094D  1303               	bcf	(8),4	;volatile
  5098  094E  1208               	line	254
  5099                           	
  5100                           l191:	
  5101  094F                     	return
  5102  094F  0008               	opt stack 0
  5103                           GLOBAL	__end_of_display_write_start
  5104                           	__end_of_display_write_start:
  5105  0950                     	signat	_display_write_start,89
  5106                           	global	_display_write_end
  5107                           
  5108 ;; *************** function _display_write_end *****************
  5109 ;; Defined at:
  5110 ;;		line 257 in file "Display.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5124 ;;      Params:         0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0
  5127 ;;      Totals:         0       0       0       0       0
  5128 ;;Total ram usage:        0 bytes
  5129 ;; Hardware stack levels used:    1
  5130 ;; Hardware stack levels required when called:    4
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_update_input
  5135 ;;		_update_volume
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5139                           	line	257
  5140                           global __ptext13
  5141                           __ptext13:	;psect for function _display_write_end
  5142  0932                     psect	text13
  5143                           	file	"Display.c"
  5144                           	line	257
  5145                           	global	__size_of_display_write_end
  5146                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  5147  000F                     	
  5148                           _display_write_end:	
  5149  0932                     ;incstack = 0
  5150                           	opt	stack 2
  5151                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  5152                           	line	259
  5153                           	
  5154                           l2604:	
  5155  0932                     ;Display.c: 259:     if (_selectedDisplay == 0) {
  5156                           	bsf	status, 5	;RP0=1, select bank1
  5157  0932  1683               	bcf	status, 6	;RP1=0, select bank1
  5158  0933  1303               	movf	((__selectedDisplay)^080h),w
  5159  0934  0851               	btfss	status,2
  5160  0935  1D03               	goto	u2741
  5161  0936  2938               	goto	u2740
  5162  0937  2939               u2741:
  5163  0938                     	goto	l194
  5164  0938  293D               u2740:
  5165  0939                     	line	260
  5166                           	
  5167                           l2606:	
  5168  0939                     ;Display.c: 260:         PORTCbits.RC4 = 1;
  5169                           	bcf	status, 5	;RP0=0, select bank0
  5170  0939  1283               	bcf	status, 6	;RP1=0, select bank0
  5171  093A  1303               	bsf	(7),4	;volatile
  5172  093B  1607               	line	261
  5173                           ;Display.c: 261:         return;
  5174                           	goto	l195
  5175  093C  2940               	line	262
  5176                           ;Display.c: 262:     }
  5177                           	
  5178                           l194:	
  5179  093D                     	line	264
  5180                           ;Display.c: 264:     PORTDbits.RD4 = 1;
  5181                           	bcf	status, 5	;RP0=0, select bank0
  5182  093D  1283               	bcf	status, 6	;RP1=0, select bank0
  5183  093E  1303               	bsf	(8),4	;volatile
  5184  093F  1608               	line	265
  5185                           	
  5186                           l195:	
  5187  0940                     	return
  5188  0940  0008               	opt stack 0
  5189                           GLOBAL	__end_of_display_write_end
  5190                           	__end_of_display_write_end:
  5191  0941                     	signat	_display_write_end,89
  5192                           	global	_handle_remote
  5193                           
  5194 ;; *************** function _handle_remote *****************
  5195 ;; Defined at:
  5196 ;;		line 40 in file "Remote.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;		None
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  data            2    2[BANK1 ] unsigned int 
  5201 ;;  mask            2    0[BANK1 ] unsigned int 
  5202 ;;  found           1    4[BANK1 ] unsigned char 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  1    wreg      void 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5212 ;;      Params:         0       0       0       0       0
  5213 ;;      Locals:         0       0       5       0       0
  5214 ;;      Temps:          0       0       0       0       0
  5215 ;;      Totals:         0       0       5       0       0
  5216 ;;Total ram usage:        5 bytes
  5217 ;; Hardware stack levels used:    1
  5218 ;; Hardware stack levels required when called:    4
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_main
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5226                           	file	"Remote.c"
  5227                           	line	40
  5228                           global __ptext14
  5229                           __ptext14:	;psect for function _handle_remote
  5230  0F72                     psect	text14
  5231                           	file	"Remote.c"
  5232                           	line	40
  5233                           	global	__size_of_handle_remote
  5234                           	__size_of_handle_remote	equ	__end_of_handle_remote-_handle_remote
  5235  008E                     	
  5236                           _handle_remote:	
  5237  0F72                     ;incstack = 0
  5238                           	opt	stack 3
  5239                           ; Regs used in _handle_remote: [wreg-fsr0h+status,2+status,0]
  5240                           	line	42
  5241                           	
  5242                           l2798:	
  5243  0F72                     ;Remote.c: 42:     char found = 0;
  5244                           	bsf	status, 5	;RP0=1, select bank1
  5245  0F72  1683               	bcf	status, 6	;RP1=0, select bank1
  5246  0F73  1303               	clrf	(handle_remote@found)^080h
  5247  0F74  01A4               	line	51
  5248                           	
  5249                           l2800:	
  5250  0F75                     ;Remote.c: 51:     if (ir_input == 0xC01) {
  5251                           		decf	((_ir_input)^080h),w
  5252  0F75  0345               	movlw	12
  5253  0F76  300C               	skipnz
  5254  0F77  1903               	xorwf	((_ir_input+1)^080h),w
  5255  0F78  0646               iorwf	((_ir_input+2)^080h),w
  5256  0F79  0447               iorwf	((_ir_input+3)^080h),w
  5257  0F7A  0448               	btfss	status,2
  5258  0F7B  1D03               	goto	u2881
  5259  0F7C  2F7E               	goto	u2880
  5260  0F7D  2F7F               u2881:
  5261  0F7E                     	goto	l376
  5262  0F7E  2FFF               u2880:
  5263  0F7F                     	line	52
  5264                           	
  5265                           l2802:	
  5266  0F7F                     ;Remote.c: 52:                     _selectedInput = 0;
  5267                           	clrf	(__selectedInput)^080h
  5268  0F7F  01CF               	clrf	(__selectedInput+1)^080h
  5269  0F80  01D0               	line	53
  5270                           	
  5271                           l2804:	
  5272  0F81                     ;Remote.c: 53:             _inputUpdateRequired = 1;
  5273                           	clrf	(__inputUpdateRequired)^080h
  5274  0F81  01D2               	incf	(__inputUpdateRequired)^080h,f
  5275  0F82  0AD2               	line	55
  5276                           	
  5277                           l2806:	
  5278  0F83                     ;Remote.c: 55:             ir_input = 0;
  5279                           	movlw	high highword(0)
  5280  0F83  3000               	movwf	(_ir_input+3)^080h
  5281  0F84  00C8               	movlw	low highword(0)
  5282  0F85  3000               	movwf	(_ir_input+2)^080h
  5283  0F86  00C7               	movlw	high(0)
  5284  0F87  3000               	movwf	(_ir_input+1)^080h
  5285  0F88  00C6               	movlw	low(0)
  5286  0F89  3000               	movwf	(_ir_input)^080h
  5287  0F8A  00C5               
  5288                           	goto	l376
  5289  0F8B  2FFF               	line	56
  5290                           ;Remote.c: 56:     }
  5291                           	
  5292                           l375:	
  5293  0F8C                     	goto	l376
  5294  0F8C  2FFF               	line	58
  5295                           	
  5296                           l2808:	
  5297  0F8D                     ;Remote.c: 58:     return;
  5298                           	goto	l376
  5299  0F8D  2FFF               	line	60
  5300                           	
  5301                           l2810:	
  5302  0F8E                     ;Remote.c: 60:     unsigned int mask = 0b0000000111111111;
  5303                           	movlw	0FFh
  5304  0F8E  30FF               	movwf	(handle_remote@mask)^080h
  5305  0F8F  00A0               	movlw	01h
  5306  0F90  3001               	movwf	((handle_remote@mask)^080h)+1
  5307  0F91  00A1               	line	62
  5308                           ;Remote.c: 62:     unsigned int data = ir_input & mask;
  5309                           	movf	(_ir_input)^080h,w
  5310  0F92  0845               	andwf	(handle_remote@mask)^080h,w
  5311  0F93  0520               	movwf	(handle_remote@data)^080h
  5312  0F94  00A2               	movf	(_ir_input+1)^080h,w
  5313  0F95  0846               	andwf	(handle_remote@mask+1)^080h,w
  5314  0F96  0521               	movwf	1+(handle_remote@data)^080h
  5315  0F97  00A3               	line	65
  5316                           ;Remote.c: 65:     switch (data) {
  5317                           	goto	l2846
  5318  0F98  2FCE               	line	66
  5319                           ;Remote.c: 66:         case 72:
  5320                           	
  5321                           l378:	
  5322  0F99                     	line	67
  5323                           	
  5324                           l2812:	
  5325  0F99                     ;Remote.c: 67:             _selectedInput = 0;
  5326                           	clrf	(__selectedInput)^080h
  5327  0F99  01CF               	clrf	(__selectedInput+1)^080h
  5328  0F9A  01D0               	line	68
  5329                           	
  5330                           l2814:	
  5331  0F9B                     ;Remote.c: 68:             _inputUpdateRequired = 1;
  5332                           	clrf	(__inputUpdateRequired)^080h
  5333  0F9B  01D2               	incf	(__inputUpdateRequired)^080h,f
  5334  0F9C  0AD2               	line	69
  5335                           	
  5336                           l2816:	
  5337  0F9D                     ;Remote.c: 69:             found = 1;
  5338                           	clrf	(handle_remote@found)^080h
  5339  0F9D  01A4               	incf	(handle_remote@found)^080h,f
  5340  0F9E  0AA4               	line	70
  5341                           ;Remote.c: 70:             break;
  5342                           	goto	l2848
  5343  0F9F  2FEC               	line	71
  5344                           ;Remote.c: 71:         case 264:
  5345                           	
  5346                           l380:	
  5347  0FA0                     	line	72
  5348                           	
  5349                           l2818:	
  5350  0FA0                     ;Remote.c: 72:             _selectedInput = 1;
  5351                           	movlw	01h
  5352  0FA0  3001               	movwf	(__selectedInput)^080h
  5353  0FA1  00CF               	movlw	0
  5354  0FA2  3000               	movwf	((__selectedInput)^080h)+1
  5355  0FA3  00D0               	line	73
  5356                           	
  5357                           l2820:	
  5358  0FA4                     ;Remote.c: 73:             _inputUpdateRequired = 1;
  5359                           	clrf	(__inputUpdateRequired)^080h
  5360  0FA4  01D2               	incf	(__inputUpdateRequired)^080h,f
  5361  0FA5  0AD2               	line	74
  5362                           	
  5363                           l2822:	
  5364  0FA6                     ;Remote.c: 74:             found = 1;
  5365                           	clrf	(handle_remote@found)^080h
  5366  0FA6  01A4               	incf	(handle_remote@found)^080h,f
  5367  0FA7  0AA4               	line	75
  5368                           ;Remote.c: 75:             break;
  5369                           	goto	l2848
  5370  0FA8  2FEC               	line	76
  5371                           ;Remote.c: 76:         case 160:
  5372                           	
  5373                           l381:	
  5374  0FA9                     	line	77
  5375                           	
  5376                           l2824:	
  5377  0FA9                     ;Remote.c: 77:             _selectedInput = 2;
  5378                           	movlw	02h
  5379  0FA9  3002               	movwf	(__selectedInput)^080h
  5380  0FAA  00CF               	movlw	0
  5381  0FAB  3000               	movwf	((__selectedInput)^080h)+1
  5382  0FAC  00D0               	line	78
  5383                           	
  5384                           l2826:	
  5385  0FAD                     ;Remote.c: 78:             _inputUpdateRequired = 1;
  5386                           	clrf	(__inputUpdateRequired)^080h
  5387  0FAD  01D2               	incf	(__inputUpdateRequired)^080h,f
  5388  0FAE  0AD2               	line	79
  5389                           	
  5390                           l2828:	
  5391  0FAF                     ;Remote.c: 79:             found = 1;
  5392                           	clrf	(handle_remote@found)^080h
  5393  0FAF  01A4               	incf	(handle_remote@found)^080h,f
  5394  0FB0  0AA4               	line	80
  5395                           ;Remote.c: 80:             break;
  5396                           	goto	l2848
  5397  0FB1  2FEC               	line	81
  5398                           ;Remote.c: 81:         case 136:
  5399                           	
  5400                           l382:	
  5401  0FB2                     	line	82
  5402                           	
  5403                           l2830:	
  5404  0FB2                     ;Remote.c: 82:             _selectedInput = 3;
  5405                           	movlw	03h
  5406  0FB2  3003               	movwf	(__selectedInput)^080h
  5407  0FB3  00CF               	movlw	0
  5408  0FB4  3000               	movwf	((__selectedInput)^080h)+1
  5409  0FB5  00D0               	line	83
  5410                           	
  5411                           l2832:	
  5412  0FB6                     ;Remote.c: 83:             _inputUpdateRequired = 1;
  5413                           	clrf	(__inputUpdateRequired)^080h
  5414  0FB6  01D2               	incf	(__inputUpdateRequired)^080h,f
  5415  0FB7  0AD2               	line	84
  5416                           	
  5417                           l2834:	
  5418  0FB8                     ;Remote.c: 84:             found = 1;
  5419                           	clrf	(handle_remote@found)^080h
  5420  0FB8  01A4               	incf	(handle_remote@found)^080h,f
  5421  0FB9  0AA4               	line	85
  5422                           ;Remote.c: 85:             break;
  5423                           	goto	l2848
  5424  0FBA  2FEC               	line	86
  5425                           ;Remote.c: 86:         case 288:
  5426                           	
  5427                           l383:	
  5428  0FBB                     	line	87
  5429                           	
  5430                           l2836:	
  5431  0FBB                     ;Remote.c: 87:             volume++;
  5432                           	movlw	01h
  5433  0FBB  3001               	addwf	(_volume)^080h,f
  5434  0FBC  07CD               	skipnc
  5435  0FBD  1803               	incf	(_volume+1)^080h,f
  5436  0FBE  0ACE               	movlw	0
  5437  0FBF  3000               	addwf	(_volume+1)^080h,f
  5438  0FC0  07CE               	line	88
  5439                           	
  5440                           l2838:	
  5441  0FC1                     ;Remote.c: 88:             found = 1;
  5442                           	clrf	(handle_remote@found)^080h
  5443  0FC1  01A4               	incf	(handle_remote@found)^080h,f
  5444  0FC2  0AA4               	line	89
  5445                           ;Remote.c: 89:             break;
  5446                           	goto	l2848
  5447  0FC3  2FEC               	line	90
  5448                           ;Remote.c: 90:         case 272:
  5449                           	
  5450                           l384:	
  5451  0FC4                     	line	91
  5452                           	
  5453                           l2840:	
  5454  0FC4                     ;Remote.c: 91:             volume--;
  5455                           	movlw	0FFh
  5456  0FC4  30FF               	addwf	(_volume)^080h,f
  5457  0FC5  07CD               	skipnc
  5458  0FC6  1803               	incf	(_volume+1)^080h,f
  5459  0FC7  0ACE               	movlw	0FFh
  5460  0FC8  30FF               	addwf	(_volume+1)^080h,f
  5461  0FC9  07CE               	line	92
  5462                           	
  5463                           l2842:	
  5464  0FCA                     ;Remote.c: 92:             found = 1;
  5465                           	clrf	(handle_remote@found)^080h
  5466  0FCA  01A4               	incf	(handle_remote@found)^080h,f
  5467  0FCB  0AA4               	line	93
  5468                           ;Remote.c: 93:             break;
  5469                           	goto	l2848
  5470  0FCC  2FEC               	line	94
  5471                           	
  5472                           l2844:	
  5473  0FCD                     ;Remote.c: 94:     }
  5474                           	goto	l2848
  5475  0FCD  2FEC               	
  5476                           l377:	
  5477  0FCE                     	
  5478                           l2846:	
  5479  0FCE                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  5480                           ; Switch size 1, requested type "space"
  5481                           ; Number of cases is 2, Range of values is 0 to 1
  5482                           ; switch strategies available:
  5483                           ; Name         Instructions Cycles
  5484                           ; simple_byte            7     4 (average)
  5485                           ; direct_byte           14     8 (fixed)
  5486                           ; jumptable            260     6 (fixed)
  5487                           ;	Chosen strategy is simple_byte
  5488                           
  5489                           	movf (handle_remote@data+1)^080h,w
  5490  0FCE  0823               	opt asmopt_push
  5491                           	opt asmopt_off
  5492                           	xorlw	0^0	; case 0
  5493  0FCF  3A00               	skipnz
  5494  0FD0  1903               	goto	l3076
  5495  0FD1  2FD6               	xorlw	1^0	; case 1
  5496  0FD2  3A01               	skipnz
  5497  0FD3  1903               	goto	l3078
  5498  0FD4  2FE1               	goto	l2848
  5499  0FD5  2FEC               	opt asmopt_pop
  5500                           	
  5501                           l3076:	
  5502  0FD6                     ; Switch size 1, requested type "space"
  5503                           ; Number of cases is 3, Range of values is 72 to 160
  5504                           ; switch strategies available:
  5505                           ; Name         Instructions Cycles
  5506                           ; simple_byte           10     6 (average)
  5507                           ; jumptable            263     9 (fixed)
  5508                           ;	Chosen strategy is simple_byte
  5509                           
  5510                           	movf (handle_remote@data)^080h,w
  5511  0FD6  0822               	opt asmopt_push
  5512                           	opt asmopt_off
  5513                           	xorlw	72^0	; case 72
  5514  0FD7  3A48               	skipnz
  5515  0FD8  1903               	goto	l2812
  5516  0FD9  2F99               	xorlw	136^72	; case 136
  5517  0FDA  3AC0               	skipnz
  5518  0FDB  1903               	goto	l2830
  5519  0FDC  2FB2               	xorlw	160^136	; case 160
  5520  0FDD  3A28               	skipnz
  5521  0FDE  1903               	goto	l2824
  5522  0FDF  2FA9               	goto	l2848
  5523  0FE0  2FEC               	opt asmopt_pop
  5524                           	
  5525                           l3078:	
  5526  0FE1                     ; Switch size 1, requested type "space"
  5527                           ; Number of cases is 3, Range of values is 8 to 32
  5528                           ; switch strategies available:
  5529                           ; Name         Instructions Cycles
  5530                           ; simple_byte           10     6 (average)
  5531                           ; direct_byte           86    11 (fixed)
  5532                           ; jumptable            263     9 (fixed)
  5533                           ;	Chosen strategy is simple_byte
  5534                           
  5535                           	movf (handle_remote@data)^080h,w
  5536  0FE1  0822               	opt asmopt_push
  5537                           	opt asmopt_off
  5538                           	xorlw	8^0	; case 8
  5539  0FE2  3A08               	skipnz
  5540  0FE3  1903               	goto	l2818
  5541  0FE4  2FA0               	xorlw	16^8	; case 16
  5542  0FE5  3A18               	skipnz
  5543  0FE6  1903               	goto	l2840
  5544  0FE7  2FC4               	xorlw	32^16	; case 32
  5545  0FE8  3A30               	skipnz
  5546  0FE9  1903               	goto	l2836
  5547  0FEA  2FBB               	goto	l2848
  5548  0FEB  2FEC               	opt asmopt_pop
  5549                           
  5550                           	
  5551                           l379:	
  5552  0FEC                     	line	95
  5553                           	
  5554                           l2848:	
  5555  0FEC                     ;Remote.c: 95:     if (found) {
  5556                           	movf	((handle_remote@found)^080h),w
  5557  0FEC  0824               	btfsc	status,2
  5558  0FED  1903               	goto	u2891
  5559  0FEE  2FF0               	goto	u2890
  5560  0FEF  2FF1               u2891:
  5561  0FF0                     	goto	l376
  5562  0FF0  2FFF               u2890:
  5563  0FF1                     	line	96
  5564                           	
  5565                           l2850:	
  5566  0FF1                     ;Remote.c: 96:         T2CONbits.TMR2ON = 0;
  5567                           	bcf	status, 5	;RP0=0, select bank0
  5568  0FF1  1283               	bcf	status, 6	;RP1=0, select bank0
  5569  0FF2  1303               	bcf	(18),2	;volatile
  5570  0FF3  1112               	line	98
  5571                           	
  5572                           l2852:	
  5573  0FF4                     ;Remote.c: 98:         ir_input = 0;
  5574                           	movlw	high highword(0)
  5575  0FF4  3000               	bsf	status, 5	;RP0=1, select bank1
  5576  0FF5  1683               	bcf	status, 6	;RP1=0, select bank1
  5577  0FF6  1303               	movwf	(_ir_input+3)^080h
  5578  0FF7  00C8               	movlw	low highword(0)
  5579  0FF8  3000               	movwf	(_ir_input+2)^080h
  5580  0FF9  00C7               	movlw	high(0)
  5581  0FFA  3000               	movwf	(_ir_input+1)^080h
  5582  0FFB  00C6               	movlw	low(0)
  5583  0FFC  3000               	movwf	(_ir_input)^080h
  5584  0FFD  00C5               
  5585                           	goto	l376
  5586  0FFE  2FFF               	line	99
  5587                           ;Remote.c: 99:     }
  5588                           	
  5589                           l385:	
  5590  0FFF                     	line	102
  5591                           	
  5592                           l376:	
  5593  0FFF                     	return
  5594  0FFF  0008               	opt stack 0
  5595                           GLOBAL	__end_of_handle_remote
  5596                           	__end_of_handle_remote:
  5597  1000                     	signat	_handle_remote,89
  5598                           	global	_config
  5599                           
  5600 ;; *************** function _config *****************
  5601 ;; Defined at:
  5602 ;;		line 3 in file "Config.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;		None
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;		None
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, pclath, cstack
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5616 ;;      Params:         0       0       0       0       0
  5617 ;;      Locals:         0       0       0       0       0
  5618 ;;      Temps:          0       0       3       0       0
  5619 ;;      Totals:         0       0       3       0       0
  5620 ;;Total ram usage:        3 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; Hardware stack levels required when called:    6
  5623 ;; This function calls:
  5624 ;;		_display_init
  5625 ;;		_init_adc
  5626 ;;		_init_remote
  5627 ;; This function is called by:
  5628 ;;		_main
  5629 ;; This function uses a non-reentrant model
  5630 ;;
  5631                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5632                           	file	"Config.c"
  5633                           	line	3
  5634                           global __ptext15
  5635                           __ptext15:	;psect for function _config
  5636  0E13                     psect	text15
  5637                           	file	"Config.c"
  5638                           	line	3
  5639                           	global	__size_of_config
  5640                           	__size_of_config	equ	__end_of_config-_config
  5641  006A                     	
  5642                           _config:	
  5643  0E13                     ;incstack = 0
  5644                           	opt	stack 1
  5645                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5646                           	line	5
  5647                           	
  5648                           l2670:	
  5649  0E13                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  5650                           	bsf	status, 5	;RP0=1, select bank1
  5651  0E13  1683               	bcf	status, 6	;RP1=0, select bank1
  5652  0E14  1303               	movf	(143)^080h,w	;volatile
  5653  0E15  080F               	andlw	not (((1<<3)-1)<<4)
  5654  0E16  398F               	iorlw	(06h & ((1<<3)-1))<<4
  5655  0E17  3860               	movwf	(143)^080h	;volatile
  5656  0E18  008F               	line	6
  5657                           	
  5658                           l2672:	
  5659  0E19                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  5660                           	bcf	(143)^080h,3	;volatile
  5661  0E19  118F               	line	13
  5662                           	
  5663                           l2674:	
  5664  0E1A                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  5665                           	bcf	(133)^080h,0	;volatile
  5666  0E1A  1005               	line	14
  5667                           	
  5668                           l2676:	
  5669  0E1B                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  5670                           	bcf	(133)^080h,1	;volatile
  5671  0E1B  1085               	line	15
  5672                           	
  5673                           l2678:	
  5674  0E1C                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  5675                           	bcf	(133)^080h,2	;volatile
  5676  0E1C  1105               	line	16
  5677                           	
  5678                           l2680:	
  5679  0E1D                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  5680                           	bcf	(133)^080h,3	;volatile
  5681  0E1D  1185               	line	18
  5682                           	
  5683                           l2682:	
  5684  0E1E                     ;Config.c: 18:     PORTA = 0x0F;
  5685                           	movlw	low(0Fh)
  5686  0E1E  300F               	bcf	status, 5	;RP0=0, select bank0
  5687  0E1F  1283               	bcf	status, 6	;RP1=0, select bank0
  5688  0E20  1303               	movwf	(5)	;volatile
  5689  0E21  0085               	line	25
  5690                           	
  5691                           l2684:	
  5692  0E22                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  5693                           	bsf	status, 5	;RP0=1, select bank1
  5694  0E22  1683               	bcf	status, 6	;RP1=0, select bank1
  5695  0E23  1303               	bsf	(134)^080h,4	;volatile
  5696  0E24  1606               	line	26
  5697                           	
  5698                           l2686:	
  5699  0E25                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  5700                           	bsf	(134)^080h,5	;volatile
  5701  0E25  1686               	line	28
  5702                           	
  5703                           l2688:	
  5704  0E26                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  5705                           	bsf	status, 5	;RP0=1, select bank3
  5706  0E26  1683               	bsf	status, 6	;RP1=1, select bank3
  5707  0E27  1703               	bcf	(393)^0180h,3	;volatile
  5708  0E28  1189               	line	29
  5709                           	
  5710                           l2690:	
  5711  0E29                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  5712                           	bcf	(393)^0180h,5	;volatile
  5713  0E29  1289               	line	35
  5714                           	
  5715                           l2692:	
  5716  0E2A                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  5717                           	bsf	status, 5	;RP0=1, select bank1
  5718  0E2A  1683               	bcf	status, 6	;RP1=0, select bank1
  5719  0E2B  1303               	bsf	(137)^080h,2	;volatile
  5720  0E2C  1509               	line	36
  5721                           	
  5722                           l2694:	
  5723  0E2D                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  5724                           	bsf	status, 5	;RP0=1, select bank3
  5725  0E2D  1683               	bsf	status, 6	;RP1=1, select bank3
  5726  0E2E  1703               	bsf	(392)^0180h,7	;volatile
  5727  0E2F  1788               	line	41
  5728                           	
  5729                           l2696:	
  5730  0E30                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  5731                           	bsf	status, 5	;RP0=1, select bank1
  5732  0E30  1683               	bcf	status, 6	;RP1=0, select bank1
  5733  0E31  1303               	bsf	(134)^080h,0	;volatile
  5734  0E32  1406               	line	42
  5735                           	
  5736                           l2698:	
  5737  0E33                     ;Config.c: 42:     ANSELHbits.ANS12 = 0;
  5738                           	bsf	status, 5	;RP0=1, select bank3
  5739  0E33  1683               	bsf	status, 6	;RP1=1, select bank3
  5740  0E34  1703               	bcf	(393)^0180h,4	;volatile
  5741  0E35  1209               	line	48
  5742                           	
  5743                           l2700:	
  5744  0E36                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  5745                           	bsf	status, 5	;RP0=1, select bank1
  5746  0E36  1683               	bcf	status, 6	;RP1=0, select bank1
  5747  0E37  1303               	bcf	(135)^080h,0	;volatile
  5748  0E38  1007               	line	49
  5749                           	
  5750                           l2702:	
  5751  0E39                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  5752                           	bcf	(135)^080h,1	;volatile
  5753  0E39  1087               	line	51
  5754                           	
  5755                           l2704:	
  5756  0E3A                     ;Config.c: 51:     PORTC = 0x00;
  5757                           	bcf	status, 5	;RP0=0, select bank0
  5758  0E3A  1283               	bcf	status, 6	;RP1=0, select bank0
  5759  0E3B  1303               	clrf	(7)	;volatile
  5760  0E3C  0187               	line	57
  5761                           	
  5762                           l2706:	
  5763  0E3D                     ;Config.c: 57:     display_init();
  5764                           	fcall	_display_init
  5765  0E3D  120A  158A  2455  120A  158A  	line	60
  5766                           	
  5767                           l2708:	
  5768  0E42                     ;Config.c: 60:     init_adc();
  5769                           	fcall	_init_adc
  5770  0E42  120A  158A  2160  120A  158A  	line	62
  5771                           	
  5772                           l2710:	
  5773  0E47                     ;Config.c: 62:     init_remote();
  5774                           	fcall	_init_remote
  5775  0E47  120A  118A  22ED  120A  158A  	line	70
  5776                           	
  5777                           l2712:	
  5778  0E4C                     ;Config.c: 70:     IOCBbits.IOCB0 = 1;
  5779                           	bsf	status, 5	;RP0=1, select bank1
  5780  0E4C  1683               	bcf	status, 6	;RP1=0, select bank1
  5781  0E4D  1303               	bsf	(150)^080h,0	;volatile
  5782  0E4E  1416               	line	71
  5783                           	
  5784                           l2714:	
  5785  0E4F                     ;Config.c: 71:     IOCBbits.IOCB4 = 1;
  5786                           	bsf	(150)^080h,4	;volatile
  5787  0E4F  1616               	line	72
  5788                           	
  5789                           l2716:	
  5790  0E50                     ;Config.c: 72:     IOCBbits.IOCB5 = 1;
  5791                           	bsf	(150)^080h,5	;volatile
  5792  0E50  1696               	line	74
  5793                           	
  5794                           l2718:	
  5795  0E51                     ;Config.c: 74:     INTCONbits.PEIE = 1;
  5796                           	bsf	(11),6	;volatile
  5797  0E51  170B               	line	75
  5798                           	
  5799                           l2720:	
  5800  0E52                     ;Config.c: 75:     INTCONbits.RBIE = 1;
  5801                           	bsf	(11),3	;volatile
  5802  0E52  158B               	line	77
  5803                           	
  5804                           l2722:	
  5805  0E53                     ;Config.c: 77:     INTCONbits.GIE = 1;
  5806                           	bsf	(11),7	;volatile
  5807  0E53  178B               	line	86
  5808                           	
  5809                           l2724:	
  5810  0E54                     ;Config.c: 86:     _inputUpdateRequired = 1;
  5811                           	clrf	(__inputUpdateRequired)^080h
  5812  0E54  01D2               	incf	(__inputUpdateRequired)^080h,f
  5813  0E55  0AD2               	line	87
  5814                           	
  5815                           l2726:	
  5816  0E56                     ;Config.c: 87:     _selectedInput = 0;
  5817                           	clrf	(__selectedInput)^080h
  5818  0E56  01CF               	clrf	(__selectedInput+1)^080h
  5819  0E57  01D0               	line	88
  5820                           	
  5821                           l2728:	
  5822  0E58                     ;Config.c: 88:     _lastA = PORTBbits.RB4;
  5823                           	bcf	status, 5	;RP0=0, select bank0
  5824  0E58  1283               	bcf	status, 6	;RP1=0, select bank0
  5825  0E59  1303               	swapf	(6),w	;volatile
  5826  0E5A  0E06               	andlw	(1<<1)-1
  5827  0E5B  3901               	bsf	status, 5	;RP0=1, select bank1
  5828  0E5C  1683               	bcf	status, 6	;RP1=0, select bank1
  5829  0E5D  1303               	movwf	(??_config+0)^080h+0
  5830  0E5E  00A1               	clrf	(??_config+0)^080h+0+1
  5831  0E5F  01A2               	movf	0+(??_config+0)^080h+0,w
  5832  0E60  0821               	bcf	status, 5	;RP0=0, select bank0
  5833  0E61  1283               	bcf	status, 6	;RP1=0, select bank0
  5834  0E62  1303               	movwf	(__lastA)
  5835  0E63  00DC               	bsf	status, 5	;RP0=1, select bank1
  5836  0E64  1683               	bcf	status, 6	;RP1=0, select bank1
  5837  0E65  1303               	movf	1+(??_config+0)^080h+0,w
  5838  0E66  0822               	bcf	status, 5	;RP0=0, select bank0
  5839  0E67  1283               	bcf	status, 6	;RP1=0, select bank0
  5840  0E68  1303               	movwf	(__lastA+1)
  5841  0E69  00DD               	line	89
  5842                           	
  5843                           l2730:	
  5844  0E6A                     ;Config.c: 89:     _lastB = PORTBbits.RB5;
  5845                           	swapf	(6),w	;volatile
  5846  0E6A  0E06               	bsf	status, 5	;RP0=1, select bank1
  5847  0E6B  1683               	bcf	status, 6	;RP1=0, select bank1
  5848  0E6C  1303               	movwf	(??_config+0)^080h+0
  5849  0E6D  00A1               	rrf	(??_config+0)^080h+0,w
  5850  0E6E  0C21               	andlw	(1<<1)-1
  5851  0E6F  3901               	movwf	(??_config+1)^080h+0
  5852  0E70  00A2               	clrf	(??_config+1)^080h+0+1
  5853  0E71  01A3               	movf	0+(??_config+1)^080h+0,w
  5854  0E72  0822               	bcf	status, 5	;RP0=0, select bank0
  5855  0E73  1283               	bcf	status, 6	;RP1=0, select bank0
  5856  0E74  1303               	movwf	(__lastB)
  5857  0E75  00DA               	bsf	status, 5	;RP0=1, select bank1
  5858  0E76  1683               	bcf	status, 6	;RP1=0, select bank1
  5859  0E77  1303               	movf	1+(??_config+1)^080h+0,w
  5860  0E78  0823               	bcf	status, 5	;RP0=0, select bank0
  5861  0E79  1283               	bcf	status, 6	;RP1=0, select bank0
  5862  0E7A  1303               	movwf	(__lastB+1)
  5863  0E7B  00DB               	line	90
  5864                           	
  5865                           l294:	
  5866  0E7C                     	return
  5867  0E7C  0008               	opt stack 0
  5868                           GLOBAL	__end_of_config
  5869                           	__end_of_config:
  5870  0E7D                     	signat	_config,89
  5871                           	global	_init_remote
  5872                           
  5873 ;; *************** function _init_remote *****************
  5874 ;; Defined at:
  5875 ;;		line 3 in file "Remote.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, status,2, status,0
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5889 ;;      Params:         0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    4
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_config
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5903                           	file	"Remote.c"
  5904                           	line	3
  5905                           global __ptext16
  5906                           __ptext16:	;psect for function _init_remote
  5907  02ED                     psect	text16
  5908                           	file	"Remote.c"
  5909                           	line	3
  5910                           	global	__size_of_init_remote
  5911                           	__size_of_init_remote	equ	__end_of_init_remote-_init_remote
  5912  0011                     	
  5913                           _init_remote:	
  5914  02ED                     ;incstack = 0
  5915                           	opt	stack 2
  5916                           ; Regs used in _init_remote: [wreg+status,2+status,0]
  5917                           	line	6
  5918                           	
  5919                           l2618:	
  5920  02ED                     ;Remote.c: 6:     T2CONbits.TOUTPS = 0b0000;
  5921                           	movlw	((0 & ((1<<4)-1))<<3)|not (((1<<4)-1)<<3)
  5922  02ED  3087               	bcf	status, 5	;RP0=0, select bank0
  5923  02EE  1283               	bcf	status, 6	;RP1=0, select bank0
  5924  02EF  1303               	andwf	(18),f	;volatile
  5925  02F0  0592               	line	7
  5926                           ;Remote.c: 7:     T2CONbits.T2CKPS = 0b00;
  5927                           	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  5928  02F1  30FC               	andwf	(18),f	;volatile
  5929  02F2  0592               	line	9
  5930                           	
  5931                           l2620:	
  5932  02F3                     ;Remote.c: 9:     PR2 = 25;
  5933                           	movlw	low(019h)
  5934  02F3  3019               	bsf	status, 5	;RP0=1, select bank1
  5935  02F4  1683               	bcf	status, 6	;RP1=0, select bank1
  5936  02F5  1303               	movwf	(146)^080h	;volatile
  5937  02F6  0092               	line	12
  5938                           	
  5939                           l2622:	
  5940  02F7                     ;Remote.c: 12:     PIR1bits.TMR2IF = 0;
  5941                           	bcf	status, 5	;RP0=0, select bank0
  5942  02F7  1283               	bcf	status, 6	;RP1=0, select bank0
  5943  02F8  1303               	bcf	(12),1	;volatile
  5944  02F9  108C               	line	13
  5945                           	
  5946                           l2624:	
  5947  02FA                     ;Remote.c: 13:     PIE1bits.TMR2IE = 1;
  5948                           	bsf	status, 5	;RP0=1, select bank1
  5949  02FA  1683               	bcf	status, 6	;RP1=0, select bank1
  5950  02FB  1303               	bsf	(140)^080h,1	;volatile
  5951  02FC  148C               	line	16
  5952                           	
  5953                           l365:	
  5954  02FD                     	return
  5955  02FD  0008               	opt stack 0
  5956                           GLOBAL	__end_of_init_remote
  5957                           	__end_of_init_remote:
  5958  02FE                     	signat	_init_remote,89
  5959                           	global	_init_adc
  5960                           
  5961 ;; *************** function _init_adc *****************
  5962 ;; Defined at:
  5963 ;;		line 5 in file "Volume.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;		None
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;		None
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  1    wreg      void 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5977 ;;      Params:         0       0       0       0       0
  5978 ;;      Locals:         0       0       0       0       0
  5979 ;;      Temps:          0       0       0       0       0
  5980 ;;      Totals:         0       0       0       0       0
  5981 ;;Total ram usage:        0 bytes
  5982 ;; Hardware stack levels used:    1
  5983 ;; Hardware stack levels required when called:    4
  5984 ;; This function calls:
  5985 ;;		Nothing
  5986 ;; This function is called by:
  5987 ;;		_config
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5991                           	file	"Volume.c"
  5992                           	line	5
  5993                           global __ptext17
  5994                           __ptext17:	;psect for function _init_adc
  5995  0960                     psect	text17
  5996                           	file	"Volume.c"
  5997                           	line	5
  5998                           	global	__size_of_init_adc
  5999                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  6000  0017                     	
  6001                           _init_adc:	
  6002  0960                     ;incstack = 0
  6003                           	opt	stack 2
  6004                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  6005                           	line	7
  6006                           	
  6007                           l2608:	
  6008  0960                     ;Volume.c: 7:     ADCON0bits.CHS = 0b0111;
  6009                           	bcf	status, 5	;RP0=0, select bank0
  6010  0960  1283               	bcf	status, 6	;RP1=0, select bank0
  6011  0961  1303               	movf	(31),w	;volatile
  6012  0962  081F               	andlw	not (((1<<4)-1)<<2)
  6013  0963  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  6014  0964  381C               	movwf	(31)	;volatile
  6015  0965  009F               	line	8
  6016                           ;Volume.c: 8:     ADCON0bits.ADCS = 0b001;
  6017                           	movf	(31),w	;volatile
  6018  0966  081F               	andlw	not (((1<<2)-1)<<6)
  6019  0967  393F               	iorlw	(01h & ((1<<2)-1))<<6
  6020  0968  3840               	movwf	(31)	;volatile
  6021  0969  009F               	line	9
  6022                           	
  6023                           l2610:	
  6024  096A                     ;Volume.c: 9:     ADCON1bits.ADFM = 1;
  6025                           	bsf	status, 5	;RP0=1, select bank1
  6026  096A  1683               	bcf	status, 6	;RP1=0, select bank1
  6027  096B  1303               	bsf	(159)^080h,7	;volatile
  6028  096C  179F               	line	11
  6029                           	
  6030                           l2612:	
  6031  096D                     ;Volume.c: 11:     PIR1bits.ADIF = 0;
  6032                           	bcf	status, 5	;RP0=0, select bank0
  6033  096D  1283               	bcf	status, 6	;RP1=0, select bank0
  6034  096E  1303               	bcf	(12),6	;volatile
  6035  096F  130C               	line	12
  6036                           	
  6037                           l2614:	
  6038  0970                     ;Volume.c: 12:     PIE1bits.ADIE = 1;
  6039                           	bsf	status, 5	;RP0=1, select bank1
  6040  0970  1683               	bcf	status, 6	;RP1=0, select bank1
  6041  0971  1303               	bsf	(140)^080h,6	;volatile
  6042  0972  170C               	line	14
  6043                           	
  6044                           l2616:	
  6045  0973                     ;Volume.c: 14:     ADCON0bits.ADON = 1;
  6046                           	bcf	status, 5	;RP0=0, select bank0
  6047  0973  1283               	bcf	status, 6	;RP1=0, select bank0
  6048  0974  1303               	bsf	(31),0	;volatile
  6049  0975  141F               	line	15
  6050                           	
  6051                           l321:	
  6052  0976                     	return
  6053  0976  0008               	opt stack 0
  6054                           GLOBAL	__end_of_init_adc
  6055                           	__end_of_init_adc:
  6056  0977                     	signat	_init_adc,89
  6057                           	global	_display_init
  6058                           
  6059 ;; *************** function _display_init *****************
  6060 ;; Defined at:
  6061 ;;		line 26 in file "Display.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;		None
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;		None
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  1    wreg      void 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0, pclath, cstack
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6075 ;;      Params:         0       0       0       0       0
  6076 ;;      Locals:         0       0       0       0       0
  6077 ;;      Temps:          0       0       0       0       0
  6078 ;;      Totals:         0       0       0       0       0
  6079 ;;Total ram usage:        0 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    5
  6082 ;; This function calls:
  6083 ;;		_spiWrite
  6084 ;; This function is called by:
  6085 ;;		_config
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  6089                           	file	"Display.c"
  6090                           	line	26
  6091                           global __ptext18
  6092                           __ptext18:	;psect for function _display_init
  6093  0C55                     psect	text18
  6094                           	file	"Display.c"
  6095                           	line	26
  6096                           	global	__size_of_display_init
  6097                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  6098  004E                     	
  6099                           _display_init:	
  6100  0C55                     ;incstack = 0
  6101                           	opt	stack 1
  6102                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  6103                           	line	30
  6104                           	
  6105                           l2512:	
  6106  0C55                     ;Display.c: 30:     SSPCON = 0b00100000;
  6107                           	movlw	low(020h)
  6108  0C55  3020               	bcf	status, 5	;RP0=0, select bank0
  6109  0C56  1283               	bcf	status, 6	;RP1=0, select bank0
  6110  0C57  1303               	movwf	(20)	;volatile
  6111  0C58  0094               	line	31
  6112                           ;Display.c: 31:     SSPSTAT = 0b01000000;
  6113                           	movlw	low(040h)
  6114  0C59  3040               	bsf	status, 5	;RP0=1, select bank1
  6115  0C5A  1683               	bcf	status, 6	;RP1=0, select bank1
  6116  0C5B  1303               	movwf	(148)^080h	;volatile
  6117  0C5C  0094               	line	34
  6118                           	
  6119                           l2514:	
  6120  0C5D                     ;Display.c: 34:     TRISD = 0x00;
  6121                           	clrf	(136)^080h	;volatile
  6122  0C5D  0188               	line	35
  6123                           	
  6124                           l2516:	
  6125  0C5E                     ;Display.c: 35:     TRISC = 0x00;
  6126                           	clrf	(135)^080h	;volatile
  6127  0C5E  0187               	line	38
  6128                           	
  6129                           l2518:	
  6130  0C5F                     ;Display.c: 38:     PORTDbits.RD2 = 1;
  6131                           	bcf	status, 5	;RP0=0, select bank0
  6132  0C5F  1283               	bcf	status, 6	;RP1=0, select bank0
  6133  0C60  1303               	bsf	(8),2	;volatile
  6134  0C61  1508               	line	39
  6135                           	
  6136                           l2520:	
  6137  0C62                     ;Display.c: 39:     PORTDbits.RD6 = 0;
  6138                           	bcf	(8),6	;volatile
  6139  0C62  1308               	line	40
  6140                           	
  6141                           l2522:	
  6142  0C63                     ;Display.c: 40:     PORTDbits.RD4 = 1;
  6143                           	bsf	(8),4	;volatile
  6144  0C63  1608               	line	41
  6145                           	
  6146                           l2524:	
  6147  0C64                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  6148                           	bcf	(7),3	;volatile
  6149  0C64  1187               	line	44
  6150                           	
  6151                           l2526:	
  6152  0C65                     ;Display.c: 44:     PORTDbits.RD7 = 1;
  6153                           	bsf	(8),7	;volatile
  6154  0C65  1788               	line	45
  6155                           	
  6156                           l2528:	
  6157  0C66                     ;Display.c: 45:     PORTDbits.RD4 = 0;
  6158                           	bcf	(8),4	;volatile
  6159  0C66  1208               	line	46
  6160                           	
  6161                           l2530:	
  6162  0C67                     ;Display.c: 46:     spiWrite(0b01001111);
  6163                           	movlw	low(04Fh)
  6164  0C67  304F               	fcall	_spiWrite
  6165  0C68  120A  158A  2150  120A  158A  	line	47
  6166                           	
  6167                           l2532:	
  6168  0C6D                     ;Display.c: 47:     PORTDbits.RD4 = 1;
  6169                           	bcf	status, 5	;RP0=0, select bank0
  6170  0C6D  1283               	bcf	status, 6	;RP1=0, select bank0
  6171  0C6E  1303               	bsf	(8),4	;volatile
  6172  0C6F  1608               	line	50
  6173                           	
  6174                           l2534:	
  6175  0C70                     ;Display.c: 50:     PORTDbits.RD7 = 1;
  6176                           	bsf	(8),7	;volatile
  6177  0C70  1788               	line	51
  6178                           	
  6179                           l2536:	
  6180  0C71                     ;Display.c: 51:     PORTDbits.RD4 = 0;
  6181                           	bcf	(8),4	;volatile
  6182  0C71  1208               	line	52
  6183                           	
  6184                           l2538:	
  6185  0C72                     ;Display.c: 52:     spiWrite(0b10000001);
  6186                           	movlw	low(081h)
  6187  0C72  3081               	fcall	_spiWrite
  6188  0C73  120A  158A  2150  120A  158A  	line	53
  6189                           	
  6190                           l2540:	
  6191  0C78                     ;Display.c: 53:     PORTDbits.RD4 = 1;
  6192                           	bcf	status, 5	;RP0=0, select bank0
  6193  0C78  1283               	bcf	status, 6	;RP1=0, select bank0
  6194  0C79  1303               	bsf	(8),4	;volatile
  6195  0C7A  1608               	line	57
  6196                           	
  6197                           l2542:	
  6198  0C7B                     ;Display.c: 57:     PORTDbits.RD7 = 0;
  6199                           	bcf	(8),7	;volatile
  6200  0C7B  1388               	line	61
  6201                           	
  6202                           l2544:	
  6203  0C7C                     ;Display.c: 61:     PORTCbits.RC2 = 1;
  6204                           	bsf	(7),2	;volatile
  6205  0C7C  1507               	line	62
  6206                           	
  6207                           l2546:	
  6208  0C7D                     ;Display.c: 62:     PORTCbits.RC6 = 0;
  6209                           	bcf	(7),6	;volatile
  6210  0C7D  1307               	line	63
  6211                           	
  6212                           l2548:	
  6213  0C7E                     ;Display.c: 63:     PORTCbits.RC4 = 1;
  6214                           	bsf	(7),4	;volatile
  6215  0C7E  1607               	line	64
  6216                           	
  6217                           l2550:	
  6218  0C7F                     ;Display.c: 64:     PORTCbits.RC3 = 0;
  6219                           	bcf	(7),3	;volatile
  6220  0C7F  1187               	line	66
  6221                           	
  6222                           l2552:	
  6223  0C80                     ;Display.c: 66:     PORTCbits.RC7 = 1;
  6224                           	bsf	(7),7	;volatile
  6225  0C80  1787               	line	67
  6226                           	
  6227                           l2554:	
  6228  0C81                     ;Display.c: 67:     PORTCbits.RC4 = 0;
  6229                           	bcf	(7),4	;volatile
  6230  0C81  1207               	line	68
  6231                           	
  6232                           l2556:	
  6233  0C82                     ;Display.c: 68:     spiWrite(0b01001111);
  6234                           	movlw	low(04Fh)
  6235  0C82  304F               	fcall	_spiWrite
  6236  0C83  120A  158A  2150  120A  158A  	line	70
  6237                           	
  6238                           l2558:	
  6239  0C88                     ;Display.c: 70:     PORTCbits.RC4 = 1;
  6240                           	bcf	status, 5	;RP0=0, select bank0
  6241  0C88  1283               	bcf	status, 6	;RP1=0, select bank0
  6242  0C89  1303               	bsf	(7),4	;volatile
  6243  0C8A  1607               	line	72
  6244                           	
  6245                           l2560:	
  6246  0C8B                     ;Display.c: 72:     PORTCbits.RC7 = 1;
  6247                           	bsf	(7),7	;volatile
  6248  0C8B  1787               	line	73
  6249                           	
  6250                           l2562:	
  6251  0C8C                     ;Display.c: 73:     PORTCbits.RC4 = 0;
  6252                           	bcf	(7),4	;volatile
  6253  0C8C  1207               	line	75
  6254                           	
  6255                           l2564:	
  6256  0C8D                     ;Display.c: 75:     spiWrite(0b10000001);
  6257                           	movlw	low(081h)
  6258  0C8D  3081               	fcall	_spiWrite
  6259  0C8E  120A  158A  2150  120A  158A  	line	76
  6260                           	
  6261                           l2566:	
  6262  0C93                     ;Display.c: 76:     PORTCbits.RC4 = 1;
  6263                           	bcf	status, 5	;RP0=0, select bank0
  6264  0C93  1283               	bcf	status, 6	;RP1=0, select bank0
  6265  0C94  1303               	bsf	(7),4	;volatile
  6266  0C95  1607               	line	79
  6267                           	
  6268                           l2568:	
  6269  0C96                     ;Display.c: 79:     PORTCbits.RC7 = 0;
  6270                           	bcf	(7),7	;volatile
  6271  0C96  1387               	line	82
  6272                           	
  6273                           l2570:	
  6274  0C97                     ;Display.c: 82:     _selectedDisplay = 0;
  6275                           	bsf	status, 5	;RP0=1, select bank1
  6276  0C97  1683               	bcf	status, 6	;RP1=0, select bank1
  6277  0C98  1303               	clrf	(__selectedDisplay)^080h
  6278  0C99  01D1               	line	83
  6279                           	
  6280                           l2572:	
  6281  0C9A                     ;Display.c: 83:     lastVolume = 99;
  6282                           	movlw	063h
  6283  0C9A  3063               	movwf	(_lastVolume)^080h
  6284  0C9B  00CB               	movlw	0
  6285  0C9C  3000               	movwf	((_lastVolume)^080h)+1
  6286  0C9D  00CC               	line	84
  6287                           	
  6288                           l2574:	
  6289  0C9E                     ;Display.c: 84:     lastInput = 99;
  6290                           	movlw	063h
  6291  0C9E  3063               	movwf	(_lastInput)^080h
  6292  0C9F  00C9               	movlw	0
  6293  0CA0  3000               	movwf	((_lastInput)^080h)+1
  6294  0CA1  00CA               	line	86
  6295                           	
  6296                           l129:	
  6297  0CA2                     	return
  6298  0CA2  0008               	opt stack 0
  6299                           GLOBAL	__end_of_display_init
  6300                           	__end_of_display_init:
  6301  0CA3                     	signat	_display_init,89
  6302                           	global	_spiWrite
  6303                           
  6304 ;; *************** function _spiWrite *****************
  6305 ;; Defined at:
  6306 ;;		line 267 in file "Display.c"
  6307 ;; Parameters:    Size  Location     Type
  6308 ;;  data            1    wreg     unsigned char 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  data            1    0[BANK1 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  1    wreg      void 
  6313 ;; Registers used:
  6314 ;;		wreg
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6320 ;;      Params:         0       0       0       0       0
  6321 ;;      Locals:         0       0       1       0       0
  6322 ;;      Temps:          0       0       0       0       0
  6323 ;;      Totals:         0       0       1       0       0
  6324 ;;Total ram usage:        1 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    4
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_display_init
  6331 ;;		_write_space
  6332 ;;		_write_font
  6333 ;;		_white_space
  6334 ;;		_write_volume
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6338                           	line	267
  6339                           global __ptext19
  6340                           __ptext19:	;psect for function _spiWrite
  6341  0950                     psect	text19
  6342                           	file	"Display.c"
  6343                           	line	267
  6344                           	global	__size_of_spiWrite
  6345                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  6346  0010                     	
  6347                           _spiWrite:	
  6348  0950                     ;incstack = 0
  6349 ;; hardware stack exceeded
  6350                           	opt	stack 0
  6351                           ; Regs used in _spiWrite: [wreg]
  6352                           ;spiWrite@data stored from wreg
  6353                           	bsf	status, 5	;RP0=1, select bank1
  6354  0950  1683               	bcf	status, 6	;RP1=0, select bank1
  6355  0951  1303               	movwf	(spiWrite@data)^080h
  6356  0952  00A0               	line	269
  6357                           	
  6358                           l2042:	
  6359  0953                     ;Display.c: 267: void spiWrite(char data);Display.c: 268: {;Display.c: 269:     SSPBUF =
                                  data;
  6360                           	movf	(spiWrite@data)^080h,w
  6361  0953  0820               	bcf	status, 5	;RP0=0, select bank0
  6362  0954  1283               	bcf	status, 6	;RP1=0, select bank0
  6363  0955  1303               	movwf	(19)	;volatile
  6364  0956  0093               	line	271
  6365                           ;Display.c: 271:     while(!SSPSTATbits.BF)
  6366                           	goto	l198
  6367  0957  2958               	
  6368                           l199:	
  6369  0958                     	line	274
  6370                           ;Display.c: 272:     {;Display.c: 274:     }
  6371                           	
  6372                           l198:	
  6373  0958                     	line	271
  6374                           ;Display.c: 271:     while(!SSPSTATbits.BF)
  6375                           	bsf	status, 5	;RP0=1, select bank1
  6376  0958  1683               	bcf	status, 6	;RP1=0, select bank1
  6377  0959  1303               	btfss	(148)^080h,0	;volatile
  6378  095A  1C14               	goto	u1581
  6379  095B  295D               	goto	u1580
  6380  095C  295E               u1581:
  6381  095D                     	goto	l198
  6382  095D  2958               u1580:
  6383  095E                     	goto	l201
  6384  095E  295F               	
  6385                           l200:	
  6386  095F                     	line	277
  6387                           	
  6388                           l201:	
  6389  095F                     	return
  6390  095F  0008               	opt stack 0
  6391                           GLOBAL	__end_of_spiWrite
  6392                           	__end_of_spiWrite:
  6393  0960                     	signat	_spiWrite,4217
  6394                           	global	_activateSelectedRelay
  6395                           
  6396 ;; *************** function _activateSelectedRelay *****************
  6397 ;; Defined at:
  6398 ;;		line 3 in file "Input.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;		None
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  1    wreg      void 
  6405 ;; Registers used:
  6406 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6412 ;;      Params:         0       0       0       0       0
  6413 ;;      Locals:         0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0
  6415 ;;      Totals:         0       0       0       0       0
  6416 ;;Total ram usage:        0 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:    4
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_main
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6426                           	file	"Input.c"
  6427                           	line	3
  6428                           global __ptext20
  6429                           __ptext20:	;psect for function _activateSelectedRelay
  6430  0A6A                     psect	text20
  6431                           	file	"Input.c"
  6432                           	line	3
  6433                           	global	__size_of_activateSelectedRelay
  6434                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  6435  003C                     	
  6436                           _activateSelectedRelay:	
  6437  0A6A                     ;incstack = 0
  6438                           	opt	stack 3
  6439                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  6440                           	line	5
  6441                           	
  6442                           l2772:	
  6443  0A6A                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  6444                           	bsf	status, 5	;RP0=1, select bank1
  6445  0A6A  1683               	bcf	status, 6	;RP1=0, select bank1
  6446  0A6B  1303               	movf	((__inputUpdateRequired)^080h),w
  6447  0A6C  0852               	btfss	status,2
  6448  0A6D  1D03               	goto	u2871
  6449  0A6E  2A70               	goto	u2870
  6450  0A6F  2A71               u2871:
  6451  0A70                     	goto	l2776
  6452  0A70  2A73               u2870:
  6453  0A71                     	goto	l219
  6454  0A71  2AA5               	
  6455                           l2774:	
  6456  0A72                     	goto	l219
  6457  0A72  2AA5               	
  6458                           l218:	
  6459  0A73                     	line	7
  6460                           	
  6461                           l2776:	
  6462  0A73                     ;Input.c: 7:     PORTA = 0x0F;
  6463                           	movlw	low(0Fh)
  6464  0A73  300F               	bcf	status, 5	;RP0=0, select bank0
  6465  0A74  1283               	bcf	status, 6	;RP1=0, select bank0
  6466  0A75  1303               	movwf	(5)	;volatile
  6467  0A76  0085               	line	9
  6468                           ;Input.c: 9:     switch (_selectedInput) {
  6469                           	goto	l2790
  6470  0A77  2A8D               	line	10
  6471                           ;Input.c: 10:         case 0:
  6472                           	
  6473                           l221:	
  6474  0A78                     	line	11
  6475                           	
  6476                           l2778:	
  6477  0A78                     ;Input.c: 11:             PORTA = ~0x01;
  6478                           	movlw	low(0FEh)
  6479  0A78  30FE               	bcf	status, 5	;RP0=0, select bank0
  6480  0A79  1283               	movwf	(5)	;volatile
  6481  0A7A  0085               	line	12
  6482                           ;Input.c: 12:             break;
  6483                           	goto	l2792
  6484  0A7B  2AA2               	line	13
  6485                           ;Input.c: 13:         case 1:
  6486                           	
  6487                           l223:	
  6488  0A7C                     	line	14
  6489                           	
  6490                           l2780:	
  6491  0A7C                     ;Input.c: 14:             PORTA = ~0x02;
  6492                           	movlw	low(0FDh)
  6493  0A7C  30FD               	bcf	status, 5	;RP0=0, select bank0
  6494  0A7D  1283               	movwf	(5)	;volatile
  6495  0A7E  0085               	line	15
  6496                           ;Input.c: 15:             break;
  6497                           	goto	l2792
  6498  0A7F  2AA2               	line	16
  6499                           ;Input.c: 16:         case 2:
  6500                           	
  6501                           l224:	
  6502  0A80                     	line	17
  6503                           	
  6504                           l2782:	
  6505  0A80                     ;Input.c: 17:             PORTA = ~0x04;
  6506                           	movlw	low(0FBh)
  6507  0A80  30FB               	bcf	status, 5	;RP0=0, select bank0
  6508  0A81  1283               	movwf	(5)	;volatile
  6509  0A82  0085               	line	18
  6510                           ;Input.c: 18:             break;
  6511                           	goto	l2792
  6512  0A83  2AA2               	line	19
  6513                           ;Input.c: 19:         case 3:
  6514                           	
  6515                           l225:	
  6516  0A84                     	line	20
  6517                           	
  6518                           l2784:	
  6519  0A84                     ;Input.c: 20:             PORTA = ~0x08;
  6520                           	movlw	low(0F7h)
  6521  0A84  30F7               	bcf	status, 5	;RP0=0, select bank0
  6522  0A85  1283               	movwf	(5)	;volatile
  6523  0A86  0085               	line	21
  6524                           ;Input.c: 21:             break;
  6525                           	goto	l2792
  6526  0A87  2AA2               	line	22
  6527                           ;Input.c: 22:         default:
  6528                           	
  6529                           l226:	
  6530  0A88                     	line	23
  6531                           	
  6532                           l2786:	
  6533  0A88                     ;Input.c: 23:             PORTA = ~0x01;
  6534                           	movlw	low(0FEh)
  6535  0A88  30FE               	bcf	status, 5	;RP0=0, select bank0
  6536  0A89  1283               	movwf	(5)	;volatile
  6537  0A8A  0085               	line	24
  6538                           ;Input.c: 24:             break;
  6539                           	goto	l2792
  6540  0A8B  2AA2               	line	25
  6541                           	
  6542                           l2788:	
  6543  0A8C                     ;Input.c: 25:     }
  6544                           	goto	l2792
  6545  0A8C  2AA2               	
  6546                           l220:	
  6547  0A8D                     	
  6548                           l2790:	
  6549  0A8D                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6550                           ; Switch size 1, requested type "space"
  6551                           ; Number of cases is 1, Range of values is 0 to 0
  6552                           ; switch strategies available:
  6553                           ; Name         Instructions Cycles
  6554                           ; simple_byte            4     3 (average)
  6555                           ; direct_byte           11     8 (fixed)
  6556                           ; jumptable            260     6 (fixed)
  6557                           ;	Chosen strategy is simple_byte
  6558                           
  6559                           	bsf	status, 5	;RP0=1, select bank1
  6560  0A8D  1683               	bcf	status, 6	;RP1=0, select bank1
  6561  0A8E  1303               	movf (__selectedInput+1)^080h,w
  6562  0A8F  0850               	opt asmopt_push
  6563                           	opt asmopt_off
  6564                           	xorlw	0^0	; case 0
  6565  0A90  3A00               	skipnz
  6566  0A91  1903               	goto	l3080
  6567  0A92  2A94               	goto	l2786
  6568  0A93  2A88               	opt asmopt_pop
  6569                           	
  6570                           l3080:	
  6571  0A94                     ; Switch size 1, requested type "space"
  6572                           ; Number of cases is 4, Range of values is 0 to 3
  6573                           ; switch strategies available:
  6574                           ; Name         Instructions Cycles
  6575                           ; simple_byte           13     7 (average)
  6576                           ; direct_byte           20     8 (fixed)
  6577                           ; jumptable            260     6 (fixed)
  6578                           ;	Chosen strategy is simple_byte
  6579                           
  6580                           	movf (__selectedInput)^080h,w
  6581  0A94  084F               	opt asmopt_push
  6582                           	opt asmopt_off
  6583                           	xorlw	0^0	; case 0
  6584  0A95  3A00               	skipnz
  6585  0A96  1903               	goto	l2778
  6586  0A97  2A78               	xorlw	1^0	; case 1
  6587  0A98  3A01               	skipnz
  6588  0A99  1903               	goto	l2780
  6589  0A9A  2A7C               	xorlw	2^1	; case 2
  6590  0A9B  3A03               	skipnz
  6591  0A9C  1903               	goto	l2782
  6592  0A9D  2A80               	xorlw	3^2	; case 3
  6593  0A9E  3A01               	skipnz
  6594  0A9F  1903               	goto	l2784
  6595  0AA0  2A84               	goto	l2786
  6596  0AA1  2A88               	opt asmopt_pop
  6597                           
  6598                           	
  6599                           l222:	
  6600  0AA2                     	line	27
  6601                           	
  6602                           l2792:	
  6603  0AA2                     ;Input.c: 27:     _inputUpdateRequired = 0;
  6604                           	bsf	status, 5	;RP0=1, select bank1
  6605  0AA2  1683               	bcf	status, 6	;RP1=0, select bank1
  6606  0AA3  1303               	clrf	(__inputUpdateRequired)^080h
  6607  0AA4  01D2               	line	28
  6608                           	
  6609                           l219:	
  6610  0AA5                     	return
  6611  0AA5  0008               	opt stack 0
  6612                           GLOBAL	__end_of_activateSelectedRelay
  6613                           	__end_of_activateSelectedRelay:
  6614  0AA6                     	signat	_activateSelectedRelay,89
  6615                           	global	_isr
  6616                           
  6617 ;; *************** function _isr *****************
  6618 ;; Defined at:
  6619 ;;		line 51 in file "main.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;		None
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6633 ;;      Params:         0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0
  6635 ;;      Temps:          0       4       0       0       0
  6636 ;;      Totals:         0       4       0       0       0
  6637 ;;Total ram usage:        4 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    3
  6640 ;; This function calls:
  6641 ;;		_handle_potmeter
  6642 ;;		_handle_rotary
  6643 ;;		_poll_receiver
  6644 ;;		_start_receive
  6645 ;; This function is called by:
  6646 ;;		Interrupt level 1
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6650                           	file	"main.c"
  6651                           	line	51
  6652                           global __ptext21
  6653                           __ptext21:	;psect for function _isr
  6654  0AA6                     psect	text21
  6655                           	file	"main.c"
  6656                           	line	51
  6657                           	global	__size_of_isr
  6658                           	__size_of_isr	equ	__end_of_isr-_isr
  6659  0042                     	
  6660                           _isr:	
  6661  0AA6                     ;incstack = 0
  6662 ;; hardware stack exceeded
  6663                           	opt	stack 0
  6664                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6665                           psect	intentry,class=CODE,delta=2
  6666                           global __pintentry
  6667                           __pintentry:
  6668  0004                     global interrupt_function
  6669                           interrupt_function:
  6670  0004                     	global saved_w
  6671                           	saved_w	set	btemp+0
  6672  007E                     	movwf	saved_w
  6673  0004  00FE               	swapf	status,w
  6674  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  6675  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  6676  0007  1303               	movwf	(??_isr+0)
  6677  0008  00D6               	movf	fsr0,w
  6678  0009  0804               	movwf	(??_isr+1)
  6679  000A  00D7               	movf	pclath,w
  6680  000B  080A               	movwf	(??_isr+2)
  6681  000C  00D8               	movf	btemp+1,w
  6682  000D  087F               	movwf	(??_isr+3)
  6683  000E  00D9               	ljmp	_isr
  6684  000F  120A  158A  2AA6   psect	text21
  6685                           	line	53
  6686                           	
  6687                           i1l2936:	
  6688  0AA6                     ;main.c: 53:     if (INTCONbits.RBIF) {
  6689                           	btfss	(11),0	;volatile
  6690  0AA6  1C0B               	goto	u305_21
  6691  0AA7  2AA9               	goto	u305_20
  6692  0AA8  2AAA               u305_21:
  6693  0AA9                     	goto	i1l2946
  6694  0AA9  2ABD               u305_20:
  6695  0AAA                     	line	55
  6696                           	
  6697                           i1l2938:	
  6698  0AAA                     ;main.c: 55:         handle_rotary();
  6699                           	fcall	_handle_rotary
  6700  0AAA  120A  158A  26EF  120A  158A  	line	57
  6701                           	
  6702                           i1l2940:	
  6703  0AAF                     ;main.c: 57:         if (PORTBbits.RB0 == 0) {
  6704                           	bcf	status, 5	;RP0=0, select bank0
  6705  0AAF  1283               	bcf	status, 6	;RP1=0, select bank0
  6706  0AB0  1303               	btfsc	(6),0	;volatile
  6707  0AB1  1806               	goto	u306_21
  6708  0AB2  2AB4               	goto	u306_20
  6709  0AB3  2AB5               u306_21:
  6710  0AB4                     	goto	i1l2944
  6711  0AB4  2ABB               u306_20:
  6712  0AB5                     	line	58
  6713                           	
  6714                           i1l2942:	
  6715  0AB5                     ;main.c: 58:             start_receive();
  6716                           	fcall	_start_receive
  6717  0AB5  120A  118A  27F7  120A  158A  	goto	i1l2944
  6718  0ABA  2ABB               	line	59
  6719                           ;main.c: 59:         }
  6720                           	
  6721                           i1l69:	
  6722  0ABB                     	line	61
  6723                           	
  6724                           i1l2944:	
  6725  0ABB                     ;main.c: 61:         INTCONbits.RBIF = 0;
  6726                           	bcf	(11),0	;volatile
  6727  0ABB  100B               	goto	i1l2946
  6728  0ABC  2ABD               	line	62
  6729                           ;main.c: 62:     }
  6730                           	
  6731                           i1l68:	
  6732  0ABD                     	line	64
  6733                           	
  6734                           i1l2946:	
  6735  0ABD                     ;main.c: 64:     if (PIR1bits.ADIF) {
  6736                           	bcf	status, 5	;RP0=0, select bank0
  6737  0ABD  1283               	bcf	status, 6	;RP1=0, select bank0
  6738  0ABE  1303               	btfss	(12),6	;volatile
  6739  0ABF  1F0C               	goto	u307_21
  6740  0AC0  2AC2               	goto	u307_20
  6741  0AC1  2AC3               u307_21:
  6742  0AC2                     	goto	i1l2952
  6743  0AC2  2ACC               u307_20:
  6744  0AC3                     	line	66
  6745                           	
  6746                           i1l2948:	
  6747  0AC3                     ;main.c: 66:         handle_potmeter();
  6748                           	fcall	_handle_potmeter
  6749  0AC3  120A  158A  267D  120A  158A  	line	68
  6750                           	
  6751                           i1l2950:	
  6752  0AC8                     ;main.c: 68:         PIR1bits.ADIF = 0;
  6753                           	bcf	status, 5	;RP0=0, select bank0
  6754  0AC8  1283               	bcf	status, 6	;RP1=0, select bank0
  6755  0AC9  1303               	bcf	(12),6	;volatile
  6756  0ACA  130C               	goto	i1l2952
  6757  0ACB  2ACC               	line	69
  6758                           ;main.c: 69:     }
  6759                           	
  6760                           i1l70:	
  6761  0ACC                     	line	71
  6762                           	
  6763                           i1l2952:	
  6764  0ACC                     ;main.c: 71:     if (PIR1bits.TMR2IF) {
  6765                           	btfss	(12),1	;volatile
  6766  0ACC  1C8C               	goto	u308_21
  6767  0ACD  2ACF               	goto	u308_20
  6768  0ACE  2AD0               u308_21:
  6769  0ACF                     	goto	i1l72
  6770  0ACF  2ADD               u308_20:
  6771  0AD0                     	line	72
  6772                           	
  6773                           i1l2954:	
  6774  0AD0                     ;main.c: 72:         PR2 = 25;
  6775                           	movlw	low(019h)
  6776  0AD0  3019               	bsf	status, 5	;RP0=1, select bank1
  6777  0AD1  1683               	bcf	status, 6	;RP1=0, select bank1
  6778  0AD2  1303               	movwf	(146)^080h	;volatile
  6779  0AD3  0092               	line	74
  6780                           	
  6781                           i1l2956:	
  6782  0AD4                     ;main.c: 74:         poll_receiver();
  6783                           	fcall	_poll_receiver
  6784  0AD4  120A  158A  24A3  120A  158A  	line	76
  6785                           	
  6786                           i1l2958:	
  6787  0AD9                     ;main.c: 76:         PIR1bits.TMR2IF = 0;
  6788                           	bcf	status, 5	;RP0=0, select bank0
  6789  0AD9  1283               	bcf	status, 6	;RP1=0, select bank0
  6790  0ADA  1303               	bcf	(12),1	;volatile
  6791  0ADB  108C               	goto	i1l72
  6792  0ADC  2ADD               	line	78
  6793                           ;main.c: 78:     }
  6794                           	
  6795                           i1l71:	
  6796  0ADD                     	line	79
  6797                           	
  6798                           i1l72:	
  6799  0ADD                     	movf	(??_isr+3),w
  6800  0ADD  0859               	movwf	btemp+1
  6801  0ADE  00FF               	movf	(??_isr+2),w
  6802  0ADF  0858               	movwf	pclath
  6803  0AE0  008A               	movf	(??_isr+1),w
  6804  0AE1  0857               	movwf	fsr0
  6805  0AE2  0084               	swapf	(??_isr+0)^00h,w
  6806  0AE3  0E56               	movwf	status
  6807  0AE4  0083               	swapf	saved_w,f
  6808  0AE5  0EFE               	swapf	saved_w,w
  6809  0AE6  0E7E               	retfie
  6810  0AE7  0009               	opt stack 0
  6811                           GLOBAL	__end_of_isr
  6812                           	__end_of_isr:
  6813  0AE8                     	signat	_isr,89
  6814                           	global	_start_receive
  6815                           
  6816 ;; *************** function _start_receive *****************
  6817 ;; Defined at:
  6818 ;;		line 18 in file "Remote.c"
  6819 ;; Parameters:    Size  Location     Type
  6820 ;;		None
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;		None
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  1    wreg      void 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2, status,0, pclath, cstack
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6832 ;;      Params:         0       0       0       0       0
  6833 ;;      Locals:         0       0       0       0       0
  6834 ;;      Temps:          0       0       0       0       0
  6835 ;;      Totals:         0       0       0       0       0
  6836 ;;Total ram usage:        0 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    1
  6839 ;; This function calls:
  6840 ;;		_poll_receiver
  6841 ;; This function is called by:
  6842 ;;		_isr
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6846                           	file	"Remote.c"
  6847                           	line	18
  6848                           global __ptext22
  6849                           __ptext22:	;psect for function _start_receive
  6850  07F7                     psect	text22
  6851                           	file	"Remote.c"
  6852                           	line	18
  6853                           	global	__size_of_start_receive
  6854                           	__size_of_start_receive	equ	__end_of_start_receive-_start_receive
  6855  0009                     	
  6856                           _start_receive:	
  6857  07F7                     ;incstack = 0
  6858 ;; hardware stack exceeded
  6859                           	opt	stack 0
  6860                           ; Regs used in _start_receive: [wreg+status,2+status,0+pclath+cstack]
  6861                           	line	20
  6862                           	
  6863                           i1l2890:	
  6864  07F7                     ;Remote.c: 20:     poll_receiver();
  6865                           	fcall	_poll_receiver
  6866  07F7  120A  158A  24A3  120A  118A  	line	21
  6867                           	
  6868                           i1l2892:	
  6869  07FC                     ;Remote.c: 21:     T2CONbits.TMR2ON = 1;
  6870                           	bcf	status, 5	;RP0=0, select bank0
  6871  07FC  1283               	bcf	status, 6	;RP1=0, select bank0
  6872  07FD  1303               	bsf	(18),2	;volatile
  6873  07FE  1512               	line	23
  6874                           	
  6875                           i1l368:	
  6876  07FF                     	return
  6877  07FF  0008               	opt stack 0
  6878                           GLOBAL	__end_of_start_receive
  6879                           	__end_of_start_receive:
  6880  0800                     	signat	_start_receive,89
  6881                           	global	_poll_receiver
  6882                           
  6883 ;; *************** function _poll_receiver *****************
  6884 ;; Defined at:
  6885 ;;		line 25 in file "Remote.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6899 ;;      Params:         0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0
  6901 ;;      Temps:          8       0       0       0       0
  6902 ;;      Totals:         8       0       0       0       0
  6903 ;;Total ram usage:        8 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_isr
  6909 ;;		_start_receive
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6913                           	line	25
  6914                           global __ptext23
  6915                           __ptext23:	;psect for function _poll_receiver
  6916  0CA3                     psect	text23
  6917                           	file	"Remote.c"
  6918                           	line	25
  6919                           	global	__size_of_poll_receiver
  6920                           	__size_of_poll_receiver	equ	__end_of_poll_receiver-_poll_receiver
  6921  0051                     	
  6922                           _poll_receiver:	
  6923  0CA3                     ;incstack = 0
  6924 ;; hardware stack exceeded
  6925                           	opt	stack 0
  6926                           ; Regs used in _poll_receiver: [wreg+status,2+status,0]
  6927                           	line	28
  6928                           	
  6929                           i1l2500:	
  6930  0CA3                     ;Remote.c: 28:     ir_input = ir_input << 1;
  6931                           	bsf	status, 5	;RP0=1, select bank1
  6932  0CA3  1683               	bcf	status, 6	;RP1=0, select bank1
  6933  0CA4  1303               	movf	(_ir_input)^080h,w
  6934  0CA5  0845               	movwf	(??_poll_receiver+0)+0
  6935  0CA6  00F0               	movf	(_ir_input+1)^080h,w
  6936  0CA7  0846               	movwf	((??_poll_receiver+0)+0+1)
  6937  0CA8  00F1               	movf	(_ir_input+2)^080h,w
  6938  0CA9  0847               	movwf	((??_poll_receiver+0)+0+2)
  6939  0CAA  00F2               	movf	(_ir_input+3)^080h,w
  6940  0CAB  0848               	movwf	((??_poll_receiver+0)+0+3)
  6941  0CAC  00F3               	movlw	01h
  6942  0CAD  3001               u267_25:
  6943  0CAE                     	clrc
  6944  0CAE  1003               	rlf	(??_poll_receiver+0)+0,f
  6945  0CAF  0DF0               	rlf	(??_poll_receiver+0)+1,f
  6946  0CB0  0DF1               	rlf	(??_poll_receiver+0)+2,f
  6947  0CB1  0DF2               	rlf	(??_poll_receiver+0)+3,f
  6948  0CB2  0DF3               u267_20:
  6949  0CB3                     	addlw	-1
  6950  0CB3  3EFF               	skipz
  6951  0CB4  1D03               	goto	u267_25
  6952  0CB5  2CAE               	movf	3+(??_poll_receiver+0)+0,w
  6953  0CB6  0873               	movwf	(_ir_input+3)^080h
  6954  0CB7  00C8               	movf	2+(??_poll_receiver+0)+0,w
  6955  0CB8  0872               	movwf	(_ir_input+2)^080h
  6956  0CB9  00C7               	movf	1+(??_poll_receiver+0)+0,w
  6957  0CBA  0871               	movwf	(_ir_input+1)^080h
  6958  0CBB  00C6               	movf	0+(??_poll_receiver+0)+0,w
  6959  0CBC  0870               	movwf	(_ir_input)^080h
  6960  0CBD  00C5               
  6961                           	line	29
  6962                           	
  6963                           i1l2502:	
  6964  0CBE                     ;Remote.c: 29:     ir_input = ir_input | !PORTBbits.RB0;
  6965                           	movf	(_ir_input)^080h,w
  6966  0CBE  0845               	movwf	(??_poll_receiver+0)+0
  6967  0CBF  00F0               	movf	(_ir_input+1)^080h,w
  6968  0CC0  0846               	movwf	((??_poll_receiver+0)+0+1)
  6969  0CC1  00F1               	movf	(_ir_input+2)^080h,w
  6970  0CC2  0847               	movwf	((??_poll_receiver+0)+0+2)
  6971  0CC3  00F2               	movf	(_ir_input+3)^080h,w
  6972  0CC4  0848               	movwf	((??_poll_receiver+0)+0+3)
  6973  0CC5  00F3               	clrc
  6974  0CC6  1003               	bcf	status, 5	;RP0=0, select bank0
  6975  0CC7  1283               	bcf	status, 6	;RP1=0, select bank0
  6976  0CC8  1303               	btfss	(6),0	;volatile
  6977  0CC9  1C06               	setc
  6978  0CCA  1403               	movlw	0
  6979  0CCB  3000               	skipnc
  6980  0CCC  1803               	movlw	1
  6981  0CCD  3001               
  6982                           	movwf	(??_poll_receiver+4)+0
  6983  0CCE  00F4               	clrf	((??_poll_receiver+4)+0+1)
  6984  0CCF  01F5               	clrf	((??_poll_receiver+4)+0+2)
  6985  0CD0  01F6               	clrf	((??_poll_receiver+4)+0+3)
  6986  0CD1  01F7               	movf	0+(??_poll_receiver+4)+0,w
  6987  0CD2  0874               	iorwf	(??_poll_receiver+0)+0,f
  6988  0CD3  04F0               	movf	1+(??_poll_receiver+4)+0,w
  6989  0CD4  0875               	iorwf	(??_poll_receiver+0)+1,f
  6990  0CD5  04F1               	movf	2+(??_poll_receiver+4)+0,w
  6991  0CD6  0876               	iorwf	(??_poll_receiver+0)+2,f
  6992  0CD7  04F2               	movf	3+(??_poll_receiver+4)+0,w
  6993  0CD8  0877               	iorwf	(??_poll_receiver+0)+3,f
  6994  0CD9  04F3               	movf	3+(??_poll_receiver+0)+0,w
  6995  0CDA  0873               	bsf	status, 5	;RP0=1, select bank1
  6996  0CDB  1683               	bcf	status, 6	;RP1=0, select bank1
  6997  0CDC  1303               	movwf	(_ir_input+3)^080h
  6998  0CDD  00C8               	movf	2+(??_poll_receiver+0)+0,w
  6999  0CDE  0872               	movwf	(_ir_input+2)^080h
  7000  0CDF  00C7               	movf	1+(??_poll_receiver+0)+0,w
  7001  0CE0  0871               	movwf	(_ir_input+1)^080h
  7002  0CE1  00C6               	movf	0+(??_poll_receiver+0)+0,w
  7003  0CE2  0870               	movwf	(_ir_input)^080h
  7004  0CE3  00C5               
  7005                           	line	31
  7006                           	
  7007                           i1l2504:	
  7008  0CE4                     ;Remote.c: 31:     receive_count++;
  7009                           	movlw	low(01h)
  7010  0CE4  3001               	movwf	(??_poll_receiver+0)+0
  7011  0CE5  00F0               	movf	(??_poll_receiver+0)+0,w
  7012  0CE6  0870               	bcf	status, 5	;RP0=0, select bank0
  7013  0CE7  1283               	bcf	status, 6	;RP1=0, select bank0
  7014  0CE8  1303               	addwf	(_receive_count),f
  7015  0CE9  07DE               	line	33
  7016                           	
  7017                           i1l2506:	
  7018  0CEA                     ;Remote.c: 33:     if (receive_count > 24) {
  7019                           	movlw	low(019h)
  7020  0CEA  3019               	subwf	(_receive_count),w
  7021  0CEB  025E               	skipc
  7022  0CEC  1C03               	goto	u268_21
  7023  0CED  2CEF               	goto	u268_20
  7024  0CEE  2CF0               u268_21:
  7025  0CEF                     	goto	i1l372
  7026  0CEF  2CF3               u268_20:
  7027  0CF0                     	line	34
  7028                           	
  7029                           i1l2508:	
  7030  0CF0                     ;Remote.c: 34:                 T2CONbits.TMR2ON = 0;
  7031                           	bcf	(18),2	;volatile
  7032  0CF0  1112               	line	35
  7033                           	
  7034                           i1l2510:	
  7035  0CF1                     ;Remote.c: 35:                 receive_count = 0;
  7036                           	clrf	(_receive_count)
  7037  0CF1  01DE               	goto	i1l372
  7038  0CF2  2CF3               	line	36
  7039                           ;Remote.c: 36:     }
  7040                           	
  7041                           i1l371:	
  7042  0CF3                     	line	38
  7043                           	
  7044                           i1l372:	
  7045  0CF3                     	return
  7046  0CF3  0008               	opt stack 0
  7047                           GLOBAL	__end_of_poll_receiver
  7048                           	__end_of_poll_receiver:
  7049  0CF4                     	signat	_poll_receiver,89
  7050                           	global	_handle_rotary
  7051                           
  7052 ;; *************** function _handle_rotary *****************
  7053 ;; Defined at:
  7054 ;;		line 30 in file "Input.c"
  7055 ;; Parameters:    Size  Location     Type
  7056 ;;		None
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  portB           2    5[COMMON] int 
  7059 ;;  portA           2    3[COMMON] int 
  7060 ;; Return value:  Size  Location     Type
  7061 ;;                  1    wreg      void 
  7062 ;; Registers used:
  7063 ;;		wreg, status,2, status,0
  7064 ;; Tracked objects:
  7065 ;;		On entry : 0/0
  7066 ;;		On exit  : 0/0
  7067 ;;		Unchanged: 0/0
  7068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7069 ;;      Params:         0       0       0       0       0
  7070 ;;      Locals:         4       0       0       0       0
  7071 ;;      Temps:          3       0       0       0       0
  7072 ;;      Totals:         7       0       0       0       0
  7073 ;;Total ram usage:        7 bytes
  7074 ;; Hardware stack levels used:    1
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_isr
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7082                           	file	"Input.c"
  7083                           	line	30
  7084                           global __ptext24
  7085                           __ptext24:	;psect for function _handle_rotary
  7086  0EEF                     psect	text24
  7087                           	file	"Input.c"
  7088                           	line	30
  7089                           	global	__size_of_handle_rotary
  7090                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  7091  0083                     	
  7092                           _handle_rotary:	
  7093  0EEF                     ;incstack = 0
  7094                           	opt	stack 0
  7095                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  7096                           	line	32
  7097                           	
  7098                           i1l2862:	
  7099  0EEF                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  7100                           	bcf	status, 5	;RP0=0, select bank0
  7101  0EEF  1283               	bcf	status, 6	;RP1=0, select bank0
  7102  0EF0  1303               	swapf	(6),w	;volatile
  7103  0EF1  0E06               	andlw	(1<<1)-1
  7104  0EF2  3901               	movwf	(??_handle_rotary+0)+0
  7105  0EF3  00F0               	clrf	(??_handle_rotary+0)+0+1
  7106  0EF4  01F1               	movf	0+(??_handle_rotary+0)+0,w
  7107  0EF5  0870               	movwf	(handle_rotary@portA)
  7108  0EF6  00F3               	movf	1+(??_handle_rotary+0)+0,w
  7109  0EF7  0871               	movwf	(handle_rotary@portA+1)
  7110  0EF8  00F4               	line	33
  7111                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  7112                           	swapf	(6),w	;volatile
  7113  0EF9  0E06               	movwf	(??_handle_rotary+0)+0
  7114  0EFA  00F0               	rrf	(??_handle_rotary+0)+0,w
  7115  0EFB  0C70               	andlw	(1<<1)-1
  7116  0EFC  3901               	movwf	(??_handle_rotary+1)+0
  7117  0EFD  00F1               	clrf	(??_handle_rotary+1)+0+1
  7118  0EFE  01F2               	movf	0+(??_handle_rotary+1)+0,w
  7119  0EFF  0871               	movwf	(handle_rotary@portB)
  7120  0F00  00F5               	movf	1+(??_handle_rotary+1)+0,w
  7121  0F01  0872               	movwf	(handle_rotary@portB+1)
  7122  0F02  00F6               	line	35
  7123                           	
  7124                           i1l2864:	
  7125  0F03                     ;Input.c: 35:         if (_lastA != portA) {
  7126                           	movf	(__lastA+1),w
  7127  0F03  085D               	xorwf	(handle_rotary@portA+1),w
  7128  0F04  0674               	skipz
  7129  0F05  1D03               	goto	u290_25
  7130  0F06  2F09               	movf	(__lastA),w
  7131  0F07  085C               	xorwf	(handle_rotary@portA),w
  7132  0F08  0673               u290_25:
  7133  0F09                     
  7134                           	skipnz
  7135  0F09  1903               	goto	u290_21
  7136  0F0A  2F0C               	goto	u290_20
  7137  0F0B  2F0D               u290_21:
  7138  0F0C                     	goto	i1l2876
  7139  0F0C  2F34               u290_20:
  7140  0F0D                     	line	36
  7141                           	
  7142                           i1l2866:	
  7143  0F0D                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  7144                           	movf	(__lastB+1),w
  7145  0F0D  085B               	xorwf	(__lastA+1),w
  7146  0F0E  065D               	skipz
  7147  0F0F  1D03               	goto	u291_25
  7148  0F10  2F13               	movf	(__lastB),w
  7149  0F11  085A               	xorwf	(__lastA),w
  7150  0F12  065C               u291_25:
  7151  0F13                     
  7152                           	skipz
  7153  0F13  1D03               	goto	u291_21
  7154  0F14  2F16               	goto	u291_20
  7155  0F15  2F17               u291_21:
  7156  0F16                     	goto	i1l2876
  7157  0F16  2F34               u291_20:
  7158  0F17                     	
  7159                           i1l2868:	
  7160  0F17                     	movf	((handle_rotary@portA)),w
  7161  0F17  0873               iorwf	((handle_rotary@portA+1)),w
  7162  0F18  0474               	btfsc	status,2
  7163  0F19  1903               	goto	u292_21
  7164  0F1A  2F1C               	goto	u292_20
  7165  0F1B  2F1D               u292_21:
  7166  0F1C                     	goto	i1l2876
  7167  0F1C  2F34               u292_20:
  7168  0F1D                     	line	37
  7169                           	
  7170                           i1l2870:	
  7171  0F1D                     ;Input.c: 37:                 if (_selectedInput < 3) {
  7172                           	movlw	0
  7173  0F1D  3000               	bsf	status, 5	;RP0=1, select bank1
  7174  0F1E  1683               	bcf	status, 6	;RP1=0, select bank1
  7175  0F1F  1303               	subwf	(__selectedInput+1)^080h,w
  7176  0F20  0250               	movlw	03h
  7177  0F21  3003               	skipnz
  7178  0F22  1903               	subwf	(__selectedInput)^080h,w
  7179  0F23  024F               	skipnc
  7180  0F24  1803               	goto	u293_21
  7181  0F25  2F27               	goto	u293_20
  7182  0F26  2F28               u293_21:
  7183  0F27                     	goto	i1l2874
  7184  0F27  2F2F               u293_20:
  7185  0F28                     	line	38
  7186                           	
  7187                           i1l2872:	
  7188  0F28                     ;Input.c: 38:                     _selectedInput++;
  7189                           	movlw	01h
  7190  0F28  3001               	addwf	(__selectedInput)^080h,f
  7191  0F29  07CF               	skipnc
  7192  0F2A  1803               	incf	(__selectedInput+1)^080h,f
  7193  0F2B  0AD0               	movlw	0
  7194  0F2C  3000               	addwf	(__selectedInput+1)^080h,f
  7195  0F2D  07D0               	line	39
  7196                           ;Input.c: 39:                 } else {
  7197                           	goto	i1l2876
  7198  0F2E  2F34               	
  7199                           i1l231:	
  7200  0F2F                     	line	40
  7201                           	
  7202                           i1l2874:	
  7203  0F2F                     ;Input.c: 40:                     _selectedInput = 0;
  7204                           	clrf	(__selectedInput)^080h
  7205  0F2F  01CF               	clrf	(__selectedInput+1)^080h
  7206  0F30  01D0               	goto	i1l2876
  7207  0F31  2F34               	line	41
  7208                           ;Input.c: 41:                 }
  7209                           	
  7210                           i1l232:	
  7211  0F32                     	goto	i1l2876
  7212  0F32  2F34               	line	42
  7213                           ;Input.c: 42:             }
  7214                           	
  7215                           i1l230:	
  7216  0F33                     	goto	i1l2876
  7217  0F33  2F34               	line	43
  7218                           ;Input.c: 43:         }
  7219                           	
  7220                           i1l229:	
  7221  0F34                     	line	45
  7222                           	
  7223                           i1l2876:	
  7224  0F34                     ;Input.c: 45:         if (_lastB != portB) {
  7225                           	bcf	status, 5	;RP0=0, select bank0
  7226  0F34  1283               	movf	(__lastB+1),w
  7227  0F35  085B               	xorwf	(handle_rotary@portB+1),w
  7228  0F36  0676               	skipz
  7229  0F37  1D03               	goto	u294_25
  7230  0F38  2F3B               	movf	(__lastB),w
  7231  0F39  085A               	xorwf	(handle_rotary@portB),w
  7232  0F3A  0675               u294_25:
  7233  0F3B                     
  7234                           	skipnz
  7235  0F3B  1903               	goto	u294_21
  7236  0F3C  2F3E               	goto	u294_20
  7237  0F3D  2F3F               u294_21:
  7238  0F3E                     	goto	i1l233
  7239  0F3E  2F64               u294_20:
  7240  0F3F                     	line	46
  7241                           	
  7242                           i1l2878:	
  7243  0F3F                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
  7244                           	movf	(__lastB+1),w
  7245  0F3F  085B               	xorwf	(__lastA+1),w
  7246  0F40  065D               	skipz
  7247  0F41  1D03               	goto	u295_25
  7248  0F42  2F45               	movf	(__lastB),w
  7249  0F43  085A               	xorwf	(__lastA),w
  7250  0F44  065C               u295_25:
  7251  0F45                     
  7252                           	skipz
  7253  0F45  1D03               	goto	u295_21
  7254  0F46  2F48               	goto	u295_20
  7255  0F47  2F49               u295_21:
  7256  0F48                     	goto	i1l233
  7257  0F48  2F64               u295_20:
  7258  0F49                     	
  7259                           i1l2880:	
  7260  0F49                     	movf	((handle_rotary@portB)),w
  7261  0F49  0875               iorwf	((handle_rotary@portB+1)),w
  7262  0F4A  0476               	btfsc	status,2
  7263  0F4B  1903               	goto	u296_21
  7264  0F4C  2F4E               	goto	u296_20
  7265  0F4D  2F4F               u296_21:
  7266  0F4E                     	goto	i1l233
  7267  0F4E  2F64               u296_20:
  7268  0F4F                     	line	47
  7269                           	
  7270                           i1l2882:	
  7271  0F4F                     ;Input.c: 47:                 if (_selectedInput > 0) {
  7272                           	bsf	status, 5	;RP0=1, select bank1
  7273  0F4F  1683               	bcf	status, 6	;RP1=0, select bank1
  7274  0F50  1303               	movf	((__selectedInput)^080h),w
  7275  0F51  084F               iorwf	((__selectedInput+1)^080h),w
  7276  0F52  0450               	btfsc	status,2
  7277  0F53  1903               	goto	u297_21
  7278  0F54  2F56               	goto	u297_20
  7279  0F55  2F57               u297_21:
  7280  0F56                     	goto	i1l2886
  7281  0F56  2F5E               u297_20:
  7282  0F57                     	line	48
  7283                           	
  7284                           i1l2884:	
  7285  0F57                     ;Input.c: 48:                     _selectedInput--;
  7286                           	movlw	01h
  7287  0F57  3001               	subwf	(__selectedInput)^080h,f
  7288  0F58  02CF               	movlw	0
  7289  0F59  3000               	skipc
  7290  0F5A  1C03               	decf	(__selectedInput+1)^080h,f
  7291  0F5B  03D0               	subwf	(__selectedInput+1)^080h,f
  7292  0F5C  02D0               	line	49
  7293                           ;Input.c: 49:                 } else {
  7294                           	goto	i1l233
  7295  0F5D  2F64               	
  7296                           i1l235:	
  7297  0F5E                     	line	50
  7298                           	
  7299                           i1l2886:	
  7300  0F5E                     ;Input.c: 50:                     _selectedInput = 3;
  7301                           	movlw	03h
  7302  0F5E  3003               	movwf	(__selectedInput)^080h
  7303  0F5F  00CF               	movlw	0
  7304  0F60  3000               	movwf	((__selectedInput)^080h)+1
  7305  0F61  00D0               	goto	i1l233
  7306  0F62  2F64               	line	51
  7307                           ;Input.c: 51:                 }
  7308                           	
  7309                           i1l236:	
  7310  0F63                     	goto	i1l233
  7311  0F63  2F64               	line	52
  7312                           ;Input.c: 52:             }
  7313                           	
  7314                           i1l234:	
  7315  0F64                     	line	53
  7316                           ;Input.c: 53:         }
  7317                           	
  7318                           i1l233:	
  7319  0F64                     	line	55
  7320                           ;Input.c: 55:         _lastA = portA;
  7321                           	movf	(handle_rotary@portA+1),w
  7322  0F64  0874               	bcf	status, 5	;RP0=0, select bank0
  7323  0F65  1283               	movwf	(__lastA+1)
  7324  0F66  00DD               	movf	(handle_rotary@portA),w
  7325  0F67  0873               	movwf	(__lastA)
  7326  0F68  00DC               	line	56
  7327                           ;Input.c: 56:         _lastB = portB;
  7328                           	movf	(handle_rotary@portB+1),w
  7329  0F69  0876               	movwf	(__lastB+1)
  7330  0F6A  00DB               	movf	(handle_rotary@portB),w
  7331  0F6B  0875               	movwf	(__lastB)
  7332  0F6C  00DA               	line	57
  7333                           	
  7334                           i1l2888:	
  7335  0F6D                     ;Input.c: 57:         _inputUpdateRequired = 1;
  7336                           	bsf	status, 5	;RP0=1, select bank1
  7337  0F6D  1683               	bcf	status, 6	;RP1=0, select bank1
  7338  0F6E  1303               	clrf	(__inputUpdateRequired)^080h
  7339  0F6F  01D2               	incf	(__inputUpdateRequired)^080h,f
  7340  0F70  0AD2               	line	58
  7341                           	
  7342                           i1l237:	
  7343  0F71                     	return
  7344  0F71  0008               	opt stack 0
  7345                           GLOBAL	__end_of_handle_rotary
  7346                           	__end_of_handle_rotary:
  7347  0F72                     	signat	_handle_rotary,89
  7348                           	global	_handle_potmeter
  7349                           
  7350 ;; *************** function _handle_potmeter *****************
  7351 ;; Defined at:
  7352 ;;		line 30 in file "Volume.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;  currentStep     2   50[BANK0 ] unsigned int 
  7357 ;;  ad_result       2   52[BANK0 ] unsigned int 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      void 
  7360 ;; Registers used:
  7361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7367 ;;      Params:         0       0       0       0       0
  7368 ;;      Locals:         0       4       0       0       0
  7369 ;;      Temps:          0       2       0       0       0
  7370 ;;      Totals:         0       6       0       0       0
  7371 ;;Total ram usage:        6 bytes
  7372 ;; Hardware stack levels used:    1
  7373 ;; Hardware stack levels required when called:    2
  7374 ;; This function calls:
  7375 ;;		_is_deadzone
  7376 ;;		i1___lwdiv
  7377 ;; This function is called by:
  7378 ;;		_isr
  7379 ;; This function uses a non-reentrant model
  7380 ;;
  7381                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7382                           	file	"Volume.c"
  7383                           	line	30
  7384                           global __ptext25
  7385                           __ptext25:	;psect for function _handle_potmeter
  7386  0E7D                     psect	text25
  7387                           	file	"Volume.c"
  7388                           	line	30
  7389                           	global	__size_of_handle_potmeter
  7390                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
  7391  0072                     	
  7392                           _handle_potmeter:	
  7393  0E7D                     ;incstack = 0
  7394 ;; hardware stack exceeded
  7395                           	opt	stack 0
  7396                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7397                           	line	32
  7398                           	
  7399                           i1l2894:	
  7400  0E7D                     ;Volume.c: 32:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
  7401                           	bcf	status, 5	;RP0=0, select bank0
  7402  0E7D  1283               	bcf	status, 6	;RP1=0, select bank0
  7403  0E7E  1303               	movf	(30),w	;volatile
  7404  0E7F  081E               	movwf	(handle_potmeter@ad_result+1)
  7405  0E80  00D5               	bsf	status, 5	;RP0=1, select bank1
  7406  0E81  1683               	bcf	status, 6	;RP1=0, select bank1
  7407  0E82  1303               	movf	(158)^080h,w	;volatile
  7408  0E83  081E               	bcf	status, 5	;RP0=0, select bank0
  7409  0E84  1283               	bcf	status, 6	;RP1=0, select bank0
  7410  0E85  1303               	movwf	(handle_potmeter@ad_result)
  7411  0E86  00D4               	line	34
  7412                           	
  7413                           i1l2896:	
  7414  0E87                     ;Volume.c: 34:     if (ad_result == 0 || ad_result < step_size) {
  7415                           	movf	((handle_potmeter@ad_result)),w
  7416  0E87  0854               iorwf	((handle_potmeter@ad_result+1)),w
  7417  0E88  0455               	btfsc	status,2
  7418  0E89  1903               	goto	u298_21
  7419  0E8A  2E8C               	goto	u298_20
  7420  0E8B  2E8D               u298_21:
  7421  0E8C                     	goto	i1l2900
  7422  0E8C  2EA8               u298_20:
  7423  0E8D                     	
  7424                           i1l2898:	
  7425  0E8D                     	movlw	low(_step_size|8000h)
  7426  0E8D  308E               	movwf	fsr0
  7427  0E8E  0084               	movlw	high(_step_size|8000h)
  7428  0E8F  3084               	movwf	btemp+1
  7429  0E90  00FF               	fcall	stringtab
  7430  0E91  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0
  7431  0E96  00D0               	fcall	stringtab
  7432  0E97  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0+1
  7433  0E9C  00D1               	movf	1+(??_handle_potmeter+0)+0,w
  7434  0E9D  0851               	subwf	(handle_potmeter@ad_result+1),w
  7435  0E9E  0255               	skipz
  7436  0E9F  1D03               	goto	u299_25
  7437  0EA0  2EA3               	movf	0+(??_handle_potmeter+0)+0,w
  7438  0EA1  0850               	subwf	(handle_potmeter@ad_result),w
  7439  0EA2  0254               u299_25:
  7440  0EA3                     	skipnc
  7441  0EA3  1803               	goto	u299_21
  7442  0EA4  2EA6               	goto	u299_20
  7443  0EA5  2EA7               u299_21:
  7444  0EA6                     	goto	i1l2902
  7445  0EA6  2EAD               u299_20:
  7446  0EA7                     	goto	i1l2900
  7447  0EA7  2EA8               	
  7448                           i1l331:	
  7449  0EA8                     	line	35
  7450                           	
  7451                           i1l2900:	
  7452  0EA8                     ;Volume.c: 35:             volume = 0;
  7453                           	bsf	status, 5	;RP0=1, select bank1
  7454  0EA8  1683               	bcf	status, 6	;RP1=0, select bank1
  7455  0EA9  1303               	clrf	(_volume)^080h
  7456  0EAA  01CD               	clrf	(_volume+1)^080h
  7457  0EAB  01CE               	line	36
  7458                           ;Volume.c: 36:     } else {
  7459                           	goto	i1l334
  7460  0EAC  2EEE               	
  7461                           i1l329:	
  7462  0EAD                     	line	37
  7463                           	
  7464                           i1l2902:	
  7465  0EAD                     ;Volume.c: 37:         unsigned int currentStep = ad_result / step_size;
  7466                           	movlw	low(_step_size|8000h)
  7467  0EAD  308E               	movwf	fsr0
  7468  0EAE  0084               	movlw	high(_step_size|8000h)
  7469  0EAF  3084               	bcf	status, 5	;RP0=0, select bank0
  7470  0EB0  1283               	movwf	btemp+1
  7471  0EB1  00FF               	fcall	stringtab
  7472  0EB2  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor)
  7473  0EB7  00F0               	fcall	stringtab
  7474  0EB8  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor+1)
  7475  0EBD  00F1               	movf	(handle_potmeter@ad_result+1),w
  7476  0EBE  0855               	movwf	(i1___lwdiv@dividend+1)
  7477  0EBF  00F3               	movf	(handle_potmeter@ad_result),w
  7478  0EC0  0854               	movwf	(i1___lwdiv@dividend)
  7479  0EC1  00F2               	fcall	i1___lwdiv
  7480  0EC2  120A  158A  2371  120A  158A  	movf	(1+(?i1___lwdiv)),w
  7481  0EC7  0871               	bcf	status, 5	;RP0=0, select bank0
  7482  0EC8  1283               	bcf	status, 6	;RP1=0, select bank0
  7483  0EC9  1303               	movwf	(handle_potmeter@currentStep+1)
  7484  0ECA  00D3               	movf	(0+(?i1___lwdiv)),w
  7485  0ECB  0870               	movwf	(handle_potmeter@currentStep)
  7486  0ECC  00D2               	line	39
  7487                           ;Volume.c: 39:         if (!is_deadzone(currentStep, ad_result))
  7488                           	movf	(handle_potmeter@currentStep+1),w
  7489  0ECD  0853               	movwf	(is_deadzone@currentStep+1)
  7490  0ECE  00C4               	movf	(handle_potmeter@currentStep),w
  7491  0ECF  0852               	movwf	(is_deadzone@currentStep)
  7492  0ED0  00C3               	movf	(handle_potmeter@ad_result+1),w
  7493  0ED1  0855               	movwf	(is_deadzone@adcResult+1)
  7494  0ED2  00C6               	movf	(handle_potmeter@ad_result),w
  7495  0ED3  0854               	movwf	(is_deadzone@adcResult)
  7496  0ED4  00C5               	fcall	_is_deadzone
  7497  0ED5  120A  118A  25D3  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  7498  0EDA  1283               	bcf	status, 6	;RP1=0, select bank0
  7499  0EDB  1303               	movf	((0+(?_is_deadzone))),w
  7500  0EDC  0843               iorwf	((1+(?_is_deadzone))),w
  7501  0EDD  0444               	btfss	status,2
  7502  0EDE  1D03               	goto	u300_21
  7503  0EDF  2EE1               	goto	u300_20
  7504  0EE0  2EE2               u300_21:
  7505  0EE1                     	goto	i1l334
  7506  0EE1  2EEE               u300_20:
  7507  0EE2                     	line	40
  7508                           	
  7509                           i1l2904:	
  7510  0EE2                     ;Volume.c: 40:             volume = currentStep;
  7511                           	movf	(handle_potmeter@currentStep+1),w
  7512  0EE2  0853               	bsf	status, 5	;RP0=1, select bank1
  7513  0EE3  1683               	bcf	status, 6	;RP1=0, select bank1
  7514  0EE4  1303               	movwf	(_volume+1)^080h
  7515  0EE5  00CE               	bcf	status, 5	;RP0=0, select bank0
  7516  0EE6  1283               	bcf	status, 6	;RP1=0, select bank0
  7517  0EE7  1303               	movf	(handle_potmeter@currentStep),w
  7518  0EE8  0852               	bsf	status, 5	;RP0=1, select bank1
  7519  0EE9  1683               	bcf	status, 6	;RP1=0, select bank1
  7520  0EEA  1303               	movwf	(_volume)^080h
  7521  0EEB  00CD               	goto	i1l334
  7522  0EEC  2EEE               	
  7523                           i1l333:	
  7524  0EED                     	goto	i1l334
  7525  0EED  2EEE               	line	41
  7526                           ;Volume.c: 41:     }
  7527                           	
  7528                           i1l332:	
  7529  0EEE                     	line	43
  7530                           	
  7531                           i1l334:	
  7532  0EEE                     	return
  7533  0EEE  0008               	opt stack 0
  7534                           GLOBAL	__end_of_handle_potmeter
  7535                           	__end_of_handle_potmeter:
  7536  0EEF                     	signat	_handle_potmeter,89
  7537                           	global	i1___lwdiv
  7538                           
  7539 ;; *************** function i1___lwdiv *****************
  7540 ;; Defined at:
  7541 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  divisor         2    0[COMMON] unsigned int 
  7544 ;;  dividend        2    2[COMMON] unsigned int 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7547 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  2    0[COMMON] unsigned int 
  7550 ;; Registers used:
  7551 ;;		wreg, status,2, status,0
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7557 ;;      Params:         4       0       0       0       0
  7558 ;;      Locals:         3       0       0       0       0
  7559 ;;      Temps:          1       0       0       0       0
  7560 ;;      Totals:         8       0       0       0       0
  7561 ;;Total ram usage:        8 bytes
  7562 ;; Hardware stack levels used:    1
  7563 ;; This function calls:
  7564 ;;		Nothing
  7565 ;; This function is called by:
  7566 ;;		_handle_potmeter
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7570                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7571                           	line	5
  7572                           global __ptext26
  7573                           __ptext26:	;psect for function i1___lwdiv
  7574  0B71                     psect	text26
  7575                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7576                           	line	5
  7577                           	global	__size_ofi1___lwdiv
  7578                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
  7579  004B                     	
  7580                           i1___lwdiv:	
  7581  0B71                     ;incstack = 0
  7582 ;; hardware stack exceeded
  7583                           	opt	stack 0
  7584                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7585                           	line	13
  7586                           	
  7587                           i1l2644:	
  7588  0B71                     	clrf	(i1___lwdiv@quotient)
  7589  0B71  01F5               	clrf	(i1___lwdiv@quotient+1)
  7590  0B72  01F6               	line	14
  7591                           	
  7592                           i1l2646:	
  7593  0B73                     	movf	((i1___lwdiv@divisor)),w
  7594  0B73  0870               iorwf	((i1___lwdiv@divisor+1)),w
  7595  0B74  0471               	btfsc	status,2
  7596  0B75  1903               	goto	u277_21
  7597  0B76  2B78               	goto	u277_20
  7598  0B77  2B79               u277_21:
  7599  0B78                     	goto	i1l2666
  7600  0B78  2BB6               u277_20:
  7601  0B79                     	line	15
  7602                           	
  7603                           i1l2648:	
  7604  0B79                     	clrf	(i1___lwdiv@counter)
  7605  0B79  01F7               	incf	(i1___lwdiv@counter),f
  7606  0B7A  0AF7               	line	16
  7607                           	goto	i1l2654
  7608  0B7B  2B88               	
  7609                           i1l766:	
  7610  0B7C                     	line	17
  7611                           	
  7612                           i1l2650:	
  7613  0B7C                     	movlw	01h
  7614  0B7C  3001               	
  7615                           u278_25:
  7616  0B7D                     	clrc
  7617  0B7D  1003               	rlf	(i1___lwdiv@divisor),f
  7618  0B7E  0DF0               	rlf	(i1___lwdiv@divisor+1),f
  7619  0B7F  0DF1               	addlw	-1
  7620  0B80  3EFF               	skipz
  7621  0B81  1D03               	goto	u278_25
  7622  0B82  2B7D               	line	18
  7623                           	
  7624                           i1l2652:	
  7625  0B83                     	movlw	low(01h)
  7626  0B83  3001               	movwf	(??i1___lwdiv+0)+0
  7627  0B84  00F4               	movf	(??i1___lwdiv+0)+0,w
  7628  0B85  0874               	addwf	(i1___lwdiv@counter),f
  7629  0B86  07F7               	goto	i1l2654
  7630  0B87  2B88               	line	19
  7631                           	
  7632                           i1l765:	
  7633  0B88                     	line	16
  7634                           	
  7635                           i1l2654:	
  7636  0B88                     	btfss	(i1___lwdiv@divisor+1),(15)&7
  7637  0B88  1FF1               	goto	u279_21
  7638  0B89  2B8B               	goto	u279_20
  7639  0B8A  2B8C               u279_21:
  7640  0B8B                     	goto	i1l2650
  7641  0B8B  2B7C               u279_20:
  7642  0B8C                     	goto	i1l2656
  7643  0B8C  2B8E               	
  7644                           i1l767:	
  7645  0B8D                     	goto	i1l2656
  7646  0B8D  2B8E               	line	20
  7647                           	
  7648                           i1l768:	
  7649  0B8E                     	line	21
  7650                           	
  7651                           i1l2656:	
  7652  0B8E                     	movlw	01h
  7653  0B8E  3001               	
  7654                           u280_25:
  7655  0B8F                     	clrc
  7656  0B8F  1003               	rlf	(i1___lwdiv@quotient),f
  7657  0B90  0DF5               	rlf	(i1___lwdiv@quotient+1),f
  7658  0B91  0DF6               	addlw	-1
  7659  0B92  3EFF               	skipz
  7660  0B93  1D03               	goto	u280_25
  7661  0B94  2B8F               	line	22
  7662                           	movf	(i1___lwdiv@divisor+1),w
  7663  0B95  0871               	subwf	(i1___lwdiv@dividend+1),w
  7664  0B96  0273               	skipz
  7665  0B97  1D03               	goto	u281_25
  7666  0B98  2B9B               	movf	(i1___lwdiv@divisor),w
  7667  0B99  0870               	subwf	(i1___lwdiv@dividend),w
  7668  0B9A  0272               u281_25:
  7669  0B9B                     	skipc
  7670  0B9B  1C03               	goto	u281_21
  7671  0B9C  2B9E               	goto	u281_20
  7672  0B9D  2B9F               u281_21:
  7673  0B9E                     	goto	i1l2662
  7674  0B9E  2BA7               u281_20:
  7675  0B9F                     	line	23
  7676                           	
  7677                           i1l2658:	
  7678  0B9F                     	movf	(i1___lwdiv@divisor),w
  7679  0B9F  0870               	subwf	(i1___lwdiv@dividend),f
  7680  0BA0  02F2               	movf	(i1___lwdiv@divisor+1),w
  7681  0BA1  0871               	skipc
  7682  0BA2  1C03               	decf	(i1___lwdiv@dividend+1),f
  7683  0BA3  03F3               	subwf	(i1___lwdiv@dividend+1),f
  7684  0BA4  02F3               	line	24
  7685                           	
  7686                           i1l2660:	
  7687  0BA5                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
  7688  0BA5  1475               	goto	i1l2662
  7689  0BA6  2BA7               	line	25
  7690                           	
  7691                           i1l769:	
  7692  0BA7                     	line	26
  7693                           	
  7694                           i1l2662:	
  7695  0BA7                     	movlw	01h
  7696  0BA7  3001               	
  7697                           u282_25:
  7698  0BA8                     	clrc
  7699  0BA8  1003               	rrf	(i1___lwdiv@divisor+1),f
  7700  0BA9  0CF1               	rrf	(i1___lwdiv@divisor),f
  7701  0BAA  0CF0               	addlw	-1
  7702  0BAB  3EFF               	skipz
  7703  0BAC  1D03               	goto	u282_25
  7704  0BAD  2BA8               	line	27
  7705                           	
  7706                           i1l2664:	
  7707  0BAE                     	movlw	01h
  7708  0BAE  3001               	subwf	(i1___lwdiv@counter),f
  7709  0BAF  02F7               	btfss	status,2
  7710  0BB0  1D03               	goto	u283_21
  7711  0BB1  2BB3               	goto	u283_20
  7712  0BB2  2BB4               u283_21:
  7713  0BB3                     	goto	i1l2656
  7714  0BB3  2B8E               u283_20:
  7715  0BB4                     	goto	i1l2666
  7716  0BB4  2BB6               	
  7717                           i1l770:	
  7718  0BB5                     	goto	i1l2666
  7719  0BB5  2BB6               	line	28
  7720                           	
  7721                           i1l764:	
  7722  0BB6                     	line	29
  7723                           	
  7724                           i1l2666:	
  7725  0BB6                     	movf	(i1___lwdiv@quotient+1),w
  7726  0BB6  0876               	movwf	(?i1___lwdiv+1)
  7727  0BB7  00F1               	movf	(i1___lwdiv@quotient),w
  7728  0BB8  0875               	movwf	(?i1___lwdiv)
  7729  0BB9  00F0               	goto	i1l771
  7730  0BBA  2BBB               	
  7731                           i1l2668:	
  7732  0BBB                     	line	30
  7733                           	
  7734                           i1l771:	
  7735  0BBB                     	return
  7736  0BBB  0008               	opt stack 0
  7737                           GLOBAL	__end_ofi1___lwdiv
  7738                           	__end_ofi1___lwdiv:
  7739  0BBC                     	signat	i1___lwdiv,90
  7740                           	global	_is_deadzone
  7741                           
  7742 ;; *************** function _is_deadzone *****************
  7743 ;; Defined at:
  7744 ;;		line 20 in file "Volume.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;  currentStep     2   35[BANK0 ] int 
  7747 ;;  adcResult       2   37[BANK0 ] int 
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;  turnPoint       2   46[BANK0 ] int 
  7750 ;;  deadzoneHigh    2   43[BANK0 ] int 
  7751 ;;  deadzoneLow     2   41[BANK0 ] int 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  2   35[BANK0 ] int 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7761 ;;      Params:         0       4       0       0       0
  7762 ;;      Locals:         0       7       0       0       0
  7763 ;;      Temps:          0       2       0       0       0
  7764 ;;      Totals:         0      13       0       0       0
  7765 ;;Total ram usage:       13 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    1
  7768 ;; This function calls:
  7769 ;;		___fladd
  7770 ;;		___fltol
  7771 ;;		___xxtofl
  7772 ;;		i1___wmul
  7773 ;; This function is called by:
  7774 ;;		_handle_potmeter
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  7778                           	file	"Volume.c"
  7779                           	line	20
  7780                           global __ptext27
  7781                           __ptext27:	;psect for function _is_deadzone
  7782  05D3                     psect	text27
  7783                           	file	"Volume.c"
  7784                           	line	20
  7785                           	global	__size_of_is_deadzone
  7786                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  7787  00C6                     	
  7788                           _is_deadzone:	
  7789  05D3                     ;incstack = 0
  7790 ;; hardware stack exceeded
  7791                           	opt	stack 0
  7792                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7793                           	line	22
  7794                           	
  7795                           i1l2626:	
  7796  05D3                     ;Volume.c: 20: int is_deadzone(int currentStep, int adcResult);Volume.c: 21: {;Volume.c:
                                  22:     int turnPoint = step_size * currentStep;
  7797                           	movlw	low(_step_size|8000h)
  7798  05D3  308E               	movwf	fsr0
  7799  05D4  0084               	movlw	high(_step_size|8000h)
  7800  05D5  3084               	bcf	status, 5	;RP0=0, select bank0
  7801  05D6  1283               	bcf	status, 6	;RP1=0, select bank0
  7802  05D7  1303               	movwf	btemp+1
  7803  05D8  00FF               	fcall	stringtab
  7804  05D9  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier)
  7805  05DE  00F0               	fcall	stringtab
  7806  05DF  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier+1)
  7807  05E4  00F1               	movf	(is_deadzone@currentStep+1),w
  7808  05E5  0844               	movwf	(i1___wmul@multiplicand+1)
  7809  05E6  00F3               	movf	(is_deadzone@currentStep),w
  7810  05E7  0843               	movwf	(i1___wmul@multiplicand)
  7811  05E8  00F2               	fcall	i1___wmul
  7812  05E9  120A  158A  2177  120A  118A  	movf	(1+(?i1___wmul)),w
  7813  05EE  0871               	bcf	status, 5	;RP0=0, select bank0
  7814  05EF  1283               	bcf	status, 6	;RP1=0, select bank0
  7815  05F0  1303               	movwf	(is_deadzone@turnPoint+1)
  7816  05F1  00CF               	movf	(0+(?i1___wmul)),w
  7817  05F2  0870               	movwf	(is_deadzone@turnPoint)
  7818  05F3  00CE               	line	24
  7819                           	
  7820                           i1l2628:	
  7821  05F4                     ;Volume.c: 24:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  7822                           	movf	(is_deadzone@turnPoint),w
  7823  05F4  084E               	movwf	(___xxtofl@val)
  7824  05F5  00F0               	movf	(is_deadzone@turnPoint+1),w
  7825  05F6  084F               	movwf	(___xxtofl@val+1)
  7826  05F7  00F1               	movlw	0
  7827  05F8  3000               	btfsc	(___xxtofl@val+1),7
  7828  05F9  1BF1               	movlw	255
  7829  05FA  30FF               	movwf	(___xxtofl@val+2)
  7830  05FB  00F2               	movwf	(___xxtofl@val+3)
  7831  05FC  00F3               	movlw	low(01h)
  7832  05FD  3001               	fcall	___xxtofl
  7833  05FE  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7834  0603  0873               	bcf	status, 5	;RP0=0, select bank0
  7835  0604  1283               	bcf	status, 6	;RP1=0, select bank0
  7836  0605  1303               	movwf	(___fladd@a+3)
  7837  0606  00A7               	movf	(2+(?___xxtofl)),w
  7838  0607  0872               	movwf	(___fladd@a+2)
  7839  0608  00A6               	movf	(1+(?___xxtofl)),w
  7840  0609  0871               	movwf	(___fladd@a+1)
  7841  060A  00A5               	movf	(0+(?___xxtofl)),w
  7842  060B  0870               	movwf	(___fladd@a)
  7843  060C  00A4               
  7844                           	movlw	0xc1
  7845  060D  30C1               	movwf	(___fladd@b+3)
  7846  060E  00A3               	movlw	0x23
  7847  060F  3023               	movwf	(___fladd@b+2)
  7848  0610  00A2               	movlw	0xae
  7849  0611  30AE               	movwf	(___fladd@b+1)
  7850  0612  00A1               	movlw	0x14
  7851  0613  3014               	movwf	(___fladd@b)
  7852  0614  00A0               
  7853                           	fcall	___fladd
  7854  0615  120A  118A  2031  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7855  061A  1283               	bcf	status, 6	;RP1=0, select bank0
  7856  061B  1303               	movf	(3+(?___fladd)),w
  7857  061C  0823               	movwf	(___fltol@f1+3)
  7858  061D  00BB               	movf	(2+(?___fladd)),w
  7859  061E  0822               	movwf	(___fltol@f1+2)
  7860  061F  00BA               	movf	(1+(?___fladd)),w
  7861  0620  0821               	movwf	(___fltol@f1+1)
  7862  0621  00B9               	movf	(0+(?___fladd)),w
  7863  0622  0820               	movwf	(___fltol@f1)
  7864  0623  00B8               
  7865                           	fcall	___fltol
  7866  0624  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7867  0629  1283               	bcf	status, 6	;RP1=0, select bank0
  7868  062A  1303               	movf	(1+(?___fltol)),w
  7869  062B  0839               	movwf	(is_deadzone@deadzoneLow+1)
  7870  062C  00CA               	movf	(0+(?___fltol)),w
  7871  062D  0838               	movwf	(is_deadzone@deadzoneLow)
  7872  062E  00C9               	line	25
  7873                           	
  7874                           i1l2630:	
  7875  062F                     ;Volume.c: 25:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  7876                           	movf	(is_deadzone@turnPoint),w
  7877  062F  084E               	movwf	(___xxtofl@val)
  7878  0630  00F0               	movf	(is_deadzone@turnPoint+1),w
  7879  0631  084F               	movwf	(___xxtofl@val+1)
  7880  0632  00F1               	movlw	0
  7881  0633  3000               	btfsc	(___xxtofl@val+1),7
  7882  0634  1BF1               	movlw	255
  7883  0635  30FF               	movwf	(___xxtofl@val+2)
  7884  0636  00F2               	movwf	(___xxtofl@val+3)
  7885  0637  00F3               	movlw	low(01h)
  7886  0638  3001               	fcall	___xxtofl
  7887  0639  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7888  063E  0873               	bcf	status, 5	;RP0=0, select bank0
  7889  063F  1283               	bcf	status, 6	;RP1=0, select bank0
  7890  0640  1303               	movwf	(___fladd@a+3)
  7891  0641  00A7               	movf	(2+(?___xxtofl)),w
  7892  0642  0872               	movwf	(___fladd@a+2)
  7893  0643  00A6               	movf	(1+(?___xxtofl)),w
  7894  0644  0871               	movwf	(___fladd@a+1)
  7895  0645  00A5               	movf	(0+(?___xxtofl)),w
  7896  0646  0870               	movwf	(___fladd@a)
  7897  0647  00A4               
  7898                           	movlw	0x41
  7899  0648  3041               	movwf	(___fladd@b+3)
  7900  0649  00A3               	movlw	0x23
  7901  064A  3023               	movwf	(___fladd@b+2)
  7902  064B  00A2               	movlw	0xae
  7903  064C  30AE               	movwf	(___fladd@b+1)
  7904  064D  00A1               	movlw	0x14
  7905  064E  3014               	movwf	(___fladd@b)
  7906  064F  00A0               
  7907                           	fcall	___fladd
  7908  0650  120A  118A  2031  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7909  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  7910  0656  1303               	movf	(3+(?___fladd)),w
  7911  0657  0823               	movwf	(___fltol@f1+3)
  7912  0658  00BB               	movf	(2+(?___fladd)),w
  7913  0659  0822               	movwf	(___fltol@f1+2)
  7914  065A  00BA               	movf	(1+(?___fladd)),w
  7915  065B  0821               	movwf	(___fltol@f1+1)
  7916  065C  00B9               	movf	(0+(?___fladd)),w
  7917  065D  0820               	movwf	(___fltol@f1)
  7918  065E  00B8               
  7919                           	fcall	___fltol
  7920  065F  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7921  0664  1283               	bcf	status, 6	;RP1=0, select bank0
  7922  0665  1303               	movf	(1+(?___fltol)),w
  7923  0666  0839               	movwf	(is_deadzone@deadzoneHigh+1)
  7924  0667  00CC               	movf	(0+(?___fltol)),w
  7925  0668  0838               	movwf	(is_deadzone@deadzoneHigh)
  7926  0669  00CB               	line	27
  7927                           	
  7928                           i1l2632:	
  7929  066A                     ;Volume.c: 27:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  7930                           	clrf	(_is_deadzone$890)
  7931  066A  01CD               	
  7932                           i1l2634:	
  7933  066B                     	movf	(is_deadzone@deadzoneLow+1),w
  7934  066B  084A               	xorlw	80h
  7935  066C  3A80               	movwf	(??_is_deadzone+0)+0
  7936  066D  00C7               	movf	(is_deadzone@adcResult+1),w
  7937  066E  0846               	xorlw	80h
  7938  066F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7939  0670  0247               	skipz
  7940  0671  1D03               	goto	u275_25
  7941  0672  2E75               	movf	(is_deadzone@adcResult),w
  7942  0673  0845               	subwf	(is_deadzone@deadzoneLow),w
  7943  0674  0249               u275_25:
  7944  0675                     
  7945                           	skipnc
  7946  0675  1803               	goto	u275_21
  7947  0676  2E78               	goto	u275_20
  7948  0677  2E79               u275_21:
  7949  0678                     	goto	i1l2640
  7950  0678  2E8E               u275_20:
  7951  0679                     	
  7952                           i1l2636:	
  7953  0679                     	bcf	status, 5	;RP0=0, select bank0
  7954  0679  1283               	bcf	status, 6	;RP1=0, select bank0
  7955  067A  1303               	movf	(is_deadzone@adcResult+1),w
  7956  067B  0846               	xorlw	80h
  7957  067C  3A80               	movwf	(??_is_deadzone+0)+0
  7958  067D  00C7               	movf	(is_deadzone@deadzoneHigh+1),w
  7959  067E  084C               	xorlw	80h
  7960  067F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7961  0680  0247               	skipz
  7962  0681  1D03               	goto	u276_25
  7963  0682  2E85               	movf	(is_deadzone@deadzoneHigh),w
  7964  0683  084B               	subwf	(is_deadzone@adcResult),w
  7965  0684  0245               u276_25:
  7966  0685                     
  7967                           	skipnc
  7968  0685  1803               	goto	u276_21
  7969  0686  2E88               	goto	u276_20
  7970  0687  2E89               u276_21:
  7971  0688                     	goto	i1l2640
  7972  0688  2E8E               u276_20:
  7973  0689                     	
  7974                           i1l2638:	
  7975  0689                     	bcf	status, 5	;RP0=0, select bank0
  7976  0689  1283               	bcf	status, 6	;RP1=0, select bank0
  7977  068A  1303               	clrf	(_is_deadzone$890)
  7978  068B  01CD               	incf	(_is_deadzone$890),f
  7979  068C  0ACD               	goto	i1l2640
  7980  068D  2E8E               	
  7981                           i1l325:	
  7982  068E                     	
  7983                           i1l2640:	
  7984  068E                     	bcf	status, 5	;RP0=0, select bank0
  7985  068E  1283               	bcf	status, 6	;RP1=0, select bank0
  7986  068F  1303               	movf	(_is_deadzone$890),w
  7987  0690  084D               	movwf	(??_is_deadzone+0)+0
  7988  0691  00C7               	clrf	(??_is_deadzone+0)+0+1
  7989  0692  01C8               	movf	0+(??_is_deadzone+0)+0,w
  7990  0693  0847               	movwf	(?_is_deadzone)
  7991  0694  00C3               	movf	1+(??_is_deadzone+0)+0,w
  7992  0695  0848               	movwf	(?_is_deadzone+1)
  7993  0696  00C4               	goto	i1l326
  7994  0697  2E98               	
  7995                           i1l2642:	
  7996  0698                     	line	28
  7997                           	
  7998                           i1l326:	
  7999  0698                     	return
  8000  0698  0008               	opt stack 0
  8001                           GLOBAL	__end_of_is_deadzone
  8002                           	__end_of_is_deadzone:
  8003  0699                     	signat	_is_deadzone,8314
  8004                           	global	i1___wmul
  8005                           
  8006 ;; *************** function i1___wmul *****************
  8007 ;; Defined at:
  8008 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  multiplier      2    0[COMMON] unsigned int 
  8011 ;;  multiplicand    2    2[COMMON] unsigned int 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;  __wmul          2    4[COMMON] unsigned int 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  2    0[COMMON] unsigned int 
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8023 ;;      Params:         4       0       0       0       0
  8024 ;;      Locals:         2       0       0       0       0
  8025 ;;      Temps:          0       0       0       0       0
  8026 ;;      Totals:         6       0       0       0       0
  8027 ;;Total ram usage:        6 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_is_deadzone
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  8036                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  8037                           	line	15
  8038                           global __ptext28
  8039                           __ptext28:	;psect for function i1___wmul
  8040  0977                     psect	text28
  8041                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  8042                           	line	15
  8043                           	global	__size_ofi1___wmul
  8044                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  8045  0028                     	
  8046                           i1___wmul:	
  8047  0977                     ;incstack = 0
  8048 ;; hardware stack exceeded
  8049                           	opt	stack 0
  8050                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  8051                           	line	43
  8052                           	
  8053                           i1l2486:	
  8054  0977                     	clrf	(i1___wmul@product)
  8055  0977  01F4               	clrf	(i1___wmul@product+1)
  8056  0978  01F5               	goto	i1l2488
  8057  0979  297A               	line	44
  8058                           	
  8059                           i1l498:	
  8060  097A                     	line	45
  8061                           	
  8062                           i1l2488:	
  8063  097A                     	btfss	(i1___wmul@multiplier),(0)&7
  8064  097A  1C70               	goto	u263_21
  8065  097B  297D               	goto	u263_20
  8066  097C  297E               u263_21:
  8067  097D                     	goto	i1l499
  8068  097D  2984               u263_20:
  8069  097E                     	line	46
  8070                           	
  8071                           i1l2490:	
  8072  097E                     	movf	(i1___wmul@multiplicand),w
  8073  097E  0872               	addwf	(i1___wmul@product),f
  8074  097F  07F4               	skipnc
  8075  0980  1803               	incf	(i1___wmul@product+1),f
  8076  0981  0AF5               	movf	(i1___wmul@multiplicand+1),w
  8077  0982  0873               	addwf	(i1___wmul@product+1),f
  8078  0983  07F5               	
  8079                           i1l499:	
  8080  0984                     	line	47
  8081                           	movlw	01h
  8082  0984  3001               	
  8083                           u264_25:
  8084  0985                     	clrc
  8085  0985  1003               	rlf	(i1___wmul@multiplicand),f
  8086  0986  0DF2               	rlf	(i1___wmul@multiplicand+1),f
  8087  0987  0DF3               	addlw	-1
  8088  0988  3EFF               	skipz
  8089  0989  1D03               	goto	u264_25
  8090  098A  2985               	line	48
  8091                           	
  8092                           i1l2492:	
  8093  098B                     	movlw	01h
  8094  098B  3001               	
  8095                           u265_25:
  8096  098C                     	clrc
  8097  098C  1003               	rrf	(i1___wmul@multiplier+1),f
  8098  098D  0CF1               	rrf	(i1___wmul@multiplier),f
  8099  098E  0CF0               	addlw	-1
  8100  098F  3EFF               	skipz
  8101  0990  1D03               	goto	u265_25
  8102  0991  298C               	line	49
  8103                           	
  8104                           i1l2494:	
  8105  0992                     	movf	((i1___wmul@multiplier)),w
  8106  0992  0870               iorwf	((i1___wmul@multiplier+1)),w
  8107  0993  0471               	btfss	status,2
  8108  0994  1D03               	goto	u266_21
  8109  0995  2997               	goto	u266_20
  8110  0996  2998               u266_21:
  8111  0997                     	goto	i1l2488
  8112  0997  297A               u266_20:
  8113  0998                     	goto	i1l2496
  8114  0998  2999               	
  8115                           i1l500:	
  8116  0999                     	line	52
  8117                           	
  8118                           i1l2496:	
  8119  0999                     	movf	(i1___wmul@product+1),w
  8120  0999  0875               	movwf	(?i1___wmul+1)
  8121  099A  00F1               	movf	(i1___wmul@product),w
  8122  099B  0874               	movwf	(?i1___wmul)
  8123  099C  00F0               	goto	i1l501
  8124  099D  299E               	
  8125                           i1l2498:	
  8126  099E                     	line	53
  8127                           	
  8128                           i1l501:	
  8129  099E                     	return
  8130  099E  0008               	opt stack 0
  8131                           GLOBAL	__end_ofi1___wmul
  8132                           	__end_ofi1___wmul:
  8133  099F                     	signat	i1___wmul,90
  8134                           	global	___xxtofl
  8135                           
  8136 ;; *************** function ___xxtofl *****************
  8137 ;; Defined at:
  8138 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  sign            1    wreg     unsigned char 
  8141 ;;  val             4    0[COMMON] long 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  sign            1    8[COMMON] unsigned char 
  8144 ;;  arg             4   10[COMMON] unsigned long 
  8145 ;;  exp             1    9[COMMON] unsigned char 
  8146 ;; Return value:  Size  Location     Type
  8147 ;;                  4    0[COMMON] unsigned char 
  8148 ;; Registers used:
  8149 ;;		wreg, status,2, status,0
  8150 ;; Tracked objects:
  8151 ;;		On entry : 0/0
  8152 ;;		On exit  : 0/0
  8153 ;;		Unchanged: 0/0
  8154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8155 ;;      Params:         4       0       0       0       0
  8156 ;;      Locals:         6       0       0       0       0
  8157 ;;      Temps:          4       0       0       0       0
  8158 ;;      Totals:        14       0       0       0       0
  8159 ;;Total ram usage:       14 bytes
  8160 ;; Hardware stack levels used:    1
  8161 ;; This function calls:
  8162 ;;		Nothing
  8163 ;; This function is called by:
  8164 ;;		_is_deadzone
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
  8168                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  8169                           	line	10
  8170                           global __ptext29
  8171                           __ptext29:	;psect for function ___xxtofl
  8172  0699                     psect	text29
  8173                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  8174                           	line	10
  8175                           	global	__size_of___xxtofl
  8176                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  8177  00C2                     	
  8178                           ___xxtofl:	
  8179  0699                     ;incstack = 0
  8180 ;; hardware stack exceeded
  8181                           	opt	stack 0
  8182                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8183                           ;___xxtofl@sign stored from wreg
  8184                           	movwf	(___xxtofl@sign)
  8185  0699  00F8               	line	15
  8186                           	
  8187                           i1l2442:	
  8188  069A                     	movf	((___xxtofl@sign)),w
  8189  069A  0878               	btfsc	status,2
  8190  069B  1903               	goto	u249_21
  8191  069C  2E9E               	goto	u249_20
  8192  069D  2E9F               u249_21:
  8193  069E                     	goto	i1l2448
  8194  069E  2EB3               u249_20:
  8195  069F                     	
  8196                           i1l2444:	
  8197  069F                     	btfss	(___xxtofl@val+3),7
  8198  069F  1FF3               	goto	u250_21
  8199  06A0  2EA2               	goto	u250_20
  8200  06A1  2EA3               u250_21:
  8201  06A2                     	goto	i1l2448
  8202  06A2  2EB3               u250_20:
  8203  06A3                     	line	16
  8204                           	
  8205                           i1l2446:	
  8206  06A3                     	comf	(___xxtofl@val)+0,w
  8207  06A3  0970               	movwf	(___xxtofl@arg)
  8208  06A4  00FA               	comf	(___xxtofl@val)+1,w
  8209  06A5  0971               	movwf	(___xxtofl@arg+1)
  8210  06A6  00FB               	comf	(___xxtofl@val)+2,w
  8211  06A7  0972               	movwf	(___xxtofl@arg+2)
  8212  06A8  00FC               	comf	(___xxtofl@val)+3,w
  8213  06A9  0973               	movwf	(___xxtofl@arg+3)
  8214  06AA  00FD               	incf	(___xxtofl@arg),f
  8215  06AB  0AFA               	skipnz
  8216  06AC  1903               	incf	(___xxtofl@arg+1),f
  8217  06AD  0AFB               	skipnz
  8218  06AE  1903               	incf	(___xxtofl@arg+2),f
  8219  06AF  0AFC               	skipnz
  8220  06B0  1903               	incf	(___xxtofl@arg+3),f
  8221  06B1  0AFD               	line	17
  8222                           	goto	i1l907
  8223  06B2  2EBB               	line	18
  8224                           	
  8225                           i1l906:	
  8226  06B3                     	line	19
  8227                           	
  8228                           i1l2448:	
  8229  06B3                     	movf	(___xxtofl@val+3),w
  8230  06B3  0873               	movwf	(___xxtofl@arg+3)
  8231  06B4  00FD               	movf	(___xxtofl@val+2),w
  8232  06B5  0872               	movwf	(___xxtofl@arg+2)
  8233  06B6  00FC               	movf	(___xxtofl@val+1),w
  8234  06B7  0871               	movwf	(___xxtofl@arg+1)
  8235  06B8  00FB               	movf	(___xxtofl@val),w
  8236  06B9  0870               	movwf	(___xxtofl@arg)
  8237  06BA  00FA               
  8238                           	line	20
  8239                           	
  8240                           i1l907:	
  8241  06BB                     	line	21
  8242                           	movf	(___xxtofl@val+3),w
  8243  06BB  0873               	iorwf	(___xxtofl@val+2),w
  8244  06BC  0472               	iorwf	(___xxtofl@val+1),w
  8245  06BD  0471               	iorwf	(___xxtofl@val),w
  8246  06BE  0470               	skipz
  8247  06BF  1D03               	goto	u251_21
  8248  06C0  2EC2               	goto	u251_20
  8249  06C1  2EC3               u251_21:
  8250  06C2                     	goto	i1l2454
  8251  06C2  2ECD               u251_20:
  8252  06C3                     	line	22
  8253                           	
  8254                           i1l2450:	
  8255  06C3                     	movlw	0x0
  8256  06C3  3000               	movwf	(?___xxtofl+3)
  8257  06C4  00F3               	movlw	0x0
  8258  06C5  3000               	movwf	(?___xxtofl+2)
  8259  06C6  00F2               	movlw	0x0
  8260  06C7  3000               	movwf	(?___xxtofl+1)
  8261  06C8  00F1               	movlw	0x0
  8262  06C9  3000               	movwf	(?___xxtofl)
  8263  06CA  00F0               
  8264                           	goto	i1l909
  8265  06CB  2F5A               	
  8266                           i1l2452:	
  8267  06CC                     	goto	i1l909
  8268  06CC  2F5A               	
  8269                           i1l908:	
  8270  06CD                     	line	23
  8271                           	
  8272                           i1l2454:	
  8273  06CD                     	movlw	low(096h)
  8274  06CD  3096               	movwf	(??___xxtofl+0)+0
  8275  06CE  00F4               	movf	(??___xxtofl+0)+0,w
  8276  06CF  0874               	movwf	(___xxtofl@exp)
  8277  06D0  00F9               	line	24
  8278                           	goto	i1l2458
  8279  06D1  2EE0               	
  8280                           i1l911:	
  8281  06D2                     	line	25
  8282                           	
  8283                           i1l2456:	
  8284  06D2                     	movlw	low(01h)
  8285  06D2  3001               	movwf	(??___xxtofl+0)+0
  8286  06D3  00F4               	movf	(??___xxtofl+0)+0,w
  8287  06D4  0874               	addwf	(___xxtofl@exp),f
  8288  06D5  07F9               	line	26
  8289                           	movlw	01h
  8290  06D6  3001               u252_25:
  8291  06D7                     	clrc
  8292  06D7  1003               	rrf	(___xxtofl@arg+3),f
  8293  06D8  0CFD               	rrf	(___xxtofl@arg+2),f
  8294  06D9  0CFC               	rrf	(___xxtofl@arg+1),f
  8295  06DA  0CFB               	rrf	(___xxtofl@arg),f
  8296  06DB  0CFA               	addlw	-1
  8297  06DC  3EFF               	skipz
  8298  06DD  1D03               	goto	u252_25
  8299  06DE  2ED7               
  8300                           	goto	i1l2458
  8301  06DF  2EE0               	line	27
  8302                           	
  8303                           i1l910:	
  8304  06E0                     	line	24
  8305                           	
  8306                           i1l2458:	
  8307  06E0                     	movlw	high highword(0FE000000h)
  8308  06E0  30FE               	andwf	(___xxtofl@arg+3),w
  8309  06E1  057D               	btfss	status,2
  8310  06E2  1D03               	goto	u253_21
  8311  06E3  2EE5               	goto	u253_20
  8312  06E4  2EE6               u253_21:
  8313  06E5                     	goto	i1l2456
  8314  06E5  2ED2               u253_20:
  8315  06E6                     	goto	i1l913
  8316  06E6  2F03               	
  8317                           i1l912:	
  8318  06E7                     	line	28
  8319                           	goto	i1l913
  8320  06E7  2F03               	
  8321                           i1l914:	
  8322  06E8                     	line	29
  8323                           	
  8324                           i1l2460:	
  8325  06E8                     	movlw	low(01h)
  8326  06E8  3001               	movwf	(??___xxtofl+0)+0
  8327  06E9  00F4               	movf	(??___xxtofl+0)+0,w
  8328  06EA  0874               	addwf	(___xxtofl@exp),f
  8329  06EB  07F9               	line	30
  8330                           	
  8331                           i1l2462:	
  8332  06EC                     	movlw	01h
  8333  06EC  3001               	addwf	(___xxtofl@arg),f
  8334  06ED  07FA               	movlw	0
  8335  06EE  3000               	skipnc
  8336  06EF  1803               movlw 1
  8337  06F0  3001               	addwf	(___xxtofl@arg+1),f
  8338  06F1  07FB               	movlw	0
  8339  06F2  3000               	skipnc
  8340  06F3  1803               movlw 1
  8341  06F4  3001               	addwf	(___xxtofl@arg+2),f
  8342  06F5  07FC               	movlw	0
  8343  06F6  3000               	skipnc
  8344  06F7  1803               movlw 1
  8345  06F8  3001               	addwf	(___xxtofl@arg+3),f
  8346  06F9  07FD               	line	31
  8347                           	
  8348                           i1l2464:	
  8349  06FA                     	movlw	01h
  8350  06FA  3001               u254_25:
  8351  06FB                     	clrc
  8352  06FB  1003               	rrf	(___xxtofl@arg+3),f
  8353  06FC  0CFD               	rrf	(___xxtofl@arg+2),f
  8354  06FD  0CFC               	rrf	(___xxtofl@arg+1),f
  8355  06FE  0CFB               	rrf	(___xxtofl@arg),f
  8356  06FF  0CFA               	addlw	-1
  8357  0700  3EFF               	skipz
  8358  0701  1D03               	goto	u254_25
  8359  0702  2EFB               
  8360                           	line	32
  8361                           	
  8362                           i1l913:	
  8363  0703                     	line	28
  8364                           	movlw	high highword(0FF000000h)
  8365  0703  30FF               	andwf	(___xxtofl@arg+3),w
  8366  0704  057D               	btfss	status,2
  8367  0705  1D03               	goto	u255_21
  8368  0706  2F08               	goto	u255_20
  8369  0707  2F09               u255_21:
  8370  0708                     	goto	i1l2460
  8371  0708  2EE8               u255_20:
  8372  0709                     	goto	i1l2468
  8373  0709  2F17               	
  8374                           i1l915:	
  8375  070A                     	line	33
  8376                           	goto	i1l2468
  8377  070A  2F17               	
  8378                           i1l917:	
  8379  070B                     	line	34
  8380                           	
  8381                           i1l2466:	
  8382  070B                     	movlw	01h
  8383  070B  3001               	subwf	(___xxtofl@exp),f
  8384  070C  02F9               	line	35
  8385                           	movlw	01h
  8386  070D  3001               	movwf	(??___xxtofl+0)+0
  8387  070E  00F4               u256_25:
  8388  070F                     	clrc
  8389  070F  1003               	rlf	(___xxtofl@arg),f
  8390  0710  0DFA               	rlf	(___xxtofl@arg+1),f
  8391  0711  0DFB               	rlf	(___xxtofl@arg+2),f
  8392  0712  0DFC               	rlf	(___xxtofl@arg+3),f
  8393  0713  0DFD               	decfsz	(??___xxtofl+0)+0
  8394  0714  0BF4               	goto	u256_25
  8395  0715  2F0F               	goto	i1l2468
  8396  0716  2F17               	line	36
  8397                           	
  8398                           i1l916:	
  8399  0717                     	line	33
  8400                           	
  8401                           i1l2468:	
  8402  0717                     	btfsc	(___xxtofl@arg+2),(23)&7
  8403  0717  1BFC               	goto	u257_21
  8404  0718  2F1A               	goto	u257_20
  8405  0719  2F1B               u257_21:
  8406  071A                     	goto	i1l920
  8407  071A  2F22               u257_20:
  8408  071B                     	
  8409                           i1l2470:	
  8410  071B                     	movlw	low(02h)
  8411  071B  3002               	subwf	(___xxtofl@exp),w
  8412  071C  0279               	skipnc
  8413  071D  1803               	goto	u258_21
  8414  071E  2F20               	goto	u258_20
  8415  071F  2F21               u258_21:
  8416  0720                     	goto	i1l2466
  8417  0720  2F0B               u258_20:
  8418  0721                     	goto	i1l920
  8419  0721  2F22               	
  8420                           i1l919:	
  8421  0722                     	
  8422                           i1l920:	
  8423  0722                     	line	37
  8424                           	btfsc	(___xxtofl@exp),(0)&7
  8425  0722  1879               	goto	u259_21
  8426  0723  2F25               	goto	u259_20
  8427  0724  2F26               u259_21:
  8428  0725                     	goto	i1l921
  8429  0725  2F2E               u259_20:
  8430  0726                     	line	38
  8431                           	
  8432                           i1l2472:	
  8433  0726                     	movlw	0FFh
  8434  0726  30FF               	andwf	(___xxtofl@arg),f
  8435  0727  05FA               	movlw	0FFh
  8436  0728  30FF               	andwf	(___xxtofl@arg+1),f
  8437  0729  05FB               	movlw	07Fh
  8438  072A  307F               	andwf	(___xxtofl@arg+2),f
  8439  072B  05FC               	movlw	0FFh
  8440  072C  30FF               	andwf	(___xxtofl@arg+3),f
  8441  072D  05FD               	
  8442                           i1l921:	
  8443  072E                     	line	39
  8444                           	clrc
  8445  072E  1003               	rrf	(___xxtofl@exp),f
  8446  072F  0CF9               
  8447                           	line	40
  8448                           	
  8449                           i1l2474:	
  8450  0730                     	movf	(___xxtofl@exp),w
  8451  0730  0879               	movwf	(??___xxtofl+0)+0
  8452  0731  00F4               	clrf	(??___xxtofl+0)+0+1
  8453  0732  01F5               	clrf	(??___xxtofl+0)+0+2
  8454  0733  01F6               	clrf	(??___xxtofl+0)+0+3
  8455  0734  01F7               	movlw	018h
  8456  0735  3018               u260_25:
  8457  0736                     	clrc
  8458  0736  1003               	rlf	(??___xxtofl+0)+0,f
  8459  0737  0DF4               	rlf	(??___xxtofl+0)+1,f
  8460  0738  0DF5               	rlf	(??___xxtofl+0)+2,f
  8461  0739  0DF6               	rlf	(??___xxtofl+0)+3,f
  8462  073A  0DF7               u260_20:
  8463  073B                     	addlw	-1
  8464  073B  3EFF               	skipz
  8465  073C  1D03               	goto	u260_25
  8466  073D  2F36               	movf	0+(??___xxtofl+0)+0,w
  8467  073E  0874               	iorwf	(___xxtofl@arg),f
  8468  073F  04FA               	movf	1+(??___xxtofl+0)+0,w
  8469  0740  0875               	iorwf	(___xxtofl@arg+1),f
  8470  0741  04FB               	movf	2+(??___xxtofl+0)+0,w
  8471  0742  0876               	iorwf	(___xxtofl@arg+2),f
  8472  0743  04FC               	movf	3+(??___xxtofl+0)+0,w
  8473  0744  0877               	iorwf	(___xxtofl@arg+3),f
  8474  0745  04FD               	line	41
  8475                           	
  8476                           i1l2476:	
  8477  0746                     	movf	((___xxtofl@sign)),w
  8478  0746  0878               	btfsc	status,2
  8479  0747  1903               	goto	u261_21
  8480  0748  2F4A               	goto	u261_20
  8481  0749  2F4B               u261_21:
  8482  074A                     	goto	i1l2482
  8483  074A  2F51               u261_20:
  8484  074B                     	
  8485                           i1l2478:	
  8486  074B                     	btfss	(___xxtofl@val+3),7
  8487  074B  1FF3               	goto	u262_21
  8488  074C  2F4E               	goto	u262_20
  8489  074D  2F4F               u262_21:
  8490  074E                     	goto	i1l2482
  8491  074E  2F51               u262_20:
  8492  074F                     	line	42
  8493                           	
  8494                           i1l2480:	
  8495  074F                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  8496  074F  17FD               	goto	i1l2482
  8497  0750  2F51               	
  8498                           i1l922:	
  8499  0751                     	line	43
  8500                           	
  8501                           i1l2482:	
  8502  0751                     	movf	(___xxtofl@arg+3),w
  8503  0751  087D               	movwf	(?___xxtofl+3)
  8504  0752  00F3               	movf	(___xxtofl@arg+2),w
  8505  0753  087C               	movwf	(?___xxtofl+2)
  8506  0754  00F2               	movf	(___xxtofl@arg+1),w
  8507  0755  087B               	movwf	(?___xxtofl+1)
  8508  0756  00F1               	movf	(___xxtofl@arg),w
  8509  0757  087A               	movwf	(?___xxtofl)
  8510  0758  00F0               
  8511                           	goto	i1l909
  8512  0759  2F5A               	
  8513                           i1l2484:	
  8514  075A                     	line	44
  8515                           	
  8516                           i1l909:	
  8517  075A                     	return
  8518  075A  0008               	opt stack 0
  8519                           GLOBAL	__end_of___xxtofl
  8520                           	__end_of___xxtofl:
  8521  075B                     	signat	___xxtofl,8316
  8522                           	global	___fltol
  8523                           
  8524 ;; *************** function ___fltol *****************
  8525 ;; Defined at:
  8526 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  f1              4   24[BANK0 ] unsigned char 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  exp1            1   34[BANK0 ] unsigned char 
  8531 ;;  sign1           1   33[BANK0 ] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  4   24[BANK0 ] long 
  8534 ;; Registers used:
  8535 ;;		wreg, status,2, status,0
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8541 ;;      Params:         0       4       0       0       0
  8542 ;;      Locals:         0       2       0       0       0
  8543 ;;      Temps:          0       5       0       0       0
  8544 ;;      Totals:         0      11       0       0       0
  8545 ;;Total ram usage:       11 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_is_deadzone
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           psect	text30,local,class=CODE,delta=2,merge=1,group=1
  8554                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  8555                           	line	43
  8556                           global __ptext30
  8557                           __ptext30:	;psect for function ___fltol
  8558  075B                     psect	text30
  8559                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  8560                           	line	43
  8561                           	global	__size_of___fltol
  8562                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  8563  009C                     	
  8564                           ___fltol:	
  8565  075B                     ;incstack = 0
  8566 ;; hardware stack exceeded
  8567                           	opt	stack 0
  8568                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8569                           	line	47
  8570                           	
  8571                           i1l2212:	
  8572  075B                     	bcf	status, 5	;RP0=0, select bank0
  8573  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  8574  075C  1303               	movf	(___fltol@f1),w
  8575  075D  0838               	movwf	(??___fltol+0)+0
  8576  075E  00BC               	movf	(___fltol@f1+1),w
  8577  075F  0839               	movwf	((??___fltol+0)+0+1)
  8578  0760  00BD               	movf	(___fltol@f1+2),w
  8579  0761  083A               	movwf	((??___fltol+0)+0+2)
  8580  0762  00BE               	movf	(___fltol@f1+3),w
  8581  0763  083B               	movwf	((??___fltol+0)+0+3)
  8582  0764  00BF               	clrc
  8583  0765  1003               	rlf	(??___fltol+0)+2,w
  8584  0766  0D3E               	rlf	(??___fltol+0)+3,w
  8585  0767  0D3F               	movwf	(??___fltol+4)+0
  8586  0768  00C0               	movf	(??___fltol+4)+0,w
  8587  0769  0840               	movwf	(___fltol@exp1)
  8588  076A  00C2               	movf	(((___fltol@exp1))),w
  8589  076B  0842               	btfss	status,2
  8590  076C  1D03               	goto	u193_21
  8591  076D  2F6F               	goto	u193_20
  8592  076E  2F70               u193_21:
  8593  076F                     	goto	i1l2218
  8594  076F  2F7A               u193_20:
  8595  0770                     	line	48
  8596                           	
  8597                           i1l2214:	
  8598  0770                     	movlw	high highword(0)
  8599  0770  3000               	movwf	(?___fltol+3)
  8600  0771  00BB               	movlw	low highword(0)
  8601  0772  3000               	movwf	(?___fltol+2)
  8602  0773  00BA               	movlw	high(0)
  8603  0774  3000               	movwf	(?___fltol+1)
  8604  0775  00B9               	movlw	low(0)
  8605  0776  3000               	movwf	(?___fltol)
  8606  0777  00B8               
  8607                           	goto	i1l685
  8608  0778  2FF6               	
  8609                           i1l2216:	
  8610  0779                     	goto	i1l685
  8611  0779  2FF6               	
  8612                           i1l684:	
  8613  077A                     	line	49
  8614                           	
  8615                           i1l2218:	
  8616  077A                     	movf	(___fltol@f1),w
  8617  077A  0838               	movwf	(??___fltol+0)+0
  8618  077B  00BC               	movf	(___fltol@f1+1),w
  8619  077C  0839               	movwf	((??___fltol+0)+0+1)
  8620  077D  00BD               	movf	(___fltol@f1+2),w
  8621  077E  083A               	movwf	((??___fltol+0)+0+2)
  8622  077F  00BE               	movf	(___fltol@f1+3),w
  8623  0780  083B               	movwf	((??___fltol+0)+0+3)
  8624  0781  00BF               	movlw	01Fh
  8625  0782  301F               u194_25:
  8626  0783                     	clrc
  8627  0783  1003               	rrf	(??___fltol+0)+3,f
  8628  0784  0CBF               	rrf	(??___fltol+0)+2,f
  8629  0785  0CBE               	rrf	(??___fltol+0)+1,f
  8630  0786  0CBD               	rrf	(??___fltol+0)+0,f
  8631  0787  0CBC               u194_20:
  8632  0788                     	addlw	-1
  8633  0788  3EFF               	skipz
  8634  0789  1D03               	goto	u194_25
  8635  078A  2F83               	movf	0+(??___fltol+0)+0,w
  8636  078B  083C               	movwf	(??___fltol+4)+0
  8637  078C  00C0               	movf	(??___fltol+4)+0,w
  8638  078D  0840               	movwf	(___fltol@sign1)
  8639  078E  00C1               	line	50
  8640                           	
  8641                           i1l2220:	
  8642  078F                     	bsf	(___fltol@f1)+(23/8),(23)&7
  8643  078F  17BA               	line	51
  8644                           	
  8645                           i1l2222:	
  8646  0790                     	movlw	0FFh
  8647  0790  30FF               	andwf	(___fltol@f1),f
  8648  0791  05B8               	movlw	0FFh
  8649  0792  30FF               	andwf	(___fltol@f1+1),f
  8650  0793  05B9               	movlw	0FFh
  8651  0794  30FF               	andwf	(___fltol@f1+2),f
  8652  0795  05BA               	movlw	0
  8653  0796  3000               	andwf	(___fltol@f1+3),f
  8654  0797  05BB               	line	52
  8655                           	
  8656                           i1l2224:	
  8657  0798                     	movlw	096h
  8658  0798  3096               	subwf	(___fltol@exp1),f
  8659  0799  02C2               	line	53
  8660                           	
  8661                           i1l2226:	
  8662  079A                     	btfss	(___fltol@exp1),7
  8663  079A  1FC2               	goto	u195_21
  8664  079B  2F9D               	goto	u195_20
  8665  079C  2F9E               u195_21:
  8666  079D                     	goto	i1l2236
  8667  079D  2FC3               u195_20:
  8668  079E                     	line	54
  8669                           	
  8670                           i1l2228:	
  8671  079E                     	movf	(___fltol@exp1),w
  8672  079E  0842               	xorlw	80h
  8673  079F  3A80               	addlw	-((-23)^80h)
  8674  07A0  3E97               	skipnc
  8675  07A1  1803               	goto	u196_21
  8676  07A2  2FA4               	goto	u196_20
  8677  07A3  2FA5               u196_21:
  8678  07A4                     	goto	i1l2234
  8679  07A4  2FB0               u196_20:
  8680  07A5                     	line	55
  8681                           	
  8682                           i1l2230:	
  8683  07A5                     	movlw	high highword(0)
  8684  07A5  3000               	movwf	(?___fltol+3)
  8685  07A6  00BB               	movlw	low highword(0)
  8686  07A7  3000               	movwf	(?___fltol+2)
  8687  07A8  00BA               	movlw	high(0)
  8688  07A9  3000               	movwf	(?___fltol+1)
  8689  07AA  00B9               	movlw	low(0)
  8690  07AB  3000               	movwf	(?___fltol)
  8691  07AC  00B8               
  8692                           	goto	i1l685
  8693  07AD  2FF6               	
  8694                           i1l2232:	
  8695  07AE                     	goto	i1l685
  8696  07AE  2FF6               	
  8697                           i1l687:	
  8698  07AF                     	goto	i1l2234
  8699  07AF  2FB0               	line	56
  8700                           	
  8701                           i1l688:	
  8702  07B0                     	line	57
  8703                           	
  8704                           i1l2234:	
  8705  07B0                     	movlw	01h
  8706  07B0  3001               u197_25:
  8707  07B1                     	clrc
  8708  07B1  1003               	rrf	(___fltol@f1+3),f
  8709  07B2  0CBB               	rrf	(___fltol@f1+2),f
  8710  07B3  0CBA               	rrf	(___fltol@f1+1),f
  8711  07B4  0CB9               	rrf	(___fltol@f1),f
  8712  07B5  0CB8               	addlw	-1
  8713  07B6  3EFF               	skipz
  8714  07B7  1D03               	goto	u197_25
  8715  07B8  2FB1               
  8716                           	line	58
  8717                           	movlw	low(01h)
  8718  07B9  3001               	movwf	(??___fltol+0)+0
  8719  07BA  00BC               	movf	(??___fltol+0)+0,w
  8720  07BB  083C               	addwf	(___fltol@exp1),f
  8721  07BC  07C2               	btfss	status,2
  8722  07BD  1D03               	goto	u198_21
  8723  07BE  2FC0               	goto	u198_20
  8724  07BF  2FC1               u198_21:
  8725  07C0                     	goto	i1l2234
  8726  07C0  2FB0               u198_20:
  8727  07C1                     	goto	i1l2244
  8728  07C1  2FE6               	
  8729                           i1l689:	
  8730  07C2                     	line	59
  8731                           	goto	i1l2244
  8732  07C2  2FE6               	
  8733                           i1l686:	
  8734  07C3                     	line	60
  8735                           	
  8736                           i1l2236:	
  8737  07C3                     	movlw	low(020h)
  8738  07C3  3020               	subwf	(___fltol@exp1),w
  8739  07C4  0242               	skipc
  8740  07C5  1C03               	goto	u199_21
  8741  07C6  2FC8               	goto	u199_20
  8742  07C7  2FC9               u199_21:
  8743  07C8                     	goto	i1l692
  8744  07C8  2FDF               u199_20:
  8745  07C9                     	line	61
  8746                           	
  8747                           i1l2238:	
  8748  07C9                     	movlw	high highword(0)
  8749  07C9  3000               	movwf	(?___fltol+3)
  8750  07CA  00BB               	movlw	low highword(0)
  8751  07CB  3000               	movwf	(?___fltol+2)
  8752  07CC  00BA               	movlw	high(0)
  8753  07CD  3000               	movwf	(?___fltol+1)
  8754  07CE  00B9               	movlw	low(0)
  8755  07CF  3000               	movwf	(?___fltol)
  8756  07D0  00B8               
  8757                           	goto	i1l685
  8758  07D1  2FF6               	
  8759                           i1l2240:	
  8760  07D2                     	goto	i1l685
  8761  07D2  2FF6               	
  8762                           i1l691:	
  8763  07D3                     	line	62
  8764                           	goto	i1l692
  8765  07D3  2FDF               	
  8766                           i1l693:	
  8767  07D4                     	line	63
  8768                           	
  8769                           i1l2242:	
  8770  07D4                     	movlw	01h
  8771  07D4  3001               	movwf	(??___fltol+0)+0
  8772  07D5  00BC               u200_25:
  8773  07D6                     	clrc
  8774  07D6  1003               	rlf	(___fltol@f1),f
  8775  07D7  0DB8               	rlf	(___fltol@f1+1),f
  8776  07D8  0DB9               	rlf	(___fltol@f1+2),f
  8777  07D9  0DBA               	rlf	(___fltol@f1+3),f
  8778  07DA  0DBB               	decfsz	(??___fltol+0)+0
  8779  07DB  0BBC               	goto	u200_25
  8780  07DC  2FD6               	line	64
  8781                           	movlw	01h
  8782  07DD  3001               	subwf	(___fltol@exp1),f
  8783  07DE  02C2               	line	65
  8784                           	
  8785                           i1l692:	
  8786  07DF                     	line	62
  8787                           	movf	((___fltol@exp1)),w
  8788  07DF  0842               	btfss	status,2
  8789  07E0  1D03               	goto	u201_21
  8790  07E1  2FE3               	goto	u201_20
  8791  07E2  2FE4               u201_21:
  8792  07E3                     	goto	i1l2242
  8793  07E3  2FD4               u201_20:
  8794  07E4                     	goto	i1l2244
  8795  07E4  2FE6               	
  8796                           i1l694:	
  8797  07E5                     	goto	i1l2244
  8798  07E5  2FE6               	line	66
  8799                           	
  8800                           i1l690:	
  8801  07E6                     	line	67
  8802                           	
  8803                           i1l2244:	
  8804  07E6                     	movf	((___fltol@sign1)),w
  8805  07E6  0841               	btfsc	status,2
  8806  07E7  1903               	goto	u202_21
  8807  07E8  2FEA               	goto	u202_20
  8808  07E9  2FEB               u202_21:
  8809  07EA                     	goto	i1l695
  8810  07EA  2FF6               u202_20:
  8811  07EB                     	line	68
  8812                           	
  8813                           i1l2246:	
  8814  07EB                     	comf	(___fltol@f1),f
  8815  07EB  09B8               	comf	(___fltol@f1+1),f
  8816  07EC  09B9               	comf	(___fltol@f1+2),f
  8817  07ED  09BA               	comf	(___fltol@f1+3),f
  8818  07EE  09BB               	incf	(___fltol@f1),f
  8819  07EF  0AB8               	skipnz
  8820  07F0  1903               	incf	(___fltol@f1+1),f
  8821  07F1  0AB9               	skipnz
  8822  07F2  1903               	incf	(___fltol@f1+2),f
  8823  07F3  0ABA               	skipnz
  8824  07F4  1903               	incf	(___fltol@f1+3),f
  8825  07F5  0ABB               	
  8826                           i1l695:	
  8827  07F6                     	line	69
  8828                           	line	70
  8829                           	
  8830                           i1l685:	
  8831  07F6                     	return
  8832  07F6  0008               	opt stack 0
  8833                           GLOBAL	__end_of___fltol
  8834                           	__end_of___fltol:
  8835  07F7                     	signat	___fltol,4220
  8836                           	global	___fladd
  8837                           
  8838 ;; *************** function ___fladd *****************
  8839 ;; Defined at:
  8840 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8841 ;; Parameters:    Size  Location     Type
  8842 ;;  b               4    0[BANK0 ] long 
  8843 ;;  a               4    4[BANK0 ] long 
  8844 ;; Auto vars:     Size  Location     Type
  8845 ;;  grs             1   23[BANK0 ] unsigned char 
  8846 ;;  bexp            1   22[BANK0 ] unsigned char 
  8847 ;;  aexp            1   21[BANK0 ] unsigned char 
  8848 ;;  signs           1   20[BANK0 ] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  4    0[BANK0 ] unsigned char 
  8851 ;; Registers used:
  8852 ;;		wreg, status,2, status,0, btemp+1
  8853 ;; Tracked objects:
  8854 ;;		On entry : 0/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8858 ;;      Params:         0       8       0       0       0
  8859 ;;      Locals:         0       4       0       0       0
  8860 ;;      Temps:          0      12       0       0       0
  8861 ;;      Totals:         0      24       0       0       0
  8862 ;;Total ram usage:       24 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; This function calls:
  8865 ;;		Nothing
  8866 ;; This function is called by:
  8867 ;;		_is_deadzone
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           psect	text31,local,class=CODE,delta=2,merge=1,group=1
  8871                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8872                           	line	10
  8873                           global __ptext31
  8874                           __ptext31:	;psect for function ___fladd
  8875  0031                     psect	text31
  8876                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8877                           	line	10
  8878                           	global	__size_of___fladd
  8879                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8880  02BC                     	
  8881                           ___fladd:	
  8882  0031                     ;incstack = 0
  8883 ;; hardware stack exceeded
  8884                           	opt	stack 0
  8885                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8886                           	line	21
  8887                           	
  8888                           i1l2248:	
  8889  0031                     	bcf	status, 5	;RP0=0, select bank0
  8890  0031  1283               	bcf	status, 6	;RP1=0, select bank0
  8891  0032  1303               	movf	0+(___fladd@b)+03h,w
  8892  0033  0823               	andlw	080h
  8893  0034  3980               	movwf	(??___fladd+0)+0
  8894  0035  00A8               	movf	(??___fladd+0)+0,w
  8895  0036  0828               	movwf	(___fladd@signs)
  8896  0037  00B4               	line	22
  8897                           	
  8898                           i1l2250:	
  8899  0038                     	movf	0+(___fladd@b)+03h,w
  8900  0038  0823               	movwf	(??___fladd+0)+0
  8901  0039  00A8               	addwf	(??___fladd+0)+0,w
  8902  003A  0728               	movwf	(??___fladd+1)+0
  8903  003B  00A9               	movf	(??___fladd+1)+0,w
  8904  003C  0829               	movwf	(___fladd@bexp)
  8905  003D  00B6               	line	23
  8906                           	
  8907                           i1l2252:	
  8908  003E                     	btfss	0+(___fladd@b)+02h,(7)&7
  8909  003E  1FA2               	goto	u203_21
  8910  003F  2841               	goto	u203_20
  8911  0040  2842               u203_21:
  8912  0041                     	goto	i1l2256
  8913  0041  2844               u203_20:
  8914  0042                     	line	24
  8915                           	
  8916                           i1l2254:	
  8917  0042                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8918  0042  1436               	goto	i1l2256
  8919  0043  2844               	line	25
  8920                           	
  8921                           i1l784:	
  8922  0044                     	line	28
  8923                           	
  8924                           i1l2256:	
  8925  0044                     	movf	((___fladd@bexp)),w
  8926  0044  0836               	btfsc	status,2
  8927  0045  1903               	goto	u204_21
  8928  0046  2848               	goto	u204_20
  8929  0047  2849               u204_21:
  8930  0048                     	goto	i1l2266
  8931  0048  285A               u204_20:
  8932  0049                     	line	30
  8933                           	
  8934                           i1l2258:	
  8935  0049                     		incf	((___fladd@bexp)),w
  8936  0049  0A36               	btfss	status,2
  8937  004A  1D03               	goto	u205_21
  8938  004B  284D               	goto	u205_20
  8939  004C  284E               u205_21:
  8940  004D                     	goto	i1l2262
  8941  004D  2857               u205_20:
  8942  004E                     	line	32
  8943                           	
  8944                           i1l2260:	
  8945  004E                     	movlw	0x0
  8946  004E  3000               	movwf	(___fladd@b+3)
  8947  004F  00A3               	movlw	0x0
  8948  0050  3000               	movwf	(___fladd@b+2)
  8949  0051  00A2               	movlw	0x0
  8950  0052  3000               	movwf	(___fladd@b+1)
  8951  0053  00A1               	movlw	0x0
  8952  0054  3000               	movwf	(___fladd@b)
  8953  0055  00A0               
  8954                           	goto	i1l2262
  8955  0056  2857               	line	33
  8956                           	
  8957                           i1l786:	
  8958  0057                     	line	35
  8959                           	
  8960                           i1l2262:	
  8961  0057                     	bsf	(___fladd@b)+(23/8),(23)&7
  8962  0057  17A2               	line	37
  8963                           	
  8964                           i1l2264:	
  8965  0058                     	clrf	0+(___fladd@b)+03h
  8966  0058  01A3               	line	38
  8967                           	goto	i1l2268
  8968  0059  2863               	line	39
  8969                           	
  8970                           i1l785:	
  8971  005A                     	line	41
  8972                           	
  8973                           i1l2266:	
  8974  005A                     	movlw	0x0
  8975  005A  3000               	movwf	(___fladd@b+3)
  8976  005B  00A3               	movlw	0x0
  8977  005C  3000               	movwf	(___fladd@b+2)
  8978  005D  00A2               	movlw	0x0
  8979  005E  3000               	movwf	(___fladd@b+1)
  8980  005F  00A1               	movlw	0x0
  8981  0060  3000               	movwf	(___fladd@b)
  8982  0061  00A0               
  8983                           	goto	i1l2268
  8984  0062  2863               	line	42
  8985                           	
  8986                           i1l787:	
  8987  0063                     	line	44
  8988                           	
  8989                           i1l2268:	
  8990  0063                     	movf	0+(___fladd@a)+03h,w
  8991  0063  0827               	andlw	080h
  8992  0064  3980               	movwf	(??___fladd+0)+0
  8993  0065  00A8               	movf	(??___fladd+0)+0,w
  8994  0066  0828               	movwf	(___fladd@aexp)
  8995  0067  00B5               	line	46
  8996                           	
  8997                           i1l2270:	
  8998  0068                     	movf	(___fladd@aexp),w
  8999  0068  0835               	xorwf	(___fladd@signs),w
  9000  0069  0634               	skipnz
  9001  006A  1903               	goto	u206_21
  9002  006B  286D               	goto	u206_20
  9003  006C  286E               u206_21:
  9004  006D                     	goto	i1l2274
  9005  006D  2870               u206_20:
  9006  006E                     	line	47
  9007                           	
  9008                           i1l2272:	
  9009  006E                     	bsf	(___fladd@signs)+(6/8),(6)&7
  9010  006E  1734               	goto	i1l2274
  9011  006F  2870               	line	48
  9012                           	
  9013                           i1l788:	
  9014  0070                     	line	49
  9015                           	
  9016                           i1l2274:	
  9017  0070                     	movf	0+(___fladd@a)+03h,w
  9018  0070  0827               	movwf	(??___fladd+0)+0
  9019  0071  00A8               	addwf	(??___fladd+0)+0,w
  9020  0072  0728               	movwf	(??___fladd+1)+0
  9021  0073  00A9               	movf	(??___fladd+1)+0,w
  9022  0074  0829               	movwf	(___fladd@aexp)
  9023  0075  00B5               	line	50
  9024                           	
  9025                           i1l2276:	
  9026  0076                     	btfss	0+(___fladd@a)+02h,(7)&7
  9027  0076  1FA6               	goto	u207_21
  9028  0077  2879               	goto	u207_20
  9029  0078  287A               u207_21:
  9030  0079                     	goto	i1l2280
  9031  0079  287C               u207_20:
  9032  007A                     	line	51
  9033                           	
  9034                           i1l2278:	
  9035  007A                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  9036  007A  1435               	goto	i1l2280
  9037  007B  287C               	line	52
  9038                           	
  9039                           i1l789:	
  9040  007C                     	line	55
  9041                           	
  9042                           i1l2280:	
  9043  007C                     	movf	((___fladd@aexp)),w
  9044  007C  0835               	btfsc	status,2
  9045  007D  1903               	goto	u208_21
  9046  007E  2880               	goto	u208_20
  9047  007F  2881               u208_21:
  9048  0080                     	goto	i1l2290
  9049  0080  2892               u208_20:
  9050  0081                     	line	57
  9051                           	
  9052                           i1l2282:	
  9053  0081                     		incf	((___fladd@aexp)),w
  9054  0081  0A35               	btfss	status,2
  9055  0082  1D03               	goto	u209_21
  9056  0083  2885               	goto	u209_20
  9057  0084  2886               u209_21:
  9058  0085                     	goto	i1l2286
  9059  0085  288F               u209_20:
  9060  0086                     	line	59
  9061                           	
  9062                           i1l2284:	
  9063  0086                     	movlw	0x0
  9064  0086  3000               	movwf	(___fladd@a+3)
  9065  0087  00A7               	movlw	0x0
  9066  0088  3000               	movwf	(___fladd@a+2)
  9067  0089  00A6               	movlw	0x0
  9068  008A  3000               	movwf	(___fladd@a+1)
  9069  008B  00A5               	movlw	0x0
  9070  008C  3000               	movwf	(___fladd@a)
  9071  008D  00A4               
  9072                           	goto	i1l2286
  9073  008E  288F               	line	60
  9074                           	
  9075                           i1l791:	
  9076  008F                     	line	62
  9077                           	
  9078                           i1l2286:	
  9079  008F                     	bsf	(___fladd@a)+(23/8),(23)&7
  9080  008F  17A6               	line	64
  9081                           	
  9082                           i1l2288:	
  9083  0090                     	clrf	0+(___fladd@a)+03h
  9084  0090  01A7               	line	65
  9085                           	goto	i1l792
  9086  0091  289A               	line	66
  9087                           	
  9088                           i1l790:	
  9089  0092                     	line	68
  9090                           	
  9091                           i1l2290:	
  9092  0092                     	movlw	0x0
  9093  0092  3000               	movwf	(___fladd@a+3)
  9094  0093  00A7               	movlw	0x0
  9095  0094  3000               	movwf	(___fladd@a+2)
  9096  0095  00A6               	movlw	0x0
  9097  0096  3000               	movwf	(___fladd@a+1)
  9098  0097  00A5               	movlw	0x0
  9099  0098  3000               	movwf	(___fladd@a)
  9100  0099  00A4               
  9101                           	line	69
  9102                           	
  9103                           i1l792:	
  9104  009A                     	line	75
  9105                           	movf	(___fladd@bexp),w
  9106  009A  0836               	subwf	(___fladd@aexp),w
  9107  009B  0235               	skipnc
  9108  009C  1803               	goto	u210_21
  9109  009D  289F               	goto	u210_20
  9110  009E  28A0               u210_21:
  9111  009F                     	goto	i1l2326
  9112  009F  28E6               u210_20:
  9113  00A0                     	line	77
  9114                           	
  9115                           i1l2292:	
  9116  00A0                     	btfss	(___fladd@signs),(6)&7
  9117  00A0  1F34               	goto	u211_21
  9118  00A1  28A3               	goto	u211_20
  9119  00A2  28A4               u211_21:
  9120  00A3                     	goto	i1l2296
  9121  00A3  28A9               u211_20:
  9122  00A4                     	line	78
  9123                           	
  9124                           i1l2294:	
  9125  00A4                     	movlw	low(080h)
  9126  00A4  3080               	movwf	(??___fladd+0)+0
  9127  00A5  00A8               	movf	(??___fladd+0)+0,w
  9128  00A6  0828               	xorwf	(___fladd@signs),f
  9129  00A7  06B4               	goto	i1l2296
  9130  00A8  28A9               	line	79
  9131                           	
  9132                           i1l794:	
  9133  00A9                     	line	81
  9134                           	
  9135                           i1l2296:	
  9136  00A9                     	movf	(___fladd@bexp),w
  9137  00A9  0836               	movwf	(??___fladd+0)+0
  9138  00AA  00A8               	movf	(??___fladd+0)+0,w
  9139  00AB  0828               	movwf	(___fladd@grs)
  9140  00AC  00B7               	line	82
  9141                           	
  9142                           i1l2298:	
  9143  00AD                     	movf	(___fladd@aexp),w
  9144  00AD  0835               	movwf	(??___fladd+0)+0
  9145  00AE  00A8               	movf	(??___fladd+0)+0,w
  9146  00AF  0828               	movwf	(___fladd@bexp)
  9147  00B0  00B6               	line	83
  9148                           	
  9149                           i1l2300:	
  9150  00B1                     	movf	(___fladd@grs),w
  9151  00B1  0837               	movwf	(??___fladd+0)+0
  9152  00B2  00A8               	movf	(??___fladd+0)+0,w
  9153  00B3  0828               	movwf	(___fladd@aexp)
  9154  00B4  00B5               	line	84
  9155                           	
  9156                           i1l2302:	
  9157  00B5                     	movf	(___fladd@b),w
  9158  00B5  0820               	movwf	(??___fladd+0)+0
  9159  00B6  00A8               	movf	(??___fladd+0)+0,w
  9160  00B7  0828               	movwf	(___fladd@grs)
  9161  00B8  00B7               	line	85
  9162                           	
  9163                           i1l2304:	
  9164  00B9                     	movf	(___fladd@a),w
  9165  00B9  0824               	movwf	(??___fladd+0)+0
  9166  00BA  00A8               	movf	(??___fladd+0)+0,w
  9167  00BB  0828               	movwf	(___fladd@b)
  9168  00BC  00A0               	line	86
  9169                           	
  9170                           i1l2306:	
  9171  00BD                     	movf	(___fladd@grs),w
  9172  00BD  0837               	movwf	(??___fladd+0)+0
  9173  00BE  00A8               	movf	(??___fladd+0)+0,w
  9174  00BF  0828               	movwf	(___fladd@a)
  9175  00C0  00A4               	line	87
  9176                           	
  9177                           i1l2308:	
  9178  00C1                     	movf	0+(___fladd@b)+01h,w
  9179  00C1  0821               	movwf	(??___fladd+0)+0
  9180  00C2  00A8               	movf	(??___fladd+0)+0,w
  9181  00C3  0828               	movwf	(___fladd@grs)
  9182  00C4  00B7               	line	88
  9183                           	
  9184                           i1l2310:	
  9185  00C5                     	movf	0+(___fladd@a)+01h,w
  9186  00C5  0825               	movwf	(??___fladd+0)+0
  9187  00C6  00A8               	movf	(??___fladd+0)+0,w
  9188  00C7  0828               	movwf	0+(___fladd@b)+01h
  9189  00C8  00A1               	line	89
  9190                           	
  9191                           i1l2312:	
  9192  00C9                     	movf	(___fladd@grs),w
  9193  00C9  0837               	movwf	(??___fladd+0)+0
  9194  00CA  00A8               	movf	(??___fladd+0)+0,w
  9195  00CB  0828               	movwf	0+(___fladd@a)+01h
  9196  00CC  00A5               	line	90
  9197                           	
  9198                           i1l2314:	
  9199  00CD                     	movf	0+(___fladd@b)+02h,w
  9200  00CD  0822               	movwf	(??___fladd+0)+0
  9201  00CE  00A8               	movf	(??___fladd+0)+0,w
  9202  00CF  0828               	movwf	(___fladd@grs)
  9203  00D0  00B7               	line	91
  9204                           	
  9205                           i1l2316:	
  9206  00D1                     	movf	0+(___fladd@a)+02h,w
  9207  00D1  0826               	movwf	(??___fladd+0)+0
  9208  00D2  00A8               	movf	(??___fladd+0)+0,w
  9209  00D3  0828               	movwf	0+(___fladd@b)+02h
  9210  00D4  00A2               	line	92
  9211                           	
  9212                           i1l2318:	
  9213  00D5                     	movf	(___fladd@grs),w
  9214  00D5  0837               	movwf	(??___fladd+0)+0
  9215  00D6  00A8               	movf	(??___fladd+0)+0,w
  9216  00D7  0828               	movwf	0+(___fladd@a)+02h
  9217  00D8  00A6               	line	93
  9218                           	
  9219                           i1l2320:	
  9220  00D9                     	movf	0+(___fladd@b)+03h,w
  9221  00D9  0823               	movwf	(??___fladd+0)+0
  9222  00DA  00A8               	movf	(??___fladd+0)+0,w
  9223  00DB  0828               	movwf	(___fladd@grs)
  9224  00DC  00B7               	line	94
  9225                           	
  9226                           i1l2322:	
  9227  00DD                     	movf	0+(___fladd@a)+03h,w
  9228  00DD  0827               	movwf	(??___fladd+0)+0
  9229  00DE  00A8               	movf	(??___fladd+0)+0,w
  9230  00DF  0828               	movwf	0+(___fladd@b)+03h
  9231  00E0  00A3               	line	95
  9232                           	
  9233                           i1l2324:	
  9234  00E1                     	movf	(___fladd@grs),w
  9235  00E1  0837               	movwf	(??___fladd+0)+0
  9236  00E2  00A8               	movf	(??___fladd+0)+0,w
  9237  00E3  0828               	movwf	0+(___fladd@a)+03h
  9238  00E4  00A7               	goto	i1l2326
  9239  00E5  28E6               	line	96
  9240                           	
  9241                           i1l793:	
  9242  00E6                     	line	98
  9243                           	
  9244                           i1l2326:	
  9245  00E6                     	clrf	(___fladd@grs)
  9246  00E6  01B7               	line	100
  9247                           	
  9248                           i1l2328:	
  9249  00E7                     	movf	(___fladd@bexp),w
  9250  00E7  0836               	movwf	(??___fladd+0)+0
  9251  00E8  00A8               	clrf	(??___fladd+0)+0+1
  9252  00E9  01A9               	comf	(??___fladd+0)+0,f
  9253  00EA  09A8               	comf	(??___fladd+0)+1,f
  9254  00EB  09A9               	incf	(??___fladd+0)+0,f
  9255  00EC  0AA8               	skipnz
  9256  00ED  1903               	incf	(??___fladd+0)+1,f
  9257  00EE  0AA9               	movf	(___fladd@aexp),w
  9258  00EF  0835               	addwf	0+(??___fladd+0)+0,w
  9259  00F0  0728               	movwf	(??___fladd+2)+0
  9260  00F1  00AA               	movf	1+(??___fladd+0)+0,w
  9261  00F2  0829               	skipnc
  9262  00F3  1803               	incf	1+(??___fladd+0)+0,w
  9263  00F4  0A29               	movwf	((??___fladd+2)+0)+1
  9264  00F5  00AB               	movf	1+(??___fladd+2)+0,w
  9265  00F6  082B               	xorlw	80h
  9266  00F7  3A80               	movwf	btemp+1
  9267  00F8  00FF               	movlw	(0)^80h
  9268  00F9  3080               	subwf	btemp+1,w
  9269  00FA  027F               	skipz
  9270  00FB  1D03               	goto	u212_25
  9271  00FC  28FF               	movlw	01Ah
  9272  00FD  301A               	subwf	0+(??___fladd+2)+0,w
  9273  00FE  022A               u212_25:
  9274  00FF                     
  9275                           	skipc
  9276  00FF  1C03               	goto	u212_21
  9277  0100  2902               	goto	u212_20
  9278  0101  2903               u212_21:
  9279  0102                     	goto	i1l2344
  9280  0102  2944               u212_20:
  9281  0103                     	line	101
  9282                           	
  9283                           i1l2330:	
  9284  0103                     	bcf	status, 5	;RP0=0, select bank0
  9285  0103  1283               	bcf	status, 6	;RP1=0, select bank0
  9286  0104  1303               	movf	(___fladd@b+3),w
  9287  0105  0823               	iorwf	(___fladd@b+2),w
  9288  0106  0422               	iorwf	(___fladd@b+1),w
  9289  0107  0421               	iorwf	(___fladd@b),w
  9290  0108  0420               	skipz
  9291  0109  1D03               	goto	u213_21
  9292  010A  290C               	goto	u213_20
  9293  010B  290E               u213_21:
  9294  010C                     	movlw	1
  9295  010C  3001               	goto	u214_20
  9296  010D  290F               u213_20:
  9297  010E                     	movlw	0
  9298  010E  3000               u214_20:
  9299  010F                     	movwf	(??___fladd+0)+0
  9300  010F  00A8               	movf	(??___fladd+0)+0,w
  9301  0110  0828               	movwf	(___fladd@grs)
  9302  0111  00B7               	line	102
  9303                           	movlw	high highword(0)
  9304  0112  3000               	movwf	(___fladd@b+3)
  9305  0113  00A3               	movlw	low highword(0)
  9306  0114  3000               	movwf	(___fladd@b+2)
  9307  0115  00A2               	movlw	high(0)
  9308  0116  3000               	movwf	(___fladd@b+1)
  9309  0117  00A1               	movlw	low(0)
  9310  0118  3000               	movwf	(___fladd@b)
  9311  0119  00A0               
  9312                           	line	103
  9313                           	movf	(___fladd@aexp),w
  9314  011A  0835               	movwf	(??___fladd+0)+0
  9315  011B  00A8               	movf	(??___fladd+0)+0,w
  9316  011C  0828               	movwf	(___fladd@bexp)
  9317  011D  00B6               	line	104
  9318                           	goto	i1l796
  9319  011E  294D               	line	105
  9320                           	
  9321                           i1l795:	
  9322  011F                     	line	106
  9323                           	goto	i1l2344
  9324  011F  2944               	
  9325                           i1l798:	
  9326  0120                     	line	109
  9327                           	btfss	(___fladd@grs),(0)&7
  9328  0120  1C37               	goto	u215_21
  9329  0121  2923               	goto	u215_20
  9330  0122  2924               u215_21:
  9331  0123                     	goto	i1l2334
  9332  0123  292D               u215_20:
  9333  0124                     	line	110
  9334                           	
  9335                           i1l2332:	
  9336  0124                     	movf	(___fladd@grs),w
  9337  0124  0837               	movwf	(??___fladd+0)+0
  9338  0125  00A8               	clrc
  9339  0126  1003               	rrf	(??___fladd+0)+0,w
  9340  0127  0C28               	iorlw	01h
  9341  0128  3801               	movwf	(??___fladd+1)+0
  9342  0129  00A9               	movf	(??___fladd+1)+0,w
  9343  012A  0829               	movwf	(___fladd@grs)
  9344  012B  00B7               	line	111
  9345                           	goto	i1l2336
  9346  012C  2930               	line	112
  9347                           	
  9348                           i1l799:	
  9349  012D                     	line	113
  9350                           	
  9351                           i1l2334:	
  9352  012D                     	clrc
  9353  012D  1003               	rrf	(___fladd@grs),f
  9354  012E  0CB7               
  9355                           	goto	i1l2336
  9356  012F  2930               	line	114
  9357                           	
  9358                           i1l800:	
  9359  0130                     	line	115
  9360                           	
  9361                           i1l2336:	
  9362  0130                     	btfss	(___fladd@b),(0)&7
  9363  0130  1C20               	goto	u216_21
  9364  0131  2933               	goto	u216_20
  9365  0132  2934               u216_21:
  9366  0133                     	goto	i1l2340
  9367  0133  2936               u216_20:
  9368  0134                     	line	116
  9369                           	
  9370                           i1l2338:	
  9371  0134                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9372  0134  17B7               	goto	i1l2340
  9373  0135  2936               	line	117
  9374                           	
  9375                           i1l801:	
  9376  0136                     	line	118
  9377                           	
  9378                           i1l2340:	
  9379  0136                     	movlw	01h
  9380  0136  3001               	movwf	(??___fladd+0)+0
  9381  0137  00A8               u217_25:
  9382  0138                     	rlf	(___fladd@b+3),w
  9383  0138  0D23               	rrf	(___fladd@b+3),f
  9384  0139  0CA3               	rrf	(___fladd@b+2),f
  9385  013A  0CA2               	rrf	(___fladd@b+1),f
  9386  013B  0CA1               	rrf	(___fladd@b),f
  9387  013C  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  9388  013D  0BA8               	goto	u217_25
  9389  013E  2938               
  9390                           	line	119
  9391                           	
  9392                           i1l2342:	
  9393  013F                     	movlw	low(01h)
  9394  013F  3001               	movwf	(??___fladd+0)+0
  9395  0140  00A8               	movf	(??___fladd+0)+0,w
  9396  0141  0828               	addwf	(___fladd@bexp),f
  9397  0142  07B6               	goto	i1l2344
  9398  0143  2944               	line	120
  9399                           	
  9400                           i1l797:	
  9401  0144                     	line	106
  9402                           	
  9403                           i1l2344:	
  9404  0144                     	bcf	status, 5	;RP0=0, select bank0
  9405  0144  1283               	bcf	status, 6	;RP1=0, select bank0
  9406  0145  1303               	movf	(___fladd@aexp),w
  9407  0146  0835               	subwf	(___fladd@bexp),w
  9408  0147  0236               	skipc
  9409  0148  1C03               	goto	u218_21
  9410  0149  294B               	goto	u218_20
  9411  014A  294C               u218_21:
  9412  014B                     	goto	i1l798
  9413  014B  2920               u218_20:
  9414  014C                     	goto	i1l796
  9415  014C  294D               	
  9416                           i1l802:	
  9417  014D                     	line	121
  9418                           	
  9419                           i1l796:	
  9420  014D                     	line	124
  9421                           	btfsc	(___fladd@signs),(6)&7
  9422  014D  1B34               	goto	u219_21
  9423  014E  2950               	goto	u219_20
  9424  014F  2951               u219_21:
  9425  0150                     	goto	i1l2370
  9426  0150  29A0               u219_20:
  9427  0151                     	line	127
  9428                           	
  9429                           i1l2346:	
  9430  0151                     	movf	((___fladd@bexp)),w
  9431  0151  0836               	btfss	status,2
  9432  0152  1D03               	goto	u220_21
  9433  0153  2955               	goto	u220_20
  9434  0154  2956               u220_21:
  9435  0155                     	goto	i1l2352
  9436  0155  2960               u220_20:
  9437  0156                     	line	128
  9438                           	
  9439                           i1l2348:	
  9440  0156                     	movlw	0x0
  9441  0156  3000               	movwf	(?___fladd+3)
  9442  0157  00A3               	movlw	0x0
  9443  0158  3000               	movwf	(?___fladd+2)
  9444  0159  00A2               	movlw	0x0
  9445  015A  3000               	movwf	(?___fladd+1)
  9446  015B  00A1               	movlw	0x0
  9447  015C  3000               	movwf	(?___fladd)
  9448  015D  00A0               
  9449                           	goto	i1l805
  9450  015E  2AEC               	
  9451                           i1l2350:	
  9452  015F                     	goto	i1l805
  9453  015F  2AEC               	line	129
  9454                           	
  9455                           i1l804:	
  9456  0160                     	line	132
  9457                           	
  9458                           i1l2352:	
  9459  0160                     	movf	(___fladd@a),w
  9460  0160  0824               	addwf	(___fladd@b),f
  9461  0161  07A0               	movf	(___fladd@a+1),w
  9462  0162  0825               	clrz
  9463  0163  1103               	skipnc
  9464  0164  1803               	addlw	1
  9465  0165  3E01               	skipnz
  9466  0166  1903               	goto	u221_21
  9467  0167  2969               	addwf	(___fladd@b+1),f
  9468  0168  07A1               u221_21:
  9469  0169                     	movf	(___fladd@a+2),w
  9470  0169  0826               	clrz
  9471  016A  1103               	skipnc
  9472  016B  1803               	addlw	1
  9473  016C  3E01               	skipnz
  9474  016D  1903               	goto	u221_22
  9475  016E  2970               	addwf	(___fladd@b+2),f
  9476  016F  07A2               u221_22:
  9477  0170                     	movf	(___fladd@a+3),w
  9478  0170  0827               	clrz
  9479  0171  1103               	skipnc
  9480  0172  1803               	addlw	1
  9481  0173  3E01               	skipnz
  9482  0174  1903               	goto	u221_23
  9483  0175  2977               	addwf	(___fladd@b+3),f
  9484  0176  07A3               u221_23:
  9485  0177                     
  9486                           	line	134
  9487                           	
  9488                           i1l2354:	
  9489  0177                     	btfss	(___fladd@b+3),(24)&7
  9490  0177  1C23               	goto	u222_21
  9491  0178  297A               	goto	u222_20
  9492  0179  297B               u222_21:
  9493  017A                     	goto	i1l2404
  9494  017A  2A69               u222_20:
  9495  017B                     	line	135
  9496                           	
  9497                           i1l2356:	
  9498  017B                     	btfss	(___fladd@grs),(0)&7
  9499  017B  1C37               	goto	u223_21
  9500  017C  297E               	goto	u223_20
  9501  017D  297F               u223_21:
  9502  017E                     	goto	i1l2360
  9503  017E  2988               u223_20:
  9504  017F                     	line	136
  9505                           	
  9506                           i1l2358:	
  9507  017F                     	movf	(___fladd@grs),w
  9508  017F  0837               	movwf	(??___fladd+0)+0
  9509  0180  00A8               	clrc
  9510  0181  1003               	rrf	(??___fladd+0)+0,w
  9511  0182  0C28               	iorlw	01h
  9512  0183  3801               	movwf	(??___fladd+1)+0
  9513  0184  00A9               	movf	(??___fladd+1)+0,w
  9514  0185  0829               	movwf	(___fladd@grs)
  9515  0186  00B7               	line	137
  9516                           	goto	i1l2362
  9517  0187  298B               	line	138
  9518                           	
  9519                           i1l807:	
  9520  0188                     	line	139
  9521                           	
  9522                           i1l2360:	
  9523  0188                     	clrc
  9524  0188  1003               	rrf	(___fladd@grs),f
  9525  0189  0CB7               
  9526                           	goto	i1l2362
  9527  018A  298B               	line	140
  9528                           	
  9529                           i1l808:	
  9530  018B                     	line	141
  9531                           	
  9532                           i1l2362:	
  9533  018B                     	btfss	(___fladd@b),(0)&7
  9534  018B  1C20               	goto	u224_21
  9535  018C  298E               	goto	u224_20
  9536  018D  298F               u224_21:
  9537  018E                     	goto	i1l2366
  9538  018E  2991               u224_20:
  9539  018F                     	line	142
  9540                           	
  9541                           i1l2364:	
  9542  018F                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9543  018F  17B7               	goto	i1l2366
  9544  0190  2991               	line	143
  9545                           	
  9546                           i1l809:	
  9547  0191                     	line	144
  9548                           	
  9549                           i1l2366:	
  9550  0191                     	movlw	01h
  9551  0191  3001               	movwf	(??___fladd+0)+0
  9552  0192  00A8               u225_25:
  9553  0193                     	rlf	(___fladd@b+3),w
  9554  0193  0D23               	rrf	(___fladd@b+3),f
  9555  0194  0CA3               	rrf	(___fladd@b+2),f
  9556  0195  0CA2               	rrf	(___fladd@b+1),f
  9557  0196  0CA1               	rrf	(___fladd@b),f
  9558  0197  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  9559  0198  0BA8               	goto	u225_25
  9560  0199  2993               
  9561                           	line	145
  9562                           	
  9563                           i1l2368:	
  9564  019A                     	movlw	low(01h)
  9565  019A  3001               	movwf	(??___fladd+0)+0
  9566  019B  00A8               	movf	(??___fladd+0)+0,w
  9567  019C  0828               	addwf	(___fladd@bexp),f
  9568  019D  07B6               	goto	i1l2404
  9569  019E  2A69               	line	146
  9570                           	
  9571                           i1l806:	
  9572  019F                     	line	148
  9573                           	goto	i1l2404
  9574  019F  2A69               	line	149
  9575                           	
  9576                           i1l803:	
  9577  01A0                     	line	153
  9578                           	
  9579                           i1l2370:	
  9580  01A0                     	movf	(___fladd@b+3),w
  9581  01A0  0823               	xorlw	80h
  9582  01A1  3A80               	movwf	btemp+1
  9583  01A2  00FF               	movf	(___fladd@a+3),w
  9584  01A3  0827               	xorlw	80h
  9585  01A4  3A80               	subwf	btemp+1,w
  9586  01A5  027F               	
  9587                           	skipz
  9588  01A6  1D03               	goto	u226_23
  9589  01A7  29B2               	movf	(___fladd@a+2),w
  9590  01A8  0826               	subwf	(___fladd@b+2),w
  9591  01A9  0222               	skipz
  9592  01AA  1D03               	goto	u226_23
  9593  01AB  29B2               	movf	(___fladd@a+1),w
  9594  01AC  0825               	subwf	(___fladd@b+1),w
  9595  01AD  0221               	skipz
  9596  01AE  1D03               	goto	u226_23
  9597  01AF  29B2               	movf	(___fladd@a),w
  9598  01B0  0824               	subwf	(___fladd@b),w
  9599  01B1  0220               u226_23:
  9600  01B2                     	skipnc
  9601  01B2  1803               	goto	u226_21
  9602  01B3  29B5               	goto	u226_20
  9603  01B4  29B6               u226_21:
  9604  01B5                     	goto	i1l2380
  9605  01B5  2A1C               u226_20:
  9606  01B6                     	line	154
  9607                           	
  9608                           i1l2372:	
  9609  01B6                     	movlw	0FFh
  9610  01B6  30FF               	movwf	((??___fladd+0)+0)
  9611  01B7  00A8               	movlw	0FFh
  9612  01B8  30FF               	movwf	((??___fladd+0)+0+1)
  9613  01B9  00A9               	movlw	0FFh
  9614  01BA  30FF               	movwf	((??___fladd+0)+0+2)
  9615  01BB  00AA               	movlw	0FFh
  9616  01BC  30FF               	movwf	((??___fladd+0)+0+3)
  9617  01BD  00AB               	movf	(___fladd@a),w
  9618  01BE  0824               	movwf	(??___fladd+4)+0
  9619  01BF  00AC               	movf	(___fladd@a+1),w
  9620  01C0  0825               	movwf	((??___fladd+4)+0+1)
  9621  01C1  00AD               	movf	(___fladd@a+2),w
  9622  01C2  0826               	movwf	((??___fladd+4)+0+2)
  9623  01C3  00AE               	movf	(___fladd@a+3),w
  9624  01C4  0827               	movwf	((??___fladd+4)+0+3)
  9625  01C5  00AF               	comf	(___fladd@b),w
  9626  01C6  0920               	movwf	(??___fladd+8)+0
  9627  01C7  00B0               	comf	(___fladd@b+1),w
  9628  01C8  0921               	movwf	((??___fladd+8)+0+1)
  9629  01C9  00B1               	comf	(___fladd@b+2),w
  9630  01CA  0922               	movwf	((??___fladd+8)+0+2)
  9631  01CB  00B2               	comf	(___fladd@b+3),w
  9632  01CC  0923               	movwf	((??___fladd+8)+0+3)
  9633  01CD  00B3               	incf	(??___fladd+8)+0,f
  9634  01CE  0AB0               	skipnz
  9635  01CF  1903               	incf	((??___fladd+8)+0+1),f
  9636  01D0  0AB1               	skipnz
  9637  01D1  1903               	incf	((??___fladd+8)+0+2),f
  9638  01D2  0AB2               	skipnz
  9639  01D3  1903               	incf	((??___fladd+8)+0+3),f
  9640  01D4  0AB3               	movf	0+(??___fladd+8)+0,w
  9641  01D5  0830               	addwf	(??___fladd+4)+0,f
  9642  01D6  07AC               	movf	1+(??___fladd+8)+0,w
  9643  01D7  0831               	skipnc
  9644  01D8  1803               	incfsz	1+(??___fladd+8)+0,w
  9645  01D9  0F31               	goto	u227_20
  9646  01DA  29DC               	goto	u227_21
  9647  01DB  29DD               u227_20:
  9648  01DC                     	addwf	(??___fladd+4)+1,f
  9649  01DC  07AD               u227_21:
  9650  01DD                     	movf	2+(??___fladd+8)+0,w
  9651  01DD  0832               	skipnc
  9652  01DE  1803               	incfsz	2+(??___fladd+8)+0,w
  9653  01DF  0F32               	goto	u227_22
  9654  01E0  29E2               	goto	u227_23
  9655  01E1  29E3               u227_22:
  9656  01E2                     	addwf	(??___fladd+4)+2,f
  9657  01E2  07AE               u227_23:
  9658  01E3                     	movf	3+(??___fladd+8)+0,w
  9659  01E3  0833               	skipnc
  9660  01E4  1803               	incf	3+(??___fladd+8)+0,w
  9661  01E5  0A33               	addwf	(??___fladd+4)+3,f
  9662  01E6  07AF               	movf	0+(??___fladd+4)+0,w
  9663  01E7  082C               	addwf	(??___fladd+0)+0,f
  9664  01E8  07A8               	movf	1+(??___fladd+4)+0,w
  9665  01E9  082D               	skipnc
  9666  01EA  1803               	incfsz	1+(??___fladd+4)+0,w
  9667  01EB  0F2D               	goto	u228_20
  9668  01EC  29EE               	goto	u228_21
  9669  01ED  29EF               u228_20:
  9670  01EE                     	addwf	(??___fladd+0)+1,f
  9671  01EE  07A9               u228_21:
  9672  01EF                     	movf	2+(??___fladd+4)+0,w
  9673  01EF  082E               	skipnc
  9674  01F0  1803               	incfsz	2+(??___fladd+4)+0,w
  9675  01F1  0F2E               	goto	u228_22
  9676  01F2  29F4               	goto	u228_23
  9677  01F3  29F5               u228_22:
  9678  01F4                     	addwf	(??___fladd+0)+2,f
  9679  01F4  07AA               u228_23:
  9680  01F5                     	movf	3+(??___fladd+4)+0,w
  9681  01F5  082F               	skipnc
  9682  01F6  1803               	incf	3+(??___fladd+4)+0,w
  9683  01F7  0A2F               	addwf	(??___fladd+0)+3,f
  9684  01F8  07AB               	movf	3+(??___fladd+0)+0,w
  9685  01F9  082B               	movwf	(___fladd@b+3)
  9686  01FA  00A3               	movf	2+(??___fladd+0)+0,w
  9687  01FB  082A               	movwf	(___fladd@b+2)
  9688  01FC  00A2               	movf	1+(??___fladd+0)+0,w
  9689  01FD  0829               	movwf	(___fladd@b+1)
  9690  01FE  00A1               	movf	0+(??___fladd+0)+0,w
  9691  01FF  0828               	movwf	(___fladd@b)
  9692  0200  00A0               
  9693                           	line	155
  9694                           	movlw	low(080h)
  9695  0201  3080               	movwf	(??___fladd+0)+0
  9696  0202  00A8               	movf	(??___fladd+0)+0,w
  9697  0203  0828               	xorwf	(___fladd@signs),f
  9698  0204  06B4               	line	156
  9699                           	
  9700                           i1l2374:	
  9701  0205                     	comf	(___fladd@grs),f
  9702  0205  09B7               	incf	(___fladd@grs),f
  9703  0206  0AB7               	line	157
  9704                           	
  9705                           i1l2376:	
  9706  0207                     	movf	((___fladd@grs)),w
  9707  0207  0837               	btfss	status,2
  9708  0208  1D03               	goto	u229_21
  9709  0209  2A0B               	goto	u229_20
  9710  020A  2A0C               u229_21:
  9711  020B                     	goto	i1l813
  9712  020B  2A2A               u229_20:
  9713  020C                     	line	158
  9714                           	
  9715                           i1l2378:	
  9716  020C                     	movlw	01h
  9717  020C  3001               	addwf	(___fladd@b),f
  9718  020D  07A0               	movlw	0
  9719  020E  3000               	skipnc
  9720  020F  1803               movlw 1
  9721  0210  3001               	addwf	(___fladd@b+1),f
  9722  0211  07A1               	movlw	0
  9723  0212  3000               	skipnc
  9724  0213  1803               movlw 1
  9725  0214  3001               	addwf	(___fladd@b+2),f
  9726  0215  07A2               	movlw	0
  9727  0216  3000               	skipnc
  9728  0217  1803               movlw 1
  9729  0218  3001               	addwf	(___fladd@b+3),f
  9730  0219  07A3               	goto	i1l813
  9731  021A  2A2A               	line	159
  9732                           	
  9733                           i1l812:	
  9734  021B                     	line	160
  9735                           	goto	i1l813
  9736  021B  2A2A               	line	161
  9737                           	
  9738                           i1l811:	
  9739  021C                     	line	162
  9740                           	
  9741                           i1l2380:	
  9742  021C                     	movf	(___fladd@a),w
  9743  021C  0824               	subwf	(___fladd@b),f
  9744  021D  02A0               	movf	(___fladd@a+1),w
  9745  021E  0825               	skipc
  9746  021F  1C03               	incfsz	(___fladd@a+1),w
  9747  0220  0F25               	subwf	(___fladd@b+1),f
  9748  0221  02A1               	movf	(___fladd@a+2),w
  9749  0222  0826               	skipc
  9750  0223  1C03               	incfsz	(___fladd@a+2),w
  9751  0224  0F26               	subwf	(___fladd@b+2),f
  9752  0225  02A2               	movf	(___fladd@a+3),w
  9753  0226  0827               	skipc
  9754  0227  1C03               	incfsz	(___fladd@a+3),w
  9755  0228  0F27               	subwf	(___fladd@b+3),f
  9756  0229  02A3               	line	163
  9757                           	
  9758                           i1l813:	
  9759  022A                     	line	166
  9760                           	movf	(___fladd@b+3),w
  9761  022A  0823               	iorwf	(___fladd@b+2),w
  9762  022B  0422               	iorwf	(___fladd@b+1),w
  9763  022C  0421               	iorwf	(___fladd@b),w
  9764  022D  0420               	skipz
  9765  022E  1D03               	goto	u230_21
  9766  022F  2A31               	goto	u230_20
  9767  0230  2A32               u230_21:
  9768  0231                     	goto	i1l2402
  9769  0231  2A63               u230_20:
  9770  0232                     	
  9771                           i1l2382:	
  9772  0232                     	movf	((___fladd@grs)),w
  9773  0232  0837               	btfss	status,2
  9774  0233  1D03               	goto	u231_21
  9775  0234  2A36               	goto	u231_20
  9776  0235  2A37               u231_21:
  9777  0236                     	goto	i1l2402
  9778  0236  2A63               u231_20:
  9779  0237                     	line	167
  9780                           	
  9781                           i1l2384:	
  9782  0237                     	movlw	0x0
  9783  0237  3000               	movwf	(?___fladd+3)
  9784  0238  00A3               	movlw	0x0
  9785  0239  3000               	movwf	(?___fladd+2)
  9786  023A  00A2               	movlw	0x0
  9787  023B  3000               	movwf	(?___fladd+1)
  9788  023C  00A1               	movlw	0x0
  9789  023D  3000               	movwf	(?___fladd)
  9790  023E  00A0               
  9791                           	goto	i1l805
  9792  023F  2AEC               	
  9793                           i1l2386:	
  9794  0240                     	goto	i1l805
  9795  0240  2AEC               	line	168
  9796                           	
  9797                           i1l814:	
  9798  0241                     	line	171
  9799                           	goto	i1l2402
  9800  0241  2A63               	
  9801                           i1l816:	
  9802  0242                     	line	172
  9803                           	
  9804                           i1l2388:	
  9805  0242                     	movlw	01h
  9806  0242  3001               	movwf	(??___fladd+0)+0
  9807  0243  00A8               u232_25:
  9808  0244                     	clrc
  9809  0244  1003               	rlf	(___fladd@b),f
  9810  0245  0DA0               	rlf	(___fladd@b+1),f
  9811  0246  0DA1               	rlf	(___fladd@b+2),f
  9812  0247  0DA2               	rlf	(___fladd@b+3),f
  9813  0248  0DA3               	decfsz	(??___fladd+0)+0
  9814  0249  0BA8               	goto	u232_25
  9815  024A  2A44               	line	173
  9816                           	
  9817                           i1l2390:	
  9818  024B                     	btfss	(___fladd@grs),(7)&7
  9819  024B  1FB7               	goto	u233_21
  9820  024C  2A4E               	goto	u233_20
  9821  024D  2A4F               u233_21:
  9822  024E                     	goto	i1l817
  9823  024E  2A50               u233_20:
  9824  024F                     	line	174
  9825                           	
  9826                           i1l2392:	
  9827  024F                     	bsf	(___fladd@b)+(0/8),(0)&7
  9828  024F  1420               	line	175
  9829                           	
  9830                           i1l817:	
  9831  0250                     	line	176
  9832                           	btfss	(___fladd@grs),(0)&7
  9833  0250  1C37               	goto	u234_21
  9834  0251  2A53               	goto	u234_20
  9835  0252  2A54               u234_21:
  9836  0253                     	goto	i1l2396
  9837  0253  2A57               u234_20:
  9838  0254                     	line	177
  9839                           	
  9840                           i1l2394:	
  9841  0254                     	setc
  9842  0254  1403               	rlf	(___fladd@grs),f
  9843  0255  0DB7               	line	178
  9844                           	goto	i1l2398
  9845  0256  2A5A               	line	179
  9846                           	
  9847                           i1l818:	
  9848  0257                     	line	180
  9849                           	
  9850                           i1l2396:	
  9851  0257                     	clrc
  9852  0257  1003               	rlf	(___fladd@grs),f
  9853  0258  0DB7               
  9854                           	goto	i1l2398
  9855  0259  2A5A               	line	181
  9856                           	
  9857                           i1l819:	
  9858  025A                     	line	182
  9859                           	
  9860                           i1l2398:	
  9861  025A                     	movf	((___fladd@bexp)),w
  9862  025A  0836               	btfsc	status,2
  9863  025B  1903               	goto	u235_21
  9864  025C  2A5E               	goto	u235_20
  9865  025D  2A5F               u235_21:
  9866  025E                     	goto	i1l2402
  9867  025E  2A63               u235_20:
  9868  025F                     	line	183
  9869                           	
  9870                           i1l2400:	
  9871  025F                     	movlw	01h
  9872  025F  3001               	subwf	(___fladd@bexp),f
  9873  0260  02B6               	goto	i1l2402
  9874  0261  2A63               	line	184
  9875                           	
  9876                           i1l820:	
  9877  0262                     	goto	i1l2402
  9878  0262  2A63               	line	185
  9879                           	
  9880                           i1l815:	
  9881  0263                     	line	171
  9882                           	
  9883                           i1l2402:	
  9884  0263                     	btfss	(___fladd@b+2),(23)&7
  9885  0263  1FA2               	goto	u236_21
  9886  0264  2A66               	goto	u236_20
  9887  0265  2A67               u236_21:
  9888  0266                     	goto	i1l2388
  9889  0266  2A42               u236_20:
  9890  0267                     	goto	i1l2404
  9891  0267  2A69               	
  9892                           i1l821:	
  9893  0268                     	goto	i1l2404
  9894  0268  2A69               	line	186
  9895                           	
  9896                           i1l810:	
  9897  0269                     	line	192
  9898                           	
  9899                           i1l2404:	
  9900  0269                     	clrf	(___fladd@aexp)
  9901  0269  01B5               	line	193
  9902                           	
  9903                           i1l2406:	
  9904  026A                     	btfss	(___fladd@grs),(7)&7
  9905  026A  1FB7               	goto	u237_21
  9906  026B  2A6D               	goto	u237_20
  9907  026C  2A6E               u237_21:
  9908  026D                     	goto	i1l2414
  9909  026D  2A80               u237_20:
  9910  026E                     	line	194
  9911                           	
  9912                           i1l2408:	
  9913  026E                     	movf	(___fladd@grs),w
  9914  026E  0837               	andlw	07Fh
  9915  026F  397F               	btfsc	status,2
  9916  0270  1903               	goto	u238_21
  9917  0271  2A73               	goto	u238_20
  9918  0272  2A74               u238_21:
  9919  0273                     	goto	i1l823
  9920  0273  2A77               u238_20:
  9921  0274                     	line	195
  9922                           	
  9923                           i1l2410:	
  9924  0274                     	clrf	(___fladd@aexp)
  9925  0274  01B5               	incf	(___fladd@aexp),f
  9926  0275  0AB5               	line	196
  9927                           	goto	i1l2414
  9928  0276  2A80               	line	197
  9929                           	
  9930                           i1l823:	
  9931  0277                     	line	198
  9932                           	btfss	(___fladd@b),(0)&7
  9933  0277  1C20               	goto	u239_21
  9934  0278  2A7A               	goto	u239_20
  9935  0279  2A7B               u239_21:
  9936  027A                     	goto	i1l2414
  9937  027A  2A80               u239_20:
  9938  027B                     	line	199
  9939                           	
  9940                           i1l2412:	
  9941  027B                     	clrf	(___fladd@aexp)
  9942  027B  01B5               	incf	(___fladd@aexp),f
  9943  027C  0AB5               	goto	i1l2414
  9944  027D  2A80               	line	200
  9945                           	
  9946                           i1l825:	
  9947  027E                     	goto	i1l2414
  9948  027E  2A80               	line	201
  9949                           	
  9950                           i1l824:	
  9951  027F                     	goto	i1l2414
  9952  027F  2A80               	line	202
  9953                           	
  9954                           i1l822:	
  9955  0280                     	line	203
  9956                           	
  9957                           i1l2414:	
  9958  0280                     	movf	((___fladd@aexp)),w
  9959  0280  0835               	btfsc	status,2
  9960  0281  1903               	goto	u240_21
  9961  0282  2A84               	goto	u240_20
  9962  0283  2A85               u240_21:
  9963  0284                     	goto	i1l826
  9964  0284  2ABB               u240_20:
  9965  0285                     	line	204
  9966                           	
  9967                           i1l2416:	
  9968  0285                     	movlw	01h
  9969  0285  3001               	addwf	(___fladd@b),f
  9970  0286  07A0               	movlw	0
  9971  0287  3000               	skipnc
  9972  0288  1803               movlw 1
  9973  0289  3001               	addwf	(___fladd@b+1),f
  9974  028A  07A1               	movlw	0
  9975  028B  3000               	skipnc
  9976  028C  1803               movlw 1
  9977  028D  3001               	addwf	(___fladd@b+2),f
  9978  028E  07A2               	movlw	0
  9979  028F  3000               	skipnc
  9980  0290  1803               movlw 1
  9981  0291  3001               	addwf	(___fladd@b+3),f
  9982  0292  07A3               	line	205
  9983                           	
  9984                           i1l2418:	
  9985  0293                     	btfss	(___fladd@b+3),(24)&7
  9986  0293  1C23               	goto	u241_21
  9987  0294  2A96               	goto	u241_20
  9988  0295  2A97               u241_21:
  9989  0296                     	goto	i1l826
  9990  0296  2ABB               u241_20:
  9991  0297                     	line	206
  9992                           	
  9993                           i1l2420:	
  9994  0297                     	movf	(___fladd@b),w
  9995  0297  0820               	movwf	(??___fladd+0)+0
  9996  0298  00A8               	movf	(___fladd@b+1),w
  9997  0299  0821               	movwf	((??___fladd+0)+0+1)
  9998  029A  00A9               	movf	(___fladd@b+2),w
  9999  029B  0822               	movwf	((??___fladd+0)+0+2)
 10000  029C  00AA               	movf	(___fladd@b+3),w
 10001  029D  0823               	movwf	((??___fladd+0)+0+3)
 10002  029E  00AB               	movlw	01h
 10003  029F  3001               	movwf	(??___fladd+4)+0
 10004  02A0  00AC               u242_25:
 10005  02A1                     	rlf	(??___fladd+0)+3,w
 10006  02A1  0D2B               	rrf	(??___fladd+0)+3,f
 10007  02A2  0CAB               	rrf	(??___fladd+0)+2,f
 10008  02A3  0CAA               	rrf	(??___fladd+0)+1,f
 10009  02A4  0CA9               	rrf	(??___fladd+0)+0,f
 10010  02A5  0CA8               u242_20:
 10011  02A6                     	decfsz	(??___fladd+4)+0,f
 10012  02A6  0BAC               	goto	u242_25
 10013  02A7  2AA1               	movf	3+(??___fladd+0)+0,w
 10014  02A8  082B               	movwf	(___fladd@b+3)
 10015  02A9  00A3               	movf	2+(??___fladd+0)+0,w
 10016  02AA  082A               	movwf	(___fladd@b+2)
 10017  02AB  00A2               	movf	1+(??___fladd+0)+0,w
 10018  02AC  0829               	movwf	(___fladd@b+1)
 10019  02AD  00A1               	movf	0+(??___fladd+0)+0,w
 10020  02AE  0828               	movwf	(___fladd@b)
 10021  02AF  00A0               
 10022                           	line	207
 10023                           		incf	((___fladd@bexp)),w
 10024  02B0  0A36               	btfsc	status,2
 10025  02B1  1903               	goto	u243_21
 10026  02B2  2AB4               	goto	u243_20
 10027  02B3  2AB5               u243_21:
 10028  02B4                     	goto	i1l826
 10029  02B4  2ABB               u243_20:
 10030  02B5                     	line	208
 10031                           	
 10032                           i1l2422:	
 10033  02B5                     	movlw	low(01h)
 10034  02B5  3001               	movwf	(??___fladd+0)+0
 10035  02B6  00A8               	movf	(??___fladd+0)+0,w
 10036  02B7  0828               	addwf	(___fladd@bexp),f
 10037  02B8  07B6               	goto	i1l826
 10038  02B9  2ABB               	line	209
 10039                           	
 10040                           i1l828:	
 10041  02BA                     	goto	i1l826
 10042  02BA  2ABB               	line	210
 10043                           	
 10044                           i1l827:	
 10045  02BB                     	line	211
 10046                           	
 10047                           i1l826:	
 10048  02BB                     	line	215
 10049                           		incf	((___fladd@bexp)),w
 10050  02BB  0A36               	btfsc	status,2
 10051  02BC  1903               	goto	u244_21
 10052  02BD  2ABF               	goto	u244_20
 10053  02BE  2AC0               u244_21:
 10054  02BF                     	goto	i1l2426
 10055  02BF  2AC6               u244_20:
 10056  02C0                     	
 10057                           i1l2424:	
 10058  02C0                     	movf	((___fladd@bexp)),w
 10059  02C0  0836               	btfss	status,2
 10060  02C1  1D03               	goto	u245_21
 10061  02C2  2AC4               	goto	u245_20
 10062  02C3  2AC5               u245_21:
 10063  02C4                     	goto	i1l2432
 10064  02C4  2AD6               u245_20:
 10065  02C5                     	goto	i1l2426
 10066  02C5  2AC6               	
 10067                           i1l831:	
 10068  02C6                     	line	216
 10069                           	
 10070                           i1l2426:	
 10071  02C6                     	movlw	high highword(0)
 10072  02C6  3000               	movwf	(___fladd@b+3)
 10073  02C7  00A3               	movlw	low highword(0)
 10074  02C8  3000               	movwf	(___fladd@b+2)
 10075  02C9  00A2               	movlw	high(0)
 10076  02CA  3000               	movwf	(___fladd@b+1)
 10077  02CB  00A1               	movlw	low(0)
 10078  02CC  3000               	movwf	(___fladd@b)
 10079  02CD  00A0               
 10080                           	line	218
 10081                           	
 10082                           i1l2428:	
 10083  02CE                     	movf	((___fladd@bexp)),w
 10084  02CE  0836               	btfss	status,2
 10085  02CF  1D03               	goto	u246_21
 10086  02D0  2AD2               	goto	u246_20
 10087  02D1  2AD3               u246_21:
 10088  02D2                     	goto	i1l2432
 10089  02D2  2AD6               u246_20:
 10090  02D3                     	line	219
 10091                           	
 10092                           i1l2430:	
 10093  02D3                     	clrf	(___fladd@signs)
 10094  02D3  01B4               	goto	i1l2432
 10095  02D4  2AD6               	line	220
 10096                           	
 10097                           i1l832:	
 10098  02D5                     	goto	i1l2432
 10099  02D5  2AD6               	line	221
 10100                           	
 10101                           i1l829:	
 10102  02D6                     	line	225
 10103                           	
 10104                           i1l2432:	
 10105  02D6                     	btfss	(___fladd@bexp),(0)&7
 10106  02D6  1C36               	goto	u247_21
 10107  02D7  2AD9               	goto	u247_20
 10108  02D8  2ADA               u247_21:
 10109  02D9                     	goto	i1l2436
 10110  02D9  2ADC               u247_20:
 10111  02DA                     	line	226
 10112                           	
 10113                           i1l2434:	
 10114  02DA                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 10115  02DA  17A2               	line	227
 10116                           	goto	i1l834
 10117  02DB  2AE0               	line	229
 10118                           	
 10119                           i1l833:	
 10120  02DC                     	line	230
 10121                           	
 10122                           i1l2436:	
 10123  02DC                     	movlw	low(07Fh)
 10124  02DC  307F               	movwf	(??___fladd+0)+0
 10125  02DD  00A8               	movf	(??___fladd+0)+0,w
 10126  02DE  0828               	andwf	0+(___fladd@b)+02h,f
 10127  02DF  05A2               	line	231
 10128                           	
 10129                           i1l834:	
 10130  02E0                     	line	232
 10131                           	movf	(___fladd@bexp),w
 10132  02E0  0836               	movwf	(??___fladd+0)+0
 10133  02E1  00A8               	clrc
 10134  02E2  1003               	rrf	(??___fladd+0)+0,w
 10135  02E3  0C28               	movwf	(??___fladd+1)+0
 10136  02E4  00A9               	movf	(??___fladd+1)+0,w
 10137  02E5  0829               	movwf	0+(___fladd@b)+03h
 10138  02E6  00A3               	line	233
 10139                           	
 10140                           i1l2438:	
 10141  02E7                     	btfss	(___fladd@signs),(7)&7
 10142  02E7  1FB4               	goto	u248_21
 10143  02E8  2AEA               	goto	u248_20
 10144  02E9  2AEB               u248_21:
 10145  02EA                     	goto	i1l835
 10146  02EA  2AEC               u248_20:
 10147  02EB                     	line	234
 10148                           	
 10149                           i1l2440:	
 10150  02EB                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 10151  02EB  17A3               	line	235
 10152                           	
 10153                           i1l835:	
 10154  02EC                     	line	236
 10155                           	line	237
 10156                           	
 10157                           i1l805:	
 10158  02EC                     	return
 10159  02EC  0008               	opt stack 0
 10160                           GLOBAL	__end_of___fladd
 10161                           	__end_of___fladd:
 10162  02ED                     	signat	___fladd,8316
 10163                           global	___latbits
 10164                           ___latbits	equ	2
 10165  0002                     	global	btemp
 10166                           	btemp set 07Eh
 10167  007E                     
 10168                           	DABS	1,126,2	;btemp
 10169                           	global	wtemp0
 10170                           	wtemp0 set btemp+0
 10171  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      64
    BANK1            80     37      51
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _start_receive->_poll_receiver
    _is_deadzone->___xxtofl
    ___fltol->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd

Critical Paths under _main in BANK1

    _main->_update_volume
    _update_volume->_write_int
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11621
                                             35 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                      _handle_remote
                       _update_input
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5774
                                             33 BANK1      2     2      0
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5750
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    4085
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1399
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0    1103
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     836
                                              6 BANK1     10     8      2
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     496
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1311
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handle_remote                                        5     5      0      75
                                              0 BANK1      5     5      0
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
                        _init_remote
 ---------------------------------------------------------------------------------
 (2) _init_remote                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    4228
                                             54 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _poll_receiver
                      _start_receive
 ---------------------------------------------------------------------------------
 (8) _start_receive                                        0     0      0       0
                      _poll_receiver
 ---------------------------------------------------------------------------------
 (9) _poll_receiver                                        8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      6     6      0    4094
                                             48 BANK0      6     6      0
                        _is_deadzone
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _is_deadzone                                         13     9      4    3746
                                             35 BANK0     13     9      4
                            ___fladd
                            ___fltol
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            11     7      4     381
                                             24 BANK0     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            24    16      8    2414
                                              0 BANK0     24    16      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
     _init_remote
   _handle_remote
   _update_input
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite
   _update_volume
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     _is_deadzone
       ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       i1___wmul
     i1___lwdiv
   _handle_rotary
   _poll_receiver
   _start_receive
     _poll_receiver

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      81       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      40       5       80.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     25      33       7       63.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      81      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 10 12:37:22 2019

                  _update_input 0B2B          __size_of_start_receive 0009                               pc 0002  
                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              l60 09D7  
                            l61 09F6                              l62 09F7                              l63 09F7  
                            l59 09CF                              fsr 0004             ___wmul@multiplicand 00A2  
              i1___wmul@product 0074                    spiWrite@data 00A0                   _update_volume 0CF4  
                           l200 095F                             l201 095F                             l220 0A8D  
                           l221 0A78                             l222 0AA2                             l150 0B70  
                           l223 0A7C                             l224 0A80                             l160 0BD4  
                           l225 0A84                             l129 0CA2                             l321 0976  
                           l161 0BF0                             l153 0D02                             l226 0A88  
                           l218 0A73                             l162 0C07                             l154 0D4E  
                           l219 0AA5                             l163 0C07                             l155 0D2D  
                           l500 09C3                             l180 0E0F                             l172 0A14  
                           l501 09C8                             l181 0E10                             l173 0A2F  
                           l149 0B39                             l190 094C                             l182 0E12  
                           l166 0A54                             l158 0BF8                             l191 094F  
                           l167 0A37                             l159 0BC1                             l176 0DD1  
                           l168 0A69                             l185 0D62                             l177 0E12  
                           l169 0A69                             l194 093D                             l186 0DB0  
                           l178 0DF0                             l195 0940                             l187 0DB0  
                           l179 0E11                             l380 0FA0                             l365 02FD  
                           l381 0FA9                             l198 0958                             l294 0E7C  
                           l382 0FB2                             l199 0958                             l383 0FBB  
                           l375 0F8C                             l384 0FC4                             l376 0FFF  
                           l480 04B9                             l385 0FFF                             l377 0FCE  
                           l481 05CD                             l378 0F99                             l490 0553  
                           l482 04BA                             l379 0FEC                             l491 05A0  
                           l483 04BB                             l476 05AB                             l492 0558  
                           l484 04E9                             l493 05AA                             l485 04BC  
                           l477 04A5                             l494 05CC                             l486 0503  
                           l478 04B7                             l495 05D2                             l487 050D  
                           l479 04BE                             l488 0541                             l489 0536  
                           l770 0C4E                             l498 09A4                             l771 0C54  
                           l499 09AE                             l764 0C4F                             l780 0B24  
                           l765 0C21                             l781 0B2A                             l766 0C15  
                           l774 0B25                             l767 0C26                             l775 0AFF  
                           l768 0C27                             l776 0AF3                             l769 0C40  
                           l777 0B04                             l778 0B05                             l779 0B16  
                 ?_display_init 0070                             _PR2 0092                    __CFG_CPD$OFF 0000  
                           _isr 0AA6                             fsr0 0004                             indf 0000  
                 write_char@pos 00B0                    __CFG_LVP$OFF 0000                    ___fltol@exp1 0042  
                          l2100 0C15                            l2110 0C3E                            l2102 0C1C  
                          l2112 0C40                            l2104 0C21                            l2120 0AE8  
                          l2200 05A0                            l2042 0953                            l2114 0C47  
                          l2106 0C27                            l2130 0B05                            l2122 0AF0  
                          l2202 05AB                            l2050 09B5                            l2108 0C38  
                          l2116 0C4F                            l2140 0B2A                            l2132 0B0F  
                          l2124 0AF3                            l2204 05CD                            l2052 09BC  
                          l2044 099F                            l2060 0D53                            l2118 0C54  
                          l2134 0B16                            l2126 0AFA                            l2206 05D2  
                          l2150 04A0                            l2054 09C3                            l2046 09A4  
                          l2062 0D61                            l2070 0DB4                            l2142 0A30  
                          l2136 0B1D                            l2128 0AFF                            l2160 04BD  
                          l2152 04A5                            l2056 09C8                            l2048 09A8  
                          l2064 0D62                            l2080 0DD9                            l2072 0DBA  
                          l2144 0A37                            l2138 0B25                            l2170 04F9  
                          l2162 04BE                            l2154 04AB                            l2066 0D9A  
                          l2058 0D4F                            l2090 0DFE                            l2082 0DDF  
                          l2074 0DC0                            l2146 0A4D                            l2180 050D  
                          l2172 04FD                            l2164 04E9                            l2156 04B2  
                          l2068 0DA2                            l2092 0E05                            l2084 0DE6  
                          l2076 0DC7                            l2148 0A54                            l2094 0C08  
                          l2190 054E                            l2182 0535                            l2174 0503  
                          l2166 04F1                            l2158 04B7                            l2086 0DF0  
                          l2078 0DD1                            l3080 0A94                            l2520 0C62  
                          l2512 0C55                            l2096 0C0C                            l2192 0553  
                          l2184 0536                            l2176 0505                            l2168 04F5  
                          l2088 0DF8                            l2600 0A13                            l2530 0C67  
                          l2522 0C63                            l2514 0C5D                            l2610 096A  
                          l2098 0C12                            l2194 0558                            l2178 050C  
                          l2186 0541                            l3074 04DE                            l2602 0A14  
                          l2540 0C78                            l2532 0C6D                            l2524 0C64  
                          l2516 0C5E                            l2612 096D                            l2620 02F3  
                          l2700 0E36                            l3076 0FD6                            l2604 0932  
                          l2196 0594                            l2188 0547                            l2550 0C7F  
                          l2542 0C7B                            l2534 0C70                            l2526 0C65  
                          l2518 0C5F                            l2614 0970                            l2622 02F7  
                          l2710 0E47                            l2702 0E39                            l3078 0FE1  
                          l2606 0939                            l2198 059B                            l2560 0C8B  
                          l2552 0C80                            l2544 0C7C                            l2536 0C71  
                          l2528 0C66                            l2616 0973                            l2608 0960  
                          l2624 02FA                            l2720 0E52                            l2712 0E4C  
                          l2704 0E3A                            l2800 0F75                            l2570 0C97  
                          l2562 0C8C                            l2554 0C81                            l2546 0C7D  
                          l2538 0C72                            l2618 02ED                            l2730 0E6A  
                          l2722 0E53                            l2714 0E4F                            l2706 0E3D  
                          l2810 0F8E                            l2802 0F7F                            l2572 0C9A  
                          l2564 0C8D                            l2556 0C82                            l2548 0C7E  
                          l2724 0E54                            l2716 0E50                            l2708 0E42  
                          l2820 0FA4                            l2812 0F99                            l2804 0F81  
                          l2580 0BBC                            l2740 0D08                            l2732 0CF4  
                          l2574 0C9E                            l2566 0C93                            l2558 0C88  
                          l2726 0E56                            l2718 0E51                            l2670 0E13  
                          l2830 0FB2                            l2822 0FA6                            l2814 0F9B  
                          l2806 0F83                            l2590 0BDA                            l2582 0BC1  
                          l2750 0D38                            l2742 0D13                            l2734 0D01  
                          l2568 0C96                            l2728 0E58                            l2680 0E1D  
                          l2672 0E19                            l2840 0FC4                            l2832 0FB6  
                          l2824 0FA9                            l2816 0F9D                            l2808 0F8D  
                          l2576 0941                            l2592 0BE2                            l2584 0BC5  
                          l2760 0B3B                            l2752 0D43                            l2744 0D19  
                          l2736 0D02                            l2690 0E29                            l2682 0E1E  
                          l2674 0E1A                            l2850 0FF1                            l2842 0FCA  
                          l2834 0FB8                            l2826 0FAD                            l2818 0FA0  
                          l2578 0948                            l2586 0BD3                            l2594 0BF0  
                          l2770 0B6A                            l2762 0B40                            l2754 0D48  
                          l2746 0D26                            l2738 0D03                            l2930 09E1  
                          l2922 09C9                            l2780 0A7C                            l2772 0A6A  
                          l2692 0E2A                            l2684 0E22                            l2676 0E1B  
                          l2852 0FF4                            l2844 0FCD                            l2836 0FBB  
                          l2828 0FAF                            l2596 09FA                            l2588 0BD4  
                          l2764 0B4B                            l2756 0B2B                            l2748 0D2D  
                          l2932 09E6                            l2924 09CF                            l2782 0A80  
                          l2790 0A8D                            l2774 0A72                            l2694 0E2D  
                          l2686 0E25                            l2678 0E1C                            l2838 0FC1  
                          l2846 0FCE                            l2598 0A09                            l2766 0B56  
                          l2758 0B38                            l2934 09EB                            l2926 09D5  
                          l2784 0A84                            l2792 0AA2                            l2776 0A73  
                          l2696 0E30                            l2688 0E26                            l2848 0FEC  
                          l2768 0B65                            l2928 09D7                            l2786 0A88  
                          l2778 0A78                            l2698 0E33                            l2788 0A8C  
                          l2798 0F72                            ?_isr 0070                            STR_1 0490  
                          STR_2 0496                            STR_3 049A                            u3040 09D5  
                          u3041 09D4                            u1620 09C2                            u1700 0DFE  
                          u1621 09C1                            u1605 09AF                            u1701 0DFD  
                          u1710 0C12                            u1630 0D60                            u1711 0C11  
                          u1615 09B6                            u1631 0D5F                            u1800 0B03  
                          u1640 0DAF                            u1801 0B02                            u1641 0DAE  
                          u1730 0C25                            u1810 0B0F                            u1650 0DBA  
                          u1731 0C24                            u1811 0B0E                            u1635 0D5C  
                          u1651 0DB9                            u1580 095E                            u1900 0547  
                          u1660 0DC0                            u2700 0BD2                            u1581 095D  
                          u1725 0C16                            u1901 0546                            u1645 0DAB  
                          u1661 0DBF                            u2701 0BD1                            u3157 09F1  
                          u1750 0C38                            u1830 0B23                            u1910 05A9  
                          u1590 09A8                            u1670 0DD9                            u2710 0BEF  
                          u1751 0C37                            u1831 0B22                            u1815 0B0B  
                          u1911 05A8                            u1591 09A7                            u1671 0DD8  
                          u2711 0BEE                            u1920 05CB                            u1680 0DDF  
                          u1840 0A68                            u2720 0C06                            u1745 0C28  
                          u1825 0B17                            u1921 05CA                            u1681 0DDE  
                          u1841 0A67                            u2721 0C05                            u2705 0BCE  
                          u1770 0C4D                            u1850 04AB                            u1690 0DF8  
                          u2730 0A09                            u1771 0C4C                            u1755 0C34  
                          u1851 04AA                            u1691 0DF7                            u2731 0A08  
                          u2715 0BEB                            u2740 0939                            u1780 0AF0  
                          u1860 04F9                            u2741 0938                            u1765 0C41  
                          u1781 0AEF                            u1861 04F8                            u2725 0C02  
                          u1870 050B                            u1871 050A                            u2735 0A05  
                          u1880 0534                            u2840 0D00                            u1881 0533  
                          u2841 0CFF                            u2690 0948                            u1890 0540  
                          u2850 0D26                            u2691 0947                            u1795 0AF4  
                          u1891 053F                            u2851 0D25                            u2860 0B37  
                          u1885 0530                            u2861 0B36                            u2845 0CFC  
                          u2870 0A71                            u2871 0A70                            u2855 0D22  
                          u2880 0F7F                            u2881 0F7E                            u2865 0B33  
                          u2890 0FF1                            u2891 0FF0                            i1l70 0ACC  
                          i1l71 0ADD                            i1l72 0ADD                            i1l68 0ABD  
                          i1l69 0ABB                    __CFG_WRT$OFF 0000                            _main 09C9  
                          _font 0312          is_deadzone@deadzoneLow 0049                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0012                   __CFG_IESO$OFF 0000  
                  ?_is_deadzone 0043                           ??_isr 0056                  ?_update_volume 0070  
                 ___fltol@sign1 0041                  ??_display_init 00A1                 __end_of___fladd 02ED  
                         ?_main 0070                   __CFG_WDTE$OFF 0000                 __end_of___fltol 07F7  
               __end_of___lwdiv 0C55                           i1l230 0F33                           i1l231 0F2F  
                         i1l232 0F32                           i1l233 0F64                           i1l234 0F64  
                         i1l331 0EA8                           i1l235 0F5E                           i1l500 0999  
                         i1l332 0EEE                           i1l236 0F63                           i1l501 099E  
                         i1l325 068E                           i1l333 0EED                           i1l237 0F71  
                         i1l229 0F34                           i1l326 0698                           i1l334 0EEE  
                         i1l329 0EAD                 __end_of___lwmod 0B2B                           i1l371 0CF3  
                         i1l372 0CF3                           i1l800 0130                           i1l368 07FF  
                         i1l801 0136                           i1l810 0269                           i1l802 014D  
                         i1l811 021C                           i1l803 01A0                           i1l820 0262  
                         i1l812 021B                           i1l804 0160                           i1l821 0268  
                         i1l813 022A                           i1l805 02EC                           i1l822 0280  
                         i1l814 0241                           i1l806 019F                           i1l910 06E0  
                         i1l831 02C6                           i1l823 0277                           i1l815 0263  
                         i1l807 0188                           i1l911 06D2                           i1l832 02D5  
                         i1l824 027F                           i1l816 0242                           i1l808 018B  
                         i1l920 0722                           i1l912 06E7                           i1l833 02DC  
                         i1l825 027E                           i1l817 0250                           i1l809 0191  
                         i1l921 072E                           i1l913 0703                           i1l834 02E0  
                         i1l826 02BB                           i1l818 0257                           i1l690 07E6  
                         i1l922 0751                           i1l914 06E8                           i1l906 06B3  
                         i1l498 097A                           i1l770 0BB5                           i1l835 02EC  
                         i1l827 02BB                           i1l819 025A                           i1l691 07D3  
                         i1l915 070A                           i1l907 06BB                           i1l499 0984  
                         i1l771 0BBB                           i1l828 02BA                           i1l692 07DF  
                         i1l684 077A                           i1l916 0717                           i1l908 06CD  
                         i1l764 0BB6                           i1l829 02D6                           i1l693 07D4  
                         i1l685 07F6                           i1l917 070B                           i1l909 075A  
                         i1l765 0B88                           i1l790 0092                           i1l694 07E5  
                         i1l686 07C3                           i1l766 0B7C                           i1l791 008F  
                         i1l695 07F6                           i1l687 07AF                           i1l919 0722  
                         i1l767 0B8D                           i1l792 009A                           i1l784 0044  
                         i1l688 07B0                           i1l768 0B8E                           i1l793 00E6  
                         i1l785 005A                           i1l689 07C2                           i1l769 0BA7  
                         i1l794 00A9                           i1l786 0057                           i1l795 011F  
                         i1l787 0063                           i1l796 014D                           i1l788 0070  
                         i1l797 0144                           i1l789 007C                           i1l798 0120  
                         i1l799 012D                           _PORTA 0005                           _PORTC 0007  
                         _TRISC 0087                           _TRISD 0088           _activateSelectedRelay 0A6A  
                  ?_init_remote 0070                  __CFG_FCMEN$OFF 0000                     _write_space 0BBC  
               __end_of_dpowers 048E                   _start_receive 07F7         is_deadzone@deadzoneHigh 004B  
                         pclath 000A                __end_ofi1___wmul 099F                           status 0003  
           i1___wmul@multiplier 0070                           wtemp0 007E                 __end_of_sprintf 05D3  
            __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 004E                  __CFG_MCLRE$OFF 0000  
               __initialization 0015                    __end_of_main 09FA                    __end_of_font 0484  
            handle_rotary@portA 0073              handle_rotary@portB 0075             _display_write_start 0941  
                        ??_main 00C3                 _handle_potmeter 0E7D                  write_text@text 00B3  
                ?_start_receive 0070                          _ADRESH 001E                          _ADRESL 009E  
          ?_display_write_start 0070                          i1l2300 00B1                          i1l2220 078F  
                        i1l2212 075B                          i1l2310 00C5                          i1l2302 00B5  
                        i1l2230 07A5                          i1l2222 0790                          i1l2214 0770  
                        i1l2400 025F                          i1l2320 00D9                          i1l2312 00C9  
                        i1l2304 00B9                          i1l2240 07D2                          i1l2232 07AE  
                        i1l2224 0798                          i1l2216 0779                          i1l2410 0274  
                        i1l2402 0263                          i1l2330 0103                          i1l2322 00DD  
                        i1l2314 00CD                          i1l2306 00BD                          i1l2250 0038  
                        i1l2242 07D4                          i1l2234 07B0                          i1l2226 079A  
                        i1l2218 077A                          i1l2420 0297                          i1l2412 027B  
                        i1l2404 0269                          i1l2340 0136                          i1l2332 0124  
                        i1l2324 00E1                          i1l2316 00D1                          i1l2308 00C1  
                        i1l2260 004E                          i1l2252 003E                          i1l2244 07E6  
                        i1l2228 079E                          i1l2236 07C3                          i1l2500 0CA3  
                        u200_25 07D6                          i1l2430 02D3                          i1l2422 02B5  
                        i1l2414 0280                          i1l2406 026A                          i1l2350 015F  
                        i1l2342 013F                          i1l2334 012D                          i1l2318 00D5  
                        i1l2326 00E6                          i1l2270 0068                          i1l2262 0057  
                        i1l2254 0042                          i1l2246 07EB                          i1l2238 07C9  
                        i1l2510 0CF1                          i1l2502 0CBE                          i1l2440 02EB  
                        i1l2432 02D6                          i1l2424 02C0                          i1l2416 0285  
                        i1l2408 026E                          i1l2360 0188                          i1l2352 0160  
                        i1l2336 0130                          i1l2344 0144                          i1l2328 00E7  
                        i1l2280 007C                          i1l2272 006E                          i1l2264 0058  
                        i1l2256 0044                          i1l2248 0031                          u201_20 07E4  
                        i1l2504 0CE4                          u201_21 07E3                          i1l2434 02DA  
                        i1l2426 02C6                          i1l2418 0293                          i1l2362 018B  
                        i1l2354 0177                          i1l2346 0151                          i1l2370 01A0  
                        i1l2338 0134                          i1l2282 0081                          i1l2290 0092  
                        i1l2274 0070                          i1l2258 0049                          i1l2266 005A  
                        i1l2450 06C3                          i1l2442 069A                          i1l2506 0CEA  
                        i1l2436 02DC                          i1l2428 02CE                          i1l2372 01B6  
                        i1l2380 021C                          i1l2364 018F                          i1l2356 017B  
                        i1l2348 0156                          i1l2292 00A0                          i1l2284 0086  
                        i1l2276 0076                          i1l2268 0063                          i1l2460 06E8  
                        i1l2452 06CC                          i1l2444 069F                          i1l2508 0CF0  
                        i1l2438 02E7                          i1l2390 024B                          i1l2382 0232  
                        i1l2374 0205                          i1l2366 0191                          i1l2358 017F  
                        i1l2294 00A4                          i1l2286 008F                          i1l2278 007A  
                        i1l2470 071B                          i1l2462 06EC                          i1l2454 06CD  
                        i1l2446 06A3                          i1l2630 062F                          i1l2392 024F  
                        i1l2384 0237                          i1l2376 0207                          i1l2368 019A  
                        i1l2296 00A9                          u210_20 00A0                          i1l2288 0090  
                        u202_20 07EB                          i1l2480 074F                          i1l2472 0726  
                        i1l2464 06FA                          i1l2456 06D2                          i1l2448 06B3  
                        i1l2640 068E                          i1l2632 066A                          u210_21 009F  
                        u202_21 07EA                          i1l2394 0254                          i1l2386 0240  
                        i1l2378 020C                          i1l2298 00AD                          i1l2482 0751  
                        i1l2474 0730                          i1l2466 070B                          i1l2458 06E0  
                        i1l2490 097E                          i1l2642 0698                          i1l2634 066B  
                        i1l2626 05D3                          i1l2650 0B7C                          i1l2396 0257  
                        i1l2388 0242                          i1l2484 075A                          i1l2476 0746  
                        i1l2468 0717                          i1l2492 098B                          i1l2636 0679  
                        i1l2628 05F4                          i1l2660 0BA5                          i1l2652 0B83  
                        i1l2644 0B71                          i1l2900 0EA8                          i1l2398 025A  
                        i1l2478 074B                          i1l2494 0992                          i1l2486 0977  
                        i1l2638 0689                          i1l2662 0BA7                          i1l2654 0B88  
                        i1l2646 0B73                          i1l2902 0EAD                          u211_20 00A4  
                        u203_20 0042                          i1l2496 0999                          i1l2488 097A  
                        i1l2664 0BAE                          i1l2656 0B8E                          i1l2648 0B79  
                        i1l2904 0EE2                          u211_21 00A3                          u203_21 0041  
                        i1l2498 099E                          i1l2658 0B9F                          i1l2666 0BB6  
                        i1l2668 0BBB                          i1l2940 0AAF                          i1l2870 0F1D  
                        i1l2862 0EEF                          i1l2950 0AC8                          i1l2942 0AB5  
                        u220_20 0156                          u212_20 0103                          u204_20 0049  
                        u300_20 0EE2                          i1l2880 0F49                          i1l2872 0F28  
                        i1l2864 0F03                          i1l2952 0ACC                          i1l2944 0ABB  
                        i1l2936 0AA6                          u220_21 0155                          u212_21 0102  
                        u204_21 0048                          u300_21 0EE1                          i1l2882 0F4F  
                        i1l2874 0F2F                          i1l2866 0F0D                          i1l2890 07F7  
                        i1l2954 0AD0                          i1l2938 0AAA                          i1l2946 0ABD  
                        i1l2884 0F57                          i1l2868 0F17                          i1l2876 0F34  
                        i1l2892 07FC                          i1l2956 0AD4                          i1l2948 0AC3  
                        u212_25 00FF                          i1l2894 0E7D                          i1l2886 0F5E  
                        i1l2878 0F3F                          i1l2958 0AD9                          u213_20 010E  
                        u205_20 004E                          i1l2896 0E87                          i1l2888 0F6D  
                        u221_21 0169                          u213_21 010C                          u205_21 004D  
                        u221_22 0170                          i1l2898 0E8D                          u221_23 0177  
                        u230_20 0232                          u222_20 017B                          u214_20 010F  
                        u206_20 006E                          u230_21 0231                          u222_21 017A  
                        u206_21 006D                          u231_20 0237                          u223_20 017F  
                        u215_20 0124                          u207_20 007A                          u231_21 0236  
                        u223_21 017E                          u215_21 0123                          u207_21 0079  
                        u240_20 0285                          u224_20 018F                          u216_20 0134  
                        u208_20 0081                          u240_21 0284                          u224_21 018E  
                        u216_21 0133                          u208_21 0080                          u232_25 0244  
                        u241_20 0297                          u233_20 024F                          u209_20 0086  
                        u305_20 0AAA                          u241_21 0296                          u233_21 024E  
                        u209_21 0085                          u305_21 0AA9                          u225_25 0193  
                        u217_25 0138                          u242_20 02A6                          u234_20 0254  
                        u226_20 01B6                          u218_20 014C                          u250_20 06A3  
                        u306_20 0AB5                          u234_21 0253                          u226_21 01B5  
                        u218_21 014B                          u250_21 06A2                          u306_21 0AB4  
                        u226_23 01B2                          u242_25 02A1                          u243_20 02B5  
                        u235_20 025F                          u227_20 01DC                          u219_20 0151  
                        u251_20 06C3                          u307_20 0AC3                          u243_21 02B4  
                        u235_21 025E                          u227_21 01DD                          u219_21 0150  
                        u251_21 06C2                          u307_21 0AC2                          u227_22 01E2  
                        u227_23 01E3                          u244_20 02C0                          u236_20 0267  
                        u228_20 01EE                          u260_20 073B                          u308_20 0AD0  
                        u244_21 02BF                          u236_21 0266                          u228_21 01EF  
                        u308_21 0ACF                          u228_22 01F4                          u228_23 01F5  
                        u260_25 0736                          u252_25 06D7                          u245_20 02C5  
                        u237_20 026E                          u229_20 020C                          u261_20 074B  
                        u253_20 06E6                          u245_21 02C4                          u237_21 026D  
                        u229_21 020B                          u261_21 074A                          u253_21 06E5  
                        u246_20 02D3                          u238_20 0274                          u262_20 074F  
                        u246_21 02D2                          u238_21 0273                          u262_21 074E  
                        u254_25 06FB                          u247_20 02DA                          u239_20 027B  
                        u255_20 0709                          u263_20 097E                          u247_21 02D9  
                        u239_21 027A                          u255_21 0708                          u263_21 097D  
                        u248_20 02EB                          u248_21 02EA                          u256_25 070F  
                        u264_25 0985                          u280_25 0B8F                          u193_20 0770  
                        u257_20 071B                          u249_20 069F                          u281_20 0B9F  
                        u193_21 076F                          u257_21 071A                          u249_21 069E  
                        u281_21 0B9E                          u265_25 098C                          u281_25 0B9B  
                        u194_20 0788                          u258_20 0721                          u266_20 0998  
                        u290_20 0F0D                          u258_21 0720                          u266_21 0997  
                        u290_21 0F0C                          u194_25 0783                          u282_25 0BA8  
                        u290_25 0F09                          u195_20 079E                          u259_20 0726  
                        u275_20 0679                          u283_20 0BB4                          u291_20 0F17  
                        u267_20 0CB3                          u195_21 079D                          u259_21 0725  
                        u275_21 0678                          u283_21 0BB3                          u291_21 0F16  
                        u275_25 0675                          u291_25 0F13                          u267_25 0CAE  
                        u196_20 07A5                          u276_20 0689                          u292_20 0F1D  
                        u268_20 0CF0                          u196_21 07A4                          u276_21 0688  
                        u292_21 0F1C                          u268_21 0CEF                          u276_25 0685  
                        u277_20 0B79                          u293_20 0F28                          u277_21 0B78  
                        u293_21 0F27                          u197_25 07B1                          u198_20 07C1  
                        u294_20 0F3F                          u198_21 07C0                          u294_21 0F3E  
                        u278_25 0B7D                          u294_25 0F3B                          u199_20 07C9  
                        u279_20 0B8C                          u295_20 0F49                          u199_21 07C8  
                        u279_21 0B8B                          u295_21 0F48                          u295_25 0F45  
                        u296_20 0F4F                          u296_21 0F4E                          u297_20 0F57  
                        u297_21 0F56                          u298_20 0E8D                          u298_21 0E8C  
                        u299_20 0EA7                          u299_21 0EA6                          u299_25 0EA3  
                        _SSPCON 0014                          _SSPBUF 0013                __end_of___xxtofl 075B  
                __CFG_PWRTE$OFF 0000                       ??___fladd 0028                          ___wmul 099F  
                        __lastA 005C                          __lastB 005A                 ??_update_volume 00C1  
                     ??___fltol 003C                       ??___lwdiv 00A4                       ??___lwmod 00AC  
                        _config 0E13                __end_of_init_adc 0977                          _volume 00CD  
               write_int@number 00BD          ?_activateSelectedRelay 0070               __end_ofi1___lwdiv 0BBC  
                        saved_w 007E                __end_of_spiWrite 0960                       ??_sprintf 00B2  
         ??_display_write_start 00A0                    ___xxtofl@arg 007A                    ___xxtofl@exp 0079  
                  ___xxtofl@val 0070         __end_of__initialization 002D          is_deadzone@currentStep 0043  
          __end_of_display_init 0CA3                      ___fltol@f1 0038                  __pcstackCOMMON 0070  
          __size_of_is_deadzone 00C6         __end_of_handle_potmeter 0EEF                       ?i1___wmul 0070  
               ??_start_receive 0078            __size_of_init_remote 0011                      __pbssBANK0 005A  
                    __pbssBANK1 00C5           __end_of_handle_remote 1000           __end_of_handle_rotary 0F72  
                    __pmaintext 09C9           __end_of_poll_receiver 0CF4                         ?___wmul 00A0  
                    __pintentry 0004                         ?_config 0070                      ??i1___wmul 0074  
                __selectedInput 00CF                       ?___xxtofl 0070                    ?_write_space 00A1  
                       _SSPSTAT 0094                      __stringtab 0300                       ?_init_adc 0070  
            __size_of_write_int 0036                      _lastVolume 00CB                       ?_spiWrite 0070  
                       ___fladd 0031                ?_handle_potmeter 0070                         ___fltol 075B  
               __size_of___wmul 002A                         ___lwdiv 0C08                         ___lwmod 0AE8  
               __size_of_config 006A                       _ANSELbits 0188                         __ptext1 0CF4  
                       __ptext2 0B2B                         __ptext3 0BBC                         __ptext4 09FA  
                       __ptext5 0A30                         __ptext6 0DB1                         __ptext7 0D4F  
                       __ptext8 099F                         __ptext9 049D                __selectedDisplay 00D1  
                       _dpowers 0484               i1___lwdiv@divisor 0070                       _T2CONbits 0012  
                  __size_of_isr 0042               i1___lwdiv@counter 0077                      ??___xxtofl 0074  
                       _sprintf 049D                   _receive_count 005E           __size_of_display_init 004E  
          end_of_initialization 002D                      ??_init_adc 00A0                      ??_spiWrite 00A0  
                  __pstringtext 0300               handle_remote@data 00A2               __end_of_step_size 0490  
             handle_remote@mask 00A0           i1___wmul@multiplicand 0072         ??_activateSelectedRelay 00A0  
                     _PORTBbits 0006                       _PORTCbits 0007                       _PORTDbits 0008  
          __inputUpdateRequired 00D2      handle_potmeter@currentStep 0052                    _display_init 0C55  
                   ___fladd@grs 0037               __end_of_write_int 0A30                   ___xxtofl@sign 0078  
                     _TRISAbits 0085                       _TRISBbits 0086                       _TRISCbits 0087  
                     _TRISEbits 0089                       i1___lwdiv 0B71                    write_int@num 00BF  
                  write_space@i 00A4                    write_space@x 00A6                   ?_update_input 0070  
                __end_of___wmul 09C9           __end_of_update_volume 0D4F                      _write_char 0DB1  
                    _write_font 0D4F                  __end_of_config 0E7D                      _write_text 0A30  
   __end_of_display_write_start 0950             start_initialization 0015               __size_ofi1___wmul 0028  
                   __end_of_isr 0AE8                      ?i1___lwdiv 0070            __size_of_write_space 004C  
              write_space@count 00A1                   ??_is_deadzone 0047                  ??_update_input 00C1  
                      ??___wmul 00A4                        ??_config 00A1             update_volume@spaces 00C1  
                     ___fladd@a 0024                       ___fladd@b 0020                   ??_init_remote 00A0  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
         __end_of_start_receive 0800               __size_of___xxtofl 00C2          __CFG_FOSC$INTRC_CLKOUT 0000  
                   sprintf@flag 00B7                     sprintf@prec 00B8               __size_of_init_adc 0017  
              ___lwdiv@dividend 00A2                        ?___fladd 0020                        ?___fltol 0038  
                      ?___lwdiv 00A0                        ?___lwmod 00A8             __end_of_is_deadzone 0699  
                   ?_write_char 0070               __size_of_spiWrite 0010                     ?_write_font 00A6  
                   ?_write_text 00B3          __size_of_handle_remote 008E          __size_of_handle_rotary 0083  
                     _lastInput 00C9                ___lwdiv@quotient 00A5                     ??i1___lwdiv 0074  
                      ?_sprintf 00AE          __size_of_poll_receiver 0051             __end_of_init_remote 02FE  
               _is_deadzone$890 004D               interrupt_function 0004                  ___wmul@product 00A4  
                      _IOCBbits 0096                        _PIE1bits 008C                        _PIR1bits 000C  
__size_of_activateSelectedRelay 003C                      _ADCON0bits 001F                     __stringbase 0312  
                    _ADCON1bits 009F               ___wmul@multiplier 00A0   __end_of_activateSelectedRelay 0AA6  
                      i1___wmul 0977                       _step_size 048E                     write_char@c 00B2  
      __size_of_handle_potmeter 0072                     write_font@x 00AE                     write_text@c 00B5  
          __end_of_update_input 0B71                       _write_int 09FA               _display_write_end 0932  
           __size_of_write_char 0062                   _handle_remote 0F72             __size_of_write_font 0062  
           __size_of_write_text 003A                   _handle_rotary 0EEF              ?_display_write_end 0070  
                   _ignore_poll 005F                     _is_deadzone 05D3                   _poll_receiver 0CA3  
           ??_display_write_end 00A0                __size_of___fladd 02BC                __size_of___fltol 009C  
              __size_of___lwdiv 004D                __size_of___lwmod 0043              __end_of__stringtab 0312  
                    _ANSELHbits 0189                      sprintf@val 00B9                        ___xxtofl 0699  
                   _init_remote 02ED                 ___lwdiv@divisor 00A0                 ___lwdiv@counter 00A7  
                      __ptext10 0AE8                        __ptext11 0C08                        __ptext20 0A6A  
                      __ptext12 0941                        __ptext21 0AA6                        __ptext13 0932  
                      __ptext30 075B                        __ptext22 07F7                        __ptext14 0F72  
                      __ptext31 0031                        __ptext23 0CA3                        __ptext15 0E13  
                      __ptext24 0EEF                        __ptext16 02ED                        __ptext25 0E7D  
                      __ptext17 0960                        __ptext26 0B71                        __ptext18 0C55  
                      __ptext27 05D3                        __ptext19 0950                        __ptext28 0977  
                      __ptext29 0699               __CFG_BOR4V$BOR21V 0000                      ?_write_int 00BD  
     __end_of_display_write_end 0941                __size_of_sprintf 0136              i1___lwdiv@dividend 0072  
                ?_handle_remote 0070                        _ir_input 00C5                  ?_handle_rotary 0070  
                      _init_adc 0960                   __size_of_main 0031               write_font@fontPos 00A6  
      handle_potmeter@ad_result 0054                  ?_poll_receiver 0070                        _spiWrite 0950  
            i1___lwdiv@quotient 0075                      _INTCONbits 000B                   ??_write_space 00A3  
             ??_handle_potmeter 0050                        intlevel1 0000                       sprintf@ap 00B6  
  __size_of_display_write_start 000F                       sprintf@sp 00BB                ___lwmod@dividend 00AA  
        __size_of_update_volume 005B                       stringcode 030A                      _OSCCONbits 008F  
                  ??_write_char 00B0                    ??_write_font 00A8                    ??_write_text 00B5  
            handle_remote@found 00A4                        sprintf@c 00BC                        sprintf@f 00AE  
         __size_of_update_input 0046                 ___lwmod@divisor 00A8                 ___lwmod@counter 00AD  
                      stringtab 0300                     ??_write_int 00BF                   ___fladd@signs 0034  
               ??_handle_remote 00A0      __size_of_display_write_end 000F                 ??_handle_rotary 0070  
           __end_of_write_space 0C08                    ___fladd@aexp 0035                    ___fladd@bexp 0036  
          is_deadzone@adcResult 0045              __end_of_write_char 0E13              __end_of_write_font 0DB1  
            __end_of_write_text 0A6A                 ??_poll_receiver 0070  
