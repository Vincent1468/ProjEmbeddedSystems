

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 10 10:47:45 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_update_input
  1182                           	FNCALL	_main,_update_volume
  1183                           	FNCALL	_update_volume,_write_int
  1184                           	FNCALL	_update_volume,_write_space
  1185                           	FNCALL	_update_volume,_write_text
  1186                           	FNCALL	_update_input,_write_int
  1187                           	FNCALL	_update_input,_write_space
  1188                           	FNCALL	_update_input,_write_text
  1189                           	FNCALL	_write_space,_write_font
  1190                           	FNCALL	_write_int,_sprintf
  1191                           	FNCALL	_write_int,_write_char
  1192                           	FNCALL	_write_int,_write_text
  1193                           	FNCALL	_write_text,_write_char
  1194                           	FNCALL	_write_char,_write_font
  1195                           	FNCALL	_write_font,___wmul
  1196                           	FNCALL	_write_font,_display_write_end
  1197                           	FNCALL	_write_font,_display_write_start
  1198                           	FNCALL	_write_font,_spiWrite
  1199                           	FNCALL	_sprintf,___lwdiv
  1200                           	FNCALL	_sprintf,___lwmod
  1201                           	FNCALL	_config,_display_init
  1202                           	FNCALL	_config,_init_adc
  1203                           	FNCALL	_display_init,_spiWrite
  1204                           	FNROOT	_main
  1205                           	FNCALL	_isr,_handle_potmeter
  1206                           	FNCALL	_isr,_handle_rotary
  1207                           	FNCALL	_isr,_poll_receiver
  1208                           	FNCALL	_handle_potmeter,_is_deadzone
  1209                           	FNCALL	_handle_potmeter,i1___lwdiv
  1210                           	FNCALL	_is_deadzone,___fladd
  1211                           	FNCALL	_is_deadzone,___fltol
  1212                           	FNCALL	_is_deadzone,___xxtofl
  1213                           	FNCALL	_is_deadzone,i1___wmul
  1214                           	FNCALL	intlevel1,_isr
  1215                           	global	intlevel1
  1216                           	FNROOT	intlevel1
  1217                           	global	_font
  1218                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1219                           global __pstringtext
  1220                           __pstringtext:
  1221  0300                     stringtab:
  1222  0300                     	global    __stringtab
  1223                           __stringtab:
  1224  0300                     ;	String table - string pointers are 2 bytes each
  1225                           	btfsc	(btemp+1),7
  1226  0300  1BFF               	ljmp	stringcode
  1227  0301  2B0A               	bcf	status,7
  1228  0302  1383               	btfsc	(btemp+1),0
  1229  0303  187F               	bsf	status,7
  1230  0304  1783               	movf	indf,w
  1231  0305  0800               	incf fsr
  1232  0306  0A84               skipnz
  1233  0307  1903               incf btemp+1
  1234  0308  0AFF               	return
  1235  0309  0008               stringcode:
  1236  030A                     	movf btemp+1,w
  1237  030A  087F               andlw 7Fh
  1238  030B  397F               movwf	pclath
  1239  030C  008A               	movf	fsr,w
  1240  030D  0804               incf fsr
  1241  030E  0A84               skipnz
  1242  030F  1903               incf btemp+1
  1243  0310  0AFF               	movwf pc
  1244  0311  0082               	global __stringbase
  1245                           __stringbase:
  1246  0312                     	global    __end_of__stringtab
  1247                           __end_of__stringtab:
  1248  0312                     	file	"./Font.h"
  1249                           	line	4
  1250                           _font:
  1251  0312                     	retlw	03Eh
  1252  0312  343E               	retlw	0
  1253  0313  3400               
  1254                           	retlw	051h
  1255  0314  3451               	retlw	0
  1256  0315  3400               
  1257                           	retlw	049h
  1258  0316  3449               	retlw	0
  1259  0317  3400               
  1260                           	retlw	045h
  1261  0318  3445               	retlw	0
  1262  0319  3400               
  1263                           	retlw	03Eh
  1264  031A  343E               	retlw	0
  1265  031B  3400               
  1266                           	retlw	low(0)
  1267  031C  3400               	retlw	high(0)
  1268  031D  3400               
  1269                           	retlw	042h
  1270  031E  3442               	retlw	0
  1271  031F  3400               
  1272                           	retlw	07Fh
  1273  0320  347F               	retlw	0
  1274  0321  3400               
  1275                           	retlw	040h
  1276  0322  3440               	retlw	0
  1277  0323  3400               
  1278                           	retlw	low(0)
  1279  0324  3400               	retlw	high(0)
  1280  0325  3400               
  1281                           	retlw	042h
  1282  0326  3442               	retlw	0
  1283  0327  3400               
  1284                           	retlw	061h
  1285  0328  3461               	retlw	0
  1286  0329  3400               
  1287                           	retlw	051h
  1288  032A  3451               	retlw	0
  1289  032B  3400               
  1290                           	retlw	049h
  1291  032C  3449               	retlw	0
  1292  032D  3400               
  1293                           	retlw	046h
  1294  032E  3446               	retlw	0
  1295  032F  3400               
  1296                           	retlw	021h
  1297  0330  3421               	retlw	0
  1298  0331  3400               
  1299                           	retlw	041h
  1300  0332  3441               	retlw	0
  1301  0333  3400               
  1302                           	retlw	045h
  1303  0334  3445               	retlw	0
  1304  0335  3400               
  1305                           	retlw	04Bh
  1306  0336  344B               	retlw	0
  1307  0337  3400               
  1308                           	retlw	031h
  1309  0338  3431               	retlw	0
  1310  0339  3400               
  1311                           	retlw	018h
  1312  033A  3418               	retlw	0
  1313  033B  3400               
  1314                           	retlw	014h
  1315  033C  3414               	retlw	0
  1316  033D  3400               
  1317                           	retlw	012h
  1318  033E  3412               	retlw	0
  1319  033F  3400               
  1320                           	retlw	07Fh
  1321  0340  347F               	retlw	0
  1322  0341  3400               
  1323                           	retlw	010h
  1324  0342  3410               	retlw	0
  1325  0343  3400               
  1326                           	retlw	027h
  1327  0344  3427               	retlw	0
  1328  0345  3400               
  1329                           	retlw	045h
  1330  0346  3445               	retlw	0
  1331  0347  3400               
  1332                           	retlw	045h
  1333  0348  3445               	retlw	0
  1334  0349  3400               
  1335                           	retlw	045h
  1336  034A  3445               	retlw	0
  1337  034B  3400               
  1338                           	retlw	039h
  1339  034C  3439               	retlw	0
  1340  034D  3400               
  1341                           	retlw	03Ch
  1342  034E  343C               	retlw	0
  1343  034F  3400               
  1344                           	retlw	04Ah
  1345  0350  344A               	retlw	0
  1346  0351  3400               
  1347                           	retlw	049h
  1348  0352  3449               	retlw	0
  1349  0353  3400               
  1350                           	retlw	049h
  1351  0354  3449               	retlw	0
  1352  0355  3400               
  1353                           	retlw	030h
  1354  0356  3430               	retlw	0
  1355  0357  3400               
  1356                           	retlw	01h
  1357  0358  3401               	retlw	0
  1358  0359  3400               
  1359                           	retlw	071h
  1360  035A  3471               	retlw	0
  1361  035B  3400               
  1362                           	retlw	09h
  1363  035C  3409               	retlw	0
  1364  035D  3400               
  1365                           	retlw	05h
  1366  035E  3405               	retlw	0
  1367  035F  3400               
  1368                           	retlw	03h
  1369  0360  3403               	retlw	0
  1370  0361  3400               
  1371                           	retlw	036h
  1372  0362  3436               	retlw	0
  1373  0363  3400               
  1374                           	retlw	049h
  1375  0364  3449               	retlw	0
  1376  0365  3400               
  1377                           	retlw	049h
  1378  0366  3449               	retlw	0
  1379  0367  3400               
  1380                           	retlw	049h
  1381  0368  3449               	retlw	0
  1382  0369  3400               
  1383                           	retlw	036h
  1384  036A  3436               	retlw	0
  1385  036B  3400               
  1386                           	retlw	06h
  1387  036C  3406               	retlw	0
  1388  036D  3400               
  1389                           	retlw	049h
  1390  036E  3449               	retlw	0
  1391  036F  3400               
  1392                           	retlw	049h
  1393  0370  3449               	retlw	0
  1394  0371  3400               
  1395                           	retlw	029h
  1396  0372  3429               	retlw	0
  1397  0373  3400               
  1398                           	retlw	01Eh
  1399  0374  341E               	retlw	0
  1400  0375  3400               
  1401                           	retlw	07Eh
  1402  0376  347E               	retlw	0
  1403  0377  3400               
  1404                           	retlw	011h
  1405  0378  3411               	retlw	0
  1406  0379  3400               
  1407                           	retlw	011h
  1408  037A  3411               	retlw	0
  1409  037B  3400               
  1410                           	retlw	011h
  1411  037C  3411               	retlw	0
  1412  037D  3400               
  1413                           	retlw	07Eh
  1414  037E  347E               	retlw	0
  1415  037F  3400               
  1416                           	retlw	07Fh
  1417  0380  347F               	retlw	0
  1418  0381  3400               
  1419                           	retlw	049h
  1420  0382  3449               	retlw	0
  1421  0383  3400               
  1422                           	retlw	049h
  1423  0384  3449               	retlw	0
  1424  0385  3400               
  1425                           	retlw	049h
  1426  0386  3449               	retlw	0
  1427  0387  3400               
  1428                           	retlw	036h
  1429  0388  3436               	retlw	0
  1430  0389  3400               
  1431                           	retlw	03Eh
  1432  038A  343E               	retlw	0
  1433  038B  3400               
  1434                           	retlw	041h
  1435  038C  3441               	retlw	0
  1436  038D  3400               
  1437                           	retlw	041h
  1438  038E  3441               	retlw	0
  1439  038F  3400               
  1440                           	retlw	041h
  1441  0390  3441               	retlw	0
  1442  0391  3400               
  1443                           	retlw	022h
  1444  0392  3422               	retlw	0
  1445  0393  3400               
  1446                           	retlw	07Fh
  1447  0394  347F               	retlw	0
  1448  0395  3400               
  1449                           	retlw	041h
  1450  0396  3441               	retlw	0
  1451  0397  3400               
  1452                           	retlw	041h
  1453  0398  3441               	retlw	0
  1454  0399  3400               
  1455                           	retlw	022h
  1456  039A  3422               	retlw	0
  1457  039B  3400               
  1458                           	retlw	01Ch
  1459  039C  341C               	retlw	0
  1460  039D  3400               
  1461                           	retlw	07Fh
  1462  039E  347F               	retlw	0
  1463  039F  3400               
  1464                           	retlw	049h
  1465  03A0  3449               	retlw	0
  1466  03A1  3400               
  1467                           	retlw	049h
  1468  03A2  3449               	retlw	0
  1469  03A3  3400               
  1470                           	retlw	049h
  1471  03A4  3449               	retlw	0
  1472  03A5  3400               
  1473                           	retlw	041h
  1474  03A6  3441               	retlw	0
  1475  03A7  3400               
  1476                           	retlw	07Fh
  1477  03A8  347F               	retlw	0
  1478  03A9  3400               
  1479                           	retlw	09h
  1480  03AA  3409               	retlw	0
  1481  03AB  3400               
  1482                           	retlw	09h
  1483  03AC  3409               	retlw	0
  1484  03AD  3400               
  1485                           	retlw	01h
  1486  03AE  3401               	retlw	0
  1487  03AF  3400               
  1488                           	retlw	01h
  1489  03B0  3401               	retlw	0
  1490  03B1  3400               
  1491                           	retlw	03Eh
  1492  03B2  343E               	retlw	0
  1493  03B3  3400               
  1494                           	retlw	041h
  1495  03B4  3441               	retlw	0
  1496  03B5  3400               
  1497                           	retlw	041h
  1498  03B6  3441               	retlw	0
  1499  03B7  3400               
  1500                           	retlw	051h
  1501  03B8  3451               	retlw	0
  1502  03B9  3400               
  1503                           	retlw	032h
  1504  03BA  3432               	retlw	0
  1505  03BB  3400               
  1506                           	retlw	07Fh
  1507  03BC  347F               	retlw	0
  1508  03BD  3400               
  1509                           	retlw	08h
  1510  03BE  3408               	retlw	0
  1511  03BF  3400               
  1512                           	retlw	08h
  1513  03C0  3408               	retlw	0
  1514  03C1  3400               
  1515                           	retlw	08h
  1516  03C2  3408               	retlw	0
  1517  03C3  3400               
  1518                           	retlw	07Fh
  1519  03C4  347F               	retlw	0
  1520  03C5  3400               
  1521                           	retlw	low(0)
  1522  03C6  3400               	retlw	high(0)
  1523  03C7  3400               
  1524                           	retlw	041h
  1525  03C8  3441               	retlw	0
  1526  03C9  3400               
  1527                           	retlw	07Fh
  1528  03CA  347F               	retlw	0
  1529  03CB  3400               
  1530                           	retlw	041h
  1531  03CC  3441               	retlw	0
  1532  03CD  3400               
  1533                           	retlw	low(0)
  1534  03CE  3400               	retlw	high(0)
  1535  03CF  3400               
  1536                           	retlw	020h
  1537  03D0  3420               	retlw	0
  1538  03D1  3400               
  1539                           	retlw	040h
  1540  03D2  3440               	retlw	0
  1541  03D3  3400               
  1542                           	retlw	041h
  1543  03D4  3441               	retlw	0
  1544  03D5  3400               
  1545                           	retlw	03Fh
  1546  03D6  343F               	retlw	0
  1547  03D7  3400               
  1548                           	retlw	01h
  1549  03D8  3401               	retlw	0
  1550  03D9  3400               
  1551                           	retlw	07Fh
  1552  03DA  347F               	retlw	0
  1553  03DB  3400               
  1554                           	retlw	08h
  1555  03DC  3408               	retlw	0
  1556  03DD  3400               
  1557                           	retlw	014h
  1558  03DE  3414               	retlw	0
  1559  03DF  3400               
  1560                           	retlw	022h
  1561  03E0  3422               	retlw	0
  1562  03E1  3400               
  1563                           	retlw	041h
  1564  03E2  3441               	retlw	0
  1565  03E3  3400               
  1566                           	retlw	07Fh
  1567  03E4  347F               	retlw	0
  1568  03E5  3400               
  1569                           	retlw	040h
  1570  03E6  3440               	retlw	0
  1571  03E7  3400               
  1572                           	retlw	040h
  1573  03E8  3440               	retlw	0
  1574  03E9  3400               
  1575                           	retlw	040h
  1576  03EA  3440               	retlw	0
  1577  03EB  3400               
  1578                           	retlw	040h
  1579  03EC  3440               	retlw	0
  1580  03ED  3400               
  1581                           	retlw	07Fh
  1582  03EE  347F               	retlw	0
  1583  03EF  3400               
  1584                           	retlw	02h
  1585  03F0  3402               	retlw	0
  1586  03F1  3400               
  1587                           	retlw	04h
  1588  03F2  3404               	retlw	0
  1589  03F3  3400               
  1590                           	retlw	02h
  1591  03F4  3402               	retlw	0
  1592  03F5  3400               
  1593                           	retlw	07Fh
  1594  03F6  347F               	retlw	0
  1595  03F7  3400               
  1596                           	retlw	07Fh
  1597  03F8  347F               	retlw	0
  1598  03F9  3400               
  1599                           	retlw	04h
  1600  03FA  3404               	retlw	0
  1601  03FB  3400               
  1602                           	retlw	08h
  1603  03FC  3408               	retlw	0
  1604  03FD  3400               
  1605                           	retlw	010h
  1606  03FE  3410               	retlw	0
  1607  03FF  3400               
  1608                           	retlw	07Fh
  1609  0400  347F               	retlw	0
  1610  0401  3400               
  1611                           	retlw	03Eh
  1612  0402  343E               	retlw	0
  1613  0403  3400               
  1614                           	retlw	041h
  1615  0404  3441               	retlw	0
  1616  0405  3400               
  1617                           	retlw	041h
  1618  0406  3441               	retlw	0
  1619  0407  3400               
  1620                           	retlw	041h
  1621  0408  3441               	retlw	0
  1622  0409  3400               
  1623                           	retlw	03Eh
  1624  040A  343E               	retlw	0
  1625  040B  3400               
  1626                           	retlw	07Fh
  1627  040C  347F               	retlw	0
  1628  040D  3400               
  1629                           	retlw	09h
  1630  040E  3409               	retlw	0
  1631  040F  3400               
  1632                           	retlw	09h
  1633  0410  3409               	retlw	0
  1634  0411  3400               
  1635                           	retlw	09h
  1636  0412  3409               	retlw	0
  1637  0413  3400               
  1638                           	retlw	06h
  1639  0414  3406               	retlw	0
  1640  0415  3400               
  1641                           	retlw	03Eh
  1642  0416  343E               	retlw	0
  1643  0417  3400               
  1644                           	retlw	041h
  1645  0418  3441               	retlw	0
  1646  0419  3400               
  1647                           	retlw	051h
  1648  041A  3451               	retlw	0
  1649  041B  3400               
  1650                           	retlw	021h
  1651  041C  3421               	retlw	0
  1652  041D  3400               
  1653                           	retlw	05Eh
  1654  041E  345E               	retlw	0
  1655  041F  3400               
  1656                           	retlw	07Fh
  1657  0420  347F               	retlw	0
  1658  0421  3400               
  1659                           	retlw	09h
  1660  0422  3409               	retlw	0
  1661  0423  3400               
  1662                           	retlw	019h
  1663  0424  3419               	retlw	0
  1664  0425  3400               
  1665                           	retlw	029h
  1666  0426  3429               	retlw	0
  1667  0427  3400               
  1668                           	retlw	046h
  1669  0428  3446               	retlw	0
  1670  0429  3400               
  1671                           	retlw	046h
  1672  042A  3446               	retlw	0
  1673  042B  3400               
  1674                           	retlw	049h
  1675  042C  3449               	retlw	0
  1676  042D  3400               
  1677                           	retlw	049h
  1678  042E  3449               	retlw	0
  1679  042F  3400               
  1680                           	retlw	049h
  1681  0430  3449               	retlw	0
  1682  0431  3400               
  1683                           	retlw	031h
  1684  0432  3431               	retlw	0
  1685  0433  3400               
  1686                           	retlw	01h
  1687  0434  3401               	retlw	0
  1688  0435  3400               
  1689                           	retlw	01h
  1690  0436  3401               	retlw	0
  1691  0437  3400               
  1692                           	retlw	07Fh
  1693  0438  347F               	retlw	0
  1694  0439  3400               
  1695                           	retlw	01h
  1696  043A  3401               	retlw	0
  1697  043B  3400               
  1698                           	retlw	01h
  1699  043C  3401               	retlw	0
  1700  043D  3400               
  1701                           	retlw	03Fh
  1702  043E  343F               	retlw	0
  1703  043F  3400               
  1704                           	retlw	040h
  1705  0440  3440               	retlw	0
  1706  0441  3400               
  1707                           	retlw	040h
  1708  0442  3440               	retlw	0
  1709  0443  3400               
  1710                           	retlw	040h
  1711  0444  3440               	retlw	0
  1712  0445  3400               
  1713                           	retlw	03Fh
  1714  0446  343F               	retlw	0
  1715  0447  3400               
  1716                           	retlw	01Fh
  1717  0448  341F               	retlw	0
  1718  0449  3400               
  1719                           	retlw	020h
  1720  044A  3420               	retlw	0
  1721  044B  3400               
  1722                           	retlw	040h
  1723  044C  3440               	retlw	0
  1724  044D  3400               
  1725                           	retlw	020h
  1726  044E  3420               	retlw	0
  1727  044F  3400               
  1728                           	retlw	01Fh
  1729  0450  341F               	retlw	0
  1730  0451  3400               
  1731                           	retlw	07Fh
  1732  0452  347F               	retlw	0
  1733  0453  3400               
  1734                           	retlw	020h
  1735  0454  3420               	retlw	0
  1736  0455  3400               
  1737                           	retlw	018h
  1738  0456  3418               	retlw	0
  1739  0457  3400               
  1740                           	retlw	020h
  1741  0458  3420               	retlw	0
  1742  0459  3400               
  1743                           	retlw	07Fh
  1744  045A  347F               	retlw	0
  1745  045B  3400               
  1746                           	retlw	063h
  1747  045C  3463               	retlw	0
  1748  045D  3400               
  1749                           	retlw	014h
  1750  045E  3414               	retlw	0
  1751  045F  3400               
  1752                           	retlw	08h
  1753  0460  3408               	retlw	0
  1754  0461  3400               
  1755                           	retlw	014h
  1756  0462  3414               	retlw	0
  1757  0463  3400               
  1758                           	retlw	063h
  1759  0464  3463               	retlw	0
  1760  0465  3400               
  1761                           	retlw	03h
  1762  0466  3403               	retlw	0
  1763  0467  3400               
  1764                           	retlw	04h
  1765  0468  3404               	retlw	0
  1766  0469  3400               
  1767                           	retlw	078h
  1768  046A  3478               	retlw	0
  1769  046B  3400               
  1770                           	retlw	04h
  1771  046C  3404               	retlw	0
  1772  046D  3400               
  1773                           	retlw	03h
  1774  046E  3403               	retlw	0
  1775  046F  3400               
  1776                           	retlw	061h
  1777  0470  3461               	retlw	0
  1778  0471  3400               
  1779                           	retlw	051h
  1780  0472  3451               	retlw	0
  1781  0473  3400               
  1782                           	retlw	049h
  1783  0474  3449               	retlw	0
  1784  0475  3400               
  1785                           	retlw	045h
  1786  0476  3445               	retlw	0
  1787  0477  3400               
  1788                           	retlw	043h
  1789  0478  3443               	retlw	0
  1790  0479  3400               
  1791                           	retlw	low(0)
  1792  047A  3400               	retlw	high(0)
  1793  047B  3400               
  1794                           	retlw	low(0)
  1795  047C  3400               	retlw	high(0)
  1796  047D  3400               
  1797                           	retlw	low(0)
  1798  047E  3400               	retlw	high(0)
  1799  047F  3400               
  1800                           	retlw	low(0)
  1801  0480  3400               	retlw	high(0)
  1802  0481  3400               
  1803                           	retlw	low(0)
  1804  0482  3400               	retlw	high(0)
  1805  0483  3400               
  1806                           	global __end_of_font
  1807                           __end_of_font:
  1808  0484                     	global	_dpowers
  1809                           psect	stringtext
  1810                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  1811                           	line	358
  1812                           _dpowers:
  1813  0484                     	retlw	01h
  1814  0484  3401               	retlw	0
  1815  0485  3400               
  1816                           	retlw	0Ah
  1817  0486  340A               	retlw	0
  1818  0487  3400               
  1819                           	retlw	064h
  1820  0488  3464               	retlw	0
  1821  0489  3400               
  1822                           	retlw	0E8h
  1823  048A  34E8               	retlw	03h
  1824  048B  3403               
  1825                           	retlw	010h
  1826  048C  3410               	retlw	027h
  1827  048D  3427               
  1828                           	global __end_of_dpowers
  1829                           __end_of_dpowers:
  1830  048E                     	global	_step_size
  1831                           psect	stringtext
  1832                           	file	"./Volume.h"
  1833                           	line	5
  1834                           _step_size:
  1835  048E                     	retlw	019h
  1836  048E  3419               	retlw	0
  1837  048F  3400               
  1838                           	global __end_of_step_size
  1839                           __end_of_step_size:
  1840  0490                     	global	_font
  1841                           	global	_dpowers
  1842                           	global	_step_size
  1843                           	global	_ir_input
  1844                           	global	__lastB
  1845                           	global	__lastA
  1846                           	global	_ignore_poll
  1847                           	global	__inputUpdateRequired
  1848                           	global	_lastInput
  1849                           	global	_lastVolume
  1850                           	global	_volume
  1851                           	global	__selectedInput
  1852                           	global	__selectedDisplay
  1853                           	global	_T2CONbits
  1854                           _T2CONbits	set	0x12
  1855  0012                     	global	_ADRESH
  1856                           _ADRESH	set	0x1E
  1857  001E                     	global	_PORTC
  1858                           _PORTC	set	0x7
  1859  0007                     	global	_PORTBbits
  1860                           _PORTBbits	set	0x6
  1861  0006                     	global	_PORTA
  1862                           _PORTA	set	0x5
  1863  0005                     	global	_SSPBUF
  1864                           _SSPBUF	set	0x13
  1865  0013                     	global	_PORTCbits
  1866                           _PORTCbits	set	0x7
  1867  0007                     	global	_PORTDbits
  1868                           _PORTDbits	set	0x8
  1869  0008                     	global	_SSPCON
  1870                           _SSPCON	set	0x14
  1871  0014                     	global	_PIR1bits
  1872                           _PIR1bits	set	0xC
  1873  000C                     	global	_INTCONbits
  1874                           _INTCONbits	set	0xB
  1875  000B                     	global	_ADCON0bits
  1876                           _ADCON0bits	set	0x1F
  1877  001F                     	global	_ADRESL
  1878                           _ADRESL	set	0x9E
  1879  009E                     	global	_PIE1bits
  1880                           _PIE1bits	set	0x8C
  1881  008C                     	global	_ADCON1bits
  1882                           _ADCON1bits	set	0x9F
  1883  009F                     	global	_IOCBbits
  1884                           _IOCBbits	set	0x96
  1885  0096                     	global	_TRISCbits
  1886                           _TRISCbits	set	0x87
  1887  0087                     	global	_TRISEbits
  1888                           _TRISEbits	set	0x89
  1889  0089                     	global	_TRISBbits
  1890                           _TRISBbits	set	0x86
  1891  0086                     	global	_TRISAbits
  1892                           _TRISAbits	set	0x85
  1893  0085                     	global	_OSCCONbits
  1894                           _OSCCONbits	set	0x8F
  1895  008F                     	global	_SSPSTATbits
  1896                           _SSPSTATbits	set	0x94
  1897  0094                     	global	_TRISC
  1898                           _TRISC	set	0x87
  1899  0087                     	global	_TRISD
  1900                           _TRISD	set	0x88
  1901  0088                     	global	_SSPSTAT
  1902                           _SSPSTAT	set	0x94
  1903  0094                     	global	_PR2
  1904                           _PR2	set	0x92
  1905  0092                     	global	_ANSELbits
  1906                           _ANSELbits	set	0x188
  1907  0188                     	global	_ANSELHbits
  1908                           _ANSELHbits	set	0x189
  1909  0189                     	
  1910                           STR_1:	
  1911  0490                     	retlw	73	;'I'
  1912  0490  3449               	retlw	78	;'N'
  1913  0491  344E               	retlw	80	;'P'
  1914  0492  3450               	retlw	85	;'U'
  1915  0493  3455               	retlw	84	;'T'
  1916  0494  3454               	retlw	0
  1917  0495  3400               psect	stringtext
  1918                           	
  1919                           STR_2:	
  1920  0496                     	retlw	86	;'V'
  1921  0496  3456               	retlw	79	;'O'
  1922  0497  344F               	retlw	76	;'L'
  1923  0498  344C               	retlw	0
  1924  0499  3400               psect	stringtext
  1925                           	
  1926                           STR_3:	
  1927  049A                     	retlw	37	;'%'
  1928  049A  3425               	retlw	100	;'d'
  1929  049B  3464               	retlw	0
  1930  049C  3400               psect	stringtext
  1931                           ; #config settings
  1932                           global __CFG_FOSC$INTRC_CLKOUT
  1933                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1934  0000                     global __CFG_WDTE$OFF
  1935                           __CFG_WDTE$OFF equ 0x0
  1936  0000                     global __CFG_PWRTE$OFF
  1937                           __CFG_PWRTE$OFF equ 0x0
  1938  0000                     global __CFG_MCLRE$OFF
  1939                           __CFG_MCLRE$OFF equ 0x0
  1940  0000                     global __CFG_CP$OFF
  1941                           __CFG_CP$OFF equ 0x0
  1942  0000                     global __CFG_CPD$OFF
  1943                           __CFG_CPD$OFF equ 0x0
  1944  0000                     global __CFG_BOREN$ON
  1945                           __CFG_BOREN$ON equ 0x0
  1946  0000                     global __CFG_IESO$OFF
  1947                           __CFG_IESO$OFF equ 0x0
  1948  0000                     global __CFG_FCMEN$OFF
  1949                           __CFG_FCMEN$OFF equ 0x0
  1950  0000                     global __CFG_LVP$OFF
  1951                           __CFG_LVP$OFF equ 0x0
  1952  0000                     global __CFG_BOR4V$BOR21V
  1953                           __CFG_BOR4V$BOR21V equ 0x0
  1954  0000                     global __CFG_WRT$OFF
  1955                           __CFG_WRT$OFF equ 0x0
  1956  0000                     	file	"/tmp/xcXmNyhfY"
  1957                           	line	#
  1958                           psect cinit,class=CODE,delta=2
  1959                           global start_initialization
  1960                           start_initialization:
  1961  0015                     
  1962                           global __initialization
  1963                           __initialization:
  1964  0015                     psect	bssBANK0,class=BANK0,space=1,noexec
  1965                           global __pbssBANK0
  1966                           __pbssBANK0:
  1967  005A                     _ir_input:
  1968  005A                            ds      4
  1969  005A                     
  1970                           __lastB:
  1971  005E                            ds      2
  1972  005E                     
  1973                           __lastA:
  1974  0060                            ds      2
  1975  0060                     
  1976                           _ignore_poll:
  1977  0062                            ds      1
  1978  0062                     
  1979                           __inputUpdateRequired:
  1980  0063                            ds      1
  1981  0063                     
  1982                           psect	bssBANK1,class=BANK1,space=1,noexec
  1983                           global __pbssBANK1
  1984                           __pbssBANK1:
  1985  00C5                     _lastInput:
  1986  00C5                            ds      2
  1987  00C5                     
  1988                           _lastVolume:
  1989  00C7                            ds      2
  1990  00C7                     
  1991                           _volume:
  1992  00C9                            ds      2
  1993  00C9                     
  1994                           __selectedInput:
  1995  00CB                            ds      2
  1996  00CB                     
  1997                           __selectedDisplay:
  1998  00CD                            ds      1
  1999  00CD                     
  2000                           	file	"/tmp/xcXmNyhfY"
  2001                           	line	#
  2002                           ; Clear objects allocated to BANK0
  2003                           psect cinit,class=CODE,delta=2,merge=1
  2004                           	bcf	status, 5	;RP0=0, select bank0
  2005  0015  1283               	bcf	status, 6	;RP1=0, select bank0
  2006  0016  1303               	clrf	((__pbssBANK0)+0)&07Fh
  2007  0017  01DA               	clrf	((__pbssBANK0)+1)&07Fh
  2008  0018  01DB               	clrf	((__pbssBANK0)+2)&07Fh
  2009  0019  01DC               	clrf	((__pbssBANK0)+3)&07Fh
  2010  001A  01DD               	clrf	((__pbssBANK0)+4)&07Fh
  2011  001B  01DE               	clrf	((__pbssBANK0)+5)&07Fh
  2012  001C  01DF               	clrf	((__pbssBANK0)+6)&07Fh
  2013  001D  01E0               	clrf	((__pbssBANK0)+7)&07Fh
  2014  001E  01E1               	clrf	((__pbssBANK0)+8)&07Fh
  2015  001F  01E2               	clrf	((__pbssBANK0)+9)&07Fh
  2016  0020  01E3               ; Clear objects allocated to BANK1
  2017                           psect cinit,class=CODE,delta=2,merge=1
  2018                           	bsf	status, 5	;RP0=1, select bank1
  2019  0021  1683               	bcf	status, 6	;RP1=0, select bank1
  2020  0022  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2021  0023  01C5               	clrf	((__pbssBANK1)+1)&07Fh
  2022  0024  01C6               	clrf	((__pbssBANK1)+2)&07Fh
  2023  0025  01C7               	clrf	((__pbssBANK1)+3)&07Fh
  2024  0026  01C8               	clrf	((__pbssBANK1)+4)&07Fh
  2025  0027  01C9               	clrf	((__pbssBANK1)+5)&07Fh
  2026  0028  01CA               	clrf	((__pbssBANK1)+6)&07Fh
  2027  0029  01CB               	clrf	((__pbssBANK1)+7)&07Fh
  2028  002A  01CC               	clrf	((__pbssBANK1)+8)&07Fh
  2029  002B  01CD               psect cinit,class=CODE,delta=2,merge=1
  2030                           global end_of_initialization,__end_of__initialization
  2031                           
  2032                           ;End of C runtime variable initialization code
  2033                           
  2034                           end_of_initialization:
  2035  002C                     __end_of__initialization:
  2036  002C                     clrf status
  2037  002C  0183               ljmp _main	;jump to C main() function
  2038  002D  120A  158A  2ADA   psect	cstackBANK1,class=BANK1,space=1,noexec
  2039                           global __pcstackBANK1
  2040                           __pcstackBANK1:
  2041  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2042  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2043  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2044  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2045  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2046  00A0                     	global	?___wmul
  2047                           ?___wmul:	; 2 bytes @ 0x0
  2048  00A0                     	global	?___lwdiv
  2049                           ?___lwdiv:	; 2 bytes @ 0x0
  2050  00A0                     	global	spiWrite@data
  2051                           spiWrite@data:	; 1 bytes @ 0x0
  2052  00A0                     	global	___wmul@multiplier
  2053                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2054  00A0                     	global	___lwdiv@divisor
  2055                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2056  00A0                     	ds	1
  2057  00A0                     ??_config:	; 1 bytes @ 0x1
  2058  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2059  00A1                     	ds	1
  2060  00A1                     	global	___wmul@multiplicand
  2061                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2062  00A2                     	global	___lwdiv@dividend
  2063                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2064  00A2                     	ds	2
  2065  00A2                     ??___wmul:	; 1 bytes @ 0x4
  2066  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2067  00A4                     	global	___wmul@product
  2068                           ___wmul@product:	; 2 bytes @ 0x4
  2069  00A4                     	ds	1
  2070  00A4                     	global	___lwdiv@quotient
  2071                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2072  00A5                     	ds	1
  2073  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2074  00A6                     	global	write_font@fontPos
  2075                           write_font@fontPos:	; 2 bytes @ 0x6
  2076  00A6                     	ds	1
  2077  00A6                     	global	___lwdiv@counter
  2078                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2079  00A7                     	ds	1
  2080  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2081  00A8                     	global	?___lwmod
  2082                           ?___lwmod:	; 2 bytes @ 0x8
  2083  00A8                     	global	___lwmod@divisor
  2084                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2085  00A8                     	ds	2
  2086  00A8                     	global	___lwmod@dividend
  2087                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2088  00AA                     	ds	2
  2089  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2090  00AC                     	ds	1
  2091  00AC                     	global	___lwmod@counter
  2092                           ___lwmod@counter:	; 1 bytes @ 0xD
  2093  00AD                     	ds	1
  2094  00AD                     	global	?_sprintf
  2095                           ?_sprintf:	; 2 bytes @ 0xE
  2096  00AE                     	global	write_font@x
  2097                           write_font@x:	; 2 bytes @ 0xE
  2098  00AE                     	global	sprintf@f
  2099                           sprintf@f:	; 2 bytes @ 0xE
  2100  00AE                     	ds	2
  2101  00AE                     ?_write_space:	; 1 bytes @ 0x10
  2102  00B0                     ??_write_char:	; 1 bytes @ 0x10
  2103  00B0                     	global	write_space@count
  2104                           write_space@count:	; 2 bytes @ 0x10
  2105  00B0                     	global	write_char@pos
  2106                           write_char@pos:	; 2 bytes @ 0x10
  2107  00B0                     	ds	2
  2108  00B0                     ??_write_space:	; 1 bytes @ 0x12
  2109  00B2                     ??_sprintf:	; 1 bytes @ 0x12
  2110  00B2                     	global	write_char@c
  2111                           write_char@c:	; 1 bytes @ 0x12
  2112  00B2                     	ds	1
  2113  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2114  00B3                     	global	write_space@i
  2115                           write_space@i:	; 2 bytes @ 0x13
  2116  00B3                     	global	write_text@text
  2117                           write_text@text:	; 2 bytes @ 0x13
  2118  00B3                     	ds	2
  2119  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2120  00B5                     	global	write_text@c
  2121                           write_text@c:	; 2 bytes @ 0x15
  2122  00B5                     	ds	1
  2123  00B5                     	global	sprintf@ap
  2124                           sprintf@ap:	; 1 bytes @ 0x16
  2125  00B6                     	ds	1
  2126  00B6                     	global	sprintf@flag
  2127                           sprintf@flag:	; 1 bytes @ 0x17
  2128  00B7                     	ds	1
  2129  00B7                     	global	sprintf@prec
  2130                           sprintf@prec:	; 1 bytes @ 0x18
  2131  00B8                     	ds	1
  2132  00B8                     	global	sprintf@val
  2133                           sprintf@val:	; 2 bytes @ 0x19
  2134  00B9                     	ds	2
  2135  00B9                     	global	sprintf@sp
  2136                           sprintf@sp:	; 1 bytes @ 0x1B
  2137  00BB                     	ds	1
  2138  00BB                     	global	sprintf@c
  2139                           sprintf@c:	; 1 bytes @ 0x1C
  2140  00BC                     	ds	1
  2141  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2142  00BD                     	global	write_int@number
  2143                           write_int@number:	; 2 bytes @ 0x1D
  2144  00BD                     	ds	2
  2145  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2146  00BF                     	global	write_int@num
  2147                           write_int@num:	; 2 bytes @ 0x1F
  2148  00BF                     	ds	2
  2149  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2150  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2151  00C1                     	global	update_volume@spaces
  2152                           update_volume@spaces:	; 2 bytes @ 0x21
  2153  00C1                     	ds	2
  2154  00C1                     ??_main:	; 1 bytes @ 0x23
  2155  00C3                     	ds	2
  2156  00C3                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2157                           global __pcstackCOMMON
  2158                           __pcstackCOMMON:
  2159  0070                     ?_config:	; 1 bytes @ 0x0
  2160  0070                     ?_update_volume:	; 1 bytes @ 0x0
  2161  0070                     ?_update_input:	; 1 bytes @ 0x0
  2162  0070                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2163  0070                     ?_handle_rotary:	; 1 bytes @ 0x0
  2164  0070                     ??_handle_rotary:	; 1 bytes @ 0x0
  2165  0070                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2166  0070                     ?_poll_receiver:	; 1 bytes @ 0x0
  2167  0070                     ??_poll_receiver:	; 1 bytes @ 0x0
  2168  0070                     ?_spiWrite:	; 1 bytes @ 0x0
  2169  0070                     ?_write_char:	; 1 bytes @ 0x0
  2170  0070                     ?_display_write_start:	; 1 bytes @ 0x0
  2171  0070                     ?_display_write_end:	; 1 bytes @ 0x0
  2172  0070                     ?_init_adc:	; 1 bytes @ 0x0
  2173  0070                     ?_main:	; 1 bytes @ 0x0
  2174  0070                     ?_isr:	; 1 bytes @ 0x0
  2175  0070                     ?_display_init:	; 1 bytes @ 0x0
  2176  0070                     	global	?i1___wmul
  2177                           ?i1___wmul:	; 2 bytes @ 0x0
  2178  0070                     	global	?i1___lwdiv
  2179                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2180  0070                     	global	?___xxtofl
  2181                           ?___xxtofl:	; 4 bytes @ 0x0
  2182  0070                     	global	i1___wmul@multiplier
  2183                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2184  0070                     	global	i1___lwdiv@divisor
  2185                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2186  0070                     	global	___xxtofl@val
  2187                           ___xxtofl@val:	; 4 bytes @ 0x0
  2188  0070                     	ds	2
  2189  0070                     	global	i1___wmul@multiplicand
  2190                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2191  0072                     	global	i1___lwdiv@dividend
  2192                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2193  0072                     	ds	1
  2194  0072                     	global	handle_rotary@portA
  2195                           handle_rotary@portA:	; 2 bytes @ 0x3
  2196  0073                     	ds	1
  2197  0073                     ??___xxtofl:	; 1 bytes @ 0x4
  2198  0074                     ??i1___wmul:	; 1 bytes @ 0x4
  2199  0074                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2200  0074                     	global	i1___wmul@product
  2201                           i1___wmul@product:	; 2 bytes @ 0x4
  2202  0074                     	ds	1
  2203  0074                     	global	handle_rotary@portB
  2204                           handle_rotary@portB:	; 2 bytes @ 0x5
  2205  0075                     	global	i1___lwdiv@quotient
  2206                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2207  0075                     	ds	2
  2208  0075                     	global	i1___lwdiv@counter
  2209                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2210  0077                     	ds	1
  2211  0077                     	global	___xxtofl@sign
  2212                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2213  0078                     	ds	1
  2214  0078                     	global	___xxtofl@exp
  2215                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2216  0079                     	ds	1
  2217  0079                     	global	___xxtofl@arg
  2218                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2219  007A                     	ds	4
  2220  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2221                           global __pcstackBANK0
  2222                           __pcstackBANK0:
  2223  0020                     	global	?___fladd
  2224                           ?___fladd:	; 4 bytes @ 0x0
  2225  0020                     	global	___fladd@b
  2226                           ___fladd@b:	; 4 bytes @ 0x0
  2227  0020                     	ds	4
  2228  0020                     	global	___fladd@a
  2229                           ___fladd@a:	; 4 bytes @ 0x4
  2230  0024                     	ds	4
  2231  0024                     ??___fladd:	; 1 bytes @ 0x8
  2232  0028                     	ds	12
  2233  0028                     	global	___fladd@signs
  2234                           ___fladd@signs:	; 1 bytes @ 0x14
  2235  0034                     	ds	1
  2236  0034                     	global	___fladd@aexp
  2237                           ___fladd@aexp:	; 1 bytes @ 0x15
  2238  0035                     	ds	1
  2239  0035                     	global	___fladd@bexp
  2240                           ___fladd@bexp:	; 1 bytes @ 0x16
  2241  0036                     	ds	1
  2242  0036                     	global	___fladd@grs
  2243                           ___fladd@grs:	; 1 bytes @ 0x17
  2244  0037                     	ds	1
  2245  0037                     	global	?___fltol
  2246                           ?___fltol:	; 4 bytes @ 0x18
  2247  0038                     	global	___fltol@f1
  2248                           ___fltol@f1:	; 4 bytes @ 0x18
  2249  0038                     	ds	4
  2250  0038                     ??___fltol:	; 1 bytes @ 0x1C
  2251  003C                     	ds	5
  2252  003C                     	global	___fltol@sign1
  2253                           ___fltol@sign1:	; 1 bytes @ 0x21
  2254  0041                     	ds	1
  2255  0041                     	global	___fltol@exp1
  2256                           ___fltol@exp1:	; 1 bytes @ 0x22
  2257  0042                     	ds	1
  2258  0042                     	global	?_is_deadzone
  2259                           ?_is_deadzone:	; 2 bytes @ 0x23
  2260  0043                     	global	is_deadzone@currentStep
  2261                           is_deadzone@currentStep:	; 2 bytes @ 0x23
  2262  0043                     	ds	2
  2263  0043                     	global	is_deadzone@adcResult
  2264                           is_deadzone@adcResult:	; 2 bytes @ 0x25
  2265  0045                     	ds	2
  2266  0045                     ??_is_deadzone:	; 1 bytes @ 0x27
  2267  0047                     	ds	2
  2268  0047                     	global	is_deadzone@deadzoneLow
  2269                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x29
  2270  0049                     	ds	2
  2271  0049                     	global	is_deadzone@deadzoneHigh
  2272                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2B
  2273  004B                     	ds	2
  2274  004B                     	global	_is_deadzone$863
  2275                           _is_deadzone$863:	; 1 bytes @ 0x2D
  2276  004D                     	ds	1
  2277  004D                     	global	is_deadzone@turnPoint
  2278                           is_deadzone@turnPoint:	; 2 bytes @ 0x2E
  2279  004E                     	ds	2
  2280  004E                     ??_handle_potmeter:	; 1 bytes @ 0x30
  2281  0050                     	ds	2
  2282  0050                     	global	handle_potmeter@currentStep
  2283                           handle_potmeter@currentStep:	; 2 bytes @ 0x32
  2284  0052                     	ds	2
  2285  0052                     	global	handle_potmeter@ad_result
  2286                           handle_potmeter@ad_result:	; 2 bytes @ 0x34
  2287  0054                     	ds	2
  2288  0054                     ??_isr:	; 1 bytes @ 0x36
  2289  0056                     	ds	4
  2290  0056                     ;!
  2291                           ;!Data Sizes:
  2292                           ;!    Strings     13
  2293                           ;!    Constant    382
  2294                           ;!    Data        0
  2295                           ;!    BSS         19
  2296                           ;!    Persistent  0
  2297                           ;!    Stack       0
  2298                           ;!
  2299                           ;!Auto Spaces:
  2300                           ;!    Space          Size  Autos    Used
  2301                           ;!    COMMON           14     14      14
  2302                           ;!    BANK0            80     58      68
  2303                           ;!    BANK1            80     37      46
  2304                           ;!    BANK3            96      0       0
  2305                           ;!    BANK2            96      0       0
  2306                           
  2307                           ;!
  2308                           ;!Pointer List with Targets:
  2309                           ;!
  2310                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2311                           ;!		 -> STR_3(CODE[3]), 
  2312                           ;!
  2313                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2314                           ;!		 -> write_int@num(BANK1[2]), 
  2315                           ;!
  2316                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2317                           ;!		 -> ?_sprintf(BANK1[2]), 
  2318                           ;!
  2319                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2320                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2321                           ;!
  2322                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2323                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2324                           ;!
  2325                           
  2326                           
  2327                           ;!
  2328                           ;!Critical Paths under _main in COMMON
  2329                           ;!
  2330                           ;!    None.
  2331                           ;!
  2332                           ;!Critical Paths under _isr in COMMON
  2333                           ;!
  2334                           ;!    _is_deadzone->___xxtofl
  2335                           ;!    ___fltol->___xxtofl
  2336                           ;!    ___fladd->___xxtofl
  2337                           ;!
  2338                           ;!Critical Paths under _main in BANK0
  2339                           ;!
  2340                           ;!    None.
  2341                           ;!
  2342                           ;!Critical Paths under _isr in BANK0
  2343                           ;!
  2344                           ;!    _isr->_handle_potmeter
  2345                           ;!    _handle_potmeter->_is_deadzone
  2346                           ;!    _is_deadzone->___fltol
  2347                           ;!    ___fltol->___fladd
  2348                           ;!
  2349                           ;!Critical Paths under _main in BANK1
  2350                           ;!
  2351                           ;!    _main->_update_volume
  2352                           ;!    _update_volume->_write_int
  2353                           ;!    _update_input->_write_int
  2354                           ;!    _write_space->_write_font
  2355                           ;!    _write_int->_sprintf
  2356                           ;!    _write_text->_write_char
  2357                           ;!    _write_char->_write_font
  2358                           ;!    _write_font->___wmul
  2359                           ;!    _sprintf->___lwmod
  2360                           ;!    ___lwmod->___lwdiv
  2361                           ;!    _display_init->_spiWrite
  2362                           ;!
  2363                           ;!Critical Paths under _isr in BANK1
  2364                           ;!
  2365                           ;!    None.
  2366                           ;!
  2367                           ;!Critical Paths under _main in BANK3
  2368                           ;!
  2369                           ;!    None.
  2370                           ;!
  2371                           ;!Critical Paths under _isr in BANK3
  2372                           ;!
  2373                           ;!    None.
  2374                           ;!
  2375                           ;!Critical Paths under _main in BANK2
  2376                           ;!
  2377                           ;!    None.
  2378                           ;!
  2379                           ;!Critical Paths under _isr in BANK2
  2380                           ;!
  2381                           ;!    None.
  2382                           
  2383 ;;
  2384 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2385 ;;
  2386                           
  2387                           ;!
  2388                           ;!Call Graph Tables:
  2389                           ;!
  2390                           ;! ---------------------------------------------------------------------------------
  2391                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2392                           ;! ---------------------------------------------------------------------------------
  2393                           ;! (0) _main                                                 2     2      0   13690
  2394                           ;!                                             35 BANK1      2     2      0
  2395                           ;!              _activateSelectedRelay
  2396                           ;!                             _config
  2397                           ;!                       _update_input
  2398                           ;!                      _update_volume
  2399                           ;! ---------------------------------------------------------------------------------
  2400                           ;! (1) _update_volume                                        2     2      0    6846
  2401                           ;!                                             33 BANK1      2     2      0
  2402                           ;!                          _write_int
  2403                           ;!                        _write_space
  2404                           ;!                         _write_text
  2405                           ;! ---------------------------------------------------------------------------------
  2406                           ;! (1) _update_input                                         0     0      0    6822
  2407                           ;!                          _write_int
  2408                           ;!                        _write_space
  2409                           ;!                         _write_text
  2410                           ;! ---------------------------------------------------------------------------------
  2411                           ;! (2) _write_space                                          5     3      2    1110
  2412                           ;!                                             16 BANK1      5     3      2
  2413                           ;!                         _write_font
  2414                           ;! ---------------------------------------------------------------------------------
  2415                           ;! (2) _write_int                                            4     2      2    4237
  2416                           ;!                                             29 BANK1      4     2      2
  2417                           ;!                            _sprintf
  2418                           ;!                         _write_char
  2419                           ;!                         _write_text
  2420                           ;! ---------------------------------------------------------------------------------
  2421                           ;! (2) _write_text                                           4     2      2    1475
  2422                           ;!                                             19 BANK1      4     2      2
  2423                           ;!                         _write_char
  2424                           ;! ---------------------------------------------------------------------------------
  2425                           ;! (3) _write_char                                           3     3      0    1179
  2426                           ;!                                             16 BANK1      3     3      0
  2427                           ;!                         _write_font
  2428                           ;! ---------------------------------------------------------------------------------
  2429                           ;! (4) _write_font                                          10     8      2     912
  2430                           ;!                                              6 BANK1     10     8      2
  2431                           ;!                             ___wmul
  2432                           ;!                  _display_write_end
  2433                           ;!                _display_write_start
  2434                           ;!                           _spiWrite
  2435                           ;! ---------------------------------------------------------------------------------
  2436                           ;! (5) _display_write_start                                  0     0      0       0
  2437                           ;! ---------------------------------------------------------------------------------
  2438                           ;! (5) _display_write_end                                    0     0      0       0
  2439                           ;! ---------------------------------------------------------------------------------
  2440                           ;! (5) ___wmul                                               6     2      4     496
  2441                           ;!                                              0 BANK1      6     2      4
  2442                           ;! ---------------------------------------------------------------------------------
  2443                           ;! (3) _sprintf                                             23    19      4    1311
  2444                           ;!                                             14 BANK1     15    11      4
  2445                           ;!                            ___lwdiv
  2446                           ;!                            ___lwmod
  2447                           ;! ---------------------------------------------------------------------------------
  2448                           ;! (4) ___lwmod                                              6     2      4     311
  2449                           ;!                                              8 BANK1      6     2      4
  2450                           ;!                            ___lwdiv (ARG)
  2451                           ;! ---------------------------------------------------------------------------------
  2452                           ;! (4) ___lwdiv                                              8     4      4     414
  2453                           ;!                                              0 BANK1      8     4      4
  2454                           ;! ---------------------------------------------------------------------------------
  2455                           ;! (1) _config                                               3     3      0      22
  2456                           ;!                                              1 BANK1      3     3      0
  2457                           ;!                       _display_init
  2458                           ;!                           _init_adc
  2459                           ;! ---------------------------------------------------------------------------------
  2460                           ;! (2) _init_adc                                             0     0      0       0
  2461                           ;! ---------------------------------------------------------------------------------
  2462                           ;! (2) _display_init                                         0     0      0      22
  2463                           ;!                           _spiWrite
  2464                           ;! ---------------------------------------------------------------------------------
  2465                           ;! (5) _spiWrite                                             1     1      0      22
  2466                           ;!                                              0 BANK1      1     1      0
  2467                           ;! ---------------------------------------------------------------------------------
  2468                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2469                           ;! ---------------------------------------------------------------------------------
  2470                           ;! Estimated maximum stack depth 5
  2471                           ;! ---------------------------------------------------------------------------------
  2472                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2473                           ;! ---------------------------------------------------------------------------------
  2474                           ;! (7) _isr                                                  4     4      0    4228
  2475                           ;!                                             54 BANK0      4     4      0
  2476                           ;!                    _handle_potmeter
  2477                           ;!                      _handle_rotary
  2478                           ;!                      _poll_receiver
  2479                           ;! ---------------------------------------------------------------------------------
  2480                           ;! (8) _poll_receiver                                        8     8      0       0
  2481                           ;!                                              0 COMMON     8     8      0
  2482                           ;! ---------------------------------------------------------------------------------
  2483                           ;! (8) _handle_rotary                                        7     7      0     134
  2484                           ;!                                              0 COMMON     7     7      0
  2485                           ;! ---------------------------------------------------------------------------------
  2486                           ;! (8) _handle_potmeter                                      6     6      0    4094
  2487                           ;!                                             48 BANK0      6     6      0
  2488                           ;!                        _is_deadzone
  2489                           ;!                          i1___lwdiv
  2490                           ;! ---------------------------------------------------------------------------------
  2491                           ;! (9) i1___lwdiv                                            8     4      4     214
  2492                           ;!                                              0 COMMON     8     4      4
  2493                           ;! ---------------------------------------------------------------------------------
  2494                           ;! (9) _is_deadzone                                         13     9      4    3746
  2495                           ;!                                             35 BANK0     13     9      4
  2496                           ;!                            ___fladd
  2497                           ;!                            ___fltol
  2498                           ;!                           ___xxtofl
  2499                           ;!                           i1___wmul
  2500                           ;! ---------------------------------------------------------------------------------
  2501                           ;! (10) i1___wmul                                            6     2      4     144
  2502                           ;!                                              0 COMMON     6     2      4
  2503                           ;! ---------------------------------------------------------------------------------
  2504                           ;! (10) ___xxtofl                                           14    10      4     474
  2505                           ;!                                              0 COMMON    14    10      4
  2506                           ;! ---------------------------------------------------------------------------------
  2507                           ;! (10) ___fltol                                            11     7      4     381
  2508                           ;!                                             24 BANK0     11     7      4
  2509                           ;!                            ___fladd (ARG)
  2510                           ;!                           ___xxtofl (ARG)
  2511                           ;! ---------------------------------------------------------------------------------
  2512                           ;! (10) ___fladd                                            24    16      8    2414
  2513                           ;!                                              0 BANK0     24    16      8
  2514                           ;!                           ___xxtofl (ARG)
  2515                           ;! ---------------------------------------------------------------------------------
  2516                           ;! Estimated maximum stack depth 10
  2517                           ;! ---------------------------------------------------------------------------------
  2518                           ;!
  2519                           ;! Call Graph Graphs:
  2520                           ;!
  2521                           ;! _main (ROOT)
  2522                           ;!   _activateSelectedRelay
  2523                           ;!   _config
  2524                           ;!     _display_init
  2525                           ;!       _spiWrite
  2526                           ;!     _init_adc
  2527                           ;!   _update_input
  2528                           ;!     _write_int
  2529                           ;!       _sprintf
  2530                           ;!         ___lwdiv
  2531                           ;!         ___lwmod
  2532                           ;!           ___lwdiv (ARG)
  2533                           ;!       _write_char
  2534                           ;!         _write_font
  2535                           ;!           ___wmul
  2536                           ;!           _display_write_end
  2537                           ;!           _display_write_start
  2538                           ;!           _spiWrite
  2539                           ;!       _write_text
  2540                           ;!         _write_char
  2541                           ;!           _write_font
  2542                           ;!             ___wmul
  2543                           ;!             _display_write_end
  2544                           ;!             _display_write_start
  2545                           ;!             _spiWrite
  2546                           ;!     _write_space
  2547                           ;!       _write_font
  2548                           ;!         ___wmul
  2549                           ;!         _display_write_end
  2550                           ;!         _display_write_start
  2551                           ;!         _spiWrite
  2552                           ;!     _write_text
  2553                           ;!       _write_char
  2554                           ;!         _write_font
  2555                           ;!           ___wmul
  2556                           ;!           _display_write_end
  2557                           ;!           _display_write_start
  2558                           ;!           _spiWrite
  2559                           ;!   _update_volume
  2560                           ;!     _write_int
  2561                           ;!       _sprintf
  2562                           ;!         ___lwdiv
  2563                           ;!         ___lwmod
  2564                           ;!           ___lwdiv (ARG)
  2565                           ;!       _write_char
  2566                           ;!         _write_font
  2567                           ;!           ___wmul
  2568                           ;!           _display_write_end
  2569                           ;!           _display_write_start
  2570                           ;!           _spiWrite
  2571                           ;!       _write_text
  2572                           ;!         _write_char
  2573                           ;!           _write_font
  2574                           ;!             ___wmul
  2575                           ;!             _display_write_end
  2576                           ;!             _display_write_start
  2577                           ;!             _spiWrite
  2578                           ;!     _write_space
  2579                           ;!       _write_font
  2580                           ;!         ___wmul
  2581                           ;!         _display_write_end
  2582                           ;!         _display_write_start
  2583                           ;!         _spiWrite
  2584                           ;!     _write_text
  2585                           ;!       _write_char
  2586                           ;!         _write_font
  2587                           ;!           ___wmul
  2588                           ;!           _display_write_end
  2589                           ;!           _display_write_start
  2590                           ;!           _spiWrite
  2591                           ;!
  2592                           ;! _isr (ROOT)
  2593                           ;!   _handle_potmeter
  2594                           ;!     _is_deadzone
  2595                           ;!       ___fladd
  2596                           ;!         ___xxtofl (ARG)
  2597                           ;!       ___fltol
  2598                           ;!         ___fladd (ARG)
  2599                           ;!           ___xxtofl (ARG)
  2600                           ;!         ___xxtofl (ARG)
  2601                           ;!       ___xxtofl
  2602                           ;!       i1___wmul
  2603                           ;!     i1___lwdiv
  2604                           ;!   _handle_rotary
  2605                           ;!   _poll_receiver
  2606                           ;!
  2607                           
  2608                           ;! Address spaces:
  2609                           
  2610                           ;!Name               Size   Autos  Total    Cost      Usage
  2611                           ;!BITCOMMON            E      0       0       0        0.0%
  2612                           ;!EEDATA             100      0       0       0        0.0%
  2613                           ;!NULL                 0      0       0       0        0.0%
  2614                           ;!CODE                 0      0       0       0        0.0%
  2615                           ;!COMMON               E      E       E       1      100.0%
  2616                           ;!BITSFR0              0      0       0       1        0.0%
  2617                           ;!SFR0                 0      0       0       1        0.0%
  2618                           ;!BITSFR1              0      0       0       2        0.0%
  2619                           ;!SFR1                 0      0       0       2        0.0%
  2620                           ;!STACK                0      0       0       2        0.0%
  2621                           ;!ABS                  0      0      80       3        0.0%
  2622                           ;!BITBANK0            50      0       0       4        0.0%
  2623                           ;!BITSFR3              0      0       0       4        0.0%
  2624                           ;!SFR3                 0      0       0       4        0.0%
  2625                           ;!BANK0               50     3A      44       5       85.0%
  2626                           ;!BITSFR2              0      0       0       5        0.0%
  2627                           ;!SFR2                 0      0       0       5        0.0%
  2628                           ;!BITBANK1            50      0       0       6        0.0%
  2629                           ;!BANK1               50     25      2E       7       57.5%
  2630                           ;!BITBANK3            60      0       0       8        0.0%
  2631                           ;!BANK3               60      0       0       9        0.0%
  2632                           ;!BITBANK2            60      0       0      10        0.0%
  2633                           ;!BANK2               60      0       0      11        0.0%
  2634                           ;!DATA                 0      0      80      12        0.0%
  2635                           
  2636                           	global	_main
  2637                           
  2638 ;; *************** function _main *****************
  2639 ;; Defined at:
  2640 ;;		line 28 in file "main.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : B00/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0
  2656 ;;      Temps:          0       0       2       0       0
  2657 ;;      Totals:         0       0       2       0       0
  2658 ;;Total ram usage:        2 bytes
  2659 ;; Hardware stack levels required when called:   10
  2660 ;; This function calls:
  2661 ;;		_activateSelectedRelay
  2662 ;;		_config
  2663 ;;		_update_input
  2664 ;;		_update_volume
  2665 ;; This function is called by:
  2666 ;;		Startup code after reset
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2670                           	file	"main.c"
  2671                           	line	28
  2672                           global __pmaintext
  2673                           __pmaintext:	;psect for function _main
  2674  0ADA                     psect	maintext
  2675                           	file	"main.c"
  2676                           	line	28
  2677                           	global	__size_of_main
  2678                           	__size_of_main	equ	__end_of_main-_main
  2679  002C                     	
  2680                           _main:	
  2681  0ADA                     ;incstack = 0
  2682 ;; hardware stack exceeded
  2683                           	opt	stack 0
  2684                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2685                           	line	30
  2686                           	
  2687                           l2685:	
  2688  0ADA                     ;main.c: 30:     config();
  2689                           	fcall	_config
  2690  0ADA  120A  158A  2639  120A  158A  	goto	l2687
  2691  0ADF  2AE0               	line	33
  2692                           ;main.c: 33:     while(1)
  2693                           	
  2694                           l53:	
  2695  0AE0                     	line	35
  2696                           	
  2697                           l2687:	
  2698  0AE0                     ;main.c: 34:     {;main.c: 35:         if (!ADCON0bits.GO)
  2699                           	bcf	status, 5	;RP0=0, select bank0
  2700  0AE0  1283               	bcf	status, 6	;RP1=0, select bank0
  2701  0AE1  1303               	btfsc	(31),1	;volatile
  2702  0AE2  189F               	goto	u2971
  2703  0AE3  2AE5               	goto	u2970
  2704  0AE4  2AE6               u2971:
  2705  0AE5                     	goto	l2691
  2706  0AE5  2AE8               u2970:
  2707  0AE6                     	line	36
  2708                           	
  2709                           l2689:	
  2710  0AE6                     ;main.c: 36:             ADCON0bits.GO = 1;
  2711                           	bsf	(31),1	;volatile
  2712  0AE6  149F               	goto	l2691
  2713  0AE7  2AE8               	
  2714                           l54:	
  2715  0AE8                     	line	38
  2716                           	
  2717                           l2691:	
  2718  0AE8                     ;main.c: 38:         update_volume();
  2719                           	fcall	_update_volume
  2720  0AE8  120A  158A  2588  120A  158A  	line	39
  2721                           ;main.c: 39:         update_input();
  2722                           	fcall	_update_input
  2723  0AED  120A  158A  23AB  120A  158A  	line	40
  2724                           	
  2725                           l2693:	
  2726  0AF2                     ;main.c: 40:         activateSelectedRelay();
  2727                           	fcall	_activateSelectedRelay
  2728  0AF2  120A  158A  2372  120A  158A  	line	42
  2729                           	
  2730                           l2695:	
  2731  0AF7                     ;main.c: 42:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2732                           	opt asmopt_push
  2733                           opt asmopt_off
  2734                           movlw	13
  2735  0AF7  300D               	bsf	status, 5	;RP0=1, select bank1
  2736  0AF8  1683               	bcf	status, 6	;RP1=0, select bank1
  2737  0AF9  1303               movwf	((??_main+0)^080h+0+1),f
  2738  0AFA  00C4               	movlw	251
  2739  0AFB  30FB               movwf	((??_main+0)^080h+0),f
  2740  0AFC  00C3               	u3097:
  2741  0AFD                     decfsz	((??_main+0)^080h+0),f
  2742  0AFD  0BC3               	goto	u3097
  2743  0AFE  2AFD               	decfsz	((??_main+0)^080h+0+1),f
  2744  0AFF  0BC4               	goto	u3097
  2745  0B00  2AFD               opt asmopt_pop
  2746                           
  2747                           	goto	l2687
  2748  0B01  2AE0               	line	44
  2749                           ;main.c: 44:     }
  2750                           	
  2751                           l55:	
  2752  0B02                     	goto	l2687
  2753  0B02  2AE0               	
  2754                           l56:	
  2755  0B03                     	line	46
  2756                           	
  2757                           l57:	
  2758  0B03                     	global	start
  2759                           	ljmp	start
  2760  0B03  120A  118A  2812   	opt stack 0
  2761                           GLOBAL	__end_of_main
  2762                           	__end_of_main:
  2763  0B06                     	signat	_main,89
  2764                           	global	_update_volume
  2765                           
  2766 ;; *************** function _update_volume *****************
  2767 ;; Defined at:
  2768 ;;		line 150 in file "Display.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;		None
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  spaces          2   33[BANK1 ] int 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      void 
  2775 ;; Registers used:
  2776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2782 ;;      Params:         0       0       0       0       0
  2783 ;;      Locals:         0       0       2       0       0
  2784 ;;      Temps:          0       0       0       0       0
  2785 ;;      Totals:         0       0       2       0       0
  2786 ;;Total ram usage:        2 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    9
  2789 ;; This function calls:
  2790 ;;		_write_int
  2791 ;;		_write_space
  2792 ;;		_write_text
  2793 ;; This function is called by:
  2794 ;;		_main
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2798                           	file	"Display.c"
  2799                           	line	150
  2800                           global __ptext1
  2801                           __ptext1:	;psect for function _update_volume
  2802  0D88                     psect	text1
  2803                           	file	"Display.c"
  2804                           	line	150
  2805                           	global	__size_of_update_volume
  2806                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2807  004F                     	
  2808                           _update_volume:	
  2809  0D88                     ;incstack = 0
  2810 ;; hardware stack exceeded
  2811                           	opt	stack 0
  2812                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2813                           	line	152
  2814                           	
  2815                           l2565:	
  2816  0D88                     ;Display.c: 152:     if (lastVolume == volume) return;
  2817                           	bsf	status, 5	;RP0=1, select bank1
  2818  0D88  1683               	bcf	status, 6	;RP1=0, select bank1
  2819  0D89  1303               	movf	(_volume+1)^080h,w
  2820  0D8A  084A               	xorwf	(_lastVolume+1)^080h,w
  2821  0D8B  0648               	skipz
  2822  0D8C  1D03               	goto	u2775
  2823  0D8D  2D90               	movf	(_volume)^080h,w
  2824  0D8E  0849               	xorwf	(_lastVolume)^080h,w
  2825  0D8F  0647               u2775:
  2826  0D90                     
  2827                           	skipz
  2828  0D90  1D03               	goto	u2771
  2829  0D91  2D93               	goto	u2770
  2830  0D92  2D94               u2771:
  2831  0D93                     	goto	l2569
  2832  0D93  2D96               u2770:
  2833  0D94                     	goto	l147
  2834  0D94  2DD6               	
  2835                           l2567:	
  2836  0D95                     	goto	l147
  2837  0D95  2DD6               	
  2838                           l146:	
  2839  0D96                     	line	154
  2840                           	
  2841                           l2569:	
  2842  0D96                     ;Display.c: 154:     _selectedDisplay = 0;
  2843                           	clrf	(__selectedDisplay)^080h
  2844  0D96  01CD               	line	156
  2845                           	
  2846                           l2571:	
  2847  0D97                     ;Display.c: 156:     write_text("VOL");
  2848                           	movlw	low(((STR_2)|8000h))
  2849  0D97  3096               	movwf	(write_text@text)^080h
  2850  0D98  00B3               	movlw	high(((STR_2)|8000h))
  2851  0D99  3084               	movwf	((write_text@text)^080h)+1
  2852  0D9A  00B4               	fcall	_write_text
  2853  0D9B  120A  158A  23E4  120A  158A  	line	160
  2854                           	
  2855                           l2573:	
  2856  0DA0                     ;Display.c: 160:     int spaces = 3;
  2857                           	movlw	03h
  2858  0DA0  3003               	bsf	status, 5	;RP0=1, select bank1
  2859  0DA1  1683               	bcf	status, 6	;RP1=0, select bank1
  2860  0DA2  1303               	movwf	(update_volume@spaces)^080h
  2861  0DA3  00C1               	movlw	0
  2862  0DA4  3000               	movwf	((update_volume@spaces)^080h)+1
  2863  0DA5  00C2               	line	161
  2864                           	
  2865                           l2575:	
  2866  0DA6                     ;Display.c: 161:     if (volume < 10)
  2867                           	movf	(_volume+1)^080h,w
  2868  0DA6  084A               	xorlw	80h
  2869  0DA7  3A80               	movwf	btemp+1
  2870  0DA8  00FF               	movlw	(0)^80h
  2871  0DA9  3080               	subwf	btemp+1,w
  2872  0DAA  027F               	skipz
  2873  0DAB  1D03               	goto	u2785
  2874  0DAC  2DAF               	movlw	0Ah
  2875  0DAD  300A               	subwf	(_volume)^080h,w
  2876  0DAE  0249               u2785:
  2877  0DAF                     
  2878                           	skipnc
  2879  0DAF  1803               	goto	u2781
  2880  0DB0  2DB2               	goto	u2780
  2881  0DB1  2DB3               u2781:
  2882  0DB2                     	goto	l2579
  2883  0DB2  2DBA               u2780:
  2884  0DB3                     	line	162
  2885                           	
  2886                           l2577:	
  2887  0DB3                     ;Display.c: 162:         spaces = 4;
  2888                           	movlw	04h
  2889  0DB3  3004               	bsf	status, 5	;RP0=1, select bank1
  2890  0DB4  1683               	bcf	status, 6	;RP1=0, select bank1
  2891  0DB5  1303               	movwf	(update_volume@spaces)^080h
  2892  0DB6  00C1               	movlw	0
  2893  0DB7  3000               	movwf	((update_volume@spaces)^080h)+1
  2894  0DB8  00C2               	goto	l2579
  2895  0DB9  2DBA               	
  2896                           l148:	
  2897  0DBA                     	line	165
  2898                           	
  2899                           l2579:	
  2900  0DBA                     ;Display.c: 165:     write_space(spaces);
  2901                           	bsf	status, 5	;RP0=1, select bank1
  2902  0DBA  1683               	bcf	status, 6	;RP1=0, select bank1
  2903  0DBB  1303               	movf	(update_volume@spaces+1)^080h,w
  2904  0DBC  0842               	movwf	(write_space@count+1)^080h
  2905  0DBD  00B1               	movf	(update_volume@spaces)^080h,w
  2906  0DBE  0841               	movwf	(write_space@count)^080h
  2907  0DBF  00B0               	fcall	_write_space
  2908  0DC0  120A  158A  2287  120A  158A  	line	167
  2909                           	
  2910                           l2581:	
  2911  0DC5                     ;Display.c: 167:     write_int(volume);
  2912                           	bsf	status, 5	;RP0=1, select bank1
  2913  0DC5  1683               	bcf	status, 6	;RP1=0, select bank1
  2914  0DC6  1303               	movf	(_volume+1)^080h,w
  2915  0DC7  084A               	movwf	(write_int@number+1)^080h
  2916  0DC8  00BE               	movf	(_volume)^080h,w
  2917  0DC9  0849               	movwf	(write_int@number)^080h
  2918  0DCA  00BD               	fcall	_write_int
  2919  0DCB  120A  158A  233C  120A  158A  	line	169
  2920                           ;Display.c: 169:     lastVolume = volume;
  2921                           	bsf	status, 5	;RP0=1, select bank1
  2922  0DD0  1683               	bcf	status, 6	;RP1=0, select bank1
  2923  0DD1  1303               	movf	(_volume+1)^080h,w
  2924  0DD2  084A               	movwf	(_lastVolume+1)^080h
  2925  0DD3  00C8               	movf	(_volume)^080h,w
  2926  0DD4  0849               	movwf	(_lastVolume)^080h
  2927  0DD5  00C7               	line	171
  2928                           	
  2929                           l147:	
  2930  0DD6                     	return
  2931  0DD6  0008               	opt stack 0
  2932                           GLOBAL	__end_of_update_volume
  2933                           	__end_of_update_volume:
  2934  0DD7                     	signat	_update_volume,89
  2935                           	global	_update_input
  2936                           
  2937 ;; *************** function _update_input *****************
  2938 ;; Defined at:
  2939 ;;		line 134 in file "Display.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    9
  2960 ;; This function calls:
  2961 ;;		_write_int
  2962 ;;		_write_space
  2963 ;;		_write_text
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2969                           	line	134
  2970                           global __ptext2
  2971                           __ptext2:	;psect for function _update_input
  2972  0BAB                     psect	text2
  2973                           	file	"Display.c"
  2974                           	line	134
  2975                           	global	__size_of_update_input
  2976                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  2977  0039                     	
  2978                           _update_input:	
  2979  0BAB                     ;incstack = 0
  2980 ;; hardware stack exceeded
  2981                           	opt	stack 0
  2982                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2983                           	line	136
  2984                           	
  2985                           l2583:	
  2986  0BAB                     ;Display.c: 136:     if (lastInput == _selectedInput) return;
  2987                           	bsf	status, 5	;RP0=1, select bank1
  2988  0BAB  1683               	bcf	status, 6	;RP1=0, select bank1
  2989  0BAC  1303               	movf	(__selectedInput+1)^080h,w
  2990  0BAD  084C               	xorwf	(_lastInput+1)^080h,w
  2991  0BAE  0646               	skipz
  2992  0BAF  1D03               	goto	u2795
  2993  0BB0  2BB3               	movf	(__selectedInput)^080h,w
  2994  0BB1  084B               	xorwf	(_lastInput)^080h,w
  2995  0BB2  0645               u2795:
  2996  0BB3                     
  2997                           	skipz
  2998  0BB3  1D03               	goto	u2791
  2999  0BB4  2BB6               	goto	u2790
  3000  0BB5  2BB7               u2791:
  3001  0BB6                     	goto	l2587
  3002  0BB6  2BB9               u2790:
  3003  0BB7                     	goto	l143
  3004  0BB7  2BE3               	
  3005                           l2585:	
  3006  0BB8                     	goto	l143
  3007  0BB8  2BE3               	
  3008                           l142:	
  3009  0BB9                     	line	138
  3010                           	
  3011                           l2587:	
  3012  0BB9                     ;Display.c: 138:     _selectedDisplay = 0;
  3013                           	clrf	(__selectedDisplay)^080h
  3014  0BB9  01CD               	line	140
  3015                           	
  3016                           l2589:	
  3017  0BBA                     ;Display.c: 140:     write_text("INPUT");
  3018                           	movlw	low(((STR_1)|8000h))
  3019  0BBA  3090               	movwf	(write_text@text)^080h
  3020  0BBB  00B3               	movlw	high(((STR_1)|8000h))
  3021  0BBC  3084               	movwf	((write_text@text)^080h)+1
  3022  0BBD  00B4               	fcall	_write_text
  3023  0BBE  120A  158A  23E4  120A  158A  	line	142
  3024                           	
  3025                           l2591:	
  3026  0BC3                     ;Display.c: 142:     write_space(2);
  3027                           	movlw	02h
  3028  0BC3  3002               	bsf	status, 5	;RP0=1, select bank1
  3029  0BC4  1683               	bcf	status, 6	;RP1=0, select bank1
  3030  0BC5  1303               	movwf	(write_space@count)^080h
  3031  0BC6  00B0               	movlw	0
  3032  0BC7  3000               	movwf	((write_space@count)^080h)+1
  3033  0BC8  00B1               	fcall	_write_space
  3034  0BC9  120A  158A  2287  120A  158A  	line	144
  3035                           	
  3036                           l2593:	
  3037  0BCE                     ;Display.c: 144:     write_int(_selectedInput+1);
  3038                           	bsf	status, 5	;RP0=1, select bank1
  3039  0BCE  1683               	bcf	status, 6	;RP1=0, select bank1
  3040  0BCF  1303               	movf	(__selectedInput)^080h,w
  3041  0BD0  084B               	addlw	low(01h)
  3042  0BD1  3E01               	movwf	(write_int@number)^080h
  3043  0BD2  00BD               	movf	(__selectedInput+1)^080h,w
  3044  0BD3  084C               	skipnc
  3045  0BD4  1803               	addlw	1
  3046  0BD5  3E01               	addlw	high(01h)
  3047  0BD6  3E00               	movwf	1+(write_int@number)^080h
  3048  0BD7  00BE               	fcall	_write_int
  3049  0BD8  120A  158A  233C  120A  158A  	line	146
  3050                           	
  3051                           l2595:	
  3052  0BDD                     ;Display.c: 146:     lastInput = _selectedInput;
  3053                           	bsf	status, 5	;RP0=1, select bank1
  3054  0BDD  1683               	bcf	status, 6	;RP1=0, select bank1
  3055  0BDE  1303               	movf	(__selectedInput+1)^080h,w
  3056  0BDF  084C               	movwf	(_lastInput+1)^080h
  3057  0BE0  00C6               	movf	(__selectedInput)^080h,w
  3058  0BE1  084B               	movwf	(_lastInput)^080h
  3059  0BE2  00C5               	line	148
  3060                           	
  3061                           l143:	
  3062  0BE3                     	return
  3063  0BE3  0008               	opt stack 0
  3064                           GLOBAL	__end_of_update_input
  3065                           	__end_of_update_input:
  3066  0BE4                     	signat	_update_input,89
  3067                           	global	_write_space
  3068                           
  3069 ;; *************** function _write_space *****************
  3070 ;; Defined at:
  3071 ;;		line 173 in file "Display.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  count           2   16[BANK1 ] int 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  i               2   19[BANK1 ] int 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       2       0       0
  3086 ;;      Locals:         0       0       2       0       0
  3087 ;;      Temps:          0       0       1       0       0
  3088 ;;      Totals:         0       0       5       0       0
  3089 ;;Total ram usage:        5 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    6
  3092 ;; This function calls:
  3093 ;;		_write_font
  3094 ;; This function is called by:
  3095 ;;		_update_input
  3096 ;;		_update_volume
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3100                           	line	173
  3101                           global __ptext3
  3102                           __ptext3:	;psect for function _write_space
  3103  0A87                     psect	text3
  3104                           	file	"Display.c"
  3105                           	line	173
  3106                           	global	__size_of_write_space
  3107                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  3108  0029                     	
  3109                           _write_space:	
  3110  0A87                     ;incstack = 0
  3111                           	opt	stack 0
  3112                           ; Regs used in _write_space: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3113                           	line	175
  3114                           	
  3115                           l2437:	
  3116  0A87                     ;Display.c: 173: void write_space(int count);Display.c: 174: {;Display.c: 175:     for (
                                 int i = 0; i < count; i++) {
  3117                           	bsf	status, 5	;RP0=1, select bank1
  3118  0A87  1683               	bcf	status, 6	;RP1=0, select bank1
  3119  0A88  1303               	clrf	(write_space@i)^080h
  3120  0A89  01B3               	clrf	(write_space@i+1)^080h
  3121  0A8A  01B4               	goto	l2443
  3122  0A8B  2AA0               	
  3123                           l152:	
  3124  0A8C                     	line	176
  3125                           	
  3126                           l2439:	
  3127  0A8C                     ;Display.c: 176:         write_font(37);
  3128                           	movlw	025h
  3129  0A8C  3025               	bsf	status, 5	;RP0=1, select bank1
  3130  0A8D  1683               	bcf	status, 6	;RP1=0, select bank1
  3131  0A8E  1303               	movwf	(write_font@fontPos)^080h
  3132  0A8F  00A6               	movlw	0
  3133  0A90  3000               	movwf	((write_font@fontPos)^080h)+1
  3134  0A91  00A7               	fcall	_write_font
  3135  0A92  120A  158A  26A1  120A  158A  	line	177
  3136                           	
  3137                           l2441:	
  3138  0A97                     ;Display.c: 177:     }
  3139                           	movlw	01h
  3140  0A97  3001               	bsf	status, 5	;RP0=1, select bank1
  3141  0A98  1683               	bcf	status, 6	;RP1=0, select bank1
  3142  0A99  1303               	addwf	(write_space@i)^080h,f
  3143  0A9A  07B3               	skipnc
  3144  0A9B  1803               	incf	(write_space@i+1)^080h,f
  3145  0A9C  0AB4               	movlw	0
  3146  0A9D  3000               	addwf	(write_space@i+1)^080h,f
  3147  0A9E  07B4               	goto	l2443
  3148  0A9F  2AA0               	
  3149                           l151:	
  3150  0AA0                     	
  3151                           l2443:	
  3152  0AA0                     	movf	(write_space@i+1)^080h,w
  3153  0AA0  0834               	xorlw	80h
  3154  0AA1  3A80               	movwf	(??_write_space+0)^080h+0
  3155  0AA2  00B2               	movf	(write_space@count+1)^080h,w
  3156  0AA3  0831               	xorlw	80h
  3157  0AA4  3A80               	subwf	(??_write_space+0)^080h+0,w
  3158  0AA5  0232               	skipz
  3159  0AA6  1D03               	goto	u2665
  3160  0AA7  2AAA               	movf	(write_space@count)^080h,w
  3161  0AA8  0830               	subwf	(write_space@i)^080h,w
  3162  0AA9  0233               u2665:
  3163  0AAA                     
  3164                           	skipc
  3165  0AAA  1C03               	goto	u2661
  3166  0AAB  2AAD               	goto	u2660
  3167  0AAC  2AAE               u2661:
  3168  0AAD                     	goto	l2439
  3169  0AAD  2A8C               u2660:
  3170  0AAE                     	goto	l154
  3171  0AAE  2AAF               	
  3172                           l153:	
  3173  0AAF                     	line	178
  3174                           	
  3175                           l154:	
  3176  0AAF                     	return
  3177  0AAF  0008               	opt stack 0
  3178                           GLOBAL	__end_of_write_space
  3179                           	__end_of_write_space:
  3180  0AB0                     	signat	_write_space,4217
  3181                           	global	_write_int
  3182                           
  3183 ;; *************** function _write_int *****************
  3184 ;; Defined at:
  3185 ;;		line 190 in file "Display.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  number          2   29[BANK1 ] int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  num             2   31[BANK1 ] unsigned char [2]
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3199 ;;      Params:         0       0       2       0       0
  3200 ;;      Locals:         0       0       2       0       0
  3201 ;;      Temps:          0       0       0       0       0
  3202 ;;      Totals:         0       0       4       0       0
  3203 ;;Total ram usage:        4 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    8
  3206 ;; This function calls:
  3207 ;;		_sprintf
  3208 ;;		_write_char
  3209 ;;		_write_text
  3210 ;; This function is called by:
  3211 ;;		_update_input
  3212 ;;		_update_volume
  3213 ;; This function uses a non-reentrant model
  3214 ;;
  3215                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3216                           	line	190
  3217                           global __ptext4
  3218                           __ptext4:	;psect for function _write_int
  3219  0B3C                     psect	text4
  3220                           	file	"Display.c"
  3221                           	line	190
  3222                           	global	__size_of_write_int
  3223                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  3224  0036                     	
  3225                           _write_int:	
  3226  0B3C                     ;incstack = 0
  3227 ;; hardware stack exceeded
  3228                           	opt	stack 0
  3229                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3230                           	line	192
  3231                           	
  3232                           l2445:	
  3233  0B3C                     ;Display.c: 190: void write_int(int number);Display.c: 191: {;Display.c: 192:     if (nu
                                 mber < 10) {
  3234                           	bsf	status, 5	;RP0=1, select bank1
  3235  0B3C  1683               	bcf	status, 6	;RP1=0, select bank1
  3236  0B3D  1303               	movf	(write_int@number+1)^080h,w
  3237  0B3E  083E               	xorlw	80h
  3238  0B3F  3A80               	movwf	btemp+1
  3239  0B40  00FF               	movlw	(0)^80h
  3240  0B41  3080               	subwf	btemp+1,w
  3241  0B42  027F               	skipz
  3242  0B43  1D03               	goto	u2675
  3243  0B44  2B47               	movlw	0Ah
  3244  0B45  300A               	subwf	(write_int@number)^080h,w
  3245  0B46  023D               u2675:
  3246  0B47                     
  3247                           	skipnc
  3248  0B47  1803               	goto	u2671
  3249  0B48  2B4A               	goto	u2670
  3250  0B49  2B4B               u2671:
  3251  0B4A                     	goto	l2451
  3252  0B4A  2B56               u2670:
  3253  0B4B                     	line	193
  3254                           	
  3255                           l2447:	
  3256  0B4B                     ;Display.c: 193:         write_char(number + 48);
  3257                           	bsf	status, 5	;RP0=1, select bank1
  3258  0B4B  1683               	bcf	status, 6	;RP1=0, select bank1
  3259  0B4C  1303               	movf	(write_int@number)^080h,w
  3260  0B4D  083D               	addlw	030h
  3261  0B4E  3E30               	fcall	_write_char
  3262  0B4F  120A  158A  25D7  120A  158A  	goto	l164
  3263  0B54  2B71               	line	194
  3264                           	
  3265                           l2449:	
  3266  0B55                     ;Display.c: 194:         return;
  3267                           	goto	l164
  3268  0B55  2B71               	line	195
  3269                           ;Display.c: 195:     }
  3270                           	
  3271                           l163:	
  3272  0B56                     	line	198
  3273                           	
  3274                           l2451:	
  3275  0B56                     ;Display.c: 197:     char num[2];;Display.c: 198:     sprintf(num, "%d", number);
  3276                           	movlw	low(((STR_3)|8000h))
  3277  0B56  309A               	bsf	status, 5	;RP0=1, select bank1
  3278  0B57  1683               	bcf	status, 6	;RP1=0, select bank1
  3279  0B58  1303               	movwf	(sprintf@f)^080h
  3280  0B59  00AE               	movlw	high(((STR_3)|8000h))
  3281  0B5A  3084               	movwf	((sprintf@f)^080h)+1
  3282  0B5B  00AF               	movf	(write_int@number+1)^080h,w
  3283  0B5C  083E               	movwf	1+(?_sprintf)^080h+02h
  3284  0B5D  00B1               	movf	(write_int@number)^080h,w
  3285  0B5E  083D               	movwf	0+(?_sprintf)^080h+02h
  3286  0B5F  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  3287  0B60  30BF               	fcall	_sprintf
  3288  0B61  120A  118A  249D  120A  158A  	line	200
  3289                           ;Display.c: 200:     write_text(num);
  3290                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  3291  0B66  30BF               	bsf	status, 5	;RP0=1, select bank1
  3292  0B67  1683               	bcf	status, 6	;RP1=0, select bank1
  3293  0B68  1303               	movwf	(write_text@text)^080h
  3294  0B69  00B3               	movlw	(0x0)
  3295  0B6A  3000               	movwf	(write_text@text+1)^080h
  3296  0B6B  00B4               	fcall	_write_text
  3297  0B6C  120A  158A  23E4  120A  158A  	line	201
  3298                           	
  3299                           l164:	
  3300  0B71                     	return
  3301  0B71  0008               	opt stack 0
  3302                           GLOBAL	__end_of_write_int
  3303                           	__end_of_write_int:
  3304  0B72                     	signat	_write_int,4217
  3305                           	global	_write_text
  3306                           
  3307 ;; *************** function _write_text *****************
  3308 ;; Defined at:
  3309 ;;		line 180 in file "Display.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  text            2   19[BANK1 ] PTR unsigned char 
  3312 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  c               2   21[BANK1 ] PTR unsigned char 
  3315 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       2       0       0
  3326 ;;      Locals:         0       0       2       0       0
  3327 ;;      Temps:          0       0       0       0       0
  3328 ;;      Totals:         0       0       4       0       0
  3329 ;;Total ram usage:        4 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    7
  3332 ;; This function calls:
  3333 ;;		_write_char
  3334 ;; This function is called by:
  3335 ;;		_update_input
  3336 ;;		_update_volume
  3337 ;;		_write_int
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3341                           	line	180
  3342                           global __ptext5
  3343                           __ptext5:	;psect for function _write_text
  3344  0BE4                     psect	text5
  3345                           	file	"Display.c"
  3346                           	line	180
  3347                           	global	__size_of_write_text
  3348                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  3349  003A                     	
  3350                           _write_text:	
  3351  0BE4                     ;incstack = 0
  3352 ;; hardware stack exceeded
  3353                           	opt	stack 0
  3354                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3355                           	line	184
  3356                           	
  3357                           l2015:	
  3358  0BE4                     ;Display.c: 180: void write_text(char* text);Display.c: 181: {;Display.c: 182:     char*
                                  c;;Display.c: 184:     for (c = text; *c != '\0'; c++) {
  3359                           	bsf	status, 5	;RP0=1, select bank1
  3360  0BE4  1683               	bcf	status, 6	;RP1=0, select bank1
  3361  0BE5  1303               		movf	(write_text@text)^080h,w
  3362  0BE6  0833               	movwf	(write_text@c)^080h
  3363  0BE7  00B5               movf	(write_text@text+1)^080h,w
  3364  0BE8  0834               movwf	(write_text@c+1)^080h
  3365  0BE9  00B6               
  3366                           	goto	l2021
  3367  0BEA  2C08               	
  3368                           l158:	
  3369  0BEB                     	line	185
  3370                           	
  3371                           l2017:	
  3372  0BEB                     ;Display.c: 185:         write_char(*c);
  3373                           	bsf	status, 5	;RP0=1, select bank1
  3374  0BEB  1683               	bcf	status, 6	;RP1=0, select bank1
  3375  0BEC  1303               	movf	(write_text@c+1)^080h,w
  3376  0BED  0836               	bcf	status, 5	;RP0=0, select bank0
  3377  0BEE  1283               	bcf	status, 6	;RP1=0, select bank0
  3378  0BEF  1303               	movwf	btemp+1
  3379  0BF0  00FF               	bsf	status, 5	;RP0=1, select bank1
  3380  0BF1  1683               	bcf	status, 6	;RP1=0, select bank1
  3381  0BF2  1303               	movf	(write_text@c)^080h,w
  3382  0BF3  0835               	movwf	fsr0
  3383  0BF4  0084               	bcf	status, 5	;RP0=0, select bank0
  3384  0BF5  1283               	bcf	status, 6	;RP1=0, select bank0
  3385  0BF6  1303               	fcall	stringtab
  3386  0BF7  120A  118A  2300  120A  158A  	fcall	_write_char
  3387  0BFC  120A  158A  25D7  120A  158A  	line	186
  3388                           	
  3389                           l2019:	
  3390  0C01                     ;Display.c: 186:     }
  3391                           	movlw	01h
  3392  0C01  3001               	bsf	status, 5	;RP0=1, select bank1
  3393  0C02  1683               	bcf	status, 6	;RP1=0, select bank1
  3394  0C03  1303               	addwf	(write_text@c)^080h,f
  3395  0C04  07B5               	skipnc
  3396  0C05  1803               	incf	(write_text@c+1)^080h,f
  3397  0C06  0AB6               	goto	l2021
  3398  0C07  2C08               	
  3399                           l157:	
  3400  0C08                     	
  3401                           l2021:	
  3402  0C08                     	movf	(write_text@c+1)^080h,w
  3403  0C08  0836               	bcf	status, 5	;RP0=0, select bank0
  3404  0C09  1283               	bcf	status, 6	;RP1=0, select bank0
  3405  0C0A  1303               	movwf	btemp+1
  3406  0C0B  00FF               	bsf	status, 5	;RP0=1, select bank1
  3407  0C0C  1683               	bcf	status, 6	;RP1=0, select bank1
  3408  0C0D  1303               	movf	(write_text@c)^080h,w
  3409  0C0E  0835               	movwf	fsr0
  3410  0C0F  0084               	bcf	status, 5	;RP0=0, select bank0
  3411  0C10  1283               	bcf	status, 6	;RP1=0, select bank0
  3412  0C11  1303               	fcall	stringtab
  3413  0C12  120A  118A  2300  120A  158A  	xorlw	0
  3414  0C17  3A00               	skipz
  3415  0C18  1D03               	goto	u1831
  3416  0C19  2C1B               	goto	u1830
  3417  0C1A  2C1C               u1831:
  3418  0C1B                     	goto	l2017
  3419  0C1B  2BEB               u1830:
  3420  0C1C                     	goto	l160
  3421  0C1C  2C1D               	
  3422                           l159:	
  3423  0C1D                     	line	188
  3424                           	
  3425                           l160:	
  3426  0C1D                     	return
  3427  0C1D  0008               	opt stack 0
  3428                           GLOBAL	__end_of_write_text
  3429                           	__end_of_write_text:
  3430  0C1E                     	signat	_write_text,4217
  3431                           	global	_write_char
  3432                           
  3433 ;; *************** function _write_char *****************
  3434 ;; Defined at:
  3435 ;;		line 203 in file "Display.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;  c               1    wreg     unsigned char 
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;  c               1   18[BANK1 ] unsigned char 
  3440 ;;  pos             2   16[BANK1 ] int 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      void 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3450 ;;      Params:         0       0       0       0       0
  3451 ;;      Locals:         0       0       3       0       0
  3452 ;;      Temps:          0       0       0       0       0
  3453 ;;      Totals:         0       0       3       0       0
  3454 ;;Total ram usage:        3 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    6
  3457 ;; This function calls:
  3458 ;;		_write_font
  3459 ;; This function is called by:
  3460 ;;		_write_text
  3461 ;;		_write_int
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3465                           	line	203
  3466                           global __ptext6
  3467                           __ptext6:	;psect for function _write_char
  3468  0DD7                     psect	text6
  3469                           	file	"Display.c"
  3470                           	line	203
  3471                           	global	__size_of_write_char
  3472                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  3473  0062                     	
  3474                           _write_char:	
  3475  0DD7                     ;incstack = 0
  3476 ;; hardware stack exceeded
  3477                           	opt	stack 0
  3478                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3479                           ;write_char@c stored from wreg
  3480                           	bsf	status, 5	;RP0=1, select bank1
  3481  0DD7  1683               	bcf	status, 6	;RP1=0, select bank1
  3482  0DD8  1303               	movwf	(write_char@c)^080h
  3483  0DD9  00B2               	line	208
  3484                           	
  3485                           l1943:	
  3486  0DDA                     ;Display.c: 203: void write_char(char c);Display.c: 204: {;Display.c: 205:     int pos;;
                                 Display.c: 208:     if (c >= 48 && c <= 57) {
  3487                           	movlw	low(030h)
  3488  0DDA  3030               	subwf	(write_char@c)^080h,w
  3489  0DDB  0232               	skipc
  3490  0DDC  1C03               	goto	u1641
  3491  0DDD  2DDF               	goto	u1640
  3492  0DDE  2DE0               u1641:
  3493  0DDF                     	goto	l1951
  3494  0DDF  2DF7               u1640:
  3495  0DE0                     	
  3496                           l1945:	
  3497  0DE0                     	movlw	low(03Ah)
  3498  0DE0  303A               	subwf	(write_char@c)^080h,w
  3499  0DE1  0232               	skipnc
  3500  0DE2  1803               	goto	u1651
  3501  0DE3  2DE5               	goto	u1650
  3502  0DE4  2DE6               u1651:
  3503  0DE5                     	goto	l1951
  3504  0DE5  2DF7               u1650:
  3505  0DE6                     	line	209
  3506                           	
  3507                           l1947:	
  3508  0DE6                     ;Display.c: 209:         pos = c - 48;
  3509                           	movf	(write_char@c)^080h,w
  3510  0DE6  0832               	addlw	low(-48)
  3511  0DE7  3ED0               	movwf	(write_char@pos)^080h
  3512  0DE8  00B0               	movlw	high(-48)
  3513  0DE9  30FF               	skipnc
  3514  0DEA  1803               	movlw	(high(-48)+1)&0ffh
  3515  0DEB  3000               	movwf	((write_char@pos)^080h)+1
  3516  0DEC  00B1               	line	210
  3517                           	
  3518                           l1949:	
  3519  0DED                     ;Display.c: 210:         write_font(pos);
  3520                           	movf	(write_char@pos+1)^080h,w
  3521  0DED  0831               	movwf	(write_font@fontPos+1)^080h
  3522  0DEE  00A7               	movf	(write_char@pos)^080h,w
  3523  0DEF  0830               	movwf	(write_font@fontPos)^080h
  3524  0DF0  00A6               	fcall	_write_font
  3525  0DF1  120A  158A  26A1  120A  158A  	line	211
  3526                           ;Display.c: 211:     } else if (c >= 65 && c <= 90) {
  3527                           	goto	l173
  3528  0DF6  2E38               	
  3529                           l167:	
  3530  0DF7                     	
  3531                           l1951:	
  3532  0DF7                     	movlw	low(041h)
  3533  0DF7  3041               	bsf	status, 5	;RP0=1, select bank1
  3534  0DF8  1683               	bcf	status, 6	;RP1=0, select bank1
  3535  0DF9  1303               	subwf	(write_char@c)^080h,w
  3536  0DFA  0232               	skipc
  3537  0DFB  1C03               	goto	u1661
  3538  0DFC  2DFE               	goto	u1660
  3539  0DFD  2DFF               u1661:
  3540  0DFE                     	goto	l1959
  3541  0DFE  2E16               u1660:
  3542  0DFF                     	
  3543                           l1953:	
  3544  0DFF                     	movlw	low(05Bh)
  3545  0DFF  305B               	subwf	(write_char@c)^080h,w
  3546  0E00  0232               	skipnc
  3547  0E01  1803               	goto	u1671
  3548  0E02  2E04               	goto	u1670
  3549  0E03  2E05               u1671:
  3550  0E04                     	goto	l1959
  3551  0E04  2E16               u1670:
  3552  0E05                     	line	212
  3553                           	
  3554                           l1955:	
  3555  0E05                     ;Display.c: 212:         pos = (c - 65) + 10;
  3556                           	movf	(write_char@c)^080h,w
  3557  0E05  0832               	addlw	low(-55)
  3558  0E06  3EC9               	movwf	(write_char@pos)^080h
  3559  0E07  00B0               	movlw	high(-55)
  3560  0E08  30FF               	skipnc
  3561  0E09  1803               	movlw	(high(-55)+1)&0ffh
  3562  0E0A  3000               	movwf	((write_char@pos)^080h)+1
  3563  0E0B  00B1               	line	213
  3564                           	
  3565                           l1957:	
  3566  0E0C                     ;Display.c: 213:         write_font(pos);
  3567                           	movf	(write_char@pos+1)^080h,w
  3568  0E0C  0831               	movwf	(write_font@fontPos+1)^080h
  3569  0E0D  00A7               	movf	(write_char@pos)^080h,w
  3570  0E0E  0830               	movwf	(write_font@fontPos)^080h
  3571  0E0F  00A6               	fcall	_write_font
  3572  0E10  120A  158A  26A1  120A  158A  	line	214
  3573                           ;Display.c: 214:     } else if (c >= 97 && c <= 122) {
  3574                           	goto	l173
  3575  0E15  2E38               	
  3576                           l169:	
  3577  0E16                     	
  3578                           l1959:	
  3579  0E16                     	movlw	low(061h)
  3580  0E16  3061               	bsf	status, 5	;RP0=1, select bank1
  3581  0E17  1683               	bcf	status, 6	;RP1=0, select bank1
  3582  0E18  1303               	subwf	(write_char@c)^080h,w
  3583  0E19  0232               	skipc
  3584  0E1A  1C03               	goto	u1681
  3585  0E1B  2E1D               	goto	u1680
  3586  0E1C  2E1E               u1681:
  3587  0E1D                     	goto	l173
  3588  0E1D  2E38               u1680:
  3589  0E1E                     	
  3590                           l1961:	
  3591  0E1E                     	movlw	low(07Bh)
  3592  0E1E  307B               	subwf	(write_char@c)^080h,w
  3593  0E1F  0232               	skipnc
  3594  0E20  1803               	goto	u1691
  3595  0E21  2E23               	goto	u1690
  3596  0E22  2E24               u1691:
  3597  0E23                     	goto	l173
  3598  0E23  2E38               u1690:
  3599  0E24                     	line	215
  3600                           	
  3601                           l1963:	
  3602  0E24                     ;Display.c: 215:         pos = (c - 97) + 10;
  3603                           	movf	(write_char@c)^080h,w
  3604  0E24  0832               	addlw	low(-87)
  3605  0E25  3EA9               	movwf	(write_char@pos)^080h
  3606  0E26  00B0               	movlw	high(-87)
  3607  0E27  30FF               	skipnc
  3608  0E28  1803               	movlw	(high(-87)+1)&0ffh
  3609  0E29  3000               	movwf	((write_char@pos)^080h)+1
  3610  0E2A  00B1               	line	216
  3611                           	
  3612                           l1965:	
  3613  0E2B                     ;Display.c: 216:         write_font(pos);
  3614                           	movf	(write_char@pos+1)^080h,w
  3615  0E2B  0831               	movwf	(write_font@fontPos+1)^080h
  3616  0E2C  00A7               	movf	(write_char@pos)^080h,w
  3617  0E2D  0830               	movwf	(write_font@fontPos)^080h
  3618  0E2E  00A6               	fcall	_write_font
  3619  0E2F  120A  158A  26A1  120A  158A  	line	217
  3620                           ;Display.c: 217:     } else {
  3621                           	goto	l173
  3622  0E34  2E38               	
  3623                           l171:	
  3624  0E35                     	goto	l173
  3625  0E35  2E38               	line	220
  3626                           ;Display.c: 220:     }
  3627                           	
  3628                           l172:	
  3629  0E36                     	goto	l173
  3630  0E36  2E38               	
  3631                           l170:	
  3632  0E37                     	goto	l173
  3633  0E37  2E38               	
  3634                           l168:	
  3635  0E38                     	line	221
  3636                           	
  3637                           l173:	
  3638  0E38                     	return
  3639  0E38  0008               	opt stack 0
  3640                           GLOBAL	__end_of_write_char
  3641                           	__end_of_write_char:
  3642  0E39                     	signat	_write_char,4217
  3643                           	global	_write_font
  3644                           
  3645 ;; *************** function _write_font *****************
  3646 ;; Defined at:
  3647 ;;		line 223 in file "Display.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  fontPos         2    6[BANK1 ] int 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  x               2   14[BANK1 ] int 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       0       2       0       0
  3662 ;;      Locals:         0       0       2       0       0
  3663 ;;      Temps:          0       0       6       0       0
  3664 ;;      Totals:         0       0      10       0       0
  3665 ;;Total ram usage:       10 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    5
  3668 ;; This function calls:
  3669 ;;		___wmul
  3670 ;;		_display_write_end
  3671 ;;		_display_write_start
  3672 ;;		_spiWrite
  3673 ;; This function is called by:
  3674 ;;		_write_space
  3675 ;;		_write_char
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3679                           	line	223
  3680                           global __ptext7
  3681                           __ptext7:	;psect for function _write_font
  3682  0EA1                     psect	text7
  3683                           	file	"Display.c"
  3684                           	line	223
  3685                           	global	__size_of_write_font
  3686                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  3687  006C                     	
  3688                           _write_font:	
  3689  0EA1                     ;incstack = 0
  3690 ;; hardware stack exceeded
  3691                           	opt	stack 0
  3692                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3693                           	line	225
  3694                           	
  3695                           l1927:	
  3696  0EA1                     ;Display.c: 223: void write_font(int fontPos);Display.c: 224: {;Display.c: 225:     disp
                                 lay_write_start();
  3697                           	fcall	_display_write_start
  3698  0EA1  120A  158A  2239  120A  158A  	line	227
  3699                           	
  3700                           l1929:	
  3701  0EA6                     ;Display.c: 227:     for(int x=0; x < 5; x++){
  3702                           	bsf	status, 5	;RP0=1, select bank1
  3703  0EA6  1683               	bcf	status, 6	;RP1=0, select bank1
  3704  0EA7  1303               	clrf	(write_font@x)^080h
  3705  0EA8  01AE               	clrf	(write_font@x+1)^080h
  3706  0EA9  01AF               	
  3707                           l1931:	
  3708  0EAA                     	movf	(write_font@x+1)^080h,w
  3709  0EAA  082F               	xorlw	80h
  3710  0EAB  3A80               	movwf	btemp+1
  3711  0EAC  00FF               	movlw	(0)^80h
  3712  0EAD  3080               	subwf	btemp+1,w
  3713  0EAE  027F               	skipz
  3714  0EAF  1D03               	goto	u1625
  3715  0EB0  2EB3               	movlw	05h
  3716  0EB1  3005               	subwf	(write_font@x)^080h,w
  3717  0EB2  022E               u1625:
  3718  0EB3                     
  3719                           	skipc
  3720  0EB3  1C03               	goto	u1621
  3721  0EB4  2EB6               	goto	u1620
  3722  0EB5  2EB7               u1621:
  3723  0EB6                     	goto	l1935
  3724  0EB6  2EB9               u1620:
  3725  0EB7                     	goto	l1941
  3726  0EB7  2F07               	
  3727                           l1933:	
  3728  0EB8                     	goto	l1941
  3729  0EB8  2F07               	
  3730                           l176:	
  3731  0EB9                     	line	228
  3732                           	
  3733                           l1935:	
  3734  0EB9                     ;Display.c: 228:         spiWrite(font[fontPos][x]);
  3735                           	bsf	status, 5	;RP0=1, select bank1
  3736  0EB9  1683               	bcf	status, 6	;RP1=0, select bank1
  3737  0EBA  1303               	movf	(write_font@x+1)^080h,w
  3738  0EBB  082F               	movwf	(??_write_font+0)^080h+0+1
  3739  0EBC  00A9               	movf	(write_font@x)^080h,w
  3740  0EBD  082E               	movwf	(??_write_font+0)^080h+0
  3741  0EBE  00A8               	clrc
  3742  0EBF  1003               	rlf	(??_write_font+0)^080h+0,f
  3743  0EC0  0DA8               	rlf	(??_write_font+0)^080h+1,f
  3744  0EC1  0DA9               	movf	(write_font@fontPos+1)^080h,w
  3745  0EC2  0827               	movwf	(___wmul@multiplier+1)^080h
  3746  0EC3  00A1               	movf	(write_font@fontPos)^080h,w
  3747  0EC4  0826               	movwf	(___wmul@multiplier)^080h
  3748  0EC5  00A0               	movlw	0Ah
  3749  0EC6  300A               	movwf	(___wmul@multiplicand)^080h
  3750  0EC7  00A2               	movlw	0
  3751  0EC8  3000               	movwf	((___wmul@multiplicand)^080h)+1
  3752  0EC9  00A3               	fcall	___wmul
  3753  0ECA  120A  158A  22B0  120A  158A  	movlw	low(((_font)|8000h))
  3754  0ECF  3012               	bsf	status, 5	;RP0=1, select bank1
  3755  0ED0  1683               	bcf	status, 6	;RP1=0, select bank1
  3756  0ED1  1303               	movwf	(??_write_font+2)^080h+0
  3757  0ED2  00AA               	movlw	high(((_font)|8000h))
  3758  0ED3  3083               	movwf	(??_write_font+2)^080h+0+1
  3759  0ED4  00AB               	movf	(0+(?___wmul))^080h,w
  3760  0ED5  0820               	addwf	0+(??_write_font+2)^080h+0,w
  3761  0ED6  072A               	movwf	(??_write_font+4)^080h+0
  3762  0ED7  00AC               	movf	(1+(?___wmul))^080h,w
  3763  0ED8  0821               	skipnc
  3764  0ED9  1803               	incf	(1+(?___wmul))^080h,w
  3765  0EDA  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  3766  0EDB  072B               	movwf	1+(??_write_font+4)^080h+0
  3767  0EDC  00AD               	movf	0+(??_write_font+0)^080h+0,w
  3768  0EDD  0828               	addwf	0+(??_write_font+4)^080h+0,w
  3769  0EDE  072C               	movwf	fsr0
  3770  0EDF  0084               	movf	1+(??_write_font+0)^080h+0,w
  3771  0EE0  0829               	skipnc
  3772  0EE1  1803               	incf	1+(??_write_font+0)^080h+0,w
  3773  0EE2  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  3774  0EE3  072D               	bcf	status, 5	;RP0=0, select bank0
  3775  0EE4  1283               	bcf	status, 6	;RP1=0, select bank0
  3776  0EE5  1303               	movwf	btemp+1
  3777  0EE6  00FF               	fcall	stringtab
  3778  0EE7  120A  118A  2300  120A  158A  	fcall	_spiWrite
  3779  0EEC  120A  118A  22EC  120A  158A  	line	229
  3780                           	
  3781                           l1937:	
  3782  0EF1                     ;Display.c: 229:     }
  3783                           	movlw	01h
  3784  0EF1  3001               	bsf	status, 5	;RP0=1, select bank1
  3785  0EF2  1683               	bcf	status, 6	;RP1=0, select bank1
  3786  0EF3  1303               	addwf	(write_font@x)^080h,f
  3787  0EF4  07AE               	skipnc
  3788  0EF5  1803               	incf	(write_font@x+1)^080h,f
  3789  0EF6  0AAF               	movlw	0
  3790  0EF7  3000               	addwf	(write_font@x+1)^080h,f
  3791  0EF8  07AF               	
  3792                           l1939:	
  3793  0EF9                     	movf	(write_font@x+1)^080h,w
  3794  0EF9  082F               	xorlw	80h
  3795  0EFA  3A80               	movwf	btemp+1
  3796  0EFB  00FF               	movlw	(0)^80h
  3797  0EFC  3080               	subwf	btemp+1,w
  3798  0EFD  027F               	skipz
  3799  0EFE  1D03               	goto	u1635
  3800  0EFF  2F02               	movlw	05h
  3801  0F00  3005               	subwf	(write_font@x)^080h,w
  3802  0F01  022E               u1635:
  3803  0F02                     
  3804                           	skipc
  3805  0F02  1C03               	goto	u1631
  3806  0F03  2F05               	goto	u1630
  3807  0F04  2F06               u1631:
  3808  0F05                     	goto	l1935
  3809  0F05  2EB9               u1630:
  3810  0F06                     	goto	l1941
  3811  0F06  2F07               	
  3812                           l177:	
  3813  0F07                     	line	232
  3814                           	
  3815                           l1941:	
  3816  0F07                     ;Display.c: 232:     display_write_end();
  3817                           	fcall	_display_write_end
  3818  0F07  120A  158A  222A  120A  158A  	line	233
  3819                           	
  3820                           l178:	
  3821  0F0C                     	return
  3822  0F0C  0008               	opt stack 0
  3823                           GLOBAL	__end_of_write_font
  3824                           	__end_of_write_font:
  3825  0F0D                     	signat	_write_font,4217
  3826                           	global	_display_write_start
  3827                           
  3828 ;; *************** function _display_write_start *****************
  3829 ;; Defined at:
  3830 ;;		line 236 in file "Display.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3844 ;;      Params:         0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    4
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_write_font
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3858                           	line	236
  3859                           global __ptext8
  3860                           __ptext8:	;psect for function _display_write_start
  3861  0A39                     psect	text8
  3862                           	file	"Display.c"
  3863                           	line	236
  3864                           	global	__size_of_display_write_start
  3865                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  3866  000F                     	
  3867                           _display_write_start:	
  3868  0A39                     ;incstack = 0
  3869 ;; hardware stack exceeded
  3870                           	opt	stack 0
  3871                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  3872                           	line	238
  3873                           	
  3874                           l1905:	
  3875  0A39                     ;Display.c: 238:     if (_selectedDisplay == 0) {
  3876                           	bsf	status, 5	;RP0=1, select bank1
  3877  0A39  1683               	bcf	status, 6	;RP1=0, select bank1
  3878  0A3A  1303               	movf	((__selectedDisplay)^080h),w
  3879  0A3B  084D               	btfss	status,2
  3880  0A3C  1D03               	goto	u1561
  3881  0A3D  2A3F               	goto	u1560
  3882  0A3E  2A40               u1561:
  3883  0A3F                     	goto	l181
  3884  0A3F  2A44               u1560:
  3885  0A40                     	line	239
  3886                           	
  3887                           l1907:	
  3888  0A40                     ;Display.c: 239:         PORTCbits.RC4 = 0;
  3889                           	bcf	status, 5	;RP0=0, select bank0
  3890  0A40  1283               	bcf	status, 6	;RP1=0, select bank0
  3891  0A41  1303               	bcf	(7),4	;volatile
  3892  0A42  1207               	line	240
  3893                           ;Display.c: 240:         return;
  3894                           	goto	l182
  3895  0A43  2A47               	line	241
  3896                           ;Display.c: 241:     }
  3897                           	
  3898                           l181:	
  3899  0A44                     	line	243
  3900                           ;Display.c: 243:     PORTDbits.RD4 = 0;
  3901                           	bcf	status, 5	;RP0=0, select bank0
  3902  0A44  1283               	bcf	status, 6	;RP1=0, select bank0
  3903  0A45  1303               	bcf	(8),4	;volatile
  3904  0A46  1208               	line	244
  3905                           	
  3906                           l182:	
  3907  0A47                     	return
  3908  0A47  0008               	opt stack 0
  3909                           GLOBAL	__end_of_display_write_start
  3910                           	__end_of_display_write_start:
  3911  0A48                     	signat	_display_write_start,89
  3912                           	global	_display_write_end
  3913                           
  3914 ;; *************** function _display_write_end *****************
  3915 ;; Defined at:
  3916 ;;		line 247 in file "Display.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;		None
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         0       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0
  3933 ;;      Totals:         0       0       0       0       0
  3934 ;;Total ram usage:        0 bytes
  3935 ;; Hardware stack levels used:    1
  3936 ;; Hardware stack levels required when called:    4
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_write_font
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3944                           	line	247
  3945                           global __ptext9
  3946                           __ptext9:	;psect for function _display_write_end
  3947  0A2A                     psect	text9
  3948                           	file	"Display.c"
  3949                           	line	247
  3950                           	global	__size_of_display_write_end
  3951                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  3952  000F                     	
  3953                           _display_write_end:	
  3954  0A2A                     ;incstack = 0
  3955 ;; hardware stack exceeded
  3956                           	opt	stack 0
  3957                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  3958                           	line	249
  3959                           	
  3960                           l1909:	
  3961  0A2A                     ;Display.c: 249:     if (_selectedDisplay == 0) {
  3962                           	bsf	status, 5	;RP0=1, select bank1
  3963  0A2A  1683               	bcf	status, 6	;RP1=0, select bank1
  3964  0A2B  1303               	movf	((__selectedDisplay)^080h),w
  3965  0A2C  084D               	btfss	status,2
  3966  0A2D  1D03               	goto	u1571
  3967  0A2E  2A30               	goto	u1570
  3968  0A2F  2A31               u1571:
  3969  0A30                     	goto	l185
  3970  0A30  2A35               u1570:
  3971  0A31                     	line	250
  3972                           	
  3973                           l1911:	
  3974  0A31                     ;Display.c: 250:         PORTCbits.RC4 = 1;
  3975                           	bcf	status, 5	;RP0=0, select bank0
  3976  0A31  1283               	bcf	status, 6	;RP1=0, select bank0
  3977  0A32  1303               	bsf	(7),4	;volatile
  3978  0A33  1607               	line	251
  3979                           ;Display.c: 251:         return;
  3980                           	goto	l186
  3981  0A34  2A38               	line	252
  3982                           ;Display.c: 252:     }
  3983                           	
  3984                           l185:	
  3985  0A35                     	line	254
  3986                           ;Display.c: 254:     PORTDbits.RD4 = 1;
  3987                           	bcf	status, 5	;RP0=0, select bank0
  3988  0A35  1283               	bcf	status, 6	;RP1=0, select bank0
  3989  0A36  1303               	bsf	(8),4	;volatile
  3990  0A37  1608               	line	255
  3991                           	
  3992                           l186:	
  3993  0A38                     	return
  3994  0A38  0008               	opt stack 0
  3995                           GLOBAL	__end_of_display_write_end
  3996                           	__end_of_display_write_end:
  3997  0A39                     	signat	_display_write_end,89
  3998                           	global	___wmul
  3999                           
  4000 ;; *************** function ___wmul *****************
  4001 ;; Defined at:
  4002 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;  multiplier      2    0[BANK1 ] unsigned int 
  4005 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  product         2    4[BANK1 ] unsigned int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2    0[BANK1 ] unsigned int 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         0       0       4       0       0
  4018 ;;      Locals:         0       0       2       0       0
  4019 ;;      Temps:          0       0       0       0       0
  4020 ;;      Totals:         0       0       6       0       0
  4021 ;;Total ram usage:        6 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    4
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_write_font
  4028 ;;		_write_volume
  4029 ;; This function uses a non-reentrant model
  4030 ;;
  4031                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4032                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  4033                           	line	15
  4034                           global __ptext10
  4035                           __ptext10:	;psect for function ___wmul
  4036  0AB0                     psect	text10
  4037                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  4038                           	line	15
  4039                           	global	__size_of___wmul
  4040                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4041  002A                     	
  4042                           ___wmul:	
  4043  0AB0                     ;incstack = 0
  4044 ;; hardware stack exceeded
  4045                           	opt	stack 0
  4046                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4047                           	line	43
  4048                           	
  4049                           l1913:	
  4050  0AB0                     	bsf	status, 5	;RP0=1, select bank1
  4051  0AB0  1683               	bcf	status, 6	;RP1=0, select bank1
  4052  0AB1  1303               	clrf	(___wmul@product)^080h
  4053  0AB2  01A4               	clrf	(___wmul@product+1)^080h
  4054  0AB3  01A5               	goto	l1915
  4055  0AB4  2AB5               	line	44
  4056                           	
  4057                           l475:	
  4058  0AB5                     	line	45
  4059                           	
  4060                           l1915:	
  4061  0AB5                     	btfss	(___wmul@multiplier)^080h,(0)&7
  4062  0AB5  1C20               	goto	u1581
  4063  0AB6  2AB8               	goto	u1580
  4064  0AB7  2AB9               u1581:
  4065  0AB8                     	goto	l476
  4066  0AB8  2ABF               u1580:
  4067  0AB9                     	line	46
  4068                           	
  4069                           l1917:	
  4070  0AB9                     	movf	(___wmul@multiplicand)^080h,w
  4071  0AB9  0822               	addwf	(___wmul@product)^080h,f
  4072  0ABA  07A4               	skipnc
  4073  0ABB  1803               	incf	(___wmul@product+1)^080h,f
  4074  0ABC  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  4075  0ABD  0823               	addwf	(___wmul@product+1)^080h,f
  4076  0ABE  07A5               	
  4077                           l476:	
  4078  0ABF                     	line	47
  4079                           	movlw	01h
  4080  0ABF  3001               	
  4081                           u1595:
  4082  0AC0                     	clrc
  4083  0AC0  1003               	rlf	(___wmul@multiplicand)^080h,f
  4084  0AC1  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  4085  0AC2  0DA3               	addlw	-1
  4086  0AC3  3EFF               	skipz
  4087  0AC4  1D03               	goto	u1595
  4088  0AC5  2AC0               	line	48
  4089                           	
  4090                           l1919:	
  4091  0AC6                     	movlw	01h
  4092  0AC6  3001               	
  4093                           u1605:
  4094  0AC7                     	clrc
  4095  0AC7  1003               	rrf	(___wmul@multiplier+1)^080h,f
  4096  0AC8  0CA1               	rrf	(___wmul@multiplier)^080h,f
  4097  0AC9  0CA0               	addlw	-1
  4098  0ACA  3EFF               	skipz
  4099  0ACB  1D03               	goto	u1605
  4100  0ACC  2AC7               	line	49
  4101                           	
  4102                           l1921:	
  4103  0ACD                     	movf	((___wmul@multiplier)^080h),w
  4104  0ACD  0820               iorwf	((___wmul@multiplier+1)^080h),w
  4105  0ACE  0421               	btfss	status,2
  4106  0ACF  1D03               	goto	u1611
  4107  0AD0  2AD2               	goto	u1610
  4108  0AD1  2AD3               u1611:
  4109  0AD2                     	goto	l1915
  4110  0AD2  2AB5               u1610:
  4111  0AD3                     	goto	l1923
  4112  0AD3  2AD4               	
  4113                           l477:	
  4114  0AD4                     	line	52
  4115                           	
  4116                           l1923:	
  4117  0AD4                     	movf	(___wmul@product+1)^080h,w
  4118  0AD4  0825               	movwf	(?___wmul+1)^080h
  4119  0AD5  00A1               	movf	(___wmul@product)^080h,w
  4120  0AD6  0824               	movwf	(?___wmul)^080h
  4121  0AD7  00A0               	goto	l478
  4122  0AD8  2AD9               	
  4123                           l1925:	
  4124  0AD9                     	line	53
  4125                           	
  4126                           l478:	
  4127  0AD9                     	return
  4128  0AD9  0008               	opt stack 0
  4129                           GLOBAL	__end_of___wmul
  4130                           	__end_of___wmul:
  4131  0ADA                     	signat	___wmul,8314
  4132                           	global	_sprintf
  4133                           
  4134 ;; *************** function _sprintf *****************
  4135 ;; Defined at:
  4136 ;;		line 500 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;  sp              1    wreg     PTR unsigned char 
  4139 ;;		 -> write_int@num(2), 
  4140 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4141 ;;		 -> STR_3(3), 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  4144 ;;		 -> write_int@num(2), 
  4145 ;;  tmpval          4    0        struct .
  4146 ;;  val             2   25[BANK1 ] unsigned int 
  4147 ;;  cp              2    0        PTR const unsigned char 
  4148 ;;  len             2    0        unsigned int 
  4149 ;;  c               1   28[BANK1 ] unsigned char 
  4150 ;;  prec            1   24[BANK1 ] char 
  4151 ;;  flag            1   23[BANK1 ] unsigned char 
  4152 ;;  ap              1   22[BANK1 ] PTR void [1]
  4153 ;;		 -> ?_sprintf(2), 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2   14[BANK1 ] int 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         0       0       4       0       0
  4164 ;;      Locals:         0       0       7       0       0
  4165 ;;      Temps:          0       0       4       0       0
  4166 ;;      Totals:         0       0      15       0       0
  4167 ;;Total ram usage:       15 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    5
  4170 ;; This function calls:
  4171 ;;		___lwdiv
  4172 ;;		___lwmod
  4173 ;; This function is called by:
  4174 ;;		_write_int
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4178                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4179                           	line	500
  4180                           global __ptext11
  4181                           __ptext11:	;psect for function _sprintf
  4182  049D                     psect	text11
  4183                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4184                           	line	500
  4185                           	global	__size_of_sprintf
  4186                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4187  0136                     	
  4188                           _sprintf:	
  4189  049D                     ;incstack = 0
  4190 ;; using string table level
  4191                           	opt	stack 1
  4192                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4193                           ;sprintf@sp stored from wreg
  4194                           	bsf	status, 5	;RP0=1, select bank1
  4195  049D  1683               	bcf	status, 6	;RP1=0, select bank1
  4196  049E  1303               	movwf	(sprintf@sp)^080h
  4197  049F  00BB               	line	545
  4198                           	
  4199                           l2023:	
  4200  04A0                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
                                  char * f, ...);/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
                                 crochip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.00/pic/source
                                 s/c90/common/doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.00/pic/sources/c90/
                                 common/doprnt.c: 520:  unsigned char flag;;/opt/microchip/xc8/v2.00/pic/sources/c90/comm
                                 on/doprnt.c: 538:  } tmpval;
  4201                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  4202  04A0  30B0               	movwf	(??_sprintf+0)^080h+0
  4203  04A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4204  04A2  0832               	movwf	(sprintf@ap)^080h
  4205  04A3  00B6               	line	548
  4206                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4207                           	goto	l2075
  4208  04A4  2DAB               	
  4209                           l454:	
  4210  04A5                     	line	550
  4211                           	
  4212                           l2025:	
  4213  04A5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  4214                           		movlw	37
  4215  04A5  3025               	xorwf	((sprintf@c)^080h),w
  4216  04A6  063C               	btfsc	status,2
  4217  04A7  1903               	goto	u1841
  4218  04A8  2CAA               	goto	u1840
  4219  04A9  2CAB               u1841:
  4220  04AA                     	goto	l2031
  4221  04AA  2CB7               u1840:
  4222  04AB                     	line	553
  4223                           	
  4224                           l2027:	
  4225  04AB                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
                                 2.00/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  4226                           	movf	(sprintf@c)^080h,w
  4227  04AB  083C               	movwf	(??_sprintf+0)^080h+0
  4228  04AC  00B2               	movf	(sprintf@sp)^080h,w
  4229  04AD  083B               	movwf	fsr0
  4230  04AE  0084               	movf	(??_sprintf+0)^080h+0,w
  4231  04AF  0832               	bcf	status, 7	;select IRP bank0
  4232  04B0  1383               	movwf	indf
  4233  04B1  0080               	
  4234                           l2029:	
  4235  04B2                     	movlw	low(01h)
  4236  04B2  3001               	movwf	(??_sprintf+0)^080h+0
  4237  04B3  00B2               	movf	(??_sprintf+0)^080h+0,w
  4238  04B4  0832               	addwf	(sprintf@sp)^080h,f
  4239  04B5  07BB               	line	554
  4240                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 554:    continue;
  4241                           	goto	l2075
  4242  04B6  2DAB               	line	555
  4243                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 555:   }
  4244                           	
  4245                           l455:	
  4246  04B7                     	line	560
  4247                           	
  4248                           l2031:	
  4249  04B7                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  4250                           	clrf	(sprintf@flag)^080h
  4251  04B7  01B7               	line	654
  4252                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 654:   switch(c = *f++) {
  4253                           	goto	l2035
  4254  04B8  2CBE               	line	656
  4255                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 656:   case 0:
  4256                           	
  4257                           l457:	
  4258  04B9                     	line	657
  4259                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 657:    goto alldone;
  4260                           	goto	l2077
  4261  04B9  2DCD               	line	716
  4262                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 716:   case 'd':
  4263                           	
  4264                           l459:	
  4265  04BA                     	goto	l2037
  4266  04BA  2CE9               	line	717
  4267                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 717:   case 'i':
  4268                           	
  4269                           l460:	
  4270  04BB                     	line	718
  4271                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 718:    break;
  4272                           	goto	l2037
  4273  04BB  2CE9               	line	821
  4274                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 821:   default:
  4275                           	
  4276                           l462:	
  4277  04BC                     	line	832
  4278                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 832:    continue;
  4279                           	goto	l2075
  4280  04BC  2DAB               	line	841
  4281                           	
  4282                           l2033:	
  4283  04BD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 841:   }
  4284                           	goto	l2037
  4285  04BD  2CE9               	
  4286                           l456:	
  4287  04BE                     	
  4288                           l2035:	
  4289  04BE                     	movf	(sprintf@f+1)^080h,w
  4290  04BE  082F               	movwf	(??_sprintf+0)^080h+0+1
  4291  04BF  00B3               	movf	(sprintf@f)^080h,w
  4292  04C0  082E               	movwf	(??_sprintf+0)^080h+0
  4293  04C1  00B2               	incf	(sprintf@f)^080h,f
  4294  04C2  0AAE               	skipnz
  4295  04C3  1903               	incf	(sprintf@f+1)^080h,f
  4296  04C4  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4297  04C5  0833               	bcf	status, 5	;RP0=0, select bank0
  4298  04C6  1283               	bcf	status, 6	;RP1=0, select bank0
  4299  04C7  1303               	movwf	btemp+1
  4300  04C8  00FF               	bsf	status, 5	;RP0=1, select bank1
  4301  04C9  1683               	bcf	status, 6	;RP1=0, select bank1
  4302  04CA  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4303  04CB  0832               	movwf	fsr0
  4304  04CC  0084               	bcf	status, 5	;RP0=0, select bank0
  4305  04CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4306  04CE  1303               	fcall	stringtab
  4307  04CF  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4308  04D4  1683               	bcf	status, 6	;RP1=0, select bank1
  4309  04D5  1303               	movwf	(sprintf@c)^080h
  4310  04D6  00BC               	movwf	(??_sprintf+2)^080h+0
  4311  04D7  00B4               	clrf	(??_sprintf+2)^080h+0+1
  4312  04D8  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4313                           ; Switch size 1, requested type "space"
  4314                           ; Number of cases is 1, Range of values is 0 to 0
  4315                           ; switch strategies available:
  4316                           ; Name         Instructions Cycles
  4317                           ; simple_byte            4     3 (average)
  4318                           ; direct_byte           11     8 (fixed)
  4319                           ; jumptable            260     6 (fixed)
  4320                           ;	Chosen strategy is simple_byte
  4321                           
  4322                           	movf 1+(??_sprintf+2)^080h+0,w
  4323  04D9  0835               	opt asmopt_push
  4324                           	opt asmopt_off
  4325                           	xorlw	0^0	; case 0
  4326  04DA  3A00               	skipnz
  4327  04DB  1903               	goto	l2833
  4328  04DC  2CDE               	goto	l2075
  4329  04DD  2DAB               	opt asmopt_pop
  4330                           	
  4331                           l2833:	
  4332  04DE                     ; Switch size 1, requested type "space"
  4333                           ; Number of cases is 3, Range of values is 0 to 105
  4334                           ; switch strategies available:
  4335                           ; Name         Instructions Cycles
  4336                           ; simple_byte           10     6 (average)
  4337                           ; jumptable            260     6 (fixed)
  4338                           ;	Chosen strategy is simple_byte
  4339                           
  4340                           	movf 0+(??_sprintf+2)^080h+0,w
  4341  04DE  0834               	opt asmopt_push
  4342                           	opt asmopt_off
  4343                           	xorlw	0^0	; case 0
  4344  04DF  3A00               	skipnz
  4345  04E0  1903               	goto	l2077
  4346  04E1  2DCD               	xorlw	100^0	; case 100
  4347  04E2  3A64               	skipnz
  4348  04E3  1903               	goto	l2037
  4349  04E4  2CE9               	xorlw	105^100	; case 105
  4350  04E5  3A0D               	skipnz
  4351  04E6  1903               	goto	l2037
  4352  04E7  2CE9               	goto	l2075
  4353  04E8  2DAB               	opt asmopt_pop
  4354                           
  4355                           	
  4356                           l461:	
  4357  04E9                     	line	1278
  4358                           	
  4359                           l2037:	
  4360  04E9                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
                                 ap), (int)0));
  4361                           	movf	(sprintf@ap)^080h,w
  4362  04E9  0836               	movwf	fsr0
  4363  04EA  0084               	bcf	status, 7	;select IRP bank0
  4364  04EB  1383               	movf	indf,w
  4365  04EC  0800               	movwf	(sprintf@val)^080h
  4366  04ED  00B9               	incf	fsr0,f
  4367  04EE  0A84               	movf	indf,w
  4368  04EF  0800               	movwf	(sprintf@val+1)^080h
  4369  04F0  00BA               	
  4370                           l2039:	
  4371  04F1                     	movlw	low(02h)
  4372  04F1  3002               	movwf	(??_sprintf+0)^080h+0
  4373  04F2  00B2               	movf	(??_sprintf+0)^080h+0,w
  4374  04F3  0832               	addwf	(sprintf@ap)^080h,f
  4375  04F4  07B6               	line	1280
  4376                           	
  4377                           l2041:	
  4378  04F5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  4379                           	btfss	(sprintf@val+1)^080h,7
  4380  04F5  1FBA               	goto	u1851
  4381  04F6  2CF8               	goto	u1850
  4382  04F7  2CF9               u1851:
  4383  04F8                     	goto	l2047
  4384  04F8  2D03               u1850:
  4385  04F9                     	line	1281
  4386                           	
  4387                           l2043:	
  4388  04F9                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  4389                           	movlw	low(03h)
  4390  04F9  3003               	movwf	(??_sprintf+0)^080h+0
  4391  04FA  00B2               	movf	(??_sprintf+0)^080h+0,w
  4392  04FB  0832               	iorwf	(sprintf@flag)^080h,f
  4393  04FC  04B7               	line	1282
  4394                           	
  4395                           l2045:	
  4396  04FD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  4397                           	comf	(sprintf@val)^080h,f
  4398  04FD  09B9               	comf	(sprintf@val+1)^080h,f
  4399  04FE  09BA               	incf	(sprintf@val)^080h,f
  4400  04FF  0AB9               	skipnz
  4401  0500  1903               	incf	(sprintf@val+1)^080h,f
  4402  0501  0ABA               	goto	l2047
  4403  0502  2D03               	line	1283
  4404                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1283:    }
  4405                           	
  4406                           l463:	
  4407  0503                     	line	1324
  4408                           	
  4409                           l2047:	
  4410  0503                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
                                 powers[0] ; c++)
  4411                           	clrf	(sprintf@c)^080h
  4412  0503  01BC               	incf	(sprintf@c)^080h,f
  4413  0504  0ABC               	
  4414                           l2049:	
  4415  0505                     		movlw	5
  4416  0505  3005               	xorwf	((sprintf@c)^080h),w
  4417  0506  063C               	btfss	status,2
  4418  0507  1D03               	goto	u1861
  4419  0508  2D0A               	goto	u1860
  4420  0509  2D0B               u1861:
  4421  050A                     	goto	l2053
  4422  050A  2D0D               u1860:
  4423  050B                     	goto	l2059
  4424  050B  2D41               	
  4425                           l2051:	
  4426  050C                     	goto	l2059
  4427  050C  2D41               	
  4428                           l464:	
  4429  050D                     	line	1325
  4430                           	
  4431                           l2053:	
  4432  050D                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
                                 )
  4433                           	movf	(sprintf@c)^080h,w
  4434  050D  083C               	movwf	(??_sprintf+0)^080h+0
  4435  050E  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4436  050F  0732               	addlw	low(((_dpowers)|8000h))
  4437  0510  3E84               	movwf	fsr0
  4438  0511  0084               	movlw	high(((_dpowers)|8000h))
  4439  0512  3084               	skipnc
  4440  0513  1803               	addlw	1
  4441  0514  3E01               	bcf	status, 5	;RP0=0, select bank0
  4442  0515  1283               	bcf	status, 6	;RP1=0, select bank0
  4443  0516  1303               	movwf	btemp+1
  4444  0517  00FF               	fcall	stringtab
  4445  0518  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4446  051D  1683               	bcf	status, 6	;RP1=0, select bank1
  4447  051E  1303               	movwf	(??_sprintf+1)^080h+0
  4448  051F  00B3               	bcf	status, 5	;RP0=0, select bank0
  4449  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  4450  0521  1303               	fcall	stringtab
  4451  0522  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4452  0527  1683               	bcf	status, 6	;RP1=0, select bank1
  4453  0528  1303               	movwf	(??_sprintf+1)^080h+0+1
  4454  0529  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  4455  052A  0834               	subwf	(sprintf@val+1)^080h,w
  4456  052B  023A               	skipz
  4457  052C  1D03               	goto	u1875
  4458  052D  2D30               	movf	0+(??_sprintf+1)^080h+0,w
  4459  052E  0833               	subwf	(sprintf@val)^080h,w
  4460  052F  0239               u1875:
  4461  0530                     	skipnc
  4462  0530  1803               	goto	u1871
  4463  0531  2D33               	goto	u1870
  4464  0532  2D34               u1871:
  4465  0533                     	goto	l2057
  4466  0533  2D36               u1870:
  4467  0534                     	goto	l2059
  4468  0534  2D41               	line	1326
  4469                           	
  4470                           l2055:	
  4471  0535                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1326:      break;
  4472                           	goto	l2059
  4473  0535  2D41               	
  4474                           l466:	
  4475  0536                     	
  4476                           l2057:	
  4477  0536                     	movlw	low(01h)
  4478  0536  3001               	movwf	(??_sprintf+0)^080h+0
  4479  0537  00B2               	movf	(??_sprintf+0)^080h+0,w
  4480  0538  0832               	addwf	(sprintf@c)^080h,f
  4481  0539  07BC               		movlw	5
  4482  053A  3005               	xorwf	((sprintf@c)^080h),w
  4483  053B  063C               	btfss	status,2
  4484  053C  1D03               	goto	u1881
  4485  053D  2D3F               	goto	u1880
  4486  053E  2D40               u1881:
  4487  053F                     	goto	l2053
  4488  053F  2D0D               u1880:
  4489  0540                     	goto	l2059
  4490  0540  2D41               	
  4491                           l465:	
  4492  0541                     	line	1457
  4493                           	
  4494                           l2059:	
  4495  0541                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  4496                           	movf	(sprintf@flag)^080h,w
  4497  0541  0837               	andlw	03h
  4498  0542  3903               	btfsc	status,2
  4499  0543  1903               	goto	u1891
  4500  0544  2D46               	goto	u1890
  4501  0545  2D47               u1891:
  4502  0546                     	goto	l2065
  4503  0546  2D53               u1890:
  4504  0547                     	line	1458
  4505                           	
  4506                           l2061:	
  4507  0547                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));

  4508                           	movlw	low(02Dh)
  4509  0547  302D               	movwf	(??_sprintf+0)^080h+0
  4510  0548  00B2               	movf	(sprintf@sp)^080h,w
  4511  0549  083B               	movwf	fsr0
  4512  054A  0084               	movf	(??_sprintf+0)^080h+0,w
  4513  054B  0832               	bcf	status, 7	;select IRP bank0
  4514  054C  1383               	movwf	indf
  4515  054D  0080               	
  4516                           l2063:	
  4517  054E                     	movlw	low(01h)
  4518  054E  3001               	movwf	(??_sprintf+0)^080h+0
  4519  054F  00B2               	movf	(??_sprintf+0)^080h+0,w
  4520  0550  0832               	addwf	(sprintf@sp)^080h,f
  4521  0551  07BB               	goto	l2065
  4522  0552  2D53               	
  4523                           l467:	
  4524  0553                     	line	1491
  4525                           	
  4526                           l2065:	
  4527  0553                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  4528                           	movf	(sprintf@c)^080h,w
  4529  0553  083C               	movwf	(??_sprintf+0)^080h+0
  4530  0554  00B2               	movf	(??_sprintf+0)^080h+0,w
  4531  0555  0832               	movwf	(sprintf@prec)^080h
  4532  0556  00B8               	line	1493
  4533                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4534                           	goto	l2073
  4535  0557  2DA0               	
  4536                           l469:	
  4537  0558                     	line	1508
  4538                           	
  4539                           l2067:	
  4540  0558                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';

  4541                           	movlw	0Ah
  4542  0558  300A               	movwf	(___lwmod@divisor)^080h
  4543  0559  00A8               	movlw	0
  4544  055A  3000               	movwf	((___lwmod@divisor)^080h)+1
  4545  055B  00A9               	movf	(sprintf@prec)^080h,w
  4546  055C  0838               	movwf	(??_sprintf+0)^080h+0
  4547  055D  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4548  055E  0732               	addlw	low(((_dpowers)|8000h))
  4549  055F  3E84               	movwf	fsr0
  4550  0560  0084               	movlw	high(((_dpowers)|8000h))
  4551  0561  3084               	skipnc
  4552  0562  1803               	addlw	1
  4553  0563  3E01               	bcf	status, 5	;RP0=0, select bank0
  4554  0564  1283               	bcf	status, 6	;RP1=0, select bank0
  4555  0565  1303               	movwf	btemp+1
  4556  0566  00FF               	fcall	stringtab
  4557  0567  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4558  056C  1683               	bcf	status, 6	;RP1=0, select bank1
  4559  056D  1303               	movwf	(___lwdiv@divisor)^080h
  4560  056E  00A0               	bcf	status, 5	;RP0=0, select bank0
  4561  056F  1283               	bcf	status, 6	;RP1=0, select bank0
  4562  0570  1303               	fcall	stringtab
  4563  0571  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4564  0576  1683               	bcf	status, 6	;RP1=0, select bank1
  4565  0577  1303               	movwf	(___lwdiv@divisor+1)^080h
  4566  0578  00A1               	movf	(sprintf@val+1)^080h,w
  4567  0579  083A               	movwf	(___lwdiv@dividend+1)^080h
  4568  057A  00A3               	movf	(sprintf@val)^080h,w
  4569  057B  0839               	movwf	(___lwdiv@dividend)^080h
  4570  057C  00A2               	fcall	___lwdiv
  4571  057D  120A  158A  24ED  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4572  0582  1683               	bcf	status, 6	;RP1=0, select bank1
  4573  0583  1303               	movf	(1+(?___lwdiv))^080h,w
  4574  0584  0821               	movwf	(___lwmod@dividend+1)^080h
  4575  0585  00AB               	movf	(0+(?___lwdiv))^080h,w
  4576  0586  0820               	movwf	(___lwmod@dividend)^080h
  4577  0587  00AA               	fcall	___lwmod
  4578  0588  120A  158A  245F  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4579  058D  1683               	bcf	status, 6	;RP1=0, select bank1
  4580  058E  1303               	movf	(0+(?___lwmod))^080h,w
  4581  058F  0828               	addlw	030h
  4582  0590  3E30               	movwf	(??_sprintf+1)^080h+0
  4583  0591  00B3               	movf	(??_sprintf+1)^080h+0,w
  4584  0592  0833               	movwf	(sprintf@c)^080h
  4585  0593  00BC               	line	1543
  4586                           	
  4587                           l2069:	
  4588  0594                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  4589                           	movf	(sprintf@c)^080h,w
  4590  0594  083C               	movwf	(??_sprintf+0)^080h+0
  4591  0595  00B2               	movf	(sprintf@sp)^080h,w
  4592  0596  083B               	movwf	fsr0
  4593  0597  0084               	movf	(??_sprintf+0)^080h+0,w
  4594  0598  0832               	bcf	status, 7	;select IRP bank0
  4595  0599  1383               	movwf	indf
  4596  059A  0080               	
  4597                           l2071:	
  4598  059B                     	movlw	low(01h)
  4599  059B  3001               	movwf	(??_sprintf+0)^080h+0
  4600  059C  00B2               	movf	(??_sprintf+0)^080h+0,w
  4601  059D  0832               	addwf	(sprintf@sp)^080h,f
  4602  059E  07BB               	goto	l2073
  4603  059F  2DA0               	line	1544
  4604                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1544:   }
  4605                           	
  4606                           l468:	
  4607  05A0                     	line	1493
  4608                           	
  4609                           l2073:	
  4610  05A0                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4611                           	movlw	low(-1)
  4612  05A0  30FF               	movwf	(??_sprintf+0)^080h+0
  4613  05A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4614  05A2  0832               	addwf	(sprintf@prec)^080h,f
  4615  05A3  07B8               		incf	(((sprintf@prec)^080h)),w
  4616  05A4  0A38               	btfss	status,2
  4617  05A5  1D03               	goto	u1901
  4618  05A6  2DA8               	goto	u1900
  4619  05A7  2DA9               u1901:
  4620  05A8                     	goto	l2067
  4621  05A8  2D58               u1900:
  4622  05A9                     	goto	l2075
  4623  05A9  2DAB               	
  4624                           l470:	
  4625  05AA                     	goto	l2075
  4626  05AA  2DAB               	line	1552
  4627                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1552:  }
  4628                           	
  4629                           l453:	
  4630  05AB                     	line	548
  4631                           	
  4632                           l2075:	
  4633  05AB                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4634                           	movf	(sprintf@f+1)^080h,w
  4635  05AB  082F               	movwf	(??_sprintf+0)^080h+0+1
  4636  05AC  00B3               	movf	(sprintf@f)^080h,w
  4637  05AD  082E               	movwf	(??_sprintf+0)^080h+0
  4638  05AE  00B2               	incf	(sprintf@f)^080h,f
  4639  05AF  0AAE               	skipnz
  4640  05B0  1903               	incf	(sprintf@f+1)^080h,f
  4641  05B1  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4642  05B2  0833               	bcf	status, 5	;RP0=0, select bank0
  4643  05B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4644  05B4  1303               	movwf	btemp+1
  4645  05B5  00FF               	bsf	status, 5	;RP0=1, select bank1
  4646  05B6  1683               	bcf	status, 6	;RP1=0, select bank1
  4647  05B7  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4648  05B8  0832               	movwf	fsr0
  4649  05B9  0084               	bcf	status, 5	;RP0=0, select bank0
  4650  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4651  05BB  1303               	fcall	stringtab
  4652  05BC  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4653  05C1  1683               	bcf	status, 6	;RP1=0, select bank1
  4654  05C2  1303               	movwf	(??_sprintf+2)^080h+0
  4655  05C3  00B4               	movf	(??_sprintf+2)^080h+0,w
  4656  05C4  0834               	movwf	(sprintf@c)^080h
  4657  05C5  00BC               	movf	(((sprintf@c)^080h)),w
  4658  05C6  083C               	btfss	status,2
  4659  05C7  1D03               	goto	u1911
  4660  05C8  2DCA               	goto	u1910
  4661  05C9  2DCB               u1911:
  4662  05CA                     	goto	l2025
  4663  05CA  2CA5               u1910:
  4664  05CB                     	goto	l2077
  4665  05CB  2DCD               	
  4666                           l471:	
  4667  05CC                     	goto	l2077
  4668  05CC  2DCD               	line	1554
  4669                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1554: alldone:
  4670                           	
  4671                           l458:	
  4672  05CD                     	line	1557
  4673                           	
  4674                           l2077:	
  4675  05CD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  4676                           	movf	(sprintf@sp)^080h,w
  4677  05CD  083B               	movwf	fsr0
  4678  05CE  0084               	bcf	status, 7	;select IRP bank0
  4679  05CF  1383               	clrf	indf
  4680  05D0  0180               	goto	l472
  4681  05D1  2DD2               	line	1559
  4682                           	
  4683                           l2079:	
  4684  05D2                     	line	1560
  4685                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1559:  return 0;;	Return valu
                                 e of _sprintf is never used
  4686                           	
  4687                           l472:	
  4688  05D2                     	return
  4689  05D2  0008               	opt stack 0
  4690                           GLOBAL	__end_of_sprintf
  4691                           	__end_of_sprintf:
  4692  05D3                     	signat	_sprintf,4698
  4693                           	global	___lwmod
  4694                           
  4695 ;; *************** function ___lwmod *****************
  4696 ;; Defined at:
  4697 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  divisor         2    8[BANK1 ] unsigned int 
  4700 ;;  dividend        2   10[BANK1 ] unsigned int 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  counter         1   13[BANK1 ] unsigned char 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  2    8[BANK1 ] unsigned int 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4712 ;;      Params:         0       0       4       0       0
  4713 ;;      Locals:         0       0       1       0       0
  4714 ;;      Temps:          0       0       1       0       0
  4715 ;;      Totals:         0       0       6       0       0
  4716 ;;Total ram usage:        6 bytes
  4717 ;; Hardware stack levels used:    1
  4718 ;; Hardware stack levels required when called:    4
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_sprintf
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  4726                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4727                           	line	5
  4728                           global __ptext12
  4729                           __ptext12:	;psect for function ___lwmod
  4730  0C5F                     psect	text12
  4731                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4732                           	line	5
  4733                           	global	__size_of___lwmod
  4734                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4735  0043                     	
  4736                           ___lwmod:	
  4737  0C5F                     ;incstack = 0
  4738                           	opt	stack 0
  4739                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4740                           	line	12
  4741                           	
  4742                           l1993:	
  4743  0C5F                     	bsf	status, 5	;RP0=1, select bank1
  4744  0C5F  1683               	bcf	status, 6	;RP1=0, select bank1
  4745  0C60  1303               	movf	((___lwmod@divisor)^080h),w
  4746  0C61  0828               iorwf	((___lwmod@divisor+1)^080h),w
  4747  0C62  0429               	btfsc	status,2
  4748  0C63  1903               	goto	u1771
  4749  0C64  2C66               	goto	u1770
  4750  0C65  2C67               u1771:
  4751  0C66                     	goto	l2011
  4752  0C66  2C9C               u1770:
  4753  0C67                     	line	13
  4754                           	
  4755                           l1995:	
  4756  0C67                     	clrf	(___lwmod@counter)^080h
  4757  0C67  01AD               	incf	(___lwmod@counter)^080h,f
  4758  0C68  0AAD               	line	14
  4759                           	goto	l2001
  4760  0C69  2C76               	
  4761                           l753:	
  4762  0C6A                     	line	15
  4763                           	
  4764                           l1997:	
  4765  0C6A                     	movlw	01h
  4766  0C6A  3001               	
  4767                           u1785:
  4768  0C6B                     	clrc
  4769  0C6B  1003               	rlf	(___lwmod@divisor)^080h,f
  4770  0C6C  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  4771  0C6D  0DA9               	addlw	-1
  4772  0C6E  3EFF               	skipz
  4773  0C6F  1D03               	goto	u1785
  4774  0C70  2C6B               	line	16
  4775                           	
  4776                           l1999:	
  4777  0C71                     	movlw	low(01h)
  4778  0C71  3001               	movwf	(??___lwmod+0)^080h+0
  4779  0C72  00AC               	movf	(??___lwmod+0)^080h+0,w
  4780  0C73  082C               	addwf	(___lwmod@counter)^080h,f
  4781  0C74  07AD               	goto	l2001
  4782  0C75  2C76               	line	17
  4783                           	
  4784                           l752:	
  4785  0C76                     	line	14
  4786                           	
  4787                           l2001:	
  4788  0C76                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  4789  0C76  1FA9               	goto	u1791
  4790  0C77  2C79               	goto	u1790
  4791  0C78  2C7A               u1791:
  4792  0C79                     	goto	l1997
  4793  0C79  2C6A               u1790:
  4794  0C7A                     	goto	l2003
  4795  0C7A  2C7C               	
  4796                           l754:	
  4797  0C7B                     	goto	l2003
  4798  0C7B  2C7C               	line	18
  4799                           	
  4800                           l755:	
  4801  0C7C                     	line	19
  4802                           	
  4803                           l2003:	
  4804  0C7C                     	movf	(___lwmod@divisor+1)^080h,w
  4805  0C7C  0829               	subwf	(___lwmod@dividend+1)^080h,w
  4806  0C7D  022B               	skipz
  4807  0C7E  1D03               	goto	u1805
  4808  0C7F  2C82               	movf	(___lwmod@divisor)^080h,w
  4809  0C80  0828               	subwf	(___lwmod@dividend)^080h,w
  4810  0C81  022A               u1805:
  4811  0C82                     	skipc
  4812  0C82  1C03               	goto	u1801
  4813  0C83  2C85               	goto	u1800
  4814  0C84  2C86               u1801:
  4815  0C85                     	goto	l2007
  4816  0C85  2C8D               u1800:
  4817  0C86                     	line	20
  4818                           	
  4819                           l2005:	
  4820  0C86                     	movf	(___lwmod@divisor)^080h,w
  4821  0C86  0828               	subwf	(___lwmod@dividend)^080h,f
  4822  0C87  02AA               	movf	(___lwmod@divisor+1)^080h,w
  4823  0C88  0829               	skipc
  4824  0C89  1C03               	decf	(___lwmod@dividend+1)^080h,f
  4825  0C8A  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  4826  0C8B  02AB               	goto	l2007
  4827  0C8C  2C8D               	
  4828                           l756:	
  4829  0C8D                     	line	21
  4830                           	
  4831                           l2007:	
  4832  0C8D                     	movlw	01h
  4833  0C8D  3001               	
  4834                           u1815:
  4835  0C8E                     	clrc
  4836  0C8E  1003               	rrf	(___lwmod@divisor+1)^080h,f
  4837  0C8F  0CA9               	rrf	(___lwmod@divisor)^080h,f
  4838  0C90  0CA8               	addlw	-1
  4839  0C91  3EFF               	skipz
  4840  0C92  1D03               	goto	u1815
  4841  0C93  2C8E               	line	22
  4842                           	
  4843                           l2009:	
  4844  0C94                     	movlw	01h
  4845  0C94  3001               	subwf	(___lwmod@counter)^080h,f
  4846  0C95  02AD               	btfss	status,2
  4847  0C96  1D03               	goto	u1821
  4848  0C97  2C99               	goto	u1820
  4849  0C98  2C9A               u1821:
  4850  0C99                     	goto	l2003
  4851  0C99  2C7C               u1820:
  4852  0C9A                     	goto	l2011
  4853  0C9A  2C9C               	
  4854                           l757:	
  4855  0C9B                     	goto	l2011
  4856  0C9B  2C9C               	line	23
  4857                           	
  4858                           l751:	
  4859  0C9C                     	line	24
  4860                           	
  4861                           l2011:	
  4862  0C9C                     	movf	(___lwmod@dividend+1)^080h,w
  4863  0C9C  082B               	movwf	(?___lwmod+1)^080h
  4864  0C9D  00A9               	movf	(___lwmod@dividend)^080h,w
  4865  0C9E  082A               	movwf	(?___lwmod)^080h
  4866  0C9F  00A8               	goto	l758
  4867  0CA0  2CA1               	
  4868                           l2013:	
  4869  0CA1                     	line	25
  4870                           	
  4871                           l758:	
  4872  0CA1                     	return
  4873  0CA1  0008               	opt stack 0
  4874                           GLOBAL	__end_of___lwmod
  4875                           	__end_of___lwmod:
  4876  0CA2                     	signat	___lwmod,8314
  4877                           	global	___lwdiv
  4878                           
  4879 ;; *************** function ___lwdiv *****************
  4880 ;; Defined at:
  4881 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  divisor         2    0[BANK1 ] unsigned int 
  4884 ;;  dividend        2    2[BANK1 ] unsigned int 
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;  quotient        2    5[BANK1 ] unsigned int 
  4887 ;;  counter         1    7[BANK1 ] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  2    0[BANK1 ] unsigned int 
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4897 ;;      Params:         0       0       4       0       0
  4898 ;;      Locals:         0       0       3       0       0
  4899 ;;      Temps:          0       0       1       0       0
  4900 ;;      Totals:         0       0       8       0       0
  4901 ;;Total ram usage:        8 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; Hardware stack levels required when called:    4
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_sprintf
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           psect	text13,local,class=CODE,delta=2,merge=1,group=1
  4911                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4912                           	line	5
  4913                           global __ptext13
  4914                           __ptext13:	;psect for function ___lwdiv
  4915  0CED                     psect	text13
  4916                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4917                           	line	5
  4918                           	global	__size_of___lwdiv
  4919                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4920  004D                     	
  4921                           ___lwdiv:	
  4922  0CED                     ;incstack = 0
  4923                           	opt	stack 0
  4924                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4925                           	line	13
  4926                           	
  4927                           l1967:	
  4928  0CED                     	bsf	status, 5	;RP0=1, select bank1
  4929  0CED  1683               	bcf	status, 6	;RP1=0, select bank1
  4930  0CEE  1303               	clrf	(___lwdiv@quotient)^080h
  4931  0CEF  01A5               	clrf	(___lwdiv@quotient+1)^080h
  4932  0CF0  01A6               	line	14
  4933                           	
  4934                           l1969:	
  4935  0CF1                     	movf	((___lwdiv@divisor)^080h),w
  4936  0CF1  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  4937  0CF2  0421               	btfsc	status,2
  4938  0CF3  1903               	goto	u1701
  4939  0CF4  2CF6               	goto	u1700
  4940  0CF5  2CF7               u1701:
  4941  0CF6                     	goto	l1989
  4942  0CF6  2D34               u1700:
  4943  0CF7                     	line	15
  4944                           	
  4945                           l1971:	
  4946  0CF7                     	clrf	(___lwdiv@counter)^080h
  4947  0CF7  01A7               	incf	(___lwdiv@counter)^080h,f
  4948  0CF8  0AA7               	line	16
  4949                           	goto	l1977
  4950  0CF9  2D06               	
  4951                           l743:	
  4952  0CFA                     	line	17
  4953                           	
  4954                           l1973:	
  4955  0CFA                     	movlw	01h
  4956  0CFA  3001               	
  4957                           u1715:
  4958  0CFB                     	clrc
  4959  0CFB  1003               	rlf	(___lwdiv@divisor)^080h,f
  4960  0CFC  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  4961  0CFD  0DA1               	addlw	-1
  4962  0CFE  3EFF               	skipz
  4963  0CFF  1D03               	goto	u1715
  4964  0D00  2CFB               	line	18
  4965                           	
  4966                           l1975:	
  4967  0D01                     	movlw	low(01h)
  4968  0D01  3001               	movwf	(??___lwdiv+0)^080h+0
  4969  0D02  00A4               	movf	(??___lwdiv+0)^080h+0,w
  4970  0D03  0824               	addwf	(___lwdiv@counter)^080h,f
  4971  0D04  07A7               	goto	l1977
  4972  0D05  2D06               	line	19
  4973                           	
  4974                           l742:	
  4975  0D06                     	line	16
  4976                           	
  4977                           l1977:	
  4978  0D06                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  4979  0D06  1FA1               	goto	u1721
  4980  0D07  2D09               	goto	u1720
  4981  0D08  2D0A               u1721:
  4982  0D09                     	goto	l1973
  4983  0D09  2CFA               u1720:
  4984  0D0A                     	goto	l1979
  4985  0D0A  2D0C               	
  4986                           l744:	
  4987  0D0B                     	goto	l1979
  4988  0D0B  2D0C               	line	20
  4989                           	
  4990                           l745:	
  4991  0D0C                     	line	21
  4992                           	
  4993                           l1979:	
  4994  0D0C                     	movlw	01h
  4995  0D0C  3001               	
  4996                           u1735:
  4997  0D0D                     	clrc
  4998  0D0D  1003               	rlf	(___lwdiv@quotient)^080h,f
  4999  0D0E  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  5000  0D0F  0DA6               	addlw	-1
  5001  0D10  3EFF               	skipz
  5002  0D11  1D03               	goto	u1735
  5003  0D12  2D0D               	line	22
  5004                           	movf	(___lwdiv@divisor+1)^080h,w
  5005  0D13  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  5006  0D14  0223               	skipz
  5007  0D15  1D03               	goto	u1745
  5008  0D16  2D19               	movf	(___lwdiv@divisor)^080h,w
  5009  0D17  0820               	subwf	(___lwdiv@dividend)^080h,w
  5010  0D18  0222               u1745:
  5011  0D19                     	skipc
  5012  0D19  1C03               	goto	u1741
  5013  0D1A  2D1C               	goto	u1740
  5014  0D1B  2D1D               u1741:
  5015  0D1C                     	goto	l1985
  5016  0D1C  2D25               u1740:
  5017  0D1D                     	line	23
  5018                           	
  5019                           l1981:	
  5020  0D1D                     	movf	(___lwdiv@divisor)^080h,w
  5021  0D1D  0820               	subwf	(___lwdiv@dividend)^080h,f
  5022  0D1E  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  5023  0D1F  0821               	skipc
  5024  0D20  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  5025  0D21  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  5026  0D22  02A3               	line	24
  5027                           	
  5028                           l1983:	
  5029  0D23                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  5030  0D23  1425               	goto	l1985
  5031  0D24  2D25               	line	25
  5032                           	
  5033                           l746:	
  5034  0D25                     	line	26
  5035                           	
  5036                           l1985:	
  5037  0D25                     	movlw	01h
  5038  0D25  3001               	
  5039                           u1755:
  5040  0D26                     	clrc
  5041  0D26  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  5042  0D27  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  5043  0D28  0CA0               	addlw	-1
  5044  0D29  3EFF               	skipz
  5045  0D2A  1D03               	goto	u1755
  5046  0D2B  2D26               	line	27
  5047                           	
  5048                           l1987:	
  5049  0D2C                     	movlw	01h
  5050  0D2C  3001               	subwf	(___lwdiv@counter)^080h,f
  5051  0D2D  02A7               	btfss	status,2
  5052  0D2E  1D03               	goto	u1761
  5053  0D2F  2D31               	goto	u1760
  5054  0D30  2D32               u1761:
  5055  0D31                     	goto	l1979
  5056  0D31  2D0C               u1760:
  5057  0D32                     	goto	l1989
  5058  0D32  2D34               	
  5059                           l747:	
  5060  0D33                     	goto	l1989
  5061  0D33  2D34               	line	28
  5062                           	
  5063                           l741:	
  5064  0D34                     	line	29
  5065                           	
  5066                           l1989:	
  5067  0D34                     	movf	(___lwdiv@quotient+1)^080h,w
  5068  0D34  0826               	movwf	(?___lwdiv+1)^080h
  5069  0D35  00A1               	movf	(___lwdiv@quotient)^080h,w
  5070  0D36  0825               	movwf	(?___lwdiv)^080h
  5071  0D37  00A0               	goto	l748
  5072  0D38  2D39               	
  5073                           l1991:	
  5074  0D39                     	line	30
  5075                           	
  5076                           l748:	
  5077  0D39                     	return
  5078  0D39  0008               	opt stack 0
  5079                           GLOBAL	__end_of___lwdiv
  5080                           	__end_of___lwdiv:
  5081  0D3A                     	signat	___lwdiv,8314
  5082                           	global	_config
  5083                           
  5084 ;; *************** function _config *****************
  5085 ;; Defined at:
  5086 ;;		line 3 in file "Config.c"
  5087 ;; Parameters:    Size  Location     Type
  5088 ;;		None
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, status,2, status,0, pclath, cstack
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5100 ;;      Params:         0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0
  5102 ;;      Temps:          0       0       3       0       0
  5103 ;;      Totals:         0       0       3       0       0
  5104 ;;Total ram usage:        3 bytes
  5105 ;; Hardware stack levels used:    1
  5106 ;; Hardware stack levels required when called:    6
  5107 ;; This function calls:
  5108 ;;		_display_init
  5109 ;;		_init_adc
  5110 ;; This function is called by:
  5111 ;;		_main
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5115                           	file	"Config.c"
  5116                           	line	3
  5117                           global __ptext14
  5118                           __ptext14:	;psect for function _config
  5119  0E39                     psect	text14
  5120                           	file	"Config.c"
  5121                           	line	3
  5122                           	global	__size_of_config
  5123                           	__size_of_config	equ	__end_of_config-_config
  5124  0068                     	
  5125                           _config:	
  5126  0E39                     ;incstack = 0
  5127                           	opt	stack 1
  5128                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5129                           	line	5
  5130                           	
  5131                           l2507:	
  5132  0E39                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  5133                           	bsf	status, 5	;RP0=1, select bank1
  5134  0E39  1683               	bcf	status, 6	;RP1=0, select bank1
  5135  0E3A  1303               	movf	(143)^080h,w	;volatile
  5136  0E3B  080F               	andlw	not (((1<<3)-1)<<4)
  5137  0E3C  398F               	iorlw	(06h & ((1<<3)-1))<<4
  5138  0E3D  3860               	movwf	(143)^080h	;volatile
  5139  0E3E  008F               	line	6
  5140                           	
  5141                           l2509:	
  5142  0E3F                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  5143                           	bcf	(143)^080h,3	;volatile
  5144  0E3F  118F               	line	13
  5145                           	
  5146                           l2511:	
  5147  0E40                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  5148                           	bcf	(133)^080h,0	;volatile
  5149  0E40  1005               	line	14
  5150                           	
  5151                           l2513:	
  5152  0E41                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  5153                           	bcf	(133)^080h,1	;volatile
  5154  0E41  1085               	line	15
  5155                           	
  5156                           l2515:	
  5157  0E42                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  5158                           	bcf	(133)^080h,2	;volatile
  5159  0E42  1105               	line	16
  5160                           	
  5161                           l2517:	
  5162  0E43                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  5163                           	bcf	(133)^080h,3	;volatile
  5164  0E43  1185               	line	18
  5165                           	
  5166                           l2519:	
  5167  0E44                     ;Config.c: 18:     PORTA = 0x0F;
  5168                           	movlw	low(0Fh)
  5169  0E44  300F               	bcf	status, 5	;RP0=0, select bank0
  5170  0E45  1283               	bcf	status, 6	;RP1=0, select bank0
  5171  0E46  1303               	movwf	(5)	;volatile
  5172  0E47  0085               	line	25
  5173                           	
  5174                           l2521:	
  5175  0E48                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  5176                           	bsf	status, 5	;RP0=1, select bank1
  5177  0E48  1683               	bcf	status, 6	;RP1=0, select bank1
  5178  0E49  1303               	bsf	(134)^080h,4	;volatile
  5179  0E4A  1606               	line	26
  5180                           	
  5181                           l2523:	
  5182  0E4B                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  5183                           	bsf	(134)^080h,5	;volatile
  5184  0E4B  1686               	line	28
  5185                           	
  5186                           l2525:	
  5187  0E4C                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  5188                           	bsf	status, 5	;RP0=1, select bank3
  5189  0E4C  1683               	bsf	status, 6	;RP1=1, select bank3
  5190  0E4D  1703               	bcf	(393)^0180h,3	;volatile
  5191  0E4E  1189               	line	29
  5192                           	
  5193                           l2527:	
  5194  0E4F                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  5195                           	bcf	(393)^0180h,5	;volatile
  5196  0E4F  1289               	line	35
  5197                           	
  5198                           l2529:	
  5199  0E50                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  5200                           	bsf	status, 5	;RP0=1, select bank1
  5201  0E50  1683               	bcf	status, 6	;RP1=0, select bank1
  5202  0E51  1303               	bsf	(137)^080h,2	;volatile
  5203  0E52  1509               	line	36
  5204                           	
  5205                           l2531:	
  5206  0E53                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  5207                           	bsf	status, 5	;RP0=1, select bank3
  5208  0E53  1683               	bsf	status, 6	;RP1=1, select bank3
  5209  0E54  1703               	bsf	(392)^0180h,7	;volatile
  5210  0E55  1788               	line	41
  5211                           	
  5212                           l2533:	
  5213  0E56                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  5214                           	bsf	status, 5	;RP0=1, select bank1
  5215  0E56  1683               	bcf	status, 6	;RP1=0, select bank1
  5216  0E57  1303               	bsf	(134)^080h,0	;volatile
  5217  0E58  1406               	line	42
  5218                           	
  5219                           l2535:	
  5220  0E59                     ;Config.c: 42:     ANSELHbits.ANS11 = 0;
  5221                           	bsf	status, 5	;RP0=1, select bank3
  5222  0E59  1683               	bsf	status, 6	;RP1=1, select bank3
  5223  0E5A  1703               	bcf	(393)^0180h,3	;volatile
  5224  0E5B  1189               	line	48
  5225                           	
  5226                           l2537:	
  5227  0E5C                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  5228                           	bsf	status, 5	;RP0=1, select bank1
  5229  0E5C  1683               	bcf	status, 6	;RP1=0, select bank1
  5230  0E5D  1303               	bcf	(135)^080h,0	;volatile
  5231  0E5E  1007               	line	49
  5232                           	
  5233                           l2539:	
  5234  0E5F                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  5235                           	bcf	(135)^080h,1	;volatile
  5236  0E5F  1087               	line	51
  5237                           	
  5238                           l2541:	
  5239  0E60                     ;Config.c: 51:     PORTC = 0x00;
  5240                           	bcf	status, 5	;RP0=0, select bank0
  5241  0E60  1283               	bcf	status, 6	;RP1=0, select bank0
  5242  0E61  1303               	clrf	(7)	;volatile
  5243  0E62  0187               	line	57
  5244                           	
  5245                           l2543:	
  5246  0E63                     ;Config.c: 57:     display_init();
  5247                           	fcall	_display_init
  5248  0E63  120A  158A  253A  120A  158A  	line	60
  5249                           	
  5250                           l2545:	
  5251  0E68                     ;Config.c: 60:     init_adc();
  5252                           	fcall	_init_adc
  5253  0E68  120A  158A  2248  120A  158A  	line	68
  5254                           	
  5255                           l2547:	
  5256  0E6D                     ;Config.c: 68:     IOCBbits.IOCB4 = 1;
  5257                           	bsf	status, 5	;RP0=1, select bank1
  5258  0E6D  1683               	bcf	status, 6	;RP1=0, select bank1
  5259  0E6E  1303               	bsf	(150)^080h,4	;volatile
  5260  0E6F  1616               	line	69
  5261                           	
  5262                           l2549:	
  5263  0E70                     ;Config.c: 69:     IOCBbits.IOCB5 = 1;
  5264                           	bsf	(150)^080h,5	;volatile
  5265  0E70  1696               	line	71
  5266                           	
  5267                           l2551:	
  5268  0E71                     ;Config.c: 71:     INTCONbits.PEIE = 1;
  5269                           	bsf	(11),6	;volatile
  5270  0E71  170B               	line	72
  5271                           	
  5272                           l2553:	
  5273  0E72                     ;Config.c: 72:     INTCONbits.RBIE = 1;
  5274                           	bsf	(11),3	;volatile
  5275  0E72  158B               	line	74
  5276                           	
  5277                           l2555:	
  5278  0E73                     ;Config.c: 74:     INTCONbits.GIE = 1;
  5279                           	bsf	(11),7	;volatile
  5280  0E73  178B               	line	83
  5281                           	
  5282                           l2557:	
  5283  0E74                     ;Config.c: 83:     _inputUpdateRequired = 1;
  5284                           	bcf	status, 5	;RP0=0, select bank0
  5285  0E74  1283               	bcf	status, 6	;RP1=0, select bank0
  5286  0E75  1303               	clrf	(__inputUpdateRequired)
  5287  0E76  01E3               	incf	(__inputUpdateRequired),f
  5288  0E77  0AE3               	line	84
  5289                           	
  5290                           l2559:	
  5291  0E78                     ;Config.c: 84:     _selectedInput = 0;
  5292                           	bsf	status, 5	;RP0=1, select bank1
  5293  0E78  1683               	bcf	status, 6	;RP1=0, select bank1
  5294  0E79  1303               	clrf	(__selectedInput)^080h
  5295  0E7A  01CB               	clrf	(__selectedInput+1)^080h
  5296  0E7B  01CC               	line	85
  5297                           	
  5298                           l2561:	
  5299  0E7C                     ;Config.c: 85:     _lastA = PORTBbits.RB4;
  5300                           	bcf	status, 5	;RP0=0, select bank0
  5301  0E7C  1283               	bcf	status, 6	;RP1=0, select bank0
  5302  0E7D  1303               	swapf	(6),w	;volatile
  5303  0E7E  0E06               	andlw	(1<<1)-1
  5304  0E7F  3901               	bsf	status, 5	;RP0=1, select bank1
  5305  0E80  1683               	bcf	status, 6	;RP1=0, select bank1
  5306  0E81  1303               	movwf	(??_config+0)^080h+0
  5307  0E82  00A1               	clrf	(??_config+0)^080h+0+1
  5308  0E83  01A2               	movf	0+(??_config+0)^080h+0,w
  5309  0E84  0821               	bcf	status, 5	;RP0=0, select bank0
  5310  0E85  1283               	bcf	status, 6	;RP1=0, select bank0
  5311  0E86  1303               	movwf	(__lastA)
  5312  0E87  00E0               	bsf	status, 5	;RP0=1, select bank1
  5313  0E88  1683               	bcf	status, 6	;RP1=0, select bank1
  5314  0E89  1303               	movf	1+(??_config+0)^080h+0,w
  5315  0E8A  0822               	bcf	status, 5	;RP0=0, select bank0
  5316  0E8B  1283               	bcf	status, 6	;RP1=0, select bank0
  5317  0E8C  1303               	movwf	(__lastA+1)
  5318  0E8D  00E1               	line	86
  5319                           	
  5320                           l2563:	
  5321  0E8E                     ;Config.c: 86:     _lastB = PORTBbits.RB5;
  5322                           	swapf	(6),w	;volatile
  5323  0E8E  0E06               	bsf	status, 5	;RP0=1, select bank1
  5324  0E8F  1683               	bcf	status, 6	;RP1=0, select bank1
  5325  0E90  1303               	movwf	(??_config+0)^080h+0
  5326  0E91  00A1               	rrf	(??_config+0)^080h+0,w
  5327  0E92  0C21               	andlw	(1<<1)-1
  5328  0E93  3901               	movwf	(??_config+1)^080h+0
  5329  0E94  00A2               	clrf	(??_config+1)^080h+0+1
  5330  0E95  01A3               	movf	0+(??_config+1)^080h+0,w
  5331  0E96  0822               	bcf	status, 5	;RP0=0, select bank0
  5332  0E97  1283               	bcf	status, 6	;RP1=0, select bank0
  5333  0E98  1303               	movwf	(__lastB)
  5334  0E99  00DE               	bsf	status, 5	;RP0=1, select bank1
  5335  0E9A  1683               	bcf	status, 6	;RP1=0, select bank1
  5336  0E9B  1303               	movf	1+(??_config+1)^080h+0,w
  5337  0E9C  0823               	bcf	status, 5	;RP0=0, select bank0
  5338  0E9D  1283               	bcf	status, 6	;RP1=0, select bank0
  5339  0E9E  1303               	movwf	(__lastB+1)
  5340  0E9F  00DF               	line	87
  5341                           	
  5342                           l279:	
  5343  0EA0                     	return
  5344  0EA0  0008               	opt stack 0
  5345                           GLOBAL	__end_of_config
  5346                           	__end_of_config:
  5347  0EA1                     	signat	_config,89
  5348                           	global	_init_adc
  5349                           
  5350 ;; *************** function _init_adc *****************
  5351 ;; Defined at:
  5352 ;;		line 5 in file "Volume.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5366 ;;      Params:         0       0       0       0       0
  5367 ;;      Locals:         0       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0
  5369 ;;      Totals:         0       0       0       0       0
  5370 ;;Total ram usage:        0 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    4
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_config
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5380                           	file	"Volume.c"
  5381                           	line	5
  5382                           global __ptext15
  5383                           __ptext15:	;psect for function _init_adc
  5384  0A48                     psect	text15
  5385                           	file	"Volume.c"
  5386                           	line	5
  5387                           	global	__size_of_init_adc
  5388                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5389  0017                     	
  5390                           _init_adc:	
  5391  0A48                     ;incstack = 0
  5392                           	opt	stack 2
  5393                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  5394                           	line	7
  5395                           	
  5396                           l2453:	
  5397  0A48                     ;Volume.c: 7:     ADCON0bits.CHS = 0b0111;
  5398                           	bcf	status, 5	;RP0=0, select bank0
  5399  0A48  1283               	bcf	status, 6	;RP1=0, select bank0
  5400  0A49  1303               	movf	(31),w	;volatile
  5401  0A4A  081F               	andlw	not (((1<<4)-1)<<2)
  5402  0A4B  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  5403  0A4C  381C               	movwf	(31)	;volatile
  5404  0A4D  009F               	line	8
  5405                           ;Volume.c: 8:     ADCON0bits.ADCS = 0b001;
  5406                           	movf	(31),w	;volatile
  5407  0A4E  081F               	andlw	not (((1<<2)-1)<<6)
  5408  0A4F  393F               	iorlw	(01h & ((1<<2)-1))<<6
  5409  0A50  3840               	movwf	(31)	;volatile
  5410  0A51  009F               	line	9
  5411                           	
  5412                           l2455:	
  5413  0A52                     ;Volume.c: 9:     ADCON1bits.ADFM = 1;
  5414                           	bsf	status, 5	;RP0=1, select bank1
  5415  0A52  1683               	bcf	status, 6	;RP1=0, select bank1
  5416  0A53  1303               	bsf	(159)^080h,7	;volatile
  5417  0A54  179F               	line	11
  5418                           	
  5419                           l2457:	
  5420  0A55                     ;Volume.c: 11:     PIR1bits.ADIF = 0;
  5421                           	bcf	status, 5	;RP0=0, select bank0
  5422  0A55  1283               	bcf	status, 6	;RP1=0, select bank0
  5423  0A56  1303               	bcf	(12),6	;volatile
  5424  0A57  130C               	line	12
  5425                           	
  5426                           l2459:	
  5427  0A58                     ;Volume.c: 12:     PIE1bits.ADIE = 1;
  5428                           	bsf	status, 5	;RP0=1, select bank1
  5429  0A58  1683               	bcf	status, 6	;RP1=0, select bank1
  5430  0A59  1303               	bsf	(140)^080h,6	;volatile
  5431  0A5A  170C               	line	14
  5432                           	
  5433                           l2461:	
  5434  0A5B                     ;Volume.c: 14:     ADCON0bits.ADON = 1;
  5435                           	bcf	status, 5	;RP0=0, select bank0
  5436  0A5B  1283               	bcf	status, 6	;RP1=0, select bank0
  5437  0A5C  1303               	bsf	(31),0	;volatile
  5438  0A5D  141F               	line	15
  5439                           	
  5440                           l306:	
  5441  0A5E                     	return
  5442  0A5E  0008               	opt stack 0
  5443                           GLOBAL	__end_of_init_adc
  5444                           	__end_of_init_adc:
  5445  0A5F                     	signat	_init_adc,89
  5446                           	global	_display_init
  5447                           
  5448 ;; *************** function _display_init *****************
  5449 ;; Defined at:
  5450 ;;		line 26 in file "Display.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;		None
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0, pclath, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5464 ;;      Params:         0       0       0       0       0
  5465 ;;      Locals:         0       0       0       0       0
  5466 ;;      Temps:          0       0       0       0       0
  5467 ;;      Totals:         0       0       0       0       0
  5468 ;;Total ram usage:        0 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    5
  5471 ;; This function calls:
  5472 ;;		_spiWrite
  5473 ;; This function is called by:
  5474 ;;		_config
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5478                           	file	"Display.c"
  5479                           	line	26
  5480                           global __ptext16
  5481                           __ptext16:	;psect for function _display_init
  5482  0D3A                     psect	text16
  5483                           	file	"Display.c"
  5484                           	line	26
  5485                           	global	__size_of_display_init
  5486                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  5487  004E                     	
  5488                           _display_init:	
  5489  0D3A                     ;incstack = 0
  5490                           	opt	stack 1
  5491                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  5492                           	line	30
  5493                           	
  5494                           l2373:	
  5495  0D3A                     ;Display.c: 30:     SSPCON = 0b00100000;
  5496                           	movlw	low(020h)
  5497  0D3A  3020               	bcf	status, 5	;RP0=0, select bank0
  5498  0D3B  1283               	bcf	status, 6	;RP1=0, select bank0
  5499  0D3C  1303               	movwf	(20)	;volatile
  5500  0D3D  0094               	line	31
  5501                           ;Display.c: 31:     SSPSTAT = 0b01000000;
  5502                           	movlw	low(040h)
  5503  0D3E  3040               	bsf	status, 5	;RP0=1, select bank1
  5504  0D3F  1683               	bcf	status, 6	;RP1=0, select bank1
  5505  0D40  1303               	movwf	(148)^080h	;volatile
  5506  0D41  0094               	line	34
  5507                           	
  5508                           l2375:	
  5509  0D42                     ;Display.c: 34:     TRISD = 0x00;
  5510                           	clrf	(136)^080h	;volatile
  5511  0D42  0188               	line	35
  5512                           	
  5513                           l2377:	
  5514  0D43                     ;Display.c: 35:     TRISC = 0x00;
  5515                           	clrf	(135)^080h	;volatile
  5516  0D43  0187               	line	38
  5517                           	
  5518                           l2379:	
  5519  0D44                     ;Display.c: 38:     PORTDbits.RD2 = 1;
  5520                           	bcf	status, 5	;RP0=0, select bank0
  5521  0D44  1283               	bcf	status, 6	;RP1=0, select bank0
  5522  0D45  1303               	bsf	(8),2	;volatile
  5523  0D46  1508               	line	39
  5524                           	
  5525                           l2381:	
  5526  0D47                     ;Display.c: 39:     PORTDbits.RD6 = 0;
  5527                           	bcf	(8),6	;volatile
  5528  0D47  1308               	line	40
  5529                           	
  5530                           l2383:	
  5531  0D48                     ;Display.c: 40:     PORTDbits.RD4 = 1;
  5532                           	bsf	(8),4	;volatile
  5533  0D48  1608               	line	41
  5534                           	
  5535                           l2385:	
  5536  0D49                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  5537                           	bcf	(7),3	;volatile
  5538  0D49  1187               	line	44
  5539                           	
  5540                           l2387:	
  5541  0D4A                     ;Display.c: 44:     PORTDbits.RD7 = 1;
  5542                           	bsf	(8),7	;volatile
  5543  0D4A  1788               	line	45
  5544                           	
  5545                           l2389:	
  5546  0D4B                     ;Display.c: 45:     PORTDbits.RD4 = 0;
  5547                           	bcf	(8),4	;volatile
  5548  0D4B  1208               	line	46
  5549                           	
  5550                           l2391:	
  5551  0D4C                     ;Display.c: 46:     spiWrite(0b01001111);
  5552                           	movlw	low(04Fh)
  5553  0D4C  304F               	fcall	_spiWrite
  5554  0D4D  120A  118A  22EC  120A  158A  	line	47
  5555                           	
  5556                           l2393:	
  5557  0D52                     ;Display.c: 47:     PORTDbits.RD4 = 1;
  5558                           	bcf	status, 5	;RP0=0, select bank0
  5559  0D52  1283               	bcf	status, 6	;RP1=0, select bank0
  5560  0D53  1303               	bsf	(8),4	;volatile
  5561  0D54  1608               	line	50
  5562                           	
  5563                           l2395:	
  5564  0D55                     ;Display.c: 50:     PORTDbits.RD7 = 1;
  5565                           	bsf	(8),7	;volatile
  5566  0D55  1788               	line	51
  5567                           	
  5568                           l2397:	
  5569  0D56                     ;Display.c: 51:     PORTDbits.RD4 = 0;
  5570                           	bcf	(8),4	;volatile
  5571  0D56  1208               	line	52
  5572                           	
  5573                           l2399:	
  5574  0D57                     ;Display.c: 52:     spiWrite(0b10000001);
  5575                           	movlw	low(081h)
  5576  0D57  3081               	fcall	_spiWrite
  5577  0D58  120A  118A  22EC  120A  158A  	line	53
  5578                           	
  5579                           l2401:	
  5580  0D5D                     ;Display.c: 53:     PORTDbits.RD4 = 1;
  5581                           	bcf	status, 5	;RP0=0, select bank0
  5582  0D5D  1283               	bcf	status, 6	;RP1=0, select bank0
  5583  0D5E  1303               	bsf	(8),4	;volatile
  5584  0D5F  1608               	line	57
  5585                           	
  5586                           l2403:	
  5587  0D60                     ;Display.c: 57:     PORTDbits.RD7 = 0;
  5588                           	bcf	(8),7	;volatile
  5589  0D60  1388               	line	61
  5590                           	
  5591                           l2405:	
  5592  0D61                     ;Display.c: 61:     PORTCbits.RC2 = 1;
  5593                           	bsf	(7),2	;volatile
  5594  0D61  1507               	line	62
  5595                           	
  5596                           l2407:	
  5597  0D62                     ;Display.c: 62:     PORTCbits.RC6 = 0;
  5598                           	bcf	(7),6	;volatile
  5599  0D62  1307               	line	63
  5600                           	
  5601                           l2409:	
  5602  0D63                     ;Display.c: 63:     PORTCbits.RC4 = 1;
  5603                           	bsf	(7),4	;volatile
  5604  0D63  1607               	line	64
  5605                           	
  5606                           l2411:	
  5607  0D64                     ;Display.c: 64:     PORTCbits.RC3 = 0;
  5608                           	bcf	(7),3	;volatile
  5609  0D64  1187               	line	66
  5610                           	
  5611                           l2413:	
  5612  0D65                     ;Display.c: 66:     PORTCbits.RC7 = 1;
  5613                           	bsf	(7),7	;volatile
  5614  0D65  1787               	line	67
  5615                           	
  5616                           l2415:	
  5617  0D66                     ;Display.c: 67:     PORTCbits.RC4 = 0;
  5618                           	bcf	(7),4	;volatile
  5619  0D66  1207               	line	68
  5620                           	
  5621                           l2417:	
  5622  0D67                     ;Display.c: 68:     spiWrite(0b01001010);
  5623                           	movlw	low(04Ah)
  5624  0D67  304A               	fcall	_spiWrite
  5625  0D68  120A  118A  22EC  120A  158A  	line	70
  5626                           	
  5627                           l2419:	
  5628  0D6D                     ;Display.c: 70:     PORTCbits.RC4 = 1;
  5629                           	bcf	status, 5	;RP0=0, select bank0
  5630  0D6D  1283               	bcf	status, 6	;RP1=0, select bank0
  5631  0D6E  1303               	bsf	(7),4	;volatile
  5632  0D6F  1607               	line	72
  5633                           	
  5634                           l2421:	
  5635  0D70                     ;Display.c: 72:     PORTCbits.RC7 = 1;
  5636                           	bsf	(7),7	;volatile
  5637  0D70  1787               	line	73
  5638                           	
  5639                           l2423:	
  5640  0D71                     ;Display.c: 73:     PORTCbits.RC4 = 0;
  5641                           	bcf	(7),4	;volatile
  5642  0D71  1207               	line	75
  5643                           	
  5644                           l2425:	
  5645  0D72                     ;Display.c: 75:     spiWrite(0b10000001);
  5646                           	movlw	low(081h)
  5647  0D72  3081               	fcall	_spiWrite
  5648  0D73  120A  118A  22EC  120A  158A  	line	76
  5649                           	
  5650                           l2427:	
  5651  0D78                     ;Display.c: 76:     PORTCbits.RC4 = 1;
  5652                           	bcf	status, 5	;RP0=0, select bank0
  5653  0D78  1283               	bcf	status, 6	;RP1=0, select bank0
  5654  0D79  1303               	bsf	(7),4	;volatile
  5655  0D7A  1607               	line	79
  5656                           	
  5657                           l2429:	
  5658  0D7B                     ;Display.c: 79:     PORTCbits.RC7 = 0;
  5659                           	bcf	(7),7	;volatile
  5660  0D7B  1387               	line	82
  5661                           	
  5662                           l2431:	
  5663  0D7C                     ;Display.c: 82:     _selectedDisplay = 0;
  5664                           	bsf	status, 5	;RP0=1, select bank1
  5665  0D7C  1683               	bcf	status, 6	;RP1=0, select bank1
  5666  0D7D  1303               	clrf	(__selectedDisplay)^080h
  5667  0D7E  01CD               	line	83
  5668                           	
  5669                           l2433:	
  5670  0D7F                     ;Display.c: 83:     lastVolume = 99;
  5671                           	movlw	063h
  5672  0D7F  3063               	movwf	(_lastVolume)^080h
  5673  0D80  00C7               	movlw	0
  5674  0D81  3000               	movwf	((_lastVolume)^080h)+1
  5675  0D82  00C8               	line	84
  5676                           	
  5677                           l2435:	
  5678  0D83                     ;Display.c: 84:     lastInput = 99;
  5679                           	movlw	063h
  5680  0D83  3063               	movwf	(_lastInput)^080h
  5681  0D84  00C5               	movlw	0
  5682  0D85  3000               	movwf	((_lastInput)^080h)+1
  5683  0D86  00C6               	line	86
  5684                           	
  5685                           l122:	
  5686  0D87                     	return
  5687  0D87  0008               	opt stack 0
  5688                           GLOBAL	__end_of_display_init
  5689                           	__end_of_display_init:
  5690  0D88                     	signat	_display_init,89
  5691                           	global	_spiWrite
  5692                           
  5693 ;; *************** function _spiWrite *****************
  5694 ;; Defined at:
  5695 ;;		line 257 in file "Display.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  data            1    wreg     unsigned char 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;  data            1    0[BANK1 ] unsigned char 
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       0       0       0       0
  5710 ;;      Locals:         0       0       1       0       0
  5711 ;;      Temps:          0       0       0       0       0
  5712 ;;      Totals:         0       0       1       0       0
  5713 ;;Total ram usage:        1 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    4
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_display_init
  5720 ;;		_write_font
  5721 ;;		_white_space
  5722 ;;		_write_volume
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5726                           	line	257
  5727                           global __ptext17
  5728                           __ptext17:	;psect for function _spiWrite
  5729  02EC                     psect	text17
  5730                           	file	"Display.c"
  5731                           	line	257
  5732                           	global	__size_of_spiWrite
  5733                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  5734  0010                     	
  5735                           _spiWrite:	
  5736  02EC                     ;incstack = 0
  5737 ;; hardware stack exceeded
  5738                           	opt	stack 0
  5739                           ; Regs used in _spiWrite: [wreg]
  5740                           ;spiWrite@data stored from wreg
  5741                           	bsf	status, 5	;RP0=1, select bank1
  5742  02EC  1683               	bcf	status, 6	;RP1=0, select bank1
  5743  02ED  1303               	movwf	(spiWrite@data)^080h
  5744  02EE  00A0               	line	259
  5745                           	
  5746                           l1903:	
  5747  02EF                     ;Display.c: 257: void spiWrite(char data);Display.c: 258: {;Display.c: 259:     SSPBUF =
                                  data;
  5748                           	movf	(spiWrite@data)^080h,w
  5749  02EF  0820               	bcf	status, 5	;RP0=0, select bank0
  5750  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  5751  02F1  1303               	movwf	(19)	;volatile
  5752  02F2  0093               	line	261
  5753                           ;Display.c: 261:     while(!SSPSTATbits.BF)
  5754                           	goto	l189
  5755  02F3  2AF4               	
  5756                           l190:	
  5757  02F4                     	line	264
  5758                           ;Display.c: 262:     {;Display.c: 264:     }
  5759                           	
  5760                           l189:	
  5761  02F4                     	line	261
  5762                           ;Display.c: 261:     while(!SSPSTATbits.BF)
  5763                           	bsf	status, 5	;RP0=1, select bank1
  5764  02F4  1683               	bcf	status, 6	;RP1=0, select bank1
  5765  02F5  1303               	btfss	(148)^080h,0	;volatile
  5766  02F6  1C14               	goto	u1551
  5767  02F7  2AF9               	goto	u1550
  5768  02F8  2AFA               u1551:
  5769  02F9                     	goto	l189
  5770  02F9  2AF4               u1550:
  5771  02FA                     	goto	l192
  5772  02FA  2AFB               	
  5773                           l191:	
  5774  02FB                     	line	267
  5775                           	
  5776                           l192:	
  5777  02FB                     	return
  5778  02FB  0008               	opt stack 0
  5779                           GLOBAL	__end_of_spiWrite
  5780                           	__end_of_spiWrite:
  5781  02FC                     	signat	_spiWrite,4217
  5782                           	global	_activateSelectedRelay
  5783                           
  5784 ;; *************** function _activateSelectedRelay *****************
  5785 ;; Defined at:
  5786 ;;		line 3 in file "Input.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5800 ;;      Params:         0       0       0       0       0
  5801 ;;      Locals:         0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0
  5803 ;;      Totals:         0       0       0       0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; Hardware stack levels required when called:    4
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_main
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5814                           	file	"Input.c"
  5815                           	line	3
  5816                           global __ptext18
  5817                           __ptext18:	;psect for function _activateSelectedRelay
  5818  0B72                     psect	text18
  5819                           	file	"Input.c"
  5820                           	line	3
  5821                           	global	__size_of_activateSelectedRelay
  5822                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  5823  0039                     	
  5824                           _activateSelectedRelay:	
  5825  0B72                     ;incstack = 0
  5826                           	opt	stack 3
  5827                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  5828                           	line	5
  5829                           	
  5830                           l2597:	
  5831  0B72                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  5832                           	bcf	status, 5	;RP0=0, select bank0
  5833  0B72  1283               	bcf	status, 6	;RP1=0, select bank0
  5834  0B73  1303               	movf	((__inputUpdateRequired)),w
  5835  0B74  0863               	btfss	status,2
  5836  0B75  1D03               	goto	u2801
  5837  0B76  2B78               	goto	u2800
  5838  0B77  2B79               u2801:
  5839  0B78                     	goto	l2601
  5840  0B78  2B7B               u2800:
  5841  0B79                     	goto	l210
  5842  0B79  2BAA               	
  5843                           l2599:	
  5844  0B7A                     	goto	l210
  5845  0B7A  2BAA               	
  5846                           l209:	
  5847  0B7B                     	line	7
  5848                           	
  5849                           l2601:	
  5850  0B7B                     ;Input.c: 7:     PORTA = 0x0F;
  5851                           	movlw	low(0Fh)
  5852  0B7B  300F               	movwf	(5)	;volatile
  5853  0B7C  0085               	line	9
  5854                           ;Input.c: 9:     switch (_selectedInput) {
  5855                           	goto	l2615
  5856  0B7D  2B93               	line	10
  5857                           ;Input.c: 10:         case 0:
  5858                           	
  5859                           l212:	
  5860  0B7E                     	line	11
  5861                           	
  5862                           l2603:	
  5863  0B7E                     ;Input.c: 11:             PORTA = ~0x01;
  5864                           	movlw	low(0FEh)
  5865  0B7E  30FE               	bcf	status, 5	;RP0=0, select bank0
  5866  0B7F  1283               	movwf	(5)	;volatile
  5867  0B80  0085               	line	12
  5868                           ;Input.c: 12:             break;
  5869                           	goto	l2617
  5870  0B81  2BA8               	line	13
  5871                           ;Input.c: 13:         case 1:
  5872                           	
  5873                           l214:	
  5874  0B82                     	line	14
  5875                           	
  5876                           l2605:	
  5877  0B82                     ;Input.c: 14:             PORTA = ~0x02;
  5878                           	movlw	low(0FDh)
  5879  0B82  30FD               	bcf	status, 5	;RP0=0, select bank0
  5880  0B83  1283               	movwf	(5)	;volatile
  5881  0B84  0085               	line	15
  5882                           ;Input.c: 15:             break;
  5883                           	goto	l2617
  5884  0B85  2BA8               	line	16
  5885                           ;Input.c: 16:         case 2:
  5886                           	
  5887                           l215:	
  5888  0B86                     	line	17
  5889                           	
  5890                           l2607:	
  5891  0B86                     ;Input.c: 17:             PORTA = ~0x04;
  5892                           	movlw	low(0FBh)
  5893  0B86  30FB               	bcf	status, 5	;RP0=0, select bank0
  5894  0B87  1283               	movwf	(5)	;volatile
  5895  0B88  0085               	line	18
  5896                           ;Input.c: 18:             break;
  5897                           	goto	l2617
  5898  0B89  2BA8               	line	19
  5899                           ;Input.c: 19:         case 3:
  5900                           	
  5901                           l216:	
  5902  0B8A                     	line	20
  5903                           	
  5904                           l2609:	
  5905  0B8A                     ;Input.c: 20:             PORTA = ~0x08;
  5906                           	movlw	low(0F7h)
  5907  0B8A  30F7               	bcf	status, 5	;RP0=0, select bank0
  5908  0B8B  1283               	movwf	(5)	;volatile
  5909  0B8C  0085               	line	21
  5910                           ;Input.c: 21:             break;
  5911                           	goto	l2617
  5912  0B8D  2BA8               	line	22
  5913                           ;Input.c: 22:         default:
  5914                           	
  5915                           l217:	
  5916  0B8E                     	line	23
  5917                           	
  5918                           l2611:	
  5919  0B8E                     ;Input.c: 23:             PORTA = ~0x01;
  5920                           	movlw	low(0FEh)
  5921  0B8E  30FE               	bcf	status, 5	;RP0=0, select bank0
  5922  0B8F  1283               	movwf	(5)	;volatile
  5923  0B90  0085               	line	24
  5924                           ;Input.c: 24:             break;
  5925                           	goto	l2617
  5926  0B91  2BA8               	line	25
  5927                           	
  5928                           l2613:	
  5929  0B92                     ;Input.c: 25:     }
  5930                           	goto	l2617
  5931  0B92  2BA8               	
  5932                           l211:	
  5933  0B93                     	
  5934                           l2615:	
  5935  0B93                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5936                           ; Switch size 1, requested type "space"
  5937                           ; Number of cases is 1, Range of values is 0 to 0
  5938                           ; switch strategies available:
  5939                           ; Name         Instructions Cycles
  5940                           ; simple_byte            4     3 (average)
  5941                           ; direct_byte           11     8 (fixed)
  5942                           ; jumptable            260     6 (fixed)
  5943                           ;	Chosen strategy is simple_byte
  5944                           
  5945                           	bsf	status, 5	;RP0=1, select bank1
  5946  0B93  1683               	bcf	status, 6	;RP1=0, select bank1
  5947  0B94  1303               	movf (__selectedInput+1)^080h,w
  5948  0B95  084C               	opt asmopt_push
  5949                           	opt asmopt_off
  5950                           	xorlw	0^0	; case 0
  5951  0B96  3A00               	skipnz
  5952  0B97  1903               	goto	l2835
  5953  0B98  2B9A               	goto	l2611
  5954  0B99  2B8E               	opt asmopt_pop
  5955                           	
  5956                           l2835:	
  5957  0B9A                     ; Switch size 1, requested type "space"
  5958                           ; Number of cases is 4, Range of values is 0 to 3
  5959                           ; switch strategies available:
  5960                           ; Name         Instructions Cycles
  5961                           ; simple_byte           13     7 (average)
  5962                           ; direct_byte           20     8 (fixed)
  5963                           ; jumptable            260     6 (fixed)
  5964                           ;	Chosen strategy is simple_byte
  5965                           
  5966                           	movf (__selectedInput)^080h,w
  5967  0B9A  084B               	opt asmopt_push
  5968                           	opt asmopt_off
  5969                           	xorlw	0^0	; case 0
  5970  0B9B  3A00               	skipnz
  5971  0B9C  1903               	goto	l2603
  5972  0B9D  2B7E               	xorlw	1^0	; case 1
  5973  0B9E  3A01               	skipnz
  5974  0B9F  1903               	goto	l2605
  5975  0BA0  2B82               	xorlw	2^1	; case 2
  5976  0BA1  3A03               	skipnz
  5977  0BA2  1903               	goto	l2607
  5978  0BA3  2B86               	xorlw	3^2	; case 3
  5979  0BA4  3A01               	skipnz
  5980  0BA5  1903               	goto	l2609
  5981  0BA6  2B8A               	goto	l2611
  5982  0BA7  2B8E               	opt asmopt_pop
  5983                           
  5984                           	
  5985                           l213:	
  5986  0BA8                     	line	27
  5987                           	
  5988                           l2617:	
  5989  0BA8                     ;Input.c: 27:     _inputUpdateRequired = 0;
  5990                           	bcf	status, 5	;RP0=0, select bank0
  5991  0BA8  1283               	clrf	(__inputUpdateRequired)
  5992  0BA9  01E3               	line	28
  5993                           	
  5994                           l210:	
  5995  0BAA                     	return
  5996  0BAA  0008               	opt stack 0
  5997                           GLOBAL	__end_of_activateSelectedRelay
  5998                           	__end_of_activateSelectedRelay:
  5999  0BAB                     	signat	_activateSelectedRelay,89
  6000                           	global	_isr
  6001                           
  6002 ;; *************** function _isr *****************
  6003 ;; Defined at:
  6004 ;;		line 48 in file "main.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6018 ;;      Params:         0       0       0       0       0
  6019 ;;      Locals:         0       0       0       0       0
  6020 ;;      Temps:          0       4       0       0       0
  6021 ;;      Totals:         0       4       0       0       0
  6022 ;;Total ram usage:        4 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    3
  6025 ;; This function calls:
  6026 ;;		_handle_potmeter
  6027 ;;		_handle_rotary
  6028 ;;		_poll_receiver
  6029 ;; This function is called by:
  6030 ;;		Interrupt level 1
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6034                           	file	"main.c"
  6035                           	line	48
  6036                           global __ptext19
  6037                           __ptext19:	;psect for function _isr
  6038  0B06                     psect	text19
  6039                           	file	"main.c"
  6040                           	line	48
  6041                           	global	__size_of_isr
  6042                           	__size_of_isr	equ	__end_of_isr-_isr
  6043  0036                     	
  6044                           _isr:	
  6045  0B06                     ;incstack = 0
  6046 ;; hardware stack exceeded
  6047                           	opt	stack 0
  6048                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6049                           psect	intentry,class=CODE,delta=2
  6050                           global __pintentry
  6051                           __pintentry:
  6052  0004                     global interrupt_function
  6053                           interrupt_function:
  6054  0004                     	global saved_w
  6055                           	saved_w	set	btemp+0
  6056  007E                     	movwf	saved_w
  6057  0004  00FE               	swapf	status,w
  6058  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  6059  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  6060  0007  1303               	movwf	(??_isr+0)
  6061  0008  00D6               	movf	fsr0,w
  6062  0009  0804               	movwf	(??_isr+1)
  6063  000A  00D7               	movf	pclath,w
  6064  000B  080A               	movwf	(??_isr+2)
  6065  000C  00D8               	movf	btemp+1,w
  6066  000D  087F               	movwf	(??_isr+3)
  6067  000E  00D9               	ljmp	_isr
  6068  000F  120A  158A  2B06   psect	text19
  6069                           	line	50
  6070                           	
  6071                           i1l2697:	
  6072  0B06                     ;main.c: 50:     if (INTCONbits.RBIF) {
  6073                           	btfss	(11),0	;volatile
  6074  0B06  1C0B               	goto	u298_21
  6075  0B07  2B09               	goto	u298_20
  6076  0B08  2B0A               u298_21:
  6077  0B09                     	goto	i1l2703
  6078  0B09  2B11               u298_20:
  6079  0B0A                     	line	52
  6080                           	
  6081                           i1l2699:	
  6082  0B0A                     ;main.c: 52:         handle_rotary();
  6083                           	fcall	_handle_rotary
  6084  0B0A  120A  158A  277F  120A  158A  	line	53
  6085                           	
  6086                           i1l2701:	
  6087  0B0F                     ;main.c: 53:         INTCONbits.RBIF = 0;
  6088                           	bcf	(11),0	;volatile
  6089  0B0F  100B               	goto	i1l2703
  6090  0B10  2B11               	line	54
  6091                           ;main.c: 54:     }
  6092                           	
  6093                           i1l62:	
  6094  0B11                     	line	56
  6095                           	
  6096                           i1l2703:	
  6097  0B11                     ;main.c: 56:     if (PIR1bits.ADIF) {
  6098                           	bcf	status, 5	;RP0=0, select bank0
  6099  0B11  1283               	bcf	status, 6	;RP1=0, select bank0
  6100  0B12  1303               	btfss	(12),6	;volatile
  6101  0B13  1F0C               	goto	u299_21
  6102  0B14  2B16               	goto	u299_20
  6103  0B15  2B17               u299_21:
  6104  0B16                     	goto	i1l2709
  6105  0B16  2B20               u299_20:
  6106  0B17                     	line	58
  6107                           	
  6108                           i1l2705:	
  6109  0B17                     ;main.c: 58:         handle_potmeter();
  6110                           	fcall	_handle_potmeter
  6111  0B17  120A  158A  270D  120A  158A  	line	60
  6112                           	
  6113                           i1l2707:	
  6114  0B1C                     ;main.c: 60:         PIR1bits.ADIF = 0;
  6115                           	bcf	status, 5	;RP0=0, select bank0
  6116  0B1C  1283               	bcf	status, 6	;RP1=0, select bank0
  6117  0B1D  1303               	bcf	(12),6	;volatile
  6118  0B1E  130C               	goto	i1l2709
  6119  0B1F  2B20               	line	61
  6120                           ;main.c: 61:     }
  6121                           	
  6122                           i1l63:	
  6123  0B20                     	line	63
  6124                           	
  6125                           i1l2709:	
  6126  0B20                     ;main.c: 63:     if (PIR1bits.TMR2IF) {
  6127                           	btfss	(12),1	;volatile
  6128  0B20  1C8C               	goto	u300_21
  6129  0B21  2B23               	goto	u300_20
  6130  0B22  2B24               u300_21:
  6131  0B23                     	goto	i1l65
  6132  0B23  2B31               u300_20:
  6133  0B24                     	line	64
  6134                           	
  6135                           i1l2711:	
  6136  0B24                     ;main.c: 64:         PR2 = 25;
  6137                           	movlw	low(019h)
  6138  0B24  3019               	bsf	status, 5	;RP0=1, select bank1
  6139  0B25  1683               	bcf	status, 6	;RP1=0, select bank1
  6140  0B26  1303               	movwf	(146)^080h	;volatile
  6141  0B27  0092               	line	66
  6142                           	
  6143                           i1l2713:	
  6144  0B28                     ;main.c: 66:         poll_receiver();
  6145                           	fcall	_poll_receiver
  6146  0B28  120A  158A  241E  120A  158A  	line	68
  6147                           	
  6148                           i1l2715:	
  6149  0B2D                     ;main.c: 68:         PIR1bits.TMR2IF = 0;
  6150                           	bcf	status, 5	;RP0=0, select bank0
  6151  0B2D  1283               	bcf	status, 6	;RP1=0, select bank0
  6152  0B2E  1303               	bcf	(12),1	;volatile
  6153  0B2F  108C               	goto	i1l65
  6154  0B30  2B31               	line	70
  6155                           ;main.c: 70:     }
  6156                           	
  6157                           i1l64:	
  6158  0B31                     	line	71
  6159                           	
  6160                           i1l65:	
  6161  0B31                     	movf	(??_isr+3),w
  6162  0B31  0859               	movwf	btemp+1
  6163  0B32  00FF               	movf	(??_isr+2),w
  6164  0B33  0858               	movwf	pclath
  6165  0B34  008A               	movf	(??_isr+1),w
  6166  0B35  0857               	movwf	fsr0
  6167  0B36  0084               	swapf	(??_isr+0)^00h,w
  6168  0B37  0E56               	movwf	status
  6169  0B38  0083               	swapf	saved_w,f
  6170  0B39  0EFE               	swapf	saved_w,w
  6171  0B3A  0E7E               	retfie
  6172  0B3B  0009               	opt stack 0
  6173                           GLOBAL	__end_of_isr
  6174                           	__end_of_isr:
  6175  0B3C                     	signat	_isr,89
  6176                           	global	_poll_receiver
  6177                           
  6178 ;; *************** function _poll_receiver *****************
  6179 ;; Defined at:
  6180 ;;		line 19 in file "Remote.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6194 ;;      Params:         0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0
  6196 ;;      Temps:          8       0       0       0       0
  6197 ;;      Totals:         8       0       0       0       0
  6198 ;;Total ram usage:        8 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		_isr
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6207                           	file	"Remote.c"
  6208                           	line	19
  6209                           global __ptext20
  6210                           __ptext20:	;psect for function _poll_receiver
  6211  0C1E                     psect	text20
  6212                           	file	"Remote.c"
  6213                           	line	19
  6214                           	global	__size_of_poll_receiver
  6215                           	__size_of_poll_receiver	equ	__end_of_poll_receiver-_poll_receiver
  6216  0041                     	
  6217                           _poll_receiver:	
  6218  0C1E                     ;incstack = 0
  6219                           	opt	stack 0
  6220                           ; Regs used in _poll_receiver: [wreg+status,2+status,0]
  6221                           	line	21
  6222                           	
  6223                           i1l2663:	
  6224  0C1E                     ;Remote.c: 21:     if (ignore_poll) return;
  6225                           	bcf	status, 5	;RP0=0, select bank0
  6226  0C1E  1283               	bcf	status, 6	;RP1=0, select bank0
  6227  0C1F  1303               	movf	((_ignore_poll)),w
  6228  0C20  0862               	btfsc	status,2
  6229  0C21  1903               	goto	u292_21
  6230  0C22  2C24               	goto	u292_20
  6231  0C23  2C25               u292_21:
  6232  0C24                     	goto	i1l2667
  6233  0C24  2C27               u292_20:
  6234  0C25                     	goto	i1l350
  6235  0C25  2C5E               	
  6236                           i1l2665:	
  6237  0C26                     	goto	i1l350
  6238  0C26  2C5E               	
  6239                           i1l349:	
  6240  0C27                     	line	23
  6241                           	
  6242                           i1l2667:	
  6243  0C27                     ;Remote.c: 23:     ir_input = ir_input << 1;
  6244                           	movf	(_ir_input),w
  6245  0C27  085A               	movwf	(??_poll_receiver+0)+0
  6246  0C28  00F0               	movf	(_ir_input+1),w
  6247  0C29  085B               	movwf	((??_poll_receiver+0)+0+1)
  6248  0C2A  00F1               	movf	(_ir_input+2),w
  6249  0C2B  085C               	movwf	((??_poll_receiver+0)+0+2)
  6250  0C2C  00F2               	movf	(_ir_input+3),w
  6251  0C2D  085D               	movwf	((??_poll_receiver+0)+0+3)
  6252  0C2E  00F3               	movlw	01h
  6253  0C2F  3001               u293_25:
  6254  0C30                     	clrc
  6255  0C30  1003               	rlf	(??_poll_receiver+0)+0,f
  6256  0C31  0DF0               	rlf	(??_poll_receiver+0)+1,f
  6257  0C32  0DF1               	rlf	(??_poll_receiver+0)+2,f
  6258  0C33  0DF2               	rlf	(??_poll_receiver+0)+3,f
  6259  0C34  0DF3               u293_20:
  6260  0C35                     	addlw	-1
  6261  0C35  3EFF               	skipz
  6262  0C36  1D03               	goto	u293_25
  6263  0C37  2C30               	movf	3+(??_poll_receiver+0)+0,w
  6264  0C38  0873               	movwf	(_ir_input+3)
  6265  0C39  00DD               	movf	2+(??_poll_receiver+0)+0,w
  6266  0C3A  0872               	movwf	(_ir_input+2)
  6267  0C3B  00DC               	movf	1+(??_poll_receiver+0)+0,w
  6268  0C3C  0871               	movwf	(_ir_input+1)
  6269  0C3D  00DB               	movf	0+(??_poll_receiver+0)+0,w
  6270  0C3E  0870               	movwf	(_ir_input)
  6271  0C3F  00DA               
  6272                           	line	24
  6273                           ;Remote.c: 24:     ir_input = ir_input | PORTBbits.RB0;
  6274                           	movf	(_ir_input),w
  6275  0C40  085A               	movwf	(??_poll_receiver+0)+0
  6276  0C41  00F0               	movf	(_ir_input+1),w
  6277  0C42  085B               	movwf	((??_poll_receiver+0)+0+1)
  6278  0C43  00F1               	movf	(_ir_input+2),w
  6279  0C44  085C               	movwf	((??_poll_receiver+0)+0+2)
  6280  0C45  00F2               	movf	(_ir_input+3),w
  6281  0C46  085D               	movwf	((??_poll_receiver+0)+0+3)
  6282  0C47  00F3               	movf	(6),w	;volatile
  6283  0C48  0806               	andlw	(1<<1)-1
  6284  0C49  3901               	movwf	(??_poll_receiver+4)+0
  6285  0C4A  00F4               	clrf	((??_poll_receiver+4)+0+1)
  6286  0C4B  01F5               	clrf	((??_poll_receiver+4)+0+2)
  6287  0C4C  01F6               	clrf	((??_poll_receiver+4)+0+3)
  6288  0C4D  01F7               	movf	0+(??_poll_receiver+4)+0,w
  6289  0C4E  0874               	iorwf	(??_poll_receiver+0)+0,f
  6290  0C4F  04F0               	movf	1+(??_poll_receiver+4)+0,w
  6291  0C50  0875               	iorwf	(??_poll_receiver+0)+1,f
  6292  0C51  04F1               	movf	2+(??_poll_receiver+4)+0,w
  6293  0C52  0876               	iorwf	(??_poll_receiver+0)+2,f
  6294  0C53  04F2               	movf	3+(??_poll_receiver+4)+0,w
  6295  0C54  0877               	iorwf	(??_poll_receiver+0)+3,f
  6296  0C55  04F3               	movf	3+(??_poll_receiver+0)+0,w
  6297  0C56  0873               	movwf	(_ir_input+3)
  6298  0C57  00DD               	movf	2+(??_poll_receiver+0)+0,w
  6299  0C58  0872               	movwf	(_ir_input+2)
  6300  0C59  00DC               	movf	1+(??_poll_receiver+0)+0,w
  6301  0C5A  0871               	movwf	(_ir_input+1)
  6302  0C5B  00DB               	movf	0+(??_poll_receiver+0)+0,w
  6303  0C5C  0870               	movwf	(_ir_input)
  6304  0C5D  00DA               
  6305                           	line	25
  6306                           	
  6307                           i1l350:	
  6308  0C5E                     	return
  6309  0C5E  0008               	opt stack 0
  6310                           GLOBAL	__end_of_poll_receiver
  6311                           	__end_of_poll_receiver:
  6312  0C5F                     	signat	_poll_receiver,89
  6313                           	global	_handle_rotary
  6314                           
  6315 ;; *************** function _handle_rotary *****************
  6316 ;; Defined at:
  6317 ;;		line 30 in file "Input.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;		None
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  portB           2    5[COMMON] int 
  6322 ;;  portA           2    3[COMMON] int 
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      void 
  6325 ;; Registers used:
  6326 ;;		wreg, status,2, status,0
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6332 ;;      Params:         0       0       0       0       0
  6333 ;;      Locals:         4       0       0       0       0
  6334 ;;      Temps:          3       0       0       0       0
  6335 ;;      Totals:         7       0       0       0       0
  6336 ;;Total ram usage:        7 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; This function calls:
  6339 ;;		Nothing
  6340 ;; This function is called by:
  6341 ;;		_isr
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6345                           	file	"Input.c"
  6346                           	line	30
  6347                           global __ptext21
  6348                           __ptext21:	;psect for function _handle_rotary
  6349  0F7F                     psect	text21
  6350                           	file	"Input.c"
  6351                           	line	30
  6352                           	global	__size_of_handle_rotary
  6353                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  6354  0081                     	
  6355                           _handle_rotary:	
  6356  0F7F                     ;incstack = 0
  6357                           	opt	stack 0
  6358                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  6359                           	line	32
  6360                           	
  6361                           i1l2623:	
  6362  0F7F                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  6363                           	bcf	status, 5	;RP0=0, select bank0
  6364  0F7F  1283               	bcf	status, 6	;RP1=0, select bank0
  6365  0F80  1303               	swapf	(6),w	;volatile
  6366  0F81  0E06               	andlw	(1<<1)-1
  6367  0F82  3901               	movwf	(??_handle_rotary+0)+0
  6368  0F83  00F0               	clrf	(??_handle_rotary+0)+0+1
  6369  0F84  01F1               	movf	0+(??_handle_rotary+0)+0,w
  6370  0F85  0870               	movwf	(handle_rotary@portA)
  6371  0F86  00F3               	movf	1+(??_handle_rotary+0)+0,w
  6372  0F87  0871               	movwf	(handle_rotary@portA+1)
  6373  0F88  00F4               	line	33
  6374                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  6375                           	swapf	(6),w	;volatile
  6376  0F89  0E06               	movwf	(??_handle_rotary+0)+0
  6377  0F8A  00F0               	rrf	(??_handle_rotary+0)+0,w
  6378  0F8B  0C70               	andlw	(1<<1)-1
  6379  0F8C  3901               	movwf	(??_handle_rotary+1)+0
  6380  0F8D  00F1               	clrf	(??_handle_rotary+1)+0+1
  6381  0F8E  01F2               	movf	0+(??_handle_rotary+1)+0,w
  6382  0F8F  0871               	movwf	(handle_rotary@portB)
  6383  0F90  00F5               	movf	1+(??_handle_rotary+1)+0,w
  6384  0F91  0872               	movwf	(handle_rotary@portB+1)
  6385  0F92  00F6               	line	35
  6386                           	
  6387                           i1l2625:	
  6388  0F93                     ;Input.c: 35:         if (_lastA != portA) {
  6389                           	movf	(__lastA+1),w
  6390  0F93  0861               	xorwf	(handle_rotary@portA+1),w
  6391  0F94  0674               	skipz
  6392  0F95  1D03               	goto	u281_25
  6393  0F96  2F99               	movf	(__lastA),w
  6394  0F97  0860               	xorwf	(handle_rotary@portA),w
  6395  0F98  0673               u281_25:
  6396  0F99                     
  6397                           	skipnz
  6398  0F99  1903               	goto	u281_21
  6399  0F9A  2F9C               	goto	u281_20
  6400  0F9B  2F9D               u281_21:
  6401  0F9C                     	goto	i1l2637
  6402  0F9C  2FC4               u281_20:
  6403  0F9D                     	line	36
  6404                           	
  6405                           i1l2627:	
  6406  0F9D                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  6407                           	movf	(__lastB+1),w
  6408  0F9D  085F               	xorwf	(__lastA+1),w
  6409  0F9E  0661               	skipz
  6410  0F9F  1D03               	goto	u282_25
  6411  0FA0  2FA3               	movf	(__lastB),w
  6412  0FA1  085E               	xorwf	(__lastA),w
  6413  0FA2  0660               u282_25:
  6414  0FA3                     
  6415                           	skipz
  6416  0FA3  1D03               	goto	u282_21
  6417  0FA4  2FA6               	goto	u282_20
  6418  0FA5  2FA7               u282_21:
  6419  0FA6                     	goto	i1l2637
  6420  0FA6  2FC4               u282_20:
  6421  0FA7                     	
  6422                           i1l2629:	
  6423  0FA7                     	movf	((handle_rotary@portA)),w
  6424  0FA7  0873               iorwf	((handle_rotary@portA+1)),w
  6425  0FA8  0474               	btfsc	status,2
  6426  0FA9  1903               	goto	u283_21
  6427  0FAA  2FAC               	goto	u283_20
  6428  0FAB  2FAD               u283_21:
  6429  0FAC                     	goto	i1l2637
  6430  0FAC  2FC4               u283_20:
  6431  0FAD                     	line	37
  6432                           	
  6433                           i1l2631:	
  6434  0FAD                     ;Input.c: 37:                 if (_selectedInput < 3) {
  6435                           	movlw	0
  6436  0FAD  3000               	bsf	status, 5	;RP0=1, select bank1
  6437  0FAE  1683               	bcf	status, 6	;RP1=0, select bank1
  6438  0FAF  1303               	subwf	(__selectedInput+1)^080h,w
  6439  0FB0  024C               	movlw	03h
  6440  0FB1  3003               	skipnz
  6441  0FB2  1903               	subwf	(__selectedInput)^080h,w
  6442  0FB3  024B               	skipnc
  6443  0FB4  1803               	goto	u284_21
  6444  0FB5  2FB7               	goto	u284_20
  6445  0FB6  2FB8               u284_21:
  6446  0FB7                     	goto	i1l2635
  6447  0FB7  2FBF               u284_20:
  6448  0FB8                     	line	38
  6449                           	
  6450                           i1l2633:	
  6451  0FB8                     ;Input.c: 38:                     _selectedInput++;
  6452                           	movlw	01h
  6453  0FB8  3001               	addwf	(__selectedInput)^080h,f
  6454  0FB9  07CB               	skipnc
  6455  0FBA  1803               	incf	(__selectedInput+1)^080h,f
  6456  0FBB  0ACC               	movlw	0
  6457  0FBC  3000               	addwf	(__selectedInput+1)^080h,f
  6458  0FBD  07CC               	line	39
  6459                           ;Input.c: 39:                 } else {
  6460                           	goto	i1l2637
  6461  0FBE  2FC4               	
  6462                           i1l222:	
  6463  0FBF                     	line	40
  6464                           	
  6465                           i1l2635:	
  6466  0FBF                     ;Input.c: 40:                     _selectedInput = 0;
  6467                           	clrf	(__selectedInput)^080h
  6468  0FBF  01CB               	clrf	(__selectedInput+1)^080h
  6469  0FC0  01CC               	goto	i1l2637
  6470  0FC1  2FC4               	line	41
  6471                           ;Input.c: 41:                 }
  6472                           	
  6473                           i1l223:	
  6474  0FC2                     	goto	i1l2637
  6475  0FC2  2FC4               	line	42
  6476                           ;Input.c: 42:             }
  6477                           	
  6478                           i1l221:	
  6479  0FC3                     	goto	i1l2637
  6480  0FC3  2FC4               	line	43
  6481                           ;Input.c: 43:         }
  6482                           	
  6483                           i1l220:	
  6484  0FC4                     	line	45
  6485                           	
  6486                           i1l2637:	
  6487  0FC4                     ;Input.c: 45:         if (_lastB != portB) {
  6488                           	bcf	status, 5	;RP0=0, select bank0
  6489  0FC4  1283               	movf	(__lastB+1),w
  6490  0FC5  085F               	xorwf	(handle_rotary@portB+1),w
  6491  0FC6  0676               	skipz
  6492  0FC7  1D03               	goto	u285_25
  6493  0FC8  2FCB               	movf	(__lastB),w
  6494  0FC9  085E               	xorwf	(handle_rotary@portB),w
  6495  0FCA  0675               u285_25:
  6496  0FCB                     
  6497                           	skipnz
  6498  0FCB  1903               	goto	u285_21
  6499  0FCC  2FCE               	goto	u285_20
  6500  0FCD  2FCF               u285_21:
  6501  0FCE                     	goto	i1l224
  6502  0FCE  2FF4               u285_20:
  6503  0FCF                     	line	46
  6504                           	
  6505                           i1l2639:	
  6506  0FCF                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
  6507                           	movf	(__lastB+1),w
  6508  0FCF  085F               	xorwf	(__lastA+1),w
  6509  0FD0  0661               	skipz
  6510  0FD1  1D03               	goto	u286_25
  6511  0FD2  2FD5               	movf	(__lastB),w
  6512  0FD3  085E               	xorwf	(__lastA),w
  6513  0FD4  0660               u286_25:
  6514  0FD5                     
  6515                           	skipz
  6516  0FD5  1D03               	goto	u286_21
  6517  0FD6  2FD8               	goto	u286_20
  6518  0FD7  2FD9               u286_21:
  6519  0FD8                     	goto	i1l224
  6520  0FD8  2FF4               u286_20:
  6521  0FD9                     	
  6522                           i1l2641:	
  6523  0FD9                     	movf	((handle_rotary@portB)),w
  6524  0FD9  0875               iorwf	((handle_rotary@portB+1)),w
  6525  0FDA  0476               	btfsc	status,2
  6526  0FDB  1903               	goto	u287_21
  6527  0FDC  2FDE               	goto	u287_20
  6528  0FDD  2FDF               u287_21:
  6529  0FDE                     	goto	i1l224
  6530  0FDE  2FF4               u287_20:
  6531  0FDF                     	line	47
  6532                           	
  6533                           i1l2643:	
  6534  0FDF                     ;Input.c: 47:                 if (_selectedInput > 0) {
  6535                           	bsf	status, 5	;RP0=1, select bank1
  6536  0FDF  1683               	bcf	status, 6	;RP1=0, select bank1
  6537  0FE0  1303               	movf	((__selectedInput)^080h),w
  6538  0FE1  084B               iorwf	((__selectedInput+1)^080h),w
  6539  0FE2  044C               	btfsc	status,2
  6540  0FE3  1903               	goto	u288_21
  6541  0FE4  2FE6               	goto	u288_20
  6542  0FE5  2FE7               u288_21:
  6543  0FE6                     	goto	i1l2647
  6544  0FE6  2FEE               u288_20:
  6545  0FE7                     	line	48
  6546                           	
  6547                           i1l2645:	
  6548  0FE7                     ;Input.c: 48:                     _selectedInput--;
  6549                           	movlw	01h
  6550  0FE7  3001               	subwf	(__selectedInput)^080h,f
  6551  0FE8  02CB               	movlw	0
  6552  0FE9  3000               	skipc
  6553  0FEA  1C03               	decf	(__selectedInput+1)^080h,f
  6554  0FEB  03CC               	subwf	(__selectedInput+1)^080h,f
  6555  0FEC  02CC               	line	49
  6556                           ;Input.c: 49:                 } else {
  6557                           	goto	i1l224
  6558  0FED  2FF4               	
  6559                           i1l226:	
  6560  0FEE                     	line	50
  6561                           	
  6562                           i1l2647:	
  6563  0FEE                     ;Input.c: 50:                     _selectedInput = 3;
  6564                           	movlw	03h
  6565  0FEE  3003               	movwf	(__selectedInput)^080h
  6566  0FEF  00CB               	movlw	0
  6567  0FF0  3000               	movwf	((__selectedInput)^080h)+1
  6568  0FF1  00CC               	goto	i1l224
  6569  0FF2  2FF4               	line	51
  6570                           ;Input.c: 51:                 }
  6571                           	
  6572                           i1l227:	
  6573  0FF3                     	goto	i1l224
  6574  0FF3  2FF4               	line	52
  6575                           ;Input.c: 52:             }
  6576                           	
  6577                           i1l225:	
  6578  0FF4                     	line	53
  6579                           ;Input.c: 53:         }
  6580                           	
  6581                           i1l224:	
  6582  0FF4                     	line	55
  6583                           ;Input.c: 55:         _lastA = portA;
  6584                           	movf	(handle_rotary@portA+1),w
  6585  0FF4  0874               	bcf	status, 5	;RP0=0, select bank0
  6586  0FF5  1283               	movwf	(__lastA+1)
  6587  0FF6  00E1               	movf	(handle_rotary@portA),w
  6588  0FF7  0873               	movwf	(__lastA)
  6589  0FF8  00E0               	line	56
  6590                           ;Input.c: 56:         _lastB = portB;
  6591                           	movf	(handle_rotary@portB+1),w
  6592  0FF9  0876               	movwf	(__lastB+1)
  6593  0FFA  00DF               	movf	(handle_rotary@portB),w
  6594  0FFB  0875               	movwf	(__lastB)
  6595  0FFC  00DE               	line	57
  6596                           	
  6597                           i1l2649:	
  6598  0FFD                     ;Input.c: 57:         _inputUpdateRequired = 1;
  6599                           	clrf	(__inputUpdateRequired)
  6600  0FFD  01E3               	incf	(__inputUpdateRequired),f
  6601  0FFE  0AE3               	line	58
  6602                           	
  6603                           i1l228:	
  6604  0FFF                     	return
  6605  0FFF  0008               	opt stack 0
  6606                           GLOBAL	__end_of_handle_rotary
  6607                           	__end_of_handle_rotary:
  6608  1000                     	signat	_handle_rotary,89
  6609                           	global	_handle_potmeter
  6610                           
  6611 ;; *************** function _handle_potmeter *****************
  6612 ;; Defined at:
  6613 ;;		line 30 in file "Volume.c"
  6614 ;; Parameters:    Size  Location     Type
  6615 ;;		None
  6616 ;; Auto vars:     Size  Location     Type
  6617 ;;  currentStep     2   50[BANK0 ] unsigned int 
  6618 ;;  ad_result       2   52[BANK0 ] unsigned int 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      void 
  6621 ;; Registers used:
  6622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         0       0       0       0       0
  6629 ;;      Locals:         0       4       0       0       0
  6630 ;;      Temps:          0       2       0       0       0
  6631 ;;      Totals:         0       6       0       0       0
  6632 ;;Total ram usage:        6 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    2
  6635 ;; This function calls:
  6636 ;;		_is_deadzone
  6637 ;;		i1___lwdiv
  6638 ;; This function is called by:
  6639 ;;		_isr
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6643                           	file	"Volume.c"
  6644                           	line	30
  6645                           global __ptext22
  6646                           __ptext22:	;psect for function _handle_potmeter
  6647  0F0D                     psect	text22
  6648                           	file	"Volume.c"
  6649                           	line	30
  6650                           	global	__size_of_handle_potmeter
  6651                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
  6652  0072                     	
  6653                           _handle_potmeter:	
  6654  0F0D                     ;incstack = 0
  6655 ;; hardware stack exceeded
  6656                           	opt	stack 0
  6657                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6658                           	line	32
  6659                           	
  6660                           i1l2651:	
  6661  0F0D                     ;Volume.c: 32:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
  6662                           	bcf	status, 5	;RP0=0, select bank0
  6663  0F0D  1283               	bcf	status, 6	;RP1=0, select bank0
  6664  0F0E  1303               	movf	(30),w	;volatile
  6665  0F0F  081E               	movwf	(handle_potmeter@ad_result+1)
  6666  0F10  00D5               	bsf	status, 5	;RP0=1, select bank1
  6667  0F11  1683               	bcf	status, 6	;RP1=0, select bank1
  6668  0F12  1303               	movf	(158)^080h,w	;volatile
  6669  0F13  081E               	bcf	status, 5	;RP0=0, select bank0
  6670  0F14  1283               	bcf	status, 6	;RP1=0, select bank0
  6671  0F15  1303               	movwf	(handle_potmeter@ad_result)
  6672  0F16  00D4               	line	34
  6673                           	
  6674                           i1l2653:	
  6675  0F17                     ;Volume.c: 34:     if (ad_result == 0 || ad_result < step_size) {
  6676                           	movf	((handle_potmeter@ad_result)),w
  6677  0F17  0854               iorwf	((handle_potmeter@ad_result+1)),w
  6678  0F18  0455               	btfsc	status,2
  6679  0F19  1903               	goto	u289_21
  6680  0F1A  2F1C               	goto	u289_20
  6681  0F1B  2F1D               u289_21:
  6682  0F1C                     	goto	i1l2657
  6683  0F1C  2F38               u289_20:
  6684  0F1D                     	
  6685                           i1l2655:	
  6686  0F1D                     	movlw	low(_step_size|8000h)
  6687  0F1D  308E               	movwf	fsr0
  6688  0F1E  0084               	movlw	high(_step_size|8000h)
  6689  0F1F  3084               	movwf	btemp+1
  6690  0F20  00FF               	fcall	stringtab
  6691  0F21  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0
  6692  0F26  00D0               	fcall	stringtab
  6693  0F27  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0+1
  6694  0F2C  00D1               	movf	1+(??_handle_potmeter+0)+0,w
  6695  0F2D  0851               	subwf	(handle_potmeter@ad_result+1),w
  6696  0F2E  0255               	skipz
  6697  0F2F  1D03               	goto	u290_25
  6698  0F30  2F33               	movf	0+(??_handle_potmeter+0)+0,w
  6699  0F31  0850               	subwf	(handle_potmeter@ad_result),w
  6700  0F32  0254               u290_25:
  6701  0F33                     	skipnc
  6702  0F33  1803               	goto	u290_21
  6703  0F34  2F36               	goto	u290_20
  6704  0F35  2F37               u290_21:
  6705  0F36                     	goto	i1l2659
  6706  0F36  2F3D               u290_20:
  6707  0F37                     	goto	i1l2657
  6708  0F37  2F38               	
  6709                           i1l316:	
  6710  0F38                     	line	35
  6711                           	
  6712                           i1l2657:	
  6713  0F38                     ;Volume.c: 35:             volume = 0;
  6714                           	bsf	status, 5	;RP0=1, select bank1
  6715  0F38  1683               	bcf	status, 6	;RP1=0, select bank1
  6716  0F39  1303               	clrf	(_volume)^080h
  6717  0F3A  01C9               	clrf	(_volume+1)^080h
  6718  0F3B  01CA               	line	36
  6719                           ;Volume.c: 36:     } else {
  6720                           	goto	i1l319
  6721  0F3C  2F7E               	
  6722                           i1l314:	
  6723  0F3D                     	line	37
  6724                           	
  6725                           i1l2659:	
  6726  0F3D                     ;Volume.c: 37:         unsigned int currentStep = ad_result / step_size;
  6727                           	movlw	low(_step_size|8000h)
  6728  0F3D  308E               	movwf	fsr0
  6729  0F3E  0084               	movlw	high(_step_size|8000h)
  6730  0F3F  3084               	bcf	status, 5	;RP0=0, select bank0
  6731  0F40  1283               	movwf	btemp+1
  6732  0F41  00FF               	fcall	stringtab
  6733  0F42  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor)
  6734  0F47  00F0               	fcall	stringtab
  6735  0F48  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor+1)
  6736  0F4D  00F1               	movf	(handle_potmeter@ad_result+1),w
  6737  0F4E  0855               	movwf	(i1___lwdiv@dividend+1)
  6738  0F4F  00F3               	movf	(handle_potmeter@ad_result),w
  6739  0F50  0854               	movwf	(i1___lwdiv@dividend)
  6740  0F51  00F2               	fcall	i1___lwdiv
  6741  0F52  120A  158A  24A2  120A  158A  	movf	(1+(?i1___lwdiv)),w
  6742  0F57  0871               	bcf	status, 5	;RP0=0, select bank0
  6743  0F58  1283               	bcf	status, 6	;RP1=0, select bank0
  6744  0F59  1303               	movwf	(handle_potmeter@currentStep+1)
  6745  0F5A  00D3               	movf	(0+(?i1___lwdiv)),w
  6746  0F5B  0870               	movwf	(handle_potmeter@currentStep)
  6747  0F5C  00D2               	line	39
  6748                           ;Volume.c: 39:         if (!is_deadzone(currentStep, ad_result))
  6749                           	movf	(handle_potmeter@currentStep+1),w
  6750  0F5D  0853               	movwf	(is_deadzone@currentStep+1)
  6751  0F5E  00C4               	movf	(handle_potmeter@currentStep),w
  6752  0F5F  0852               	movwf	(is_deadzone@currentStep)
  6753  0F60  00C3               	movf	(handle_potmeter@ad_result+1),w
  6754  0F61  0855               	movwf	(is_deadzone@adcResult+1)
  6755  0F62  00C6               	movf	(handle_potmeter@ad_result),w
  6756  0F63  0854               	movwf	(is_deadzone@adcResult)
  6757  0F64  00C5               	fcall	_is_deadzone
  6758  0F65  120A  118A  25D3  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6759  0F6A  1283               	bcf	status, 6	;RP1=0, select bank0
  6760  0F6B  1303               	movf	((0+(?_is_deadzone))),w
  6761  0F6C  0843               iorwf	((1+(?_is_deadzone))),w
  6762  0F6D  0444               	btfss	status,2
  6763  0F6E  1D03               	goto	u291_21
  6764  0F6F  2F71               	goto	u291_20
  6765  0F70  2F72               u291_21:
  6766  0F71                     	goto	i1l319
  6767  0F71  2F7E               u291_20:
  6768  0F72                     	line	40
  6769                           	
  6770                           i1l2661:	
  6771  0F72                     ;Volume.c: 40:             volume = currentStep;
  6772                           	movf	(handle_potmeter@currentStep+1),w
  6773  0F72  0853               	bsf	status, 5	;RP0=1, select bank1
  6774  0F73  1683               	bcf	status, 6	;RP1=0, select bank1
  6775  0F74  1303               	movwf	(_volume+1)^080h
  6776  0F75  00CA               	bcf	status, 5	;RP0=0, select bank0
  6777  0F76  1283               	bcf	status, 6	;RP1=0, select bank0
  6778  0F77  1303               	movf	(handle_potmeter@currentStep),w
  6779  0F78  0852               	bsf	status, 5	;RP0=1, select bank1
  6780  0F79  1683               	bcf	status, 6	;RP1=0, select bank1
  6781  0F7A  1303               	movwf	(_volume)^080h
  6782  0F7B  00C9               	goto	i1l319
  6783  0F7C  2F7E               	
  6784                           i1l318:	
  6785  0F7D                     	goto	i1l319
  6786  0F7D  2F7E               	line	41
  6787                           ;Volume.c: 41:     }
  6788                           	
  6789                           i1l317:	
  6790  0F7E                     	line	43
  6791                           	
  6792                           i1l319:	
  6793  0F7E                     	return
  6794  0F7E  0008               	opt stack 0
  6795                           GLOBAL	__end_of_handle_potmeter
  6796                           	__end_of_handle_potmeter:
  6797  0F7F                     	signat	_handle_potmeter,89
  6798                           	global	i1___lwdiv
  6799                           
  6800 ;; *************** function i1___lwdiv *****************
  6801 ;; Defined at:
  6802 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;  divisor         2    0[COMMON] unsigned int 
  6805 ;;  dividend        2    2[COMMON] unsigned int 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6808 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6809 ;; Return value:  Size  Location     Type
  6810 ;;                  2    0[COMMON] unsigned int 
  6811 ;; Registers used:
  6812 ;;		wreg, status,2, status,0
  6813 ;; Tracked objects:
  6814 ;;		On entry : 0/0
  6815 ;;		On exit  : 0/0
  6816 ;;		Unchanged: 0/0
  6817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6818 ;;      Params:         4       0       0       0       0
  6819 ;;      Locals:         3       0       0       0       0
  6820 ;;      Temps:          1       0       0       0       0
  6821 ;;      Totals:         8       0       0       0       0
  6822 ;;Total ram usage:        8 bytes
  6823 ;; Hardware stack levels used:    1
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_handle_potmeter
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6831                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  6832                           	line	5
  6833                           global __ptext23
  6834                           __ptext23:	;psect for function i1___lwdiv
  6835  0CA2                     psect	text23
  6836                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  6837                           	line	5
  6838                           	global	__size_ofi1___lwdiv
  6839                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
  6840  004B                     	
  6841                           i1___lwdiv:	
  6842  0CA2                     ;incstack = 0
  6843 ;; hardware stack exceeded
  6844                           	opt	stack 0
  6845                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6846                           	line	13
  6847                           	
  6848                           i1l2481:	
  6849  0CA2                     	clrf	(i1___lwdiv@quotient)
  6850  0CA2  01F5               	clrf	(i1___lwdiv@quotient+1)
  6851  0CA3  01F6               	line	14
  6852                           	
  6853                           i1l2483:	
  6854  0CA4                     	movf	((i1___lwdiv@divisor)),w
  6855  0CA4  0870               iorwf	((i1___lwdiv@divisor+1)),w
  6856  0CA5  0471               	btfsc	status,2
  6857  0CA6  1903               	goto	u270_21
  6858  0CA7  2CA9               	goto	u270_20
  6859  0CA8  2CAA               u270_21:
  6860  0CA9                     	goto	i1l2503
  6861  0CA9  2CE7               u270_20:
  6862  0CAA                     	line	15
  6863                           	
  6864                           i1l2485:	
  6865  0CAA                     	clrf	(i1___lwdiv@counter)
  6866  0CAA  01F7               	incf	(i1___lwdiv@counter),f
  6867  0CAB  0AF7               	line	16
  6868                           	goto	i1l2491
  6869  0CAC  2CB9               	
  6870                           i1l743:	
  6871  0CAD                     	line	17
  6872                           	
  6873                           i1l2487:	
  6874  0CAD                     	movlw	01h
  6875  0CAD  3001               	
  6876                           u271_25:
  6877  0CAE                     	clrc
  6878  0CAE  1003               	rlf	(i1___lwdiv@divisor),f
  6879  0CAF  0DF0               	rlf	(i1___lwdiv@divisor+1),f
  6880  0CB0  0DF1               	addlw	-1
  6881  0CB1  3EFF               	skipz
  6882  0CB2  1D03               	goto	u271_25
  6883  0CB3  2CAE               	line	18
  6884                           	
  6885                           i1l2489:	
  6886  0CB4                     	movlw	low(01h)
  6887  0CB4  3001               	movwf	(??i1___lwdiv+0)+0
  6888  0CB5  00F4               	movf	(??i1___lwdiv+0)+0,w
  6889  0CB6  0874               	addwf	(i1___lwdiv@counter),f
  6890  0CB7  07F7               	goto	i1l2491
  6891  0CB8  2CB9               	line	19
  6892                           	
  6893                           i1l742:	
  6894  0CB9                     	line	16
  6895                           	
  6896                           i1l2491:	
  6897  0CB9                     	btfss	(i1___lwdiv@divisor+1),(15)&7
  6898  0CB9  1FF1               	goto	u272_21
  6899  0CBA  2CBC               	goto	u272_20
  6900  0CBB  2CBD               u272_21:
  6901  0CBC                     	goto	i1l2487
  6902  0CBC  2CAD               u272_20:
  6903  0CBD                     	goto	i1l2493
  6904  0CBD  2CBF               	
  6905                           i1l744:	
  6906  0CBE                     	goto	i1l2493
  6907  0CBE  2CBF               	line	20
  6908                           	
  6909                           i1l745:	
  6910  0CBF                     	line	21
  6911                           	
  6912                           i1l2493:	
  6913  0CBF                     	movlw	01h
  6914  0CBF  3001               	
  6915                           u273_25:
  6916  0CC0                     	clrc
  6917  0CC0  1003               	rlf	(i1___lwdiv@quotient),f
  6918  0CC1  0DF5               	rlf	(i1___lwdiv@quotient+1),f
  6919  0CC2  0DF6               	addlw	-1
  6920  0CC3  3EFF               	skipz
  6921  0CC4  1D03               	goto	u273_25
  6922  0CC5  2CC0               	line	22
  6923                           	movf	(i1___lwdiv@divisor+1),w
  6924  0CC6  0871               	subwf	(i1___lwdiv@dividend+1),w
  6925  0CC7  0273               	skipz
  6926  0CC8  1D03               	goto	u274_25
  6927  0CC9  2CCC               	movf	(i1___lwdiv@divisor),w
  6928  0CCA  0870               	subwf	(i1___lwdiv@dividend),w
  6929  0CCB  0272               u274_25:
  6930  0CCC                     	skipc
  6931  0CCC  1C03               	goto	u274_21
  6932  0CCD  2CCF               	goto	u274_20
  6933  0CCE  2CD0               u274_21:
  6934  0CCF                     	goto	i1l2499
  6935  0CCF  2CD8               u274_20:
  6936  0CD0                     	line	23
  6937                           	
  6938                           i1l2495:	
  6939  0CD0                     	movf	(i1___lwdiv@divisor),w
  6940  0CD0  0870               	subwf	(i1___lwdiv@dividend),f
  6941  0CD1  02F2               	movf	(i1___lwdiv@divisor+1),w
  6942  0CD2  0871               	skipc
  6943  0CD3  1C03               	decf	(i1___lwdiv@dividend+1),f
  6944  0CD4  03F3               	subwf	(i1___lwdiv@dividend+1),f
  6945  0CD5  02F3               	line	24
  6946                           	
  6947                           i1l2497:	
  6948  0CD6                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
  6949  0CD6  1475               	goto	i1l2499
  6950  0CD7  2CD8               	line	25
  6951                           	
  6952                           i1l746:	
  6953  0CD8                     	line	26
  6954                           	
  6955                           i1l2499:	
  6956  0CD8                     	movlw	01h
  6957  0CD8  3001               	
  6958                           u275_25:
  6959  0CD9                     	clrc
  6960  0CD9  1003               	rrf	(i1___lwdiv@divisor+1),f
  6961  0CDA  0CF1               	rrf	(i1___lwdiv@divisor),f
  6962  0CDB  0CF0               	addlw	-1
  6963  0CDC  3EFF               	skipz
  6964  0CDD  1D03               	goto	u275_25
  6965  0CDE  2CD9               	line	27
  6966                           	
  6967                           i1l2501:	
  6968  0CDF                     	movlw	01h
  6969  0CDF  3001               	subwf	(i1___lwdiv@counter),f
  6970  0CE0  02F7               	btfss	status,2
  6971  0CE1  1D03               	goto	u276_21
  6972  0CE2  2CE4               	goto	u276_20
  6973  0CE3  2CE5               u276_21:
  6974  0CE4                     	goto	i1l2493
  6975  0CE4  2CBF               u276_20:
  6976  0CE5                     	goto	i1l2503
  6977  0CE5  2CE7               	
  6978                           i1l747:	
  6979  0CE6                     	goto	i1l2503
  6980  0CE6  2CE7               	line	28
  6981                           	
  6982                           i1l741:	
  6983  0CE7                     	line	29
  6984                           	
  6985                           i1l2503:	
  6986  0CE7                     	movf	(i1___lwdiv@quotient+1),w
  6987  0CE7  0876               	movwf	(?i1___lwdiv+1)
  6988  0CE8  00F1               	movf	(i1___lwdiv@quotient),w
  6989  0CE9  0875               	movwf	(?i1___lwdiv)
  6990  0CEA  00F0               	goto	i1l748
  6991  0CEB  2CEC               	
  6992                           i1l2505:	
  6993  0CEC                     	line	30
  6994                           	
  6995                           i1l748:	
  6996  0CEC                     	return
  6997  0CEC  0008               	opt stack 0
  6998                           GLOBAL	__end_ofi1___lwdiv
  6999                           	__end_ofi1___lwdiv:
  7000  0CED                     	signat	i1___lwdiv,90
  7001                           	global	_is_deadzone
  7002                           
  7003 ;; *************** function _is_deadzone *****************
  7004 ;; Defined at:
  7005 ;;		line 20 in file "Volume.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  currentStep     2   35[BANK0 ] int 
  7008 ;;  adcResult       2   37[BANK0 ] int 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;  turnPoint       2   46[BANK0 ] int 
  7011 ;;  deadzoneHigh    2   43[BANK0 ] int 
  7012 ;;  deadzoneLow     2   41[BANK0 ] int 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  2   35[BANK0 ] int 
  7015 ;; Registers used:
  7016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7022 ;;      Params:         0       4       0       0       0
  7023 ;;      Locals:         0       7       0       0       0
  7024 ;;      Temps:          0       2       0       0       0
  7025 ;;      Totals:         0      13       0       0       0
  7026 ;;Total ram usage:       13 bytes
  7027 ;; Hardware stack levels used:    1
  7028 ;; Hardware stack levels required when called:    1
  7029 ;; This function calls:
  7030 ;;		___fladd
  7031 ;;		___fltol
  7032 ;;		___xxtofl
  7033 ;;		i1___wmul
  7034 ;; This function is called by:
  7035 ;;		_handle_potmeter
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7039                           	file	"Volume.c"
  7040                           	line	20
  7041                           global __ptext24
  7042                           __ptext24:	;psect for function _is_deadzone
  7043  05D3                     psect	text24
  7044                           	file	"Volume.c"
  7045                           	line	20
  7046                           	global	__size_of_is_deadzone
  7047                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  7048  00C6                     	
  7049                           _is_deadzone:	
  7050  05D3                     ;incstack = 0
  7051 ;; hardware stack exceeded
  7052                           	opt	stack 0
  7053                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7054                           	line	22
  7055                           	
  7056                           i1l2463:	
  7057  05D3                     ;Volume.c: 20: int is_deadzone(int currentStep, int adcResult);Volume.c: 21: {;Volume.c:
                                  22:     int turnPoint = step_size * currentStep;
  7058                           	movlw	low(_step_size|8000h)
  7059  05D3  308E               	movwf	fsr0
  7060  05D4  0084               	movlw	high(_step_size|8000h)
  7061  05D5  3084               	bcf	status, 5	;RP0=0, select bank0
  7062  05D6  1283               	bcf	status, 6	;RP1=0, select bank0
  7063  05D7  1303               	movwf	btemp+1
  7064  05D8  00FF               	fcall	stringtab
  7065  05D9  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier)
  7066  05DE  00F0               	fcall	stringtab
  7067  05DF  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier+1)
  7068  05E4  00F1               	movf	(is_deadzone@currentStep+1),w
  7069  05E5  0844               	movwf	(i1___wmul@multiplicand+1)
  7070  05E6  00F3               	movf	(is_deadzone@currentStep),w
  7071  05E7  0843               	movwf	(i1___wmul@multiplicand)
  7072  05E8  00F2               	fcall	i1___wmul
  7073  05E9  120A  158A  225F  120A  118A  	movf	(1+(?i1___wmul)),w
  7074  05EE  0871               	bcf	status, 5	;RP0=0, select bank0
  7075  05EF  1283               	bcf	status, 6	;RP1=0, select bank0
  7076  05F0  1303               	movwf	(is_deadzone@turnPoint+1)
  7077  05F1  00CF               	movf	(0+(?i1___wmul)),w
  7078  05F2  0870               	movwf	(is_deadzone@turnPoint)
  7079  05F3  00CE               	line	24
  7080                           	
  7081                           i1l2465:	
  7082  05F4                     ;Volume.c: 24:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  7083                           	movf	(is_deadzone@turnPoint),w
  7084  05F4  084E               	movwf	(___xxtofl@val)
  7085  05F5  00F0               	movf	(is_deadzone@turnPoint+1),w
  7086  05F6  084F               	movwf	(___xxtofl@val+1)
  7087  05F7  00F1               	movlw	0
  7088  05F8  3000               	btfsc	(___xxtofl@val+1),7
  7089  05F9  1BF1               	movlw	255
  7090  05FA  30FF               	movwf	(___xxtofl@val+2)
  7091  05FB  00F2               	movwf	(___xxtofl@val+3)
  7092  05FC  00F3               	movlw	low(01h)
  7093  05FD  3001               	fcall	___xxtofl
  7094  05FE  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7095  0603  0873               	bcf	status, 5	;RP0=0, select bank0
  7096  0604  1283               	bcf	status, 6	;RP1=0, select bank0
  7097  0605  1303               	movwf	(___fladd@a+3)
  7098  0606  00A7               	movf	(2+(?___xxtofl)),w
  7099  0607  0872               	movwf	(___fladd@a+2)
  7100  0608  00A6               	movf	(1+(?___xxtofl)),w
  7101  0609  0871               	movwf	(___fladd@a+1)
  7102  060A  00A5               	movf	(0+(?___xxtofl)),w
  7103  060B  0870               	movwf	(___fladd@a)
  7104  060C  00A4               
  7105                           	movlw	0xc1
  7106  060D  30C1               	movwf	(___fladd@b+3)
  7107  060E  00A3               	movlw	0x23
  7108  060F  3023               	movwf	(___fladd@b+2)
  7109  0610  00A2               	movlw	0xae
  7110  0611  30AE               	movwf	(___fladd@b+1)
  7111  0612  00A1               	movlw	0x14
  7112  0613  3014               	movwf	(___fladd@b)
  7113  0614  00A0               
  7114                           	fcall	___fladd
  7115  0615  120A  118A  2030  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7116  061A  1283               	bcf	status, 6	;RP1=0, select bank0
  7117  061B  1303               	movf	(3+(?___fladd)),w
  7118  061C  0823               	movwf	(___fltol@f1+3)
  7119  061D  00BB               	movf	(2+(?___fladd)),w
  7120  061E  0822               	movwf	(___fltol@f1+2)
  7121  061F  00BA               	movf	(1+(?___fladd)),w
  7122  0620  0821               	movwf	(___fltol@f1+1)
  7123  0621  00B9               	movf	(0+(?___fladd)),w
  7124  0622  0820               	movwf	(___fltol@f1)
  7125  0623  00B8               
  7126                           	fcall	___fltol
  7127  0624  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7128  0629  1283               	bcf	status, 6	;RP1=0, select bank0
  7129  062A  1303               	movf	(1+(?___fltol)),w
  7130  062B  0839               	movwf	(is_deadzone@deadzoneLow+1)
  7131  062C  00CA               	movf	(0+(?___fltol)),w
  7132  062D  0838               	movwf	(is_deadzone@deadzoneLow)
  7133  062E  00C9               	line	25
  7134                           	
  7135                           i1l2467:	
  7136  062F                     ;Volume.c: 25:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  7137                           	movf	(is_deadzone@turnPoint),w
  7138  062F  084E               	movwf	(___xxtofl@val)
  7139  0630  00F0               	movf	(is_deadzone@turnPoint+1),w
  7140  0631  084F               	movwf	(___xxtofl@val+1)
  7141  0632  00F1               	movlw	0
  7142  0633  3000               	btfsc	(___xxtofl@val+1),7
  7143  0634  1BF1               	movlw	255
  7144  0635  30FF               	movwf	(___xxtofl@val+2)
  7145  0636  00F2               	movwf	(___xxtofl@val+3)
  7146  0637  00F3               	movlw	low(01h)
  7147  0638  3001               	fcall	___xxtofl
  7148  0639  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7149  063E  0873               	bcf	status, 5	;RP0=0, select bank0
  7150  063F  1283               	bcf	status, 6	;RP1=0, select bank0
  7151  0640  1303               	movwf	(___fladd@a+3)
  7152  0641  00A7               	movf	(2+(?___xxtofl)),w
  7153  0642  0872               	movwf	(___fladd@a+2)
  7154  0643  00A6               	movf	(1+(?___xxtofl)),w
  7155  0644  0871               	movwf	(___fladd@a+1)
  7156  0645  00A5               	movf	(0+(?___xxtofl)),w
  7157  0646  0870               	movwf	(___fladd@a)
  7158  0647  00A4               
  7159                           	movlw	0x41
  7160  0648  3041               	movwf	(___fladd@b+3)
  7161  0649  00A3               	movlw	0x23
  7162  064A  3023               	movwf	(___fladd@b+2)
  7163  064B  00A2               	movlw	0xae
  7164  064C  30AE               	movwf	(___fladd@b+1)
  7165  064D  00A1               	movlw	0x14
  7166  064E  3014               	movwf	(___fladd@b)
  7167  064F  00A0               
  7168                           	fcall	___fladd
  7169  0650  120A  118A  2030  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7170  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  7171  0656  1303               	movf	(3+(?___fladd)),w
  7172  0657  0823               	movwf	(___fltol@f1+3)
  7173  0658  00BB               	movf	(2+(?___fladd)),w
  7174  0659  0822               	movwf	(___fltol@f1+2)
  7175  065A  00BA               	movf	(1+(?___fladd)),w
  7176  065B  0821               	movwf	(___fltol@f1+1)
  7177  065C  00B9               	movf	(0+(?___fladd)),w
  7178  065D  0820               	movwf	(___fltol@f1)
  7179  065E  00B8               
  7180                           	fcall	___fltol
  7181  065F  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7182  0664  1283               	bcf	status, 6	;RP1=0, select bank0
  7183  0665  1303               	movf	(1+(?___fltol)),w
  7184  0666  0839               	movwf	(is_deadzone@deadzoneHigh+1)
  7185  0667  00CC               	movf	(0+(?___fltol)),w
  7186  0668  0838               	movwf	(is_deadzone@deadzoneHigh)
  7187  0669  00CB               	line	27
  7188                           	
  7189                           i1l2469:	
  7190  066A                     ;Volume.c: 27:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  7191                           	clrf	(_is_deadzone$863)
  7192  066A  01CD               	
  7193                           i1l2471:	
  7194  066B                     	movf	(is_deadzone@deadzoneLow+1),w
  7195  066B  084A               	xorlw	80h
  7196  066C  3A80               	movwf	(??_is_deadzone+0)+0
  7197  066D  00C7               	movf	(is_deadzone@adcResult+1),w
  7198  066E  0846               	xorlw	80h
  7199  066F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7200  0670  0247               	skipz
  7201  0671  1D03               	goto	u268_25
  7202  0672  2E75               	movf	(is_deadzone@adcResult),w
  7203  0673  0845               	subwf	(is_deadzone@deadzoneLow),w
  7204  0674  0249               u268_25:
  7205  0675                     
  7206                           	skipnc
  7207  0675  1803               	goto	u268_21
  7208  0676  2E78               	goto	u268_20
  7209  0677  2E79               u268_21:
  7210  0678                     	goto	i1l2477
  7211  0678  2E8E               u268_20:
  7212  0679                     	
  7213                           i1l2473:	
  7214  0679                     	bcf	status, 5	;RP0=0, select bank0
  7215  0679  1283               	bcf	status, 6	;RP1=0, select bank0
  7216  067A  1303               	movf	(is_deadzone@adcResult+1),w
  7217  067B  0846               	xorlw	80h
  7218  067C  3A80               	movwf	(??_is_deadzone+0)+0
  7219  067D  00C7               	movf	(is_deadzone@deadzoneHigh+1),w
  7220  067E  084C               	xorlw	80h
  7221  067F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7222  0680  0247               	skipz
  7223  0681  1D03               	goto	u269_25
  7224  0682  2E85               	movf	(is_deadzone@deadzoneHigh),w
  7225  0683  084B               	subwf	(is_deadzone@adcResult),w
  7226  0684  0245               u269_25:
  7227  0685                     
  7228                           	skipnc
  7229  0685  1803               	goto	u269_21
  7230  0686  2E88               	goto	u269_20
  7231  0687  2E89               u269_21:
  7232  0688                     	goto	i1l2477
  7233  0688  2E8E               u269_20:
  7234  0689                     	
  7235                           i1l2475:	
  7236  0689                     	bcf	status, 5	;RP0=0, select bank0
  7237  0689  1283               	bcf	status, 6	;RP1=0, select bank0
  7238  068A  1303               	clrf	(_is_deadzone$863)
  7239  068B  01CD               	incf	(_is_deadzone$863),f
  7240  068C  0ACD               	goto	i1l2477
  7241  068D  2E8E               	
  7242                           i1l310:	
  7243  068E                     	
  7244                           i1l2477:	
  7245  068E                     	bcf	status, 5	;RP0=0, select bank0
  7246  068E  1283               	bcf	status, 6	;RP1=0, select bank0
  7247  068F  1303               	movf	(_is_deadzone$863),w
  7248  0690  084D               	movwf	(??_is_deadzone+0)+0
  7249  0691  00C7               	clrf	(??_is_deadzone+0)+0+1
  7250  0692  01C8               	movf	0+(??_is_deadzone+0)+0,w
  7251  0693  0847               	movwf	(?_is_deadzone)
  7252  0694  00C3               	movf	1+(??_is_deadzone+0)+0,w
  7253  0695  0848               	movwf	(?_is_deadzone+1)
  7254  0696  00C4               	goto	i1l311
  7255  0697  2E98               	
  7256                           i1l2479:	
  7257  0698                     	line	28
  7258                           	
  7259                           i1l311:	
  7260  0698                     	return
  7261  0698  0008               	opt stack 0
  7262                           GLOBAL	__end_of_is_deadzone
  7263                           	__end_of_is_deadzone:
  7264  0699                     	signat	_is_deadzone,8314
  7265                           	global	i1___wmul
  7266                           
  7267 ;; *************** function i1___wmul *****************
  7268 ;; Defined at:
  7269 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  7270 ;; Parameters:    Size  Location     Type
  7271 ;;  multiplier      2    0[COMMON] unsigned int 
  7272 ;;  multiplicand    2    2[COMMON] unsigned int 
  7273 ;; Auto vars:     Size  Location     Type
  7274 ;;  __wmul          2    4[COMMON] unsigned int 
  7275 ;; Return value:  Size  Location     Type
  7276 ;;                  2    0[COMMON] unsigned int 
  7277 ;; Registers used:
  7278 ;;		wreg, status,2, status,0
  7279 ;; Tracked objects:
  7280 ;;		On entry : 0/0
  7281 ;;		On exit  : 0/0
  7282 ;;		Unchanged: 0/0
  7283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7284 ;;      Params:         4       0       0       0       0
  7285 ;;      Locals:         2       0       0       0       0
  7286 ;;      Temps:          0       0       0       0       0
  7287 ;;      Totals:         6       0       0       0       0
  7288 ;;Total ram usage:        6 bytes
  7289 ;; Hardware stack levels used:    1
  7290 ;; This function calls:
  7291 ;;		Nothing
  7292 ;; This function is called by:
  7293 ;;		_is_deadzone
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7297                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  7298                           	line	15
  7299                           global __ptext25
  7300                           __ptext25:	;psect for function i1___wmul
  7301  0A5F                     psect	text25
  7302                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  7303                           	line	15
  7304                           	global	__size_ofi1___wmul
  7305                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  7306  0028                     	
  7307                           i1___wmul:	
  7308  0A5F                     ;incstack = 0
  7309 ;; hardware stack exceeded
  7310                           	opt	stack 0
  7311                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7312                           	line	43
  7313                           	
  7314                           i1l2359:	
  7315  0A5F                     	clrf	(i1___wmul@product)
  7316  0A5F  01F4               	clrf	(i1___wmul@product+1)
  7317  0A60  01F5               	goto	i1l2361
  7318  0A61  2A62               	line	44
  7319                           	
  7320                           i1l475:	
  7321  0A62                     	line	45
  7322                           	
  7323                           i1l2361:	
  7324  0A62                     	btfss	(i1___wmul@multiplier),(0)&7
  7325  0A62  1C70               	goto	u262_21
  7326  0A63  2A65               	goto	u262_20
  7327  0A64  2A66               u262_21:
  7328  0A65                     	goto	i1l476
  7329  0A65  2A6C               u262_20:
  7330  0A66                     	line	46
  7331                           	
  7332                           i1l2363:	
  7333  0A66                     	movf	(i1___wmul@multiplicand),w
  7334  0A66  0872               	addwf	(i1___wmul@product),f
  7335  0A67  07F4               	skipnc
  7336  0A68  1803               	incf	(i1___wmul@product+1),f
  7337  0A69  0AF5               	movf	(i1___wmul@multiplicand+1),w
  7338  0A6A  0873               	addwf	(i1___wmul@product+1),f
  7339  0A6B  07F5               	
  7340                           i1l476:	
  7341  0A6C                     	line	47
  7342                           	movlw	01h
  7343  0A6C  3001               	
  7344                           u263_25:
  7345  0A6D                     	clrc
  7346  0A6D  1003               	rlf	(i1___wmul@multiplicand),f
  7347  0A6E  0DF2               	rlf	(i1___wmul@multiplicand+1),f
  7348  0A6F  0DF3               	addlw	-1
  7349  0A70  3EFF               	skipz
  7350  0A71  1D03               	goto	u263_25
  7351  0A72  2A6D               	line	48
  7352                           	
  7353                           i1l2365:	
  7354  0A73                     	movlw	01h
  7355  0A73  3001               	
  7356                           u264_25:
  7357  0A74                     	clrc
  7358  0A74  1003               	rrf	(i1___wmul@multiplier+1),f
  7359  0A75  0CF1               	rrf	(i1___wmul@multiplier),f
  7360  0A76  0CF0               	addlw	-1
  7361  0A77  3EFF               	skipz
  7362  0A78  1D03               	goto	u264_25
  7363  0A79  2A74               	line	49
  7364                           	
  7365                           i1l2367:	
  7366  0A7A                     	movf	((i1___wmul@multiplier)),w
  7367  0A7A  0870               iorwf	((i1___wmul@multiplier+1)),w
  7368  0A7B  0471               	btfss	status,2
  7369  0A7C  1D03               	goto	u265_21
  7370  0A7D  2A7F               	goto	u265_20
  7371  0A7E  2A80               u265_21:
  7372  0A7F                     	goto	i1l2361
  7373  0A7F  2A62               u265_20:
  7374  0A80                     	goto	i1l2369
  7375  0A80  2A81               	
  7376                           i1l477:	
  7377  0A81                     	line	52
  7378                           	
  7379                           i1l2369:	
  7380  0A81                     	movf	(i1___wmul@product+1),w
  7381  0A81  0875               	movwf	(?i1___wmul+1)
  7382  0A82  00F1               	movf	(i1___wmul@product),w
  7383  0A83  0874               	movwf	(?i1___wmul)
  7384  0A84  00F0               	goto	i1l478
  7385  0A85  2A86               	
  7386                           i1l2371:	
  7387  0A86                     	line	53
  7388                           	
  7389                           i1l478:	
  7390  0A86                     	return
  7391  0A86  0008               	opt stack 0
  7392                           GLOBAL	__end_ofi1___wmul
  7393                           	__end_ofi1___wmul:
  7394  0A87                     	signat	i1___wmul,90
  7395                           	global	___xxtofl
  7396                           
  7397 ;; *************** function ___xxtofl *****************
  7398 ;; Defined at:
  7399 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  sign            1    wreg     unsigned char 
  7402 ;;  val             4    0[COMMON] long 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  sign            1    8[COMMON] unsigned char 
  7405 ;;  arg             4   10[COMMON] unsigned long 
  7406 ;;  exp             1    9[COMMON] unsigned char 
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  4    0[COMMON] unsigned char 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7416 ;;      Params:         4       0       0       0       0
  7417 ;;      Locals:         6       0       0       0       0
  7418 ;;      Temps:          4       0       0       0       0
  7419 ;;      Totals:        14       0       0       0       0
  7420 ;;Total ram usage:       14 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_is_deadzone
  7426 ;; This function uses a non-reentrant model
  7427 ;;
  7428                           psect	text26,local,class=CODE,delta=2,merge=1,group=1
  7429                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  7430                           	line	10
  7431                           global __ptext26
  7432                           __ptext26:	;psect for function ___xxtofl
  7433  0699                     psect	text26
  7434                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  7435                           	line	10
  7436                           	global	__size_of___xxtofl
  7437                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  7438  00C2                     	
  7439                           ___xxtofl:	
  7440  0699                     ;incstack = 0
  7441 ;; hardware stack exceeded
  7442                           	opt	stack 0
  7443                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7444                           ;___xxtofl@sign stored from wreg
  7445                           	movwf	(___xxtofl@sign)
  7446  0699  00F8               	line	15
  7447                           	
  7448                           i1l2315:	
  7449  069A                     	movf	((___xxtofl@sign)),w
  7450  069A  0878               	btfsc	status,2
  7451  069B  1903               	goto	u248_21
  7452  069C  2E9E               	goto	u248_20
  7453  069D  2E9F               u248_21:
  7454  069E                     	goto	i1l2321
  7455  069E  2EB3               u248_20:
  7456  069F                     	
  7457                           i1l2317:	
  7458  069F                     	btfss	(___xxtofl@val+3),7
  7459  069F  1FF3               	goto	u249_21
  7460  06A0  2EA2               	goto	u249_20
  7461  06A1  2EA3               u249_21:
  7462  06A2                     	goto	i1l2321
  7463  06A2  2EB3               u249_20:
  7464  06A3                     	line	16
  7465                           	
  7466                           i1l2319:	
  7467  06A3                     	comf	(___xxtofl@val)+0,w
  7468  06A3  0970               	movwf	(___xxtofl@arg)
  7469  06A4  00FA               	comf	(___xxtofl@val)+1,w
  7470  06A5  0971               	movwf	(___xxtofl@arg+1)
  7471  06A6  00FB               	comf	(___xxtofl@val)+2,w
  7472  06A7  0972               	movwf	(___xxtofl@arg+2)
  7473  06A8  00FC               	comf	(___xxtofl@val)+3,w
  7474  06A9  0973               	movwf	(___xxtofl@arg+3)
  7475  06AA  00FD               	incf	(___xxtofl@arg),f
  7476  06AB  0AFA               	skipnz
  7477  06AC  1903               	incf	(___xxtofl@arg+1),f
  7478  06AD  0AFB               	skipnz
  7479  06AE  1903               	incf	(___xxtofl@arg+2),f
  7480  06AF  0AFC               	skipnz
  7481  06B0  1903               	incf	(___xxtofl@arg+3),f
  7482  06B1  0AFD               	line	17
  7483                           	goto	i1l884
  7484  06B2  2EBB               	line	18
  7485                           	
  7486                           i1l883:	
  7487  06B3                     	line	19
  7488                           	
  7489                           i1l2321:	
  7490  06B3                     	movf	(___xxtofl@val+3),w
  7491  06B3  0873               	movwf	(___xxtofl@arg+3)
  7492  06B4  00FD               	movf	(___xxtofl@val+2),w
  7493  06B5  0872               	movwf	(___xxtofl@arg+2)
  7494  06B6  00FC               	movf	(___xxtofl@val+1),w
  7495  06B7  0871               	movwf	(___xxtofl@arg+1)
  7496  06B8  00FB               	movf	(___xxtofl@val),w
  7497  06B9  0870               	movwf	(___xxtofl@arg)
  7498  06BA  00FA               
  7499                           	line	20
  7500                           	
  7501                           i1l884:	
  7502  06BB                     	line	21
  7503                           	movf	(___xxtofl@val+3),w
  7504  06BB  0873               	iorwf	(___xxtofl@val+2),w
  7505  06BC  0472               	iorwf	(___xxtofl@val+1),w
  7506  06BD  0471               	iorwf	(___xxtofl@val),w
  7507  06BE  0470               	skipz
  7508  06BF  1D03               	goto	u250_21
  7509  06C0  2EC2               	goto	u250_20
  7510  06C1  2EC3               u250_21:
  7511  06C2                     	goto	i1l2327
  7512  06C2  2ECD               u250_20:
  7513  06C3                     	line	22
  7514                           	
  7515                           i1l2323:	
  7516  06C3                     	movlw	0x0
  7517  06C3  3000               	movwf	(?___xxtofl+3)
  7518  06C4  00F3               	movlw	0x0
  7519  06C5  3000               	movwf	(?___xxtofl+2)
  7520  06C6  00F2               	movlw	0x0
  7521  06C7  3000               	movwf	(?___xxtofl+1)
  7522  06C8  00F1               	movlw	0x0
  7523  06C9  3000               	movwf	(?___xxtofl)
  7524  06CA  00F0               
  7525                           	goto	i1l886
  7526  06CB  2F5A               	
  7527                           i1l2325:	
  7528  06CC                     	goto	i1l886
  7529  06CC  2F5A               	
  7530                           i1l885:	
  7531  06CD                     	line	23
  7532                           	
  7533                           i1l2327:	
  7534  06CD                     	movlw	low(096h)
  7535  06CD  3096               	movwf	(??___xxtofl+0)+0
  7536  06CE  00F4               	movf	(??___xxtofl+0)+0,w
  7537  06CF  0874               	movwf	(___xxtofl@exp)
  7538  06D0  00F9               	line	24
  7539                           	goto	i1l2331
  7540  06D1  2EE0               	
  7541                           i1l888:	
  7542  06D2                     	line	25
  7543                           	
  7544                           i1l2329:	
  7545  06D2                     	movlw	low(01h)
  7546  06D2  3001               	movwf	(??___xxtofl+0)+0
  7547  06D3  00F4               	movf	(??___xxtofl+0)+0,w
  7548  06D4  0874               	addwf	(___xxtofl@exp),f
  7549  06D5  07F9               	line	26
  7550                           	movlw	01h
  7551  06D6  3001               u251_25:
  7552  06D7                     	clrc
  7553  06D7  1003               	rrf	(___xxtofl@arg+3),f
  7554  06D8  0CFD               	rrf	(___xxtofl@arg+2),f
  7555  06D9  0CFC               	rrf	(___xxtofl@arg+1),f
  7556  06DA  0CFB               	rrf	(___xxtofl@arg),f
  7557  06DB  0CFA               	addlw	-1
  7558  06DC  3EFF               	skipz
  7559  06DD  1D03               	goto	u251_25
  7560  06DE  2ED7               
  7561                           	goto	i1l2331
  7562  06DF  2EE0               	line	27
  7563                           	
  7564                           i1l887:	
  7565  06E0                     	line	24
  7566                           	
  7567                           i1l2331:	
  7568  06E0                     	movlw	high highword(0FE000000h)
  7569  06E0  30FE               	andwf	(___xxtofl@arg+3),w
  7570  06E1  057D               	btfss	status,2
  7571  06E2  1D03               	goto	u252_21
  7572  06E3  2EE5               	goto	u252_20
  7573  06E4  2EE6               u252_21:
  7574  06E5                     	goto	i1l2329
  7575  06E5  2ED2               u252_20:
  7576  06E6                     	goto	i1l890
  7577  06E6  2F03               	
  7578                           i1l889:	
  7579  06E7                     	line	28
  7580                           	goto	i1l890
  7581  06E7  2F03               	
  7582                           i1l891:	
  7583  06E8                     	line	29
  7584                           	
  7585                           i1l2333:	
  7586  06E8                     	movlw	low(01h)
  7587  06E8  3001               	movwf	(??___xxtofl+0)+0
  7588  06E9  00F4               	movf	(??___xxtofl+0)+0,w
  7589  06EA  0874               	addwf	(___xxtofl@exp),f
  7590  06EB  07F9               	line	30
  7591                           	
  7592                           i1l2335:	
  7593  06EC                     	movlw	01h
  7594  06EC  3001               	addwf	(___xxtofl@arg),f
  7595  06ED  07FA               	movlw	0
  7596  06EE  3000               	skipnc
  7597  06EF  1803               movlw 1
  7598  06F0  3001               	addwf	(___xxtofl@arg+1),f
  7599  06F1  07FB               	movlw	0
  7600  06F2  3000               	skipnc
  7601  06F3  1803               movlw 1
  7602  06F4  3001               	addwf	(___xxtofl@arg+2),f
  7603  06F5  07FC               	movlw	0
  7604  06F6  3000               	skipnc
  7605  06F7  1803               movlw 1
  7606  06F8  3001               	addwf	(___xxtofl@arg+3),f
  7607  06F9  07FD               	line	31
  7608                           	
  7609                           i1l2337:	
  7610  06FA                     	movlw	01h
  7611  06FA  3001               u253_25:
  7612  06FB                     	clrc
  7613  06FB  1003               	rrf	(___xxtofl@arg+3),f
  7614  06FC  0CFD               	rrf	(___xxtofl@arg+2),f
  7615  06FD  0CFC               	rrf	(___xxtofl@arg+1),f
  7616  06FE  0CFB               	rrf	(___xxtofl@arg),f
  7617  06FF  0CFA               	addlw	-1
  7618  0700  3EFF               	skipz
  7619  0701  1D03               	goto	u253_25
  7620  0702  2EFB               
  7621                           	line	32
  7622                           	
  7623                           i1l890:	
  7624  0703                     	line	28
  7625                           	movlw	high highword(0FF000000h)
  7626  0703  30FF               	andwf	(___xxtofl@arg+3),w
  7627  0704  057D               	btfss	status,2
  7628  0705  1D03               	goto	u254_21
  7629  0706  2F08               	goto	u254_20
  7630  0707  2F09               u254_21:
  7631  0708                     	goto	i1l2333
  7632  0708  2EE8               u254_20:
  7633  0709                     	goto	i1l2341
  7634  0709  2F17               	
  7635                           i1l892:	
  7636  070A                     	line	33
  7637                           	goto	i1l2341
  7638  070A  2F17               	
  7639                           i1l894:	
  7640  070B                     	line	34
  7641                           	
  7642                           i1l2339:	
  7643  070B                     	movlw	01h
  7644  070B  3001               	subwf	(___xxtofl@exp),f
  7645  070C  02F9               	line	35
  7646                           	movlw	01h
  7647  070D  3001               	movwf	(??___xxtofl+0)+0
  7648  070E  00F4               u255_25:
  7649  070F                     	clrc
  7650  070F  1003               	rlf	(___xxtofl@arg),f
  7651  0710  0DFA               	rlf	(___xxtofl@arg+1),f
  7652  0711  0DFB               	rlf	(___xxtofl@arg+2),f
  7653  0712  0DFC               	rlf	(___xxtofl@arg+3),f
  7654  0713  0DFD               	decfsz	(??___xxtofl+0)+0
  7655  0714  0BF4               	goto	u255_25
  7656  0715  2F0F               	goto	i1l2341
  7657  0716  2F17               	line	36
  7658                           	
  7659                           i1l893:	
  7660  0717                     	line	33
  7661                           	
  7662                           i1l2341:	
  7663  0717                     	btfsc	(___xxtofl@arg+2),(23)&7
  7664  0717  1BFC               	goto	u256_21
  7665  0718  2F1A               	goto	u256_20
  7666  0719  2F1B               u256_21:
  7667  071A                     	goto	i1l897
  7668  071A  2F22               u256_20:
  7669  071B                     	
  7670                           i1l2343:	
  7671  071B                     	movlw	low(02h)
  7672  071B  3002               	subwf	(___xxtofl@exp),w
  7673  071C  0279               	skipnc
  7674  071D  1803               	goto	u257_21
  7675  071E  2F20               	goto	u257_20
  7676  071F  2F21               u257_21:
  7677  0720                     	goto	i1l2339
  7678  0720  2F0B               u257_20:
  7679  0721                     	goto	i1l897
  7680  0721  2F22               	
  7681                           i1l896:	
  7682  0722                     	
  7683                           i1l897:	
  7684  0722                     	line	37
  7685                           	btfsc	(___xxtofl@exp),(0)&7
  7686  0722  1879               	goto	u258_21
  7687  0723  2F25               	goto	u258_20
  7688  0724  2F26               u258_21:
  7689  0725                     	goto	i1l898
  7690  0725  2F2E               u258_20:
  7691  0726                     	line	38
  7692                           	
  7693                           i1l2345:	
  7694  0726                     	movlw	0FFh
  7695  0726  30FF               	andwf	(___xxtofl@arg),f
  7696  0727  05FA               	movlw	0FFh
  7697  0728  30FF               	andwf	(___xxtofl@arg+1),f
  7698  0729  05FB               	movlw	07Fh
  7699  072A  307F               	andwf	(___xxtofl@arg+2),f
  7700  072B  05FC               	movlw	0FFh
  7701  072C  30FF               	andwf	(___xxtofl@arg+3),f
  7702  072D  05FD               	
  7703                           i1l898:	
  7704  072E                     	line	39
  7705                           	clrc
  7706  072E  1003               	rrf	(___xxtofl@exp),f
  7707  072F  0CF9               
  7708                           	line	40
  7709                           	
  7710                           i1l2347:	
  7711  0730                     	movf	(___xxtofl@exp),w
  7712  0730  0879               	movwf	(??___xxtofl+0)+0
  7713  0731  00F4               	clrf	(??___xxtofl+0)+0+1
  7714  0732  01F5               	clrf	(??___xxtofl+0)+0+2
  7715  0733  01F6               	clrf	(??___xxtofl+0)+0+3
  7716  0734  01F7               	movlw	018h
  7717  0735  3018               u259_25:
  7718  0736                     	clrc
  7719  0736  1003               	rlf	(??___xxtofl+0)+0,f
  7720  0737  0DF4               	rlf	(??___xxtofl+0)+1,f
  7721  0738  0DF5               	rlf	(??___xxtofl+0)+2,f
  7722  0739  0DF6               	rlf	(??___xxtofl+0)+3,f
  7723  073A  0DF7               u259_20:
  7724  073B                     	addlw	-1
  7725  073B  3EFF               	skipz
  7726  073C  1D03               	goto	u259_25
  7727  073D  2F36               	movf	0+(??___xxtofl+0)+0,w
  7728  073E  0874               	iorwf	(___xxtofl@arg),f
  7729  073F  04FA               	movf	1+(??___xxtofl+0)+0,w
  7730  0740  0875               	iorwf	(___xxtofl@arg+1),f
  7731  0741  04FB               	movf	2+(??___xxtofl+0)+0,w
  7732  0742  0876               	iorwf	(___xxtofl@arg+2),f
  7733  0743  04FC               	movf	3+(??___xxtofl+0)+0,w
  7734  0744  0877               	iorwf	(___xxtofl@arg+3),f
  7735  0745  04FD               	line	41
  7736                           	
  7737                           i1l2349:	
  7738  0746                     	movf	((___xxtofl@sign)),w
  7739  0746  0878               	btfsc	status,2
  7740  0747  1903               	goto	u260_21
  7741  0748  2F4A               	goto	u260_20
  7742  0749  2F4B               u260_21:
  7743  074A                     	goto	i1l2355
  7744  074A  2F51               u260_20:
  7745  074B                     	
  7746                           i1l2351:	
  7747  074B                     	btfss	(___xxtofl@val+3),7
  7748  074B  1FF3               	goto	u261_21
  7749  074C  2F4E               	goto	u261_20
  7750  074D  2F4F               u261_21:
  7751  074E                     	goto	i1l2355
  7752  074E  2F51               u261_20:
  7753  074F                     	line	42
  7754                           	
  7755                           i1l2353:	
  7756  074F                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  7757  074F  17FD               	goto	i1l2355
  7758  0750  2F51               	
  7759                           i1l899:	
  7760  0751                     	line	43
  7761                           	
  7762                           i1l2355:	
  7763  0751                     	movf	(___xxtofl@arg+3),w
  7764  0751  087D               	movwf	(?___xxtofl+3)
  7765  0752  00F3               	movf	(___xxtofl@arg+2),w
  7766  0753  087C               	movwf	(?___xxtofl+2)
  7767  0754  00F2               	movf	(___xxtofl@arg+1),w
  7768  0755  087B               	movwf	(?___xxtofl+1)
  7769  0756  00F1               	movf	(___xxtofl@arg),w
  7770  0757  087A               	movwf	(?___xxtofl)
  7771  0758  00F0               
  7772                           	goto	i1l886
  7773  0759  2F5A               	
  7774                           i1l2357:	
  7775  075A                     	line	44
  7776                           	
  7777                           i1l886:	
  7778  075A                     	return
  7779  075A  0008               	opt stack 0
  7780                           GLOBAL	__end_of___xxtofl
  7781                           	__end_of___xxtofl:
  7782  075B                     	signat	___xxtofl,8316
  7783                           	global	___fltol
  7784                           
  7785 ;; *************** function ___fltol *****************
  7786 ;; Defined at:
  7787 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;  f1              4   24[BANK0 ] unsigned char 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  exp1            1   34[BANK0 ] unsigned char 
  7792 ;;  sign1           1   33[BANK0 ] unsigned char 
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  4   24[BANK0 ] long 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7802 ;;      Params:         0       4       0       0       0
  7803 ;;      Locals:         0       2       0       0       0
  7804 ;;      Temps:          0       5       0       0       0
  7805 ;;      Totals:         0      11       0       0       0
  7806 ;;Total ram usage:       11 bytes
  7807 ;; Hardware stack levels used:    1
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_is_deadzone
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           psect	text27,local,class=CODE,delta=2,merge=1,group=1
  7815                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  7816                           	line	43
  7817                           global __ptext27
  7818                           __ptext27:	;psect for function ___fltol
  7819  075B                     psect	text27
  7820                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  7821                           	line	43
  7822                           	global	__size_of___fltol
  7823                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  7824  009C                     	
  7825                           ___fltol:	
  7826  075B                     ;incstack = 0
  7827 ;; hardware stack exceeded
  7828                           	opt	stack 0
  7829                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7830                           	line	47
  7831                           	
  7832                           i1l2085:	
  7833  075B                     	bcf	status, 5	;RP0=0, select bank0
  7834  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  7835  075C  1303               	movf	(___fltol@f1),w
  7836  075D  0838               	movwf	(??___fltol+0)+0
  7837  075E  00BC               	movf	(___fltol@f1+1),w
  7838  075F  0839               	movwf	((??___fltol+0)+0+1)
  7839  0760  00BD               	movf	(___fltol@f1+2),w
  7840  0761  083A               	movwf	((??___fltol+0)+0+2)
  7841  0762  00BE               	movf	(___fltol@f1+3),w
  7842  0763  083B               	movwf	((??___fltol+0)+0+3)
  7843  0764  00BF               	clrc
  7844  0765  1003               	rlf	(??___fltol+0)+2,w
  7845  0766  0D3E               	rlf	(??___fltol+0)+3,w
  7846  0767  0D3F               	movwf	(??___fltol+4)+0
  7847  0768  00C0               	movf	(??___fltol+4)+0,w
  7848  0769  0840               	movwf	(___fltol@exp1)
  7849  076A  00C2               	movf	(((___fltol@exp1))),w
  7850  076B  0842               	btfss	status,2
  7851  076C  1D03               	goto	u192_21
  7852  076D  2F6F               	goto	u192_20
  7853  076E  2F70               u192_21:
  7854  076F                     	goto	i1l2091
  7855  076F  2F7A               u192_20:
  7856  0770                     	line	48
  7857                           	
  7858                           i1l2087:	
  7859  0770                     	movlw	high highword(0)
  7860  0770  3000               	movwf	(?___fltol+3)
  7861  0771  00BB               	movlw	low highword(0)
  7862  0772  3000               	movwf	(?___fltol+2)
  7863  0773  00BA               	movlw	high(0)
  7864  0774  3000               	movwf	(?___fltol+1)
  7865  0775  00B9               	movlw	low(0)
  7866  0776  3000               	movwf	(?___fltol)
  7867  0777  00B8               
  7868                           	goto	i1l662
  7869  0778  2FF6               	
  7870                           i1l2089:	
  7871  0779                     	goto	i1l662
  7872  0779  2FF6               	
  7873                           i1l661:	
  7874  077A                     	line	49
  7875                           	
  7876                           i1l2091:	
  7877  077A                     	movf	(___fltol@f1),w
  7878  077A  0838               	movwf	(??___fltol+0)+0
  7879  077B  00BC               	movf	(___fltol@f1+1),w
  7880  077C  0839               	movwf	((??___fltol+0)+0+1)
  7881  077D  00BD               	movf	(___fltol@f1+2),w
  7882  077E  083A               	movwf	((??___fltol+0)+0+2)
  7883  077F  00BE               	movf	(___fltol@f1+3),w
  7884  0780  083B               	movwf	((??___fltol+0)+0+3)
  7885  0781  00BF               	movlw	01Fh
  7886  0782  301F               u193_25:
  7887  0783                     	clrc
  7888  0783  1003               	rrf	(??___fltol+0)+3,f
  7889  0784  0CBF               	rrf	(??___fltol+0)+2,f
  7890  0785  0CBE               	rrf	(??___fltol+0)+1,f
  7891  0786  0CBD               	rrf	(??___fltol+0)+0,f
  7892  0787  0CBC               u193_20:
  7893  0788                     	addlw	-1
  7894  0788  3EFF               	skipz
  7895  0789  1D03               	goto	u193_25
  7896  078A  2F83               	movf	0+(??___fltol+0)+0,w
  7897  078B  083C               	movwf	(??___fltol+4)+0
  7898  078C  00C0               	movf	(??___fltol+4)+0,w
  7899  078D  0840               	movwf	(___fltol@sign1)
  7900  078E  00C1               	line	50
  7901                           	
  7902                           i1l2093:	
  7903  078F                     	bsf	(___fltol@f1)+(23/8),(23)&7
  7904  078F  17BA               	line	51
  7905                           	
  7906                           i1l2095:	
  7907  0790                     	movlw	0FFh
  7908  0790  30FF               	andwf	(___fltol@f1),f
  7909  0791  05B8               	movlw	0FFh
  7910  0792  30FF               	andwf	(___fltol@f1+1),f
  7911  0793  05B9               	movlw	0FFh
  7912  0794  30FF               	andwf	(___fltol@f1+2),f
  7913  0795  05BA               	movlw	0
  7914  0796  3000               	andwf	(___fltol@f1+3),f
  7915  0797  05BB               	line	52
  7916                           	
  7917                           i1l2097:	
  7918  0798                     	movlw	096h
  7919  0798  3096               	subwf	(___fltol@exp1),f
  7920  0799  02C2               	line	53
  7921                           	
  7922                           i1l2099:	
  7923  079A                     	btfss	(___fltol@exp1),7
  7924  079A  1FC2               	goto	u194_21
  7925  079B  2F9D               	goto	u194_20
  7926  079C  2F9E               u194_21:
  7927  079D                     	goto	i1l2109
  7928  079D  2FC3               u194_20:
  7929  079E                     	line	54
  7930                           	
  7931                           i1l2101:	
  7932  079E                     	movf	(___fltol@exp1),w
  7933  079E  0842               	xorlw	80h
  7934  079F  3A80               	addlw	-((-23)^80h)
  7935  07A0  3E97               	skipnc
  7936  07A1  1803               	goto	u195_21
  7937  07A2  2FA4               	goto	u195_20
  7938  07A3  2FA5               u195_21:
  7939  07A4                     	goto	i1l2107
  7940  07A4  2FB0               u195_20:
  7941  07A5                     	line	55
  7942                           	
  7943                           i1l2103:	
  7944  07A5                     	movlw	high highword(0)
  7945  07A5  3000               	movwf	(?___fltol+3)
  7946  07A6  00BB               	movlw	low highword(0)
  7947  07A7  3000               	movwf	(?___fltol+2)
  7948  07A8  00BA               	movlw	high(0)
  7949  07A9  3000               	movwf	(?___fltol+1)
  7950  07AA  00B9               	movlw	low(0)
  7951  07AB  3000               	movwf	(?___fltol)
  7952  07AC  00B8               
  7953                           	goto	i1l662
  7954  07AD  2FF6               	
  7955                           i1l2105:	
  7956  07AE                     	goto	i1l662
  7957  07AE  2FF6               	
  7958                           i1l664:	
  7959  07AF                     	goto	i1l2107
  7960  07AF  2FB0               	line	56
  7961                           	
  7962                           i1l665:	
  7963  07B0                     	line	57
  7964                           	
  7965                           i1l2107:	
  7966  07B0                     	movlw	01h
  7967  07B0  3001               u196_25:
  7968  07B1                     	clrc
  7969  07B1  1003               	rrf	(___fltol@f1+3),f
  7970  07B2  0CBB               	rrf	(___fltol@f1+2),f
  7971  07B3  0CBA               	rrf	(___fltol@f1+1),f
  7972  07B4  0CB9               	rrf	(___fltol@f1),f
  7973  07B5  0CB8               	addlw	-1
  7974  07B6  3EFF               	skipz
  7975  07B7  1D03               	goto	u196_25
  7976  07B8  2FB1               
  7977                           	line	58
  7978                           	movlw	low(01h)
  7979  07B9  3001               	movwf	(??___fltol+0)+0
  7980  07BA  00BC               	movf	(??___fltol+0)+0,w
  7981  07BB  083C               	addwf	(___fltol@exp1),f
  7982  07BC  07C2               	btfss	status,2
  7983  07BD  1D03               	goto	u197_21
  7984  07BE  2FC0               	goto	u197_20
  7985  07BF  2FC1               u197_21:
  7986  07C0                     	goto	i1l2107
  7987  07C0  2FB0               u197_20:
  7988  07C1                     	goto	i1l2117
  7989  07C1  2FE6               	
  7990                           i1l666:	
  7991  07C2                     	line	59
  7992                           	goto	i1l2117
  7993  07C2  2FE6               	
  7994                           i1l663:	
  7995  07C3                     	line	60
  7996                           	
  7997                           i1l2109:	
  7998  07C3                     	movlw	low(020h)
  7999  07C3  3020               	subwf	(___fltol@exp1),w
  8000  07C4  0242               	skipc
  8001  07C5  1C03               	goto	u198_21
  8002  07C6  2FC8               	goto	u198_20
  8003  07C7  2FC9               u198_21:
  8004  07C8                     	goto	i1l669
  8005  07C8  2FDF               u198_20:
  8006  07C9                     	line	61
  8007                           	
  8008                           i1l2111:	
  8009  07C9                     	movlw	high highword(0)
  8010  07C9  3000               	movwf	(?___fltol+3)
  8011  07CA  00BB               	movlw	low highword(0)
  8012  07CB  3000               	movwf	(?___fltol+2)
  8013  07CC  00BA               	movlw	high(0)
  8014  07CD  3000               	movwf	(?___fltol+1)
  8015  07CE  00B9               	movlw	low(0)
  8016  07CF  3000               	movwf	(?___fltol)
  8017  07D0  00B8               
  8018                           	goto	i1l662
  8019  07D1  2FF6               	
  8020                           i1l2113:	
  8021  07D2                     	goto	i1l662
  8022  07D2  2FF6               	
  8023                           i1l668:	
  8024  07D3                     	line	62
  8025                           	goto	i1l669
  8026  07D3  2FDF               	
  8027                           i1l670:	
  8028  07D4                     	line	63
  8029                           	
  8030                           i1l2115:	
  8031  07D4                     	movlw	01h
  8032  07D4  3001               	movwf	(??___fltol+0)+0
  8033  07D5  00BC               u199_25:
  8034  07D6                     	clrc
  8035  07D6  1003               	rlf	(___fltol@f1),f
  8036  07D7  0DB8               	rlf	(___fltol@f1+1),f
  8037  07D8  0DB9               	rlf	(___fltol@f1+2),f
  8038  07D9  0DBA               	rlf	(___fltol@f1+3),f
  8039  07DA  0DBB               	decfsz	(??___fltol+0)+0
  8040  07DB  0BBC               	goto	u199_25
  8041  07DC  2FD6               	line	64
  8042                           	movlw	01h
  8043  07DD  3001               	subwf	(___fltol@exp1),f
  8044  07DE  02C2               	line	65
  8045                           	
  8046                           i1l669:	
  8047  07DF                     	line	62
  8048                           	movf	((___fltol@exp1)),w
  8049  07DF  0842               	btfss	status,2
  8050  07E0  1D03               	goto	u200_21
  8051  07E1  2FE3               	goto	u200_20
  8052  07E2  2FE4               u200_21:
  8053  07E3                     	goto	i1l2115
  8054  07E3  2FD4               u200_20:
  8055  07E4                     	goto	i1l2117
  8056  07E4  2FE6               	
  8057                           i1l671:	
  8058  07E5                     	goto	i1l2117
  8059  07E5  2FE6               	line	66
  8060                           	
  8061                           i1l667:	
  8062  07E6                     	line	67
  8063                           	
  8064                           i1l2117:	
  8065  07E6                     	movf	((___fltol@sign1)),w
  8066  07E6  0841               	btfsc	status,2
  8067  07E7  1903               	goto	u201_21
  8068  07E8  2FEA               	goto	u201_20
  8069  07E9  2FEB               u201_21:
  8070  07EA                     	goto	i1l672
  8071  07EA  2FF6               u201_20:
  8072  07EB                     	line	68
  8073                           	
  8074                           i1l2119:	
  8075  07EB                     	comf	(___fltol@f1),f
  8076  07EB  09B8               	comf	(___fltol@f1+1),f
  8077  07EC  09B9               	comf	(___fltol@f1+2),f
  8078  07ED  09BA               	comf	(___fltol@f1+3),f
  8079  07EE  09BB               	incf	(___fltol@f1),f
  8080  07EF  0AB8               	skipnz
  8081  07F0  1903               	incf	(___fltol@f1+1),f
  8082  07F1  0AB9               	skipnz
  8083  07F2  1903               	incf	(___fltol@f1+2),f
  8084  07F3  0ABA               	skipnz
  8085  07F4  1903               	incf	(___fltol@f1+3),f
  8086  07F5  0ABB               	
  8087                           i1l672:	
  8088  07F6                     	line	69
  8089                           	line	70
  8090                           	
  8091                           i1l662:	
  8092  07F6                     	return
  8093  07F6  0008               	opt stack 0
  8094                           GLOBAL	__end_of___fltol
  8095                           	__end_of___fltol:
  8096  07F7                     	signat	___fltol,4220
  8097                           	global	___fladd
  8098                           
  8099 ;; *************** function ___fladd *****************
  8100 ;; Defined at:
  8101 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  b               4    0[BANK0 ] long 
  8104 ;;  a               4    4[BANK0 ] long 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  grs             1   23[BANK0 ] unsigned char 
  8107 ;;  bexp            1   22[BANK0 ] unsigned char 
  8108 ;;  aexp            1   21[BANK0 ] unsigned char 
  8109 ;;  signs           1   20[BANK0 ] unsigned char 
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  4    0[BANK0 ] unsigned char 
  8112 ;; Registers used:
  8113 ;;		wreg, status,2, status,0, btemp+1
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8119 ;;      Params:         0       8       0       0       0
  8120 ;;      Locals:         0       4       0       0       0
  8121 ;;      Temps:          0      12       0       0       0
  8122 ;;      Totals:         0      24       0       0       0
  8123 ;;Total ram usage:       24 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_is_deadzone
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           psect	text28,local,class=CODE,delta=2,merge=1,group=1
  8132                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8133                           	line	10
  8134                           global __ptext28
  8135                           __ptext28:	;psect for function ___fladd
  8136  0030                     psect	text28
  8137                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8138                           	line	10
  8139                           	global	__size_of___fladd
  8140                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8141  02BC                     	
  8142                           ___fladd:	
  8143  0030                     ;incstack = 0
  8144 ;; hardware stack exceeded
  8145                           	opt	stack 0
  8146                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8147                           	line	21
  8148                           	
  8149                           i1l2121:	
  8150  0030                     	bcf	status, 5	;RP0=0, select bank0
  8151  0030  1283               	bcf	status, 6	;RP1=0, select bank0
  8152  0031  1303               	movf	0+(___fladd@b)+03h,w
  8153  0032  0823               	andlw	080h
  8154  0033  3980               	movwf	(??___fladd+0)+0
  8155  0034  00A8               	movf	(??___fladd+0)+0,w
  8156  0035  0828               	movwf	(___fladd@signs)
  8157  0036  00B4               	line	22
  8158                           	
  8159                           i1l2123:	
  8160  0037                     	movf	0+(___fladd@b)+03h,w
  8161  0037  0823               	movwf	(??___fladd+0)+0
  8162  0038  00A8               	addwf	(??___fladd+0)+0,w
  8163  0039  0728               	movwf	(??___fladd+1)+0
  8164  003A  00A9               	movf	(??___fladd+1)+0,w
  8165  003B  0829               	movwf	(___fladd@bexp)
  8166  003C  00B6               	line	23
  8167                           	
  8168                           i1l2125:	
  8169  003D                     	btfss	0+(___fladd@b)+02h,(7)&7
  8170  003D  1FA2               	goto	u202_21
  8171  003E  2840               	goto	u202_20
  8172  003F  2841               u202_21:
  8173  0040                     	goto	i1l2129
  8174  0040  2843               u202_20:
  8175  0041                     	line	24
  8176                           	
  8177                           i1l2127:	
  8178  0041                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8179  0041  1436               	goto	i1l2129
  8180  0042  2843               	line	25
  8181                           	
  8182                           i1l761:	
  8183  0043                     	line	28
  8184                           	
  8185                           i1l2129:	
  8186  0043                     	movf	((___fladd@bexp)),w
  8187  0043  0836               	btfsc	status,2
  8188  0044  1903               	goto	u203_21
  8189  0045  2847               	goto	u203_20
  8190  0046  2848               u203_21:
  8191  0047                     	goto	i1l2139
  8192  0047  2859               u203_20:
  8193  0048                     	line	30
  8194                           	
  8195                           i1l2131:	
  8196  0048                     		incf	((___fladd@bexp)),w
  8197  0048  0A36               	btfss	status,2
  8198  0049  1D03               	goto	u204_21
  8199  004A  284C               	goto	u204_20
  8200  004B  284D               u204_21:
  8201  004C                     	goto	i1l2135
  8202  004C  2856               u204_20:
  8203  004D                     	line	32
  8204                           	
  8205                           i1l2133:	
  8206  004D                     	movlw	0x0
  8207  004D  3000               	movwf	(___fladd@b+3)
  8208  004E  00A3               	movlw	0x0
  8209  004F  3000               	movwf	(___fladd@b+2)
  8210  0050  00A2               	movlw	0x0
  8211  0051  3000               	movwf	(___fladd@b+1)
  8212  0052  00A1               	movlw	0x0
  8213  0053  3000               	movwf	(___fladd@b)
  8214  0054  00A0               
  8215                           	goto	i1l2135
  8216  0055  2856               	line	33
  8217                           	
  8218                           i1l763:	
  8219  0056                     	line	35
  8220                           	
  8221                           i1l2135:	
  8222  0056                     	bsf	(___fladd@b)+(23/8),(23)&7
  8223  0056  17A2               	line	37
  8224                           	
  8225                           i1l2137:	
  8226  0057                     	clrf	0+(___fladd@b)+03h
  8227  0057  01A3               	line	38
  8228                           	goto	i1l2141
  8229  0058  2862               	line	39
  8230                           	
  8231                           i1l762:	
  8232  0059                     	line	41
  8233                           	
  8234                           i1l2139:	
  8235  0059                     	movlw	0x0
  8236  0059  3000               	movwf	(___fladd@b+3)
  8237  005A  00A3               	movlw	0x0
  8238  005B  3000               	movwf	(___fladd@b+2)
  8239  005C  00A2               	movlw	0x0
  8240  005D  3000               	movwf	(___fladd@b+1)
  8241  005E  00A1               	movlw	0x0
  8242  005F  3000               	movwf	(___fladd@b)
  8243  0060  00A0               
  8244                           	goto	i1l2141
  8245  0061  2862               	line	42
  8246                           	
  8247                           i1l764:	
  8248  0062                     	line	44
  8249                           	
  8250                           i1l2141:	
  8251  0062                     	movf	0+(___fladd@a)+03h,w
  8252  0062  0827               	andlw	080h
  8253  0063  3980               	movwf	(??___fladd+0)+0
  8254  0064  00A8               	movf	(??___fladd+0)+0,w
  8255  0065  0828               	movwf	(___fladd@aexp)
  8256  0066  00B5               	line	46
  8257                           	
  8258                           i1l2143:	
  8259  0067                     	movf	(___fladd@aexp),w
  8260  0067  0835               	xorwf	(___fladd@signs),w
  8261  0068  0634               	skipnz
  8262  0069  1903               	goto	u205_21
  8263  006A  286C               	goto	u205_20
  8264  006B  286D               u205_21:
  8265  006C                     	goto	i1l2147
  8266  006C  286F               u205_20:
  8267  006D                     	line	47
  8268                           	
  8269                           i1l2145:	
  8270  006D                     	bsf	(___fladd@signs)+(6/8),(6)&7
  8271  006D  1734               	goto	i1l2147
  8272  006E  286F               	line	48
  8273                           	
  8274                           i1l765:	
  8275  006F                     	line	49
  8276                           	
  8277                           i1l2147:	
  8278  006F                     	movf	0+(___fladd@a)+03h,w
  8279  006F  0827               	movwf	(??___fladd+0)+0
  8280  0070  00A8               	addwf	(??___fladd+0)+0,w
  8281  0071  0728               	movwf	(??___fladd+1)+0
  8282  0072  00A9               	movf	(??___fladd+1)+0,w
  8283  0073  0829               	movwf	(___fladd@aexp)
  8284  0074  00B5               	line	50
  8285                           	
  8286                           i1l2149:	
  8287  0075                     	btfss	0+(___fladd@a)+02h,(7)&7
  8288  0075  1FA6               	goto	u206_21
  8289  0076  2878               	goto	u206_20
  8290  0077  2879               u206_21:
  8291  0078                     	goto	i1l2153
  8292  0078  287B               u206_20:
  8293  0079                     	line	51
  8294                           	
  8295                           i1l2151:	
  8296  0079                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  8297  0079  1435               	goto	i1l2153
  8298  007A  287B               	line	52
  8299                           	
  8300                           i1l766:	
  8301  007B                     	line	55
  8302                           	
  8303                           i1l2153:	
  8304  007B                     	movf	((___fladd@aexp)),w
  8305  007B  0835               	btfsc	status,2
  8306  007C  1903               	goto	u207_21
  8307  007D  287F               	goto	u207_20
  8308  007E  2880               u207_21:
  8309  007F                     	goto	i1l2163
  8310  007F  2891               u207_20:
  8311  0080                     	line	57
  8312                           	
  8313                           i1l2155:	
  8314  0080                     		incf	((___fladd@aexp)),w
  8315  0080  0A35               	btfss	status,2
  8316  0081  1D03               	goto	u208_21
  8317  0082  2884               	goto	u208_20
  8318  0083  2885               u208_21:
  8319  0084                     	goto	i1l2159
  8320  0084  288E               u208_20:
  8321  0085                     	line	59
  8322                           	
  8323                           i1l2157:	
  8324  0085                     	movlw	0x0
  8325  0085  3000               	movwf	(___fladd@a+3)
  8326  0086  00A7               	movlw	0x0
  8327  0087  3000               	movwf	(___fladd@a+2)
  8328  0088  00A6               	movlw	0x0
  8329  0089  3000               	movwf	(___fladd@a+1)
  8330  008A  00A5               	movlw	0x0
  8331  008B  3000               	movwf	(___fladd@a)
  8332  008C  00A4               
  8333                           	goto	i1l2159
  8334  008D  288E               	line	60
  8335                           	
  8336                           i1l768:	
  8337  008E                     	line	62
  8338                           	
  8339                           i1l2159:	
  8340  008E                     	bsf	(___fladd@a)+(23/8),(23)&7
  8341  008E  17A6               	line	64
  8342                           	
  8343                           i1l2161:	
  8344  008F                     	clrf	0+(___fladd@a)+03h
  8345  008F  01A7               	line	65
  8346                           	goto	i1l769
  8347  0090  2899               	line	66
  8348                           	
  8349                           i1l767:	
  8350  0091                     	line	68
  8351                           	
  8352                           i1l2163:	
  8353  0091                     	movlw	0x0
  8354  0091  3000               	movwf	(___fladd@a+3)
  8355  0092  00A7               	movlw	0x0
  8356  0093  3000               	movwf	(___fladd@a+2)
  8357  0094  00A6               	movlw	0x0
  8358  0095  3000               	movwf	(___fladd@a+1)
  8359  0096  00A5               	movlw	0x0
  8360  0097  3000               	movwf	(___fladd@a)
  8361  0098  00A4               
  8362                           	line	69
  8363                           	
  8364                           i1l769:	
  8365  0099                     	line	75
  8366                           	movf	(___fladd@bexp),w
  8367  0099  0836               	subwf	(___fladd@aexp),w
  8368  009A  0235               	skipnc
  8369  009B  1803               	goto	u209_21
  8370  009C  289E               	goto	u209_20
  8371  009D  289F               u209_21:
  8372  009E                     	goto	i1l2199
  8373  009E  28E5               u209_20:
  8374  009F                     	line	77
  8375                           	
  8376                           i1l2165:	
  8377  009F                     	btfss	(___fladd@signs),(6)&7
  8378  009F  1F34               	goto	u210_21
  8379  00A0  28A2               	goto	u210_20
  8380  00A1  28A3               u210_21:
  8381  00A2                     	goto	i1l2169
  8382  00A2  28A8               u210_20:
  8383  00A3                     	line	78
  8384                           	
  8385                           i1l2167:	
  8386  00A3                     	movlw	low(080h)
  8387  00A3  3080               	movwf	(??___fladd+0)+0
  8388  00A4  00A8               	movf	(??___fladd+0)+0,w
  8389  00A5  0828               	xorwf	(___fladd@signs),f
  8390  00A6  06B4               	goto	i1l2169
  8391  00A7  28A8               	line	79
  8392                           	
  8393                           i1l771:	
  8394  00A8                     	line	81
  8395                           	
  8396                           i1l2169:	
  8397  00A8                     	movf	(___fladd@bexp),w
  8398  00A8  0836               	movwf	(??___fladd+0)+0
  8399  00A9  00A8               	movf	(??___fladd+0)+0,w
  8400  00AA  0828               	movwf	(___fladd@grs)
  8401  00AB  00B7               	line	82
  8402                           	
  8403                           i1l2171:	
  8404  00AC                     	movf	(___fladd@aexp),w
  8405  00AC  0835               	movwf	(??___fladd+0)+0
  8406  00AD  00A8               	movf	(??___fladd+0)+0,w
  8407  00AE  0828               	movwf	(___fladd@bexp)
  8408  00AF  00B6               	line	83
  8409                           	
  8410                           i1l2173:	
  8411  00B0                     	movf	(___fladd@grs),w
  8412  00B0  0837               	movwf	(??___fladd+0)+0
  8413  00B1  00A8               	movf	(??___fladd+0)+0,w
  8414  00B2  0828               	movwf	(___fladd@aexp)
  8415  00B3  00B5               	line	84
  8416                           	
  8417                           i1l2175:	
  8418  00B4                     	movf	(___fladd@b),w
  8419  00B4  0820               	movwf	(??___fladd+0)+0
  8420  00B5  00A8               	movf	(??___fladd+0)+0,w
  8421  00B6  0828               	movwf	(___fladd@grs)
  8422  00B7  00B7               	line	85
  8423                           	
  8424                           i1l2177:	
  8425  00B8                     	movf	(___fladd@a),w
  8426  00B8  0824               	movwf	(??___fladd+0)+0
  8427  00B9  00A8               	movf	(??___fladd+0)+0,w
  8428  00BA  0828               	movwf	(___fladd@b)
  8429  00BB  00A0               	line	86
  8430                           	
  8431                           i1l2179:	
  8432  00BC                     	movf	(___fladd@grs),w
  8433  00BC  0837               	movwf	(??___fladd+0)+0
  8434  00BD  00A8               	movf	(??___fladd+0)+0,w
  8435  00BE  0828               	movwf	(___fladd@a)
  8436  00BF  00A4               	line	87
  8437                           	
  8438                           i1l2181:	
  8439  00C0                     	movf	0+(___fladd@b)+01h,w
  8440  00C0  0821               	movwf	(??___fladd+0)+0
  8441  00C1  00A8               	movf	(??___fladd+0)+0,w
  8442  00C2  0828               	movwf	(___fladd@grs)
  8443  00C3  00B7               	line	88
  8444                           	
  8445                           i1l2183:	
  8446  00C4                     	movf	0+(___fladd@a)+01h,w
  8447  00C4  0825               	movwf	(??___fladd+0)+0
  8448  00C5  00A8               	movf	(??___fladd+0)+0,w
  8449  00C6  0828               	movwf	0+(___fladd@b)+01h
  8450  00C7  00A1               	line	89
  8451                           	
  8452                           i1l2185:	
  8453  00C8                     	movf	(___fladd@grs),w
  8454  00C8  0837               	movwf	(??___fladd+0)+0
  8455  00C9  00A8               	movf	(??___fladd+0)+0,w
  8456  00CA  0828               	movwf	0+(___fladd@a)+01h
  8457  00CB  00A5               	line	90
  8458                           	
  8459                           i1l2187:	
  8460  00CC                     	movf	0+(___fladd@b)+02h,w
  8461  00CC  0822               	movwf	(??___fladd+0)+0
  8462  00CD  00A8               	movf	(??___fladd+0)+0,w
  8463  00CE  0828               	movwf	(___fladd@grs)
  8464  00CF  00B7               	line	91
  8465                           	
  8466                           i1l2189:	
  8467  00D0                     	movf	0+(___fladd@a)+02h,w
  8468  00D0  0826               	movwf	(??___fladd+0)+0
  8469  00D1  00A8               	movf	(??___fladd+0)+0,w
  8470  00D2  0828               	movwf	0+(___fladd@b)+02h
  8471  00D3  00A2               	line	92
  8472                           	
  8473                           i1l2191:	
  8474  00D4                     	movf	(___fladd@grs),w
  8475  00D4  0837               	movwf	(??___fladd+0)+0
  8476  00D5  00A8               	movf	(??___fladd+0)+0,w
  8477  00D6  0828               	movwf	0+(___fladd@a)+02h
  8478  00D7  00A6               	line	93
  8479                           	
  8480                           i1l2193:	
  8481  00D8                     	movf	0+(___fladd@b)+03h,w
  8482  00D8  0823               	movwf	(??___fladd+0)+0
  8483  00D9  00A8               	movf	(??___fladd+0)+0,w
  8484  00DA  0828               	movwf	(___fladd@grs)
  8485  00DB  00B7               	line	94
  8486                           	
  8487                           i1l2195:	
  8488  00DC                     	movf	0+(___fladd@a)+03h,w
  8489  00DC  0827               	movwf	(??___fladd+0)+0
  8490  00DD  00A8               	movf	(??___fladd+0)+0,w
  8491  00DE  0828               	movwf	0+(___fladd@b)+03h
  8492  00DF  00A3               	line	95
  8493                           	
  8494                           i1l2197:	
  8495  00E0                     	movf	(___fladd@grs),w
  8496  00E0  0837               	movwf	(??___fladd+0)+0
  8497  00E1  00A8               	movf	(??___fladd+0)+0,w
  8498  00E2  0828               	movwf	0+(___fladd@a)+03h
  8499  00E3  00A7               	goto	i1l2199
  8500  00E4  28E5               	line	96
  8501                           	
  8502                           i1l770:	
  8503  00E5                     	line	98
  8504                           	
  8505                           i1l2199:	
  8506  00E5                     	clrf	(___fladd@grs)
  8507  00E5  01B7               	line	100
  8508                           	
  8509                           i1l2201:	
  8510  00E6                     	movf	(___fladd@bexp),w
  8511  00E6  0836               	movwf	(??___fladd+0)+0
  8512  00E7  00A8               	clrf	(??___fladd+0)+0+1
  8513  00E8  01A9               	comf	(??___fladd+0)+0,f
  8514  00E9  09A8               	comf	(??___fladd+0)+1,f
  8515  00EA  09A9               	incf	(??___fladd+0)+0,f
  8516  00EB  0AA8               	skipnz
  8517  00EC  1903               	incf	(??___fladd+0)+1,f
  8518  00ED  0AA9               	movf	(___fladd@aexp),w
  8519  00EE  0835               	addwf	0+(??___fladd+0)+0,w
  8520  00EF  0728               	movwf	(??___fladd+2)+0
  8521  00F0  00AA               	movf	1+(??___fladd+0)+0,w
  8522  00F1  0829               	skipnc
  8523  00F2  1803               	incf	1+(??___fladd+0)+0,w
  8524  00F3  0A29               	movwf	((??___fladd+2)+0)+1
  8525  00F4  00AB               	movf	1+(??___fladd+2)+0,w
  8526  00F5  082B               	xorlw	80h
  8527  00F6  3A80               	movwf	btemp+1
  8528  00F7  00FF               	movlw	(0)^80h
  8529  00F8  3080               	subwf	btemp+1,w
  8530  00F9  027F               	skipz
  8531  00FA  1D03               	goto	u211_25
  8532  00FB  28FE               	movlw	01Ah
  8533  00FC  301A               	subwf	0+(??___fladd+2)+0,w
  8534  00FD  022A               u211_25:
  8535  00FE                     
  8536                           	skipc
  8537  00FE  1C03               	goto	u211_21
  8538  00FF  2901               	goto	u211_20
  8539  0100  2902               u211_21:
  8540  0101                     	goto	i1l2217
  8541  0101  2943               u211_20:
  8542  0102                     	line	101
  8543                           	
  8544                           i1l2203:	
  8545  0102                     	bcf	status, 5	;RP0=0, select bank0
  8546  0102  1283               	bcf	status, 6	;RP1=0, select bank0
  8547  0103  1303               	movf	(___fladd@b+3),w
  8548  0104  0823               	iorwf	(___fladd@b+2),w
  8549  0105  0422               	iorwf	(___fladd@b+1),w
  8550  0106  0421               	iorwf	(___fladd@b),w
  8551  0107  0420               	skipz
  8552  0108  1D03               	goto	u212_21
  8553  0109  290B               	goto	u212_20
  8554  010A  290D               u212_21:
  8555  010B                     	movlw	1
  8556  010B  3001               	goto	u213_20
  8557  010C  290E               u212_20:
  8558  010D                     	movlw	0
  8559  010D  3000               u213_20:
  8560  010E                     	movwf	(??___fladd+0)+0
  8561  010E  00A8               	movf	(??___fladd+0)+0,w
  8562  010F  0828               	movwf	(___fladd@grs)
  8563  0110  00B7               	line	102
  8564                           	movlw	high highword(0)
  8565  0111  3000               	movwf	(___fladd@b+3)
  8566  0112  00A3               	movlw	low highword(0)
  8567  0113  3000               	movwf	(___fladd@b+2)
  8568  0114  00A2               	movlw	high(0)
  8569  0115  3000               	movwf	(___fladd@b+1)
  8570  0116  00A1               	movlw	low(0)
  8571  0117  3000               	movwf	(___fladd@b)
  8572  0118  00A0               
  8573                           	line	103
  8574                           	movf	(___fladd@aexp),w
  8575  0119  0835               	movwf	(??___fladd+0)+0
  8576  011A  00A8               	movf	(??___fladd+0)+0,w
  8577  011B  0828               	movwf	(___fladd@bexp)
  8578  011C  00B6               	line	104
  8579                           	goto	i1l773
  8580  011D  294C               	line	105
  8581                           	
  8582                           i1l772:	
  8583  011E                     	line	106
  8584                           	goto	i1l2217
  8585  011E  2943               	
  8586                           i1l775:	
  8587  011F                     	line	109
  8588                           	btfss	(___fladd@grs),(0)&7
  8589  011F  1C37               	goto	u214_21
  8590  0120  2922               	goto	u214_20
  8591  0121  2923               u214_21:
  8592  0122                     	goto	i1l2207
  8593  0122  292C               u214_20:
  8594  0123                     	line	110
  8595                           	
  8596                           i1l2205:	
  8597  0123                     	movf	(___fladd@grs),w
  8598  0123  0837               	movwf	(??___fladd+0)+0
  8599  0124  00A8               	clrc
  8600  0125  1003               	rrf	(??___fladd+0)+0,w
  8601  0126  0C28               	iorlw	01h
  8602  0127  3801               	movwf	(??___fladd+1)+0
  8603  0128  00A9               	movf	(??___fladd+1)+0,w
  8604  0129  0829               	movwf	(___fladd@grs)
  8605  012A  00B7               	line	111
  8606                           	goto	i1l2209
  8607  012B  292F               	line	112
  8608                           	
  8609                           i1l776:	
  8610  012C                     	line	113
  8611                           	
  8612                           i1l2207:	
  8613  012C                     	clrc
  8614  012C  1003               	rrf	(___fladd@grs),f
  8615  012D  0CB7               
  8616                           	goto	i1l2209
  8617  012E  292F               	line	114
  8618                           	
  8619                           i1l777:	
  8620  012F                     	line	115
  8621                           	
  8622                           i1l2209:	
  8623  012F                     	btfss	(___fladd@b),(0)&7
  8624  012F  1C20               	goto	u215_21
  8625  0130  2932               	goto	u215_20
  8626  0131  2933               u215_21:
  8627  0132                     	goto	i1l2213
  8628  0132  2935               u215_20:
  8629  0133                     	line	116
  8630                           	
  8631                           i1l2211:	
  8632  0133                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8633  0133  17B7               	goto	i1l2213
  8634  0134  2935               	line	117
  8635                           	
  8636                           i1l778:	
  8637  0135                     	line	118
  8638                           	
  8639                           i1l2213:	
  8640  0135                     	movlw	01h
  8641  0135  3001               	movwf	(??___fladd+0)+0
  8642  0136  00A8               u216_25:
  8643  0137                     	rlf	(___fladd@b+3),w
  8644  0137  0D23               	rrf	(___fladd@b+3),f
  8645  0138  0CA3               	rrf	(___fladd@b+2),f
  8646  0139  0CA2               	rrf	(___fladd@b+1),f
  8647  013A  0CA1               	rrf	(___fladd@b),f
  8648  013B  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  8649  013C  0BA8               	goto	u216_25
  8650  013D  2937               
  8651                           	line	119
  8652                           	
  8653                           i1l2215:	
  8654  013E                     	movlw	low(01h)
  8655  013E  3001               	movwf	(??___fladd+0)+0
  8656  013F  00A8               	movf	(??___fladd+0)+0,w
  8657  0140  0828               	addwf	(___fladd@bexp),f
  8658  0141  07B6               	goto	i1l2217
  8659  0142  2943               	line	120
  8660                           	
  8661                           i1l774:	
  8662  0143                     	line	106
  8663                           	
  8664                           i1l2217:	
  8665  0143                     	bcf	status, 5	;RP0=0, select bank0
  8666  0143  1283               	bcf	status, 6	;RP1=0, select bank0
  8667  0144  1303               	movf	(___fladd@aexp),w
  8668  0145  0835               	subwf	(___fladd@bexp),w
  8669  0146  0236               	skipc
  8670  0147  1C03               	goto	u217_21
  8671  0148  294A               	goto	u217_20
  8672  0149  294B               u217_21:
  8673  014A                     	goto	i1l775
  8674  014A  291F               u217_20:
  8675  014B                     	goto	i1l773
  8676  014B  294C               	
  8677                           i1l779:	
  8678  014C                     	line	121
  8679                           	
  8680                           i1l773:	
  8681  014C                     	line	124
  8682                           	btfsc	(___fladd@signs),(6)&7
  8683  014C  1B34               	goto	u218_21
  8684  014D  294F               	goto	u218_20
  8685  014E  2950               u218_21:
  8686  014F                     	goto	i1l2243
  8687  014F  299F               u218_20:
  8688  0150                     	line	127
  8689                           	
  8690                           i1l2219:	
  8691  0150                     	movf	((___fladd@bexp)),w
  8692  0150  0836               	btfss	status,2
  8693  0151  1D03               	goto	u219_21
  8694  0152  2954               	goto	u219_20
  8695  0153  2955               u219_21:
  8696  0154                     	goto	i1l2225
  8697  0154  295F               u219_20:
  8698  0155                     	line	128
  8699                           	
  8700                           i1l2221:	
  8701  0155                     	movlw	0x0
  8702  0155  3000               	movwf	(?___fladd+3)
  8703  0156  00A3               	movlw	0x0
  8704  0157  3000               	movwf	(?___fladd+2)
  8705  0158  00A2               	movlw	0x0
  8706  0159  3000               	movwf	(?___fladd+1)
  8707  015A  00A1               	movlw	0x0
  8708  015B  3000               	movwf	(?___fladd)
  8709  015C  00A0               
  8710                           	goto	i1l782
  8711  015D  2AEB               	
  8712                           i1l2223:	
  8713  015E                     	goto	i1l782
  8714  015E  2AEB               	line	129
  8715                           	
  8716                           i1l781:	
  8717  015F                     	line	132
  8718                           	
  8719                           i1l2225:	
  8720  015F                     	movf	(___fladd@a),w
  8721  015F  0824               	addwf	(___fladd@b),f
  8722  0160  07A0               	movf	(___fladd@a+1),w
  8723  0161  0825               	clrz
  8724  0162  1103               	skipnc
  8725  0163  1803               	addlw	1
  8726  0164  3E01               	skipnz
  8727  0165  1903               	goto	u220_21
  8728  0166  2968               	addwf	(___fladd@b+1),f
  8729  0167  07A1               u220_21:
  8730  0168                     	movf	(___fladd@a+2),w
  8731  0168  0826               	clrz
  8732  0169  1103               	skipnc
  8733  016A  1803               	addlw	1
  8734  016B  3E01               	skipnz
  8735  016C  1903               	goto	u220_22
  8736  016D  296F               	addwf	(___fladd@b+2),f
  8737  016E  07A2               u220_22:
  8738  016F                     	movf	(___fladd@a+3),w
  8739  016F  0827               	clrz
  8740  0170  1103               	skipnc
  8741  0171  1803               	addlw	1
  8742  0172  3E01               	skipnz
  8743  0173  1903               	goto	u220_23
  8744  0174  2976               	addwf	(___fladd@b+3),f
  8745  0175  07A3               u220_23:
  8746  0176                     
  8747                           	line	134
  8748                           	
  8749                           i1l2227:	
  8750  0176                     	btfss	(___fladd@b+3),(24)&7
  8751  0176  1C23               	goto	u221_21
  8752  0177  2979               	goto	u221_20
  8753  0178  297A               u221_21:
  8754  0179                     	goto	i1l2277
  8755  0179  2A68               u221_20:
  8756  017A                     	line	135
  8757                           	
  8758                           i1l2229:	
  8759  017A                     	btfss	(___fladd@grs),(0)&7
  8760  017A  1C37               	goto	u222_21
  8761  017B  297D               	goto	u222_20
  8762  017C  297E               u222_21:
  8763  017D                     	goto	i1l2233
  8764  017D  2987               u222_20:
  8765  017E                     	line	136
  8766                           	
  8767                           i1l2231:	
  8768  017E                     	movf	(___fladd@grs),w
  8769  017E  0837               	movwf	(??___fladd+0)+0
  8770  017F  00A8               	clrc
  8771  0180  1003               	rrf	(??___fladd+0)+0,w
  8772  0181  0C28               	iorlw	01h
  8773  0182  3801               	movwf	(??___fladd+1)+0
  8774  0183  00A9               	movf	(??___fladd+1)+0,w
  8775  0184  0829               	movwf	(___fladd@grs)
  8776  0185  00B7               	line	137
  8777                           	goto	i1l2235
  8778  0186  298A               	line	138
  8779                           	
  8780                           i1l784:	
  8781  0187                     	line	139
  8782                           	
  8783                           i1l2233:	
  8784  0187                     	clrc
  8785  0187  1003               	rrf	(___fladd@grs),f
  8786  0188  0CB7               
  8787                           	goto	i1l2235
  8788  0189  298A               	line	140
  8789                           	
  8790                           i1l785:	
  8791  018A                     	line	141
  8792                           	
  8793                           i1l2235:	
  8794  018A                     	btfss	(___fladd@b),(0)&7
  8795  018A  1C20               	goto	u223_21
  8796  018B  298D               	goto	u223_20
  8797  018C  298E               u223_21:
  8798  018D                     	goto	i1l2239
  8799  018D  2990               u223_20:
  8800  018E                     	line	142
  8801                           	
  8802                           i1l2237:	
  8803  018E                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8804  018E  17B7               	goto	i1l2239
  8805  018F  2990               	line	143
  8806                           	
  8807                           i1l786:	
  8808  0190                     	line	144
  8809                           	
  8810                           i1l2239:	
  8811  0190                     	movlw	01h
  8812  0190  3001               	movwf	(??___fladd+0)+0
  8813  0191  00A8               u224_25:
  8814  0192                     	rlf	(___fladd@b+3),w
  8815  0192  0D23               	rrf	(___fladd@b+3),f
  8816  0193  0CA3               	rrf	(___fladd@b+2),f
  8817  0194  0CA2               	rrf	(___fladd@b+1),f
  8818  0195  0CA1               	rrf	(___fladd@b),f
  8819  0196  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  8820  0197  0BA8               	goto	u224_25
  8821  0198  2992               
  8822                           	line	145
  8823                           	
  8824                           i1l2241:	
  8825  0199                     	movlw	low(01h)
  8826  0199  3001               	movwf	(??___fladd+0)+0
  8827  019A  00A8               	movf	(??___fladd+0)+0,w
  8828  019B  0828               	addwf	(___fladd@bexp),f
  8829  019C  07B6               	goto	i1l2277
  8830  019D  2A68               	line	146
  8831                           	
  8832                           i1l783:	
  8833  019E                     	line	148
  8834                           	goto	i1l2277
  8835  019E  2A68               	line	149
  8836                           	
  8837                           i1l780:	
  8838  019F                     	line	153
  8839                           	
  8840                           i1l2243:	
  8841  019F                     	movf	(___fladd@b+3),w
  8842  019F  0823               	xorlw	80h
  8843  01A0  3A80               	movwf	btemp+1
  8844  01A1  00FF               	movf	(___fladd@a+3),w
  8845  01A2  0827               	xorlw	80h
  8846  01A3  3A80               	subwf	btemp+1,w
  8847  01A4  027F               	
  8848                           	skipz
  8849  01A5  1D03               	goto	u225_23
  8850  01A6  29B1               	movf	(___fladd@a+2),w
  8851  01A7  0826               	subwf	(___fladd@b+2),w
  8852  01A8  0222               	skipz
  8853  01A9  1D03               	goto	u225_23
  8854  01AA  29B1               	movf	(___fladd@a+1),w
  8855  01AB  0825               	subwf	(___fladd@b+1),w
  8856  01AC  0221               	skipz
  8857  01AD  1D03               	goto	u225_23
  8858  01AE  29B1               	movf	(___fladd@a),w
  8859  01AF  0824               	subwf	(___fladd@b),w
  8860  01B0  0220               u225_23:
  8861  01B1                     	skipnc
  8862  01B1  1803               	goto	u225_21
  8863  01B2  29B4               	goto	u225_20
  8864  01B3  29B5               u225_21:
  8865  01B4                     	goto	i1l2253
  8866  01B4  2A1B               u225_20:
  8867  01B5                     	line	154
  8868                           	
  8869                           i1l2245:	
  8870  01B5                     	movlw	0FFh
  8871  01B5  30FF               	movwf	((??___fladd+0)+0)
  8872  01B6  00A8               	movlw	0FFh
  8873  01B7  30FF               	movwf	((??___fladd+0)+0+1)
  8874  01B8  00A9               	movlw	0FFh
  8875  01B9  30FF               	movwf	((??___fladd+0)+0+2)
  8876  01BA  00AA               	movlw	0FFh
  8877  01BB  30FF               	movwf	((??___fladd+0)+0+3)
  8878  01BC  00AB               	movf	(___fladd@a),w
  8879  01BD  0824               	movwf	(??___fladd+4)+0
  8880  01BE  00AC               	movf	(___fladd@a+1),w
  8881  01BF  0825               	movwf	((??___fladd+4)+0+1)
  8882  01C0  00AD               	movf	(___fladd@a+2),w
  8883  01C1  0826               	movwf	((??___fladd+4)+0+2)
  8884  01C2  00AE               	movf	(___fladd@a+3),w
  8885  01C3  0827               	movwf	((??___fladd+4)+0+3)
  8886  01C4  00AF               	comf	(___fladd@b),w
  8887  01C5  0920               	movwf	(??___fladd+8)+0
  8888  01C6  00B0               	comf	(___fladd@b+1),w
  8889  01C7  0921               	movwf	((??___fladd+8)+0+1)
  8890  01C8  00B1               	comf	(___fladd@b+2),w
  8891  01C9  0922               	movwf	((??___fladd+8)+0+2)
  8892  01CA  00B2               	comf	(___fladd@b+3),w
  8893  01CB  0923               	movwf	((??___fladd+8)+0+3)
  8894  01CC  00B3               	incf	(??___fladd+8)+0,f
  8895  01CD  0AB0               	skipnz
  8896  01CE  1903               	incf	((??___fladd+8)+0+1),f
  8897  01CF  0AB1               	skipnz
  8898  01D0  1903               	incf	((??___fladd+8)+0+2),f
  8899  01D1  0AB2               	skipnz
  8900  01D2  1903               	incf	((??___fladd+8)+0+3),f
  8901  01D3  0AB3               	movf	0+(??___fladd+8)+0,w
  8902  01D4  0830               	addwf	(??___fladd+4)+0,f
  8903  01D5  07AC               	movf	1+(??___fladd+8)+0,w
  8904  01D6  0831               	skipnc
  8905  01D7  1803               	incfsz	1+(??___fladd+8)+0,w
  8906  01D8  0F31               	goto	u226_20
  8907  01D9  29DB               	goto	u226_21
  8908  01DA  29DC               u226_20:
  8909  01DB                     	addwf	(??___fladd+4)+1,f
  8910  01DB  07AD               u226_21:
  8911  01DC                     	movf	2+(??___fladd+8)+0,w
  8912  01DC  0832               	skipnc
  8913  01DD  1803               	incfsz	2+(??___fladd+8)+0,w
  8914  01DE  0F32               	goto	u226_22
  8915  01DF  29E1               	goto	u226_23
  8916  01E0  29E2               u226_22:
  8917  01E1                     	addwf	(??___fladd+4)+2,f
  8918  01E1  07AE               u226_23:
  8919  01E2                     	movf	3+(??___fladd+8)+0,w
  8920  01E2  0833               	skipnc
  8921  01E3  1803               	incf	3+(??___fladd+8)+0,w
  8922  01E4  0A33               	addwf	(??___fladd+4)+3,f
  8923  01E5  07AF               	movf	0+(??___fladd+4)+0,w
  8924  01E6  082C               	addwf	(??___fladd+0)+0,f
  8925  01E7  07A8               	movf	1+(??___fladd+4)+0,w
  8926  01E8  082D               	skipnc
  8927  01E9  1803               	incfsz	1+(??___fladd+4)+0,w
  8928  01EA  0F2D               	goto	u227_20
  8929  01EB  29ED               	goto	u227_21
  8930  01EC  29EE               u227_20:
  8931  01ED                     	addwf	(??___fladd+0)+1,f
  8932  01ED  07A9               u227_21:
  8933  01EE                     	movf	2+(??___fladd+4)+0,w
  8934  01EE  082E               	skipnc
  8935  01EF  1803               	incfsz	2+(??___fladd+4)+0,w
  8936  01F0  0F2E               	goto	u227_22
  8937  01F1  29F3               	goto	u227_23
  8938  01F2  29F4               u227_22:
  8939  01F3                     	addwf	(??___fladd+0)+2,f
  8940  01F3  07AA               u227_23:
  8941  01F4                     	movf	3+(??___fladd+4)+0,w
  8942  01F4  082F               	skipnc
  8943  01F5  1803               	incf	3+(??___fladd+4)+0,w
  8944  01F6  0A2F               	addwf	(??___fladd+0)+3,f
  8945  01F7  07AB               	movf	3+(??___fladd+0)+0,w
  8946  01F8  082B               	movwf	(___fladd@b+3)
  8947  01F9  00A3               	movf	2+(??___fladd+0)+0,w
  8948  01FA  082A               	movwf	(___fladd@b+2)
  8949  01FB  00A2               	movf	1+(??___fladd+0)+0,w
  8950  01FC  0829               	movwf	(___fladd@b+1)
  8951  01FD  00A1               	movf	0+(??___fladd+0)+0,w
  8952  01FE  0828               	movwf	(___fladd@b)
  8953  01FF  00A0               
  8954                           	line	155
  8955                           	movlw	low(080h)
  8956  0200  3080               	movwf	(??___fladd+0)+0
  8957  0201  00A8               	movf	(??___fladd+0)+0,w
  8958  0202  0828               	xorwf	(___fladd@signs),f
  8959  0203  06B4               	line	156
  8960                           	
  8961                           i1l2247:	
  8962  0204                     	comf	(___fladd@grs),f
  8963  0204  09B7               	incf	(___fladd@grs),f
  8964  0205  0AB7               	line	157
  8965                           	
  8966                           i1l2249:	
  8967  0206                     	movf	((___fladd@grs)),w
  8968  0206  0837               	btfss	status,2
  8969  0207  1D03               	goto	u228_21
  8970  0208  2A0A               	goto	u228_20
  8971  0209  2A0B               u228_21:
  8972  020A                     	goto	i1l790
  8973  020A  2A29               u228_20:
  8974  020B                     	line	158
  8975                           	
  8976                           i1l2251:	
  8977  020B                     	movlw	01h
  8978  020B  3001               	addwf	(___fladd@b),f
  8979  020C  07A0               	movlw	0
  8980  020D  3000               	skipnc
  8981  020E  1803               movlw 1
  8982  020F  3001               	addwf	(___fladd@b+1),f
  8983  0210  07A1               	movlw	0
  8984  0211  3000               	skipnc
  8985  0212  1803               movlw 1
  8986  0213  3001               	addwf	(___fladd@b+2),f
  8987  0214  07A2               	movlw	0
  8988  0215  3000               	skipnc
  8989  0216  1803               movlw 1
  8990  0217  3001               	addwf	(___fladd@b+3),f
  8991  0218  07A3               	goto	i1l790
  8992  0219  2A29               	line	159
  8993                           	
  8994                           i1l789:	
  8995  021A                     	line	160
  8996                           	goto	i1l790
  8997  021A  2A29               	line	161
  8998                           	
  8999                           i1l788:	
  9000  021B                     	line	162
  9001                           	
  9002                           i1l2253:	
  9003  021B                     	movf	(___fladd@a),w
  9004  021B  0824               	subwf	(___fladd@b),f
  9005  021C  02A0               	movf	(___fladd@a+1),w
  9006  021D  0825               	skipc
  9007  021E  1C03               	incfsz	(___fladd@a+1),w
  9008  021F  0F25               	subwf	(___fladd@b+1),f
  9009  0220  02A1               	movf	(___fladd@a+2),w
  9010  0221  0826               	skipc
  9011  0222  1C03               	incfsz	(___fladd@a+2),w
  9012  0223  0F26               	subwf	(___fladd@b+2),f
  9013  0224  02A2               	movf	(___fladd@a+3),w
  9014  0225  0827               	skipc
  9015  0226  1C03               	incfsz	(___fladd@a+3),w
  9016  0227  0F27               	subwf	(___fladd@b+3),f
  9017  0228  02A3               	line	163
  9018                           	
  9019                           i1l790:	
  9020  0229                     	line	166
  9021                           	movf	(___fladd@b+3),w
  9022  0229  0823               	iorwf	(___fladd@b+2),w
  9023  022A  0422               	iorwf	(___fladd@b+1),w
  9024  022B  0421               	iorwf	(___fladd@b),w
  9025  022C  0420               	skipz
  9026  022D  1D03               	goto	u229_21
  9027  022E  2A30               	goto	u229_20
  9028  022F  2A31               u229_21:
  9029  0230                     	goto	i1l2275
  9030  0230  2A62               u229_20:
  9031  0231                     	
  9032                           i1l2255:	
  9033  0231                     	movf	((___fladd@grs)),w
  9034  0231  0837               	btfss	status,2
  9035  0232  1D03               	goto	u230_21
  9036  0233  2A35               	goto	u230_20
  9037  0234  2A36               u230_21:
  9038  0235                     	goto	i1l2275
  9039  0235  2A62               u230_20:
  9040  0236                     	line	167
  9041                           	
  9042                           i1l2257:	
  9043  0236                     	movlw	0x0
  9044  0236  3000               	movwf	(?___fladd+3)
  9045  0237  00A3               	movlw	0x0
  9046  0238  3000               	movwf	(?___fladd+2)
  9047  0239  00A2               	movlw	0x0
  9048  023A  3000               	movwf	(?___fladd+1)
  9049  023B  00A1               	movlw	0x0
  9050  023C  3000               	movwf	(?___fladd)
  9051  023D  00A0               
  9052                           	goto	i1l782
  9053  023E  2AEB               	
  9054                           i1l2259:	
  9055  023F                     	goto	i1l782
  9056  023F  2AEB               	line	168
  9057                           	
  9058                           i1l791:	
  9059  0240                     	line	171
  9060                           	goto	i1l2275
  9061  0240  2A62               	
  9062                           i1l793:	
  9063  0241                     	line	172
  9064                           	
  9065                           i1l2261:	
  9066  0241                     	movlw	01h
  9067  0241  3001               	movwf	(??___fladd+0)+0
  9068  0242  00A8               u231_25:
  9069  0243                     	clrc
  9070  0243  1003               	rlf	(___fladd@b),f
  9071  0244  0DA0               	rlf	(___fladd@b+1),f
  9072  0245  0DA1               	rlf	(___fladd@b+2),f
  9073  0246  0DA2               	rlf	(___fladd@b+3),f
  9074  0247  0DA3               	decfsz	(??___fladd+0)+0
  9075  0248  0BA8               	goto	u231_25
  9076  0249  2A43               	line	173
  9077                           	
  9078                           i1l2263:	
  9079  024A                     	btfss	(___fladd@grs),(7)&7
  9080  024A  1FB7               	goto	u232_21
  9081  024B  2A4D               	goto	u232_20
  9082  024C  2A4E               u232_21:
  9083  024D                     	goto	i1l794
  9084  024D  2A4F               u232_20:
  9085  024E                     	line	174
  9086                           	
  9087                           i1l2265:	
  9088  024E                     	bsf	(___fladd@b)+(0/8),(0)&7
  9089  024E  1420               	line	175
  9090                           	
  9091                           i1l794:	
  9092  024F                     	line	176
  9093                           	btfss	(___fladd@grs),(0)&7
  9094  024F  1C37               	goto	u233_21
  9095  0250  2A52               	goto	u233_20
  9096  0251  2A53               u233_21:
  9097  0252                     	goto	i1l2269
  9098  0252  2A56               u233_20:
  9099  0253                     	line	177
  9100                           	
  9101                           i1l2267:	
  9102  0253                     	setc
  9103  0253  1403               	rlf	(___fladd@grs),f
  9104  0254  0DB7               	line	178
  9105                           	goto	i1l2271
  9106  0255  2A59               	line	179
  9107                           	
  9108                           i1l795:	
  9109  0256                     	line	180
  9110                           	
  9111                           i1l2269:	
  9112  0256                     	clrc
  9113  0256  1003               	rlf	(___fladd@grs),f
  9114  0257  0DB7               
  9115                           	goto	i1l2271
  9116  0258  2A59               	line	181
  9117                           	
  9118                           i1l796:	
  9119  0259                     	line	182
  9120                           	
  9121                           i1l2271:	
  9122  0259                     	movf	((___fladd@bexp)),w
  9123  0259  0836               	btfsc	status,2
  9124  025A  1903               	goto	u234_21
  9125  025B  2A5D               	goto	u234_20
  9126  025C  2A5E               u234_21:
  9127  025D                     	goto	i1l2275
  9128  025D  2A62               u234_20:
  9129  025E                     	line	183
  9130                           	
  9131                           i1l2273:	
  9132  025E                     	movlw	01h
  9133  025E  3001               	subwf	(___fladd@bexp),f
  9134  025F  02B6               	goto	i1l2275
  9135  0260  2A62               	line	184
  9136                           	
  9137                           i1l797:	
  9138  0261                     	goto	i1l2275
  9139  0261  2A62               	line	185
  9140                           	
  9141                           i1l792:	
  9142  0262                     	line	171
  9143                           	
  9144                           i1l2275:	
  9145  0262                     	btfss	(___fladd@b+2),(23)&7
  9146  0262  1FA2               	goto	u235_21
  9147  0263  2A65               	goto	u235_20
  9148  0264  2A66               u235_21:
  9149  0265                     	goto	i1l2261
  9150  0265  2A41               u235_20:
  9151  0266                     	goto	i1l2277
  9152  0266  2A68               	
  9153                           i1l798:	
  9154  0267                     	goto	i1l2277
  9155  0267  2A68               	line	186
  9156                           	
  9157                           i1l787:	
  9158  0268                     	line	192
  9159                           	
  9160                           i1l2277:	
  9161  0268                     	clrf	(___fladd@aexp)
  9162  0268  01B5               	line	193
  9163                           	
  9164                           i1l2279:	
  9165  0269                     	btfss	(___fladd@grs),(7)&7
  9166  0269  1FB7               	goto	u236_21
  9167  026A  2A6C               	goto	u236_20
  9168  026B  2A6D               u236_21:
  9169  026C                     	goto	i1l2287
  9170  026C  2A7F               u236_20:
  9171  026D                     	line	194
  9172                           	
  9173                           i1l2281:	
  9174  026D                     	movf	(___fladd@grs),w
  9175  026D  0837               	andlw	07Fh
  9176  026E  397F               	btfsc	status,2
  9177  026F  1903               	goto	u237_21
  9178  0270  2A72               	goto	u237_20
  9179  0271  2A73               u237_21:
  9180  0272                     	goto	i1l800
  9181  0272  2A76               u237_20:
  9182  0273                     	line	195
  9183                           	
  9184                           i1l2283:	
  9185  0273                     	clrf	(___fladd@aexp)
  9186  0273  01B5               	incf	(___fladd@aexp),f
  9187  0274  0AB5               	line	196
  9188                           	goto	i1l2287
  9189  0275  2A7F               	line	197
  9190                           	
  9191                           i1l800:	
  9192  0276                     	line	198
  9193                           	btfss	(___fladd@b),(0)&7
  9194  0276  1C20               	goto	u238_21
  9195  0277  2A79               	goto	u238_20
  9196  0278  2A7A               u238_21:
  9197  0279                     	goto	i1l2287
  9198  0279  2A7F               u238_20:
  9199  027A                     	line	199
  9200                           	
  9201                           i1l2285:	
  9202  027A                     	clrf	(___fladd@aexp)
  9203  027A  01B5               	incf	(___fladd@aexp),f
  9204  027B  0AB5               	goto	i1l2287
  9205  027C  2A7F               	line	200
  9206                           	
  9207                           i1l802:	
  9208  027D                     	goto	i1l2287
  9209  027D  2A7F               	line	201
  9210                           	
  9211                           i1l801:	
  9212  027E                     	goto	i1l2287
  9213  027E  2A7F               	line	202
  9214                           	
  9215                           i1l799:	
  9216  027F                     	line	203
  9217                           	
  9218                           i1l2287:	
  9219  027F                     	movf	((___fladd@aexp)),w
  9220  027F  0835               	btfsc	status,2
  9221  0280  1903               	goto	u239_21
  9222  0281  2A83               	goto	u239_20
  9223  0282  2A84               u239_21:
  9224  0283                     	goto	i1l803
  9225  0283  2ABA               u239_20:
  9226  0284                     	line	204
  9227                           	
  9228                           i1l2289:	
  9229  0284                     	movlw	01h
  9230  0284  3001               	addwf	(___fladd@b),f
  9231  0285  07A0               	movlw	0
  9232  0286  3000               	skipnc
  9233  0287  1803               movlw 1
  9234  0288  3001               	addwf	(___fladd@b+1),f
  9235  0289  07A1               	movlw	0
  9236  028A  3000               	skipnc
  9237  028B  1803               movlw 1
  9238  028C  3001               	addwf	(___fladd@b+2),f
  9239  028D  07A2               	movlw	0
  9240  028E  3000               	skipnc
  9241  028F  1803               movlw 1
  9242  0290  3001               	addwf	(___fladd@b+3),f
  9243  0291  07A3               	line	205
  9244                           	
  9245                           i1l2291:	
  9246  0292                     	btfss	(___fladd@b+3),(24)&7
  9247  0292  1C23               	goto	u240_21
  9248  0293  2A95               	goto	u240_20
  9249  0294  2A96               u240_21:
  9250  0295                     	goto	i1l803
  9251  0295  2ABA               u240_20:
  9252  0296                     	line	206
  9253                           	
  9254                           i1l2293:	
  9255  0296                     	movf	(___fladd@b),w
  9256  0296  0820               	movwf	(??___fladd+0)+0
  9257  0297  00A8               	movf	(___fladd@b+1),w
  9258  0298  0821               	movwf	((??___fladd+0)+0+1)
  9259  0299  00A9               	movf	(___fladd@b+2),w
  9260  029A  0822               	movwf	((??___fladd+0)+0+2)
  9261  029B  00AA               	movf	(___fladd@b+3),w
  9262  029C  0823               	movwf	((??___fladd+0)+0+3)
  9263  029D  00AB               	movlw	01h
  9264  029E  3001               	movwf	(??___fladd+4)+0
  9265  029F  00AC               u241_25:
  9266  02A0                     	rlf	(??___fladd+0)+3,w
  9267  02A0  0D2B               	rrf	(??___fladd+0)+3,f
  9268  02A1  0CAB               	rrf	(??___fladd+0)+2,f
  9269  02A2  0CAA               	rrf	(??___fladd+0)+1,f
  9270  02A3  0CA9               	rrf	(??___fladd+0)+0,f
  9271  02A4  0CA8               u241_20:
  9272  02A5                     	decfsz	(??___fladd+4)+0,f
  9273  02A5  0BAC               	goto	u241_25
  9274  02A6  2AA0               	movf	3+(??___fladd+0)+0,w
  9275  02A7  082B               	movwf	(___fladd@b+3)
  9276  02A8  00A3               	movf	2+(??___fladd+0)+0,w
  9277  02A9  082A               	movwf	(___fladd@b+2)
  9278  02AA  00A2               	movf	1+(??___fladd+0)+0,w
  9279  02AB  0829               	movwf	(___fladd@b+1)
  9280  02AC  00A1               	movf	0+(??___fladd+0)+0,w
  9281  02AD  0828               	movwf	(___fladd@b)
  9282  02AE  00A0               
  9283                           	line	207
  9284                           		incf	((___fladd@bexp)),w
  9285  02AF  0A36               	btfsc	status,2
  9286  02B0  1903               	goto	u242_21
  9287  02B1  2AB3               	goto	u242_20
  9288  02B2  2AB4               u242_21:
  9289  02B3                     	goto	i1l803
  9290  02B3  2ABA               u242_20:
  9291  02B4                     	line	208
  9292                           	
  9293                           i1l2295:	
  9294  02B4                     	movlw	low(01h)
  9295  02B4  3001               	movwf	(??___fladd+0)+0
  9296  02B5  00A8               	movf	(??___fladd+0)+0,w
  9297  02B6  0828               	addwf	(___fladd@bexp),f
  9298  02B7  07B6               	goto	i1l803
  9299  02B8  2ABA               	line	209
  9300                           	
  9301                           i1l805:	
  9302  02B9                     	goto	i1l803
  9303  02B9  2ABA               	line	210
  9304                           	
  9305                           i1l804:	
  9306  02BA                     	line	211
  9307                           	
  9308                           i1l803:	
  9309  02BA                     	line	215
  9310                           		incf	((___fladd@bexp)),w
  9311  02BA  0A36               	btfsc	status,2
  9312  02BB  1903               	goto	u243_21
  9313  02BC  2ABE               	goto	u243_20
  9314  02BD  2ABF               u243_21:
  9315  02BE                     	goto	i1l2299
  9316  02BE  2AC5               u243_20:
  9317  02BF                     	
  9318                           i1l2297:	
  9319  02BF                     	movf	((___fladd@bexp)),w
  9320  02BF  0836               	btfss	status,2
  9321  02C0  1D03               	goto	u244_21
  9322  02C1  2AC3               	goto	u244_20
  9323  02C2  2AC4               u244_21:
  9324  02C3                     	goto	i1l2305
  9325  02C3  2AD5               u244_20:
  9326  02C4                     	goto	i1l2299
  9327  02C4  2AC5               	
  9328                           i1l808:	
  9329  02C5                     	line	216
  9330                           	
  9331                           i1l2299:	
  9332  02C5                     	movlw	high highword(0)
  9333  02C5  3000               	movwf	(___fladd@b+3)
  9334  02C6  00A3               	movlw	low highword(0)
  9335  02C7  3000               	movwf	(___fladd@b+2)
  9336  02C8  00A2               	movlw	high(0)
  9337  02C9  3000               	movwf	(___fladd@b+1)
  9338  02CA  00A1               	movlw	low(0)
  9339  02CB  3000               	movwf	(___fladd@b)
  9340  02CC  00A0               
  9341                           	line	218
  9342                           	
  9343                           i1l2301:	
  9344  02CD                     	movf	((___fladd@bexp)),w
  9345  02CD  0836               	btfss	status,2
  9346  02CE  1D03               	goto	u245_21
  9347  02CF  2AD1               	goto	u245_20
  9348  02D0  2AD2               u245_21:
  9349  02D1                     	goto	i1l2305
  9350  02D1  2AD5               u245_20:
  9351  02D2                     	line	219
  9352                           	
  9353                           i1l2303:	
  9354  02D2                     	clrf	(___fladd@signs)
  9355  02D2  01B4               	goto	i1l2305
  9356  02D3  2AD5               	line	220
  9357                           	
  9358                           i1l809:	
  9359  02D4                     	goto	i1l2305
  9360  02D4  2AD5               	line	221
  9361                           	
  9362                           i1l806:	
  9363  02D5                     	line	225
  9364                           	
  9365                           i1l2305:	
  9366  02D5                     	btfss	(___fladd@bexp),(0)&7
  9367  02D5  1C36               	goto	u246_21
  9368  02D6  2AD8               	goto	u246_20
  9369  02D7  2AD9               u246_21:
  9370  02D8                     	goto	i1l2309
  9371  02D8  2ADB               u246_20:
  9372  02D9                     	line	226
  9373                           	
  9374                           i1l2307:	
  9375  02D9                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  9376  02D9  17A2               	line	227
  9377                           	goto	i1l811
  9378  02DA  2ADF               	line	229
  9379                           	
  9380                           i1l810:	
  9381  02DB                     	line	230
  9382                           	
  9383                           i1l2309:	
  9384  02DB                     	movlw	low(07Fh)
  9385  02DB  307F               	movwf	(??___fladd+0)+0
  9386  02DC  00A8               	movf	(??___fladd+0)+0,w
  9387  02DD  0828               	andwf	0+(___fladd@b)+02h,f
  9388  02DE  05A2               	line	231
  9389                           	
  9390                           i1l811:	
  9391  02DF                     	line	232
  9392                           	movf	(___fladd@bexp),w
  9393  02DF  0836               	movwf	(??___fladd+0)+0
  9394  02E0  00A8               	clrc
  9395  02E1  1003               	rrf	(??___fladd+0)+0,w
  9396  02E2  0C28               	movwf	(??___fladd+1)+0
  9397  02E3  00A9               	movf	(??___fladd+1)+0,w
  9398  02E4  0829               	movwf	0+(___fladd@b)+03h
  9399  02E5  00A3               	line	233
  9400                           	
  9401                           i1l2311:	
  9402  02E6                     	btfss	(___fladd@signs),(7)&7
  9403  02E6  1FB4               	goto	u247_21
  9404  02E7  2AE9               	goto	u247_20
  9405  02E8  2AEA               u247_21:
  9406  02E9                     	goto	i1l812
  9407  02E9  2AEB               u247_20:
  9408  02EA                     	line	234
  9409                           	
  9410                           i1l2313:	
  9411  02EA                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  9412  02EA  17A3               	line	235
  9413                           	
  9414                           i1l812:	
  9415  02EB                     	line	236
  9416                           	line	237
  9417                           	
  9418                           i1l782:	
  9419  02EB                     	return
  9420  02EB  0008               	opt stack 0
  9421                           GLOBAL	__end_of___fladd
  9422                           	__end_of___fladd:
  9423  02EC                     	signat	___fladd,8316
  9424                           global	___latbits
  9425                           ___latbits	equ	2
  9426  0002                     	global	btemp
  9427                           	btemp set 07Eh
  9428  007E                     
  9429                           	DABS	1,126,2	;btemp
  9430                           	global	wtemp0
  9431                           	wtemp0 set btemp+0
  9432  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      68
    BANK1            80     37      46
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _is_deadzone->___xxtofl
    ___fltol->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd

Critical Paths under _main in BANK1

    _main->_update_volume
    _update_volume->_write_int
    _update_input->_write_int
    _write_space->_write_font
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13690
                                             35 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                       _update_input
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    6846
                                             33 BANK1      2     2      0
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    6822
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          5     3      2    1110
                                             16 BANK1      5     3      2
                         _write_font
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    4237
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1475
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0    1179
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     912
                                              6 BANK1     10     8      2
                             ___wmul
                  _display_write_end
                _display_write_start
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     496
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1311
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    4228
                                             54 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _poll_receiver
 ---------------------------------------------------------------------------------
 (8) _poll_receiver                                        8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      6     6      0    4094
                                             48 BANK0      6     6      0
                        _is_deadzone
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _is_deadzone                                         13     9      4    3746
                                             35 BANK0     13     9      4
                            ___fladd
                            ___fltol
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            11     7      4     381
                                             24 BANK0     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            24    16      8    2414
                                              0 BANK0     24    16      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
   _update_input
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _display_write_end
             _display_write_start
             _spiWrite
     _write_space
       _write_font
         ___wmul
         _display_write_end
         _display_write_start
         _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite
   _update_volume
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _display_write_end
             _display_write_start
             _spiWrite
     _write_space
       _write_font
         ___wmul
         _display_write_end
         _display_write_start
         _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     _is_deadzone
       ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       i1___wmul
     i1___lwdiv
   _handle_rotary
   _poll_receiver

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      80       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     25      2E       7       57.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      80      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 10 10:47:45 2019

                  _update_input 0BAB                               pc 0002                     __CFG_CP$OFF 0000  
                   _SSPSTATbits 0094                              l53 0AE0                              l54 0AE8  
                            l55 0B02                              l56 0B03                              l57 0B03  
                            fsr 0004             ___wmul@multiplicand 00A2                i1___wmul@product 0074  
                  spiWrite@data 00A0                   _update_volume 0D88                             l210 0BAA  
                           l122 0D87                             l211 0B93                             l212 0B7E  
                           l213 0BA8                             l214 0B82                             l142 0BB9  
                           l215 0B86                             l151 0AA0                             l143 0BE3  
                           l216 0B8A                             l160 0C1D                             l152 0A8C  
                           l217 0B8E                             l209 0B7B                             l153 0AAF  
                           l306 0A5E                             l170 0E37                             l154 0AAF  
                           l146 0D96                             l171 0E35                             l163 0B56  
                           l147 0DD6                             l172 0E36                             l164 0B71  
                           l148 0DBA                             l181 0A44                             l173 0E38  
                           l157 0C08                             l190 02F4                             l182 0A47  
                           l158 0BEB                             l191 02FB                             l167 0DF7  
                           l159 0C1D                             l192 02FB                             l176 0EB9  
                           l168 0E38                             l185 0A35                             l177 0F07  
                           l169 0E16                             l186 0A38                             l178 0F0C  
                           l460 04BB                             l189 02F4                             l453 05AB  
                           l461 04E9                             l470 05AA                             l462 04BC  
                           l454 04A5                             l279 0EA0                             l471 05CC  
                           l463 0503                             l455 04B7                             l472 05D2  
                           l464 050D                             l456 04BE                             l465 0541  
                           l457 04B9                             l458 05CD                             l466 0536  
                           l467 0553                             l459 04BA                             l475 0AB5  
                           l468 05A0                             l476 0ABF                             l741 0D34  
                           l469 0558                             l477 0AD4                             l742 0D06  
                           l478 0AD9                             l743 0CFA                             l751 0C9C  
                           l744 0D0B                             l752 0C76                             l745 0D0C  
                           l753 0C6A                             l746 0D25                             l754 0C7B  
                           l747 0D33                             l755 0C7C                             l748 0D39  
                           l756 0C8D                             l757 0C9B                             l758 0CA1  
                 ?_display_init 0070                             _PR2 0092                    __CFG_CPD$OFF 0000  
                           _isr 0B06                             fsr0 0004                             indf 0000  
                 write_char@pos 00B0                    __CFG_LVP$OFF 0000                    ___fltol@exp1 0042  
                          l2001 0C76                            l2003 0C7C                            l2011 0C9C  
                          l2013 0CA1                            l2005 0C86                            l2021 0C08  
                          l2007 0C8D                            l2031 04B7                            l2023 04A0  
                          l2015 0BE4                            l2009 0C94                            l2041 04F5  
                          l2033 04BD                            l2025 04A5                            l2017 0BEB  
                          l2051 050C                            l2043 04F9                            l2035 04BE  
                          l2027 04AB                            l2019 0C01                            l2061 0547  
                          l2053 050D                            l2045 04FD                            l2037 04E9  
                          l2029 04B2                            l2071 059B                            l2063 054E  
                          l2055 0535                            l2047 0503                            l2039 04F1  
                          l2401 0D5D                            l2073 05A0                            l2065 0553  
                          l2057 0536                            l2049 0505                            l2411 0D64  
                          l2403 0D60                            l2067 0558                            l2059 0541  
                          l2075 05AB                            l2421 0D70                            l2413 0D65  
                          l2405 0D61                            l2069 0594                            l2077 05CD  
                          l2431 0D7C                            l2423 0D71                            l2415 0D66  
                          l2407 0D62                            l2511 0E40                            l2079 05D2  
                          l2601 0B7B                            l2433 0D7F                            l2425 0D72  
                          l2417 0D67                            l2409 0D63                            l2521 0E48  
                          l2513 0E41                            l2441 0A97                            l2611 0B8E  
                          l2603 0B7E                            l2435 0D83                            l2427 0D78  
                          l2419 0D6D                            l2531 0E53                            l2523 0E4B  
                          l2515 0E42                            l2507 0E39                            l2451 0B56  
                          l2443 0AA0                            l2613 0B92                            l2605 0B82  
                          l2429 0D7B                            l2381 0D47                            l2373 0D3A  
                          l2461 0A5B                            l2453 0A48                            l2541 0E60  
                          l2533 0E56                            l2525 0E4C                            l2517 0E43  
                          l2509 0E3F                            l2445 0B3C                            l2437 0A87  
                          l2607 0B86                            l2615 0B93                            l1903 02EF  
                          l2391 0D4C                            l2383 0D48                            l2375 0D42  
                          l2455 0A52                            l2551 0E71                            l2543 0E63  
                          l2535 0E59                            l2527 0E4F                            l2519 0E44  
                          l1911 0A31                            l2447 0B4B                            l2439 0A8C  
                          l2609 0B8A                            l2617 0BA8                            l2393 0D52  
                          l2385 0D49                            l2377 0D43                            l2457 0A55  
                          l2561 0E7C                            l2553 0E72                            l2545 0E68  
                          l2537 0E5C                            l2529 0E50                            l1921 0ACD  
                          l1913 0AB0                            l1905 0A39                            l2449 0B55  
                          l2395 0D55                            l2387 0D4A                            l2379 0D44  
                          l2459 0A58                            l2563 0E8E                            l2555 0E73  
                          l2547 0E6D                            l2539 0E5F                            l1923 0AD4  
                          l1915 0AB5                            l1907 0A40                            l1931 0EAA  
                          l2571 0D97                            l2397 0D56                            l2389 0D4B  
                          l2557 0E74                            l2549 0E70                            l1925 0AD9  
                          l1917 0AB9                            l1909 0A2A                            l1933 0EB8  
                          l1941 0F07                            l2581 0DC5                            l2573 0DA0  
                          l2565 0D88                            l2399 0D57                            l2559 0E78  
                          l1919 0AC6                            l1935 0EB9                            l1927 0EA1  
                          l1951 0DF7                            l1943 0DDA                            l2591 0BC3  
                          l2583 0BAB                            l2575 0DA6                            l2567 0D95  
                          l2833 04DE                            l1937 0EF1                            l1929 0EA6  
                          l1961 0E1E                            l1953 0DFF                            l1945 0DE0  
                          l2593 0BCE                            l2585 0BB8                            l2577 0DB3  
                          l2569 0D96                            l2835 0B9A                            l1971 0CF7  
                          l1939 0EF9                            l1963 0E24                            l1955 0E05  
                          l1947 0DE6                            l2595 0BDD                            l2587 0BB9  
                          l2579 0DBA                            l2691 0AE8                            l2597 0B72  
                          l1981 0D1D                            l1973 0CFA                            l1965 0E2B  
                          l1957 0E0C                            l1949 0DED                            l2589 0BBA  
                          l2693 0AF2                            l2685 0ADA                            l2599 0B7A  
                          l1991 0D39                            l1983 0D23                            l1975 0D01  
                          l1967 0CED                            l1959 0E16                            l2695 0AF7  
                          l2687 0AE0                            l1985 0D25                            l1977 0D06  
                          l1969 0CF1                            l1993 0C5F                            l2689 0AE6  
                          l1987 0D2C                            l1979 0D0C                            l1995 0C67  
                          l1989 0D34                            l1997 0C6A                            l1999 0C71  
                          ?_isr 0070                            STR_1 0490                            STR_2 0496  
                          STR_3 049A                            u1610 0AD3                            u1611 0AD2  
                          u1700 0CF7                            u1620 0EB7                            u1701 0CF6  
                          u1605 0AC7                            u1621 0EB6                            u1550 02FA  
                          u1630 0F06                            u1551 02F9                            u1631 0F05  
                          u1720 0D0A                            u1800 0C86                            u1560 0A40  
                          u1640 0DE0                            u1721 0D09                            u1801 0C85  
                          u1561 0A3F                            u1625 0EB3                            u1641 0DDF  
                          u1570 0A31                            u1650 0DE6                            u1715 0CFB  
                          u1571 0A30                            u1635 0F02                            u1651 0DE5  
                          u1740 0D1D                            u1820 0C9A                            u1900 05A9  
                          u1580 0AB9                            u1660 0DFF                            u1741 0D1C  
                          u1821 0C99                            u1805 0C82                            u1901 05A8  
                          u1581 0AB8                            u1661 0DFE                            u1910 05CB  
                          u1670 0E05                            u1830 0C1C                            u1735 0D0D  
                          u1815 0C8E                            u1911 05CA                            u1671 0E04  
                          u1831 0C1B                            u2800 0B79                            u1760 0D32  
                          u1840 04AB                            u1680 0E1E                            u2801 0B78  
                          u1761 0D31                            u1745 0D19                            u1841 04AA  
                          u1681 0E1D                            u3097 0AFD                            u1770 0C67  
                          u1850 04F9                            u1690 0E24                            u1755 0D26  
                          u1771 0C66                            u1851 04F8                            u1595 0AC0  
                          u1691 0E23                            u1860 050B                            u2660 0AAE  
                          u1861 050A                            u2661 0AAD                            u1790 0C7A  
                          u1870 0534                            u2670 0B4B                            u1791 0C79  
                          u1871 0533                            u2671 0B4A                            u1880 0540  
                          u1785 0C6B                            u1881 053F                            u2665 0AAA  
                          u1890 0547                            u2770 0D94                            u1891 0546  
                          u1875 0530                            u2675 0B47                            u2771 0D93  
                          u2780 0DB3                            u2781 0DB2                            u2790 0BB7  
                          u2791 0BB6                            u2775 0D90                            u2785 0DAF  
                          u2970 0AE6                            u2795 0BB3                            u2971 0AE5  
                          i1l62 0B11                            i1l63 0B20                            i1l64 0B31  
                          i1l65 0B31                    __CFG_WRT$OFF 0000                            _main 0ADA  
                          _font 0312          is_deadzone@deadzoneLow 0049                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0012                   __CFG_IESO$OFF 0000  
                  ?_is_deadzone 0043                           ??_isr 0056                  ?_update_volume 0070  
                 ___fltol@sign1 0041                  ??_display_init 00A1                 __end_of___fladd 02EC  
                         ?_main 0070                   __CFG_WDTE$OFF 0000                 __end_of___fltol 07F7  
               __end_of___lwdiv 0D3A                           i1l220 0FC4                           i1l221 0FC3  
                         i1l310 068E                           i1l222 0FBF                           i1l311 0698  
                         i1l223 0FC2                           i1l224 0FF4                           i1l225 0FF4  
                         i1l314 0F3D                           i1l226 0FEE                           i1l227 0FF3  
                         i1l316 0F38                           i1l228 0FFF                           i1l317 0F7E  
                         i1l318 0F7D                           i1l350 0C5E                           i1l319 0F7E  
               __end_of___lwmod 0CA2                           i1l349 0C27                           i1l800 0276  
                         i1l801 027E                           i1l810 02DB                           i1l802 027D  
                         i1l811 02DF                           i1l803 02BA                           i1l475 0A62  
                         i1l812 02EB                           i1l804 02BA                           i1l476 0A6C  
                         i1l805 02B9                           i1l661 077A                           i1l477 0A81  
                         i1l741 0CE7                           i1l806 02D5                           i1l670 07D4  
                         i1l662 07F6                           i1l478 0A86                           i1l742 0CB9  
                         i1l671 07E5                           i1l663 07C3                           i1l743 0CAD  
                         i1l808 02C5                           i1l672 07F6                           i1l664 07AF  
                         i1l744 0CBE                           i1l809 02D4                           i1l761 0043  
                         i1l665 07B0                           i1l745 0CBF                           i1l770 00E5  
                         i1l762 0059                           i1l666 07C2                           i1l746 0CD8  
                         i1l771 00A8                           i1l763 0056                           i1l667 07E6  
                         i1l747 0CE6                           i1l780 019F                           i1l772 011E  
                         i1l764 0062                           i1l668 07D3                           i1l748 0CEC  
                         i1l781 015F                           i1l773 014C                           i1l765 006F  
                         i1l669 07DF                           i1l790 0229                           i1l782 02EB  
                         i1l774 0143                           i1l766 007B                           i1l791 0240  
                         i1l783 019E                           i1l775 011F                           i1l767 0091  
                         i1l792 0262                           i1l784 0187                           i1l776 012C  
                         i1l768 008E                           i1l793 0241                           i1l785 018A  
                         i1l777 012F                           i1l769 0099                           i1l794 024F  
                         i1l786 0190                           i1l778 0135                           i1l890 0703  
                         i1l787 0268                           i1l795 0256                           i1l779 014C  
                         i1l891 06E8                           i1l883 06B3                           i1l796 0259  
                         i1l788 021B                           i1l892 070A                           i1l884 06BB  
                         i1l797 0261                           i1l789 021A                           i1l893 0717  
                         i1l885 06CD                           i1l798 0267                           i1l894 070B  
                         i1l886 075A                           i1l799 027F                           i1l887 06E0  
                         i1l896 0722                           i1l888 06D2                           i1l897 0722  
                         i1l889 06E7                           i1l898 072E                           i1l899 0751  
                         _PORTA 0005                           _PORTC 0007                           _TRISC 0087  
                         _TRISD 0088           _activateSelectedRelay 0B72                  __CFG_FCMEN$OFF 0000  
                   _write_space 0A87                 __end_of_dpowers 048E         is_deadzone@deadzoneHigh 004B  
                         pclath 000A                __end_ofi1___wmul 0A87                           status 0003  
           i1___wmul@multiplier 0070                           wtemp0 007E                 __end_of_sprintf 05D3  
            __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 004E                  __CFG_MCLRE$OFF 0000  
               __initialization 0015                    __end_of_main 0B06                    __end_of_font 0484  
            handle_rotary@portA 0073              handle_rotary@portB 0075             _display_write_start 0A39  
                        ??_main 00C3                 _handle_potmeter 0F0D                  write_text@text 00B3  
                        _ADRESH 001E                          _ADRESL 009E            ?_display_write_start 0070  
                        i1l2101 079E                          i1l2111 07C9                          i1l2103 07A5  
                        i1l2201 00E6                          i1l2121 0030                          i1l2113 07D2  
                        i1l2105 07AE                          i1l2211 0133                          i1l2203 0102  
                        i1l2131 0048                          i1l2123 0037                          i1l2115 07D4  
                        i1l2107 07B0                          i1l2301 02CD                          i1l2221 0155  
                        i1l2213 0135                          i1l2205 0123                          i1l2141 0062  
                        i1l2133 004D                          i1l2125 003D                          i1l2117 07E6  
                        i1l2109 07C3                          i1l2311 02E6                          i1l2303 02D2  
                        i1l2231 017E                          i1l2223 015E                          i1l2215 013E  
                        i1l2207 012C                          i1l2151 0079                          i1l2143 0067  
                        i1l2135 0056                          i1l2127 0041                          i1l2119 07EB  
                        u200_20 07E4                          i1l2313 02EA                          i1l2305 02D5  
                        i1l2241 0199                          i1l2233 0187                          i1l2225 015F  
                        i1l2209 012F                          i1l2217 0143                          i1l2161 008F  
                        i1l2153 007B                          i1l2145 006D                          i1l2137 0057  
                        i1l2129 0043                          u200_21 07E3                          i1l2321 06B3  
                        i1l2307 02D9                          i1l2251 020B                          i1l2235 018A  
                        i1l2227 0176                          i1l2219 0150                          i1l2243 019F  
                        i1l2171 00AC                          i1l2155 0080                          i1l2163 0091  
                        i1l2147 006F                          i1l2139 0059                          i1l2091 077A  
                        i1l2331 06E0                          i1l2323 06C3                          i1l2315 069A  
                        i1l2309 02DB                          i1l2261 0241                          i1l2245 01B5  
                        i1l2253 021B                          i1l2237 018E                          i1l2229 017A  
                        i1l2181 00C0                          i1l2173 00B0                          i1l2165 009F  
                        i1l2157 0085                          i1l2149 0075                          i1l2093 078F  
                        i1l2085 075B                          i1l2341 0717                          i1l2333 06E8  
                        i1l2325 06CC                          i1l2317 069F                          i1l2501 0CDF  
                        i1l2271 0259                          i1l2263 024A                          i1l2255 0231  
                        i1l2247 0204                          i1l2239 0190                          i1l2191 00D4  
                        i1l2183 00C4                          i1l2175 00B4                          i1l2167 00A3  
                        i1l2159 008E                          i1l2095 0790                          i1l2087 0770  
                        i1l2351 074B                          i1l2343 071B                          i1l2335 06EC  
                        i1l2327 06CD                          i1l2319 06A3                          i1l2503 0CE7  
                        u201_20 07EB                          i1l2281 026D                          i1l2273 025E  
                        i1l2265 024E                          i1l2257 0236                          i1l2249 0206  
                        i1l2193 00D8                          i1l2185 00C8                          i1l2177 00B8  
                        i1l2169 00A8                          u201_21 07EA                          i1l2097 0798  
                        i1l2089 0779                          i1l2353 074F                          i1l2345 0726  
                        i1l2337 06FA                          i1l2329 06D2                          i1l2361 0A62  
                        i1l2505 0CEC                          i1l2291 0292                          i1l2283 0273  
                        i1l2267 0253                          i1l2259 023F                          i1l2275 0262  
                        i1l2195 00DC                          i1l2187 00CC                          i1l2179 00BC  
                        i1l2099 079A                          i1l2355 0751                          i1l2347 0730  
                        i1l2339 070B                          i1l2371 0A86                          i1l2363 0A66  
                        i1l2293 0296                          i1l2285 027A                          i1l2269 0256  
                        i1l2277 0268                          i1l2197 00E0                          i1l2189 00D0  
                        i1l2357 075A                          i1l2349 0746                          i1l2365 0A73  
                        i1l2701 0B0F                          i1l2295 02B4                          i1l2287 027F  
                        i1l2279 0269                          i1l2199 00E5                          i1l2367 0A7A  
                        i1l2359 0A5F                          i1l2471 066B                          i1l2463 05D3  
                        i1l2631 0FAD                          i1l2623 0F7F                          i1l2711 0B24  
                        i1l2703 0B11                          u210_20 00A3                          u202_20 0041  
                        i1l2297 02BF                          i1l2289 0284                          u210_21 00A2  
                        u202_21 0040                          i1l2369 0A81                          i1l2473 0679  
                        i1l2465 05F4                          i1l2481 0CA2                          i1l2641 0FD9  
                        i1l2633 0FB8                          i1l2625 0F93                          i1l2713 0B28  
                        i1l2705 0B17                          i1l2299 02C5                          i1l2475 0689  
                        i1l2467 062F                          i1l2491 0CB9                          i1l2483 0CA4  
                        i1l2651 0F0D                          i1l2643 0FDF                          i1l2635 0FBF  
                        i1l2627 0F9D                          i1l2715 0B2D                          i1l2707 0B1C  
                        i1l2477 068E                          i1l2469 066A                          i1l2493 0CBF  
                        i1l2485 0CAA                          i1l2661 0F72                          i1l2653 0F17  
                        i1l2645 0FE7                          i1l2629 0FA7                          i1l2637 0FC4  
                        i1l2709 0B20                          i1l2479 0698                          i1l2495 0CD0  
                        i1l2487 0CAD                          i1l2655 0F1D                          i1l2647 0FEE  
                        i1l2639 0FCF                          i1l2663 0C1E                          u211_20 0102  
                        u203_20 0048                          u211_21 0101                          u203_21 0047  
                        i1l2497 0CD6                          i1l2489 0CB4                          i1l2657 0F38  
                        i1l2649 0FFD                          i1l2665 0C26                          i1l2499 0CD8  
                        i1l2659 0F3D                          i1l2667 0C27                          u211_25 00FE  
                        u212_20 010D                          u204_20 004D                          u300_20 0B24  
                        u220_21 0168                          u212_21 010B                          u204_21 004C  
                        u300_21 0B23                          i1l2697 0B06                          u220_22 016F  
                        u220_23 0176                          i1l2699 0B0A                          u221_20 017A  
                        u213_20 010E                          u205_20 006D                          u221_21 0179  
                        u205_21 006C                          u230_20 0236                          u222_20 017E  
                        u214_20 0123                          u206_20 0079                          u230_21 0235  
                        u222_21 017D                          u214_21 0122                          u206_21 0078  
                        u223_20 018E                          u215_20 0133                          u207_20 0080  
                        u223_21 018D                          u215_21 0132                          u207_21 007F  
                        u231_25 0243                          u240_20 0296                          u232_20 024E  
                        u208_20 0085                          u240_21 0295                          u232_21 024D  
                        u208_21 0084                          u224_25 0192                          u216_25 0137  
                        u241_20 02A5                          u233_20 0253                          u225_20 01B5  
                        u217_20 014B                          u209_20 009F                          u233_21 0252  
                        u225_21 01B4                          u217_21 014A                          u209_21 009E  
                        u225_23 01B1                          u241_25 02A0                          u242_20 02B4  
                        u234_20 025E                          u226_20 01DB                          u218_20 0150  
                        u250_20 06C3                          u242_21 02B3                          u234_21 025D  
                        u226_21 01DC                          u218_21 014F                          u250_21 06C2  
                        u226_22 01E1                          u226_23 01E2                          u243_20 02BF  
                        u235_20 0266                          u227_20 01ED                          u219_20 0155  
                        u243_21 02BE                          u235_21 0265                          u227_21 01EE  
                        u219_21 0154                          u227_22 01F3                          u227_23 01F4  
                        u251_25 06D7                          u244_20 02C4                          u236_20 026D  
                        u228_20 020B                          u260_20 074B                          u252_20 06E6  
                        u244_21 02C3                          u236_21 026C                          u228_21 020A  
                        u260_21 074A                          u252_21 06E5                          u245_20 02D2  
                        u237_20 0273                          u229_20 0231                          u261_20 074F  
                        u245_21 02D1                          u237_21 0272                          u229_21 0230  
                        u261_21 074E                          u253_25 06FB                          u246_20 02D9  
                        u238_20 027A                          u254_20 0709                          u262_20 0A66  
                        u270_20 0CAA                          u246_21 02D8                          u238_21 0279  
                        u254_21 0708                          u262_21 0A65                          u270_21 0CA9  
                        u247_20 02EA                          u239_20 0284                          u247_21 02E9  
                        u239_21 0283                          u255_25 070F                          u263_25 0A6D  
                        u271_25 0CAE                          u192_20 0770                          u256_20 071B  
                        u248_20 069F                          u272_20 0CBD                          u192_21 076F  
                        u256_21 071A                          u248_21 069E                          u272_21 0CBC  
                        u264_25 0A74                          u193_20 0788                          u257_20 0721  
                        u249_20 06A3                          u265_20 0A80                          u281_20 0F9D  
                        u257_21 0720                          u249_21 06A2                          u265_21 0A7F  
                        u281_21 0F9C                          u193_25 0783                          u273_25 0CC0  
                        u281_25 0F99                          u194_20 079E                          u258_20 0726  
                        u274_20 0CD0                          u290_20 0F37                          u282_20 0FA7  
                        u194_21 079D                          u258_21 0725                          u274_21 0CCF  
                        u290_21 0F36                          u282_21 0FA6                          u274_25 0CCC  
                        u290_25 0F33                          u282_25 0FA3                          u195_20 07A5  
                        u259_20 073B                          u291_20 0F72                          u283_20 0FAD  
                        u195_21 07A4                          u291_21 0F71                          u283_21 0FAC  
                        u259_25 0736                          u275_25 0CD9                          u268_20 0679  
                        u276_20 0CE5                          u284_20 0FB8                          u292_20 0C25  
                        u268_21 0678                          u276_21 0CE4                          u284_21 0FB7  
                        u292_21 0C24                          u196_25 07B1                          u268_25 0675  
                        u197_20 07C1                          u269_20 0689                          u285_20 0FCF  
                        u293_20 0C35                          u197_21 07C0                          u269_21 0688  
                        u285_21 0FCE                          u269_25 0685                          u285_25 0FCB  
                        u293_25 0C30                          u198_20 07C9                          u286_20 0FD9  
                        u198_21 07C8                          u286_21 0FD8                          u286_25 0FD5  
                        u287_20 0FDF                          u287_21 0FDE                          u199_25 07D6  
                        u288_20 0FE7                          u288_21 0FE6                          u289_20 0F1D  
                        u289_21 0F1C                          u298_20 0B0A                          u298_21 0B09  
                        u299_20 0B17                          u299_21 0B16                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 075B                  __CFG_PWRTE$OFF 0000  
                     ??___fladd 0028                          ___wmul 0AB0                          __lastA 0060  
                        __lastB 005E                 ??_update_volume 00C1                       ??___fltol 003C  
                     ??___lwdiv 00A4                       ??___lwmod 00AC                          _config 0E39  
              __end_of_init_adc 0A5F                          _volume 00C9                 write_int@number 00BD  
        ?_activateSelectedRelay 0070               __end_ofi1___lwdiv 0CED                          saved_w 007E  
              __end_of_spiWrite 02FC                       ??_sprintf 00B2           ??_display_write_start 00A0  
                  ___xxtofl@arg 007A                    ___xxtofl@exp 0079                    ___xxtofl@val 0070  
       __end_of__initialization 002C          is_deadzone@currentStep 0043            __end_of_display_init 0D88  
                    ___fltol@f1 0038                  __pcstackCOMMON 0070            __size_of_is_deadzone 00C6  
       __end_of_handle_potmeter 0F7F                       ?i1___wmul 0070                      __pbssBANK0 005A  
                    __pbssBANK1 00C5           __end_of_handle_rotary 1000                      __pmaintext 0ADA  
         __end_of_poll_receiver 0C5F                         ?___wmul 00A0                      __pintentry 0004  
                       ?_config 0070                      ??i1___wmul 0074                  __selectedInput 00CB  
                     ?___xxtofl 0070                    ?_write_space 00B0                         _SSPSTAT 0094  
                    __stringtab 0300                       ?_init_adc 0070              __size_of_write_int 0036  
                    _lastVolume 00C7                       ?_spiWrite 0070                         ___fladd 0030  
              ?_handle_potmeter 0070                         ___fltol 075B                 __size_of___wmul 002A  
                       ___lwdiv 0CED                         ___lwmod 0C5F                 __size_of_config 0068  
                     _ANSELbits 0188                         __ptext1 0D88                         __ptext2 0BAB  
                       __ptext3 0A87                         __ptext4 0B3C                         __ptext5 0BE4  
                       __ptext6 0DD7                         __ptext7 0EA1                         __ptext8 0A39  
                       __ptext9 0A2A                __selectedDisplay 00CD                         _dpowers 0484  
             i1___lwdiv@divisor 0070                       _T2CONbits 0012                    __size_of_isr 0036  
             i1___lwdiv@counter 0077                      ??___xxtofl 0074                         _sprintf 049D  
         __size_of_display_init 004E            end_of_initialization 002C                      ??_init_adc 00A0  
                    ??_spiWrite 00A0                    __pstringtext 0300               __end_of_step_size 0490  
         i1___wmul@multiplicand 0072         ??_activateSelectedRelay 00A0                       _PORTBbits 0006  
                     _PORTCbits 0007                       _PORTDbits 0008            __inputUpdateRequired 0063  
    handle_potmeter@currentStep 0052                    _display_init 0D3A                     ___fladd@grs 0037  
             __end_of_write_int 0B72                   ___xxtofl@sign 0078                       _TRISAbits 0085  
                     _TRISBbits 0086                       _TRISCbits 0087                       _TRISEbits 0089  
                     i1___lwdiv 0CA2                    write_int@num 00BF                    write_space@i 00B3  
                 ?_update_input 0070                  __end_of___wmul 0ADA           __end_of_update_volume 0DD7  
                    _write_char 0DD7                      _write_font 0EA1                  __end_of_config 0EA1  
                    _write_text 0BE4     __end_of_display_write_start 0A48             start_initialization 0015  
             __size_ofi1___wmul 0028                     __end_of_isr 0B3C                      ?i1___lwdiv 0070  
          __size_of_write_space 0029                write_space@count 00B0                   ??_is_deadzone 0047  
                ??_update_input 00C1                        ??___wmul 00A4                        ??_config 00A1  
           update_volume@spaces 00C1                       ___fladd@a 0024                       ___fladd@b 0020  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
             __size_of___xxtofl 00C2          __CFG_FOSC$INTRC_CLKOUT 0000                     sprintf@flag 00B7  
                   sprintf@prec 00B8               __size_of_init_adc 0017                ___lwdiv@dividend 00A2  
                      ?___fladd 0020                        ?___fltol 0038                        ?___lwdiv 00A0  
                      ?___lwmod 00A8             __end_of_is_deadzone 0699                     ?_write_char 0070  
             __size_of_spiWrite 0010                     ?_write_font 00A6                     ?_write_text 00B3  
        __size_of_handle_rotary 0081                       _lastInput 00C5                ___lwdiv@quotient 00A5  
                   ??i1___lwdiv 0074                        ?_sprintf 00AE          __size_of_poll_receiver 0041  
               _is_deadzone$863 004D               interrupt_function 0004                  ___wmul@product 00A4  
                      _IOCBbits 0096                        _PIE1bits 008C                        _PIR1bits 000C  
__size_of_activateSelectedRelay 0039                      _ADCON0bits 001F                     __stringbase 0312  
                    _ADCON1bits 009F               ___wmul@multiplier 00A0   __end_of_activateSelectedRelay 0BAB  
                      i1___wmul 0A5F                       _step_size 048E                     write_char@c 00B2  
      __size_of_handle_potmeter 0072                     write_font@x 00AE                     write_text@c 00B5  
          __end_of_update_input 0BE4                       _write_int 0B3C               _display_write_end 0A2A  
           __size_of_write_char 0062             __size_of_write_font 006C             __size_of_write_text 003A  
                 _handle_rotary 0F7F              ?_display_write_end 0070                     _ignore_poll 0062  
                   _is_deadzone 05D3                   _poll_receiver 0C1E             ??_display_write_end 00A0  
              __size_of___fladd 02BC                __size_of___fltol 009C                __size_of___lwdiv 004D  
              __size_of___lwmod 0043              __end_of__stringtab 0312                      _ANSELHbits 0189  
                    sprintf@val 00B9                        ___xxtofl 0699                 ___lwdiv@divisor 00A0  
               ___lwdiv@counter 00A7                        __ptext10 0AB0                        __ptext11 049D  
                      __ptext20 0C1E                        __ptext12 0C5F                        __ptext21 0F7F  
                      __ptext13 0CED                        __ptext22 0F0D                        __ptext14 0E39  
                      __ptext23 0CA2                        __ptext15 0A48                        __ptext24 05D3  
                      __ptext16 0D3A                        __ptext25 0A5F                        __ptext17 02EC  
                      __ptext26 0699                        __ptext18 0B72                        __ptext27 075B  
                      __ptext19 0B06                        __ptext28 0030               __CFG_BOR4V$BOR21V 0000  
                    ?_write_int 00BD       __end_of_display_write_end 0A39                __size_of_sprintf 0136  
            i1___lwdiv@dividend 0072                        _ir_input 005A                  ?_handle_rotary 0070  
                      _init_adc 0A48                   __size_of_main 002C               write_font@fontPos 00A6  
      handle_potmeter@ad_result 0054                  ?_poll_receiver 0070                        _spiWrite 02EC  
            i1___lwdiv@quotient 0075                      _INTCONbits 000B                   ??_write_space 00B2  
             ??_handle_potmeter 0050                        intlevel1 0000                       sprintf@ap 00B6  
  __size_of_display_write_start 000F                       sprintf@sp 00BB                ___lwmod@dividend 00AA  
        __size_of_update_volume 004F                       stringcode 030A                      _OSCCONbits 008F  
                  ??_write_char 00B0                    ??_write_font 00A8                    ??_write_text 00B5  
                      sprintf@c 00BC                        sprintf@f 00AE           __size_of_update_input 0039  
               ___lwmod@divisor 00A8                 ___lwmod@counter 00AD                        stringtab 0300  
                   ??_write_int 00BF                   ___fladd@signs 0034      __size_of_display_write_end 000F  
               ??_handle_rotary 0070             __end_of_write_space 0AB0                    ___fladd@aexp 0035  
                  ___fladd@bexp 0036            is_deadzone@adcResult 0045              __end_of_write_char 0E39  
            __end_of_write_font 0F0D              __end_of_write_text 0C1E                 ??_poll_receiver 0070  
