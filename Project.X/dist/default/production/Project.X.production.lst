

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Jan 10 11:20:21 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_update_input
  1182                           	FNCALL	_main,_update_volume
  1183                           	FNCALL	_update_volume,_write_int
  1184                           	FNCALL	_update_volume,_write_space
  1185                           	FNCALL	_update_volume,_write_text
  1186                           	FNCALL	_update_input,_write_int
  1187                           	FNCALL	_update_input,_write_space
  1188                           	FNCALL	_update_input,_write_text
  1189                           	FNCALL	_write_space,_display_write_end
  1190                           	FNCALL	_write_space,_display_write_start
  1191                           	FNCALL	_write_space,_spiWrite
  1192                           	FNCALL	_write_int,_sprintf
  1193                           	FNCALL	_write_int,_write_char
  1194                           	FNCALL	_write_int,_write_text
  1195                           	FNCALL	_write_text,_write_char
  1196                           	FNCALL	_write_char,_write_font
  1197                           	FNCALL	_write_font,___wmul
  1198                           	FNCALL	_write_font,_display_write_end
  1199                           	FNCALL	_write_font,_display_write_start
  1200                           	FNCALL	_write_font,_spiWrite
  1201                           	FNCALL	_sprintf,___lwdiv
  1202                           	FNCALL	_sprintf,___lwmod
  1203                           	FNCALL	_config,_display_init
  1204                           	FNCALL	_config,_init_adc
  1205                           	FNCALL	_display_init,_spiWrite
  1206                           	FNROOT	_main
  1207                           	FNCALL	_isr,_handle_potmeter
  1208                           	FNCALL	_isr,_handle_rotary
  1209                           	FNCALL	_isr,_poll_receiver
  1210                           	FNCALL	_handle_potmeter,_is_deadzone
  1211                           	FNCALL	_handle_potmeter,i1___lwdiv
  1212                           	FNCALL	_is_deadzone,___fladd
  1213                           	FNCALL	_is_deadzone,___fltol
  1214                           	FNCALL	_is_deadzone,___xxtofl
  1215                           	FNCALL	_is_deadzone,i1___wmul
  1216                           	FNCALL	intlevel1,_isr
  1217                           	global	intlevel1
  1218                           	FNROOT	intlevel1
  1219                           	global	_font
  1220                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1221                           global __pstringtext
  1222                           __pstringtext:
  1223  0300                     stringtab:
  1224  0300                     	global    __stringtab
  1225                           __stringtab:
  1226  0300                     ;	String table - string pointers are 2 bytes each
  1227                           	btfsc	(btemp+1),7
  1228  0300  1BFF               	ljmp	stringcode
  1229  0301  2B0A               	bcf	status,7
  1230  0302  1383               	btfsc	(btemp+1),0
  1231  0303  187F               	bsf	status,7
  1232  0304  1783               	movf	indf,w
  1233  0305  0800               	incf fsr
  1234  0306  0A84               skipnz
  1235  0307  1903               incf btemp+1
  1236  0308  0AFF               	return
  1237  0309  0008               stringcode:
  1238  030A                     	movf btemp+1,w
  1239  030A  087F               andlw 7Fh
  1240  030B  397F               movwf	pclath
  1241  030C  008A               	movf	fsr,w
  1242  030D  0804               incf fsr
  1243  030E  0A84               skipnz
  1244  030F  1903               incf btemp+1
  1245  0310  0AFF               	movwf pc
  1246  0311  0082               	global __stringbase
  1247                           __stringbase:
  1248  0312                     	global    __end_of__stringtab
  1249                           __end_of__stringtab:
  1250  0312                     	file	"./Font.h"
  1251                           	line	4
  1252                           _font:
  1253  0312                     	retlw	03Eh
  1254  0312  343E               	retlw	0
  1255  0313  3400               
  1256                           	retlw	051h
  1257  0314  3451               	retlw	0
  1258  0315  3400               
  1259                           	retlw	049h
  1260  0316  3449               	retlw	0
  1261  0317  3400               
  1262                           	retlw	045h
  1263  0318  3445               	retlw	0
  1264  0319  3400               
  1265                           	retlw	03Eh
  1266  031A  343E               	retlw	0
  1267  031B  3400               
  1268                           	retlw	low(0)
  1269  031C  3400               	retlw	high(0)
  1270  031D  3400               
  1271                           	retlw	042h
  1272  031E  3442               	retlw	0
  1273  031F  3400               
  1274                           	retlw	07Fh
  1275  0320  347F               	retlw	0
  1276  0321  3400               
  1277                           	retlw	040h
  1278  0322  3440               	retlw	0
  1279  0323  3400               
  1280                           	retlw	low(0)
  1281  0324  3400               	retlw	high(0)
  1282  0325  3400               
  1283                           	retlw	042h
  1284  0326  3442               	retlw	0
  1285  0327  3400               
  1286                           	retlw	061h
  1287  0328  3461               	retlw	0
  1288  0329  3400               
  1289                           	retlw	051h
  1290  032A  3451               	retlw	0
  1291  032B  3400               
  1292                           	retlw	049h
  1293  032C  3449               	retlw	0
  1294  032D  3400               
  1295                           	retlw	046h
  1296  032E  3446               	retlw	0
  1297  032F  3400               
  1298                           	retlw	021h
  1299  0330  3421               	retlw	0
  1300  0331  3400               
  1301                           	retlw	041h
  1302  0332  3441               	retlw	0
  1303  0333  3400               
  1304                           	retlw	045h
  1305  0334  3445               	retlw	0
  1306  0335  3400               
  1307                           	retlw	04Bh
  1308  0336  344B               	retlw	0
  1309  0337  3400               
  1310                           	retlw	031h
  1311  0338  3431               	retlw	0
  1312  0339  3400               
  1313                           	retlw	018h
  1314  033A  3418               	retlw	0
  1315  033B  3400               
  1316                           	retlw	014h
  1317  033C  3414               	retlw	0
  1318  033D  3400               
  1319                           	retlw	012h
  1320  033E  3412               	retlw	0
  1321  033F  3400               
  1322                           	retlw	07Fh
  1323  0340  347F               	retlw	0
  1324  0341  3400               
  1325                           	retlw	010h
  1326  0342  3410               	retlw	0
  1327  0343  3400               
  1328                           	retlw	027h
  1329  0344  3427               	retlw	0
  1330  0345  3400               
  1331                           	retlw	045h
  1332  0346  3445               	retlw	0
  1333  0347  3400               
  1334                           	retlw	045h
  1335  0348  3445               	retlw	0
  1336  0349  3400               
  1337                           	retlw	045h
  1338  034A  3445               	retlw	0
  1339  034B  3400               
  1340                           	retlw	039h
  1341  034C  3439               	retlw	0
  1342  034D  3400               
  1343                           	retlw	03Ch
  1344  034E  343C               	retlw	0
  1345  034F  3400               
  1346                           	retlw	04Ah
  1347  0350  344A               	retlw	0
  1348  0351  3400               
  1349                           	retlw	049h
  1350  0352  3449               	retlw	0
  1351  0353  3400               
  1352                           	retlw	049h
  1353  0354  3449               	retlw	0
  1354  0355  3400               
  1355                           	retlw	030h
  1356  0356  3430               	retlw	0
  1357  0357  3400               
  1358                           	retlw	01h
  1359  0358  3401               	retlw	0
  1360  0359  3400               
  1361                           	retlw	071h
  1362  035A  3471               	retlw	0
  1363  035B  3400               
  1364                           	retlw	09h
  1365  035C  3409               	retlw	0
  1366  035D  3400               
  1367                           	retlw	05h
  1368  035E  3405               	retlw	0
  1369  035F  3400               
  1370                           	retlw	03h
  1371  0360  3403               	retlw	0
  1372  0361  3400               
  1373                           	retlw	036h
  1374  0362  3436               	retlw	0
  1375  0363  3400               
  1376                           	retlw	049h
  1377  0364  3449               	retlw	0
  1378  0365  3400               
  1379                           	retlw	049h
  1380  0366  3449               	retlw	0
  1381  0367  3400               
  1382                           	retlw	049h
  1383  0368  3449               	retlw	0
  1384  0369  3400               
  1385                           	retlw	036h
  1386  036A  3436               	retlw	0
  1387  036B  3400               
  1388                           	retlw	06h
  1389  036C  3406               	retlw	0
  1390  036D  3400               
  1391                           	retlw	049h
  1392  036E  3449               	retlw	0
  1393  036F  3400               
  1394                           	retlw	049h
  1395  0370  3449               	retlw	0
  1396  0371  3400               
  1397                           	retlw	029h
  1398  0372  3429               	retlw	0
  1399  0373  3400               
  1400                           	retlw	01Eh
  1401  0374  341E               	retlw	0
  1402  0375  3400               
  1403                           	retlw	07Eh
  1404  0376  347E               	retlw	0
  1405  0377  3400               
  1406                           	retlw	011h
  1407  0378  3411               	retlw	0
  1408  0379  3400               
  1409                           	retlw	011h
  1410  037A  3411               	retlw	0
  1411  037B  3400               
  1412                           	retlw	011h
  1413  037C  3411               	retlw	0
  1414  037D  3400               
  1415                           	retlw	07Eh
  1416  037E  347E               	retlw	0
  1417  037F  3400               
  1418                           	retlw	07Fh
  1419  0380  347F               	retlw	0
  1420  0381  3400               
  1421                           	retlw	049h
  1422  0382  3449               	retlw	0
  1423  0383  3400               
  1424                           	retlw	049h
  1425  0384  3449               	retlw	0
  1426  0385  3400               
  1427                           	retlw	049h
  1428  0386  3449               	retlw	0
  1429  0387  3400               
  1430                           	retlw	036h
  1431  0388  3436               	retlw	0
  1432  0389  3400               
  1433                           	retlw	03Eh
  1434  038A  343E               	retlw	0
  1435  038B  3400               
  1436                           	retlw	041h
  1437  038C  3441               	retlw	0
  1438  038D  3400               
  1439                           	retlw	041h
  1440  038E  3441               	retlw	0
  1441  038F  3400               
  1442                           	retlw	041h
  1443  0390  3441               	retlw	0
  1444  0391  3400               
  1445                           	retlw	022h
  1446  0392  3422               	retlw	0
  1447  0393  3400               
  1448                           	retlw	07Fh
  1449  0394  347F               	retlw	0
  1450  0395  3400               
  1451                           	retlw	041h
  1452  0396  3441               	retlw	0
  1453  0397  3400               
  1454                           	retlw	041h
  1455  0398  3441               	retlw	0
  1456  0399  3400               
  1457                           	retlw	022h
  1458  039A  3422               	retlw	0
  1459  039B  3400               
  1460                           	retlw	01Ch
  1461  039C  341C               	retlw	0
  1462  039D  3400               
  1463                           	retlw	07Fh
  1464  039E  347F               	retlw	0
  1465  039F  3400               
  1466                           	retlw	049h
  1467  03A0  3449               	retlw	0
  1468  03A1  3400               
  1469                           	retlw	049h
  1470  03A2  3449               	retlw	0
  1471  03A3  3400               
  1472                           	retlw	049h
  1473  03A4  3449               	retlw	0
  1474  03A5  3400               
  1475                           	retlw	041h
  1476  03A6  3441               	retlw	0
  1477  03A7  3400               
  1478                           	retlw	07Fh
  1479  03A8  347F               	retlw	0
  1480  03A9  3400               
  1481                           	retlw	09h
  1482  03AA  3409               	retlw	0
  1483  03AB  3400               
  1484                           	retlw	09h
  1485  03AC  3409               	retlw	0
  1486  03AD  3400               
  1487                           	retlw	01h
  1488  03AE  3401               	retlw	0
  1489  03AF  3400               
  1490                           	retlw	01h
  1491  03B0  3401               	retlw	0
  1492  03B1  3400               
  1493                           	retlw	03Eh
  1494  03B2  343E               	retlw	0
  1495  03B3  3400               
  1496                           	retlw	041h
  1497  03B4  3441               	retlw	0
  1498  03B5  3400               
  1499                           	retlw	041h
  1500  03B6  3441               	retlw	0
  1501  03B7  3400               
  1502                           	retlw	051h
  1503  03B8  3451               	retlw	0
  1504  03B9  3400               
  1505                           	retlw	032h
  1506  03BA  3432               	retlw	0
  1507  03BB  3400               
  1508                           	retlw	07Fh
  1509  03BC  347F               	retlw	0
  1510  03BD  3400               
  1511                           	retlw	08h
  1512  03BE  3408               	retlw	0
  1513  03BF  3400               
  1514                           	retlw	08h
  1515  03C0  3408               	retlw	0
  1516  03C1  3400               
  1517                           	retlw	08h
  1518  03C2  3408               	retlw	0
  1519  03C3  3400               
  1520                           	retlw	07Fh
  1521  03C4  347F               	retlw	0
  1522  03C5  3400               
  1523                           	retlw	low(0)
  1524  03C6  3400               	retlw	high(0)
  1525  03C7  3400               
  1526                           	retlw	041h
  1527  03C8  3441               	retlw	0
  1528  03C9  3400               
  1529                           	retlw	07Fh
  1530  03CA  347F               	retlw	0
  1531  03CB  3400               
  1532                           	retlw	041h
  1533  03CC  3441               	retlw	0
  1534  03CD  3400               
  1535                           	retlw	low(0)
  1536  03CE  3400               	retlw	high(0)
  1537  03CF  3400               
  1538                           	retlw	020h
  1539  03D0  3420               	retlw	0
  1540  03D1  3400               
  1541                           	retlw	040h
  1542  03D2  3440               	retlw	0
  1543  03D3  3400               
  1544                           	retlw	041h
  1545  03D4  3441               	retlw	0
  1546  03D5  3400               
  1547                           	retlw	03Fh
  1548  03D6  343F               	retlw	0
  1549  03D7  3400               
  1550                           	retlw	01h
  1551  03D8  3401               	retlw	0
  1552  03D9  3400               
  1553                           	retlw	07Fh
  1554  03DA  347F               	retlw	0
  1555  03DB  3400               
  1556                           	retlw	08h
  1557  03DC  3408               	retlw	0
  1558  03DD  3400               
  1559                           	retlw	014h
  1560  03DE  3414               	retlw	0
  1561  03DF  3400               
  1562                           	retlw	022h
  1563  03E0  3422               	retlw	0
  1564  03E1  3400               
  1565                           	retlw	041h
  1566  03E2  3441               	retlw	0
  1567  03E3  3400               
  1568                           	retlw	07Fh
  1569  03E4  347F               	retlw	0
  1570  03E5  3400               
  1571                           	retlw	040h
  1572  03E6  3440               	retlw	0
  1573  03E7  3400               
  1574                           	retlw	040h
  1575  03E8  3440               	retlw	0
  1576  03E9  3400               
  1577                           	retlw	040h
  1578  03EA  3440               	retlw	0
  1579  03EB  3400               
  1580                           	retlw	040h
  1581  03EC  3440               	retlw	0
  1582  03ED  3400               
  1583                           	retlw	07Fh
  1584  03EE  347F               	retlw	0
  1585  03EF  3400               
  1586                           	retlw	02h
  1587  03F0  3402               	retlw	0
  1588  03F1  3400               
  1589                           	retlw	04h
  1590  03F2  3404               	retlw	0
  1591  03F3  3400               
  1592                           	retlw	02h
  1593  03F4  3402               	retlw	0
  1594  03F5  3400               
  1595                           	retlw	07Fh
  1596  03F6  347F               	retlw	0
  1597  03F7  3400               
  1598                           	retlw	07Fh
  1599  03F8  347F               	retlw	0
  1600  03F9  3400               
  1601                           	retlw	04h
  1602  03FA  3404               	retlw	0
  1603  03FB  3400               
  1604                           	retlw	08h
  1605  03FC  3408               	retlw	0
  1606  03FD  3400               
  1607                           	retlw	010h
  1608  03FE  3410               	retlw	0
  1609  03FF  3400               
  1610                           	retlw	07Fh
  1611  0400  347F               	retlw	0
  1612  0401  3400               
  1613                           	retlw	03Eh
  1614  0402  343E               	retlw	0
  1615  0403  3400               
  1616                           	retlw	041h
  1617  0404  3441               	retlw	0
  1618  0405  3400               
  1619                           	retlw	041h
  1620  0406  3441               	retlw	0
  1621  0407  3400               
  1622                           	retlw	041h
  1623  0408  3441               	retlw	0
  1624  0409  3400               
  1625                           	retlw	03Eh
  1626  040A  343E               	retlw	0
  1627  040B  3400               
  1628                           	retlw	07Fh
  1629  040C  347F               	retlw	0
  1630  040D  3400               
  1631                           	retlw	09h
  1632  040E  3409               	retlw	0
  1633  040F  3400               
  1634                           	retlw	09h
  1635  0410  3409               	retlw	0
  1636  0411  3400               
  1637                           	retlw	09h
  1638  0412  3409               	retlw	0
  1639  0413  3400               
  1640                           	retlw	06h
  1641  0414  3406               	retlw	0
  1642  0415  3400               
  1643                           	retlw	03Eh
  1644  0416  343E               	retlw	0
  1645  0417  3400               
  1646                           	retlw	041h
  1647  0418  3441               	retlw	0
  1648  0419  3400               
  1649                           	retlw	051h
  1650  041A  3451               	retlw	0
  1651  041B  3400               
  1652                           	retlw	021h
  1653  041C  3421               	retlw	0
  1654  041D  3400               
  1655                           	retlw	05Eh
  1656  041E  345E               	retlw	0
  1657  041F  3400               
  1658                           	retlw	07Fh
  1659  0420  347F               	retlw	0
  1660  0421  3400               
  1661                           	retlw	09h
  1662  0422  3409               	retlw	0
  1663  0423  3400               
  1664                           	retlw	019h
  1665  0424  3419               	retlw	0
  1666  0425  3400               
  1667                           	retlw	029h
  1668  0426  3429               	retlw	0
  1669  0427  3400               
  1670                           	retlw	046h
  1671  0428  3446               	retlw	0
  1672  0429  3400               
  1673                           	retlw	046h
  1674  042A  3446               	retlw	0
  1675  042B  3400               
  1676                           	retlw	049h
  1677  042C  3449               	retlw	0
  1678  042D  3400               
  1679                           	retlw	049h
  1680  042E  3449               	retlw	0
  1681  042F  3400               
  1682                           	retlw	049h
  1683  0430  3449               	retlw	0
  1684  0431  3400               
  1685                           	retlw	031h
  1686  0432  3431               	retlw	0
  1687  0433  3400               
  1688                           	retlw	01h
  1689  0434  3401               	retlw	0
  1690  0435  3400               
  1691                           	retlw	01h
  1692  0436  3401               	retlw	0
  1693  0437  3400               
  1694                           	retlw	07Fh
  1695  0438  347F               	retlw	0
  1696  0439  3400               
  1697                           	retlw	01h
  1698  043A  3401               	retlw	0
  1699  043B  3400               
  1700                           	retlw	01h
  1701  043C  3401               	retlw	0
  1702  043D  3400               
  1703                           	retlw	03Fh
  1704  043E  343F               	retlw	0
  1705  043F  3400               
  1706                           	retlw	040h
  1707  0440  3440               	retlw	0
  1708  0441  3400               
  1709                           	retlw	040h
  1710  0442  3440               	retlw	0
  1711  0443  3400               
  1712                           	retlw	040h
  1713  0444  3440               	retlw	0
  1714  0445  3400               
  1715                           	retlw	03Fh
  1716  0446  343F               	retlw	0
  1717  0447  3400               
  1718                           	retlw	01Fh
  1719  0448  341F               	retlw	0
  1720  0449  3400               
  1721                           	retlw	020h
  1722  044A  3420               	retlw	0
  1723  044B  3400               
  1724                           	retlw	040h
  1725  044C  3440               	retlw	0
  1726  044D  3400               
  1727                           	retlw	020h
  1728  044E  3420               	retlw	0
  1729  044F  3400               
  1730                           	retlw	01Fh
  1731  0450  341F               	retlw	0
  1732  0451  3400               
  1733                           	retlw	07Fh
  1734  0452  347F               	retlw	0
  1735  0453  3400               
  1736                           	retlw	020h
  1737  0454  3420               	retlw	0
  1738  0455  3400               
  1739                           	retlw	018h
  1740  0456  3418               	retlw	0
  1741  0457  3400               
  1742                           	retlw	020h
  1743  0458  3420               	retlw	0
  1744  0459  3400               
  1745                           	retlw	07Fh
  1746  045A  347F               	retlw	0
  1747  045B  3400               
  1748                           	retlw	063h
  1749  045C  3463               	retlw	0
  1750  045D  3400               
  1751                           	retlw	014h
  1752  045E  3414               	retlw	0
  1753  045F  3400               
  1754                           	retlw	08h
  1755  0460  3408               	retlw	0
  1756  0461  3400               
  1757                           	retlw	014h
  1758  0462  3414               	retlw	0
  1759  0463  3400               
  1760                           	retlw	063h
  1761  0464  3463               	retlw	0
  1762  0465  3400               
  1763                           	retlw	03h
  1764  0466  3403               	retlw	0
  1765  0467  3400               
  1766                           	retlw	04h
  1767  0468  3404               	retlw	0
  1768  0469  3400               
  1769                           	retlw	078h
  1770  046A  3478               	retlw	0
  1771  046B  3400               
  1772                           	retlw	04h
  1773  046C  3404               	retlw	0
  1774  046D  3400               
  1775                           	retlw	03h
  1776  046E  3403               	retlw	0
  1777  046F  3400               
  1778                           	retlw	061h
  1779  0470  3461               	retlw	0
  1780  0471  3400               
  1781                           	retlw	051h
  1782  0472  3451               	retlw	0
  1783  0473  3400               
  1784                           	retlw	049h
  1785  0474  3449               	retlw	0
  1786  0475  3400               
  1787                           	retlw	045h
  1788  0476  3445               	retlw	0
  1789  0477  3400               
  1790                           	retlw	043h
  1791  0478  3443               	retlw	0
  1792  0479  3400               
  1793                           	retlw	low(0)
  1794  047A  3400               	retlw	high(0)
  1795  047B  3400               
  1796                           	retlw	low(0)
  1797  047C  3400               	retlw	high(0)
  1798  047D  3400               
  1799                           	retlw	low(0)
  1800  047E  3400               	retlw	high(0)
  1801  047F  3400               
  1802                           	retlw	low(0)
  1803  0480  3400               	retlw	high(0)
  1804  0481  3400               
  1805                           	retlw	low(0)
  1806  0482  3400               	retlw	high(0)
  1807  0483  3400               
  1808                           	global __end_of_font
  1809                           __end_of_font:
  1810  0484                     	global	_dpowers
  1811                           psect	stringtext
  1812                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  1813                           	line	358
  1814                           _dpowers:
  1815  0484                     	retlw	01h
  1816  0484  3401               	retlw	0
  1817  0485  3400               
  1818                           	retlw	0Ah
  1819  0486  340A               	retlw	0
  1820  0487  3400               
  1821                           	retlw	064h
  1822  0488  3464               	retlw	0
  1823  0489  3400               
  1824                           	retlw	0E8h
  1825  048A  34E8               	retlw	03h
  1826  048B  3403               
  1827                           	retlw	010h
  1828  048C  3410               	retlw	027h
  1829  048D  3427               
  1830                           	global __end_of_dpowers
  1831                           __end_of_dpowers:
  1832  048E                     	global	_step_size
  1833                           psect	stringtext
  1834                           	file	"./Volume.h"
  1835                           	line	5
  1836                           _step_size:
  1837  048E                     	retlw	019h
  1838  048E  3419               	retlw	0
  1839  048F  3400               
  1840                           	global __end_of_step_size
  1841                           __end_of_step_size:
  1842  0490                     	global	_font
  1843                           	global	_dpowers
  1844                           	global	_step_size
  1845                           	global	_ir_input
  1846                           	global	__lastB
  1847                           	global	__lastA
  1848                           	global	_ignore_poll
  1849                           	global	__inputUpdateRequired
  1850                           	global	_lastInput
  1851                           	global	_lastVolume
  1852                           	global	_volume
  1853                           	global	__selectedInput
  1854                           	global	__selectedDisplay
  1855                           	global	_T2CONbits
  1856                           _T2CONbits	set	0x12
  1857  0012                     	global	_ADRESH
  1858                           _ADRESH	set	0x1E
  1859  001E                     	global	_PORTC
  1860                           _PORTC	set	0x7
  1861  0007                     	global	_PORTBbits
  1862                           _PORTBbits	set	0x6
  1863  0006                     	global	_PORTA
  1864                           _PORTA	set	0x5
  1865  0005                     	global	_SSPBUF
  1866                           _SSPBUF	set	0x13
  1867  0013                     	global	_PORTCbits
  1868                           _PORTCbits	set	0x7
  1869  0007                     	global	_PORTDbits
  1870                           _PORTDbits	set	0x8
  1871  0008                     	global	_SSPCON
  1872                           _SSPCON	set	0x14
  1873  0014                     	global	_PIR1bits
  1874                           _PIR1bits	set	0xC
  1875  000C                     	global	_INTCONbits
  1876                           _INTCONbits	set	0xB
  1877  000B                     	global	_ADCON0bits
  1878                           _ADCON0bits	set	0x1F
  1879  001F                     	global	_ADRESL
  1880                           _ADRESL	set	0x9E
  1881  009E                     	global	_PIE1bits
  1882                           _PIE1bits	set	0x8C
  1883  008C                     	global	_ADCON1bits
  1884                           _ADCON1bits	set	0x9F
  1885  009F                     	global	_IOCBbits
  1886                           _IOCBbits	set	0x96
  1887  0096                     	global	_TRISCbits
  1888                           _TRISCbits	set	0x87
  1889  0087                     	global	_TRISEbits
  1890                           _TRISEbits	set	0x89
  1891  0089                     	global	_TRISBbits
  1892                           _TRISBbits	set	0x86
  1893  0086                     	global	_TRISAbits
  1894                           _TRISAbits	set	0x85
  1895  0085                     	global	_OSCCONbits
  1896                           _OSCCONbits	set	0x8F
  1897  008F                     	global	_SSPSTATbits
  1898                           _SSPSTATbits	set	0x94
  1899  0094                     	global	_TRISC
  1900                           _TRISC	set	0x87
  1901  0087                     	global	_TRISD
  1902                           _TRISD	set	0x88
  1903  0088                     	global	_SSPSTAT
  1904                           _SSPSTAT	set	0x94
  1905  0094                     	global	_PR2
  1906                           _PR2	set	0x92
  1907  0092                     	global	_ANSELbits
  1908                           _ANSELbits	set	0x188
  1909  0188                     	global	_ANSELHbits
  1910                           _ANSELHbits	set	0x189
  1911  0189                     	
  1912                           STR_1:	
  1913  0490                     	retlw	73	;'I'
  1914  0490  3449               	retlw	78	;'N'
  1915  0491  344E               	retlw	80	;'P'
  1916  0492  3450               	retlw	85	;'U'
  1917  0493  3455               	retlw	84	;'T'
  1918  0494  3454               	retlw	0
  1919  0495  3400               psect	stringtext
  1920                           	
  1921                           STR_2:	
  1922  0496                     	retlw	86	;'V'
  1923  0496  3456               	retlw	79	;'O'
  1924  0497  344F               	retlw	76	;'L'
  1925  0498  344C               	retlw	0
  1926  0499  3400               psect	stringtext
  1927                           	
  1928                           STR_3:	
  1929  049A                     	retlw	37	;'%'
  1930  049A  3425               	retlw	100	;'d'
  1931  049B  3464               	retlw	0
  1932  049C  3400               psect	stringtext
  1933                           ; #config settings
  1934                           global __CFG_FOSC$INTRC_CLKOUT
  1935                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1936  0000                     global __CFG_WDTE$OFF
  1937                           __CFG_WDTE$OFF equ 0x0
  1938  0000                     global __CFG_PWRTE$OFF
  1939                           __CFG_PWRTE$OFF equ 0x0
  1940  0000                     global __CFG_MCLRE$OFF
  1941                           __CFG_MCLRE$OFF equ 0x0
  1942  0000                     global __CFG_CP$OFF
  1943                           __CFG_CP$OFF equ 0x0
  1944  0000                     global __CFG_CPD$OFF
  1945                           __CFG_CPD$OFF equ 0x0
  1946  0000                     global __CFG_BOREN$ON
  1947                           __CFG_BOREN$ON equ 0x0
  1948  0000                     global __CFG_IESO$OFF
  1949                           __CFG_IESO$OFF equ 0x0
  1950  0000                     global __CFG_FCMEN$OFF
  1951                           __CFG_FCMEN$OFF equ 0x0
  1952  0000                     global __CFG_LVP$OFF
  1953                           __CFG_LVP$OFF equ 0x0
  1954  0000                     global __CFG_BOR4V$BOR21V
  1955                           __CFG_BOR4V$BOR21V equ 0x0
  1956  0000                     global __CFG_WRT$OFF
  1957                           __CFG_WRT$OFF equ 0x0
  1958  0000                     	file	"/tmp/xcX7K1raD"
  1959                           	line	#
  1960                           psect cinit,class=CODE,delta=2
  1961                           global start_initialization
  1962                           start_initialization:
  1963  0015                     
  1964                           global __initialization
  1965                           __initialization:
  1966  0015                     psect	bssBANK0,class=BANK0,space=1,noexec
  1967                           global __pbssBANK0
  1968                           __pbssBANK0:
  1969  005A                     _ir_input:
  1970  005A                            ds      4
  1971  005A                     
  1972                           __lastB:
  1973  005E                            ds      2
  1974  005E                     
  1975                           __lastA:
  1976  0060                            ds      2
  1977  0060                     
  1978                           _ignore_poll:
  1979  0062                            ds      1
  1980  0062                     
  1981                           __inputUpdateRequired:
  1982  0063                            ds      1
  1983  0063                     
  1984                           psect	bssBANK1,class=BANK1,space=1,noexec
  1985                           global __pbssBANK1
  1986                           __pbssBANK1:
  1987  00C5                     _lastInput:
  1988  00C5                            ds      2
  1989  00C5                     
  1990                           _lastVolume:
  1991  00C7                            ds      2
  1992  00C7                     
  1993                           _volume:
  1994  00C9                            ds      2
  1995  00C9                     
  1996                           __selectedInput:
  1997  00CB                            ds      2
  1998  00CB                     
  1999                           __selectedDisplay:
  2000  00CD                            ds      1
  2001  00CD                     
  2002                           	file	"/tmp/xcX7K1raD"
  2003                           	line	#
  2004                           ; Clear objects allocated to BANK0
  2005                           psect cinit,class=CODE,delta=2,merge=1
  2006                           	bcf	status, 5	;RP0=0, select bank0
  2007  0015  1283               	bcf	status, 6	;RP1=0, select bank0
  2008  0016  1303               	clrf	((__pbssBANK0)+0)&07Fh
  2009  0017  01DA               	clrf	((__pbssBANK0)+1)&07Fh
  2010  0018  01DB               	clrf	((__pbssBANK0)+2)&07Fh
  2011  0019  01DC               	clrf	((__pbssBANK0)+3)&07Fh
  2012  001A  01DD               	clrf	((__pbssBANK0)+4)&07Fh
  2013  001B  01DE               	clrf	((__pbssBANK0)+5)&07Fh
  2014  001C  01DF               	clrf	((__pbssBANK0)+6)&07Fh
  2015  001D  01E0               	clrf	((__pbssBANK0)+7)&07Fh
  2016  001E  01E1               	clrf	((__pbssBANK0)+8)&07Fh
  2017  001F  01E2               	clrf	((__pbssBANK0)+9)&07Fh
  2018  0020  01E3               ; Clear objects allocated to BANK1
  2019                           psect cinit,class=CODE,delta=2,merge=1
  2020                           	bsf	status, 5	;RP0=1, select bank1
  2021  0021  1683               	bcf	status, 6	;RP1=0, select bank1
  2022  0022  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2023  0023  01C5               	clrf	((__pbssBANK1)+1)&07Fh
  2024  0024  01C6               	clrf	((__pbssBANK1)+2)&07Fh
  2025  0025  01C7               	clrf	((__pbssBANK1)+3)&07Fh
  2026  0026  01C8               	clrf	((__pbssBANK1)+4)&07Fh
  2027  0027  01C9               	clrf	((__pbssBANK1)+5)&07Fh
  2028  0028  01CA               	clrf	((__pbssBANK1)+6)&07Fh
  2029  0029  01CB               	clrf	((__pbssBANK1)+7)&07Fh
  2030  002A  01CC               	clrf	((__pbssBANK1)+8)&07Fh
  2031  002B  01CD               psect cinit,class=CODE,delta=2,merge=1
  2032                           global end_of_initialization,__end_of__initialization
  2033                           
  2034                           ;End of C runtime variable initialization code
  2035                           
  2036                           end_of_initialization:
  2037  002C                     __end_of__initialization:
  2038  002C                     clrf status
  2039  002C  0183               ljmp _main	;jump to C main() function
  2040  002D  120A  158A  2A84   psect	cstackBANK1,class=BANK1,space=1,noexec
  2041                           global __pcstackBANK1
  2042                           __pcstackBANK1:
  2043  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2044  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2045  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2046  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2047  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2048  00A0                     	global	?___wmul
  2049                           ?___wmul:	; 2 bytes @ 0x0
  2050  00A0                     	global	?___lwdiv
  2051                           ?___lwdiv:	; 2 bytes @ 0x0
  2052  00A0                     	global	spiWrite@data
  2053                           spiWrite@data:	; 1 bytes @ 0x0
  2054  00A0                     	global	___wmul@multiplier
  2055                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2056  00A0                     	global	___lwdiv@divisor
  2057                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2058  00A0                     	ds	1
  2059  00A0                     ??_config:	; 1 bytes @ 0x1
  2060  00A1                     ?_write_space:	; 1 bytes @ 0x1
  2061  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2062  00A1                     	global	write_space@count
  2063                           write_space@count:	; 2 bytes @ 0x1
  2064  00A1                     	ds	1
  2065  00A1                     	global	___wmul@multiplicand
  2066                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2067  00A2                     	global	___lwdiv@dividend
  2068                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2069  00A2                     	ds	1
  2070  00A2                     ??_write_space:	; 1 bytes @ 0x3
  2071  00A3                     	ds	1
  2072  00A3                     ??___wmul:	; 1 bytes @ 0x4
  2073  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2074  00A4                     	global	write_space@i
  2075                           write_space@i:	; 2 bytes @ 0x4
  2076  00A4                     	global	___wmul@product
  2077                           ___wmul@product:	; 2 bytes @ 0x4
  2078  00A4                     	ds	1
  2079  00A4                     	global	___lwdiv@quotient
  2080                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2081  00A5                     	ds	1
  2082  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2083  00A6                     	global	write_space@x
  2084                           write_space@x:	; 2 bytes @ 0x6
  2085  00A6                     	global	write_font@fontPos
  2086                           write_font@fontPos:	; 2 bytes @ 0x6
  2087  00A6                     	ds	1
  2088  00A6                     	global	___lwdiv@counter
  2089                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2090  00A7                     	ds	1
  2091  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2092  00A8                     	global	?___lwmod
  2093                           ?___lwmod:	; 2 bytes @ 0x8
  2094  00A8                     	global	___lwmod@divisor
  2095                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2096  00A8                     	ds	2
  2097  00A8                     	global	___lwmod@dividend
  2098                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2099  00AA                     	ds	2
  2100  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2101  00AC                     	ds	1
  2102  00AC                     	global	___lwmod@counter
  2103                           ___lwmod@counter:	; 1 bytes @ 0xD
  2104  00AD                     	ds	1
  2105  00AD                     	global	?_sprintf
  2106                           ?_sprintf:	; 2 bytes @ 0xE
  2107  00AE                     	global	write_font@x
  2108                           write_font@x:	; 2 bytes @ 0xE
  2109  00AE                     	global	sprintf@f
  2110                           sprintf@f:	; 2 bytes @ 0xE
  2111  00AE                     	ds	2
  2112  00AE                     ??_write_char:	; 1 bytes @ 0x10
  2113  00B0                     	global	write_char@pos
  2114                           write_char@pos:	; 2 bytes @ 0x10
  2115  00B0                     	ds	2
  2116  00B0                     ??_sprintf:	; 1 bytes @ 0x12
  2117  00B2                     	global	write_char@c
  2118                           write_char@c:	; 1 bytes @ 0x12
  2119  00B2                     	ds	1
  2120  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2121  00B3                     	global	write_text@text
  2122                           write_text@text:	; 2 bytes @ 0x13
  2123  00B3                     	ds	2
  2124  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2125  00B5                     	global	write_text@c
  2126                           write_text@c:	; 2 bytes @ 0x15
  2127  00B5                     	ds	1
  2128  00B5                     	global	sprintf@ap
  2129                           sprintf@ap:	; 1 bytes @ 0x16
  2130  00B6                     	ds	1
  2131  00B6                     	global	sprintf@flag
  2132                           sprintf@flag:	; 1 bytes @ 0x17
  2133  00B7                     	ds	1
  2134  00B7                     	global	sprintf@prec
  2135                           sprintf@prec:	; 1 bytes @ 0x18
  2136  00B8                     	ds	1
  2137  00B8                     	global	sprintf@val
  2138                           sprintf@val:	; 2 bytes @ 0x19
  2139  00B9                     	ds	2
  2140  00B9                     	global	sprintf@sp
  2141                           sprintf@sp:	; 1 bytes @ 0x1B
  2142  00BB                     	ds	1
  2143  00BB                     	global	sprintf@c
  2144                           sprintf@c:	; 1 bytes @ 0x1C
  2145  00BC                     	ds	1
  2146  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2147  00BD                     	global	write_int@number
  2148                           write_int@number:	; 2 bytes @ 0x1D
  2149  00BD                     	ds	2
  2150  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2151  00BF                     	global	write_int@num
  2152                           write_int@num:	; 2 bytes @ 0x1F
  2153  00BF                     	ds	2
  2154  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2155  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2156  00C1                     	global	update_volume@spaces
  2157                           update_volume@spaces:	; 2 bytes @ 0x21
  2158  00C1                     	ds	2
  2159  00C1                     ??_main:	; 1 bytes @ 0x23
  2160  00C3                     	ds	2
  2161  00C3                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2162                           global __pcstackCOMMON
  2163                           __pcstackCOMMON:
  2164  0070                     ?_config:	; 1 bytes @ 0x0
  2165  0070                     ?_update_volume:	; 1 bytes @ 0x0
  2166  0070                     ?_update_input:	; 1 bytes @ 0x0
  2167  0070                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2168  0070                     ?_handle_rotary:	; 1 bytes @ 0x0
  2169  0070                     ??_handle_rotary:	; 1 bytes @ 0x0
  2170  0070                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2171  0070                     ?_poll_receiver:	; 1 bytes @ 0x0
  2172  0070                     ??_poll_receiver:	; 1 bytes @ 0x0
  2173  0070                     ?_spiWrite:	; 1 bytes @ 0x0
  2174  0070                     ?_display_write_start:	; 1 bytes @ 0x0
  2175  0070                     ?_display_write_end:	; 1 bytes @ 0x0
  2176  0070                     ?_write_char:	; 1 bytes @ 0x0
  2177  0070                     ?_init_adc:	; 1 bytes @ 0x0
  2178  0070                     ?_main:	; 1 bytes @ 0x0
  2179  0070                     ?_isr:	; 1 bytes @ 0x0
  2180  0070                     ?_display_init:	; 1 bytes @ 0x0
  2181  0070                     	global	?i1___wmul
  2182                           ?i1___wmul:	; 2 bytes @ 0x0
  2183  0070                     	global	?i1___lwdiv
  2184                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2185  0070                     	global	?___xxtofl
  2186                           ?___xxtofl:	; 4 bytes @ 0x0
  2187  0070                     	global	i1___wmul@multiplier
  2188                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2189  0070                     	global	i1___lwdiv@divisor
  2190                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2191  0070                     	global	___xxtofl@val
  2192                           ___xxtofl@val:	; 4 bytes @ 0x0
  2193  0070                     	ds	2
  2194  0070                     	global	i1___wmul@multiplicand
  2195                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2196  0072                     	global	i1___lwdiv@dividend
  2197                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2198  0072                     	ds	1
  2199  0072                     	global	handle_rotary@portA
  2200                           handle_rotary@portA:	; 2 bytes @ 0x3
  2201  0073                     	ds	1
  2202  0073                     ??___xxtofl:	; 1 bytes @ 0x4
  2203  0074                     ??i1___wmul:	; 1 bytes @ 0x4
  2204  0074                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2205  0074                     	global	i1___wmul@product
  2206                           i1___wmul@product:	; 2 bytes @ 0x4
  2207  0074                     	ds	1
  2208  0074                     	global	handle_rotary@portB
  2209                           handle_rotary@portB:	; 2 bytes @ 0x5
  2210  0075                     	global	i1___lwdiv@quotient
  2211                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2212  0075                     	ds	2
  2213  0075                     	global	i1___lwdiv@counter
  2214                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2215  0077                     	ds	1
  2216  0077                     	global	___xxtofl@sign
  2217                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2218  0078                     	ds	1
  2219  0078                     	global	___xxtofl@exp
  2220                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2221  0079                     	ds	1
  2222  0079                     	global	___xxtofl@arg
  2223                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2224  007A                     	ds	4
  2225  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2226                           global __pcstackBANK0
  2227                           __pcstackBANK0:
  2228  0020                     	global	?___fladd
  2229                           ?___fladd:	; 4 bytes @ 0x0
  2230  0020                     	global	___fladd@b
  2231                           ___fladd@b:	; 4 bytes @ 0x0
  2232  0020                     	ds	4
  2233  0020                     	global	___fladd@a
  2234                           ___fladd@a:	; 4 bytes @ 0x4
  2235  0024                     	ds	4
  2236  0024                     ??___fladd:	; 1 bytes @ 0x8
  2237  0028                     	ds	12
  2238  0028                     	global	___fladd@signs
  2239                           ___fladd@signs:	; 1 bytes @ 0x14
  2240  0034                     	ds	1
  2241  0034                     	global	___fladd@aexp
  2242                           ___fladd@aexp:	; 1 bytes @ 0x15
  2243  0035                     	ds	1
  2244  0035                     	global	___fladd@bexp
  2245                           ___fladd@bexp:	; 1 bytes @ 0x16
  2246  0036                     	ds	1
  2247  0036                     	global	___fladd@grs
  2248                           ___fladd@grs:	; 1 bytes @ 0x17
  2249  0037                     	ds	1
  2250  0037                     	global	?___fltol
  2251                           ?___fltol:	; 4 bytes @ 0x18
  2252  0038                     	global	___fltol@f1
  2253                           ___fltol@f1:	; 4 bytes @ 0x18
  2254  0038                     	ds	4
  2255  0038                     ??___fltol:	; 1 bytes @ 0x1C
  2256  003C                     	ds	5
  2257  003C                     	global	___fltol@sign1
  2258                           ___fltol@sign1:	; 1 bytes @ 0x21
  2259  0041                     	ds	1
  2260  0041                     	global	___fltol@exp1
  2261                           ___fltol@exp1:	; 1 bytes @ 0x22
  2262  0042                     	ds	1
  2263  0042                     	global	?_is_deadzone
  2264                           ?_is_deadzone:	; 2 bytes @ 0x23
  2265  0043                     	global	is_deadzone@currentStep
  2266                           is_deadzone@currentStep:	; 2 bytes @ 0x23
  2267  0043                     	ds	2
  2268  0043                     	global	is_deadzone@adcResult
  2269                           is_deadzone@adcResult:	; 2 bytes @ 0x25
  2270  0045                     	ds	2
  2271  0045                     ??_is_deadzone:	; 1 bytes @ 0x27
  2272  0047                     	ds	2
  2273  0047                     	global	is_deadzone@deadzoneLow
  2274                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x29
  2275  0049                     	ds	2
  2276  0049                     	global	is_deadzone@deadzoneHigh
  2277                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2B
  2278  004B                     	ds	2
  2279  004B                     	global	_is_deadzone$864
  2280                           _is_deadzone$864:	; 1 bytes @ 0x2D
  2281  004D                     	ds	1
  2282  004D                     	global	is_deadzone@turnPoint
  2283                           is_deadzone@turnPoint:	; 2 bytes @ 0x2E
  2284  004E                     	ds	2
  2285  004E                     ??_handle_potmeter:	; 1 bytes @ 0x30
  2286  0050                     	ds	2
  2287  0050                     	global	handle_potmeter@currentStep
  2288                           handle_potmeter@currentStep:	; 2 bytes @ 0x32
  2289  0052                     	ds	2
  2290  0052                     	global	handle_potmeter@ad_result
  2291                           handle_potmeter@ad_result:	; 2 bytes @ 0x34
  2292  0054                     	ds	2
  2293  0054                     ??_isr:	; 1 bytes @ 0x36
  2294  0056                     	ds	4
  2295  0056                     ;!
  2296                           ;!Data Sizes:
  2297                           ;!    Strings     13
  2298                           ;!    Constant    382
  2299                           ;!    Data        0
  2300                           ;!    BSS         19
  2301                           ;!    Persistent  0
  2302                           ;!    Stack       0
  2303                           ;!
  2304                           ;!Auto Spaces:
  2305                           ;!    Space          Size  Autos    Used
  2306                           ;!    COMMON           14     14      14
  2307                           ;!    BANK0            80     58      68
  2308                           ;!    BANK1            80     37      46
  2309                           ;!    BANK3            96      0       0
  2310                           ;!    BANK2            96      0       0
  2311                           
  2312                           ;!
  2313                           ;!Pointer List with Targets:
  2314                           ;!
  2315                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2316                           ;!		 -> STR_3(CODE[3]), 
  2317                           ;!
  2318                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2319                           ;!		 -> write_int@num(BANK1[2]), 
  2320                           ;!
  2321                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2322                           ;!		 -> ?_sprintf(BANK1[2]), 
  2323                           ;!
  2324                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2325                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2326                           ;!
  2327                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2328                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2329                           ;!
  2330                           
  2331                           
  2332                           ;!
  2333                           ;!Critical Paths under _main in COMMON
  2334                           ;!
  2335                           ;!    None.
  2336                           ;!
  2337                           ;!Critical Paths under _isr in COMMON
  2338                           ;!
  2339                           ;!    _is_deadzone->___xxtofl
  2340                           ;!    ___fltol->___xxtofl
  2341                           ;!    ___fladd->___xxtofl
  2342                           ;!
  2343                           ;!Critical Paths under _main in BANK0
  2344                           ;!
  2345                           ;!    None.
  2346                           ;!
  2347                           ;!Critical Paths under _isr in BANK0
  2348                           ;!
  2349                           ;!    _isr->_handle_potmeter
  2350                           ;!    _handle_potmeter->_is_deadzone
  2351                           ;!    _is_deadzone->___fltol
  2352                           ;!    ___fltol->___fladd
  2353                           ;!
  2354                           ;!Critical Paths under _main in BANK1
  2355                           ;!
  2356                           ;!    _main->_update_volume
  2357                           ;!    _update_volume->_write_int
  2358                           ;!    _update_input->_write_int
  2359                           ;!    _write_space->_spiWrite
  2360                           ;!    _write_int->_sprintf
  2361                           ;!    _write_text->_write_char
  2362                           ;!    _write_char->_write_font
  2363                           ;!    _write_font->___wmul
  2364                           ;!    _sprintf->___lwmod
  2365                           ;!    ___lwmod->___lwdiv
  2366                           ;!    _display_init->_spiWrite
  2367                           ;!
  2368                           ;!Critical Paths under _isr in BANK1
  2369                           ;!
  2370                           ;!    None.
  2371                           ;!
  2372                           ;!Critical Paths under _main in BANK3
  2373                           ;!
  2374                           ;!    None.
  2375                           ;!
  2376                           ;!Critical Paths under _isr in BANK3
  2377                           ;!
  2378                           ;!    None.
  2379                           ;!
  2380                           ;!Critical Paths under _main in BANK2
  2381                           ;!
  2382                           ;!    None.
  2383                           ;!
  2384                           ;!Critical Paths under _isr in BANK2
  2385                           ;!
  2386                           ;!    None.
  2387                           
  2388 ;;
  2389 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2390 ;;
  2391                           
  2392                           ;!
  2393                           ;!Call Graph Tables:
  2394                           ;!
  2395                           ;! ---------------------------------------------------------------------------------
  2396                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2397                           ;! ---------------------------------------------------------------------------------
  2398                           ;! (0) _main                                                 2     2      0   11546
  2399                           ;!                                             35 BANK1      2     2      0
  2400                           ;!              _activateSelectedRelay
  2401                           ;!                             _config
  2402                           ;!                       _update_input
  2403                           ;!                      _update_volume
  2404                           ;! ---------------------------------------------------------------------------------
  2405                           ;! (1) _update_volume                                        2     2      0    5774
  2406                           ;!                                             33 BANK1      2     2      0
  2407                           ;!                          _write_int
  2408                           ;!                        _write_space
  2409                           ;!                         _write_text
  2410                           ;! ---------------------------------------------------------------------------------
  2411                           ;! (1) _update_input                                         0     0      0    5750
  2412                           ;!                          _write_int
  2413                           ;!                        _write_space
  2414                           ;!                         _write_text
  2415                           ;! ---------------------------------------------------------------------------------
  2416                           ;! (2) _write_space                                          7     5      2     266
  2417                           ;!                                              1 BANK1      7     5      2
  2418                           ;!                  _display_write_end
  2419                           ;!                _display_write_start
  2420                           ;!                           _spiWrite
  2421                           ;! ---------------------------------------------------------------------------------
  2422                           ;! (2) _write_int                                            4     2      2    4085
  2423                           ;!                                             29 BANK1      4     2      2
  2424                           ;!                            _sprintf
  2425                           ;!                         _write_char
  2426                           ;!                         _write_text
  2427                           ;! ---------------------------------------------------------------------------------
  2428                           ;! (2) _write_text                                           4     2      2    1399
  2429                           ;!                                             19 BANK1      4     2      2
  2430                           ;!                         _write_char
  2431                           ;! ---------------------------------------------------------------------------------
  2432                           ;! (3) _write_char                                           3     3      0    1103
  2433                           ;!                                             16 BANK1      3     3      0
  2434                           ;!                         _write_font
  2435                           ;! ---------------------------------------------------------------------------------
  2436                           ;! (4) _write_font                                          10     8      2     836
  2437                           ;!                                              6 BANK1     10     8      2
  2438                           ;!                             ___wmul
  2439                           ;!                  _display_write_end
  2440                           ;!                _display_write_start
  2441                           ;!                           _spiWrite
  2442                           ;! ---------------------------------------------------------------------------------
  2443                           ;! (5) _display_write_start                                  0     0      0       0
  2444                           ;! ---------------------------------------------------------------------------------
  2445                           ;! (5) _display_write_end                                    0     0      0       0
  2446                           ;! ---------------------------------------------------------------------------------
  2447                           ;! (5) ___wmul                                               6     2      4     496
  2448                           ;!                                              0 BANK1      6     2      4
  2449                           ;! ---------------------------------------------------------------------------------
  2450                           ;! (3) _sprintf                                             23    19      4    1311
  2451                           ;!                                             14 BANK1     15    11      4
  2452                           ;!                            ___lwdiv
  2453                           ;!                            ___lwmod
  2454                           ;! ---------------------------------------------------------------------------------
  2455                           ;! (4) ___lwmod                                              6     2      4     311
  2456                           ;!                                              8 BANK1      6     2      4
  2457                           ;!                            ___lwdiv (ARG)
  2458                           ;! ---------------------------------------------------------------------------------
  2459                           ;! (4) ___lwdiv                                              8     4      4     414
  2460                           ;!                                              0 BANK1      8     4      4
  2461                           ;! ---------------------------------------------------------------------------------
  2462                           ;! (1) _config                                               3     3      0      22
  2463                           ;!                                              1 BANK1      3     3      0
  2464                           ;!                       _display_init
  2465                           ;!                           _init_adc
  2466                           ;! ---------------------------------------------------------------------------------
  2467                           ;! (2) _init_adc                                             0     0      0       0
  2468                           ;! ---------------------------------------------------------------------------------
  2469                           ;! (2) _display_init                                         0     0      0      22
  2470                           ;!                           _spiWrite
  2471                           ;! ---------------------------------------------------------------------------------
  2472                           ;! (5) _spiWrite                                             1     1      0      22
  2473                           ;!                                              0 BANK1      1     1      0
  2474                           ;! ---------------------------------------------------------------------------------
  2475                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2476                           ;! ---------------------------------------------------------------------------------
  2477                           ;! Estimated maximum stack depth 5
  2478                           ;! ---------------------------------------------------------------------------------
  2479                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2480                           ;! ---------------------------------------------------------------------------------
  2481                           ;! (7) _isr                                                  4     4      0    4228
  2482                           ;!                                             54 BANK0      4     4      0
  2483                           ;!                    _handle_potmeter
  2484                           ;!                      _handle_rotary
  2485                           ;!                      _poll_receiver
  2486                           ;! ---------------------------------------------------------------------------------
  2487                           ;! (8) _poll_receiver                                        8     8      0       0
  2488                           ;!                                              0 COMMON     8     8      0
  2489                           ;! ---------------------------------------------------------------------------------
  2490                           ;! (8) _handle_rotary                                        7     7      0     134
  2491                           ;!                                              0 COMMON     7     7      0
  2492                           ;! ---------------------------------------------------------------------------------
  2493                           ;! (8) _handle_potmeter                                      6     6      0    4094
  2494                           ;!                                             48 BANK0      6     6      0
  2495                           ;!                        _is_deadzone
  2496                           ;!                          i1___lwdiv
  2497                           ;! ---------------------------------------------------------------------------------
  2498                           ;! (9) i1___lwdiv                                            8     4      4     214
  2499                           ;!                                              0 COMMON     8     4      4
  2500                           ;! ---------------------------------------------------------------------------------
  2501                           ;! (9) _is_deadzone                                         13     9      4    3746
  2502                           ;!                                             35 BANK0     13     9      4
  2503                           ;!                            ___fladd
  2504                           ;!                            ___fltol
  2505                           ;!                           ___xxtofl
  2506                           ;!                           i1___wmul
  2507                           ;! ---------------------------------------------------------------------------------
  2508                           ;! (10) i1___wmul                                            6     2      4     144
  2509                           ;!                                              0 COMMON     6     2      4
  2510                           ;! ---------------------------------------------------------------------------------
  2511                           ;! (10) ___xxtofl                                           14    10      4     474
  2512                           ;!                                              0 COMMON    14    10      4
  2513                           ;! ---------------------------------------------------------------------------------
  2514                           ;! (10) ___fltol                                            11     7      4     381
  2515                           ;!                                             24 BANK0     11     7      4
  2516                           ;!                            ___fladd (ARG)
  2517                           ;!                           ___xxtofl (ARG)
  2518                           ;! ---------------------------------------------------------------------------------
  2519                           ;! (10) ___fladd                                            24    16      8    2414
  2520                           ;!                                              0 BANK0     24    16      8
  2521                           ;!                           ___xxtofl (ARG)
  2522                           ;! ---------------------------------------------------------------------------------
  2523                           ;! Estimated maximum stack depth 10
  2524                           ;! ---------------------------------------------------------------------------------
  2525                           ;!
  2526                           ;! Call Graph Graphs:
  2527                           ;!
  2528                           ;! _main (ROOT)
  2529                           ;!   _activateSelectedRelay
  2530                           ;!   _config
  2531                           ;!     _display_init
  2532                           ;!       _spiWrite
  2533                           ;!     _init_adc
  2534                           ;!   _update_input
  2535                           ;!     _write_int
  2536                           ;!       _sprintf
  2537                           ;!         ___lwdiv
  2538                           ;!         ___lwmod
  2539                           ;!           ___lwdiv (ARG)
  2540                           ;!       _write_char
  2541                           ;!         _write_font
  2542                           ;!           ___wmul
  2543                           ;!           _display_write_end
  2544                           ;!           _display_write_start
  2545                           ;!           _spiWrite
  2546                           ;!       _write_text
  2547                           ;!         _write_char
  2548                           ;!           _write_font
  2549                           ;!             ___wmul
  2550                           ;!             _display_write_end
  2551                           ;!             _display_write_start
  2552                           ;!             _spiWrite
  2553                           ;!     _write_space
  2554                           ;!       _display_write_end
  2555                           ;!       _display_write_start
  2556                           ;!       _spiWrite
  2557                           ;!     _write_text
  2558                           ;!       _write_char
  2559                           ;!         _write_font
  2560                           ;!           ___wmul
  2561                           ;!           _display_write_end
  2562                           ;!           _display_write_start
  2563                           ;!           _spiWrite
  2564                           ;!   _update_volume
  2565                           ;!     _write_int
  2566                           ;!       _sprintf
  2567                           ;!         ___lwdiv
  2568                           ;!         ___lwmod
  2569                           ;!           ___lwdiv (ARG)
  2570                           ;!       _write_char
  2571                           ;!         _write_font
  2572                           ;!           ___wmul
  2573                           ;!           _display_write_end
  2574                           ;!           _display_write_start
  2575                           ;!           _spiWrite
  2576                           ;!       _write_text
  2577                           ;!         _write_char
  2578                           ;!           _write_font
  2579                           ;!             ___wmul
  2580                           ;!             _display_write_end
  2581                           ;!             _display_write_start
  2582                           ;!             _spiWrite
  2583                           ;!     _write_space
  2584                           ;!       _display_write_end
  2585                           ;!       _display_write_start
  2586                           ;!       _spiWrite
  2587                           ;!     _write_text
  2588                           ;!       _write_char
  2589                           ;!         _write_font
  2590                           ;!           ___wmul
  2591                           ;!           _display_write_end
  2592                           ;!           _display_write_start
  2593                           ;!           _spiWrite
  2594                           ;!
  2595                           ;! _isr (ROOT)
  2596                           ;!   _handle_potmeter
  2597                           ;!     _is_deadzone
  2598                           ;!       ___fladd
  2599                           ;!         ___xxtofl (ARG)
  2600                           ;!       ___fltol
  2601                           ;!         ___fladd (ARG)
  2602                           ;!           ___xxtofl (ARG)
  2603                           ;!         ___xxtofl (ARG)
  2604                           ;!       ___xxtofl
  2605                           ;!       i1___wmul
  2606                           ;!     i1___lwdiv
  2607                           ;!   _handle_rotary
  2608                           ;!   _poll_receiver
  2609                           ;!
  2610                           
  2611                           ;! Address spaces:
  2612                           
  2613                           ;!Name               Size   Autos  Total    Cost      Usage
  2614                           ;!BITCOMMON            E      0       0       0        0.0%
  2615                           ;!EEDATA             100      0       0       0        0.0%
  2616                           ;!NULL                 0      0       0       0        0.0%
  2617                           ;!CODE                 0      0       0       0        0.0%
  2618                           ;!COMMON               E      E       E       1      100.0%
  2619                           ;!BITSFR0              0      0       0       1        0.0%
  2620                           ;!SFR0                 0      0       0       1        0.0%
  2621                           ;!BITSFR1              0      0       0       2        0.0%
  2622                           ;!SFR1                 0      0       0       2        0.0%
  2623                           ;!STACK                0      0       0       2        0.0%
  2624                           ;!ABS                  0      0      80       3        0.0%
  2625                           ;!BITBANK0            50      0       0       4        0.0%
  2626                           ;!BITSFR3              0      0       0       4        0.0%
  2627                           ;!SFR3                 0      0       0       4        0.0%
  2628                           ;!BANK0               50     3A      44       5       85.0%
  2629                           ;!BITSFR2              0      0       0       5        0.0%
  2630                           ;!SFR2                 0      0       0       5        0.0%
  2631                           ;!BITBANK1            50      0       0       6        0.0%
  2632                           ;!BANK1               50     25      2E       7       57.5%
  2633                           ;!BITBANK3            60      0       0       8        0.0%
  2634                           ;!BANK3               60      0       0       9        0.0%
  2635                           ;!BITBANK2            60      0       0      10        0.0%
  2636                           ;!BANK2               60      0       0      11        0.0%
  2637                           ;!DATA                 0      0      80      12        0.0%
  2638                           
  2639                           	global	_main
  2640                           
  2641 ;; *************** function _main *****************
  2642 ;; Defined at:
  2643 ;;		line 28 in file "main.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : B00/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0
  2659 ;;      Temps:          0       0       2       0       0
  2660 ;;      Totals:         0       0       2       0       0
  2661 ;;Total ram usage:        2 bytes
  2662 ;; Hardware stack levels required when called:   10
  2663 ;; This function calls:
  2664 ;;		_activateSelectedRelay
  2665 ;;		_config
  2666 ;;		_update_input
  2667 ;;		_update_volume
  2668 ;; This function is called by:
  2669 ;;		Startup code after reset
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2673                           	file	"main.c"
  2674                           	line	28
  2675                           global __pmaintext
  2676                           __pmaintext:	;psect for function _main
  2677  0A84                     psect	maintext
  2678                           	file	"main.c"
  2679                           	line	28
  2680                           	global	__size_of_main
  2681                           	__size_of_main	equ	__end_of_main-_main
  2682  002C                     	
  2683                           _main:	
  2684  0A84                     ;incstack = 0
  2685 ;; hardware stack exceeded
  2686                           	opt	stack 0
  2687                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2688                           	line	30
  2689                           	
  2690                           l2707:	
  2691  0A84                     ;main.c: 30:     config();
  2692                           	fcall	_config
  2693  0A84  120A  158A  2639  120A  158A  	goto	l2709
  2694  0A89  2A8A               	line	33
  2695                           ;main.c: 33:     while(1)
  2696                           	
  2697                           l53:	
  2698  0A8A                     	line	35
  2699                           	
  2700                           l2709:	
  2701  0A8A                     ;main.c: 34:     {;main.c: 35:         if (!ADCON0bits.GO)
  2702                           	bcf	status, 5	;RP0=0, select bank0
  2703  0A8A  1283               	bcf	status, 6	;RP1=0, select bank0
  2704  0A8B  1303               	btfsc	(31),1	;volatile
  2705  0A8C  189F               	goto	u3011
  2706  0A8D  2A8F               	goto	u3010
  2707  0A8E  2A90               u3011:
  2708  0A8F                     	goto	l2713
  2709  0A8F  2A92               u3010:
  2710  0A90                     	line	36
  2711                           	
  2712                           l2711:	
  2713  0A90                     ;main.c: 36:             ADCON0bits.GO = 1;
  2714                           	bsf	(31),1	;volatile
  2715  0A90  149F               	goto	l2713
  2716  0A91  2A92               	
  2717                           l54:	
  2718  0A92                     	line	38
  2719                           	
  2720                           l2713:	
  2721  0A92                     ;main.c: 38:         update_volume();
  2722                           	fcall	_update_volume
  2723  0A92  120A  158A  2532  120A  158A  	line	39
  2724                           ;main.c: 39:         update_input();
  2725                           	fcall	_update_input
  2726  0A97  120A  158A  2355  120A  158A  	line	40
  2727                           	
  2728                           l2715:	
  2729  0A9C                     ;main.c: 40:         activateSelectedRelay();
  2730                           	fcall	_activateSelectedRelay
  2731  0A9C  120A  158A  231C  120A  158A  	line	42
  2732                           	
  2733                           l2717:	
  2734  0AA1                     ;main.c: 42:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2735                           	opt asmopt_push
  2736                           opt asmopt_off
  2737                           movlw	13
  2738  0AA1  300D               	bsf	status, 5	;RP0=1, select bank1
  2739  0AA2  1683               	bcf	status, 6	;RP1=0, select bank1
  2740  0AA3  1303               movwf	((??_main+0)^080h+0+1),f
  2741  0AA4  00C4               	movlw	251
  2742  0AA5  30FB               movwf	((??_main+0)^080h+0),f
  2743  0AA6  00C3               	u3137:
  2744  0AA7                     decfsz	((??_main+0)^080h+0),f
  2745  0AA7  0BC3               	goto	u3137
  2746  0AA8  2AA7               	decfsz	((??_main+0)^080h+0+1),f
  2747  0AA9  0BC4               	goto	u3137
  2748  0AAA  2AA7               opt asmopt_pop
  2749                           
  2750                           	goto	l2709
  2751  0AAB  2A8A               	line	44
  2752                           ;main.c: 44:     }
  2753                           	
  2754                           l55:	
  2755  0AAC                     	goto	l2709
  2756  0AAC  2A8A               	
  2757                           l56:	
  2758  0AAD                     	line	46
  2759                           	
  2760                           l57:	
  2761  0AAD                     	global	start
  2762                           	ljmp	start
  2763  0AAD  120A  118A  2812   	opt stack 0
  2764                           GLOBAL	__end_of_main
  2765                           	__end_of_main:
  2766  0AB0                     	signat	_main,89
  2767                           	global	_update_volume
  2768                           
  2769 ;; *************** function _update_volume *****************
  2770 ;; Defined at:
  2771 ;;		line 150 in file "Display.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  spaces          2   33[BANK1 ] int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       0       0       0
  2786 ;;      Locals:         0       0       2       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       0       2       0       0
  2789 ;;Total ram usage:        2 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    9
  2792 ;; This function calls:
  2793 ;;		_write_int
  2794 ;;		_write_space
  2795 ;;		_write_text
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2801                           	file	"Display.c"
  2802                           	line	150
  2803                           global __ptext1
  2804                           __ptext1:	;psect for function _update_volume
  2805  0D32                     psect	text1
  2806                           	file	"Display.c"
  2807                           	line	150
  2808                           	global	__size_of_update_volume
  2809                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2810  004F                     	
  2811                           _update_volume:	
  2812  0D32                     ;incstack = 0
  2813 ;; hardware stack exceeded
  2814                           	opt	stack 0
  2815                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2816                           	line	152
  2817                           	
  2818                           l2585:	
  2819  0D32                     ;Display.c: 152:     if (lastVolume == volume) return;
  2820                           	bsf	status, 5	;RP0=1, select bank1
  2821  0D32  1683               	bcf	status, 6	;RP1=0, select bank1
  2822  0D33  1303               	movf	(_volume+1)^080h,w
  2823  0D34  084A               	xorwf	(_lastVolume+1)^080h,w
  2824  0D35  0648               	skipz
  2825  0D36  1D03               	goto	u2815
  2826  0D37  2D3A               	movf	(_volume)^080h,w
  2827  0D38  0849               	xorwf	(_lastVolume)^080h,w
  2828  0D39  0647               u2815:
  2829  0D3A                     
  2830                           	skipz
  2831  0D3A  1D03               	goto	u2811
  2832  0D3B  2D3D               	goto	u2810
  2833  0D3C  2D3E               u2811:
  2834  0D3D                     	goto	l2589
  2835  0D3D  2D40               u2810:
  2836  0D3E                     	goto	l147
  2837  0D3E  2D80               	
  2838                           l2587:	
  2839  0D3F                     	goto	l147
  2840  0D3F  2D80               	
  2841                           l146:	
  2842  0D40                     	line	154
  2843                           	
  2844                           l2589:	
  2845  0D40                     ;Display.c: 154:     _selectedDisplay = 0;
  2846                           	clrf	(__selectedDisplay)^080h
  2847  0D40  01CD               	line	156
  2848                           	
  2849                           l2591:	
  2850  0D41                     ;Display.c: 156:     write_text("VOL");
  2851                           	movlw	low(((STR_2)|8000h))
  2852  0D41  3096               	movwf	(write_text@text)^080h
  2853  0D42  00B3               	movlw	high(((STR_2)|8000h))
  2854  0D43  3084               	movwf	((write_text@text)^080h)+1
  2855  0D44  00B4               	fcall	_write_text
  2856  0D45  120A  158A  238E  120A  158A  	line	159
  2857                           	
  2858                           l2593:	
  2859  0D4A                     ;Display.c: 159:     int spaces = 3;
  2860                           	movlw	03h
  2861  0D4A  3003               	bsf	status, 5	;RP0=1, select bank1
  2862  0D4B  1683               	bcf	status, 6	;RP1=0, select bank1
  2863  0D4C  1303               	movwf	(update_volume@spaces)^080h
  2864  0D4D  00C1               	movlw	0
  2865  0D4E  3000               	movwf	((update_volume@spaces)^080h)+1
  2866  0D4F  00C2               	line	160
  2867                           	
  2868                           l2595:	
  2869  0D50                     ;Display.c: 160:     if (volume < 10)
  2870                           	movf	(_volume+1)^080h,w
  2871  0D50  084A               	xorlw	80h
  2872  0D51  3A80               	movwf	btemp+1
  2873  0D52  00FF               	movlw	(0)^80h
  2874  0D53  3080               	subwf	btemp+1,w
  2875  0D54  027F               	skipz
  2876  0D55  1D03               	goto	u2825
  2877  0D56  2D59               	movlw	0Ah
  2878  0D57  300A               	subwf	(_volume)^080h,w
  2879  0D58  0249               u2825:
  2880  0D59                     
  2881                           	skipnc
  2882  0D59  1803               	goto	u2821
  2883  0D5A  2D5C               	goto	u2820
  2884  0D5B  2D5D               u2821:
  2885  0D5C                     	goto	l2599
  2886  0D5C  2D64               u2820:
  2887  0D5D                     	line	161
  2888                           	
  2889                           l2597:	
  2890  0D5D                     ;Display.c: 161:         spaces = 4;
  2891                           	movlw	04h
  2892  0D5D  3004               	bsf	status, 5	;RP0=1, select bank1
  2893  0D5E  1683               	bcf	status, 6	;RP1=0, select bank1
  2894  0D5F  1303               	movwf	(update_volume@spaces)^080h
  2895  0D60  00C1               	movlw	0
  2896  0D61  3000               	movwf	((update_volume@spaces)^080h)+1
  2897  0D62  00C2               	goto	l2599
  2898  0D63  2D64               	
  2899                           l148:	
  2900  0D64                     	line	164
  2901                           	
  2902                           l2599:	
  2903  0D64                     ;Display.c: 164:     write_space(spaces);
  2904                           	bsf	status, 5	;RP0=1, select bank1
  2905  0D64  1683               	bcf	status, 6	;RP1=0, select bank1
  2906  0D65  1303               	movf	(update_volume@spaces+1)^080h,w
  2907  0D66  0842               	movwf	(write_space@count+1)^080h
  2908  0D67  00A2               	movf	(update_volume@spaces)^080h,w
  2909  0D68  0841               	movwf	(write_space@count)^080h
  2910  0D69  00A1               	fcall	_write_space
  2911  0D6A  120A  158A  2581  120A  158A  	line	166
  2912                           	
  2913                           l2601:	
  2914  0D6F                     ;Display.c: 166:     write_int(volume);
  2915                           	bsf	status, 5	;RP0=1, select bank1
  2916  0D6F  1683               	bcf	status, 6	;RP1=0, select bank1
  2917  0D70  1303               	movf	(_volume+1)^080h,w
  2918  0D71  084A               	movwf	(write_int@number+1)^080h
  2919  0D72  00BE               	movf	(_volume)^080h,w
  2920  0D73  0849               	movwf	(write_int@number)^080h
  2921  0D74  00BD               	fcall	_write_int
  2922  0D75  120A  158A  22E6  120A  158A  	line	168
  2923                           	
  2924                           l2603:	
  2925  0D7A                     ;Display.c: 168:     lastVolume = volume;
  2926                           	bsf	status, 5	;RP0=1, select bank1
  2927  0D7A  1683               	bcf	status, 6	;RP1=0, select bank1
  2928  0D7B  1303               	movf	(_volume+1)^080h,w
  2929  0D7C  084A               	movwf	(_lastVolume+1)^080h
  2930  0D7D  00C8               	movf	(_volume)^080h,w
  2931  0D7E  0849               	movwf	(_lastVolume)^080h
  2932  0D7F  00C7               	line	170
  2933                           	
  2934                           l147:	
  2935  0D80                     	return
  2936  0D80  0008               	opt stack 0
  2937                           GLOBAL	__end_of_update_volume
  2938                           	__end_of_update_volume:
  2939  0D81                     	signat	_update_volume,89
  2940                           	global	_update_input
  2941                           
  2942 ;; *************** function _update_input *****************
  2943 ;; Defined at:
  2944 ;;		line 134 in file "Display.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0
  2961 ;;      Totals:         0       0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    9
  2965 ;; This function calls:
  2966 ;;		_write_int
  2967 ;;		_write_space
  2968 ;;		_write_text
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2974                           	line	134
  2975                           global __ptext2
  2976                           __ptext2:	;psect for function _update_input
  2977  0B55                     psect	text2
  2978                           	file	"Display.c"
  2979                           	line	134
  2980                           	global	__size_of_update_input
  2981                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  2982  0039                     	
  2983                           _update_input:	
  2984  0B55                     ;incstack = 0
  2985 ;; hardware stack exceeded
  2986                           	opt	stack 0
  2987                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2988                           	line	136
  2989                           	
  2990                           l2605:	
  2991  0B55                     ;Display.c: 136:     if (lastInput == _selectedInput) return;
  2992                           	bsf	status, 5	;RP0=1, select bank1
  2993  0B55  1683               	bcf	status, 6	;RP1=0, select bank1
  2994  0B56  1303               	movf	(__selectedInput+1)^080h,w
  2995  0B57  084C               	xorwf	(_lastInput+1)^080h,w
  2996  0B58  0646               	skipz
  2997  0B59  1D03               	goto	u2835
  2998  0B5A  2B5D               	movf	(__selectedInput)^080h,w
  2999  0B5B  084B               	xorwf	(_lastInput)^080h,w
  3000  0B5C  0645               u2835:
  3001  0B5D                     
  3002                           	skipz
  3003  0B5D  1D03               	goto	u2831
  3004  0B5E  2B60               	goto	u2830
  3005  0B5F  2B61               u2831:
  3006  0B60                     	goto	l2609
  3007  0B60  2B63               u2830:
  3008  0B61                     	goto	l143
  3009  0B61  2B8D               	
  3010                           l2607:	
  3011  0B62                     	goto	l143
  3012  0B62  2B8D               	
  3013                           l142:	
  3014  0B63                     	line	138
  3015                           	
  3016                           l2609:	
  3017  0B63                     ;Display.c: 138:     _selectedDisplay = 0;
  3018                           	clrf	(__selectedDisplay)^080h
  3019  0B63  01CD               	line	140
  3020                           	
  3021                           l2611:	
  3022  0B64                     ;Display.c: 140:     write_text("INPUT");
  3023                           	movlw	low(((STR_1)|8000h))
  3024  0B64  3090               	movwf	(write_text@text)^080h
  3025  0B65  00B3               	movlw	high(((STR_1)|8000h))
  3026  0B66  3084               	movwf	((write_text@text)^080h)+1
  3027  0B67  00B4               	fcall	_write_text
  3028  0B68  120A  158A  238E  120A  158A  	line	142
  3029                           	
  3030                           l2613:	
  3031  0B6D                     ;Display.c: 142:     write_space(2);
  3032                           	movlw	02h
  3033  0B6D  3002               	bsf	status, 5	;RP0=1, select bank1
  3034  0B6E  1683               	bcf	status, 6	;RP1=0, select bank1
  3035  0B6F  1303               	movwf	(write_space@count)^080h
  3036  0B70  00A1               	movlw	0
  3037  0B71  3000               	movwf	((write_space@count)^080h)+1
  3038  0B72  00A2               	fcall	_write_space
  3039  0B73  120A  158A  2581  120A  158A  	line	144
  3040                           	
  3041                           l2615:	
  3042  0B78                     ;Display.c: 144:     write_int(_selectedInput+1);
  3043                           	bsf	status, 5	;RP0=1, select bank1
  3044  0B78  1683               	bcf	status, 6	;RP1=0, select bank1
  3045  0B79  1303               	movf	(__selectedInput)^080h,w
  3046  0B7A  084B               	addlw	low(01h)
  3047  0B7B  3E01               	movwf	(write_int@number)^080h
  3048  0B7C  00BD               	movf	(__selectedInput+1)^080h,w
  3049  0B7D  084C               	skipnc
  3050  0B7E  1803               	addlw	1
  3051  0B7F  3E01               	addlw	high(01h)
  3052  0B80  3E00               	movwf	1+(write_int@number)^080h
  3053  0B81  00BE               	fcall	_write_int
  3054  0B82  120A  158A  22E6  120A  158A  	line	146
  3055                           	
  3056                           l2617:	
  3057  0B87                     ;Display.c: 146:     lastInput = _selectedInput;
  3058                           	bsf	status, 5	;RP0=1, select bank1
  3059  0B87  1683               	bcf	status, 6	;RP1=0, select bank1
  3060  0B88  1303               	movf	(__selectedInput+1)^080h,w
  3061  0B89  084C               	movwf	(_lastInput+1)^080h
  3062  0B8A  00C6               	movf	(__selectedInput)^080h,w
  3063  0B8B  084B               	movwf	(_lastInput)^080h
  3064  0B8C  00C5               	line	148
  3065                           	
  3066                           l143:	
  3067  0B8D                     	return
  3068  0B8D  0008               	opt stack 0
  3069                           GLOBAL	__end_of_update_input
  3070                           	__end_of_update_input:
  3071  0B8E                     	signat	_update_input,89
  3072                           	global	_write_space
  3073                           
  3074 ;; *************** function _write_space *****************
  3075 ;; Defined at:
  3076 ;;		line 172 in file "Display.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  count           2    1[BANK1 ] int 
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  x               2    6[BANK1 ] int 
  3081 ;;  i               2    4[BANK1 ] int 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3091 ;;      Params:         0       0       2       0       0
  3092 ;;      Locals:         0       0       4       0       0
  3093 ;;      Temps:          0       0       1       0       0
  3094 ;;      Totals:         0       0       7       0       0
  3095 ;;Total ram usage:        7 bytes
  3096 ;; Hardware stack levels used:    1
  3097 ;; Hardware stack levels required when called:    5
  3098 ;; This function calls:
  3099 ;;		_display_write_end
  3100 ;;		_display_write_start
  3101 ;;		_spiWrite
  3102 ;; This function is called by:
  3103 ;;		_update_input
  3104 ;;		_update_volume
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3108                           	line	172
  3109                           global __ptext3
  3110                           __ptext3:	;psect for function _write_space
  3111  0D81                     psect	text3
  3112                           	file	"Display.c"
  3113                           	line	172
  3114                           	global	__size_of_write_space
  3115                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  3116  0056                     	
  3117                           _write_space:	
  3118  0D81                     ;incstack = 0
  3119                           	opt	stack 1
  3120                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3121                           	line	174
  3122                           	
  3123                           l2449:	
  3124  0D81                     ;Display.c: 172: void write_space(int count);Display.c: 173: {;Display.c: 174:     for (
                                 int i = 0; i < count; i++) {
  3125                           	bsf	status, 5	;RP0=1, select bank1
  3126  0D81  1683               	bcf	status, 6	;RP1=0, select bank1
  3127  0D82  1303               	clrf	(write_space@i)^080h
  3128  0D83  01A4               	clrf	(write_space@i+1)^080h
  3129  0D84  01A5               	goto	l151
  3130  0D85  2DC7               	
  3131                           l152:	
  3132  0D86                     	line	177
  3133                           	
  3134                           l2451:	
  3135  0D86                     ;Display.c: 177:         for (int x = 0; x < 5; x++) {
  3136                           	bsf	status, 5	;RP0=1, select bank1
  3137  0D86  1683               	bcf	status, 6	;RP1=0, select bank1
  3138  0D87  1303               	clrf	(write_space@x)^080h
  3139  0D88  01A6               	clrf	(write_space@x+1)^080h
  3140  0D89  01A7               	
  3141                           l2453:	
  3142  0D8A                     	movf	(write_space@x+1)^080h,w
  3143  0D8A  0827               	xorlw	80h
  3144  0D8B  3A80               	movwf	btemp+1
  3145  0D8C  00FF               	movlw	(0)^80h
  3146  0D8D  3080               	subwf	btemp+1,w
  3147  0D8E  027F               	skipz
  3148  0D8F  1D03               	goto	u2685
  3149  0D90  2D93               	movlw	05h
  3150  0D91  3005               	subwf	(write_space@x)^080h,w
  3151  0D92  0226               u2685:
  3152  0D93                     
  3153                           	skipc
  3154  0D93  1C03               	goto	u2681
  3155  0D94  2D96               	goto	u2680
  3156  0D95  2D97               u2681:
  3157  0D96                     	goto	l2457
  3158  0D96  2D99               u2680:
  3159  0D97                     	goto	l2463
  3160  0D97  2DBF               	
  3161                           l2455:	
  3162  0D98                     	goto	l2463
  3163  0D98  2DBF               	
  3164                           l153:	
  3165  0D99                     	line	178
  3166                           	
  3167                           l2457:	
  3168  0D99                     ;Display.c: 178:             display_write_start();
  3169                           	fcall	_display_write_start
  3170  0D99  120A  158A  220C  120A  158A  	line	179
  3171                           ;Display.c: 179:             spiWrite(0x00);
  3172                           	movlw	low(0)
  3173  0D9E  3000               	fcall	_spiWrite
  3174  0D9F  120A  118A  22EC  120A  158A  	line	180
  3175                           ;Display.c: 180:             display_write_end();
  3176                           	fcall	_display_write_end
  3177  0DA4  120A  158A  21FD  120A  158A  	line	181
  3178                           	
  3179                           l2459:	
  3180  0DA9                     ;Display.c: 181:         }
  3181                           	movlw	01h
  3182  0DA9  3001               	bsf	status, 5	;RP0=1, select bank1
  3183  0DAA  1683               	bcf	status, 6	;RP1=0, select bank1
  3184  0DAB  1303               	addwf	(write_space@x)^080h,f
  3185  0DAC  07A6               	skipnc
  3186  0DAD  1803               	incf	(write_space@x+1)^080h,f
  3187  0DAE  0AA7               	movlw	0
  3188  0DAF  3000               	addwf	(write_space@x+1)^080h,f
  3189  0DB0  07A7               	
  3190                           l2461:	
  3191  0DB1                     	movf	(write_space@x+1)^080h,w
  3192  0DB1  0827               	xorlw	80h
  3193  0DB2  3A80               	movwf	btemp+1
  3194  0DB3  00FF               	movlw	(0)^80h
  3195  0DB4  3080               	subwf	btemp+1,w
  3196  0DB5  027F               	skipz
  3197  0DB6  1D03               	goto	u2695
  3198  0DB7  2DBA               	movlw	05h
  3199  0DB8  3005               	subwf	(write_space@x)^080h,w
  3200  0DB9  0226               u2695:
  3201  0DBA                     
  3202                           	skipc
  3203  0DBA  1C03               	goto	u2691
  3204  0DBB  2DBD               	goto	u2690
  3205  0DBC  2DBE               u2691:
  3206  0DBD                     	goto	l2457
  3207  0DBD  2D99               u2690:
  3208  0DBE                     	goto	l2463
  3209  0DBE  2DBF               	
  3210                           l154:	
  3211  0DBF                     	line	182
  3212                           	
  3213                           l2463:	
  3214  0DBF                     ;Display.c: 182:     }
  3215                           	movlw	01h
  3216  0DBF  3001               	bsf	status, 5	;RP0=1, select bank1
  3217  0DC0  1683               	bcf	status, 6	;RP1=0, select bank1
  3218  0DC1  1303               	addwf	(write_space@i)^080h,f
  3219  0DC2  07A4               	skipnc
  3220  0DC3  1803               	incf	(write_space@i+1)^080h,f
  3221  0DC4  0AA5               	movlw	0
  3222  0DC5  3000               	addwf	(write_space@i+1)^080h,f
  3223  0DC6  07A5               	
  3224                           l151:	
  3225  0DC7                     	movf	(write_space@i+1)^080h,w
  3226  0DC7  0825               	xorlw	80h
  3227  0DC8  3A80               	movwf	(??_write_space+0)^080h+0
  3228  0DC9  00A3               	movf	(write_space@count+1)^080h,w
  3229  0DCA  0822               	xorlw	80h
  3230  0DCB  3A80               	subwf	(??_write_space+0)^080h+0,w
  3231  0DCC  0223               	skipz
  3232  0DCD  1D03               	goto	u2705
  3233  0DCE  2DD1               	movf	(write_space@count)^080h,w
  3234  0DCF  0821               	subwf	(write_space@i)^080h,w
  3235  0DD0  0224               u2705:
  3236  0DD1                     
  3237                           	skipc
  3238  0DD1  1C03               	goto	u2701
  3239  0DD2  2DD4               	goto	u2700
  3240  0DD3  2DD5               u2701:
  3241  0DD4                     	goto	l2451
  3242  0DD4  2D86               u2700:
  3243  0DD5                     	goto	l156
  3244  0DD5  2DD6               	
  3245                           l155:	
  3246  0DD6                     	line	183
  3247                           	
  3248                           l156:	
  3249  0DD6                     	return
  3250  0DD6  0008               	opt stack 0
  3251                           GLOBAL	__end_of_write_space
  3252                           	__end_of_write_space:
  3253  0DD7                     	signat	_write_space,4217
  3254                           	global	_write_int
  3255                           
  3256 ;; *************** function _write_int *****************
  3257 ;; Defined at:
  3258 ;;		line 195 in file "Display.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  number          2   29[BANK1 ] int 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  num             2   31[BANK1 ] unsigned char [2]
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3272 ;;      Params:         0       0       2       0       0
  3273 ;;      Locals:         0       0       2       0       0
  3274 ;;      Temps:          0       0       0       0       0
  3275 ;;      Totals:         0       0       4       0       0
  3276 ;;Total ram usage:        4 bytes
  3277 ;; Hardware stack levels used:    1
  3278 ;; Hardware stack levels required when called:    8
  3279 ;; This function calls:
  3280 ;;		_sprintf
  3281 ;;		_write_char
  3282 ;;		_write_text
  3283 ;; This function is called by:
  3284 ;;		_update_input
  3285 ;;		_update_volume
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3289                           	line	195
  3290                           global __ptext4
  3291                           __ptext4:	;psect for function _write_int
  3292  0AE6                     psect	text4
  3293                           	file	"Display.c"
  3294                           	line	195
  3295                           	global	__size_of_write_int
  3296                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  3297  0036                     	
  3298                           _write_int:	
  3299  0AE6                     ;incstack = 0
  3300 ;; hardware stack exceeded
  3301                           	opt	stack 0
  3302                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3303                           	line	197
  3304                           	
  3305                           l2465:	
  3306  0AE6                     ;Display.c: 195: void write_int(int number);Display.c: 196: {;Display.c: 197:     if (nu
                                 mber < 10) {
  3307                           	bsf	status, 5	;RP0=1, select bank1
  3308  0AE6  1683               	bcf	status, 6	;RP1=0, select bank1
  3309  0AE7  1303               	movf	(write_int@number+1)^080h,w
  3310  0AE8  083E               	xorlw	80h
  3311  0AE9  3A80               	movwf	btemp+1
  3312  0AEA  00FF               	movlw	(0)^80h
  3313  0AEB  3080               	subwf	btemp+1,w
  3314  0AEC  027F               	skipz
  3315  0AED  1D03               	goto	u2715
  3316  0AEE  2AF1               	movlw	0Ah
  3317  0AEF  300A               	subwf	(write_int@number)^080h,w
  3318  0AF0  023D               u2715:
  3319  0AF1                     
  3320                           	skipnc
  3321  0AF1  1803               	goto	u2711
  3322  0AF2  2AF4               	goto	u2710
  3323  0AF3  2AF5               u2711:
  3324  0AF4                     	goto	l2471
  3325  0AF4  2B00               u2710:
  3326  0AF5                     	line	198
  3327                           	
  3328                           l2467:	
  3329  0AF5                     ;Display.c: 198:         write_char(number + 48);
  3330                           	bsf	status, 5	;RP0=1, select bank1
  3331  0AF5  1683               	bcf	status, 6	;RP1=0, select bank1
  3332  0AF6  1303               	movf	(write_int@number)^080h,w
  3333  0AF7  083D               	addlw	030h
  3334  0AF8  3E30               	fcall	_write_char
  3335  0AF9  120A  158A  25D7  120A  158A  	goto	l166
  3336  0AFE  2B1B               	line	199
  3337                           	
  3338                           l2469:	
  3339  0AFF                     ;Display.c: 199:         return;
  3340                           	goto	l166
  3341  0AFF  2B1B               	line	200
  3342                           ;Display.c: 200:     }
  3343                           	
  3344                           l165:	
  3345  0B00                     	line	203
  3346                           	
  3347                           l2471:	
  3348  0B00                     ;Display.c: 202:     char num[2];;Display.c: 203:     sprintf(num, "%d", number);
  3349                           	movlw	low(((STR_3)|8000h))
  3350  0B00  309A               	bsf	status, 5	;RP0=1, select bank1
  3351  0B01  1683               	bcf	status, 6	;RP1=0, select bank1
  3352  0B02  1303               	movwf	(sprintf@f)^080h
  3353  0B03  00AE               	movlw	high(((STR_3)|8000h))
  3354  0B04  3084               	movwf	((sprintf@f)^080h)+1
  3355  0B05  00AF               	movf	(write_int@number+1)^080h,w
  3356  0B06  083E               	movwf	1+(?_sprintf)^080h+02h
  3357  0B07  00B1               	movf	(write_int@number)^080h,w
  3358  0B08  083D               	movwf	0+(?_sprintf)^080h+02h
  3359  0B09  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  3360  0B0A  30BF               	fcall	_sprintf
  3361  0B0B  120A  118A  249D  120A  158A  	line	205
  3362                           ;Display.c: 205:     write_text(num);
  3363                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  3364  0B10  30BF               	bsf	status, 5	;RP0=1, select bank1
  3365  0B11  1683               	bcf	status, 6	;RP1=0, select bank1
  3366  0B12  1303               	movwf	(write_text@text)^080h
  3367  0B13  00B3               	movlw	(0x0)
  3368  0B14  3000               	movwf	(write_text@text+1)^080h
  3369  0B15  00B4               	fcall	_write_text
  3370  0B16  120A  158A  238E  120A  158A  	line	206
  3371                           	
  3372                           l166:	
  3373  0B1B                     	return
  3374  0B1B  0008               	opt stack 0
  3375                           GLOBAL	__end_of_write_int
  3376                           	__end_of_write_int:
  3377  0B1C                     	signat	_write_int,4217
  3378                           	global	_write_text
  3379                           
  3380 ;; *************** function _write_text *****************
  3381 ;; Defined at:
  3382 ;;		line 185 in file "Display.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  text            2   19[BANK1 ] PTR unsigned char 
  3385 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  c               2   21[BANK1 ] PTR unsigned char 
  3388 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      void 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3393 ;; Tracked objects:
  3394 ;;		On entry : 0/0
  3395 ;;		On exit  : 0/0
  3396 ;;		Unchanged: 0/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3398 ;;      Params:         0       0       2       0       0
  3399 ;;      Locals:         0       0       2       0       0
  3400 ;;      Temps:          0       0       0       0       0
  3401 ;;      Totals:         0       0       4       0       0
  3402 ;;Total ram usage:        4 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; Hardware stack levels required when called:    7
  3405 ;; This function calls:
  3406 ;;		_write_char
  3407 ;; This function is called by:
  3408 ;;		_update_input
  3409 ;;		_update_volume
  3410 ;;		_write_int
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3414                           	line	185
  3415                           global __ptext5
  3416                           __ptext5:	;psect for function _write_text
  3417  0B8E                     psect	text5
  3418                           	file	"Display.c"
  3419                           	line	185
  3420                           	global	__size_of_write_text
  3421                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  3422  003A                     	
  3423                           _write_text:	
  3424  0B8E                     ;incstack = 0
  3425 ;; hardware stack exceeded
  3426                           	opt	stack 0
  3427                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3428                           	line	189
  3429                           	
  3430                           l2027:	
  3431  0B8E                     ;Display.c: 185: void write_text(char* text);Display.c: 186: {;Display.c: 187:     char*
                                  c;;Display.c: 189:     for (c = text; *c != '\0'; c++) {
  3432                           	bsf	status, 5	;RP0=1, select bank1
  3433  0B8E  1683               	bcf	status, 6	;RP1=0, select bank1
  3434  0B8F  1303               		movf	(write_text@text)^080h,w
  3435  0B90  0833               	movwf	(write_text@c)^080h
  3436  0B91  00B5               movf	(write_text@text+1)^080h,w
  3437  0B92  0834               movwf	(write_text@c+1)^080h
  3438  0B93  00B6               
  3439                           	goto	l2033
  3440  0B94  2BB2               	
  3441                           l160:	
  3442  0B95                     	line	190
  3443                           	
  3444                           l2029:	
  3445  0B95                     ;Display.c: 190:         write_char(*c);
  3446                           	bsf	status, 5	;RP0=1, select bank1
  3447  0B95  1683               	bcf	status, 6	;RP1=0, select bank1
  3448  0B96  1303               	movf	(write_text@c+1)^080h,w
  3449  0B97  0836               	bcf	status, 5	;RP0=0, select bank0
  3450  0B98  1283               	bcf	status, 6	;RP1=0, select bank0
  3451  0B99  1303               	movwf	btemp+1
  3452  0B9A  00FF               	bsf	status, 5	;RP0=1, select bank1
  3453  0B9B  1683               	bcf	status, 6	;RP1=0, select bank1
  3454  0B9C  1303               	movf	(write_text@c)^080h,w
  3455  0B9D  0835               	movwf	fsr0
  3456  0B9E  0084               	bcf	status, 5	;RP0=0, select bank0
  3457  0B9F  1283               	bcf	status, 6	;RP1=0, select bank0
  3458  0BA0  1303               	fcall	stringtab
  3459  0BA1  120A  118A  2300  120A  158A  	fcall	_write_char
  3460  0BA6  120A  158A  25D7  120A  158A  	line	191
  3461                           	
  3462                           l2031:	
  3463  0BAB                     ;Display.c: 191:     }
  3464                           	movlw	01h
  3465  0BAB  3001               	bsf	status, 5	;RP0=1, select bank1
  3466  0BAC  1683               	bcf	status, 6	;RP1=0, select bank1
  3467  0BAD  1303               	addwf	(write_text@c)^080h,f
  3468  0BAE  07B5               	skipnc
  3469  0BAF  1803               	incf	(write_text@c+1)^080h,f
  3470  0BB0  0AB6               	goto	l2033
  3471  0BB1  2BB2               	
  3472                           l159:	
  3473  0BB2                     	
  3474                           l2033:	
  3475  0BB2                     	movf	(write_text@c+1)^080h,w
  3476  0BB2  0836               	bcf	status, 5	;RP0=0, select bank0
  3477  0BB3  1283               	bcf	status, 6	;RP1=0, select bank0
  3478  0BB4  1303               	movwf	btemp+1
  3479  0BB5  00FF               	bsf	status, 5	;RP0=1, select bank1
  3480  0BB6  1683               	bcf	status, 6	;RP1=0, select bank1
  3481  0BB7  1303               	movf	(write_text@c)^080h,w
  3482  0BB8  0835               	movwf	fsr0
  3483  0BB9  0084               	bcf	status, 5	;RP0=0, select bank0
  3484  0BBA  1283               	bcf	status, 6	;RP1=0, select bank0
  3485  0BBB  1303               	fcall	stringtab
  3486  0BBC  120A  118A  2300  120A  158A  	xorlw	0
  3487  0BC1  3A00               	skipz
  3488  0BC2  1D03               	goto	u1851
  3489  0BC3  2BC5               	goto	u1850
  3490  0BC4  2BC6               u1851:
  3491  0BC5                     	goto	l2029
  3492  0BC5  2B95               u1850:
  3493  0BC6                     	goto	l162
  3494  0BC6  2BC7               	
  3495                           l161:	
  3496  0BC7                     	line	193
  3497                           	
  3498                           l162:	
  3499  0BC7                     	return
  3500  0BC7  0008               	opt stack 0
  3501                           GLOBAL	__end_of_write_text
  3502                           	__end_of_write_text:
  3503  0BC8                     	signat	_write_text,4217
  3504                           	global	_write_char
  3505                           
  3506 ;; *************** function _write_char *****************
  3507 ;; Defined at:
  3508 ;;		line 208 in file "Display.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;  c               1    wreg     unsigned char 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  c               1   18[BANK1 ] unsigned char 
  3513 ;;  pos             2   16[BANK1 ] int 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3523 ;;      Params:         0       0       0       0       0
  3524 ;;      Locals:         0       0       3       0       0
  3525 ;;      Temps:          0       0       0       0       0
  3526 ;;      Totals:         0       0       3       0       0
  3527 ;;Total ram usage:        3 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    6
  3530 ;; This function calls:
  3531 ;;		_write_font
  3532 ;; This function is called by:
  3533 ;;		_write_text
  3534 ;;		_write_int
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3538                           	line	208
  3539                           global __ptext6
  3540                           __ptext6:	;psect for function _write_char
  3541  0DD7                     psect	text6
  3542                           	file	"Display.c"
  3543                           	line	208
  3544                           	global	__size_of_write_char
  3545                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  3546  0062                     	
  3547                           _write_char:	
  3548  0DD7                     ;incstack = 0
  3549 ;; hardware stack exceeded
  3550                           	opt	stack 0
  3551                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3552                           ;write_char@c stored from wreg
  3553                           	bsf	status, 5	;RP0=1, select bank1
  3554  0DD7  1683               	bcf	status, 6	;RP1=0, select bank1
  3555  0DD8  1303               	movwf	(write_char@c)^080h
  3556  0DD9  00B2               	line	213
  3557                           	
  3558                           l1955:	
  3559  0DDA                     ;Display.c: 208: void write_char(char c);Display.c: 209: {;Display.c: 210:     int pos;;
                                 Display.c: 213:     if (c >= 48 && c <= 57) {
  3560                           	movlw	low(030h)
  3561  0DDA  3030               	subwf	(write_char@c)^080h,w
  3562  0DDB  0232               	skipc
  3563  0DDC  1C03               	goto	u1661
  3564  0DDD  2DDF               	goto	u1660
  3565  0DDE  2DE0               u1661:
  3566  0DDF                     	goto	l1963
  3567  0DDF  2DF7               u1660:
  3568  0DE0                     	
  3569                           l1957:	
  3570  0DE0                     	movlw	low(03Ah)
  3571  0DE0  303A               	subwf	(write_char@c)^080h,w
  3572  0DE1  0232               	skipnc
  3573  0DE2  1803               	goto	u1671
  3574  0DE3  2DE5               	goto	u1670
  3575  0DE4  2DE6               u1671:
  3576  0DE5                     	goto	l1963
  3577  0DE5  2DF7               u1670:
  3578  0DE6                     	line	214
  3579                           	
  3580                           l1959:	
  3581  0DE6                     ;Display.c: 214:         pos = c - 48;
  3582                           	movf	(write_char@c)^080h,w
  3583  0DE6  0832               	addlw	low(-48)
  3584  0DE7  3ED0               	movwf	(write_char@pos)^080h
  3585  0DE8  00B0               	movlw	high(-48)
  3586  0DE9  30FF               	skipnc
  3587  0DEA  1803               	movlw	(high(-48)+1)&0ffh
  3588  0DEB  3000               	movwf	((write_char@pos)^080h)+1
  3589  0DEC  00B1               	line	215
  3590                           	
  3591                           l1961:	
  3592  0DED                     ;Display.c: 215:         write_font(pos);
  3593                           	movf	(write_char@pos+1)^080h,w
  3594  0DED  0831               	movwf	(write_font@fontPos+1)^080h
  3595  0DEE  00A7               	movf	(write_char@pos)^080h,w
  3596  0DEF  0830               	movwf	(write_font@fontPos)^080h
  3597  0DF0  00A6               	fcall	_write_font
  3598  0DF1  120A  158A  26A1  120A  158A  	line	216
  3599                           ;Display.c: 216:     } else if (c >= 65 && c <= 90) {
  3600                           	goto	l175
  3601  0DF6  2E38               	
  3602                           l169:	
  3603  0DF7                     	
  3604                           l1963:	
  3605  0DF7                     	movlw	low(041h)
  3606  0DF7  3041               	bsf	status, 5	;RP0=1, select bank1
  3607  0DF8  1683               	bcf	status, 6	;RP1=0, select bank1
  3608  0DF9  1303               	subwf	(write_char@c)^080h,w
  3609  0DFA  0232               	skipc
  3610  0DFB  1C03               	goto	u1681
  3611  0DFC  2DFE               	goto	u1680
  3612  0DFD  2DFF               u1681:
  3613  0DFE                     	goto	l1971
  3614  0DFE  2E16               u1680:
  3615  0DFF                     	
  3616                           l1965:	
  3617  0DFF                     	movlw	low(05Bh)
  3618  0DFF  305B               	subwf	(write_char@c)^080h,w
  3619  0E00  0232               	skipnc
  3620  0E01  1803               	goto	u1691
  3621  0E02  2E04               	goto	u1690
  3622  0E03  2E05               u1691:
  3623  0E04                     	goto	l1971
  3624  0E04  2E16               u1690:
  3625  0E05                     	line	217
  3626                           	
  3627                           l1967:	
  3628  0E05                     ;Display.c: 217:         pos = (c - 65) + 10;
  3629                           	movf	(write_char@c)^080h,w
  3630  0E05  0832               	addlw	low(-55)
  3631  0E06  3EC9               	movwf	(write_char@pos)^080h
  3632  0E07  00B0               	movlw	high(-55)
  3633  0E08  30FF               	skipnc
  3634  0E09  1803               	movlw	(high(-55)+1)&0ffh
  3635  0E0A  3000               	movwf	((write_char@pos)^080h)+1
  3636  0E0B  00B1               	line	218
  3637                           	
  3638                           l1969:	
  3639  0E0C                     ;Display.c: 218:         write_font(pos);
  3640                           	movf	(write_char@pos+1)^080h,w
  3641  0E0C  0831               	movwf	(write_font@fontPos+1)^080h
  3642  0E0D  00A7               	movf	(write_char@pos)^080h,w
  3643  0E0E  0830               	movwf	(write_font@fontPos)^080h
  3644  0E0F  00A6               	fcall	_write_font
  3645  0E10  120A  158A  26A1  120A  158A  	line	219
  3646                           ;Display.c: 219:     } else if (c >= 97 && c <= 122) {
  3647                           	goto	l175
  3648  0E15  2E38               	
  3649                           l171:	
  3650  0E16                     	
  3651                           l1971:	
  3652  0E16                     	movlw	low(061h)
  3653  0E16  3061               	bsf	status, 5	;RP0=1, select bank1
  3654  0E17  1683               	bcf	status, 6	;RP1=0, select bank1
  3655  0E18  1303               	subwf	(write_char@c)^080h,w
  3656  0E19  0232               	skipc
  3657  0E1A  1C03               	goto	u1701
  3658  0E1B  2E1D               	goto	u1700
  3659  0E1C  2E1E               u1701:
  3660  0E1D                     	goto	l175
  3661  0E1D  2E38               u1700:
  3662  0E1E                     	
  3663                           l1973:	
  3664  0E1E                     	movlw	low(07Bh)
  3665  0E1E  307B               	subwf	(write_char@c)^080h,w
  3666  0E1F  0232               	skipnc
  3667  0E20  1803               	goto	u1711
  3668  0E21  2E23               	goto	u1710
  3669  0E22  2E24               u1711:
  3670  0E23                     	goto	l175
  3671  0E23  2E38               u1710:
  3672  0E24                     	line	220
  3673                           	
  3674                           l1975:	
  3675  0E24                     ;Display.c: 220:         pos = (c - 97) + 10;
  3676                           	movf	(write_char@c)^080h,w
  3677  0E24  0832               	addlw	low(-87)
  3678  0E25  3EA9               	movwf	(write_char@pos)^080h
  3679  0E26  00B0               	movlw	high(-87)
  3680  0E27  30FF               	skipnc
  3681  0E28  1803               	movlw	(high(-87)+1)&0ffh
  3682  0E29  3000               	movwf	((write_char@pos)^080h)+1
  3683  0E2A  00B1               	line	221
  3684                           	
  3685                           l1977:	
  3686  0E2B                     ;Display.c: 221:         write_font(pos);
  3687                           	movf	(write_char@pos+1)^080h,w
  3688  0E2B  0831               	movwf	(write_font@fontPos+1)^080h
  3689  0E2C  00A7               	movf	(write_char@pos)^080h,w
  3690  0E2D  0830               	movwf	(write_font@fontPos)^080h
  3691  0E2E  00A6               	fcall	_write_font
  3692  0E2F  120A  158A  26A1  120A  158A  	line	222
  3693                           ;Display.c: 222:     } else {
  3694                           	goto	l175
  3695  0E34  2E38               	
  3696                           l173:	
  3697  0E35                     	goto	l175
  3698  0E35  2E38               	line	225
  3699                           ;Display.c: 225:     }
  3700                           	
  3701                           l174:	
  3702  0E36                     	goto	l175
  3703  0E36  2E38               	
  3704                           l172:	
  3705  0E37                     	goto	l175
  3706  0E37  2E38               	
  3707                           l170:	
  3708  0E38                     	line	226
  3709                           	
  3710                           l175:	
  3711  0E38                     	return
  3712  0E38  0008               	opt stack 0
  3713                           GLOBAL	__end_of_write_char
  3714                           	__end_of_write_char:
  3715  0E39                     	signat	_write_char,4217
  3716                           	global	_write_font
  3717                           
  3718 ;; *************** function _write_font *****************
  3719 ;; Defined at:
  3720 ;;		line 228 in file "Display.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  fontPos         2    6[BANK1 ] int 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  x               2   14[BANK1 ] int 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         0       0       2       0       0
  3735 ;;      Locals:         0       0       2       0       0
  3736 ;;      Temps:          0       0       6       0       0
  3737 ;;      Totals:         0       0      10       0       0
  3738 ;;Total ram usage:       10 bytes
  3739 ;; Hardware stack levels used:    1
  3740 ;; Hardware stack levels required when called:    5
  3741 ;; This function calls:
  3742 ;;		___wmul
  3743 ;;		_display_write_end
  3744 ;;		_display_write_start
  3745 ;;		_spiWrite
  3746 ;; This function is called by:
  3747 ;;		_write_char
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3751                           	line	228
  3752                           global __ptext7
  3753                           __ptext7:	;psect for function _write_font
  3754  0EA1                     psect	text7
  3755                           	file	"Display.c"
  3756                           	line	228
  3757                           	global	__size_of_write_font
  3758                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  3759  006C                     	
  3760                           _write_font:	
  3761  0EA1                     ;incstack = 0
  3762 ;; hardware stack exceeded
  3763                           	opt	stack 0
  3764                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3765                           	line	230
  3766                           	
  3767                           l1939:	
  3768  0EA1                     ;Display.c: 228: void write_font(int fontPos);Display.c: 229: {;Display.c: 230:     disp
                                 lay_write_start();
  3769                           	fcall	_display_write_start
  3770  0EA1  120A  158A  220C  120A  158A  	line	232
  3771                           	
  3772                           l1941:	
  3773  0EA6                     ;Display.c: 232:     for(int x=0; x < 5; x++){
  3774                           	bsf	status, 5	;RP0=1, select bank1
  3775  0EA6  1683               	bcf	status, 6	;RP1=0, select bank1
  3776  0EA7  1303               	clrf	(write_font@x)^080h
  3777  0EA8  01AE               	clrf	(write_font@x+1)^080h
  3778  0EA9  01AF               	
  3779                           l1943:	
  3780  0EAA                     	movf	(write_font@x+1)^080h,w
  3781  0EAA  082F               	xorlw	80h
  3782  0EAB  3A80               	movwf	btemp+1
  3783  0EAC  00FF               	movlw	(0)^80h
  3784  0EAD  3080               	subwf	btemp+1,w
  3785  0EAE  027F               	skipz
  3786  0EAF  1D03               	goto	u1645
  3787  0EB0  2EB3               	movlw	05h
  3788  0EB1  3005               	subwf	(write_font@x)^080h,w
  3789  0EB2  022E               u1645:
  3790  0EB3                     
  3791                           	skipc
  3792  0EB3  1C03               	goto	u1641
  3793  0EB4  2EB6               	goto	u1640
  3794  0EB5  2EB7               u1641:
  3795  0EB6                     	goto	l1947
  3796  0EB6  2EB9               u1640:
  3797  0EB7                     	goto	l1953
  3798  0EB7  2F07               	
  3799                           l1945:	
  3800  0EB8                     	goto	l1953
  3801  0EB8  2F07               	
  3802                           l178:	
  3803  0EB9                     	line	233
  3804                           	
  3805                           l1947:	
  3806  0EB9                     ;Display.c: 233:         spiWrite(font[fontPos][x]);
  3807                           	bsf	status, 5	;RP0=1, select bank1
  3808  0EB9  1683               	bcf	status, 6	;RP1=0, select bank1
  3809  0EBA  1303               	movf	(write_font@x+1)^080h,w
  3810  0EBB  082F               	movwf	(??_write_font+0)^080h+0+1
  3811  0EBC  00A9               	movf	(write_font@x)^080h,w
  3812  0EBD  082E               	movwf	(??_write_font+0)^080h+0
  3813  0EBE  00A8               	clrc
  3814  0EBF  1003               	rlf	(??_write_font+0)^080h+0,f
  3815  0EC0  0DA8               	rlf	(??_write_font+0)^080h+1,f
  3816  0EC1  0DA9               	movf	(write_font@fontPos+1)^080h,w
  3817  0EC2  0827               	movwf	(___wmul@multiplier+1)^080h
  3818  0EC3  00A1               	movf	(write_font@fontPos)^080h,w
  3819  0EC4  0826               	movwf	(___wmul@multiplier)^080h
  3820  0EC5  00A0               	movlw	0Ah
  3821  0EC6  300A               	movwf	(___wmul@multiplicand)^080h
  3822  0EC7  00A2               	movlw	0
  3823  0EC8  3000               	movwf	((___wmul@multiplicand)^080h)+1
  3824  0EC9  00A3               	fcall	___wmul
  3825  0ECA  120A  158A  225A  120A  158A  	movlw	low(((_font)|8000h))
  3826  0ECF  3012               	bsf	status, 5	;RP0=1, select bank1
  3827  0ED0  1683               	bcf	status, 6	;RP1=0, select bank1
  3828  0ED1  1303               	movwf	(??_write_font+2)^080h+0
  3829  0ED2  00AA               	movlw	high(((_font)|8000h))
  3830  0ED3  3083               	movwf	(??_write_font+2)^080h+0+1
  3831  0ED4  00AB               	movf	(0+(?___wmul))^080h,w
  3832  0ED5  0820               	addwf	0+(??_write_font+2)^080h+0,w
  3833  0ED6  072A               	movwf	(??_write_font+4)^080h+0
  3834  0ED7  00AC               	movf	(1+(?___wmul))^080h,w
  3835  0ED8  0821               	skipnc
  3836  0ED9  1803               	incf	(1+(?___wmul))^080h,w
  3837  0EDA  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  3838  0EDB  072B               	movwf	1+(??_write_font+4)^080h+0
  3839  0EDC  00AD               	movf	0+(??_write_font+0)^080h+0,w
  3840  0EDD  0828               	addwf	0+(??_write_font+4)^080h+0,w
  3841  0EDE  072C               	movwf	fsr0
  3842  0EDF  0084               	movf	1+(??_write_font+0)^080h+0,w
  3843  0EE0  0829               	skipnc
  3844  0EE1  1803               	incf	1+(??_write_font+0)^080h+0,w
  3845  0EE2  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  3846  0EE3  072D               	bcf	status, 5	;RP0=0, select bank0
  3847  0EE4  1283               	bcf	status, 6	;RP1=0, select bank0
  3848  0EE5  1303               	movwf	btemp+1
  3849  0EE6  00FF               	fcall	stringtab
  3850  0EE7  120A  118A  2300  120A  158A  	fcall	_spiWrite
  3851  0EEC  120A  118A  22EC  120A  158A  	line	234
  3852                           	
  3853                           l1949:	
  3854  0EF1                     ;Display.c: 234:     }
  3855                           	movlw	01h
  3856  0EF1  3001               	bsf	status, 5	;RP0=1, select bank1
  3857  0EF2  1683               	bcf	status, 6	;RP1=0, select bank1
  3858  0EF3  1303               	addwf	(write_font@x)^080h,f
  3859  0EF4  07AE               	skipnc
  3860  0EF5  1803               	incf	(write_font@x+1)^080h,f
  3861  0EF6  0AAF               	movlw	0
  3862  0EF7  3000               	addwf	(write_font@x+1)^080h,f
  3863  0EF8  07AF               	
  3864                           l1951:	
  3865  0EF9                     	movf	(write_font@x+1)^080h,w
  3866  0EF9  082F               	xorlw	80h
  3867  0EFA  3A80               	movwf	btemp+1
  3868  0EFB  00FF               	movlw	(0)^80h
  3869  0EFC  3080               	subwf	btemp+1,w
  3870  0EFD  027F               	skipz
  3871  0EFE  1D03               	goto	u1655
  3872  0EFF  2F02               	movlw	05h
  3873  0F00  3005               	subwf	(write_font@x)^080h,w
  3874  0F01  022E               u1655:
  3875  0F02                     
  3876                           	skipc
  3877  0F02  1C03               	goto	u1651
  3878  0F03  2F05               	goto	u1650
  3879  0F04  2F06               u1651:
  3880  0F05                     	goto	l1947
  3881  0F05  2EB9               u1650:
  3882  0F06                     	goto	l1953
  3883  0F06  2F07               	
  3884                           l179:	
  3885  0F07                     	line	238
  3886                           	
  3887                           l1953:	
  3888  0F07                     ;Display.c: 238:     display_write_end();
  3889                           	fcall	_display_write_end
  3890  0F07  120A  158A  21FD  120A  158A  	line	239
  3891                           	
  3892                           l180:	
  3893  0F0C                     	return
  3894  0F0C  0008               	opt stack 0
  3895                           GLOBAL	__end_of_write_font
  3896                           	__end_of_write_font:
  3897  0F0D                     	signat	_write_font,4217
  3898                           	global	_display_write_start
  3899                           
  3900 ;; *************** function _display_write_start *****************
  3901 ;; Defined at:
  3902 ;;		line 242 in file "Display.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0
  3919 ;;      Totals:         0       0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; Hardware stack levels required when called:    4
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_write_space
  3927 ;;		_write_font
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3931                           	line	242
  3932                           global __ptext8
  3933                           __ptext8:	;psect for function _display_write_start
  3934  0A0C                     psect	text8
  3935                           	file	"Display.c"
  3936                           	line	242
  3937                           	global	__size_of_display_write_start
  3938                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  3939  000F                     	
  3940                           _display_write_start:	
  3941  0A0C                     ;incstack = 0
  3942 ;; hardware stack exceeded
  3943                           	opt	stack 0
  3944                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  3945                           	line	244
  3946                           	
  3947                           l1917:	
  3948  0A0C                     ;Display.c: 244:     if (_selectedDisplay == 0) {
  3949                           	bsf	status, 5	;RP0=1, select bank1
  3950  0A0C  1683               	bcf	status, 6	;RP1=0, select bank1
  3951  0A0D  1303               	movf	((__selectedDisplay)^080h),w
  3952  0A0E  084D               	btfss	status,2
  3953  0A0F  1D03               	goto	u1581
  3954  0A10  2A12               	goto	u1580
  3955  0A11  2A13               u1581:
  3956  0A12                     	goto	l183
  3957  0A12  2A17               u1580:
  3958  0A13                     	line	245
  3959                           	
  3960                           l1919:	
  3961  0A13                     ;Display.c: 245:         PORTCbits.RC4 = 0;
  3962                           	bcf	status, 5	;RP0=0, select bank0
  3963  0A13  1283               	bcf	status, 6	;RP1=0, select bank0
  3964  0A14  1303               	bcf	(7),4	;volatile
  3965  0A15  1207               	line	246
  3966                           ;Display.c: 246:         return;
  3967                           	goto	l184
  3968  0A16  2A1A               	line	247
  3969                           ;Display.c: 247:     }
  3970                           	
  3971                           l183:	
  3972  0A17                     	line	249
  3973                           ;Display.c: 249:     PORTDbits.RD4 = 0;
  3974                           	bcf	status, 5	;RP0=0, select bank0
  3975  0A17  1283               	bcf	status, 6	;RP1=0, select bank0
  3976  0A18  1303               	bcf	(8),4	;volatile
  3977  0A19  1208               	line	250
  3978                           	
  3979                           l184:	
  3980  0A1A                     	return
  3981  0A1A  0008               	opt stack 0
  3982                           GLOBAL	__end_of_display_write_start
  3983                           	__end_of_display_write_start:
  3984  0A1B                     	signat	_display_write_start,89
  3985                           	global	_display_write_end
  3986                           
  3987 ;; *************** function _display_write_end *****************
  3988 ;; Defined at:
  3989 ;;		line 253 in file "Display.c"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, status,2, status,0
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4003 ;;      Params:         0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:    4
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_write_space
  4014 ;;		_write_font
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4018                           	line	253
  4019                           global __ptext9
  4020                           __ptext9:	;psect for function _display_write_end
  4021  09FD                     psect	text9
  4022                           	file	"Display.c"
  4023                           	line	253
  4024                           	global	__size_of_display_write_end
  4025                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  4026  000F                     	
  4027                           _display_write_end:	
  4028  09FD                     ;incstack = 0
  4029 ;; hardware stack exceeded
  4030                           	opt	stack 0
  4031                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  4032                           	line	255
  4033                           	
  4034                           l1921:	
  4035  09FD                     ;Display.c: 255:     if (_selectedDisplay == 0) {
  4036                           	bsf	status, 5	;RP0=1, select bank1
  4037  09FD  1683               	bcf	status, 6	;RP1=0, select bank1
  4038  09FE  1303               	movf	((__selectedDisplay)^080h),w
  4039  09FF  084D               	btfss	status,2
  4040  0A00  1D03               	goto	u1591
  4041  0A01  2A03               	goto	u1590
  4042  0A02  2A04               u1591:
  4043  0A03                     	goto	l187
  4044  0A03  2A08               u1590:
  4045  0A04                     	line	256
  4046                           	
  4047                           l1923:	
  4048  0A04                     ;Display.c: 256:         PORTCbits.RC4 = 1;
  4049                           	bcf	status, 5	;RP0=0, select bank0
  4050  0A04  1283               	bcf	status, 6	;RP1=0, select bank0
  4051  0A05  1303               	bsf	(7),4	;volatile
  4052  0A06  1607               	line	257
  4053                           ;Display.c: 257:         return;
  4054                           	goto	l188
  4055  0A07  2A0B               	line	258
  4056                           ;Display.c: 258:     }
  4057                           	
  4058                           l187:	
  4059  0A08                     	line	260
  4060                           ;Display.c: 260:     PORTDbits.RD4 = 1;
  4061                           	bcf	status, 5	;RP0=0, select bank0
  4062  0A08  1283               	bcf	status, 6	;RP1=0, select bank0
  4063  0A09  1303               	bsf	(8),4	;volatile
  4064  0A0A  1608               	line	261
  4065                           	
  4066                           l188:	
  4067  0A0B                     	return
  4068  0A0B  0008               	opt stack 0
  4069                           GLOBAL	__end_of_display_write_end
  4070                           	__end_of_display_write_end:
  4071  0A0C                     	signat	_display_write_end,89
  4072                           	global	___wmul
  4073                           
  4074 ;; *************** function ___wmul *****************
  4075 ;; Defined at:
  4076 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  multiplier      2    0[BANK1 ] unsigned int 
  4079 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  product         2    4[BANK1 ] unsigned int 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  2    0[BANK1 ] unsigned int 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         0       0       4       0       0
  4092 ;;      Locals:         0       0       2       0       0
  4093 ;;      Temps:          0       0       0       0       0
  4094 ;;      Totals:         0       0       6       0       0
  4095 ;;Total ram usage:        6 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    4
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_write_font
  4102 ;;		_write_volume
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4106                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  4107                           	line	15
  4108                           global __ptext10
  4109                           __ptext10:	;psect for function ___wmul
  4110  0A5A                     psect	text10
  4111                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  4112                           	line	15
  4113                           	global	__size_of___wmul
  4114                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  4115  002A                     	
  4116                           ___wmul:	
  4117  0A5A                     ;incstack = 0
  4118 ;; hardware stack exceeded
  4119                           	opt	stack 0
  4120                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4121                           	line	43
  4122                           	
  4123                           l1925:	
  4124  0A5A                     	bsf	status, 5	;RP0=1, select bank1
  4125  0A5A  1683               	bcf	status, 6	;RP1=0, select bank1
  4126  0A5B  1303               	clrf	(___wmul@product)^080h
  4127  0A5C  01A4               	clrf	(___wmul@product+1)^080h
  4128  0A5D  01A5               	goto	l1927
  4129  0A5E  2A5F               	line	44
  4130                           	
  4131                           l477:	
  4132  0A5F                     	line	45
  4133                           	
  4134                           l1927:	
  4135  0A5F                     	btfss	(___wmul@multiplier)^080h,(0)&7
  4136  0A5F  1C20               	goto	u1601
  4137  0A60  2A62               	goto	u1600
  4138  0A61  2A63               u1601:
  4139  0A62                     	goto	l478
  4140  0A62  2A69               u1600:
  4141  0A63                     	line	46
  4142                           	
  4143                           l1929:	
  4144  0A63                     	movf	(___wmul@multiplicand)^080h,w
  4145  0A63  0822               	addwf	(___wmul@product)^080h,f
  4146  0A64  07A4               	skipnc
  4147  0A65  1803               	incf	(___wmul@product+1)^080h,f
  4148  0A66  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  4149  0A67  0823               	addwf	(___wmul@product+1)^080h,f
  4150  0A68  07A5               	
  4151                           l478:	
  4152  0A69                     	line	47
  4153                           	movlw	01h
  4154  0A69  3001               	
  4155                           u1615:
  4156  0A6A                     	clrc
  4157  0A6A  1003               	rlf	(___wmul@multiplicand)^080h,f
  4158  0A6B  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  4159  0A6C  0DA3               	addlw	-1
  4160  0A6D  3EFF               	skipz
  4161  0A6E  1D03               	goto	u1615
  4162  0A6F  2A6A               	line	48
  4163                           	
  4164                           l1931:	
  4165  0A70                     	movlw	01h
  4166  0A70  3001               	
  4167                           u1625:
  4168  0A71                     	clrc
  4169  0A71  1003               	rrf	(___wmul@multiplier+1)^080h,f
  4170  0A72  0CA1               	rrf	(___wmul@multiplier)^080h,f
  4171  0A73  0CA0               	addlw	-1
  4172  0A74  3EFF               	skipz
  4173  0A75  1D03               	goto	u1625
  4174  0A76  2A71               	line	49
  4175                           	
  4176                           l1933:	
  4177  0A77                     	movf	((___wmul@multiplier)^080h),w
  4178  0A77  0820               iorwf	((___wmul@multiplier+1)^080h),w
  4179  0A78  0421               	btfss	status,2
  4180  0A79  1D03               	goto	u1631
  4181  0A7A  2A7C               	goto	u1630
  4182  0A7B  2A7D               u1631:
  4183  0A7C                     	goto	l1927
  4184  0A7C  2A5F               u1630:
  4185  0A7D                     	goto	l1935
  4186  0A7D  2A7E               	
  4187                           l479:	
  4188  0A7E                     	line	52
  4189                           	
  4190                           l1935:	
  4191  0A7E                     	movf	(___wmul@product+1)^080h,w
  4192  0A7E  0825               	movwf	(?___wmul+1)^080h
  4193  0A7F  00A1               	movf	(___wmul@product)^080h,w
  4194  0A80  0824               	movwf	(?___wmul)^080h
  4195  0A81  00A0               	goto	l480
  4196  0A82  2A83               	
  4197                           l1937:	
  4198  0A83                     	line	53
  4199                           	
  4200                           l480:	
  4201  0A83                     	return
  4202  0A83  0008               	opt stack 0
  4203                           GLOBAL	__end_of___wmul
  4204                           	__end_of___wmul:
  4205  0A84                     	signat	___wmul,8314
  4206                           	global	_sprintf
  4207                           
  4208 ;; *************** function _sprintf *****************
  4209 ;; Defined at:
  4210 ;;		line 500 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  sp              1    wreg     PTR unsigned char 
  4213 ;;		 -> write_int@num(2), 
  4214 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4215 ;;		 -> STR_3(3), 
  4216 ;; Auto vars:     Size  Location     Type
  4217 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  4218 ;;		 -> write_int@num(2), 
  4219 ;;  tmpval          4    0        struct .
  4220 ;;  val             2   25[BANK1 ] unsigned int 
  4221 ;;  cp              2    0        PTR const unsigned char 
  4222 ;;  len             2    0        unsigned int 
  4223 ;;  c               1   28[BANK1 ] unsigned char 
  4224 ;;  prec            1   24[BANK1 ] char 
  4225 ;;  flag            1   23[BANK1 ] unsigned char 
  4226 ;;  ap              1   22[BANK1 ] PTR void [1]
  4227 ;;		 -> ?_sprintf(2), 
  4228 ;; Return value:  Size  Location     Type
  4229 ;;                  2   14[BANK1 ] int 
  4230 ;; Registers used:
  4231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4232 ;; Tracked objects:
  4233 ;;		On entry : 0/0
  4234 ;;		On exit  : 0/0
  4235 ;;		Unchanged: 0/0
  4236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4237 ;;      Params:         0       0       4       0       0
  4238 ;;      Locals:         0       0       7       0       0
  4239 ;;      Temps:          0       0       4       0       0
  4240 ;;      Totals:         0       0      15       0       0
  4241 ;;Total ram usage:       15 bytes
  4242 ;; Hardware stack levels used:    1
  4243 ;; Hardware stack levels required when called:    5
  4244 ;; This function calls:
  4245 ;;		___lwdiv
  4246 ;;		___lwmod
  4247 ;; This function is called by:
  4248 ;;		_write_int
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4252                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4253                           	line	500
  4254                           global __ptext11
  4255                           __ptext11:	;psect for function _sprintf
  4256  049D                     psect	text11
  4257                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  4258                           	line	500
  4259                           	global	__size_of_sprintf
  4260                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4261  0136                     	
  4262                           _sprintf:	
  4263  049D                     ;incstack = 0
  4264 ;; using string table level
  4265                           	opt	stack 1
  4266                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4267                           ;sprintf@sp stored from wreg
  4268                           	bsf	status, 5	;RP0=1, select bank1
  4269  049D  1683               	bcf	status, 6	;RP1=0, select bank1
  4270  049E  1303               	movwf	(sprintf@sp)^080h
  4271  049F  00BB               	line	545
  4272                           	
  4273                           l2035:	
  4274  04A0                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
                                  char * f, ...);/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
                                 crochip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.00/pic/source
                                 s/c90/common/doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.00/pic/sources/c90/
                                 common/doprnt.c: 520:  unsigned char flag;;/opt/microchip/xc8/v2.00/pic/sources/c90/comm
                                 on/doprnt.c: 538:  } tmpval;
  4275                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  4276  04A0  30B0               	movwf	(??_sprintf+0)^080h+0
  4277  04A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4278  04A2  0832               	movwf	(sprintf@ap)^080h
  4279  04A3  00B6               	line	548
  4280                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4281                           	goto	l2087
  4282  04A4  2DAB               	
  4283                           l456:	
  4284  04A5                     	line	550
  4285                           	
  4286                           l2037:	
  4287  04A5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  4288                           		movlw	37
  4289  04A5  3025               	xorwf	((sprintf@c)^080h),w
  4290  04A6  063C               	btfsc	status,2
  4291  04A7  1903               	goto	u1861
  4292  04A8  2CAA               	goto	u1860
  4293  04A9  2CAB               u1861:
  4294  04AA                     	goto	l2043
  4295  04AA  2CB7               u1860:
  4296  04AB                     	line	553
  4297                           	
  4298                           l2039:	
  4299  04AB                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
                                 2.00/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  4300                           	movf	(sprintf@c)^080h,w
  4301  04AB  083C               	movwf	(??_sprintf+0)^080h+0
  4302  04AC  00B2               	movf	(sprintf@sp)^080h,w
  4303  04AD  083B               	movwf	fsr0
  4304  04AE  0084               	movf	(??_sprintf+0)^080h+0,w
  4305  04AF  0832               	bcf	status, 7	;select IRP bank0
  4306  04B0  1383               	movwf	indf
  4307  04B1  0080               	
  4308                           l2041:	
  4309  04B2                     	movlw	low(01h)
  4310  04B2  3001               	movwf	(??_sprintf+0)^080h+0
  4311  04B3  00B2               	movf	(??_sprintf+0)^080h+0,w
  4312  04B4  0832               	addwf	(sprintf@sp)^080h,f
  4313  04B5  07BB               	line	554
  4314                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 554:    continue;
  4315                           	goto	l2087
  4316  04B6  2DAB               	line	555
  4317                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 555:   }
  4318                           	
  4319                           l457:	
  4320  04B7                     	line	560
  4321                           	
  4322                           l2043:	
  4323  04B7                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  4324                           	clrf	(sprintf@flag)^080h
  4325  04B7  01B7               	line	654
  4326                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 654:   switch(c = *f++) {
  4327                           	goto	l2047
  4328  04B8  2CBE               	line	656
  4329                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 656:   case 0:
  4330                           	
  4331                           l459:	
  4332  04B9                     	line	657
  4333                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 657:    goto alldone;
  4334                           	goto	l2089
  4335  04B9  2DCD               	line	716
  4336                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 716:   case 'd':
  4337                           	
  4338                           l461:	
  4339  04BA                     	goto	l2049
  4340  04BA  2CE9               	line	717
  4341                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 717:   case 'i':
  4342                           	
  4343                           l462:	
  4344  04BB                     	line	718
  4345                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 718:    break;
  4346                           	goto	l2049
  4347  04BB  2CE9               	line	821
  4348                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 821:   default:
  4349                           	
  4350                           l464:	
  4351  04BC                     	line	832
  4352                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 832:    continue;
  4353                           	goto	l2087
  4354  04BC  2DAB               	line	841
  4355                           	
  4356                           l2045:	
  4357  04BD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 841:   }
  4358                           	goto	l2049
  4359  04BD  2CE9               	
  4360                           l458:	
  4361  04BE                     	
  4362                           l2047:	
  4363  04BE                     	movf	(sprintf@f+1)^080h,w
  4364  04BE  082F               	movwf	(??_sprintf+0)^080h+0+1
  4365  04BF  00B3               	movf	(sprintf@f)^080h,w
  4366  04C0  082E               	movwf	(??_sprintf+0)^080h+0
  4367  04C1  00B2               	incf	(sprintf@f)^080h,f
  4368  04C2  0AAE               	skipnz
  4369  04C3  1903               	incf	(sprintf@f+1)^080h,f
  4370  04C4  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4371  04C5  0833               	bcf	status, 5	;RP0=0, select bank0
  4372  04C6  1283               	bcf	status, 6	;RP1=0, select bank0
  4373  04C7  1303               	movwf	btemp+1
  4374  04C8  00FF               	bsf	status, 5	;RP0=1, select bank1
  4375  04C9  1683               	bcf	status, 6	;RP1=0, select bank1
  4376  04CA  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4377  04CB  0832               	movwf	fsr0
  4378  04CC  0084               	bcf	status, 5	;RP0=0, select bank0
  4379  04CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4380  04CE  1303               	fcall	stringtab
  4381  04CF  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4382  04D4  1683               	bcf	status, 6	;RP1=0, select bank1
  4383  04D5  1303               	movwf	(sprintf@c)^080h
  4384  04D6  00BC               	movwf	(??_sprintf+2)^080h+0
  4385  04D7  00B4               	clrf	(??_sprintf+2)^080h+0+1
  4386  04D8  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4387                           ; Switch size 1, requested type "space"
  4388                           ; Number of cases is 1, Range of values is 0 to 0
  4389                           ; switch strategies available:
  4390                           ; Name         Instructions Cycles
  4391                           ; simple_byte            4     3 (average)
  4392                           ; direct_byte           11     8 (fixed)
  4393                           ; jumptable            260     6 (fixed)
  4394                           ;	Chosen strategy is simple_byte
  4395                           
  4396                           	movf 1+(??_sprintf+2)^080h+0,w
  4397  04D9  0835               	opt asmopt_push
  4398                           	opt asmopt_off
  4399                           	xorlw	0^0	; case 0
  4400  04DA  3A00               	skipnz
  4401  04DB  1903               	goto	l2855
  4402  04DC  2CDE               	goto	l2087
  4403  04DD  2DAB               	opt asmopt_pop
  4404                           	
  4405                           l2855:	
  4406  04DE                     ; Switch size 1, requested type "space"
  4407                           ; Number of cases is 3, Range of values is 0 to 105
  4408                           ; switch strategies available:
  4409                           ; Name         Instructions Cycles
  4410                           ; simple_byte           10     6 (average)
  4411                           ; jumptable            260     6 (fixed)
  4412                           ;	Chosen strategy is simple_byte
  4413                           
  4414                           	movf 0+(??_sprintf+2)^080h+0,w
  4415  04DE  0834               	opt asmopt_push
  4416                           	opt asmopt_off
  4417                           	xorlw	0^0	; case 0
  4418  04DF  3A00               	skipnz
  4419  04E0  1903               	goto	l2089
  4420  04E1  2DCD               	xorlw	100^0	; case 100
  4421  04E2  3A64               	skipnz
  4422  04E3  1903               	goto	l2049
  4423  04E4  2CE9               	xorlw	105^100	; case 105
  4424  04E5  3A0D               	skipnz
  4425  04E6  1903               	goto	l2049
  4426  04E7  2CE9               	goto	l2087
  4427  04E8  2DAB               	opt asmopt_pop
  4428                           
  4429                           	
  4430                           l463:	
  4431  04E9                     	line	1278
  4432                           	
  4433                           l2049:	
  4434  04E9                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
                                 ap), (int)0));
  4435                           	movf	(sprintf@ap)^080h,w
  4436  04E9  0836               	movwf	fsr0
  4437  04EA  0084               	bcf	status, 7	;select IRP bank0
  4438  04EB  1383               	movf	indf,w
  4439  04EC  0800               	movwf	(sprintf@val)^080h
  4440  04ED  00B9               	incf	fsr0,f
  4441  04EE  0A84               	movf	indf,w
  4442  04EF  0800               	movwf	(sprintf@val+1)^080h
  4443  04F0  00BA               	
  4444                           l2051:	
  4445  04F1                     	movlw	low(02h)
  4446  04F1  3002               	movwf	(??_sprintf+0)^080h+0
  4447  04F2  00B2               	movf	(??_sprintf+0)^080h+0,w
  4448  04F3  0832               	addwf	(sprintf@ap)^080h,f
  4449  04F4  07B6               	line	1280
  4450                           	
  4451                           l2053:	
  4452  04F5                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  4453                           	btfss	(sprintf@val+1)^080h,7
  4454  04F5  1FBA               	goto	u1871
  4455  04F6  2CF8               	goto	u1870
  4456  04F7  2CF9               u1871:
  4457  04F8                     	goto	l2059
  4458  04F8  2D03               u1870:
  4459  04F9                     	line	1281
  4460                           	
  4461                           l2055:	
  4462  04F9                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  4463                           	movlw	low(03h)
  4464  04F9  3003               	movwf	(??_sprintf+0)^080h+0
  4465  04FA  00B2               	movf	(??_sprintf+0)^080h+0,w
  4466  04FB  0832               	iorwf	(sprintf@flag)^080h,f
  4467  04FC  04B7               	line	1282
  4468                           	
  4469                           l2057:	
  4470  04FD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  4471                           	comf	(sprintf@val)^080h,f
  4472  04FD  09B9               	comf	(sprintf@val+1)^080h,f
  4473  04FE  09BA               	incf	(sprintf@val)^080h,f
  4474  04FF  0AB9               	skipnz
  4475  0500  1903               	incf	(sprintf@val+1)^080h,f
  4476  0501  0ABA               	goto	l2059
  4477  0502  2D03               	line	1283
  4478                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1283:    }
  4479                           	
  4480                           l465:	
  4481  0503                     	line	1324
  4482                           	
  4483                           l2059:	
  4484  0503                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
                                 powers[0] ; c++)
  4485                           	clrf	(sprintf@c)^080h
  4486  0503  01BC               	incf	(sprintf@c)^080h,f
  4487  0504  0ABC               	
  4488                           l2061:	
  4489  0505                     		movlw	5
  4490  0505  3005               	xorwf	((sprintf@c)^080h),w
  4491  0506  063C               	btfss	status,2
  4492  0507  1D03               	goto	u1881
  4493  0508  2D0A               	goto	u1880
  4494  0509  2D0B               u1881:
  4495  050A                     	goto	l2065
  4496  050A  2D0D               u1880:
  4497  050B                     	goto	l2071
  4498  050B  2D41               	
  4499                           l2063:	
  4500  050C                     	goto	l2071
  4501  050C  2D41               	
  4502                           l466:	
  4503  050D                     	line	1325
  4504                           	
  4505                           l2065:	
  4506  050D                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
                                 )
  4507                           	movf	(sprintf@c)^080h,w
  4508  050D  083C               	movwf	(??_sprintf+0)^080h+0
  4509  050E  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4510  050F  0732               	addlw	low(((_dpowers)|8000h))
  4511  0510  3E84               	movwf	fsr0
  4512  0511  0084               	movlw	high(((_dpowers)|8000h))
  4513  0512  3084               	skipnc
  4514  0513  1803               	addlw	1
  4515  0514  3E01               	bcf	status, 5	;RP0=0, select bank0
  4516  0515  1283               	bcf	status, 6	;RP1=0, select bank0
  4517  0516  1303               	movwf	btemp+1
  4518  0517  00FF               	fcall	stringtab
  4519  0518  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4520  051D  1683               	bcf	status, 6	;RP1=0, select bank1
  4521  051E  1303               	movwf	(??_sprintf+1)^080h+0
  4522  051F  00B3               	bcf	status, 5	;RP0=0, select bank0
  4523  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  4524  0521  1303               	fcall	stringtab
  4525  0522  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4526  0527  1683               	bcf	status, 6	;RP1=0, select bank1
  4527  0528  1303               	movwf	(??_sprintf+1)^080h+0+1
  4528  0529  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  4529  052A  0834               	subwf	(sprintf@val+1)^080h,w
  4530  052B  023A               	skipz
  4531  052C  1D03               	goto	u1895
  4532  052D  2D30               	movf	0+(??_sprintf+1)^080h+0,w
  4533  052E  0833               	subwf	(sprintf@val)^080h,w
  4534  052F  0239               u1895:
  4535  0530                     	skipnc
  4536  0530  1803               	goto	u1891
  4537  0531  2D33               	goto	u1890
  4538  0532  2D34               u1891:
  4539  0533                     	goto	l2069
  4540  0533  2D36               u1890:
  4541  0534                     	goto	l2071
  4542  0534  2D41               	line	1326
  4543                           	
  4544                           l2067:	
  4545  0535                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1326:      break;
  4546                           	goto	l2071
  4547  0535  2D41               	
  4548                           l468:	
  4549  0536                     	
  4550                           l2069:	
  4551  0536                     	movlw	low(01h)
  4552  0536  3001               	movwf	(??_sprintf+0)^080h+0
  4553  0537  00B2               	movf	(??_sprintf+0)^080h+0,w
  4554  0538  0832               	addwf	(sprintf@c)^080h,f
  4555  0539  07BC               		movlw	5
  4556  053A  3005               	xorwf	((sprintf@c)^080h),w
  4557  053B  063C               	btfss	status,2
  4558  053C  1D03               	goto	u1901
  4559  053D  2D3F               	goto	u1900
  4560  053E  2D40               u1901:
  4561  053F                     	goto	l2065
  4562  053F  2D0D               u1900:
  4563  0540                     	goto	l2071
  4564  0540  2D41               	
  4565                           l467:	
  4566  0541                     	line	1457
  4567                           	
  4568                           l2071:	
  4569  0541                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  4570                           	movf	(sprintf@flag)^080h,w
  4571  0541  0837               	andlw	03h
  4572  0542  3903               	btfsc	status,2
  4573  0543  1903               	goto	u1911
  4574  0544  2D46               	goto	u1910
  4575  0545  2D47               u1911:
  4576  0546                     	goto	l2077
  4577  0546  2D53               u1910:
  4578  0547                     	line	1458
  4579                           	
  4580                           l2073:	
  4581  0547                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));

  4582                           	movlw	low(02Dh)
  4583  0547  302D               	movwf	(??_sprintf+0)^080h+0
  4584  0548  00B2               	movf	(sprintf@sp)^080h,w
  4585  0549  083B               	movwf	fsr0
  4586  054A  0084               	movf	(??_sprintf+0)^080h+0,w
  4587  054B  0832               	bcf	status, 7	;select IRP bank0
  4588  054C  1383               	movwf	indf
  4589  054D  0080               	
  4590                           l2075:	
  4591  054E                     	movlw	low(01h)
  4592  054E  3001               	movwf	(??_sprintf+0)^080h+0
  4593  054F  00B2               	movf	(??_sprintf+0)^080h+0,w
  4594  0550  0832               	addwf	(sprintf@sp)^080h,f
  4595  0551  07BB               	goto	l2077
  4596  0552  2D53               	
  4597                           l469:	
  4598  0553                     	line	1491
  4599                           	
  4600                           l2077:	
  4601  0553                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  4602                           	movf	(sprintf@c)^080h,w
  4603  0553  083C               	movwf	(??_sprintf+0)^080h+0
  4604  0554  00B2               	movf	(??_sprintf+0)^080h+0,w
  4605  0555  0832               	movwf	(sprintf@prec)^080h
  4606  0556  00B8               	line	1493
  4607                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4608                           	goto	l2085
  4609  0557  2DA0               	
  4610                           l471:	
  4611  0558                     	line	1508
  4612                           	
  4613                           l2079:	
  4614  0558                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';

  4615                           	movlw	0Ah
  4616  0558  300A               	movwf	(___lwmod@divisor)^080h
  4617  0559  00A8               	movlw	0
  4618  055A  3000               	movwf	((___lwmod@divisor)^080h)+1
  4619  055B  00A9               	movf	(sprintf@prec)^080h,w
  4620  055C  0838               	movwf	(??_sprintf+0)^080h+0
  4621  055D  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4622  055E  0732               	addlw	low(((_dpowers)|8000h))
  4623  055F  3E84               	movwf	fsr0
  4624  0560  0084               	movlw	high(((_dpowers)|8000h))
  4625  0561  3084               	skipnc
  4626  0562  1803               	addlw	1
  4627  0563  3E01               	bcf	status, 5	;RP0=0, select bank0
  4628  0564  1283               	bcf	status, 6	;RP1=0, select bank0
  4629  0565  1303               	movwf	btemp+1
  4630  0566  00FF               	fcall	stringtab
  4631  0567  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4632  056C  1683               	bcf	status, 6	;RP1=0, select bank1
  4633  056D  1303               	movwf	(___lwdiv@divisor)^080h
  4634  056E  00A0               	bcf	status, 5	;RP0=0, select bank0
  4635  056F  1283               	bcf	status, 6	;RP1=0, select bank0
  4636  0570  1303               	fcall	stringtab
  4637  0571  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4638  0576  1683               	bcf	status, 6	;RP1=0, select bank1
  4639  0577  1303               	movwf	(___lwdiv@divisor+1)^080h
  4640  0578  00A1               	movf	(sprintf@val+1)^080h,w
  4641  0579  083A               	movwf	(___lwdiv@dividend+1)^080h
  4642  057A  00A3               	movf	(sprintf@val)^080h,w
  4643  057B  0839               	movwf	(___lwdiv@dividend)^080h
  4644  057C  00A2               	fcall	___lwdiv
  4645  057D  120A  158A  2497  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4646  0582  1683               	bcf	status, 6	;RP1=0, select bank1
  4647  0583  1303               	movf	(1+(?___lwdiv))^080h,w
  4648  0584  0821               	movwf	(___lwmod@dividend+1)^080h
  4649  0585  00AB               	movf	(0+(?___lwdiv))^080h,w
  4650  0586  0820               	movwf	(___lwmod@dividend)^080h
  4651  0587  00AA               	fcall	___lwmod
  4652  0588  120A  158A  2409  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4653  058D  1683               	bcf	status, 6	;RP1=0, select bank1
  4654  058E  1303               	movf	(0+(?___lwmod))^080h,w
  4655  058F  0828               	addlw	030h
  4656  0590  3E30               	movwf	(??_sprintf+1)^080h+0
  4657  0591  00B3               	movf	(??_sprintf+1)^080h+0,w
  4658  0592  0833               	movwf	(sprintf@c)^080h
  4659  0593  00BC               	line	1543
  4660                           	
  4661                           l2081:	
  4662  0594                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  4663                           	movf	(sprintf@c)^080h,w
  4664  0594  083C               	movwf	(??_sprintf+0)^080h+0
  4665  0595  00B2               	movf	(sprintf@sp)^080h,w
  4666  0596  083B               	movwf	fsr0
  4667  0597  0084               	movf	(??_sprintf+0)^080h+0,w
  4668  0598  0832               	bcf	status, 7	;select IRP bank0
  4669  0599  1383               	movwf	indf
  4670  059A  0080               	
  4671                           l2083:	
  4672  059B                     	movlw	low(01h)
  4673  059B  3001               	movwf	(??_sprintf+0)^080h+0
  4674  059C  00B2               	movf	(??_sprintf+0)^080h+0,w
  4675  059D  0832               	addwf	(sprintf@sp)^080h,f
  4676  059E  07BB               	goto	l2085
  4677  059F  2DA0               	line	1544
  4678                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1544:   }
  4679                           	
  4680                           l470:	
  4681  05A0                     	line	1493
  4682                           	
  4683                           l2085:	
  4684  05A0                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  4685                           	movlw	low(-1)
  4686  05A0  30FF               	movwf	(??_sprintf+0)^080h+0
  4687  05A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4688  05A2  0832               	addwf	(sprintf@prec)^080h,f
  4689  05A3  07B8               		incf	(((sprintf@prec)^080h)),w
  4690  05A4  0A38               	btfss	status,2
  4691  05A5  1D03               	goto	u1921
  4692  05A6  2DA8               	goto	u1920
  4693  05A7  2DA9               u1921:
  4694  05A8                     	goto	l2079
  4695  05A8  2D58               u1920:
  4696  05A9                     	goto	l2087
  4697  05A9  2DAB               	
  4698                           l472:	
  4699  05AA                     	goto	l2087
  4700  05AA  2DAB               	line	1552
  4701                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1552:  }
  4702                           	
  4703                           l455:	
  4704  05AB                     	line	548
  4705                           	
  4706                           l2087:	
  4707  05AB                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  4708                           	movf	(sprintf@f+1)^080h,w
  4709  05AB  082F               	movwf	(??_sprintf+0)^080h+0+1
  4710  05AC  00B3               	movf	(sprintf@f)^080h,w
  4711  05AD  082E               	movwf	(??_sprintf+0)^080h+0
  4712  05AE  00B2               	incf	(sprintf@f)^080h,f
  4713  05AF  0AAE               	skipnz
  4714  05B0  1903               	incf	(sprintf@f+1)^080h,f
  4715  05B1  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4716  05B2  0833               	bcf	status, 5	;RP0=0, select bank0
  4717  05B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4718  05B4  1303               	movwf	btemp+1
  4719  05B5  00FF               	bsf	status, 5	;RP0=1, select bank1
  4720  05B6  1683               	bcf	status, 6	;RP1=0, select bank1
  4721  05B7  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4722  05B8  0832               	movwf	fsr0
  4723  05B9  0084               	bcf	status, 5	;RP0=0, select bank0
  4724  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4725  05BB  1303               	fcall	stringtab
  4726  05BC  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4727  05C1  1683               	bcf	status, 6	;RP1=0, select bank1
  4728  05C2  1303               	movwf	(??_sprintf+2)^080h+0
  4729  05C3  00B4               	movf	(??_sprintf+2)^080h+0,w
  4730  05C4  0834               	movwf	(sprintf@c)^080h
  4731  05C5  00BC               	movf	(((sprintf@c)^080h)),w
  4732  05C6  083C               	btfss	status,2
  4733  05C7  1D03               	goto	u1931
  4734  05C8  2DCA               	goto	u1930
  4735  05C9  2DCB               u1931:
  4736  05CA                     	goto	l2037
  4737  05CA  2CA5               u1930:
  4738  05CB                     	goto	l2089
  4739  05CB  2DCD               	
  4740                           l473:	
  4741  05CC                     	goto	l2089
  4742  05CC  2DCD               	line	1554
  4743                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1554: alldone:
  4744                           	
  4745                           l460:	
  4746  05CD                     	line	1557
  4747                           	
  4748                           l2089:	
  4749  05CD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  4750                           	movf	(sprintf@sp)^080h,w
  4751  05CD  083B               	movwf	fsr0
  4752  05CE  0084               	bcf	status, 7	;select IRP bank0
  4753  05CF  1383               	clrf	indf
  4754  05D0  0180               	goto	l474
  4755  05D1  2DD2               	line	1559
  4756                           	
  4757                           l2091:	
  4758  05D2                     	line	1560
  4759                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1559:  return 0;;	Return valu
                                 e of _sprintf is never used
  4760                           	
  4761                           l474:	
  4762  05D2                     	return
  4763  05D2  0008               	opt stack 0
  4764                           GLOBAL	__end_of_sprintf
  4765                           	__end_of_sprintf:
  4766  05D3                     	signat	_sprintf,4698
  4767                           	global	___lwmod
  4768                           
  4769 ;; *************** function ___lwmod *****************
  4770 ;; Defined at:
  4771 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4772 ;; Parameters:    Size  Location     Type
  4773 ;;  divisor         2    8[BANK1 ] unsigned int 
  4774 ;;  dividend        2   10[BANK1 ] unsigned int 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  counter         1   13[BANK1 ] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  2    8[BANK1 ] unsigned int 
  4779 ;; Registers used:
  4780 ;;		wreg, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         0       0       4       0       0
  4787 ;;      Locals:         0       0       1       0       0
  4788 ;;      Temps:          0       0       1       0       0
  4789 ;;      Totals:         0       0       6       0       0
  4790 ;;Total ram usage:        6 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    4
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_sprintf
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  4800                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4801                           	line	5
  4802                           global __ptext12
  4803                           __ptext12:	;psect for function ___lwmod
  4804  0C09                     psect	text12
  4805                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  4806                           	line	5
  4807                           	global	__size_of___lwmod
  4808                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4809  0043                     	
  4810                           ___lwmod:	
  4811  0C09                     ;incstack = 0
  4812                           	opt	stack 0
  4813                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4814                           	line	12
  4815                           	
  4816                           l2005:	
  4817  0C09                     	bsf	status, 5	;RP0=1, select bank1
  4818  0C09  1683               	bcf	status, 6	;RP1=0, select bank1
  4819  0C0A  1303               	movf	((___lwmod@divisor)^080h),w
  4820  0C0B  0828               iorwf	((___lwmod@divisor+1)^080h),w
  4821  0C0C  0429               	btfsc	status,2
  4822  0C0D  1903               	goto	u1791
  4823  0C0E  2C10               	goto	u1790
  4824  0C0F  2C11               u1791:
  4825  0C10                     	goto	l2023
  4826  0C10  2C46               u1790:
  4827  0C11                     	line	13
  4828                           	
  4829                           l2007:	
  4830  0C11                     	clrf	(___lwmod@counter)^080h
  4831  0C11  01AD               	incf	(___lwmod@counter)^080h,f
  4832  0C12  0AAD               	line	14
  4833                           	goto	l2013
  4834  0C13  2C20               	
  4835                           l755:	
  4836  0C14                     	line	15
  4837                           	
  4838                           l2009:	
  4839  0C14                     	movlw	01h
  4840  0C14  3001               	
  4841                           u1805:
  4842  0C15                     	clrc
  4843  0C15  1003               	rlf	(___lwmod@divisor)^080h,f
  4844  0C16  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  4845  0C17  0DA9               	addlw	-1
  4846  0C18  3EFF               	skipz
  4847  0C19  1D03               	goto	u1805
  4848  0C1A  2C15               	line	16
  4849                           	
  4850                           l2011:	
  4851  0C1B                     	movlw	low(01h)
  4852  0C1B  3001               	movwf	(??___lwmod+0)^080h+0
  4853  0C1C  00AC               	movf	(??___lwmod+0)^080h+0,w
  4854  0C1D  082C               	addwf	(___lwmod@counter)^080h,f
  4855  0C1E  07AD               	goto	l2013
  4856  0C1F  2C20               	line	17
  4857                           	
  4858                           l754:	
  4859  0C20                     	line	14
  4860                           	
  4861                           l2013:	
  4862  0C20                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  4863  0C20  1FA9               	goto	u1811
  4864  0C21  2C23               	goto	u1810
  4865  0C22  2C24               u1811:
  4866  0C23                     	goto	l2009
  4867  0C23  2C14               u1810:
  4868  0C24                     	goto	l2015
  4869  0C24  2C26               	
  4870                           l756:	
  4871  0C25                     	goto	l2015
  4872  0C25  2C26               	line	18
  4873                           	
  4874                           l757:	
  4875  0C26                     	line	19
  4876                           	
  4877                           l2015:	
  4878  0C26                     	movf	(___lwmod@divisor+1)^080h,w
  4879  0C26  0829               	subwf	(___lwmod@dividend+1)^080h,w
  4880  0C27  022B               	skipz
  4881  0C28  1D03               	goto	u1825
  4882  0C29  2C2C               	movf	(___lwmod@divisor)^080h,w
  4883  0C2A  0828               	subwf	(___lwmod@dividend)^080h,w
  4884  0C2B  022A               u1825:
  4885  0C2C                     	skipc
  4886  0C2C  1C03               	goto	u1821
  4887  0C2D  2C2F               	goto	u1820
  4888  0C2E  2C30               u1821:
  4889  0C2F                     	goto	l2019
  4890  0C2F  2C37               u1820:
  4891  0C30                     	line	20
  4892                           	
  4893                           l2017:	
  4894  0C30                     	movf	(___lwmod@divisor)^080h,w
  4895  0C30  0828               	subwf	(___lwmod@dividend)^080h,f
  4896  0C31  02AA               	movf	(___lwmod@divisor+1)^080h,w
  4897  0C32  0829               	skipc
  4898  0C33  1C03               	decf	(___lwmod@dividend+1)^080h,f
  4899  0C34  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  4900  0C35  02AB               	goto	l2019
  4901  0C36  2C37               	
  4902                           l758:	
  4903  0C37                     	line	21
  4904                           	
  4905                           l2019:	
  4906  0C37                     	movlw	01h
  4907  0C37  3001               	
  4908                           u1835:
  4909  0C38                     	clrc
  4910  0C38  1003               	rrf	(___lwmod@divisor+1)^080h,f
  4911  0C39  0CA9               	rrf	(___lwmod@divisor)^080h,f
  4912  0C3A  0CA8               	addlw	-1
  4913  0C3B  3EFF               	skipz
  4914  0C3C  1D03               	goto	u1835
  4915  0C3D  2C38               	line	22
  4916                           	
  4917                           l2021:	
  4918  0C3E                     	movlw	01h
  4919  0C3E  3001               	subwf	(___lwmod@counter)^080h,f
  4920  0C3F  02AD               	btfss	status,2
  4921  0C40  1D03               	goto	u1841
  4922  0C41  2C43               	goto	u1840
  4923  0C42  2C44               u1841:
  4924  0C43                     	goto	l2015
  4925  0C43  2C26               u1840:
  4926  0C44                     	goto	l2023
  4927  0C44  2C46               	
  4928                           l759:	
  4929  0C45                     	goto	l2023
  4930  0C45  2C46               	line	23
  4931                           	
  4932                           l753:	
  4933  0C46                     	line	24
  4934                           	
  4935                           l2023:	
  4936  0C46                     	movf	(___lwmod@dividend+1)^080h,w
  4937  0C46  082B               	movwf	(?___lwmod+1)^080h
  4938  0C47  00A9               	movf	(___lwmod@dividend)^080h,w
  4939  0C48  082A               	movwf	(?___lwmod)^080h
  4940  0C49  00A8               	goto	l760
  4941  0C4A  2C4B               	
  4942                           l2025:	
  4943  0C4B                     	line	25
  4944                           	
  4945                           l760:	
  4946  0C4B                     	return
  4947  0C4B  0008               	opt stack 0
  4948                           GLOBAL	__end_of___lwmod
  4949                           	__end_of___lwmod:
  4950  0C4C                     	signat	___lwmod,8314
  4951                           	global	___lwdiv
  4952                           
  4953 ;; *************** function ___lwdiv *****************
  4954 ;; Defined at:
  4955 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;  divisor         2    0[BANK1 ] unsigned int 
  4958 ;;  dividend        2    2[BANK1 ] unsigned int 
  4959 ;; Auto vars:     Size  Location     Type
  4960 ;;  quotient        2    5[BANK1 ] unsigned int 
  4961 ;;  counter         1    7[BANK1 ] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  2    0[BANK1 ] unsigned int 
  4964 ;; Registers used:
  4965 ;;		wreg, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4971 ;;      Params:         0       0       4       0       0
  4972 ;;      Locals:         0       0       3       0       0
  4973 ;;      Temps:          0       0       1       0       0
  4974 ;;      Totals:         0       0       8       0       0
  4975 ;;Total ram usage:        8 bytes
  4976 ;; Hardware stack levels used:    1
  4977 ;; Hardware stack levels required when called:    4
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_sprintf
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           psect	text13,local,class=CODE,delta=2,merge=1,group=1
  4985                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4986                           	line	5
  4987                           global __ptext13
  4988                           __ptext13:	;psect for function ___lwdiv
  4989  0C97                     psect	text13
  4990                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  4991                           	line	5
  4992                           	global	__size_of___lwdiv
  4993                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4994  004D                     	
  4995                           ___lwdiv:	
  4996  0C97                     ;incstack = 0
  4997                           	opt	stack 0
  4998                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4999                           	line	13
  5000                           	
  5001                           l1979:	
  5002  0C97                     	bsf	status, 5	;RP0=1, select bank1
  5003  0C97  1683               	bcf	status, 6	;RP1=0, select bank1
  5004  0C98  1303               	clrf	(___lwdiv@quotient)^080h
  5005  0C99  01A5               	clrf	(___lwdiv@quotient+1)^080h
  5006  0C9A  01A6               	line	14
  5007                           	
  5008                           l1981:	
  5009  0C9B                     	movf	((___lwdiv@divisor)^080h),w
  5010  0C9B  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  5011  0C9C  0421               	btfsc	status,2
  5012  0C9D  1903               	goto	u1721
  5013  0C9E  2CA0               	goto	u1720
  5014  0C9F  2CA1               u1721:
  5015  0CA0                     	goto	l2001
  5016  0CA0  2CDE               u1720:
  5017  0CA1                     	line	15
  5018                           	
  5019                           l1983:	
  5020  0CA1                     	clrf	(___lwdiv@counter)^080h
  5021  0CA1  01A7               	incf	(___lwdiv@counter)^080h,f
  5022  0CA2  0AA7               	line	16
  5023                           	goto	l1989
  5024  0CA3  2CB0               	
  5025                           l745:	
  5026  0CA4                     	line	17
  5027                           	
  5028                           l1985:	
  5029  0CA4                     	movlw	01h
  5030  0CA4  3001               	
  5031                           u1735:
  5032  0CA5                     	clrc
  5033  0CA5  1003               	rlf	(___lwdiv@divisor)^080h,f
  5034  0CA6  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  5035  0CA7  0DA1               	addlw	-1
  5036  0CA8  3EFF               	skipz
  5037  0CA9  1D03               	goto	u1735
  5038  0CAA  2CA5               	line	18
  5039                           	
  5040                           l1987:	
  5041  0CAB                     	movlw	low(01h)
  5042  0CAB  3001               	movwf	(??___lwdiv+0)^080h+0
  5043  0CAC  00A4               	movf	(??___lwdiv+0)^080h+0,w
  5044  0CAD  0824               	addwf	(___lwdiv@counter)^080h,f
  5045  0CAE  07A7               	goto	l1989
  5046  0CAF  2CB0               	line	19
  5047                           	
  5048                           l744:	
  5049  0CB0                     	line	16
  5050                           	
  5051                           l1989:	
  5052  0CB0                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  5053  0CB0  1FA1               	goto	u1741
  5054  0CB1  2CB3               	goto	u1740
  5055  0CB2  2CB4               u1741:
  5056  0CB3                     	goto	l1985
  5057  0CB3  2CA4               u1740:
  5058  0CB4                     	goto	l1991
  5059  0CB4  2CB6               	
  5060                           l746:	
  5061  0CB5                     	goto	l1991
  5062  0CB5  2CB6               	line	20
  5063                           	
  5064                           l747:	
  5065  0CB6                     	line	21
  5066                           	
  5067                           l1991:	
  5068  0CB6                     	movlw	01h
  5069  0CB6  3001               	
  5070                           u1755:
  5071  0CB7                     	clrc
  5072  0CB7  1003               	rlf	(___lwdiv@quotient)^080h,f
  5073  0CB8  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  5074  0CB9  0DA6               	addlw	-1
  5075  0CBA  3EFF               	skipz
  5076  0CBB  1D03               	goto	u1755
  5077  0CBC  2CB7               	line	22
  5078                           	movf	(___lwdiv@divisor+1)^080h,w
  5079  0CBD  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  5080  0CBE  0223               	skipz
  5081  0CBF  1D03               	goto	u1765
  5082  0CC0  2CC3               	movf	(___lwdiv@divisor)^080h,w
  5083  0CC1  0820               	subwf	(___lwdiv@dividend)^080h,w
  5084  0CC2  0222               u1765:
  5085  0CC3                     	skipc
  5086  0CC3  1C03               	goto	u1761
  5087  0CC4  2CC6               	goto	u1760
  5088  0CC5  2CC7               u1761:
  5089  0CC6                     	goto	l1997
  5090  0CC6  2CCF               u1760:
  5091  0CC7                     	line	23
  5092                           	
  5093                           l1993:	
  5094  0CC7                     	movf	(___lwdiv@divisor)^080h,w
  5095  0CC7  0820               	subwf	(___lwdiv@dividend)^080h,f
  5096  0CC8  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  5097  0CC9  0821               	skipc
  5098  0CCA  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  5099  0CCB  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  5100  0CCC  02A3               	line	24
  5101                           	
  5102                           l1995:	
  5103  0CCD                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  5104  0CCD  1425               	goto	l1997
  5105  0CCE  2CCF               	line	25
  5106                           	
  5107                           l748:	
  5108  0CCF                     	line	26
  5109                           	
  5110                           l1997:	
  5111  0CCF                     	movlw	01h
  5112  0CCF  3001               	
  5113                           u1775:
  5114  0CD0                     	clrc
  5115  0CD0  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  5116  0CD1  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  5117  0CD2  0CA0               	addlw	-1
  5118  0CD3  3EFF               	skipz
  5119  0CD4  1D03               	goto	u1775
  5120  0CD5  2CD0               	line	27
  5121                           	
  5122                           l1999:	
  5123  0CD6                     	movlw	01h
  5124  0CD6  3001               	subwf	(___lwdiv@counter)^080h,f
  5125  0CD7  02A7               	btfss	status,2
  5126  0CD8  1D03               	goto	u1781
  5127  0CD9  2CDB               	goto	u1780
  5128  0CDA  2CDC               u1781:
  5129  0CDB                     	goto	l1991
  5130  0CDB  2CB6               u1780:
  5131  0CDC                     	goto	l2001
  5132  0CDC  2CDE               	
  5133                           l749:	
  5134  0CDD                     	goto	l2001
  5135  0CDD  2CDE               	line	28
  5136                           	
  5137                           l743:	
  5138  0CDE                     	line	29
  5139                           	
  5140                           l2001:	
  5141  0CDE                     	movf	(___lwdiv@quotient+1)^080h,w
  5142  0CDE  0826               	movwf	(?___lwdiv+1)^080h
  5143  0CDF  00A1               	movf	(___lwdiv@quotient)^080h,w
  5144  0CE0  0825               	movwf	(?___lwdiv)^080h
  5145  0CE1  00A0               	goto	l750
  5146  0CE2  2CE3               	
  5147                           l2003:	
  5148  0CE3                     	line	30
  5149                           	
  5150                           l750:	
  5151  0CE3                     	return
  5152  0CE3  0008               	opt stack 0
  5153                           GLOBAL	__end_of___lwdiv
  5154                           	__end_of___lwdiv:
  5155  0CE4                     	signat	___lwdiv,8314
  5156                           	global	_config
  5157                           
  5158 ;; *************** function _config *****************
  5159 ;; Defined at:
  5160 ;;		line 3 in file "Config.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;		None
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;		None
  5165 ;; Return value:  Size  Location     Type
  5166 ;;                  1    wreg      void 
  5167 ;; Registers used:
  5168 ;;		wreg, status,2, status,0, pclath, cstack
  5169 ;; Tracked objects:
  5170 ;;		On entry : 0/0
  5171 ;;		On exit  : 0/0
  5172 ;;		Unchanged: 0/0
  5173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5174 ;;      Params:         0       0       0       0       0
  5175 ;;      Locals:         0       0       0       0       0
  5176 ;;      Temps:          0       0       3       0       0
  5177 ;;      Totals:         0       0       3       0       0
  5178 ;;Total ram usage:        3 bytes
  5179 ;; Hardware stack levels used:    1
  5180 ;; Hardware stack levels required when called:    6
  5181 ;; This function calls:
  5182 ;;		_display_init
  5183 ;;		_init_adc
  5184 ;; This function is called by:
  5185 ;;		_main
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5189                           	file	"Config.c"
  5190                           	line	3
  5191                           global __ptext14
  5192                           __ptext14:	;psect for function _config
  5193  0E39                     psect	text14
  5194                           	file	"Config.c"
  5195                           	line	3
  5196                           	global	__size_of_config
  5197                           	__size_of_config	equ	__end_of_config-_config
  5198  0068                     	
  5199                           _config:	
  5200  0E39                     ;incstack = 0
  5201                           	opt	stack 1
  5202                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5203                           	line	5
  5204                           	
  5205                           l2527:	
  5206  0E39                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  5207                           	bsf	status, 5	;RP0=1, select bank1
  5208  0E39  1683               	bcf	status, 6	;RP1=0, select bank1
  5209  0E3A  1303               	movf	(143)^080h,w	;volatile
  5210  0E3B  080F               	andlw	not (((1<<3)-1)<<4)
  5211  0E3C  398F               	iorlw	(06h & ((1<<3)-1))<<4
  5212  0E3D  3860               	movwf	(143)^080h	;volatile
  5213  0E3E  008F               	line	6
  5214                           	
  5215                           l2529:	
  5216  0E3F                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  5217                           	bcf	(143)^080h,3	;volatile
  5218  0E3F  118F               	line	13
  5219                           	
  5220                           l2531:	
  5221  0E40                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  5222                           	bcf	(133)^080h,0	;volatile
  5223  0E40  1005               	line	14
  5224                           	
  5225                           l2533:	
  5226  0E41                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  5227                           	bcf	(133)^080h,1	;volatile
  5228  0E41  1085               	line	15
  5229                           	
  5230                           l2535:	
  5231  0E42                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  5232                           	bcf	(133)^080h,2	;volatile
  5233  0E42  1105               	line	16
  5234                           	
  5235                           l2537:	
  5236  0E43                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  5237                           	bcf	(133)^080h,3	;volatile
  5238  0E43  1185               	line	18
  5239                           	
  5240                           l2539:	
  5241  0E44                     ;Config.c: 18:     PORTA = 0x0F;
  5242                           	movlw	low(0Fh)
  5243  0E44  300F               	bcf	status, 5	;RP0=0, select bank0
  5244  0E45  1283               	bcf	status, 6	;RP1=0, select bank0
  5245  0E46  1303               	movwf	(5)	;volatile
  5246  0E47  0085               	line	25
  5247                           	
  5248                           l2541:	
  5249  0E48                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  5250                           	bsf	status, 5	;RP0=1, select bank1
  5251  0E48  1683               	bcf	status, 6	;RP1=0, select bank1
  5252  0E49  1303               	bsf	(134)^080h,4	;volatile
  5253  0E4A  1606               	line	26
  5254                           	
  5255                           l2543:	
  5256  0E4B                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  5257                           	bsf	(134)^080h,5	;volatile
  5258  0E4B  1686               	line	28
  5259                           	
  5260                           l2545:	
  5261  0E4C                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  5262                           	bsf	status, 5	;RP0=1, select bank3
  5263  0E4C  1683               	bsf	status, 6	;RP1=1, select bank3
  5264  0E4D  1703               	bcf	(393)^0180h,3	;volatile
  5265  0E4E  1189               	line	29
  5266                           	
  5267                           l2547:	
  5268  0E4F                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  5269                           	bcf	(393)^0180h,5	;volatile
  5270  0E4F  1289               	line	35
  5271                           	
  5272                           l2549:	
  5273  0E50                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  5274                           	bsf	status, 5	;RP0=1, select bank1
  5275  0E50  1683               	bcf	status, 6	;RP1=0, select bank1
  5276  0E51  1303               	bsf	(137)^080h,2	;volatile
  5277  0E52  1509               	line	36
  5278                           	
  5279                           l2551:	
  5280  0E53                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  5281                           	bsf	status, 5	;RP0=1, select bank3
  5282  0E53  1683               	bsf	status, 6	;RP1=1, select bank3
  5283  0E54  1703               	bsf	(392)^0180h,7	;volatile
  5284  0E55  1788               	line	41
  5285                           	
  5286                           l2553:	
  5287  0E56                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  5288                           	bsf	status, 5	;RP0=1, select bank1
  5289  0E56  1683               	bcf	status, 6	;RP1=0, select bank1
  5290  0E57  1303               	bsf	(134)^080h,0	;volatile
  5291  0E58  1406               	line	42
  5292                           	
  5293                           l2555:	
  5294  0E59                     ;Config.c: 42:     ANSELHbits.ANS11 = 0;
  5295                           	bsf	status, 5	;RP0=1, select bank3
  5296  0E59  1683               	bsf	status, 6	;RP1=1, select bank3
  5297  0E5A  1703               	bcf	(393)^0180h,3	;volatile
  5298  0E5B  1189               	line	48
  5299                           	
  5300                           l2557:	
  5301  0E5C                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  5302                           	bsf	status, 5	;RP0=1, select bank1
  5303  0E5C  1683               	bcf	status, 6	;RP1=0, select bank1
  5304  0E5D  1303               	bcf	(135)^080h,0	;volatile
  5305  0E5E  1007               	line	49
  5306                           	
  5307                           l2559:	
  5308  0E5F                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  5309                           	bcf	(135)^080h,1	;volatile
  5310  0E5F  1087               	line	51
  5311                           	
  5312                           l2561:	
  5313  0E60                     ;Config.c: 51:     PORTC = 0x00;
  5314                           	bcf	status, 5	;RP0=0, select bank0
  5315  0E60  1283               	bcf	status, 6	;RP1=0, select bank0
  5316  0E61  1303               	clrf	(7)	;volatile
  5317  0E62  0187               	line	57
  5318                           	
  5319                           l2563:	
  5320  0E63                     ;Config.c: 57:     display_init();
  5321                           	fcall	_display_init
  5322  0E63  120A  158A  24E4  120A  158A  	line	60
  5323                           	
  5324                           l2565:	
  5325  0E68                     ;Config.c: 60:     init_adc();
  5326                           	fcall	_init_adc
  5327  0E68  120A  158A  221B  120A  158A  	line	68
  5328                           	
  5329                           l2567:	
  5330  0E6D                     ;Config.c: 68:     IOCBbits.IOCB4 = 1;
  5331                           	bsf	status, 5	;RP0=1, select bank1
  5332  0E6D  1683               	bcf	status, 6	;RP1=0, select bank1
  5333  0E6E  1303               	bsf	(150)^080h,4	;volatile
  5334  0E6F  1616               	line	69
  5335                           	
  5336                           l2569:	
  5337  0E70                     ;Config.c: 69:     IOCBbits.IOCB5 = 1;
  5338                           	bsf	(150)^080h,5	;volatile
  5339  0E70  1696               	line	71
  5340                           	
  5341                           l2571:	
  5342  0E71                     ;Config.c: 71:     INTCONbits.PEIE = 1;
  5343                           	bsf	(11),6	;volatile
  5344  0E71  170B               	line	72
  5345                           	
  5346                           l2573:	
  5347  0E72                     ;Config.c: 72:     INTCONbits.RBIE = 1;
  5348                           	bsf	(11),3	;volatile
  5349  0E72  158B               	line	74
  5350                           	
  5351                           l2575:	
  5352  0E73                     ;Config.c: 74:     INTCONbits.GIE = 1;
  5353                           	bsf	(11),7	;volatile
  5354  0E73  178B               	line	83
  5355                           	
  5356                           l2577:	
  5357  0E74                     ;Config.c: 83:     _inputUpdateRequired = 1;
  5358                           	bcf	status, 5	;RP0=0, select bank0
  5359  0E74  1283               	bcf	status, 6	;RP1=0, select bank0
  5360  0E75  1303               	clrf	(__inputUpdateRequired)
  5361  0E76  01E3               	incf	(__inputUpdateRequired),f
  5362  0E77  0AE3               	line	84
  5363                           	
  5364                           l2579:	
  5365  0E78                     ;Config.c: 84:     _selectedInput = 0;
  5366                           	bsf	status, 5	;RP0=1, select bank1
  5367  0E78  1683               	bcf	status, 6	;RP1=0, select bank1
  5368  0E79  1303               	clrf	(__selectedInput)^080h
  5369  0E7A  01CB               	clrf	(__selectedInput+1)^080h
  5370  0E7B  01CC               	line	85
  5371                           	
  5372                           l2581:	
  5373  0E7C                     ;Config.c: 85:     _lastA = PORTBbits.RB4;
  5374                           	bcf	status, 5	;RP0=0, select bank0
  5375  0E7C  1283               	bcf	status, 6	;RP1=0, select bank0
  5376  0E7D  1303               	swapf	(6),w	;volatile
  5377  0E7E  0E06               	andlw	(1<<1)-1
  5378  0E7F  3901               	bsf	status, 5	;RP0=1, select bank1
  5379  0E80  1683               	bcf	status, 6	;RP1=0, select bank1
  5380  0E81  1303               	movwf	(??_config+0)^080h+0
  5381  0E82  00A1               	clrf	(??_config+0)^080h+0+1
  5382  0E83  01A2               	movf	0+(??_config+0)^080h+0,w
  5383  0E84  0821               	bcf	status, 5	;RP0=0, select bank0
  5384  0E85  1283               	bcf	status, 6	;RP1=0, select bank0
  5385  0E86  1303               	movwf	(__lastA)
  5386  0E87  00E0               	bsf	status, 5	;RP0=1, select bank1
  5387  0E88  1683               	bcf	status, 6	;RP1=0, select bank1
  5388  0E89  1303               	movf	1+(??_config+0)^080h+0,w
  5389  0E8A  0822               	bcf	status, 5	;RP0=0, select bank0
  5390  0E8B  1283               	bcf	status, 6	;RP1=0, select bank0
  5391  0E8C  1303               	movwf	(__lastA+1)
  5392  0E8D  00E1               	line	86
  5393                           	
  5394                           l2583:	
  5395  0E8E                     ;Config.c: 86:     _lastB = PORTBbits.RB5;
  5396                           	swapf	(6),w	;volatile
  5397  0E8E  0E06               	bsf	status, 5	;RP0=1, select bank1
  5398  0E8F  1683               	bcf	status, 6	;RP1=0, select bank1
  5399  0E90  1303               	movwf	(??_config+0)^080h+0
  5400  0E91  00A1               	rrf	(??_config+0)^080h+0,w
  5401  0E92  0C21               	andlw	(1<<1)-1
  5402  0E93  3901               	movwf	(??_config+1)^080h+0
  5403  0E94  00A2               	clrf	(??_config+1)^080h+0+1
  5404  0E95  01A3               	movf	0+(??_config+1)^080h+0,w
  5405  0E96  0822               	bcf	status, 5	;RP0=0, select bank0
  5406  0E97  1283               	bcf	status, 6	;RP1=0, select bank0
  5407  0E98  1303               	movwf	(__lastB)
  5408  0E99  00DE               	bsf	status, 5	;RP0=1, select bank1
  5409  0E9A  1683               	bcf	status, 6	;RP1=0, select bank1
  5410  0E9B  1303               	movf	1+(??_config+1)^080h+0,w
  5411  0E9C  0823               	bcf	status, 5	;RP0=0, select bank0
  5412  0E9D  1283               	bcf	status, 6	;RP1=0, select bank0
  5413  0E9E  1303               	movwf	(__lastB+1)
  5414  0E9F  00DF               	line	87
  5415                           	
  5416                           l281:	
  5417  0EA0                     	return
  5418  0EA0  0008               	opt stack 0
  5419                           GLOBAL	__end_of_config
  5420                           	__end_of_config:
  5421  0EA1                     	signat	_config,89
  5422                           	global	_init_adc
  5423                           
  5424 ;; *************** function _init_adc *****************
  5425 ;; Defined at:
  5426 ;;		line 5 in file "Volume.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;		None
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5440 ;;      Params:         0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0
  5442 ;;      Temps:          0       0       0       0       0
  5443 ;;      Totals:         0       0       0       0       0
  5444 ;;Total ram usage:        0 bytes
  5445 ;; Hardware stack levels used:    1
  5446 ;; Hardware stack levels required when called:    4
  5447 ;; This function calls:
  5448 ;;		Nothing
  5449 ;; This function is called by:
  5450 ;;		_config
  5451 ;; This function uses a non-reentrant model
  5452 ;;
  5453                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5454                           	file	"Volume.c"
  5455                           	line	5
  5456                           global __ptext15
  5457                           __ptext15:	;psect for function _init_adc
  5458  0A1B                     psect	text15
  5459                           	file	"Volume.c"
  5460                           	line	5
  5461                           	global	__size_of_init_adc
  5462                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5463  0017                     	
  5464                           _init_adc:	
  5465  0A1B                     ;incstack = 0
  5466                           	opt	stack 2
  5467                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  5468                           	line	7
  5469                           	
  5470                           l2473:	
  5471  0A1B                     ;Volume.c: 7:     ADCON0bits.CHS = 0b0111;
  5472                           	bcf	status, 5	;RP0=0, select bank0
  5473  0A1B  1283               	bcf	status, 6	;RP1=0, select bank0
  5474  0A1C  1303               	movf	(31),w	;volatile
  5475  0A1D  081F               	andlw	not (((1<<4)-1)<<2)
  5476  0A1E  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  5477  0A1F  381C               	movwf	(31)	;volatile
  5478  0A20  009F               	line	8
  5479                           ;Volume.c: 8:     ADCON0bits.ADCS = 0b001;
  5480                           	movf	(31),w	;volatile
  5481  0A21  081F               	andlw	not (((1<<2)-1)<<6)
  5482  0A22  393F               	iorlw	(01h & ((1<<2)-1))<<6
  5483  0A23  3840               	movwf	(31)	;volatile
  5484  0A24  009F               	line	9
  5485                           	
  5486                           l2475:	
  5487  0A25                     ;Volume.c: 9:     ADCON1bits.ADFM = 1;
  5488                           	bsf	status, 5	;RP0=1, select bank1
  5489  0A25  1683               	bcf	status, 6	;RP1=0, select bank1
  5490  0A26  1303               	bsf	(159)^080h,7	;volatile
  5491  0A27  179F               	line	11
  5492                           	
  5493                           l2477:	
  5494  0A28                     ;Volume.c: 11:     PIR1bits.ADIF = 0;
  5495                           	bcf	status, 5	;RP0=0, select bank0
  5496  0A28  1283               	bcf	status, 6	;RP1=0, select bank0
  5497  0A29  1303               	bcf	(12),6	;volatile
  5498  0A2A  130C               	line	12
  5499                           	
  5500                           l2479:	
  5501  0A2B                     ;Volume.c: 12:     PIE1bits.ADIE = 1;
  5502                           	bsf	status, 5	;RP0=1, select bank1
  5503  0A2B  1683               	bcf	status, 6	;RP1=0, select bank1
  5504  0A2C  1303               	bsf	(140)^080h,6	;volatile
  5505  0A2D  170C               	line	14
  5506                           	
  5507                           l2481:	
  5508  0A2E                     ;Volume.c: 14:     ADCON0bits.ADON = 1;
  5509                           	bcf	status, 5	;RP0=0, select bank0
  5510  0A2E  1283               	bcf	status, 6	;RP1=0, select bank0
  5511  0A2F  1303               	bsf	(31),0	;volatile
  5512  0A30  141F               	line	15
  5513                           	
  5514                           l308:	
  5515  0A31                     	return
  5516  0A31  0008               	opt stack 0
  5517                           GLOBAL	__end_of_init_adc
  5518                           	__end_of_init_adc:
  5519  0A32                     	signat	_init_adc,89
  5520                           	global	_display_init
  5521                           
  5522 ;; *************** function _display_init *****************
  5523 ;; Defined at:
  5524 ;;		line 26 in file "Display.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		wreg, status,2, status,0, pclath, cstack
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5538 ;;      Params:         0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0
  5541 ;;      Totals:         0       0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used:    1
  5544 ;; Hardware stack levels required when called:    5
  5545 ;; This function calls:
  5546 ;;		_spiWrite
  5547 ;; This function is called by:
  5548 ;;		_config
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5552                           	file	"Display.c"
  5553                           	line	26
  5554                           global __ptext16
  5555                           __ptext16:	;psect for function _display_init
  5556  0CE4                     psect	text16
  5557                           	file	"Display.c"
  5558                           	line	26
  5559                           	global	__size_of_display_init
  5560                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  5561  004E                     	
  5562                           _display_init:	
  5563  0CE4                     ;incstack = 0
  5564                           	opt	stack 1
  5565                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  5566                           	line	30
  5567                           	
  5568                           l2385:	
  5569  0CE4                     ;Display.c: 30:     SSPCON = 0b00100000;
  5570                           	movlw	low(020h)
  5571  0CE4  3020               	bcf	status, 5	;RP0=0, select bank0
  5572  0CE5  1283               	bcf	status, 6	;RP1=0, select bank0
  5573  0CE6  1303               	movwf	(20)	;volatile
  5574  0CE7  0094               	line	31
  5575                           ;Display.c: 31:     SSPSTAT = 0b01000000;
  5576                           	movlw	low(040h)
  5577  0CE8  3040               	bsf	status, 5	;RP0=1, select bank1
  5578  0CE9  1683               	bcf	status, 6	;RP1=0, select bank1
  5579  0CEA  1303               	movwf	(148)^080h	;volatile
  5580  0CEB  0094               	line	34
  5581                           	
  5582                           l2387:	
  5583  0CEC                     ;Display.c: 34:     TRISD = 0x00;
  5584                           	clrf	(136)^080h	;volatile
  5585  0CEC  0188               	line	35
  5586                           	
  5587                           l2389:	
  5588  0CED                     ;Display.c: 35:     TRISC = 0x00;
  5589                           	clrf	(135)^080h	;volatile
  5590  0CED  0187               	line	38
  5591                           	
  5592                           l2391:	
  5593  0CEE                     ;Display.c: 38:     PORTDbits.RD2 = 1;
  5594                           	bcf	status, 5	;RP0=0, select bank0
  5595  0CEE  1283               	bcf	status, 6	;RP1=0, select bank0
  5596  0CEF  1303               	bsf	(8),2	;volatile
  5597  0CF0  1508               	line	39
  5598                           	
  5599                           l2393:	
  5600  0CF1                     ;Display.c: 39:     PORTDbits.RD6 = 0;
  5601                           	bcf	(8),6	;volatile
  5602  0CF1  1308               	line	40
  5603                           	
  5604                           l2395:	
  5605  0CF2                     ;Display.c: 40:     PORTDbits.RD4 = 1;
  5606                           	bsf	(8),4	;volatile
  5607  0CF2  1608               	line	41
  5608                           	
  5609                           l2397:	
  5610  0CF3                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  5611                           	bcf	(7),3	;volatile
  5612  0CF3  1187               	line	44
  5613                           	
  5614                           l2399:	
  5615  0CF4                     ;Display.c: 44:     PORTDbits.RD7 = 1;
  5616                           	bsf	(8),7	;volatile
  5617  0CF4  1788               	line	45
  5618                           	
  5619                           l2401:	
  5620  0CF5                     ;Display.c: 45:     PORTDbits.RD4 = 0;
  5621                           	bcf	(8),4	;volatile
  5622  0CF5  1208               	line	46
  5623                           	
  5624                           l2403:	
  5625  0CF6                     ;Display.c: 46:     spiWrite(0b01001111);
  5626                           	movlw	low(04Fh)
  5627  0CF6  304F               	fcall	_spiWrite
  5628  0CF7  120A  118A  22EC  120A  158A  	line	47
  5629                           	
  5630                           l2405:	
  5631  0CFC                     ;Display.c: 47:     PORTDbits.RD4 = 1;
  5632                           	bcf	status, 5	;RP0=0, select bank0
  5633  0CFC  1283               	bcf	status, 6	;RP1=0, select bank0
  5634  0CFD  1303               	bsf	(8),4	;volatile
  5635  0CFE  1608               	line	50
  5636                           	
  5637                           l2407:	
  5638  0CFF                     ;Display.c: 50:     PORTDbits.RD7 = 1;
  5639                           	bsf	(8),7	;volatile
  5640  0CFF  1788               	line	51
  5641                           	
  5642                           l2409:	
  5643  0D00                     ;Display.c: 51:     PORTDbits.RD4 = 0;
  5644                           	bcf	(8),4	;volatile
  5645  0D00  1208               	line	52
  5646                           	
  5647                           l2411:	
  5648  0D01                     ;Display.c: 52:     spiWrite(0b10000001);
  5649                           	movlw	low(081h)
  5650  0D01  3081               	fcall	_spiWrite
  5651  0D02  120A  118A  22EC  120A  158A  	line	53
  5652                           	
  5653                           l2413:	
  5654  0D07                     ;Display.c: 53:     PORTDbits.RD4 = 1;
  5655                           	bcf	status, 5	;RP0=0, select bank0
  5656  0D07  1283               	bcf	status, 6	;RP1=0, select bank0
  5657  0D08  1303               	bsf	(8),4	;volatile
  5658  0D09  1608               	line	57
  5659                           	
  5660                           l2415:	
  5661  0D0A                     ;Display.c: 57:     PORTDbits.RD7 = 0;
  5662                           	bcf	(8),7	;volatile
  5663  0D0A  1388               	line	61
  5664                           	
  5665                           l2417:	
  5666  0D0B                     ;Display.c: 61:     PORTCbits.RC2 = 1;
  5667                           	bsf	(7),2	;volatile
  5668  0D0B  1507               	line	62
  5669                           	
  5670                           l2419:	
  5671  0D0C                     ;Display.c: 62:     PORTCbits.RC6 = 0;
  5672                           	bcf	(7),6	;volatile
  5673  0D0C  1307               	line	63
  5674                           	
  5675                           l2421:	
  5676  0D0D                     ;Display.c: 63:     PORTCbits.RC4 = 1;
  5677                           	bsf	(7),4	;volatile
  5678  0D0D  1607               	line	64
  5679                           	
  5680                           l2423:	
  5681  0D0E                     ;Display.c: 64:     PORTCbits.RC3 = 0;
  5682                           	bcf	(7),3	;volatile
  5683  0D0E  1187               	line	66
  5684                           	
  5685                           l2425:	
  5686  0D0F                     ;Display.c: 66:     PORTCbits.RC7 = 1;
  5687                           	bsf	(7),7	;volatile
  5688  0D0F  1787               	line	67
  5689                           	
  5690                           l2427:	
  5691  0D10                     ;Display.c: 67:     PORTCbits.RC4 = 0;
  5692                           	bcf	(7),4	;volatile
  5693  0D10  1207               	line	68
  5694                           	
  5695                           l2429:	
  5696  0D11                     ;Display.c: 68:     spiWrite(0b01001010);
  5697                           	movlw	low(04Ah)
  5698  0D11  304A               	fcall	_spiWrite
  5699  0D12  120A  118A  22EC  120A  158A  	line	70
  5700                           	
  5701                           l2431:	
  5702  0D17                     ;Display.c: 70:     PORTCbits.RC4 = 1;
  5703                           	bcf	status, 5	;RP0=0, select bank0
  5704  0D17  1283               	bcf	status, 6	;RP1=0, select bank0
  5705  0D18  1303               	bsf	(7),4	;volatile
  5706  0D19  1607               	line	72
  5707                           	
  5708                           l2433:	
  5709  0D1A                     ;Display.c: 72:     PORTCbits.RC7 = 1;
  5710                           	bsf	(7),7	;volatile
  5711  0D1A  1787               	line	73
  5712                           	
  5713                           l2435:	
  5714  0D1B                     ;Display.c: 73:     PORTCbits.RC4 = 0;
  5715                           	bcf	(7),4	;volatile
  5716  0D1B  1207               	line	75
  5717                           	
  5718                           l2437:	
  5719  0D1C                     ;Display.c: 75:     spiWrite(0b10000001);
  5720                           	movlw	low(081h)
  5721  0D1C  3081               	fcall	_spiWrite
  5722  0D1D  120A  118A  22EC  120A  158A  	line	76
  5723                           	
  5724                           l2439:	
  5725  0D22                     ;Display.c: 76:     PORTCbits.RC4 = 1;
  5726                           	bcf	status, 5	;RP0=0, select bank0
  5727  0D22  1283               	bcf	status, 6	;RP1=0, select bank0
  5728  0D23  1303               	bsf	(7),4	;volatile
  5729  0D24  1607               	line	79
  5730                           	
  5731                           l2441:	
  5732  0D25                     ;Display.c: 79:     PORTCbits.RC7 = 0;
  5733                           	bcf	(7),7	;volatile
  5734  0D25  1387               	line	82
  5735                           	
  5736                           l2443:	
  5737  0D26                     ;Display.c: 82:     _selectedDisplay = 0;
  5738                           	bsf	status, 5	;RP0=1, select bank1
  5739  0D26  1683               	bcf	status, 6	;RP1=0, select bank1
  5740  0D27  1303               	clrf	(__selectedDisplay)^080h
  5741  0D28  01CD               	line	83
  5742                           	
  5743                           l2445:	
  5744  0D29                     ;Display.c: 83:     lastVolume = 99;
  5745                           	movlw	063h
  5746  0D29  3063               	movwf	(_lastVolume)^080h
  5747  0D2A  00C7               	movlw	0
  5748  0D2B  3000               	movwf	((_lastVolume)^080h)+1
  5749  0D2C  00C8               	line	84
  5750                           	
  5751                           l2447:	
  5752  0D2D                     ;Display.c: 84:     lastInput = 99;
  5753                           	movlw	063h
  5754  0D2D  3063               	movwf	(_lastInput)^080h
  5755  0D2E  00C5               	movlw	0
  5756  0D2F  3000               	movwf	((_lastInput)^080h)+1
  5757  0D30  00C6               	line	86
  5758                           	
  5759                           l122:	
  5760  0D31                     	return
  5761  0D31  0008               	opt stack 0
  5762                           GLOBAL	__end_of_display_init
  5763                           	__end_of_display_init:
  5764  0D32                     	signat	_display_init,89
  5765                           	global	_spiWrite
  5766                           
  5767 ;; *************** function _spiWrite *****************
  5768 ;; Defined at:
  5769 ;;		line 263 in file "Display.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;  data            1    wreg     unsigned char 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  data            1    0[BANK1 ] unsigned char 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5783 ;;      Params:         0       0       0       0       0
  5784 ;;      Locals:         0       0       1       0       0
  5785 ;;      Temps:          0       0       0       0       0
  5786 ;;      Totals:         0       0       1       0       0
  5787 ;;Total ram usage:        1 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; Hardware stack levels required when called:    4
  5790 ;; This function calls:
  5791 ;;		Nothing
  5792 ;; This function is called by:
  5793 ;;		_display_init
  5794 ;;		_write_space
  5795 ;;		_write_font
  5796 ;;		_white_space
  5797 ;;		_write_volume
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5801                           	line	263
  5802                           global __ptext17
  5803                           __ptext17:	;psect for function _spiWrite
  5804  02EC                     psect	text17
  5805                           	file	"Display.c"
  5806                           	line	263
  5807                           	global	__size_of_spiWrite
  5808                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  5809  0010                     	
  5810                           _spiWrite:	
  5811  02EC                     ;incstack = 0
  5812 ;; hardware stack exceeded
  5813                           	opt	stack 0
  5814                           ; Regs used in _spiWrite: [wreg]
  5815                           ;spiWrite@data stored from wreg
  5816                           	bsf	status, 5	;RP0=1, select bank1
  5817  02EC  1683               	bcf	status, 6	;RP1=0, select bank1
  5818  02ED  1303               	movwf	(spiWrite@data)^080h
  5819  02EE  00A0               	line	265
  5820                           	
  5821                           l1915:	
  5822  02EF                     ;Display.c: 263: void spiWrite(char data);Display.c: 264: {;Display.c: 265:     SSPBUF =
                                  data;
  5823                           	movf	(spiWrite@data)^080h,w
  5824  02EF  0820               	bcf	status, 5	;RP0=0, select bank0
  5825  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  5826  02F1  1303               	movwf	(19)	;volatile
  5827  02F2  0093               	line	267
  5828                           ;Display.c: 267:     while(!SSPSTATbits.BF)
  5829                           	goto	l191
  5830  02F3  2AF4               	
  5831                           l192:	
  5832  02F4                     	line	270
  5833                           ;Display.c: 268:     {;Display.c: 270:     }
  5834                           	
  5835                           l191:	
  5836  02F4                     	line	267
  5837                           ;Display.c: 267:     while(!SSPSTATbits.BF)
  5838                           	bsf	status, 5	;RP0=1, select bank1
  5839  02F4  1683               	bcf	status, 6	;RP1=0, select bank1
  5840  02F5  1303               	btfss	(148)^080h,0	;volatile
  5841  02F6  1C14               	goto	u1571
  5842  02F7  2AF9               	goto	u1570
  5843  02F8  2AFA               u1571:
  5844  02F9                     	goto	l191
  5845  02F9  2AF4               u1570:
  5846  02FA                     	goto	l194
  5847  02FA  2AFB               	
  5848                           l193:	
  5849  02FB                     	line	273
  5850                           	
  5851                           l194:	
  5852  02FB                     	return
  5853  02FB  0008               	opt stack 0
  5854                           GLOBAL	__end_of_spiWrite
  5855                           	__end_of_spiWrite:
  5856  02FC                     	signat	_spiWrite,4217
  5857                           	global	_activateSelectedRelay
  5858                           
  5859 ;; *************** function _activateSelectedRelay *****************
  5860 ;; Defined at:
  5861 ;;		line 3 in file "Input.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;		None
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/0
  5872 ;;		On exit  : 0/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5875 ;;      Params:         0       0       0       0       0
  5876 ;;      Locals:         0       0       0       0       0
  5877 ;;      Temps:          0       0       0       0       0
  5878 ;;      Totals:         0       0       0       0       0
  5879 ;;Total ram usage:        0 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:    4
  5882 ;; This function calls:
  5883 ;;		Nothing
  5884 ;; This function is called by:
  5885 ;;		_main
  5886 ;; This function uses a non-reentrant model
  5887 ;;
  5888                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5889                           	file	"Input.c"
  5890                           	line	3
  5891                           global __ptext18
  5892                           __ptext18:	;psect for function _activateSelectedRelay
  5893  0B1C                     psect	text18
  5894                           	file	"Input.c"
  5895                           	line	3
  5896                           	global	__size_of_activateSelectedRelay
  5897                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  5898  0039                     	
  5899                           _activateSelectedRelay:	
  5900  0B1C                     ;incstack = 0
  5901                           	opt	stack 3
  5902                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  5903                           	line	5
  5904                           	
  5905                           l2619:	
  5906  0B1C                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  5907                           	bcf	status, 5	;RP0=0, select bank0
  5908  0B1C  1283               	bcf	status, 6	;RP1=0, select bank0
  5909  0B1D  1303               	movf	((__inputUpdateRequired)),w
  5910  0B1E  0863               	btfss	status,2
  5911  0B1F  1D03               	goto	u2841
  5912  0B20  2B22               	goto	u2840
  5913  0B21  2B23               u2841:
  5914  0B22                     	goto	l2623
  5915  0B22  2B25               u2840:
  5916  0B23                     	goto	l212
  5917  0B23  2B54               	
  5918                           l2621:	
  5919  0B24                     	goto	l212
  5920  0B24  2B54               	
  5921                           l211:	
  5922  0B25                     	line	7
  5923                           	
  5924                           l2623:	
  5925  0B25                     ;Input.c: 7:     PORTA = 0x0F;
  5926                           	movlw	low(0Fh)
  5927  0B25  300F               	movwf	(5)	;volatile
  5928  0B26  0085               	line	9
  5929                           ;Input.c: 9:     switch (_selectedInput) {
  5930                           	goto	l2637
  5931  0B27  2B3D               	line	10
  5932                           ;Input.c: 10:         case 0:
  5933                           	
  5934                           l214:	
  5935  0B28                     	line	11
  5936                           	
  5937                           l2625:	
  5938  0B28                     ;Input.c: 11:             PORTA = ~0x01;
  5939                           	movlw	low(0FEh)
  5940  0B28  30FE               	bcf	status, 5	;RP0=0, select bank0
  5941  0B29  1283               	movwf	(5)	;volatile
  5942  0B2A  0085               	line	12
  5943                           ;Input.c: 12:             break;
  5944                           	goto	l2639
  5945  0B2B  2B52               	line	13
  5946                           ;Input.c: 13:         case 1:
  5947                           	
  5948                           l216:	
  5949  0B2C                     	line	14
  5950                           	
  5951                           l2627:	
  5952  0B2C                     ;Input.c: 14:             PORTA = ~0x02;
  5953                           	movlw	low(0FDh)
  5954  0B2C  30FD               	bcf	status, 5	;RP0=0, select bank0
  5955  0B2D  1283               	movwf	(5)	;volatile
  5956  0B2E  0085               	line	15
  5957                           ;Input.c: 15:             break;
  5958                           	goto	l2639
  5959  0B2F  2B52               	line	16
  5960                           ;Input.c: 16:         case 2:
  5961                           	
  5962                           l217:	
  5963  0B30                     	line	17
  5964                           	
  5965                           l2629:	
  5966  0B30                     ;Input.c: 17:             PORTA = ~0x04;
  5967                           	movlw	low(0FBh)
  5968  0B30  30FB               	bcf	status, 5	;RP0=0, select bank0
  5969  0B31  1283               	movwf	(5)	;volatile
  5970  0B32  0085               	line	18
  5971                           ;Input.c: 18:             break;
  5972                           	goto	l2639
  5973  0B33  2B52               	line	19
  5974                           ;Input.c: 19:         case 3:
  5975                           	
  5976                           l218:	
  5977  0B34                     	line	20
  5978                           	
  5979                           l2631:	
  5980  0B34                     ;Input.c: 20:             PORTA = ~0x08;
  5981                           	movlw	low(0F7h)
  5982  0B34  30F7               	bcf	status, 5	;RP0=0, select bank0
  5983  0B35  1283               	movwf	(5)	;volatile
  5984  0B36  0085               	line	21
  5985                           ;Input.c: 21:             break;
  5986                           	goto	l2639
  5987  0B37  2B52               	line	22
  5988                           ;Input.c: 22:         default:
  5989                           	
  5990                           l219:	
  5991  0B38                     	line	23
  5992                           	
  5993                           l2633:	
  5994  0B38                     ;Input.c: 23:             PORTA = ~0x01;
  5995                           	movlw	low(0FEh)
  5996  0B38  30FE               	bcf	status, 5	;RP0=0, select bank0
  5997  0B39  1283               	movwf	(5)	;volatile
  5998  0B3A  0085               	line	24
  5999                           ;Input.c: 24:             break;
  6000                           	goto	l2639
  6001  0B3B  2B52               	line	25
  6002                           	
  6003                           l2635:	
  6004  0B3C                     ;Input.c: 25:     }
  6005                           	goto	l2639
  6006  0B3C  2B52               	
  6007                           l213:	
  6008  0B3D                     	
  6009                           l2637:	
  6010  0B3D                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6011                           ; Switch size 1, requested type "space"
  6012                           ; Number of cases is 1, Range of values is 0 to 0
  6013                           ; switch strategies available:
  6014                           ; Name         Instructions Cycles
  6015                           ; simple_byte            4     3 (average)
  6016                           ; direct_byte           11     8 (fixed)
  6017                           ; jumptable            260     6 (fixed)
  6018                           ;	Chosen strategy is simple_byte
  6019                           
  6020                           	bsf	status, 5	;RP0=1, select bank1
  6021  0B3D  1683               	bcf	status, 6	;RP1=0, select bank1
  6022  0B3E  1303               	movf (__selectedInput+1)^080h,w
  6023  0B3F  084C               	opt asmopt_push
  6024                           	opt asmopt_off
  6025                           	xorlw	0^0	; case 0
  6026  0B40  3A00               	skipnz
  6027  0B41  1903               	goto	l2857
  6028  0B42  2B44               	goto	l2633
  6029  0B43  2B38               	opt asmopt_pop
  6030                           	
  6031                           l2857:	
  6032  0B44                     ; Switch size 1, requested type "space"
  6033                           ; Number of cases is 4, Range of values is 0 to 3
  6034                           ; switch strategies available:
  6035                           ; Name         Instructions Cycles
  6036                           ; simple_byte           13     7 (average)
  6037                           ; direct_byte           20     8 (fixed)
  6038                           ; jumptable            260     6 (fixed)
  6039                           ;	Chosen strategy is simple_byte
  6040                           
  6041                           	movf (__selectedInput)^080h,w
  6042  0B44  084B               	opt asmopt_push
  6043                           	opt asmopt_off
  6044                           	xorlw	0^0	; case 0
  6045  0B45  3A00               	skipnz
  6046  0B46  1903               	goto	l2625
  6047  0B47  2B28               	xorlw	1^0	; case 1
  6048  0B48  3A01               	skipnz
  6049  0B49  1903               	goto	l2627
  6050  0B4A  2B2C               	xorlw	2^1	; case 2
  6051  0B4B  3A03               	skipnz
  6052  0B4C  1903               	goto	l2629
  6053  0B4D  2B30               	xorlw	3^2	; case 3
  6054  0B4E  3A01               	skipnz
  6055  0B4F  1903               	goto	l2631
  6056  0B50  2B34               	goto	l2633
  6057  0B51  2B38               	opt asmopt_pop
  6058                           
  6059                           	
  6060                           l215:	
  6061  0B52                     	line	27
  6062                           	
  6063                           l2639:	
  6064  0B52                     ;Input.c: 27:     _inputUpdateRequired = 0;
  6065                           	bcf	status, 5	;RP0=0, select bank0
  6066  0B52  1283               	clrf	(__inputUpdateRequired)
  6067  0B53  01E3               	line	28
  6068                           	
  6069                           l212:	
  6070  0B54                     	return
  6071  0B54  0008               	opt stack 0
  6072                           GLOBAL	__end_of_activateSelectedRelay
  6073                           	__end_of_activateSelectedRelay:
  6074  0B55                     	signat	_activateSelectedRelay,89
  6075                           	global	_isr
  6076                           
  6077 ;; *************** function _isr *****************
  6078 ;; Defined at:
  6079 ;;		line 48 in file "main.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;		None
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      void 
  6086 ;; Registers used:
  6087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6093 ;;      Params:         0       0       0       0       0
  6094 ;;      Locals:         0       0       0       0       0
  6095 ;;      Temps:          0       4       0       0       0
  6096 ;;      Totals:         0       4       0       0       0
  6097 ;;Total ram usage:        4 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    3
  6100 ;; This function calls:
  6101 ;;		_handle_potmeter
  6102 ;;		_handle_rotary
  6103 ;;		_poll_receiver
  6104 ;; This function is called by:
  6105 ;;		Interrupt level 1
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6109                           	file	"main.c"
  6110                           	line	48
  6111                           global __ptext19
  6112                           __ptext19:	;psect for function _isr
  6113  0AB0                     psect	text19
  6114                           	file	"main.c"
  6115                           	line	48
  6116                           	global	__size_of_isr
  6117                           	__size_of_isr	equ	__end_of_isr-_isr
  6118  0036                     	
  6119                           _isr:	
  6120  0AB0                     ;incstack = 0
  6121 ;; hardware stack exceeded
  6122                           	opt	stack 0
  6123                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6124                           psect	intentry,class=CODE,delta=2
  6125                           global __pintentry
  6126                           __pintentry:
  6127  0004                     global interrupt_function
  6128                           interrupt_function:
  6129  0004                     	global saved_w
  6130                           	saved_w	set	btemp+0
  6131  007E                     	movwf	saved_w
  6132  0004  00FE               	swapf	status,w
  6133  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  6134  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  6135  0007  1303               	movwf	(??_isr+0)
  6136  0008  00D6               	movf	fsr0,w
  6137  0009  0804               	movwf	(??_isr+1)
  6138  000A  00D7               	movf	pclath,w
  6139  000B  080A               	movwf	(??_isr+2)
  6140  000C  00D8               	movf	btemp+1,w
  6141  000D  087F               	movwf	(??_isr+3)
  6142  000E  00D9               	ljmp	_isr
  6143  000F  120A  158A  2AB0   psect	text19
  6144                           	line	50
  6145                           	
  6146                           i1l2719:	
  6147  0AB0                     ;main.c: 50:     if (INTCONbits.RBIF) {
  6148                           	btfss	(11),0	;volatile
  6149  0AB0  1C0B               	goto	u302_21
  6150  0AB1  2AB3               	goto	u302_20
  6151  0AB2  2AB4               u302_21:
  6152  0AB3                     	goto	i1l2725
  6153  0AB3  2ABB               u302_20:
  6154  0AB4                     	line	52
  6155                           	
  6156                           i1l2721:	
  6157  0AB4                     ;main.c: 52:         handle_rotary();
  6158                           	fcall	_handle_rotary
  6159  0AB4  120A  158A  277F  120A  158A  	line	53
  6160                           	
  6161                           i1l2723:	
  6162  0AB9                     ;main.c: 53:         INTCONbits.RBIF = 0;
  6163                           	bcf	(11),0	;volatile
  6164  0AB9  100B               	goto	i1l2725
  6165  0ABA  2ABB               	line	54
  6166                           ;main.c: 54:     }
  6167                           	
  6168                           i1l62:	
  6169  0ABB                     	line	56
  6170                           	
  6171                           i1l2725:	
  6172  0ABB                     ;main.c: 56:     if (PIR1bits.ADIF) {
  6173                           	bcf	status, 5	;RP0=0, select bank0
  6174  0ABB  1283               	bcf	status, 6	;RP1=0, select bank0
  6175  0ABC  1303               	btfss	(12),6	;volatile
  6176  0ABD  1F0C               	goto	u303_21
  6177  0ABE  2AC0               	goto	u303_20
  6178  0ABF  2AC1               u303_21:
  6179  0AC0                     	goto	i1l2731
  6180  0AC0  2ACA               u303_20:
  6181  0AC1                     	line	58
  6182                           	
  6183                           i1l2727:	
  6184  0AC1                     ;main.c: 58:         handle_potmeter();
  6185                           	fcall	_handle_potmeter
  6186  0AC1  120A  158A  270D  120A  158A  	line	60
  6187                           	
  6188                           i1l2729:	
  6189  0AC6                     ;main.c: 60:         PIR1bits.ADIF = 0;
  6190                           	bcf	status, 5	;RP0=0, select bank0
  6191  0AC6  1283               	bcf	status, 6	;RP1=0, select bank0
  6192  0AC7  1303               	bcf	(12),6	;volatile
  6193  0AC8  130C               	goto	i1l2731
  6194  0AC9  2ACA               	line	61
  6195                           ;main.c: 61:     }
  6196                           	
  6197                           i1l63:	
  6198  0ACA                     	line	63
  6199                           	
  6200                           i1l2731:	
  6201  0ACA                     ;main.c: 63:     if (PIR1bits.TMR2IF) {
  6202                           	btfss	(12),1	;volatile
  6203  0ACA  1C8C               	goto	u304_21
  6204  0ACB  2ACD               	goto	u304_20
  6205  0ACC  2ACE               u304_21:
  6206  0ACD                     	goto	i1l65
  6207  0ACD  2ADB               u304_20:
  6208  0ACE                     	line	64
  6209                           	
  6210                           i1l2733:	
  6211  0ACE                     ;main.c: 64:         PR2 = 25;
  6212                           	movlw	low(019h)
  6213  0ACE  3019               	bsf	status, 5	;RP0=1, select bank1
  6214  0ACF  1683               	bcf	status, 6	;RP1=0, select bank1
  6215  0AD0  1303               	movwf	(146)^080h	;volatile
  6216  0AD1  0092               	line	66
  6217                           	
  6218                           i1l2735:	
  6219  0AD2                     ;main.c: 66:         poll_receiver();
  6220                           	fcall	_poll_receiver
  6221  0AD2  120A  158A  23C8  120A  158A  	line	68
  6222                           	
  6223                           i1l2737:	
  6224  0AD7                     ;main.c: 68:         PIR1bits.TMR2IF = 0;
  6225                           	bcf	status, 5	;RP0=0, select bank0
  6226  0AD7  1283               	bcf	status, 6	;RP1=0, select bank0
  6227  0AD8  1303               	bcf	(12),1	;volatile
  6228  0AD9  108C               	goto	i1l65
  6229  0ADA  2ADB               	line	70
  6230                           ;main.c: 70:     }
  6231                           	
  6232                           i1l64:	
  6233  0ADB                     	line	71
  6234                           	
  6235                           i1l65:	
  6236  0ADB                     	movf	(??_isr+3),w
  6237  0ADB  0859               	movwf	btemp+1
  6238  0ADC  00FF               	movf	(??_isr+2),w
  6239  0ADD  0858               	movwf	pclath
  6240  0ADE  008A               	movf	(??_isr+1),w
  6241  0ADF  0857               	movwf	fsr0
  6242  0AE0  0084               	swapf	(??_isr+0)^00h,w
  6243  0AE1  0E56               	movwf	status
  6244  0AE2  0083               	swapf	saved_w,f
  6245  0AE3  0EFE               	swapf	saved_w,w
  6246  0AE4  0E7E               	retfie
  6247  0AE5  0009               	opt stack 0
  6248                           GLOBAL	__end_of_isr
  6249                           	__end_of_isr:
  6250  0AE6                     	signat	_isr,89
  6251                           	global	_poll_receiver
  6252                           
  6253 ;; *************** function _poll_receiver *****************
  6254 ;; Defined at:
  6255 ;;		line 19 in file "Remote.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;		None
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;		None
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      void 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6269 ;;      Params:         0       0       0       0       0
  6270 ;;      Locals:         0       0       0       0       0
  6271 ;;      Temps:          8       0       0       0       0
  6272 ;;      Totals:         8       0       0       0       0
  6273 ;;Total ram usage:        8 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_isr
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6282                           	file	"Remote.c"
  6283                           	line	19
  6284                           global __ptext20
  6285                           __ptext20:	;psect for function _poll_receiver
  6286  0BC8                     psect	text20
  6287                           	file	"Remote.c"
  6288                           	line	19
  6289                           	global	__size_of_poll_receiver
  6290                           	__size_of_poll_receiver	equ	__end_of_poll_receiver-_poll_receiver
  6291  0041                     	
  6292                           _poll_receiver:	
  6293  0BC8                     ;incstack = 0
  6294                           	opt	stack 0
  6295                           ; Regs used in _poll_receiver: [wreg+status,2+status,0]
  6296                           	line	21
  6297                           	
  6298                           i1l2685:	
  6299  0BC8                     ;Remote.c: 21:     if (ignore_poll) return;
  6300                           	bcf	status, 5	;RP0=0, select bank0
  6301  0BC8  1283               	bcf	status, 6	;RP1=0, select bank0
  6302  0BC9  1303               	movf	((_ignore_poll)),w
  6303  0BCA  0862               	btfsc	status,2
  6304  0BCB  1903               	goto	u296_21
  6305  0BCC  2BCE               	goto	u296_20
  6306  0BCD  2BCF               u296_21:
  6307  0BCE                     	goto	i1l2689
  6308  0BCE  2BD1               u296_20:
  6309  0BCF                     	goto	i1l352
  6310  0BCF  2C08               	
  6311                           i1l2687:	
  6312  0BD0                     	goto	i1l352
  6313  0BD0  2C08               	
  6314                           i1l351:	
  6315  0BD1                     	line	23
  6316                           	
  6317                           i1l2689:	
  6318  0BD1                     ;Remote.c: 23:     ir_input = ir_input << 1;
  6319                           	movf	(_ir_input),w
  6320  0BD1  085A               	movwf	(??_poll_receiver+0)+0
  6321  0BD2  00F0               	movf	(_ir_input+1),w
  6322  0BD3  085B               	movwf	((??_poll_receiver+0)+0+1)
  6323  0BD4  00F1               	movf	(_ir_input+2),w
  6324  0BD5  085C               	movwf	((??_poll_receiver+0)+0+2)
  6325  0BD6  00F2               	movf	(_ir_input+3),w
  6326  0BD7  085D               	movwf	((??_poll_receiver+0)+0+3)
  6327  0BD8  00F3               	movlw	01h
  6328  0BD9  3001               u297_25:
  6329  0BDA                     	clrc
  6330  0BDA  1003               	rlf	(??_poll_receiver+0)+0,f
  6331  0BDB  0DF0               	rlf	(??_poll_receiver+0)+1,f
  6332  0BDC  0DF1               	rlf	(??_poll_receiver+0)+2,f
  6333  0BDD  0DF2               	rlf	(??_poll_receiver+0)+3,f
  6334  0BDE  0DF3               u297_20:
  6335  0BDF                     	addlw	-1
  6336  0BDF  3EFF               	skipz
  6337  0BE0  1D03               	goto	u297_25
  6338  0BE1  2BDA               	movf	3+(??_poll_receiver+0)+0,w
  6339  0BE2  0873               	movwf	(_ir_input+3)
  6340  0BE3  00DD               	movf	2+(??_poll_receiver+0)+0,w
  6341  0BE4  0872               	movwf	(_ir_input+2)
  6342  0BE5  00DC               	movf	1+(??_poll_receiver+0)+0,w
  6343  0BE6  0871               	movwf	(_ir_input+1)
  6344  0BE7  00DB               	movf	0+(??_poll_receiver+0)+0,w
  6345  0BE8  0870               	movwf	(_ir_input)
  6346  0BE9  00DA               
  6347                           	line	24
  6348                           ;Remote.c: 24:     ir_input = ir_input | PORTBbits.RB0;
  6349                           	movf	(_ir_input),w
  6350  0BEA  085A               	movwf	(??_poll_receiver+0)+0
  6351  0BEB  00F0               	movf	(_ir_input+1),w
  6352  0BEC  085B               	movwf	((??_poll_receiver+0)+0+1)
  6353  0BED  00F1               	movf	(_ir_input+2),w
  6354  0BEE  085C               	movwf	((??_poll_receiver+0)+0+2)
  6355  0BEF  00F2               	movf	(_ir_input+3),w
  6356  0BF0  085D               	movwf	((??_poll_receiver+0)+0+3)
  6357  0BF1  00F3               	movf	(6),w	;volatile
  6358  0BF2  0806               	andlw	(1<<1)-1
  6359  0BF3  3901               	movwf	(??_poll_receiver+4)+0
  6360  0BF4  00F4               	clrf	((??_poll_receiver+4)+0+1)
  6361  0BF5  01F5               	clrf	((??_poll_receiver+4)+0+2)
  6362  0BF6  01F6               	clrf	((??_poll_receiver+4)+0+3)
  6363  0BF7  01F7               	movf	0+(??_poll_receiver+4)+0,w
  6364  0BF8  0874               	iorwf	(??_poll_receiver+0)+0,f
  6365  0BF9  04F0               	movf	1+(??_poll_receiver+4)+0,w
  6366  0BFA  0875               	iorwf	(??_poll_receiver+0)+1,f
  6367  0BFB  04F1               	movf	2+(??_poll_receiver+4)+0,w
  6368  0BFC  0876               	iorwf	(??_poll_receiver+0)+2,f
  6369  0BFD  04F2               	movf	3+(??_poll_receiver+4)+0,w
  6370  0BFE  0877               	iorwf	(??_poll_receiver+0)+3,f
  6371  0BFF  04F3               	movf	3+(??_poll_receiver+0)+0,w
  6372  0C00  0873               	movwf	(_ir_input+3)
  6373  0C01  00DD               	movf	2+(??_poll_receiver+0)+0,w
  6374  0C02  0872               	movwf	(_ir_input+2)
  6375  0C03  00DC               	movf	1+(??_poll_receiver+0)+0,w
  6376  0C04  0871               	movwf	(_ir_input+1)
  6377  0C05  00DB               	movf	0+(??_poll_receiver+0)+0,w
  6378  0C06  0870               	movwf	(_ir_input)
  6379  0C07  00DA               
  6380                           	line	25
  6381                           	
  6382                           i1l352:	
  6383  0C08                     	return
  6384  0C08  0008               	opt stack 0
  6385                           GLOBAL	__end_of_poll_receiver
  6386                           	__end_of_poll_receiver:
  6387  0C09                     	signat	_poll_receiver,89
  6388                           	global	_handle_rotary
  6389                           
  6390 ;; *************** function _handle_rotary *****************
  6391 ;; Defined at:
  6392 ;;		line 30 in file "Input.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;		None
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  portB           2    5[COMMON] int 
  6397 ;;  portA           2    3[COMMON] int 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  1    wreg      void 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         0       0       0       0       0
  6408 ;;      Locals:         4       0       0       0       0
  6409 ;;      Temps:          3       0       0       0       0
  6410 ;;      Totals:         7       0       0       0       0
  6411 ;;Total ram usage:        7 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_isr
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6420                           	file	"Input.c"
  6421                           	line	30
  6422                           global __ptext21
  6423                           __ptext21:	;psect for function _handle_rotary
  6424  0F7F                     psect	text21
  6425                           	file	"Input.c"
  6426                           	line	30
  6427                           	global	__size_of_handle_rotary
  6428                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  6429  0081                     	
  6430                           _handle_rotary:	
  6431  0F7F                     ;incstack = 0
  6432                           	opt	stack 0
  6433                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  6434                           	line	32
  6435                           	
  6436                           i1l2645:	
  6437  0F7F                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  6438                           	bcf	status, 5	;RP0=0, select bank0
  6439  0F7F  1283               	bcf	status, 6	;RP1=0, select bank0
  6440  0F80  1303               	swapf	(6),w	;volatile
  6441  0F81  0E06               	andlw	(1<<1)-1
  6442  0F82  3901               	movwf	(??_handle_rotary+0)+0
  6443  0F83  00F0               	clrf	(??_handle_rotary+0)+0+1
  6444  0F84  01F1               	movf	0+(??_handle_rotary+0)+0,w
  6445  0F85  0870               	movwf	(handle_rotary@portA)
  6446  0F86  00F3               	movf	1+(??_handle_rotary+0)+0,w
  6447  0F87  0871               	movwf	(handle_rotary@portA+1)
  6448  0F88  00F4               	line	33
  6449                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  6450                           	swapf	(6),w	;volatile
  6451  0F89  0E06               	movwf	(??_handle_rotary+0)+0
  6452  0F8A  00F0               	rrf	(??_handle_rotary+0)+0,w
  6453  0F8B  0C70               	andlw	(1<<1)-1
  6454  0F8C  3901               	movwf	(??_handle_rotary+1)+0
  6455  0F8D  00F1               	clrf	(??_handle_rotary+1)+0+1
  6456  0F8E  01F2               	movf	0+(??_handle_rotary+1)+0,w
  6457  0F8F  0871               	movwf	(handle_rotary@portB)
  6458  0F90  00F5               	movf	1+(??_handle_rotary+1)+0,w
  6459  0F91  0872               	movwf	(handle_rotary@portB+1)
  6460  0F92  00F6               	line	35
  6461                           	
  6462                           i1l2647:	
  6463  0F93                     ;Input.c: 35:         if (_lastA != portA) {
  6464                           	movf	(__lastA+1),w
  6465  0F93  0861               	xorwf	(handle_rotary@portA+1),w
  6466  0F94  0674               	skipz
  6467  0F95  1D03               	goto	u285_25
  6468  0F96  2F99               	movf	(__lastA),w
  6469  0F97  0860               	xorwf	(handle_rotary@portA),w
  6470  0F98  0673               u285_25:
  6471  0F99                     
  6472                           	skipnz
  6473  0F99  1903               	goto	u285_21
  6474  0F9A  2F9C               	goto	u285_20
  6475  0F9B  2F9D               u285_21:
  6476  0F9C                     	goto	i1l2659
  6477  0F9C  2FC4               u285_20:
  6478  0F9D                     	line	36
  6479                           	
  6480                           i1l2649:	
  6481  0F9D                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  6482                           	movf	(__lastB+1),w
  6483  0F9D  085F               	xorwf	(__lastA+1),w
  6484  0F9E  0661               	skipz
  6485  0F9F  1D03               	goto	u286_25
  6486  0FA0  2FA3               	movf	(__lastB),w
  6487  0FA1  085E               	xorwf	(__lastA),w
  6488  0FA2  0660               u286_25:
  6489  0FA3                     
  6490                           	skipz
  6491  0FA3  1D03               	goto	u286_21
  6492  0FA4  2FA6               	goto	u286_20
  6493  0FA5  2FA7               u286_21:
  6494  0FA6                     	goto	i1l2659
  6495  0FA6  2FC4               u286_20:
  6496  0FA7                     	
  6497                           i1l2651:	
  6498  0FA7                     	movf	((handle_rotary@portA)),w
  6499  0FA7  0873               iorwf	((handle_rotary@portA+1)),w
  6500  0FA8  0474               	btfsc	status,2
  6501  0FA9  1903               	goto	u287_21
  6502  0FAA  2FAC               	goto	u287_20
  6503  0FAB  2FAD               u287_21:
  6504  0FAC                     	goto	i1l2659
  6505  0FAC  2FC4               u287_20:
  6506  0FAD                     	line	37
  6507                           	
  6508                           i1l2653:	
  6509  0FAD                     ;Input.c: 37:                 if (_selectedInput < 3) {
  6510                           	movlw	0
  6511  0FAD  3000               	bsf	status, 5	;RP0=1, select bank1
  6512  0FAE  1683               	bcf	status, 6	;RP1=0, select bank1
  6513  0FAF  1303               	subwf	(__selectedInput+1)^080h,w
  6514  0FB0  024C               	movlw	03h
  6515  0FB1  3003               	skipnz
  6516  0FB2  1903               	subwf	(__selectedInput)^080h,w
  6517  0FB3  024B               	skipnc
  6518  0FB4  1803               	goto	u288_21
  6519  0FB5  2FB7               	goto	u288_20
  6520  0FB6  2FB8               u288_21:
  6521  0FB7                     	goto	i1l2657
  6522  0FB7  2FBF               u288_20:
  6523  0FB8                     	line	38
  6524                           	
  6525                           i1l2655:	
  6526  0FB8                     ;Input.c: 38:                     _selectedInput++;
  6527                           	movlw	01h
  6528  0FB8  3001               	addwf	(__selectedInput)^080h,f
  6529  0FB9  07CB               	skipnc
  6530  0FBA  1803               	incf	(__selectedInput+1)^080h,f
  6531  0FBB  0ACC               	movlw	0
  6532  0FBC  3000               	addwf	(__selectedInput+1)^080h,f
  6533  0FBD  07CC               	line	39
  6534                           ;Input.c: 39:                 } else {
  6535                           	goto	i1l2659
  6536  0FBE  2FC4               	
  6537                           i1l224:	
  6538  0FBF                     	line	40
  6539                           	
  6540                           i1l2657:	
  6541  0FBF                     ;Input.c: 40:                     _selectedInput = 0;
  6542                           	clrf	(__selectedInput)^080h
  6543  0FBF  01CB               	clrf	(__selectedInput+1)^080h
  6544  0FC0  01CC               	goto	i1l2659
  6545  0FC1  2FC4               	line	41
  6546                           ;Input.c: 41:                 }
  6547                           	
  6548                           i1l225:	
  6549  0FC2                     	goto	i1l2659
  6550  0FC2  2FC4               	line	42
  6551                           ;Input.c: 42:             }
  6552                           	
  6553                           i1l223:	
  6554  0FC3                     	goto	i1l2659
  6555  0FC3  2FC4               	line	43
  6556                           ;Input.c: 43:         }
  6557                           	
  6558                           i1l222:	
  6559  0FC4                     	line	45
  6560                           	
  6561                           i1l2659:	
  6562  0FC4                     ;Input.c: 45:         if (_lastB != portB) {
  6563                           	bcf	status, 5	;RP0=0, select bank0
  6564  0FC4  1283               	movf	(__lastB+1),w
  6565  0FC5  085F               	xorwf	(handle_rotary@portB+1),w
  6566  0FC6  0676               	skipz
  6567  0FC7  1D03               	goto	u289_25
  6568  0FC8  2FCB               	movf	(__lastB),w
  6569  0FC9  085E               	xorwf	(handle_rotary@portB),w
  6570  0FCA  0675               u289_25:
  6571  0FCB                     
  6572                           	skipnz
  6573  0FCB  1903               	goto	u289_21
  6574  0FCC  2FCE               	goto	u289_20
  6575  0FCD  2FCF               u289_21:
  6576  0FCE                     	goto	i1l226
  6577  0FCE  2FF4               u289_20:
  6578  0FCF                     	line	46
  6579                           	
  6580                           i1l2661:	
  6581  0FCF                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
  6582                           	movf	(__lastB+1),w
  6583  0FCF  085F               	xorwf	(__lastA+1),w
  6584  0FD0  0661               	skipz
  6585  0FD1  1D03               	goto	u290_25
  6586  0FD2  2FD5               	movf	(__lastB),w
  6587  0FD3  085E               	xorwf	(__lastA),w
  6588  0FD4  0660               u290_25:
  6589  0FD5                     
  6590                           	skipz
  6591  0FD5  1D03               	goto	u290_21
  6592  0FD6  2FD8               	goto	u290_20
  6593  0FD7  2FD9               u290_21:
  6594  0FD8                     	goto	i1l226
  6595  0FD8  2FF4               u290_20:
  6596  0FD9                     	
  6597                           i1l2663:	
  6598  0FD9                     	movf	((handle_rotary@portB)),w
  6599  0FD9  0875               iorwf	((handle_rotary@portB+1)),w
  6600  0FDA  0476               	btfsc	status,2
  6601  0FDB  1903               	goto	u291_21
  6602  0FDC  2FDE               	goto	u291_20
  6603  0FDD  2FDF               u291_21:
  6604  0FDE                     	goto	i1l226
  6605  0FDE  2FF4               u291_20:
  6606  0FDF                     	line	47
  6607                           	
  6608                           i1l2665:	
  6609  0FDF                     ;Input.c: 47:                 if (_selectedInput > 0) {
  6610                           	bsf	status, 5	;RP0=1, select bank1
  6611  0FDF  1683               	bcf	status, 6	;RP1=0, select bank1
  6612  0FE0  1303               	movf	((__selectedInput)^080h),w
  6613  0FE1  084B               iorwf	((__selectedInput+1)^080h),w
  6614  0FE2  044C               	btfsc	status,2
  6615  0FE3  1903               	goto	u292_21
  6616  0FE4  2FE6               	goto	u292_20
  6617  0FE5  2FE7               u292_21:
  6618  0FE6                     	goto	i1l2669
  6619  0FE6  2FEE               u292_20:
  6620  0FE7                     	line	48
  6621                           	
  6622                           i1l2667:	
  6623  0FE7                     ;Input.c: 48:                     _selectedInput--;
  6624                           	movlw	01h
  6625  0FE7  3001               	subwf	(__selectedInput)^080h,f
  6626  0FE8  02CB               	movlw	0
  6627  0FE9  3000               	skipc
  6628  0FEA  1C03               	decf	(__selectedInput+1)^080h,f
  6629  0FEB  03CC               	subwf	(__selectedInput+1)^080h,f
  6630  0FEC  02CC               	line	49
  6631                           ;Input.c: 49:                 } else {
  6632                           	goto	i1l226
  6633  0FED  2FF4               	
  6634                           i1l228:	
  6635  0FEE                     	line	50
  6636                           	
  6637                           i1l2669:	
  6638  0FEE                     ;Input.c: 50:                     _selectedInput = 3;
  6639                           	movlw	03h
  6640  0FEE  3003               	movwf	(__selectedInput)^080h
  6641  0FEF  00CB               	movlw	0
  6642  0FF0  3000               	movwf	((__selectedInput)^080h)+1
  6643  0FF1  00CC               	goto	i1l226
  6644  0FF2  2FF4               	line	51
  6645                           ;Input.c: 51:                 }
  6646                           	
  6647                           i1l229:	
  6648  0FF3                     	goto	i1l226
  6649  0FF3  2FF4               	line	52
  6650                           ;Input.c: 52:             }
  6651                           	
  6652                           i1l227:	
  6653  0FF4                     	line	53
  6654                           ;Input.c: 53:         }
  6655                           	
  6656                           i1l226:	
  6657  0FF4                     	line	55
  6658                           ;Input.c: 55:         _lastA = portA;
  6659                           	movf	(handle_rotary@portA+1),w
  6660  0FF4  0874               	bcf	status, 5	;RP0=0, select bank0
  6661  0FF5  1283               	movwf	(__lastA+1)
  6662  0FF6  00E1               	movf	(handle_rotary@portA),w
  6663  0FF7  0873               	movwf	(__lastA)
  6664  0FF8  00E0               	line	56
  6665                           ;Input.c: 56:         _lastB = portB;
  6666                           	movf	(handle_rotary@portB+1),w
  6667  0FF9  0876               	movwf	(__lastB+1)
  6668  0FFA  00DF               	movf	(handle_rotary@portB),w
  6669  0FFB  0875               	movwf	(__lastB)
  6670  0FFC  00DE               	line	57
  6671                           	
  6672                           i1l2671:	
  6673  0FFD                     ;Input.c: 57:         _inputUpdateRequired = 1;
  6674                           	clrf	(__inputUpdateRequired)
  6675  0FFD  01E3               	incf	(__inputUpdateRequired),f
  6676  0FFE  0AE3               	line	58
  6677                           	
  6678                           i1l230:	
  6679  0FFF                     	return
  6680  0FFF  0008               	opt stack 0
  6681                           GLOBAL	__end_of_handle_rotary
  6682                           	__end_of_handle_rotary:
  6683  1000                     	signat	_handle_rotary,89
  6684                           	global	_handle_potmeter
  6685                           
  6686 ;; *************** function _handle_potmeter *****************
  6687 ;; Defined at:
  6688 ;;		line 30 in file "Volume.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  currentStep     2   50[BANK0 ] unsigned int 
  6693 ;;  ad_result       2   52[BANK0 ] unsigned int 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6703 ;;      Params:         0       0       0       0       0
  6704 ;;      Locals:         0       4       0       0       0
  6705 ;;      Temps:          0       2       0       0       0
  6706 ;;      Totals:         0       6       0       0       0
  6707 ;;Total ram usage:        6 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; Hardware stack levels required when called:    2
  6710 ;; This function calls:
  6711 ;;		_is_deadzone
  6712 ;;		i1___lwdiv
  6713 ;; This function is called by:
  6714 ;;		_isr
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6718                           	file	"Volume.c"
  6719                           	line	30
  6720                           global __ptext22
  6721                           __ptext22:	;psect for function _handle_potmeter
  6722  0F0D                     psect	text22
  6723                           	file	"Volume.c"
  6724                           	line	30
  6725                           	global	__size_of_handle_potmeter
  6726                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
  6727  0072                     	
  6728                           _handle_potmeter:	
  6729  0F0D                     ;incstack = 0
  6730 ;; hardware stack exceeded
  6731                           	opt	stack 0
  6732                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6733                           	line	32
  6734                           	
  6735                           i1l2673:	
  6736  0F0D                     ;Volume.c: 32:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
  6737                           	bcf	status, 5	;RP0=0, select bank0
  6738  0F0D  1283               	bcf	status, 6	;RP1=0, select bank0
  6739  0F0E  1303               	movf	(30),w	;volatile
  6740  0F0F  081E               	movwf	(handle_potmeter@ad_result+1)
  6741  0F10  00D5               	bsf	status, 5	;RP0=1, select bank1
  6742  0F11  1683               	bcf	status, 6	;RP1=0, select bank1
  6743  0F12  1303               	movf	(158)^080h,w	;volatile
  6744  0F13  081E               	bcf	status, 5	;RP0=0, select bank0
  6745  0F14  1283               	bcf	status, 6	;RP1=0, select bank0
  6746  0F15  1303               	movwf	(handle_potmeter@ad_result)
  6747  0F16  00D4               	line	34
  6748                           	
  6749                           i1l2675:	
  6750  0F17                     ;Volume.c: 34:     if (ad_result == 0 || ad_result < step_size) {
  6751                           	movf	((handle_potmeter@ad_result)),w
  6752  0F17  0854               iorwf	((handle_potmeter@ad_result+1)),w
  6753  0F18  0455               	btfsc	status,2
  6754  0F19  1903               	goto	u293_21
  6755  0F1A  2F1C               	goto	u293_20
  6756  0F1B  2F1D               u293_21:
  6757  0F1C                     	goto	i1l2679
  6758  0F1C  2F38               u293_20:
  6759  0F1D                     	
  6760                           i1l2677:	
  6761  0F1D                     	movlw	low(_step_size|8000h)
  6762  0F1D  308E               	movwf	fsr0
  6763  0F1E  0084               	movlw	high(_step_size|8000h)
  6764  0F1F  3084               	movwf	btemp+1
  6765  0F20  00FF               	fcall	stringtab
  6766  0F21  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0
  6767  0F26  00D0               	fcall	stringtab
  6768  0F27  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0+1
  6769  0F2C  00D1               	movf	1+(??_handle_potmeter+0)+0,w
  6770  0F2D  0851               	subwf	(handle_potmeter@ad_result+1),w
  6771  0F2E  0255               	skipz
  6772  0F2F  1D03               	goto	u294_25
  6773  0F30  2F33               	movf	0+(??_handle_potmeter+0)+0,w
  6774  0F31  0850               	subwf	(handle_potmeter@ad_result),w
  6775  0F32  0254               u294_25:
  6776  0F33                     	skipnc
  6777  0F33  1803               	goto	u294_21
  6778  0F34  2F36               	goto	u294_20
  6779  0F35  2F37               u294_21:
  6780  0F36                     	goto	i1l2681
  6781  0F36  2F3D               u294_20:
  6782  0F37                     	goto	i1l2679
  6783  0F37  2F38               	
  6784                           i1l318:	
  6785  0F38                     	line	35
  6786                           	
  6787                           i1l2679:	
  6788  0F38                     ;Volume.c: 35:             volume = 0;
  6789                           	bsf	status, 5	;RP0=1, select bank1
  6790  0F38  1683               	bcf	status, 6	;RP1=0, select bank1
  6791  0F39  1303               	clrf	(_volume)^080h
  6792  0F3A  01C9               	clrf	(_volume+1)^080h
  6793  0F3B  01CA               	line	36
  6794                           ;Volume.c: 36:     } else {
  6795                           	goto	i1l321
  6796  0F3C  2F7E               	
  6797                           i1l316:	
  6798  0F3D                     	line	37
  6799                           	
  6800                           i1l2681:	
  6801  0F3D                     ;Volume.c: 37:         unsigned int currentStep = ad_result / step_size;
  6802                           	movlw	low(_step_size|8000h)
  6803  0F3D  308E               	movwf	fsr0
  6804  0F3E  0084               	movlw	high(_step_size|8000h)
  6805  0F3F  3084               	bcf	status, 5	;RP0=0, select bank0
  6806  0F40  1283               	movwf	btemp+1
  6807  0F41  00FF               	fcall	stringtab
  6808  0F42  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor)
  6809  0F47  00F0               	fcall	stringtab
  6810  0F48  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor+1)
  6811  0F4D  00F1               	movf	(handle_potmeter@ad_result+1),w
  6812  0F4E  0855               	movwf	(i1___lwdiv@dividend+1)
  6813  0F4F  00F3               	movf	(handle_potmeter@ad_result),w
  6814  0F50  0854               	movwf	(i1___lwdiv@dividend)
  6815  0F51  00F2               	fcall	i1___lwdiv
  6816  0F52  120A  158A  244C  120A  158A  	movf	(1+(?i1___lwdiv)),w
  6817  0F57  0871               	bcf	status, 5	;RP0=0, select bank0
  6818  0F58  1283               	bcf	status, 6	;RP1=0, select bank0
  6819  0F59  1303               	movwf	(handle_potmeter@currentStep+1)
  6820  0F5A  00D3               	movf	(0+(?i1___lwdiv)),w
  6821  0F5B  0870               	movwf	(handle_potmeter@currentStep)
  6822  0F5C  00D2               	line	39
  6823                           ;Volume.c: 39:         if (!is_deadzone(currentStep, ad_result))
  6824                           	movf	(handle_potmeter@currentStep+1),w
  6825  0F5D  0853               	movwf	(is_deadzone@currentStep+1)
  6826  0F5E  00C4               	movf	(handle_potmeter@currentStep),w
  6827  0F5F  0852               	movwf	(is_deadzone@currentStep)
  6828  0F60  00C3               	movf	(handle_potmeter@ad_result+1),w
  6829  0F61  0855               	movwf	(is_deadzone@adcResult+1)
  6830  0F62  00C6               	movf	(handle_potmeter@ad_result),w
  6831  0F63  0854               	movwf	(is_deadzone@adcResult)
  6832  0F64  00C5               	fcall	_is_deadzone
  6833  0F65  120A  118A  25D3  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  6834  0F6A  1283               	bcf	status, 6	;RP1=0, select bank0
  6835  0F6B  1303               	movf	((0+(?_is_deadzone))),w
  6836  0F6C  0843               iorwf	((1+(?_is_deadzone))),w
  6837  0F6D  0444               	btfss	status,2
  6838  0F6E  1D03               	goto	u295_21
  6839  0F6F  2F71               	goto	u295_20
  6840  0F70  2F72               u295_21:
  6841  0F71                     	goto	i1l321
  6842  0F71  2F7E               u295_20:
  6843  0F72                     	line	40
  6844                           	
  6845                           i1l2683:	
  6846  0F72                     ;Volume.c: 40:             volume = currentStep;
  6847                           	movf	(handle_potmeter@currentStep+1),w
  6848  0F72  0853               	bsf	status, 5	;RP0=1, select bank1
  6849  0F73  1683               	bcf	status, 6	;RP1=0, select bank1
  6850  0F74  1303               	movwf	(_volume+1)^080h
  6851  0F75  00CA               	bcf	status, 5	;RP0=0, select bank0
  6852  0F76  1283               	bcf	status, 6	;RP1=0, select bank0
  6853  0F77  1303               	movf	(handle_potmeter@currentStep),w
  6854  0F78  0852               	bsf	status, 5	;RP0=1, select bank1
  6855  0F79  1683               	bcf	status, 6	;RP1=0, select bank1
  6856  0F7A  1303               	movwf	(_volume)^080h
  6857  0F7B  00C9               	goto	i1l321
  6858  0F7C  2F7E               	
  6859                           i1l320:	
  6860  0F7D                     	goto	i1l321
  6861  0F7D  2F7E               	line	41
  6862                           ;Volume.c: 41:     }
  6863                           	
  6864                           i1l319:	
  6865  0F7E                     	line	43
  6866                           	
  6867                           i1l321:	
  6868  0F7E                     	return
  6869  0F7E  0008               	opt stack 0
  6870                           GLOBAL	__end_of_handle_potmeter
  6871                           	__end_of_handle_potmeter:
  6872  0F7F                     	signat	_handle_potmeter,89
  6873                           	global	i1___lwdiv
  6874                           
  6875 ;; *************** function i1___lwdiv *****************
  6876 ;; Defined at:
  6877 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;  divisor         2    0[COMMON] unsigned int 
  6880 ;;  dividend        2    2[COMMON] unsigned int 
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6883 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6884 ;; Return value:  Size  Location     Type
  6885 ;;                  2    0[COMMON] unsigned int 
  6886 ;; Registers used:
  6887 ;;		wreg, status,2, status,0
  6888 ;; Tracked objects:
  6889 ;;		On entry : 0/0
  6890 ;;		On exit  : 0/0
  6891 ;;		Unchanged: 0/0
  6892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6893 ;;      Params:         4       0       0       0       0
  6894 ;;      Locals:         3       0       0       0       0
  6895 ;;      Temps:          1       0       0       0       0
  6896 ;;      Totals:         8       0       0       0       0
  6897 ;;Total ram usage:        8 bytes
  6898 ;; Hardware stack levels used:    1
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		_handle_potmeter
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6906                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  6907                           	line	5
  6908                           global __ptext23
  6909                           __ptext23:	;psect for function i1___lwdiv
  6910  0C4C                     psect	text23
  6911                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  6912                           	line	5
  6913                           	global	__size_ofi1___lwdiv
  6914                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
  6915  004B                     	
  6916                           i1___lwdiv:	
  6917  0C4C                     ;incstack = 0
  6918 ;; hardware stack exceeded
  6919                           	opt	stack 0
  6920                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6921                           	line	13
  6922                           	
  6923                           i1l2501:	
  6924  0C4C                     	clrf	(i1___lwdiv@quotient)
  6925  0C4C  01F5               	clrf	(i1___lwdiv@quotient+1)
  6926  0C4D  01F6               	line	14
  6927                           	
  6928                           i1l2503:	
  6929  0C4E                     	movf	((i1___lwdiv@divisor)),w
  6930  0C4E  0870               iorwf	((i1___lwdiv@divisor+1)),w
  6931  0C4F  0471               	btfsc	status,2
  6932  0C50  1903               	goto	u274_21
  6933  0C51  2C53               	goto	u274_20
  6934  0C52  2C54               u274_21:
  6935  0C53                     	goto	i1l2523
  6936  0C53  2C91               u274_20:
  6937  0C54                     	line	15
  6938                           	
  6939                           i1l2505:	
  6940  0C54                     	clrf	(i1___lwdiv@counter)
  6941  0C54  01F7               	incf	(i1___lwdiv@counter),f
  6942  0C55  0AF7               	line	16
  6943                           	goto	i1l2511
  6944  0C56  2C63               	
  6945                           i1l745:	
  6946  0C57                     	line	17
  6947                           	
  6948                           i1l2507:	
  6949  0C57                     	movlw	01h
  6950  0C57  3001               	
  6951                           u275_25:
  6952  0C58                     	clrc
  6953  0C58  1003               	rlf	(i1___lwdiv@divisor),f
  6954  0C59  0DF0               	rlf	(i1___lwdiv@divisor+1),f
  6955  0C5A  0DF1               	addlw	-1
  6956  0C5B  3EFF               	skipz
  6957  0C5C  1D03               	goto	u275_25
  6958  0C5D  2C58               	line	18
  6959                           	
  6960                           i1l2509:	
  6961  0C5E                     	movlw	low(01h)
  6962  0C5E  3001               	movwf	(??i1___lwdiv+0)+0
  6963  0C5F  00F4               	movf	(??i1___lwdiv+0)+0,w
  6964  0C60  0874               	addwf	(i1___lwdiv@counter),f
  6965  0C61  07F7               	goto	i1l2511
  6966  0C62  2C63               	line	19
  6967                           	
  6968                           i1l744:	
  6969  0C63                     	line	16
  6970                           	
  6971                           i1l2511:	
  6972  0C63                     	btfss	(i1___lwdiv@divisor+1),(15)&7
  6973  0C63  1FF1               	goto	u276_21
  6974  0C64  2C66               	goto	u276_20
  6975  0C65  2C67               u276_21:
  6976  0C66                     	goto	i1l2507
  6977  0C66  2C57               u276_20:
  6978  0C67                     	goto	i1l2513
  6979  0C67  2C69               	
  6980                           i1l746:	
  6981  0C68                     	goto	i1l2513
  6982  0C68  2C69               	line	20
  6983                           	
  6984                           i1l747:	
  6985  0C69                     	line	21
  6986                           	
  6987                           i1l2513:	
  6988  0C69                     	movlw	01h
  6989  0C69  3001               	
  6990                           u277_25:
  6991  0C6A                     	clrc
  6992  0C6A  1003               	rlf	(i1___lwdiv@quotient),f
  6993  0C6B  0DF5               	rlf	(i1___lwdiv@quotient+1),f
  6994  0C6C  0DF6               	addlw	-1
  6995  0C6D  3EFF               	skipz
  6996  0C6E  1D03               	goto	u277_25
  6997  0C6F  2C6A               	line	22
  6998                           	movf	(i1___lwdiv@divisor+1),w
  6999  0C70  0871               	subwf	(i1___lwdiv@dividend+1),w
  7000  0C71  0273               	skipz
  7001  0C72  1D03               	goto	u278_25
  7002  0C73  2C76               	movf	(i1___lwdiv@divisor),w
  7003  0C74  0870               	subwf	(i1___lwdiv@dividend),w
  7004  0C75  0272               u278_25:
  7005  0C76                     	skipc
  7006  0C76  1C03               	goto	u278_21
  7007  0C77  2C79               	goto	u278_20
  7008  0C78  2C7A               u278_21:
  7009  0C79                     	goto	i1l2519
  7010  0C79  2C82               u278_20:
  7011  0C7A                     	line	23
  7012                           	
  7013                           i1l2515:	
  7014  0C7A                     	movf	(i1___lwdiv@divisor),w
  7015  0C7A  0870               	subwf	(i1___lwdiv@dividend),f
  7016  0C7B  02F2               	movf	(i1___lwdiv@divisor+1),w
  7017  0C7C  0871               	skipc
  7018  0C7D  1C03               	decf	(i1___lwdiv@dividend+1),f
  7019  0C7E  03F3               	subwf	(i1___lwdiv@dividend+1),f
  7020  0C7F  02F3               	line	24
  7021                           	
  7022                           i1l2517:	
  7023  0C80                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
  7024  0C80  1475               	goto	i1l2519
  7025  0C81  2C82               	line	25
  7026                           	
  7027                           i1l748:	
  7028  0C82                     	line	26
  7029                           	
  7030                           i1l2519:	
  7031  0C82                     	movlw	01h
  7032  0C82  3001               	
  7033                           u279_25:
  7034  0C83                     	clrc
  7035  0C83  1003               	rrf	(i1___lwdiv@divisor+1),f
  7036  0C84  0CF1               	rrf	(i1___lwdiv@divisor),f
  7037  0C85  0CF0               	addlw	-1
  7038  0C86  3EFF               	skipz
  7039  0C87  1D03               	goto	u279_25
  7040  0C88  2C83               	line	27
  7041                           	
  7042                           i1l2521:	
  7043  0C89                     	movlw	01h
  7044  0C89  3001               	subwf	(i1___lwdiv@counter),f
  7045  0C8A  02F7               	btfss	status,2
  7046  0C8B  1D03               	goto	u280_21
  7047  0C8C  2C8E               	goto	u280_20
  7048  0C8D  2C8F               u280_21:
  7049  0C8E                     	goto	i1l2513
  7050  0C8E  2C69               u280_20:
  7051  0C8F                     	goto	i1l2523
  7052  0C8F  2C91               	
  7053                           i1l749:	
  7054  0C90                     	goto	i1l2523
  7055  0C90  2C91               	line	28
  7056                           	
  7057                           i1l743:	
  7058  0C91                     	line	29
  7059                           	
  7060                           i1l2523:	
  7061  0C91                     	movf	(i1___lwdiv@quotient+1),w
  7062  0C91  0876               	movwf	(?i1___lwdiv+1)
  7063  0C92  00F1               	movf	(i1___lwdiv@quotient),w
  7064  0C93  0875               	movwf	(?i1___lwdiv)
  7065  0C94  00F0               	goto	i1l750
  7066  0C95  2C96               	
  7067                           i1l2525:	
  7068  0C96                     	line	30
  7069                           	
  7070                           i1l750:	
  7071  0C96                     	return
  7072  0C96  0008               	opt stack 0
  7073                           GLOBAL	__end_ofi1___lwdiv
  7074                           	__end_ofi1___lwdiv:
  7075  0C97                     	signat	i1___lwdiv,90
  7076                           	global	_is_deadzone
  7077                           
  7078 ;; *************** function _is_deadzone *****************
  7079 ;; Defined at:
  7080 ;;		line 20 in file "Volume.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  currentStep     2   35[BANK0 ] int 
  7083 ;;  adcResult       2   37[BANK0 ] int 
  7084 ;; Auto vars:     Size  Location     Type
  7085 ;;  turnPoint       2   46[BANK0 ] int 
  7086 ;;  deadzoneHigh    2   43[BANK0 ] int 
  7087 ;;  deadzoneLow     2   41[BANK0 ] int 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  2   35[BANK0 ] int 
  7090 ;; Registers used:
  7091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7097 ;;      Params:         0       4       0       0       0
  7098 ;;      Locals:         0       7       0       0       0
  7099 ;;      Temps:          0       2       0       0       0
  7100 ;;      Totals:         0      13       0       0       0
  7101 ;;Total ram usage:       13 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    1
  7104 ;; This function calls:
  7105 ;;		___fladd
  7106 ;;		___fltol
  7107 ;;		___xxtofl
  7108 ;;		i1___wmul
  7109 ;; This function is called by:
  7110 ;;		_handle_potmeter
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7114                           	file	"Volume.c"
  7115                           	line	20
  7116                           global __ptext24
  7117                           __ptext24:	;psect for function _is_deadzone
  7118  05D3                     psect	text24
  7119                           	file	"Volume.c"
  7120                           	line	20
  7121                           	global	__size_of_is_deadzone
  7122                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  7123  00C6                     	
  7124                           _is_deadzone:	
  7125  05D3                     ;incstack = 0
  7126 ;; hardware stack exceeded
  7127                           	opt	stack 0
  7128                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7129                           	line	22
  7130                           	
  7131                           i1l2483:	
  7132  05D3                     ;Volume.c: 20: int is_deadzone(int currentStep, int adcResult);Volume.c: 21: {;Volume.c:
                                  22:     int turnPoint = step_size * currentStep;
  7133                           	movlw	low(_step_size|8000h)
  7134  05D3  308E               	movwf	fsr0
  7135  05D4  0084               	movlw	high(_step_size|8000h)
  7136  05D5  3084               	bcf	status, 5	;RP0=0, select bank0
  7137  05D6  1283               	bcf	status, 6	;RP1=0, select bank0
  7138  05D7  1303               	movwf	btemp+1
  7139  05D8  00FF               	fcall	stringtab
  7140  05D9  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier)
  7141  05DE  00F0               	fcall	stringtab
  7142  05DF  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier+1)
  7143  05E4  00F1               	movf	(is_deadzone@currentStep+1),w
  7144  05E5  0844               	movwf	(i1___wmul@multiplicand+1)
  7145  05E6  00F3               	movf	(is_deadzone@currentStep),w
  7146  05E7  0843               	movwf	(i1___wmul@multiplicand)
  7147  05E8  00F2               	fcall	i1___wmul
  7148  05E9  120A  158A  2232  120A  118A  	movf	(1+(?i1___wmul)),w
  7149  05EE  0871               	bcf	status, 5	;RP0=0, select bank0
  7150  05EF  1283               	bcf	status, 6	;RP1=0, select bank0
  7151  05F0  1303               	movwf	(is_deadzone@turnPoint+1)
  7152  05F1  00CF               	movf	(0+(?i1___wmul)),w
  7153  05F2  0870               	movwf	(is_deadzone@turnPoint)
  7154  05F3  00CE               	line	24
  7155                           	
  7156                           i1l2485:	
  7157  05F4                     ;Volume.c: 24:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  7158                           	movf	(is_deadzone@turnPoint),w
  7159  05F4  084E               	movwf	(___xxtofl@val)
  7160  05F5  00F0               	movf	(is_deadzone@turnPoint+1),w
  7161  05F6  084F               	movwf	(___xxtofl@val+1)
  7162  05F7  00F1               	movlw	0
  7163  05F8  3000               	btfsc	(___xxtofl@val+1),7
  7164  05F9  1BF1               	movlw	255
  7165  05FA  30FF               	movwf	(___xxtofl@val+2)
  7166  05FB  00F2               	movwf	(___xxtofl@val+3)
  7167  05FC  00F3               	movlw	low(01h)
  7168  05FD  3001               	fcall	___xxtofl
  7169  05FE  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7170  0603  0873               	bcf	status, 5	;RP0=0, select bank0
  7171  0604  1283               	bcf	status, 6	;RP1=0, select bank0
  7172  0605  1303               	movwf	(___fladd@a+3)
  7173  0606  00A7               	movf	(2+(?___xxtofl)),w
  7174  0607  0872               	movwf	(___fladd@a+2)
  7175  0608  00A6               	movf	(1+(?___xxtofl)),w
  7176  0609  0871               	movwf	(___fladd@a+1)
  7177  060A  00A5               	movf	(0+(?___xxtofl)),w
  7178  060B  0870               	movwf	(___fladd@a)
  7179  060C  00A4               
  7180                           	movlw	0xc1
  7181  060D  30C1               	movwf	(___fladd@b+3)
  7182  060E  00A3               	movlw	0x23
  7183  060F  3023               	movwf	(___fladd@b+2)
  7184  0610  00A2               	movlw	0xae
  7185  0611  30AE               	movwf	(___fladd@b+1)
  7186  0612  00A1               	movlw	0x14
  7187  0613  3014               	movwf	(___fladd@b)
  7188  0614  00A0               
  7189                           	fcall	___fladd
  7190  0615  120A  118A  2030  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7191  061A  1283               	bcf	status, 6	;RP1=0, select bank0
  7192  061B  1303               	movf	(3+(?___fladd)),w
  7193  061C  0823               	movwf	(___fltol@f1+3)
  7194  061D  00BB               	movf	(2+(?___fladd)),w
  7195  061E  0822               	movwf	(___fltol@f1+2)
  7196  061F  00BA               	movf	(1+(?___fladd)),w
  7197  0620  0821               	movwf	(___fltol@f1+1)
  7198  0621  00B9               	movf	(0+(?___fladd)),w
  7199  0622  0820               	movwf	(___fltol@f1)
  7200  0623  00B8               
  7201                           	fcall	___fltol
  7202  0624  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7203  0629  1283               	bcf	status, 6	;RP1=0, select bank0
  7204  062A  1303               	movf	(1+(?___fltol)),w
  7205  062B  0839               	movwf	(is_deadzone@deadzoneLow+1)
  7206  062C  00CA               	movf	(0+(?___fltol)),w
  7207  062D  0838               	movwf	(is_deadzone@deadzoneLow)
  7208  062E  00C9               	line	25
  7209                           	
  7210                           i1l2487:	
  7211  062F                     ;Volume.c: 25:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  7212                           	movf	(is_deadzone@turnPoint),w
  7213  062F  084E               	movwf	(___xxtofl@val)
  7214  0630  00F0               	movf	(is_deadzone@turnPoint+1),w
  7215  0631  084F               	movwf	(___xxtofl@val+1)
  7216  0632  00F1               	movlw	0
  7217  0633  3000               	btfsc	(___xxtofl@val+1),7
  7218  0634  1BF1               	movlw	255
  7219  0635  30FF               	movwf	(___xxtofl@val+2)
  7220  0636  00F2               	movwf	(___xxtofl@val+3)
  7221  0637  00F3               	movlw	low(01h)
  7222  0638  3001               	fcall	___xxtofl
  7223  0639  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7224  063E  0873               	bcf	status, 5	;RP0=0, select bank0
  7225  063F  1283               	bcf	status, 6	;RP1=0, select bank0
  7226  0640  1303               	movwf	(___fladd@a+3)
  7227  0641  00A7               	movf	(2+(?___xxtofl)),w
  7228  0642  0872               	movwf	(___fladd@a+2)
  7229  0643  00A6               	movf	(1+(?___xxtofl)),w
  7230  0644  0871               	movwf	(___fladd@a+1)
  7231  0645  00A5               	movf	(0+(?___xxtofl)),w
  7232  0646  0870               	movwf	(___fladd@a)
  7233  0647  00A4               
  7234                           	movlw	0x41
  7235  0648  3041               	movwf	(___fladd@b+3)
  7236  0649  00A3               	movlw	0x23
  7237  064A  3023               	movwf	(___fladd@b+2)
  7238  064B  00A2               	movlw	0xae
  7239  064C  30AE               	movwf	(___fladd@b+1)
  7240  064D  00A1               	movlw	0x14
  7241  064E  3014               	movwf	(___fladd@b)
  7242  064F  00A0               
  7243                           	fcall	___fladd
  7244  0650  120A  118A  2030  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7245  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  7246  0656  1303               	movf	(3+(?___fladd)),w
  7247  0657  0823               	movwf	(___fltol@f1+3)
  7248  0658  00BB               	movf	(2+(?___fladd)),w
  7249  0659  0822               	movwf	(___fltol@f1+2)
  7250  065A  00BA               	movf	(1+(?___fladd)),w
  7251  065B  0821               	movwf	(___fltol@f1+1)
  7252  065C  00B9               	movf	(0+(?___fladd)),w
  7253  065D  0820               	movwf	(___fltol@f1)
  7254  065E  00B8               
  7255                           	fcall	___fltol
  7256  065F  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7257  0664  1283               	bcf	status, 6	;RP1=0, select bank0
  7258  0665  1303               	movf	(1+(?___fltol)),w
  7259  0666  0839               	movwf	(is_deadzone@deadzoneHigh+1)
  7260  0667  00CC               	movf	(0+(?___fltol)),w
  7261  0668  0838               	movwf	(is_deadzone@deadzoneHigh)
  7262  0669  00CB               	line	27
  7263                           	
  7264                           i1l2489:	
  7265  066A                     ;Volume.c: 27:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  7266                           	clrf	(_is_deadzone$864)
  7267  066A  01CD               	
  7268                           i1l2491:	
  7269  066B                     	movf	(is_deadzone@deadzoneLow+1),w
  7270  066B  084A               	xorlw	80h
  7271  066C  3A80               	movwf	(??_is_deadzone+0)+0
  7272  066D  00C7               	movf	(is_deadzone@adcResult+1),w
  7273  066E  0846               	xorlw	80h
  7274  066F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7275  0670  0247               	skipz
  7276  0671  1D03               	goto	u272_25
  7277  0672  2E75               	movf	(is_deadzone@adcResult),w
  7278  0673  0845               	subwf	(is_deadzone@deadzoneLow),w
  7279  0674  0249               u272_25:
  7280  0675                     
  7281                           	skipnc
  7282  0675  1803               	goto	u272_21
  7283  0676  2E78               	goto	u272_20
  7284  0677  2E79               u272_21:
  7285  0678                     	goto	i1l2497
  7286  0678  2E8E               u272_20:
  7287  0679                     	
  7288                           i1l2493:	
  7289  0679                     	bcf	status, 5	;RP0=0, select bank0
  7290  0679  1283               	bcf	status, 6	;RP1=0, select bank0
  7291  067A  1303               	movf	(is_deadzone@adcResult+1),w
  7292  067B  0846               	xorlw	80h
  7293  067C  3A80               	movwf	(??_is_deadzone+0)+0
  7294  067D  00C7               	movf	(is_deadzone@deadzoneHigh+1),w
  7295  067E  084C               	xorlw	80h
  7296  067F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7297  0680  0247               	skipz
  7298  0681  1D03               	goto	u273_25
  7299  0682  2E85               	movf	(is_deadzone@deadzoneHigh),w
  7300  0683  084B               	subwf	(is_deadzone@adcResult),w
  7301  0684  0245               u273_25:
  7302  0685                     
  7303                           	skipnc
  7304  0685  1803               	goto	u273_21
  7305  0686  2E88               	goto	u273_20
  7306  0687  2E89               u273_21:
  7307  0688                     	goto	i1l2497
  7308  0688  2E8E               u273_20:
  7309  0689                     	
  7310                           i1l2495:	
  7311  0689                     	bcf	status, 5	;RP0=0, select bank0
  7312  0689  1283               	bcf	status, 6	;RP1=0, select bank0
  7313  068A  1303               	clrf	(_is_deadzone$864)
  7314  068B  01CD               	incf	(_is_deadzone$864),f
  7315  068C  0ACD               	goto	i1l2497
  7316  068D  2E8E               	
  7317                           i1l312:	
  7318  068E                     	
  7319                           i1l2497:	
  7320  068E                     	bcf	status, 5	;RP0=0, select bank0
  7321  068E  1283               	bcf	status, 6	;RP1=0, select bank0
  7322  068F  1303               	movf	(_is_deadzone$864),w
  7323  0690  084D               	movwf	(??_is_deadzone+0)+0
  7324  0691  00C7               	clrf	(??_is_deadzone+0)+0+1
  7325  0692  01C8               	movf	0+(??_is_deadzone+0)+0,w
  7326  0693  0847               	movwf	(?_is_deadzone)
  7327  0694  00C3               	movf	1+(??_is_deadzone+0)+0,w
  7328  0695  0848               	movwf	(?_is_deadzone+1)
  7329  0696  00C4               	goto	i1l313
  7330  0697  2E98               	
  7331                           i1l2499:	
  7332  0698                     	line	28
  7333                           	
  7334                           i1l313:	
  7335  0698                     	return
  7336  0698  0008               	opt stack 0
  7337                           GLOBAL	__end_of_is_deadzone
  7338                           	__end_of_is_deadzone:
  7339  0699                     	signat	_is_deadzone,8314
  7340                           	global	i1___wmul
  7341                           
  7342 ;; *************** function i1___wmul *****************
  7343 ;; Defined at:
  7344 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  multiplier      2    0[COMMON] unsigned int 
  7347 ;;  multiplicand    2    2[COMMON] unsigned int 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  __wmul          2    4[COMMON] unsigned int 
  7350 ;; Return value:  Size  Location     Type
  7351 ;;                  2    0[COMMON] unsigned int 
  7352 ;; Registers used:
  7353 ;;		wreg, status,2, status,0
  7354 ;; Tracked objects:
  7355 ;;		On entry : 0/0
  7356 ;;		On exit  : 0/0
  7357 ;;		Unchanged: 0/0
  7358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7359 ;;      Params:         4       0       0       0       0
  7360 ;;      Locals:         2       0       0       0       0
  7361 ;;      Temps:          0       0       0       0       0
  7362 ;;      Totals:         6       0       0       0       0
  7363 ;;Total ram usage:        6 bytes
  7364 ;; Hardware stack levels used:    1
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_is_deadzone
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7372                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  7373                           	line	15
  7374                           global __ptext25
  7375                           __ptext25:	;psect for function i1___wmul
  7376  0A32                     psect	text25
  7377                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  7378                           	line	15
  7379                           	global	__size_ofi1___wmul
  7380                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  7381  0028                     	
  7382                           i1___wmul:	
  7383  0A32                     ;incstack = 0
  7384 ;; hardware stack exceeded
  7385                           	opt	stack 0
  7386                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7387                           	line	43
  7388                           	
  7389                           i1l2371:	
  7390  0A32                     	clrf	(i1___wmul@product)
  7391  0A32  01F4               	clrf	(i1___wmul@product+1)
  7392  0A33  01F5               	goto	i1l2373
  7393  0A34  2A35               	line	44
  7394                           	
  7395                           i1l477:	
  7396  0A35                     	line	45
  7397                           	
  7398                           i1l2373:	
  7399  0A35                     	btfss	(i1___wmul@multiplier),(0)&7
  7400  0A35  1C70               	goto	u264_21
  7401  0A36  2A38               	goto	u264_20
  7402  0A37  2A39               u264_21:
  7403  0A38                     	goto	i1l478
  7404  0A38  2A3F               u264_20:
  7405  0A39                     	line	46
  7406                           	
  7407                           i1l2375:	
  7408  0A39                     	movf	(i1___wmul@multiplicand),w
  7409  0A39  0872               	addwf	(i1___wmul@product),f
  7410  0A3A  07F4               	skipnc
  7411  0A3B  1803               	incf	(i1___wmul@product+1),f
  7412  0A3C  0AF5               	movf	(i1___wmul@multiplicand+1),w
  7413  0A3D  0873               	addwf	(i1___wmul@product+1),f
  7414  0A3E  07F5               	
  7415                           i1l478:	
  7416  0A3F                     	line	47
  7417                           	movlw	01h
  7418  0A3F  3001               	
  7419                           u265_25:
  7420  0A40                     	clrc
  7421  0A40  1003               	rlf	(i1___wmul@multiplicand),f
  7422  0A41  0DF2               	rlf	(i1___wmul@multiplicand+1),f
  7423  0A42  0DF3               	addlw	-1
  7424  0A43  3EFF               	skipz
  7425  0A44  1D03               	goto	u265_25
  7426  0A45  2A40               	line	48
  7427                           	
  7428                           i1l2377:	
  7429  0A46                     	movlw	01h
  7430  0A46  3001               	
  7431                           u266_25:
  7432  0A47                     	clrc
  7433  0A47  1003               	rrf	(i1___wmul@multiplier+1),f
  7434  0A48  0CF1               	rrf	(i1___wmul@multiplier),f
  7435  0A49  0CF0               	addlw	-1
  7436  0A4A  3EFF               	skipz
  7437  0A4B  1D03               	goto	u266_25
  7438  0A4C  2A47               	line	49
  7439                           	
  7440                           i1l2379:	
  7441  0A4D                     	movf	((i1___wmul@multiplier)),w
  7442  0A4D  0870               iorwf	((i1___wmul@multiplier+1)),w
  7443  0A4E  0471               	btfss	status,2
  7444  0A4F  1D03               	goto	u267_21
  7445  0A50  2A52               	goto	u267_20
  7446  0A51  2A53               u267_21:
  7447  0A52                     	goto	i1l2373
  7448  0A52  2A35               u267_20:
  7449  0A53                     	goto	i1l2381
  7450  0A53  2A54               	
  7451                           i1l479:	
  7452  0A54                     	line	52
  7453                           	
  7454                           i1l2381:	
  7455  0A54                     	movf	(i1___wmul@product+1),w
  7456  0A54  0875               	movwf	(?i1___wmul+1)
  7457  0A55  00F1               	movf	(i1___wmul@product),w
  7458  0A56  0874               	movwf	(?i1___wmul)
  7459  0A57  00F0               	goto	i1l480
  7460  0A58  2A59               	
  7461                           i1l2383:	
  7462  0A59                     	line	53
  7463                           	
  7464                           i1l480:	
  7465  0A59                     	return
  7466  0A59  0008               	opt stack 0
  7467                           GLOBAL	__end_ofi1___wmul
  7468                           	__end_ofi1___wmul:
  7469  0A5A                     	signat	i1___wmul,90
  7470                           	global	___xxtofl
  7471                           
  7472 ;; *************** function ___xxtofl *****************
  7473 ;; Defined at:
  7474 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  sign            1    wreg     unsigned char 
  7477 ;;  val             4    0[COMMON] long 
  7478 ;; Auto vars:     Size  Location     Type
  7479 ;;  sign            1    8[COMMON] unsigned char 
  7480 ;;  arg             4   10[COMMON] unsigned long 
  7481 ;;  exp             1    9[COMMON] unsigned char 
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  4    0[COMMON] unsigned char 
  7484 ;; Registers used:
  7485 ;;		wreg, status,2, status,0
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7491 ;;      Params:         4       0       0       0       0
  7492 ;;      Locals:         6       0       0       0       0
  7493 ;;      Temps:          4       0       0       0       0
  7494 ;;      Totals:        14       0       0       0       0
  7495 ;;Total ram usage:       14 bytes
  7496 ;; Hardware stack levels used:    1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_is_deadzone
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           psect	text26,local,class=CODE,delta=2,merge=1,group=1
  7504                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  7505                           	line	10
  7506                           global __ptext26
  7507                           __ptext26:	;psect for function ___xxtofl
  7508  0699                     psect	text26
  7509                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  7510                           	line	10
  7511                           	global	__size_of___xxtofl
  7512                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  7513  00C2                     	
  7514                           ___xxtofl:	
  7515  0699                     ;incstack = 0
  7516 ;; hardware stack exceeded
  7517                           	opt	stack 0
  7518                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7519                           ;___xxtofl@sign stored from wreg
  7520                           	movwf	(___xxtofl@sign)
  7521  0699  00F8               	line	15
  7522                           	
  7523                           i1l2327:	
  7524  069A                     	movf	((___xxtofl@sign)),w
  7525  069A  0878               	btfsc	status,2
  7526  069B  1903               	goto	u250_21
  7527  069C  2E9E               	goto	u250_20
  7528  069D  2E9F               u250_21:
  7529  069E                     	goto	i1l2333
  7530  069E  2EB3               u250_20:
  7531  069F                     	
  7532                           i1l2329:	
  7533  069F                     	btfss	(___xxtofl@val+3),7
  7534  069F  1FF3               	goto	u251_21
  7535  06A0  2EA2               	goto	u251_20
  7536  06A1  2EA3               u251_21:
  7537  06A2                     	goto	i1l2333
  7538  06A2  2EB3               u251_20:
  7539  06A3                     	line	16
  7540                           	
  7541                           i1l2331:	
  7542  06A3                     	comf	(___xxtofl@val)+0,w
  7543  06A3  0970               	movwf	(___xxtofl@arg)
  7544  06A4  00FA               	comf	(___xxtofl@val)+1,w
  7545  06A5  0971               	movwf	(___xxtofl@arg+1)
  7546  06A6  00FB               	comf	(___xxtofl@val)+2,w
  7547  06A7  0972               	movwf	(___xxtofl@arg+2)
  7548  06A8  00FC               	comf	(___xxtofl@val)+3,w
  7549  06A9  0973               	movwf	(___xxtofl@arg+3)
  7550  06AA  00FD               	incf	(___xxtofl@arg),f
  7551  06AB  0AFA               	skipnz
  7552  06AC  1903               	incf	(___xxtofl@arg+1),f
  7553  06AD  0AFB               	skipnz
  7554  06AE  1903               	incf	(___xxtofl@arg+2),f
  7555  06AF  0AFC               	skipnz
  7556  06B0  1903               	incf	(___xxtofl@arg+3),f
  7557  06B1  0AFD               	line	17
  7558                           	goto	i1l886
  7559  06B2  2EBB               	line	18
  7560                           	
  7561                           i1l885:	
  7562  06B3                     	line	19
  7563                           	
  7564                           i1l2333:	
  7565  06B3                     	movf	(___xxtofl@val+3),w
  7566  06B3  0873               	movwf	(___xxtofl@arg+3)
  7567  06B4  00FD               	movf	(___xxtofl@val+2),w
  7568  06B5  0872               	movwf	(___xxtofl@arg+2)
  7569  06B6  00FC               	movf	(___xxtofl@val+1),w
  7570  06B7  0871               	movwf	(___xxtofl@arg+1)
  7571  06B8  00FB               	movf	(___xxtofl@val),w
  7572  06B9  0870               	movwf	(___xxtofl@arg)
  7573  06BA  00FA               
  7574                           	line	20
  7575                           	
  7576                           i1l886:	
  7577  06BB                     	line	21
  7578                           	movf	(___xxtofl@val+3),w
  7579  06BB  0873               	iorwf	(___xxtofl@val+2),w
  7580  06BC  0472               	iorwf	(___xxtofl@val+1),w
  7581  06BD  0471               	iorwf	(___xxtofl@val),w
  7582  06BE  0470               	skipz
  7583  06BF  1D03               	goto	u252_21
  7584  06C0  2EC2               	goto	u252_20
  7585  06C1  2EC3               u252_21:
  7586  06C2                     	goto	i1l2339
  7587  06C2  2ECD               u252_20:
  7588  06C3                     	line	22
  7589                           	
  7590                           i1l2335:	
  7591  06C3                     	movlw	0x0
  7592  06C3  3000               	movwf	(?___xxtofl+3)
  7593  06C4  00F3               	movlw	0x0
  7594  06C5  3000               	movwf	(?___xxtofl+2)
  7595  06C6  00F2               	movlw	0x0
  7596  06C7  3000               	movwf	(?___xxtofl+1)
  7597  06C8  00F1               	movlw	0x0
  7598  06C9  3000               	movwf	(?___xxtofl)
  7599  06CA  00F0               
  7600                           	goto	i1l888
  7601  06CB  2F5A               	
  7602                           i1l2337:	
  7603  06CC                     	goto	i1l888
  7604  06CC  2F5A               	
  7605                           i1l887:	
  7606  06CD                     	line	23
  7607                           	
  7608                           i1l2339:	
  7609  06CD                     	movlw	low(096h)
  7610  06CD  3096               	movwf	(??___xxtofl+0)+0
  7611  06CE  00F4               	movf	(??___xxtofl+0)+0,w
  7612  06CF  0874               	movwf	(___xxtofl@exp)
  7613  06D0  00F9               	line	24
  7614                           	goto	i1l2343
  7615  06D1  2EE0               	
  7616                           i1l890:	
  7617  06D2                     	line	25
  7618                           	
  7619                           i1l2341:	
  7620  06D2                     	movlw	low(01h)
  7621  06D2  3001               	movwf	(??___xxtofl+0)+0
  7622  06D3  00F4               	movf	(??___xxtofl+0)+0,w
  7623  06D4  0874               	addwf	(___xxtofl@exp),f
  7624  06D5  07F9               	line	26
  7625                           	movlw	01h
  7626  06D6  3001               u253_25:
  7627  06D7                     	clrc
  7628  06D7  1003               	rrf	(___xxtofl@arg+3),f
  7629  06D8  0CFD               	rrf	(___xxtofl@arg+2),f
  7630  06D9  0CFC               	rrf	(___xxtofl@arg+1),f
  7631  06DA  0CFB               	rrf	(___xxtofl@arg),f
  7632  06DB  0CFA               	addlw	-1
  7633  06DC  3EFF               	skipz
  7634  06DD  1D03               	goto	u253_25
  7635  06DE  2ED7               
  7636                           	goto	i1l2343
  7637  06DF  2EE0               	line	27
  7638                           	
  7639                           i1l889:	
  7640  06E0                     	line	24
  7641                           	
  7642                           i1l2343:	
  7643  06E0                     	movlw	high highword(0FE000000h)
  7644  06E0  30FE               	andwf	(___xxtofl@arg+3),w
  7645  06E1  057D               	btfss	status,2
  7646  06E2  1D03               	goto	u254_21
  7647  06E3  2EE5               	goto	u254_20
  7648  06E4  2EE6               u254_21:
  7649  06E5                     	goto	i1l2341
  7650  06E5  2ED2               u254_20:
  7651  06E6                     	goto	i1l892
  7652  06E6  2F03               	
  7653                           i1l891:	
  7654  06E7                     	line	28
  7655                           	goto	i1l892
  7656  06E7  2F03               	
  7657                           i1l893:	
  7658  06E8                     	line	29
  7659                           	
  7660                           i1l2345:	
  7661  06E8                     	movlw	low(01h)
  7662  06E8  3001               	movwf	(??___xxtofl+0)+0
  7663  06E9  00F4               	movf	(??___xxtofl+0)+0,w
  7664  06EA  0874               	addwf	(___xxtofl@exp),f
  7665  06EB  07F9               	line	30
  7666                           	
  7667                           i1l2347:	
  7668  06EC                     	movlw	01h
  7669  06EC  3001               	addwf	(___xxtofl@arg),f
  7670  06ED  07FA               	movlw	0
  7671  06EE  3000               	skipnc
  7672  06EF  1803               movlw 1
  7673  06F0  3001               	addwf	(___xxtofl@arg+1),f
  7674  06F1  07FB               	movlw	0
  7675  06F2  3000               	skipnc
  7676  06F3  1803               movlw 1
  7677  06F4  3001               	addwf	(___xxtofl@arg+2),f
  7678  06F5  07FC               	movlw	0
  7679  06F6  3000               	skipnc
  7680  06F7  1803               movlw 1
  7681  06F8  3001               	addwf	(___xxtofl@arg+3),f
  7682  06F9  07FD               	line	31
  7683                           	
  7684                           i1l2349:	
  7685  06FA                     	movlw	01h
  7686  06FA  3001               u255_25:
  7687  06FB                     	clrc
  7688  06FB  1003               	rrf	(___xxtofl@arg+3),f
  7689  06FC  0CFD               	rrf	(___xxtofl@arg+2),f
  7690  06FD  0CFC               	rrf	(___xxtofl@arg+1),f
  7691  06FE  0CFB               	rrf	(___xxtofl@arg),f
  7692  06FF  0CFA               	addlw	-1
  7693  0700  3EFF               	skipz
  7694  0701  1D03               	goto	u255_25
  7695  0702  2EFB               
  7696                           	line	32
  7697                           	
  7698                           i1l892:	
  7699  0703                     	line	28
  7700                           	movlw	high highword(0FF000000h)
  7701  0703  30FF               	andwf	(___xxtofl@arg+3),w
  7702  0704  057D               	btfss	status,2
  7703  0705  1D03               	goto	u256_21
  7704  0706  2F08               	goto	u256_20
  7705  0707  2F09               u256_21:
  7706  0708                     	goto	i1l2345
  7707  0708  2EE8               u256_20:
  7708  0709                     	goto	i1l2353
  7709  0709  2F17               	
  7710                           i1l894:	
  7711  070A                     	line	33
  7712                           	goto	i1l2353
  7713  070A  2F17               	
  7714                           i1l896:	
  7715  070B                     	line	34
  7716                           	
  7717                           i1l2351:	
  7718  070B                     	movlw	01h
  7719  070B  3001               	subwf	(___xxtofl@exp),f
  7720  070C  02F9               	line	35
  7721                           	movlw	01h
  7722  070D  3001               	movwf	(??___xxtofl+0)+0
  7723  070E  00F4               u257_25:
  7724  070F                     	clrc
  7725  070F  1003               	rlf	(___xxtofl@arg),f
  7726  0710  0DFA               	rlf	(___xxtofl@arg+1),f
  7727  0711  0DFB               	rlf	(___xxtofl@arg+2),f
  7728  0712  0DFC               	rlf	(___xxtofl@arg+3),f
  7729  0713  0DFD               	decfsz	(??___xxtofl+0)+0
  7730  0714  0BF4               	goto	u257_25
  7731  0715  2F0F               	goto	i1l2353
  7732  0716  2F17               	line	36
  7733                           	
  7734                           i1l895:	
  7735  0717                     	line	33
  7736                           	
  7737                           i1l2353:	
  7738  0717                     	btfsc	(___xxtofl@arg+2),(23)&7
  7739  0717  1BFC               	goto	u258_21
  7740  0718  2F1A               	goto	u258_20
  7741  0719  2F1B               u258_21:
  7742  071A                     	goto	i1l899
  7743  071A  2F22               u258_20:
  7744  071B                     	
  7745                           i1l2355:	
  7746  071B                     	movlw	low(02h)
  7747  071B  3002               	subwf	(___xxtofl@exp),w
  7748  071C  0279               	skipnc
  7749  071D  1803               	goto	u259_21
  7750  071E  2F20               	goto	u259_20
  7751  071F  2F21               u259_21:
  7752  0720                     	goto	i1l2351
  7753  0720  2F0B               u259_20:
  7754  0721                     	goto	i1l899
  7755  0721  2F22               	
  7756                           i1l898:	
  7757  0722                     	
  7758                           i1l899:	
  7759  0722                     	line	37
  7760                           	btfsc	(___xxtofl@exp),(0)&7
  7761  0722  1879               	goto	u260_21
  7762  0723  2F25               	goto	u260_20
  7763  0724  2F26               u260_21:
  7764  0725                     	goto	i1l900
  7765  0725  2F2E               u260_20:
  7766  0726                     	line	38
  7767                           	
  7768                           i1l2357:	
  7769  0726                     	movlw	0FFh
  7770  0726  30FF               	andwf	(___xxtofl@arg),f
  7771  0727  05FA               	movlw	0FFh
  7772  0728  30FF               	andwf	(___xxtofl@arg+1),f
  7773  0729  05FB               	movlw	07Fh
  7774  072A  307F               	andwf	(___xxtofl@arg+2),f
  7775  072B  05FC               	movlw	0FFh
  7776  072C  30FF               	andwf	(___xxtofl@arg+3),f
  7777  072D  05FD               	
  7778                           i1l900:	
  7779  072E                     	line	39
  7780                           	clrc
  7781  072E  1003               	rrf	(___xxtofl@exp),f
  7782  072F  0CF9               
  7783                           	line	40
  7784                           	
  7785                           i1l2359:	
  7786  0730                     	movf	(___xxtofl@exp),w
  7787  0730  0879               	movwf	(??___xxtofl+0)+0
  7788  0731  00F4               	clrf	(??___xxtofl+0)+0+1
  7789  0732  01F5               	clrf	(??___xxtofl+0)+0+2
  7790  0733  01F6               	clrf	(??___xxtofl+0)+0+3
  7791  0734  01F7               	movlw	018h
  7792  0735  3018               u261_25:
  7793  0736                     	clrc
  7794  0736  1003               	rlf	(??___xxtofl+0)+0,f
  7795  0737  0DF4               	rlf	(??___xxtofl+0)+1,f
  7796  0738  0DF5               	rlf	(??___xxtofl+0)+2,f
  7797  0739  0DF6               	rlf	(??___xxtofl+0)+3,f
  7798  073A  0DF7               u261_20:
  7799  073B                     	addlw	-1
  7800  073B  3EFF               	skipz
  7801  073C  1D03               	goto	u261_25
  7802  073D  2F36               	movf	0+(??___xxtofl+0)+0,w
  7803  073E  0874               	iorwf	(___xxtofl@arg),f
  7804  073F  04FA               	movf	1+(??___xxtofl+0)+0,w
  7805  0740  0875               	iorwf	(___xxtofl@arg+1),f
  7806  0741  04FB               	movf	2+(??___xxtofl+0)+0,w
  7807  0742  0876               	iorwf	(___xxtofl@arg+2),f
  7808  0743  04FC               	movf	3+(??___xxtofl+0)+0,w
  7809  0744  0877               	iorwf	(___xxtofl@arg+3),f
  7810  0745  04FD               	line	41
  7811                           	
  7812                           i1l2361:	
  7813  0746                     	movf	((___xxtofl@sign)),w
  7814  0746  0878               	btfsc	status,2
  7815  0747  1903               	goto	u262_21
  7816  0748  2F4A               	goto	u262_20
  7817  0749  2F4B               u262_21:
  7818  074A                     	goto	i1l2367
  7819  074A  2F51               u262_20:
  7820  074B                     	
  7821                           i1l2363:	
  7822  074B                     	btfss	(___xxtofl@val+3),7
  7823  074B  1FF3               	goto	u263_21
  7824  074C  2F4E               	goto	u263_20
  7825  074D  2F4F               u263_21:
  7826  074E                     	goto	i1l2367
  7827  074E  2F51               u263_20:
  7828  074F                     	line	42
  7829                           	
  7830                           i1l2365:	
  7831  074F                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  7832  074F  17FD               	goto	i1l2367
  7833  0750  2F51               	
  7834                           i1l901:	
  7835  0751                     	line	43
  7836                           	
  7837                           i1l2367:	
  7838  0751                     	movf	(___xxtofl@arg+3),w
  7839  0751  087D               	movwf	(?___xxtofl+3)
  7840  0752  00F3               	movf	(___xxtofl@arg+2),w
  7841  0753  087C               	movwf	(?___xxtofl+2)
  7842  0754  00F2               	movf	(___xxtofl@arg+1),w
  7843  0755  087B               	movwf	(?___xxtofl+1)
  7844  0756  00F1               	movf	(___xxtofl@arg),w
  7845  0757  087A               	movwf	(?___xxtofl)
  7846  0758  00F0               
  7847                           	goto	i1l888
  7848  0759  2F5A               	
  7849                           i1l2369:	
  7850  075A                     	line	44
  7851                           	
  7852                           i1l888:	
  7853  075A                     	return
  7854  075A  0008               	opt stack 0
  7855                           GLOBAL	__end_of___xxtofl
  7856                           	__end_of___xxtofl:
  7857  075B                     	signat	___xxtofl,8316
  7858                           	global	___fltol
  7859                           
  7860 ;; *************** function ___fltol *****************
  7861 ;; Defined at:
  7862 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  f1              4   24[BANK0 ] unsigned char 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;  exp1            1   34[BANK0 ] unsigned char 
  7867 ;;  sign1           1   33[BANK0 ] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  4   24[BANK0 ] long 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7877 ;;      Params:         0       4       0       0       0
  7878 ;;      Locals:         0       2       0       0       0
  7879 ;;      Temps:          0       5       0       0       0
  7880 ;;      Totals:         0      11       0       0       0
  7881 ;;Total ram usage:       11 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_is_deadzone
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           psect	text27,local,class=CODE,delta=2,merge=1,group=1
  7890                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  7891                           	line	43
  7892                           global __ptext27
  7893                           __ptext27:	;psect for function ___fltol
  7894  075B                     psect	text27
  7895                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  7896                           	line	43
  7897                           	global	__size_of___fltol
  7898                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  7899  009C                     	
  7900                           ___fltol:	
  7901  075B                     ;incstack = 0
  7902 ;; hardware stack exceeded
  7903                           	opt	stack 0
  7904                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7905                           	line	47
  7906                           	
  7907                           i1l2097:	
  7908  075B                     	bcf	status, 5	;RP0=0, select bank0
  7909  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  7910  075C  1303               	movf	(___fltol@f1),w
  7911  075D  0838               	movwf	(??___fltol+0)+0
  7912  075E  00BC               	movf	(___fltol@f1+1),w
  7913  075F  0839               	movwf	((??___fltol+0)+0+1)
  7914  0760  00BD               	movf	(___fltol@f1+2),w
  7915  0761  083A               	movwf	((??___fltol+0)+0+2)
  7916  0762  00BE               	movf	(___fltol@f1+3),w
  7917  0763  083B               	movwf	((??___fltol+0)+0+3)
  7918  0764  00BF               	clrc
  7919  0765  1003               	rlf	(??___fltol+0)+2,w
  7920  0766  0D3E               	rlf	(??___fltol+0)+3,w
  7921  0767  0D3F               	movwf	(??___fltol+4)+0
  7922  0768  00C0               	movf	(??___fltol+4)+0,w
  7923  0769  0840               	movwf	(___fltol@exp1)
  7924  076A  00C2               	movf	(((___fltol@exp1))),w
  7925  076B  0842               	btfss	status,2
  7926  076C  1D03               	goto	u194_21
  7927  076D  2F6F               	goto	u194_20
  7928  076E  2F70               u194_21:
  7929  076F                     	goto	i1l2103
  7930  076F  2F7A               u194_20:
  7931  0770                     	line	48
  7932                           	
  7933                           i1l2099:	
  7934  0770                     	movlw	high highword(0)
  7935  0770  3000               	movwf	(?___fltol+3)
  7936  0771  00BB               	movlw	low highword(0)
  7937  0772  3000               	movwf	(?___fltol+2)
  7938  0773  00BA               	movlw	high(0)
  7939  0774  3000               	movwf	(?___fltol+1)
  7940  0775  00B9               	movlw	low(0)
  7941  0776  3000               	movwf	(?___fltol)
  7942  0777  00B8               
  7943                           	goto	i1l664
  7944  0778  2FF6               	
  7945                           i1l2101:	
  7946  0779                     	goto	i1l664
  7947  0779  2FF6               	
  7948                           i1l663:	
  7949  077A                     	line	49
  7950                           	
  7951                           i1l2103:	
  7952  077A                     	movf	(___fltol@f1),w
  7953  077A  0838               	movwf	(??___fltol+0)+0
  7954  077B  00BC               	movf	(___fltol@f1+1),w
  7955  077C  0839               	movwf	((??___fltol+0)+0+1)
  7956  077D  00BD               	movf	(___fltol@f1+2),w
  7957  077E  083A               	movwf	((??___fltol+0)+0+2)
  7958  077F  00BE               	movf	(___fltol@f1+3),w
  7959  0780  083B               	movwf	((??___fltol+0)+0+3)
  7960  0781  00BF               	movlw	01Fh
  7961  0782  301F               u195_25:
  7962  0783                     	clrc
  7963  0783  1003               	rrf	(??___fltol+0)+3,f
  7964  0784  0CBF               	rrf	(??___fltol+0)+2,f
  7965  0785  0CBE               	rrf	(??___fltol+0)+1,f
  7966  0786  0CBD               	rrf	(??___fltol+0)+0,f
  7967  0787  0CBC               u195_20:
  7968  0788                     	addlw	-1
  7969  0788  3EFF               	skipz
  7970  0789  1D03               	goto	u195_25
  7971  078A  2F83               	movf	0+(??___fltol+0)+0,w
  7972  078B  083C               	movwf	(??___fltol+4)+0
  7973  078C  00C0               	movf	(??___fltol+4)+0,w
  7974  078D  0840               	movwf	(___fltol@sign1)
  7975  078E  00C1               	line	50
  7976                           	
  7977                           i1l2105:	
  7978  078F                     	bsf	(___fltol@f1)+(23/8),(23)&7
  7979  078F  17BA               	line	51
  7980                           	
  7981                           i1l2107:	
  7982  0790                     	movlw	0FFh
  7983  0790  30FF               	andwf	(___fltol@f1),f
  7984  0791  05B8               	movlw	0FFh
  7985  0792  30FF               	andwf	(___fltol@f1+1),f
  7986  0793  05B9               	movlw	0FFh
  7987  0794  30FF               	andwf	(___fltol@f1+2),f
  7988  0795  05BA               	movlw	0
  7989  0796  3000               	andwf	(___fltol@f1+3),f
  7990  0797  05BB               	line	52
  7991                           	
  7992                           i1l2109:	
  7993  0798                     	movlw	096h
  7994  0798  3096               	subwf	(___fltol@exp1),f
  7995  0799  02C2               	line	53
  7996                           	
  7997                           i1l2111:	
  7998  079A                     	btfss	(___fltol@exp1),7
  7999  079A  1FC2               	goto	u196_21
  8000  079B  2F9D               	goto	u196_20
  8001  079C  2F9E               u196_21:
  8002  079D                     	goto	i1l2121
  8003  079D  2FC3               u196_20:
  8004  079E                     	line	54
  8005                           	
  8006                           i1l2113:	
  8007  079E                     	movf	(___fltol@exp1),w
  8008  079E  0842               	xorlw	80h
  8009  079F  3A80               	addlw	-((-23)^80h)
  8010  07A0  3E97               	skipnc
  8011  07A1  1803               	goto	u197_21
  8012  07A2  2FA4               	goto	u197_20
  8013  07A3  2FA5               u197_21:
  8014  07A4                     	goto	i1l2119
  8015  07A4  2FB0               u197_20:
  8016  07A5                     	line	55
  8017                           	
  8018                           i1l2115:	
  8019  07A5                     	movlw	high highword(0)
  8020  07A5  3000               	movwf	(?___fltol+3)
  8021  07A6  00BB               	movlw	low highword(0)
  8022  07A7  3000               	movwf	(?___fltol+2)
  8023  07A8  00BA               	movlw	high(0)
  8024  07A9  3000               	movwf	(?___fltol+1)
  8025  07AA  00B9               	movlw	low(0)
  8026  07AB  3000               	movwf	(?___fltol)
  8027  07AC  00B8               
  8028                           	goto	i1l664
  8029  07AD  2FF6               	
  8030                           i1l2117:	
  8031  07AE                     	goto	i1l664
  8032  07AE  2FF6               	
  8033                           i1l666:	
  8034  07AF                     	goto	i1l2119
  8035  07AF  2FB0               	line	56
  8036                           	
  8037                           i1l667:	
  8038  07B0                     	line	57
  8039                           	
  8040                           i1l2119:	
  8041  07B0                     	movlw	01h
  8042  07B0  3001               u198_25:
  8043  07B1                     	clrc
  8044  07B1  1003               	rrf	(___fltol@f1+3),f
  8045  07B2  0CBB               	rrf	(___fltol@f1+2),f
  8046  07B3  0CBA               	rrf	(___fltol@f1+1),f
  8047  07B4  0CB9               	rrf	(___fltol@f1),f
  8048  07B5  0CB8               	addlw	-1
  8049  07B6  3EFF               	skipz
  8050  07B7  1D03               	goto	u198_25
  8051  07B8  2FB1               
  8052                           	line	58
  8053                           	movlw	low(01h)
  8054  07B9  3001               	movwf	(??___fltol+0)+0
  8055  07BA  00BC               	movf	(??___fltol+0)+0,w
  8056  07BB  083C               	addwf	(___fltol@exp1),f
  8057  07BC  07C2               	btfss	status,2
  8058  07BD  1D03               	goto	u199_21
  8059  07BE  2FC0               	goto	u199_20
  8060  07BF  2FC1               u199_21:
  8061  07C0                     	goto	i1l2119
  8062  07C0  2FB0               u199_20:
  8063  07C1                     	goto	i1l2129
  8064  07C1  2FE6               	
  8065                           i1l668:	
  8066  07C2                     	line	59
  8067                           	goto	i1l2129
  8068  07C2  2FE6               	
  8069                           i1l665:	
  8070  07C3                     	line	60
  8071                           	
  8072                           i1l2121:	
  8073  07C3                     	movlw	low(020h)
  8074  07C3  3020               	subwf	(___fltol@exp1),w
  8075  07C4  0242               	skipc
  8076  07C5  1C03               	goto	u200_21
  8077  07C6  2FC8               	goto	u200_20
  8078  07C7  2FC9               u200_21:
  8079  07C8                     	goto	i1l671
  8080  07C8  2FDF               u200_20:
  8081  07C9                     	line	61
  8082                           	
  8083                           i1l2123:	
  8084  07C9                     	movlw	high highword(0)
  8085  07C9  3000               	movwf	(?___fltol+3)
  8086  07CA  00BB               	movlw	low highword(0)
  8087  07CB  3000               	movwf	(?___fltol+2)
  8088  07CC  00BA               	movlw	high(0)
  8089  07CD  3000               	movwf	(?___fltol+1)
  8090  07CE  00B9               	movlw	low(0)
  8091  07CF  3000               	movwf	(?___fltol)
  8092  07D0  00B8               
  8093                           	goto	i1l664
  8094  07D1  2FF6               	
  8095                           i1l2125:	
  8096  07D2                     	goto	i1l664
  8097  07D2  2FF6               	
  8098                           i1l670:	
  8099  07D3                     	line	62
  8100                           	goto	i1l671
  8101  07D3  2FDF               	
  8102                           i1l672:	
  8103  07D4                     	line	63
  8104                           	
  8105                           i1l2127:	
  8106  07D4                     	movlw	01h
  8107  07D4  3001               	movwf	(??___fltol+0)+0
  8108  07D5  00BC               u201_25:
  8109  07D6                     	clrc
  8110  07D6  1003               	rlf	(___fltol@f1),f
  8111  07D7  0DB8               	rlf	(___fltol@f1+1),f
  8112  07D8  0DB9               	rlf	(___fltol@f1+2),f
  8113  07D9  0DBA               	rlf	(___fltol@f1+3),f
  8114  07DA  0DBB               	decfsz	(??___fltol+0)+0
  8115  07DB  0BBC               	goto	u201_25
  8116  07DC  2FD6               	line	64
  8117                           	movlw	01h
  8118  07DD  3001               	subwf	(___fltol@exp1),f
  8119  07DE  02C2               	line	65
  8120                           	
  8121                           i1l671:	
  8122  07DF                     	line	62
  8123                           	movf	((___fltol@exp1)),w
  8124  07DF  0842               	btfss	status,2
  8125  07E0  1D03               	goto	u202_21
  8126  07E1  2FE3               	goto	u202_20
  8127  07E2  2FE4               u202_21:
  8128  07E3                     	goto	i1l2127
  8129  07E3  2FD4               u202_20:
  8130  07E4                     	goto	i1l2129
  8131  07E4  2FE6               	
  8132                           i1l673:	
  8133  07E5                     	goto	i1l2129
  8134  07E5  2FE6               	line	66
  8135                           	
  8136                           i1l669:	
  8137  07E6                     	line	67
  8138                           	
  8139                           i1l2129:	
  8140  07E6                     	movf	((___fltol@sign1)),w
  8141  07E6  0841               	btfsc	status,2
  8142  07E7  1903               	goto	u203_21
  8143  07E8  2FEA               	goto	u203_20
  8144  07E9  2FEB               u203_21:
  8145  07EA                     	goto	i1l674
  8146  07EA  2FF6               u203_20:
  8147  07EB                     	line	68
  8148                           	
  8149                           i1l2131:	
  8150  07EB                     	comf	(___fltol@f1),f
  8151  07EB  09B8               	comf	(___fltol@f1+1),f
  8152  07EC  09B9               	comf	(___fltol@f1+2),f
  8153  07ED  09BA               	comf	(___fltol@f1+3),f
  8154  07EE  09BB               	incf	(___fltol@f1),f
  8155  07EF  0AB8               	skipnz
  8156  07F0  1903               	incf	(___fltol@f1+1),f
  8157  07F1  0AB9               	skipnz
  8158  07F2  1903               	incf	(___fltol@f1+2),f
  8159  07F3  0ABA               	skipnz
  8160  07F4  1903               	incf	(___fltol@f1+3),f
  8161  07F5  0ABB               	
  8162                           i1l674:	
  8163  07F6                     	line	69
  8164                           	line	70
  8165                           	
  8166                           i1l664:	
  8167  07F6                     	return
  8168  07F6  0008               	opt stack 0
  8169                           GLOBAL	__end_of___fltol
  8170                           	__end_of___fltol:
  8171  07F7                     	signat	___fltol,4220
  8172                           	global	___fladd
  8173                           
  8174 ;; *************** function ___fladd *****************
  8175 ;; Defined at:
  8176 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8177 ;; Parameters:    Size  Location     Type
  8178 ;;  b               4    0[BANK0 ] long 
  8179 ;;  a               4    4[BANK0 ] long 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  grs             1   23[BANK0 ] unsigned char 
  8182 ;;  bexp            1   22[BANK0 ] unsigned char 
  8183 ;;  aexp            1   21[BANK0 ] unsigned char 
  8184 ;;  signs           1   20[BANK0 ] unsigned char 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  4    0[BANK0 ] unsigned char 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0, btemp+1
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8194 ;;      Params:         0       8       0       0       0
  8195 ;;      Locals:         0       4       0       0       0
  8196 ;;      Temps:          0      12       0       0       0
  8197 ;;      Totals:         0      24       0       0       0
  8198 ;;Total ram usage:       24 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; This function calls:
  8201 ;;		Nothing
  8202 ;; This function is called by:
  8203 ;;		_is_deadzone
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206                           psect	text28,local,class=CODE,delta=2,merge=1,group=1
  8207                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8208                           	line	10
  8209                           global __ptext28
  8210                           __ptext28:	;psect for function ___fladd
  8211  0030                     psect	text28
  8212                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  8213                           	line	10
  8214                           	global	__size_of___fladd
  8215                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8216  02BC                     	
  8217                           ___fladd:	
  8218  0030                     ;incstack = 0
  8219 ;; hardware stack exceeded
  8220                           	opt	stack 0
  8221                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8222                           	line	21
  8223                           	
  8224                           i1l2133:	
  8225  0030                     	bcf	status, 5	;RP0=0, select bank0
  8226  0030  1283               	bcf	status, 6	;RP1=0, select bank0
  8227  0031  1303               	movf	0+(___fladd@b)+03h,w
  8228  0032  0823               	andlw	080h
  8229  0033  3980               	movwf	(??___fladd+0)+0
  8230  0034  00A8               	movf	(??___fladd+0)+0,w
  8231  0035  0828               	movwf	(___fladd@signs)
  8232  0036  00B4               	line	22
  8233                           	
  8234                           i1l2135:	
  8235  0037                     	movf	0+(___fladd@b)+03h,w
  8236  0037  0823               	movwf	(??___fladd+0)+0
  8237  0038  00A8               	addwf	(??___fladd+0)+0,w
  8238  0039  0728               	movwf	(??___fladd+1)+0
  8239  003A  00A9               	movf	(??___fladd+1)+0,w
  8240  003B  0829               	movwf	(___fladd@bexp)
  8241  003C  00B6               	line	23
  8242                           	
  8243                           i1l2137:	
  8244  003D                     	btfss	0+(___fladd@b)+02h,(7)&7
  8245  003D  1FA2               	goto	u204_21
  8246  003E  2840               	goto	u204_20
  8247  003F  2841               u204_21:
  8248  0040                     	goto	i1l2141
  8249  0040  2843               u204_20:
  8250  0041                     	line	24
  8251                           	
  8252                           i1l2139:	
  8253  0041                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8254  0041  1436               	goto	i1l2141
  8255  0042  2843               	line	25
  8256                           	
  8257                           i1l763:	
  8258  0043                     	line	28
  8259                           	
  8260                           i1l2141:	
  8261  0043                     	movf	((___fladd@bexp)),w
  8262  0043  0836               	btfsc	status,2
  8263  0044  1903               	goto	u205_21
  8264  0045  2847               	goto	u205_20
  8265  0046  2848               u205_21:
  8266  0047                     	goto	i1l2151
  8267  0047  2859               u205_20:
  8268  0048                     	line	30
  8269                           	
  8270                           i1l2143:	
  8271  0048                     		incf	((___fladd@bexp)),w
  8272  0048  0A36               	btfss	status,2
  8273  0049  1D03               	goto	u206_21
  8274  004A  284C               	goto	u206_20
  8275  004B  284D               u206_21:
  8276  004C                     	goto	i1l2147
  8277  004C  2856               u206_20:
  8278  004D                     	line	32
  8279                           	
  8280                           i1l2145:	
  8281  004D                     	movlw	0x0
  8282  004D  3000               	movwf	(___fladd@b+3)
  8283  004E  00A3               	movlw	0x0
  8284  004F  3000               	movwf	(___fladd@b+2)
  8285  0050  00A2               	movlw	0x0
  8286  0051  3000               	movwf	(___fladd@b+1)
  8287  0052  00A1               	movlw	0x0
  8288  0053  3000               	movwf	(___fladd@b)
  8289  0054  00A0               
  8290                           	goto	i1l2147
  8291  0055  2856               	line	33
  8292                           	
  8293                           i1l765:	
  8294  0056                     	line	35
  8295                           	
  8296                           i1l2147:	
  8297  0056                     	bsf	(___fladd@b)+(23/8),(23)&7
  8298  0056  17A2               	line	37
  8299                           	
  8300                           i1l2149:	
  8301  0057                     	clrf	0+(___fladd@b)+03h
  8302  0057  01A3               	line	38
  8303                           	goto	i1l2153
  8304  0058  2862               	line	39
  8305                           	
  8306                           i1l764:	
  8307  0059                     	line	41
  8308                           	
  8309                           i1l2151:	
  8310  0059                     	movlw	0x0
  8311  0059  3000               	movwf	(___fladd@b+3)
  8312  005A  00A3               	movlw	0x0
  8313  005B  3000               	movwf	(___fladd@b+2)
  8314  005C  00A2               	movlw	0x0
  8315  005D  3000               	movwf	(___fladd@b+1)
  8316  005E  00A1               	movlw	0x0
  8317  005F  3000               	movwf	(___fladd@b)
  8318  0060  00A0               
  8319                           	goto	i1l2153
  8320  0061  2862               	line	42
  8321                           	
  8322                           i1l766:	
  8323  0062                     	line	44
  8324                           	
  8325                           i1l2153:	
  8326  0062                     	movf	0+(___fladd@a)+03h,w
  8327  0062  0827               	andlw	080h
  8328  0063  3980               	movwf	(??___fladd+0)+0
  8329  0064  00A8               	movf	(??___fladd+0)+0,w
  8330  0065  0828               	movwf	(___fladd@aexp)
  8331  0066  00B5               	line	46
  8332                           	
  8333                           i1l2155:	
  8334  0067                     	movf	(___fladd@aexp),w
  8335  0067  0835               	xorwf	(___fladd@signs),w
  8336  0068  0634               	skipnz
  8337  0069  1903               	goto	u207_21
  8338  006A  286C               	goto	u207_20
  8339  006B  286D               u207_21:
  8340  006C                     	goto	i1l2159
  8341  006C  286F               u207_20:
  8342  006D                     	line	47
  8343                           	
  8344                           i1l2157:	
  8345  006D                     	bsf	(___fladd@signs)+(6/8),(6)&7
  8346  006D  1734               	goto	i1l2159
  8347  006E  286F               	line	48
  8348                           	
  8349                           i1l767:	
  8350  006F                     	line	49
  8351                           	
  8352                           i1l2159:	
  8353  006F                     	movf	0+(___fladd@a)+03h,w
  8354  006F  0827               	movwf	(??___fladd+0)+0
  8355  0070  00A8               	addwf	(??___fladd+0)+0,w
  8356  0071  0728               	movwf	(??___fladd+1)+0
  8357  0072  00A9               	movf	(??___fladd+1)+0,w
  8358  0073  0829               	movwf	(___fladd@aexp)
  8359  0074  00B5               	line	50
  8360                           	
  8361                           i1l2161:	
  8362  0075                     	btfss	0+(___fladd@a)+02h,(7)&7
  8363  0075  1FA6               	goto	u208_21
  8364  0076  2878               	goto	u208_20
  8365  0077  2879               u208_21:
  8366  0078                     	goto	i1l2165
  8367  0078  287B               u208_20:
  8368  0079                     	line	51
  8369                           	
  8370                           i1l2163:	
  8371  0079                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  8372  0079  1435               	goto	i1l2165
  8373  007A  287B               	line	52
  8374                           	
  8375                           i1l768:	
  8376  007B                     	line	55
  8377                           	
  8378                           i1l2165:	
  8379  007B                     	movf	((___fladd@aexp)),w
  8380  007B  0835               	btfsc	status,2
  8381  007C  1903               	goto	u209_21
  8382  007D  287F               	goto	u209_20
  8383  007E  2880               u209_21:
  8384  007F                     	goto	i1l2175
  8385  007F  2891               u209_20:
  8386  0080                     	line	57
  8387                           	
  8388                           i1l2167:	
  8389  0080                     		incf	((___fladd@aexp)),w
  8390  0080  0A35               	btfss	status,2
  8391  0081  1D03               	goto	u210_21
  8392  0082  2884               	goto	u210_20
  8393  0083  2885               u210_21:
  8394  0084                     	goto	i1l2171
  8395  0084  288E               u210_20:
  8396  0085                     	line	59
  8397                           	
  8398                           i1l2169:	
  8399  0085                     	movlw	0x0
  8400  0085  3000               	movwf	(___fladd@a+3)
  8401  0086  00A7               	movlw	0x0
  8402  0087  3000               	movwf	(___fladd@a+2)
  8403  0088  00A6               	movlw	0x0
  8404  0089  3000               	movwf	(___fladd@a+1)
  8405  008A  00A5               	movlw	0x0
  8406  008B  3000               	movwf	(___fladd@a)
  8407  008C  00A4               
  8408                           	goto	i1l2171
  8409  008D  288E               	line	60
  8410                           	
  8411                           i1l770:	
  8412  008E                     	line	62
  8413                           	
  8414                           i1l2171:	
  8415  008E                     	bsf	(___fladd@a)+(23/8),(23)&7
  8416  008E  17A6               	line	64
  8417                           	
  8418                           i1l2173:	
  8419  008F                     	clrf	0+(___fladd@a)+03h
  8420  008F  01A7               	line	65
  8421                           	goto	i1l771
  8422  0090  2899               	line	66
  8423                           	
  8424                           i1l769:	
  8425  0091                     	line	68
  8426                           	
  8427                           i1l2175:	
  8428  0091                     	movlw	0x0
  8429  0091  3000               	movwf	(___fladd@a+3)
  8430  0092  00A7               	movlw	0x0
  8431  0093  3000               	movwf	(___fladd@a+2)
  8432  0094  00A6               	movlw	0x0
  8433  0095  3000               	movwf	(___fladd@a+1)
  8434  0096  00A5               	movlw	0x0
  8435  0097  3000               	movwf	(___fladd@a)
  8436  0098  00A4               
  8437                           	line	69
  8438                           	
  8439                           i1l771:	
  8440  0099                     	line	75
  8441                           	movf	(___fladd@bexp),w
  8442  0099  0836               	subwf	(___fladd@aexp),w
  8443  009A  0235               	skipnc
  8444  009B  1803               	goto	u211_21
  8445  009C  289E               	goto	u211_20
  8446  009D  289F               u211_21:
  8447  009E                     	goto	i1l2211
  8448  009E  28E5               u211_20:
  8449  009F                     	line	77
  8450                           	
  8451                           i1l2177:	
  8452  009F                     	btfss	(___fladd@signs),(6)&7
  8453  009F  1F34               	goto	u212_21
  8454  00A0  28A2               	goto	u212_20
  8455  00A1  28A3               u212_21:
  8456  00A2                     	goto	i1l2181
  8457  00A2  28A8               u212_20:
  8458  00A3                     	line	78
  8459                           	
  8460                           i1l2179:	
  8461  00A3                     	movlw	low(080h)
  8462  00A3  3080               	movwf	(??___fladd+0)+0
  8463  00A4  00A8               	movf	(??___fladd+0)+0,w
  8464  00A5  0828               	xorwf	(___fladd@signs),f
  8465  00A6  06B4               	goto	i1l2181
  8466  00A7  28A8               	line	79
  8467                           	
  8468                           i1l773:	
  8469  00A8                     	line	81
  8470                           	
  8471                           i1l2181:	
  8472  00A8                     	movf	(___fladd@bexp),w
  8473  00A8  0836               	movwf	(??___fladd+0)+0
  8474  00A9  00A8               	movf	(??___fladd+0)+0,w
  8475  00AA  0828               	movwf	(___fladd@grs)
  8476  00AB  00B7               	line	82
  8477                           	
  8478                           i1l2183:	
  8479  00AC                     	movf	(___fladd@aexp),w
  8480  00AC  0835               	movwf	(??___fladd+0)+0
  8481  00AD  00A8               	movf	(??___fladd+0)+0,w
  8482  00AE  0828               	movwf	(___fladd@bexp)
  8483  00AF  00B6               	line	83
  8484                           	
  8485                           i1l2185:	
  8486  00B0                     	movf	(___fladd@grs),w
  8487  00B0  0837               	movwf	(??___fladd+0)+0
  8488  00B1  00A8               	movf	(??___fladd+0)+0,w
  8489  00B2  0828               	movwf	(___fladd@aexp)
  8490  00B3  00B5               	line	84
  8491                           	
  8492                           i1l2187:	
  8493  00B4                     	movf	(___fladd@b),w
  8494  00B4  0820               	movwf	(??___fladd+0)+0
  8495  00B5  00A8               	movf	(??___fladd+0)+0,w
  8496  00B6  0828               	movwf	(___fladd@grs)
  8497  00B7  00B7               	line	85
  8498                           	
  8499                           i1l2189:	
  8500  00B8                     	movf	(___fladd@a),w
  8501  00B8  0824               	movwf	(??___fladd+0)+0
  8502  00B9  00A8               	movf	(??___fladd+0)+0,w
  8503  00BA  0828               	movwf	(___fladd@b)
  8504  00BB  00A0               	line	86
  8505                           	
  8506                           i1l2191:	
  8507  00BC                     	movf	(___fladd@grs),w
  8508  00BC  0837               	movwf	(??___fladd+0)+0
  8509  00BD  00A8               	movf	(??___fladd+0)+0,w
  8510  00BE  0828               	movwf	(___fladd@a)
  8511  00BF  00A4               	line	87
  8512                           	
  8513                           i1l2193:	
  8514  00C0                     	movf	0+(___fladd@b)+01h,w
  8515  00C0  0821               	movwf	(??___fladd+0)+0
  8516  00C1  00A8               	movf	(??___fladd+0)+0,w
  8517  00C2  0828               	movwf	(___fladd@grs)
  8518  00C3  00B7               	line	88
  8519                           	
  8520                           i1l2195:	
  8521  00C4                     	movf	0+(___fladd@a)+01h,w
  8522  00C4  0825               	movwf	(??___fladd+0)+0
  8523  00C5  00A8               	movf	(??___fladd+0)+0,w
  8524  00C6  0828               	movwf	0+(___fladd@b)+01h
  8525  00C7  00A1               	line	89
  8526                           	
  8527                           i1l2197:	
  8528  00C8                     	movf	(___fladd@grs),w
  8529  00C8  0837               	movwf	(??___fladd+0)+0
  8530  00C9  00A8               	movf	(??___fladd+0)+0,w
  8531  00CA  0828               	movwf	0+(___fladd@a)+01h
  8532  00CB  00A5               	line	90
  8533                           	
  8534                           i1l2199:	
  8535  00CC                     	movf	0+(___fladd@b)+02h,w
  8536  00CC  0822               	movwf	(??___fladd+0)+0
  8537  00CD  00A8               	movf	(??___fladd+0)+0,w
  8538  00CE  0828               	movwf	(___fladd@grs)
  8539  00CF  00B7               	line	91
  8540                           	
  8541                           i1l2201:	
  8542  00D0                     	movf	0+(___fladd@a)+02h,w
  8543  00D0  0826               	movwf	(??___fladd+0)+0
  8544  00D1  00A8               	movf	(??___fladd+0)+0,w
  8545  00D2  0828               	movwf	0+(___fladd@b)+02h
  8546  00D3  00A2               	line	92
  8547                           	
  8548                           i1l2203:	
  8549  00D4                     	movf	(___fladd@grs),w
  8550  00D4  0837               	movwf	(??___fladd+0)+0
  8551  00D5  00A8               	movf	(??___fladd+0)+0,w
  8552  00D6  0828               	movwf	0+(___fladd@a)+02h
  8553  00D7  00A6               	line	93
  8554                           	
  8555                           i1l2205:	
  8556  00D8                     	movf	0+(___fladd@b)+03h,w
  8557  00D8  0823               	movwf	(??___fladd+0)+0
  8558  00D9  00A8               	movf	(??___fladd+0)+0,w
  8559  00DA  0828               	movwf	(___fladd@grs)
  8560  00DB  00B7               	line	94
  8561                           	
  8562                           i1l2207:	
  8563  00DC                     	movf	0+(___fladd@a)+03h,w
  8564  00DC  0827               	movwf	(??___fladd+0)+0
  8565  00DD  00A8               	movf	(??___fladd+0)+0,w
  8566  00DE  0828               	movwf	0+(___fladd@b)+03h
  8567  00DF  00A3               	line	95
  8568                           	
  8569                           i1l2209:	
  8570  00E0                     	movf	(___fladd@grs),w
  8571  00E0  0837               	movwf	(??___fladd+0)+0
  8572  00E1  00A8               	movf	(??___fladd+0)+0,w
  8573  00E2  0828               	movwf	0+(___fladd@a)+03h
  8574  00E3  00A7               	goto	i1l2211
  8575  00E4  28E5               	line	96
  8576                           	
  8577                           i1l772:	
  8578  00E5                     	line	98
  8579                           	
  8580                           i1l2211:	
  8581  00E5                     	clrf	(___fladd@grs)
  8582  00E5  01B7               	line	100
  8583                           	
  8584                           i1l2213:	
  8585  00E6                     	movf	(___fladd@bexp),w
  8586  00E6  0836               	movwf	(??___fladd+0)+0
  8587  00E7  00A8               	clrf	(??___fladd+0)+0+1
  8588  00E8  01A9               	comf	(??___fladd+0)+0,f
  8589  00E9  09A8               	comf	(??___fladd+0)+1,f
  8590  00EA  09A9               	incf	(??___fladd+0)+0,f
  8591  00EB  0AA8               	skipnz
  8592  00EC  1903               	incf	(??___fladd+0)+1,f
  8593  00ED  0AA9               	movf	(___fladd@aexp),w
  8594  00EE  0835               	addwf	0+(??___fladd+0)+0,w
  8595  00EF  0728               	movwf	(??___fladd+2)+0
  8596  00F0  00AA               	movf	1+(??___fladd+0)+0,w
  8597  00F1  0829               	skipnc
  8598  00F2  1803               	incf	1+(??___fladd+0)+0,w
  8599  00F3  0A29               	movwf	((??___fladd+2)+0)+1
  8600  00F4  00AB               	movf	1+(??___fladd+2)+0,w
  8601  00F5  082B               	xorlw	80h
  8602  00F6  3A80               	movwf	btemp+1
  8603  00F7  00FF               	movlw	(0)^80h
  8604  00F8  3080               	subwf	btemp+1,w
  8605  00F9  027F               	skipz
  8606  00FA  1D03               	goto	u213_25
  8607  00FB  28FE               	movlw	01Ah
  8608  00FC  301A               	subwf	0+(??___fladd+2)+0,w
  8609  00FD  022A               u213_25:
  8610  00FE                     
  8611                           	skipc
  8612  00FE  1C03               	goto	u213_21
  8613  00FF  2901               	goto	u213_20
  8614  0100  2902               u213_21:
  8615  0101                     	goto	i1l2229
  8616  0101  2943               u213_20:
  8617  0102                     	line	101
  8618                           	
  8619                           i1l2215:	
  8620  0102                     	bcf	status, 5	;RP0=0, select bank0
  8621  0102  1283               	bcf	status, 6	;RP1=0, select bank0
  8622  0103  1303               	movf	(___fladd@b+3),w
  8623  0104  0823               	iorwf	(___fladd@b+2),w
  8624  0105  0422               	iorwf	(___fladd@b+1),w
  8625  0106  0421               	iorwf	(___fladd@b),w
  8626  0107  0420               	skipz
  8627  0108  1D03               	goto	u214_21
  8628  0109  290B               	goto	u214_20
  8629  010A  290D               u214_21:
  8630  010B                     	movlw	1
  8631  010B  3001               	goto	u215_20
  8632  010C  290E               u214_20:
  8633  010D                     	movlw	0
  8634  010D  3000               u215_20:
  8635  010E                     	movwf	(??___fladd+0)+0
  8636  010E  00A8               	movf	(??___fladd+0)+0,w
  8637  010F  0828               	movwf	(___fladd@grs)
  8638  0110  00B7               	line	102
  8639                           	movlw	high highword(0)
  8640  0111  3000               	movwf	(___fladd@b+3)
  8641  0112  00A3               	movlw	low highword(0)
  8642  0113  3000               	movwf	(___fladd@b+2)
  8643  0114  00A2               	movlw	high(0)
  8644  0115  3000               	movwf	(___fladd@b+1)
  8645  0116  00A1               	movlw	low(0)
  8646  0117  3000               	movwf	(___fladd@b)
  8647  0118  00A0               
  8648                           	line	103
  8649                           	movf	(___fladd@aexp),w
  8650  0119  0835               	movwf	(??___fladd+0)+0
  8651  011A  00A8               	movf	(??___fladd+0)+0,w
  8652  011B  0828               	movwf	(___fladd@bexp)
  8653  011C  00B6               	line	104
  8654                           	goto	i1l775
  8655  011D  294C               	line	105
  8656                           	
  8657                           i1l774:	
  8658  011E                     	line	106
  8659                           	goto	i1l2229
  8660  011E  2943               	
  8661                           i1l777:	
  8662  011F                     	line	109
  8663                           	btfss	(___fladd@grs),(0)&7
  8664  011F  1C37               	goto	u216_21
  8665  0120  2922               	goto	u216_20
  8666  0121  2923               u216_21:
  8667  0122                     	goto	i1l2219
  8668  0122  292C               u216_20:
  8669  0123                     	line	110
  8670                           	
  8671                           i1l2217:	
  8672  0123                     	movf	(___fladd@grs),w
  8673  0123  0837               	movwf	(??___fladd+0)+0
  8674  0124  00A8               	clrc
  8675  0125  1003               	rrf	(??___fladd+0)+0,w
  8676  0126  0C28               	iorlw	01h
  8677  0127  3801               	movwf	(??___fladd+1)+0
  8678  0128  00A9               	movf	(??___fladd+1)+0,w
  8679  0129  0829               	movwf	(___fladd@grs)
  8680  012A  00B7               	line	111
  8681                           	goto	i1l2221
  8682  012B  292F               	line	112
  8683                           	
  8684                           i1l778:	
  8685  012C                     	line	113
  8686                           	
  8687                           i1l2219:	
  8688  012C                     	clrc
  8689  012C  1003               	rrf	(___fladd@grs),f
  8690  012D  0CB7               
  8691                           	goto	i1l2221
  8692  012E  292F               	line	114
  8693                           	
  8694                           i1l779:	
  8695  012F                     	line	115
  8696                           	
  8697                           i1l2221:	
  8698  012F                     	btfss	(___fladd@b),(0)&7
  8699  012F  1C20               	goto	u217_21
  8700  0130  2932               	goto	u217_20
  8701  0131  2933               u217_21:
  8702  0132                     	goto	i1l2225
  8703  0132  2935               u217_20:
  8704  0133                     	line	116
  8705                           	
  8706                           i1l2223:	
  8707  0133                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8708  0133  17B7               	goto	i1l2225
  8709  0134  2935               	line	117
  8710                           	
  8711                           i1l780:	
  8712  0135                     	line	118
  8713                           	
  8714                           i1l2225:	
  8715  0135                     	movlw	01h
  8716  0135  3001               	movwf	(??___fladd+0)+0
  8717  0136  00A8               u218_25:
  8718  0137                     	rlf	(___fladd@b+3),w
  8719  0137  0D23               	rrf	(___fladd@b+3),f
  8720  0138  0CA3               	rrf	(___fladd@b+2),f
  8721  0139  0CA2               	rrf	(___fladd@b+1),f
  8722  013A  0CA1               	rrf	(___fladd@b),f
  8723  013B  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  8724  013C  0BA8               	goto	u218_25
  8725  013D  2937               
  8726                           	line	119
  8727                           	
  8728                           i1l2227:	
  8729  013E                     	movlw	low(01h)
  8730  013E  3001               	movwf	(??___fladd+0)+0
  8731  013F  00A8               	movf	(??___fladd+0)+0,w
  8732  0140  0828               	addwf	(___fladd@bexp),f
  8733  0141  07B6               	goto	i1l2229
  8734  0142  2943               	line	120
  8735                           	
  8736                           i1l776:	
  8737  0143                     	line	106
  8738                           	
  8739                           i1l2229:	
  8740  0143                     	bcf	status, 5	;RP0=0, select bank0
  8741  0143  1283               	bcf	status, 6	;RP1=0, select bank0
  8742  0144  1303               	movf	(___fladd@aexp),w
  8743  0145  0835               	subwf	(___fladd@bexp),w
  8744  0146  0236               	skipc
  8745  0147  1C03               	goto	u219_21
  8746  0148  294A               	goto	u219_20
  8747  0149  294B               u219_21:
  8748  014A                     	goto	i1l777
  8749  014A  291F               u219_20:
  8750  014B                     	goto	i1l775
  8751  014B  294C               	
  8752                           i1l781:	
  8753  014C                     	line	121
  8754                           	
  8755                           i1l775:	
  8756  014C                     	line	124
  8757                           	btfsc	(___fladd@signs),(6)&7
  8758  014C  1B34               	goto	u220_21
  8759  014D  294F               	goto	u220_20
  8760  014E  2950               u220_21:
  8761  014F                     	goto	i1l2255
  8762  014F  299F               u220_20:
  8763  0150                     	line	127
  8764                           	
  8765                           i1l2231:	
  8766  0150                     	movf	((___fladd@bexp)),w
  8767  0150  0836               	btfss	status,2
  8768  0151  1D03               	goto	u221_21
  8769  0152  2954               	goto	u221_20
  8770  0153  2955               u221_21:
  8771  0154                     	goto	i1l2237
  8772  0154  295F               u221_20:
  8773  0155                     	line	128
  8774                           	
  8775                           i1l2233:	
  8776  0155                     	movlw	0x0
  8777  0155  3000               	movwf	(?___fladd+3)
  8778  0156  00A3               	movlw	0x0
  8779  0157  3000               	movwf	(?___fladd+2)
  8780  0158  00A2               	movlw	0x0
  8781  0159  3000               	movwf	(?___fladd+1)
  8782  015A  00A1               	movlw	0x0
  8783  015B  3000               	movwf	(?___fladd)
  8784  015C  00A0               
  8785                           	goto	i1l784
  8786  015D  2AEB               	
  8787                           i1l2235:	
  8788  015E                     	goto	i1l784
  8789  015E  2AEB               	line	129
  8790                           	
  8791                           i1l783:	
  8792  015F                     	line	132
  8793                           	
  8794                           i1l2237:	
  8795  015F                     	movf	(___fladd@a),w
  8796  015F  0824               	addwf	(___fladd@b),f
  8797  0160  07A0               	movf	(___fladd@a+1),w
  8798  0161  0825               	clrz
  8799  0162  1103               	skipnc
  8800  0163  1803               	addlw	1
  8801  0164  3E01               	skipnz
  8802  0165  1903               	goto	u222_21
  8803  0166  2968               	addwf	(___fladd@b+1),f
  8804  0167  07A1               u222_21:
  8805  0168                     	movf	(___fladd@a+2),w
  8806  0168  0826               	clrz
  8807  0169  1103               	skipnc
  8808  016A  1803               	addlw	1
  8809  016B  3E01               	skipnz
  8810  016C  1903               	goto	u222_22
  8811  016D  296F               	addwf	(___fladd@b+2),f
  8812  016E  07A2               u222_22:
  8813  016F                     	movf	(___fladd@a+3),w
  8814  016F  0827               	clrz
  8815  0170  1103               	skipnc
  8816  0171  1803               	addlw	1
  8817  0172  3E01               	skipnz
  8818  0173  1903               	goto	u222_23
  8819  0174  2976               	addwf	(___fladd@b+3),f
  8820  0175  07A3               u222_23:
  8821  0176                     
  8822                           	line	134
  8823                           	
  8824                           i1l2239:	
  8825  0176                     	btfss	(___fladd@b+3),(24)&7
  8826  0176  1C23               	goto	u223_21
  8827  0177  2979               	goto	u223_20
  8828  0178  297A               u223_21:
  8829  0179                     	goto	i1l2289
  8830  0179  2A68               u223_20:
  8831  017A                     	line	135
  8832                           	
  8833                           i1l2241:	
  8834  017A                     	btfss	(___fladd@grs),(0)&7
  8835  017A  1C37               	goto	u224_21
  8836  017B  297D               	goto	u224_20
  8837  017C  297E               u224_21:
  8838  017D                     	goto	i1l2245
  8839  017D  2987               u224_20:
  8840  017E                     	line	136
  8841                           	
  8842                           i1l2243:	
  8843  017E                     	movf	(___fladd@grs),w
  8844  017E  0837               	movwf	(??___fladd+0)+0
  8845  017F  00A8               	clrc
  8846  0180  1003               	rrf	(??___fladd+0)+0,w
  8847  0181  0C28               	iorlw	01h
  8848  0182  3801               	movwf	(??___fladd+1)+0
  8849  0183  00A9               	movf	(??___fladd+1)+0,w
  8850  0184  0829               	movwf	(___fladd@grs)
  8851  0185  00B7               	line	137
  8852                           	goto	i1l2247
  8853  0186  298A               	line	138
  8854                           	
  8855                           i1l786:	
  8856  0187                     	line	139
  8857                           	
  8858                           i1l2245:	
  8859  0187                     	clrc
  8860  0187  1003               	rrf	(___fladd@grs),f
  8861  0188  0CB7               
  8862                           	goto	i1l2247
  8863  0189  298A               	line	140
  8864                           	
  8865                           i1l787:	
  8866  018A                     	line	141
  8867                           	
  8868                           i1l2247:	
  8869  018A                     	btfss	(___fladd@b),(0)&7
  8870  018A  1C20               	goto	u225_21
  8871  018B  298D               	goto	u225_20
  8872  018C  298E               u225_21:
  8873  018D                     	goto	i1l2251
  8874  018D  2990               u225_20:
  8875  018E                     	line	142
  8876                           	
  8877                           i1l2249:	
  8878  018E                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8879  018E  17B7               	goto	i1l2251
  8880  018F  2990               	line	143
  8881                           	
  8882                           i1l788:	
  8883  0190                     	line	144
  8884                           	
  8885                           i1l2251:	
  8886  0190                     	movlw	01h
  8887  0190  3001               	movwf	(??___fladd+0)+0
  8888  0191  00A8               u226_25:
  8889  0192                     	rlf	(___fladd@b+3),w
  8890  0192  0D23               	rrf	(___fladd@b+3),f
  8891  0193  0CA3               	rrf	(___fladd@b+2),f
  8892  0194  0CA2               	rrf	(___fladd@b+1),f
  8893  0195  0CA1               	rrf	(___fladd@b),f
  8894  0196  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  8895  0197  0BA8               	goto	u226_25
  8896  0198  2992               
  8897                           	line	145
  8898                           	
  8899                           i1l2253:	
  8900  0199                     	movlw	low(01h)
  8901  0199  3001               	movwf	(??___fladd+0)+0
  8902  019A  00A8               	movf	(??___fladd+0)+0,w
  8903  019B  0828               	addwf	(___fladd@bexp),f
  8904  019C  07B6               	goto	i1l2289
  8905  019D  2A68               	line	146
  8906                           	
  8907                           i1l785:	
  8908  019E                     	line	148
  8909                           	goto	i1l2289
  8910  019E  2A68               	line	149
  8911                           	
  8912                           i1l782:	
  8913  019F                     	line	153
  8914                           	
  8915                           i1l2255:	
  8916  019F                     	movf	(___fladd@b+3),w
  8917  019F  0823               	xorlw	80h
  8918  01A0  3A80               	movwf	btemp+1
  8919  01A1  00FF               	movf	(___fladd@a+3),w
  8920  01A2  0827               	xorlw	80h
  8921  01A3  3A80               	subwf	btemp+1,w
  8922  01A4  027F               	
  8923                           	skipz
  8924  01A5  1D03               	goto	u227_23
  8925  01A6  29B1               	movf	(___fladd@a+2),w
  8926  01A7  0826               	subwf	(___fladd@b+2),w
  8927  01A8  0222               	skipz
  8928  01A9  1D03               	goto	u227_23
  8929  01AA  29B1               	movf	(___fladd@a+1),w
  8930  01AB  0825               	subwf	(___fladd@b+1),w
  8931  01AC  0221               	skipz
  8932  01AD  1D03               	goto	u227_23
  8933  01AE  29B1               	movf	(___fladd@a),w
  8934  01AF  0824               	subwf	(___fladd@b),w
  8935  01B0  0220               u227_23:
  8936  01B1                     	skipnc
  8937  01B1  1803               	goto	u227_21
  8938  01B2  29B4               	goto	u227_20
  8939  01B3  29B5               u227_21:
  8940  01B4                     	goto	i1l2265
  8941  01B4  2A1B               u227_20:
  8942  01B5                     	line	154
  8943                           	
  8944                           i1l2257:	
  8945  01B5                     	movlw	0FFh
  8946  01B5  30FF               	movwf	((??___fladd+0)+0)
  8947  01B6  00A8               	movlw	0FFh
  8948  01B7  30FF               	movwf	((??___fladd+0)+0+1)
  8949  01B8  00A9               	movlw	0FFh
  8950  01B9  30FF               	movwf	((??___fladd+0)+0+2)
  8951  01BA  00AA               	movlw	0FFh
  8952  01BB  30FF               	movwf	((??___fladd+0)+0+3)
  8953  01BC  00AB               	movf	(___fladd@a),w
  8954  01BD  0824               	movwf	(??___fladd+4)+0
  8955  01BE  00AC               	movf	(___fladd@a+1),w
  8956  01BF  0825               	movwf	((??___fladd+4)+0+1)
  8957  01C0  00AD               	movf	(___fladd@a+2),w
  8958  01C1  0826               	movwf	((??___fladd+4)+0+2)
  8959  01C2  00AE               	movf	(___fladd@a+3),w
  8960  01C3  0827               	movwf	((??___fladd+4)+0+3)
  8961  01C4  00AF               	comf	(___fladd@b),w
  8962  01C5  0920               	movwf	(??___fladd+8)+0
  8963  01C6  00B0               	comf	(___fladd@b+1),w
  8964  01C7  0921               	movwf	((??___fladd+8)+0+1)
  8965  01C8  00B1               	comf	(___fladd@b+2),w
  8966  01C9  0922               	movwf	((??___fladd+8)+0+2)
  8967  01CA  00B2               	comf	(___fladd@b+3),w
  8968  01CB  0923               	movwf	((??___fladd+8)+0+3)
  8969  01CC  00B3               	incf	(??___fladd+8)+0,f
  8970  01CD  0AB0               	skipnz
  8971  01CE  1903               	incf	((??___fladd+8)+0+1),f
  8972  01CF  0AB1               	skipnz
  8973  01D0  1903               	incf	((??___fladd+8)+0+2),f
  8974  01D1  0AB2               	skipnz
  8975  01D2  1903               	incf	((??___fladd+8)+0+3),f
  8976  01D3  0AB3               	movf	0+(??___fladd+8)+0,w
  8977  01D4  0830               	addwf	(??___fladd+4)+0,f
  8978  01D5  07AC               	movf	1+(??___fladd+8)+0,w
  8979  01D6  0831               	skipnc
  8980  01D7  1803               	incfsz	1+(??___fladd+8)+0,w
  8981  01D8  0F31               	goto	u228_20
  8982  01D9  29DB               	goto	u228_21
  8983  01DA  29DC               u228_20:
  8984  01DB                     	addwf	(??___fladd+4)+1,f
  8985  01DB  07AD               u228_21:
  8986  01DC                     	movf	2+(??___fladd+8)+0,w
  8987  01DC  0832               	skipnc
  8988  01DD  1803               	incfsz	2+(??___fladd+8)+0,w
  8989  01DE  0F32               	goto	u228_22
  8990  01DF  29E1               	goto	u228_23
  8991  01E0  29E2               u228_22:
  8992  01E1                     	addwf	(??___fladd+4)+2,f
  8993  01E1  07AE               u228_23:
  8994  01E2                     	movf	3+(??___fladd+8)+0,w
  8995  01E2  0833               	skipnc
  8996  01E3  1803               	incf	3+(??___fladd+8)+0,w
  8997  01E4  0A33               	addwf	(??___fladd+4)+3,f
  8998  01E5  07AF               	movf	0+(??___fladd+4)+0,w
  8999  01E6  082C               	addwf	(??___fladd+0)+0,f
  9000  01E7  07A8               	movf	1+(??___fladd+4)+0,w
  9001  01E8  082D               	skipnc
  9002  01E9  1803               	incfsz	1+(??___fladd+4)+0,w
  9003  01EA  0F2D               	goto	u229_20
  9004  01EB  29ED               	goto	u229_21
  9005  01EC  29EE               u229_20:
  9006  01ED                     	addwf	(??___fladd+0)+1,f
  9007  01ED  07A9               u229_21:
  9008  01EE                     	movf	2+(??___fladd+4)+0,w
  9009  01EE  082E               	skipnc
  9010  01EF  1803               	incfsz	2+(??___fladd+4)+0,w
  9011  01F0  0F2E               	goto	u229_22
  9012  01F1  29F3               	goto	u229_23
  9013  01F2  29F4               u229_22:
  9014  01F3                     	addwf	(??___fladd+0)+2,f
  9015  01F3  07AA               u229_23:
  9016  01F4                     	movf	3+(??___fladd+4)+0,w
  9017  01F4  082F               	skipnc
  9018  01F5  1803               	incf	3+(??___fladd+4)+0,w
  9019  01F6  0A2F               	addwf	(??___fladd+0)+3,f
  9020  01F7  07AB               	movf	3+(??___fladd+0)+0,w
  9021  01F8  082B               	movwf	(___fladd@b+3)
  9022  01F9  00A3               	movf	2+(??___fladd+0)+0,w
  9023  01FA  082A               	movwf	(___fladd@b+2)
  9024  01FB  00A2               	movf	1+(??___fladd+0)+0,w
  9025  01FC  0829               	movwf	(___fladd@b+1)
  9026  01FD  00A1               	movf	0+(??___fladd+0)+0,w
  9027  01FE  0828               	movwf	(___fladd@b)
  9028  01FF  00A0               
  9029                           	line	155
  9030                           	movlw	low(080h)
  9031  0200  3080               	movwf	(??___fladd+0)+0
  9032  0201  00A8               	movf	(??___fladd+0)+0,w
  9033  0202  0828               	xorwf	(___fladd@signs),f
  9034  0203  06B4               	line	156
  9035                           	
  9036                           i1l2259:	
  9037  0204                     	comf	(___fladd@grs),f
  9038  0204  09B7               	incf	(___fladd@grs),f
  9039  0205  0AB7               	line	157
  9040                           	
  9041                           i1l2261:	
  9042  0206                     	movf	((___fladd@grs)),w
  9043  0206  0837               	btfss	status,2
  9044  0207  1D03               	goto	u230_21
  9045  0208  2A0A               	goto	u230_20
  9046  0209  2A0B               u230_21:
  9047  020A                     	goto	i1l792
  9048  020A  2A29               u230_20:
  9049  020B                     	line	158
  9050                           	
  9051                           i1l2263:	
  9052  020B                     	movlw	01h
  9053  020B  3001               	addwf	(___fladd@b),f
  9054  020C  07A0               	movlw	0
  9055  020D  3000               	skipnc
  9056  020E  1803               movlw 1
  9057  020F  3001               	addwf	(___fladd@b+1),f
  9058  0210  07A1               	movlw	0
  9059  0211  3000               	skipnc
  9060  0212  1803               movlw 1
  9061  0213  3001               	addwf	(___fladd@b+2),f
  9062  0214  07A2               	movlw	0
  9063  0215  3000               	skipnc
  9064  0216  1803               movlw 1
  9065  0217  3001               	addwf	(___fladd@b+3),f
  9066  0218  07A3               	goto	i1l792
  9067  0219  2A29               	line	159
  9068                           	
  9069                           i1l791:	
  9070  021A                     	line	160
  9071                           	goto	i1l792
  9072  021A  2A29               	line	161
  9073                           	
  9074                           i1l790:	
  9075  021B                     	line	162
  9076                           	
  9077                           i1l2265:	
  9078  021B                     	movf	(___fladd@a),w
  9079  021B  0824               	subwf	(___fladd@b),f
  9080  021C  02A0               	movf	(___fladd@a+1),w
  9081  021D  0825               	skipc
  9082  021E  1C03               	incfsz	(___fladd@a+1),w
  9083  021F  0F25               	subwf	(___fladd@b+1),f
  9084  0220  02A1               	movf	(___fladd@a+2),w
  9085  0221  0826               	skipc
  9086  0222  1C03               	incfsz	(___fladd@a+2),w
  9087  0223  0F26               	subwf	(___fladd@b+2),f
  9088  0224  02A2               	movf	(___fladd@a+3),w
  9089  0225  0827               	skipc
  9090  0226  1C03               	incfsz	(___fladd@a+3),w
  9091  0227  0F27               	subwf	(___fladd@b+3),f
  9092  0228  02A3               	line	163
  9093                           	
  9094                           i1l792:	
  9095  0229                     	line	166
  9096                           	movf	(___fladd@b+3),w
  9097  0229  0823               	iorwf	(___fladd@b+2),w
  9098  022A  0422               	iorwf	(___fladd@b+1),w
  9099  022B  0421               	iorwf	(___fladd@b),w
  9100  022C  0420               	skipz
  9101  022D  1D03               	goto	u231_21
  9102  022E  2A30               	goto	u231_20
  9103  022F  2A31               u231_21:
  9104  0230                     	goto	i1l2287
  9105  0230  2A62               u231_20:
  9106  0231                     	
  9107                           i1l2267:	
  9108  0231                     	movf	((___fladd@grs)),w
  9109  0231  0837               	btfss	status,2
  9110  0232  1D03               	goto	u232_21
  9111  0233  2A35               	goto	u232_20
  9112  0234  2A36               u232_21:
  9113  0235                     	goto	i1l2287
  9114  0235  2A62               u232_20:
  9115  0236                     	line	167
  9116                           	
  9117                           i1l2269:	
  9118  0236                     	movlw	0x0
  9119  0236  3000               	movwf	(?___fladd+3)
  9120  0237  00A3               	movlw	0x0
  9121  0238  3000               	movwf	(?___fladd+2)
  9122  0239  00A2               	movlw	0x0
  9123  023A  3000               	movwf	(?___fladd+1)
  9124  023B  00A1               	movlw	0x0
  9125  023C  3000               	movwf	(?___fladd)
  9126  023D  00A0               
  9127                           	goto	i1l784
  9128  023E  2AEB               	
  9129                           i1l2271:	
  9130  023F                     	goto	i1l784
  9131  023F  2AEB               	line	168
  9132                           	
  9133                           i1l793:	
  9134  0240                     	line	171
  9135                           	goto	i1l2287
  9136  0240  2A62               	
  9137                           i1l795:	
  9138  0241                     	line	172
  9139                           	
  9140                           i1l2273:	
  9141  0241                     	movlw	01h
  9142  0241  3001               	movwf	(??___fladd+0)+0
  9143  0242  00A8               u233_25:
  9144  0243                     	clrc
  9145  0243  1003               	rlf	(___fladd@b),f
  9146  0244  0DA0               	rlf	(___fladd@b+1),f
  9147  0245  0DA1               	rlf	(___fladd@b+2),f
  9148  0246  0DA2               	rlf	(___fladd@b+3),f
  9149  0247  0DA3               	decfsz	(??___fladd+0)+0
  9150  0248  0BA8               	goto	u233_25
  9151  0249  2A43               	line	173
  9152                           	
  9153                           i1l2275:	
  9154  024A                     	btfss	(___fladd@grs),(7)&7
  9155  024A  1FB7               	goto	u234_21
  9156  024B  2A4D               	goto	u234_20
  9157  024C  2A4E               u234_21:
  9158  024D                     	goto	i1l796
  9159  024D  2A4F               u234_20:
  9160  024E                     	line	174
  9161                           	
  9162                           i1l2277:	
  9163  024E                     	bsf	(___fladd@b)+(0/8),(0)&7
  9164  024E  1420               	line	175
  9165                           	
  9166                           i1l796:	
  9167  024F                     	line	176
  9168                           	btfss	(___fladd@grs),(0)&7
  9169  024F  1C37               	goto	u235_21
  9170  0250  2A52               	goto	u235_20
  9171  0251  2A53               u235_21:
  9172  0252                     	goto	i1l2281
  9173  0252  2A56               u235_20:
  9174  0253                     	line	177
  9175                           	
  9176                           i1l2279:	
  9177  0253                     	setc
  9178  0253  1403               	rlf	(___fladd@grs),f
  9179  0254  0DB7               	line	178
  9180                           	goto	i1l2283
  9181  0255  2A59               	line	179
  9182                           	
  9183                           i1l797:	
  9184  0256                     	line	180
  9185                           	
  9186                           i1l2281:	
  9187  0256                     	clrc
  9188  0256  1003               	rlf	(___fladd@grs),f
  9189  0257  0DB7               
  9190                           	goto	i1l2283
  9191  0258  2A59               	line	181
  9192                           	
  9193                           i1l798:	
  9194  0259                     	line	182
  9195                           	
  9196                           i1l2283:	
  9197  0259                     	movf	((___fladd@bexp)),w
  9198  0259  0836               	btfsc	status,2
  9199  025A  1903               	goto	u236_21
  9200  025B  2A5D               	goto	u236_20
  9201  025C  2A5E               u236_21:
  9202  025D                     	goto	i1l2287
  9203  025D  2A62               u236_20:
  9204  025E                     	line	183
  9205                           	
  9206                           i1l2285:	
  9207  025E                     	movlw	01h
  9208  025E  3001               	subwf	(___fladd@bexp),f
  9209  025F  02B6               	goto	i1l2287
  9210  0260  2A62               	line	184
  9211                           	
  9212                           i1l799:	
  9213  0261                     	goto	i1l2287
  9214  0261  2A62               	line	185
  9215                           	
  9216                           i1l794:	
  9217  0262                     	line	171
  9218                           	
  9219                           i1l2287:	
  9220  0262                     	btfss	(___fladd@b+2),(23)&7
  9221  0262  1FA2               	goto	u237_21
  9222  0263  2A65               	goto	u237_20
  9223  0264  2A66               u237_21:
  9224  0265                     	goto	i1l2273
  9225  0265  2A41               u237_20:
  9226  0266                     	goto	i1l2289
  9227  0266  2A68               	
  9228                           i1l800:	
  9229  0267                     	goto	i1l2289
  9230  0267  2A68               	line	186
  9231                           	
  9232                           i1l789:	
  9233  0268                     	line	192
  9234                           	
  9235                           i1l2289:	
  9236  0268                     	clrf	(___fladd@aexp)
  9237  0268  01B5               	line	193
  9238                           	
  9239                           i1l2291:	
  9240  0269                     	btfss	(___fladd@grs),(7)&7
  9241  0269  1FB7               	goto	u238_21
  9242  026A  2A6C               	goto	u238_20
  9243  026B  2A6D               u238_21:
  9244  026C                     	goto	i1l2299
  9245  026C  2A7F               u238_20:
  9246  026D                     	line	194
  9247                           	
  9248                           i1l2293:	
  9249  026D                     	movf	(___fladd@grs),w
  9250  026D  0837               	andlw	07Fh
  9251  026E  397F               	btfsc	status,2
  9252  026F  1903               	goto	u239_21
  9253  0270  2A72               	goto	u239_20
  9254  0271  2A73               u239_21:
  9255  0272                     	goto	i1l802
  9256  0272  2A76               u239_20:
  9257  0273                     	line	195
  9258                           	
  9259                           i1l2295:	
  9260  0273                     	clrf	(___fladd@aexp)
  9261  0273  01B5               	incf	(___fladd@aexp),f
  9262  0274  0AB5               	line	196
  9263                           	goto	i1l2299
  9264  0275  2A7F               	line	197
  9265                           	
  9266                           i1l802:	
  9267  0276                     	line	198
  9268                           	btfss	(___fladd@b),(0)&7
  9269  0276  1C20               	goto	u240_21
  9270  0277  2A79               	goto	u240_20
  9271  0278  2A7A               u240_21:
  9272  0279                     	goto	i1l2299
  9273  0279  2A7F               u240_20:
  9274  027A                     	line	199
  9275                           	
  9276                           i1l2297:	
  9277  027A                     	clrf	(___fladd@aexp)
  9278  027A  01B5               	incf	(___fladd@aexp),f
  9279  027B  0AB5               	goto	i1l2299
  9280  027C  2A7F               	line	200
  9281                           	
  9282                           i1l804:	
  9283  027D                     	goto	i1l2299
  9284  027D  2A7F               	line	201
  9285                           	
  9286                           i1l803:	
  9287  027E                     	goto	i1l2299
  9288  027E  2A7F               	line	202
  9289                           	
  9290                           i1l801:	
  9291  027F                     	line	203
  9292                           	
  9293                           i1l2299:	
  9294  027F                     	movf	((___fladd@aexp)),w
  9295  027F  0835               	btfsc	status,2
  9296  0280  1903               	goto	u241_21
  9297  0281  2A83               	goto	u241_20
  9298  0282  2A84               u241_21:
  9299  0283                     	goto	i1l805
  9300  0283  2ABA               u241_20:
  9301  0284                     	line	204
  9302                           	
  9303                           i1l2301:	
  9304  0284                     	movlw	01h
  9305  0284  3001               	addwf	(___fladd@b),f
  9306  0285  07A0               	movlw	0
  9307  0286  3000               	skipnc
  9308  0287  1803               movlw 1
  9309  0288  3001               	addwf	(___fladd@b+1),f
  9310  0289  07A1               	movlw	0
  9311  028A  3000               	skipnc
  9312  028B  1803               movlw 1
  9313  028C  3001               	addwf	(___fladd@b+2),f
  9314  028D  07A2               	movlw	0
  9315  028E  3000               	skipnc
  9316  028F  1803               movlw 1
  9317  0290  3001               	addwf	(___fladd@b+3),f
  9318  0291  07A3               	line	205
  9319                           	
  9320                           i1l2303:	
  9321  0292                     	btfss	(___fladd@b+3),(24)&7
  9322  0292  1C23               	goto	u242_21
  9323  0293  2A95               	goto	u242_20
  9324  0294  2A96               u242_21:
  9325  0295                     	goto	i1l805
  9326  0295  2ABA               u242_20:
  9327  0296                     	line	206
  9328                           	
  9329                           i1l2305:	
  9330  0296                     	movf	(___fladd@b),w
  9331  0296  0820               	movwf	(??___fladd+0)+0
  9332  0297  00A8               	movf	(___fladd@b+1),w
  9333  0298  0821               	movwf	((??___fladd+0)+0+1)
  9334  0299  00A9               	movf	(___fladd@b+2),w
  9335  029A  0822               	movwf	((??___fladd+0)+0+2)
  9336  029B  00AA               	movf	(___fladd@b+3),w
  9337  029C  0823               	movwf	((??___fladd+0)+0+3)
  9338  029D  00AB               	movlw	01h
  9339  029E  3001               	movwf	(??___fladd+4)+0
  9340  029F  00AC               u243_25:
  9341  02A0                     	rlf	(??___fladd+0)+3,w
  9342  02A0  0D2B               	rrf	(??___fladd+0)+3,f
  9343  02A1  0CAB               	rrf	(??___fladd+0)+2,f
  9344  02A2  0CAA               	rrf	(??___fladd+0)+1,f
  9345  02A3  0CA9               	rrf	(??___fladd+0)+0,f
  9346  02A4  0CA8               u243_20:
  9347  02A5                     	decfsz	(??___fladd+4)+0,f
  9348  02A5  0BAC               	goto	u243_25
  9349  02A6  2AA0               	movf	3+(??___fladd+0)+0,w
  9350  02A7  082B               	movwf	(___fladd@b+3)
  9351  02A8  00A3               	movf	2+(??___fladd+0)+0,w
  9352  02A9  082A               	movwf	(___fladd@b+2)
  9353  02AA  00A2               	movf	1+(??___fladd+0)+0,w
  9354  02AB  0829               	movwf	(___fladd@b+1)
  9355  02AC  00A1               	movf	0+(??___fladd+0)+0,w
  9356  02AD  0828               	movwf	(___fladd@b)
  9357  02AE  00A0               
  9358                           	line	207
  9359                           		incf	((___fladd@bexp)),w
  9360  02AF  0A36               	btfsc	status,2
  9361  02B0  1903               	goto	u244_21
  9362  02B1  2AB3               	goto	u244_20
  9363  02B2  2AB4               u244_21:
  9364  02B3                     	goto	i1l805
  9365  02B3  2ABA               u244_20:
  9366  02B4                     	line	208
  9367                           	
  9368                           i1l2307:	
  9369  02B4                     	movlw	low(01h)
  9370  02B4  3001               	movwf	(??___fladd+0)+0
  9371  02B5  00A8               	movf	(??___fladd+0)+0,w
  9372  02B6  0828               	addwf	(___fladd@bexp),f
  9373  02B7  07B6               	goto	i1l805
  9374  02B8  2ABA               	line	209
  9375                           	
  9376                           i1l807:	
  9377  02B9                     	goto	i1l805
  9378  02B9  2ABA               	line	210
  9379                           	
  9380                           i1l806:	
  9381  02BA                     	line	211
  9382                           	
  9383                           i1l805:	
  9384  02BA                     	line	215
  9385                           		incf	((___fladd@bexp)),w
  9386  02BA  0A36               	btfsc	status,2
  9387  02BB  1903               	goto	u245_21
  9388  02BC  2ABE               	goto	u245_20
  9389  02BD  2ABF               u245_21:
  9390  02BE                     	goto	i1l2311
  9391  02BE  2AC5               u245_20:
  9392  02BF                     	
  9393                           i1l2309:	
  9394  02BF                     	movf	((___fladd@bexp)),w
  9395  02BF  0836               	btfss	status,2
  9396  02C0  1D03               	goto	u246_21
  9397  02C1  2AC3               	goto	u246_20
  9398  02C2  2AC4               u246_21:
  9399  02C3                     	goto	i1l2317
  9400  02C3  2AD5               u246_20:
  9401  02C4                     	goto	i1l2311
  9402  02C4  2AC5               	
  9403                           i1l810:	
  9404  02C5                     	line	216
  9405                           	
  9406                           i1l2311:	
  9407  02C5                     	movlw	high highword(0)
  9408  02C5  3000               	movwf	(___fladd@b+3)
  9409  02C6  00A3               	movlw	low highword(0)
  9410  02C7  3000               	movwf	(___fladd@b+2)
  9411  02C8  00A2               	movlw	high(0)
  9412  02C9  3000               	movwf	(___fladd@b+1)
  9413  02CA  00A1               	movlw	low(0)
  9414  02CB  3000               	movwf	(___fladd@b)
  9415  02CC  00A0               
  9416                           	line	218
  9417                           	
  9418                           i1l2313:	
  9419  02CD                     	movf	((___fladd@bexp)),w
  9420  02CD  0836               	btfss	status,2
  9421  02CE  1D03               	goto	u247_21
  9422  02CF  2AD1               	goto	u247_20
  9423  02D0  2AD2               u247_21:
  9424  02D1                     	goto	i1l2317
  9425  02D1  2AD5               u247_20:
  9426  02D2                     	line	219
  9427                           	
  9428                           i1l2315:	
  9429  02D2                     	clrf	(___fladd@signs)
  9430  02D2  01B4               	goto	i1l2317
  9431  02D3  2AD5               	line	220
  9432                           	
  9433                           i1l811:	
  9434  02D4                     	goto	i1l2317
  9435  02D4  2AD5               	line	221
  9436                           	
  9437                           i1l808:	
  9438  02D5                     	line	225
  9439                           	
  9440                           i1l2317:	
  9441  02D5                     	btfss	(___fladd@bexp),(0)&7
  9442  02D5  1C36               	goto	u248_21
  9443  02D6  2AD8               	goto	u248_20
  9444  02D7  2AD9               u248_21:
  9445  02D8                     	goto	i1l2321
  9446  02D8  2ADB               u248_20:
  9447  02D9                     	line	226
  9448                           	
  9449                           i1l2319:	
  9450  02D9                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  9451  02D9  17A2               	line	227
  9452                           	goto	i1l813
  9453  02DA  2ADF               	line	229
  9454                           	
  9455                           i1l812:	
  9456  02DB                     	line	230
  9457                           	
  9458                           i1l2321:	
  9459  02DB                     	movlw	low(07Fh)
  9460  02DB  307F               	movwf	(??___fladd+0)+0
  9461  02DC  00A8               	movf	(??___fladd+0)+0,w
  9462  02DD  0828               	andwf	0+(___fladd@b)+02h,f
  9463  02DE  05A2               	line	231
  9464                           	
  9465                           i1l813:	
  9466  02DF                     	line	232
  9467                           	movf	(___fladd@bexp),w
  9468  02DF  0836               	movwf	(??___fladd+0)+0
  9469  02E0  00A8               	clrc
  9470  02E1  1003               	rrf	(??___fladd+0)+0,w
  9471  02E2  0C28               	movwf	(??___fladd+1)+0
  9472  02E3  00A9               	movf	(??___fladd+1)+0,w
  9473  02E4  0829               	movwf	0+(___fladd@b)+03h
  9474  02E5  00A3               	line	233
  9475                           	
  9476                           i1l2323:	
  9477  02E6                     	btfss	(___fladd@signs),(7)&7
  9478  02E6  1FB4               	goto	u249_21
  9479  02E7  2AE9               	goto	u249_20
  9480  02E8  2AEA               u249_21:
  9481  02E9                     	goto	i1l814
  9482  02E9  2AEB               u249_20:
  9483  02EA                     	line	234
  9484                           	
  9485                           i1l2325:	
  9486  02EA                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  9487  02EA  17A3               	line	235
  9488                           	
  9489                           i1l814:	
  9490  02EB                     	line	236
  9491                           	line	237
  9492                           	
  9493                           i1l784:	
  9494  02EB                     	return
  9495  02EB  0008               	opt stack 0
  9496                           GLOBAL	__end_of___fladd
  9497                           	__end_of___fladd:
  9498  02EC                     	signat	___fladd,8316
  9499                           global	___latbits
  9500                           ___latbits	equ	2
  9501  0002                     	global	btemp
  9502                           	btemp set 07Eh
  9503  007E                     
  9504                           	DABS	1,126,2	;btemp
  9505                           	global	wtemp0
  9506                           	wtemp0 set btemp+0
  9507  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      68
    BANK1            80     37      46
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _is_deadzone->___xxtofl
    ___fltol->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd

Critical Paths under _main in BANK1

    _main->_update_volume
    _update_volume->_write_int
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   11546
                                             35 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                       _update_input
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5774
                                             33 BANK1      2     2      0
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5750
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                  _display_write_end
                _display_write_start
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    4085
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1399
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0    1103
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     836
                                              6 BANK1     10     8      2
                             ___wmul
                  _display_write_end
                _display_write_start
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     496
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1311
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    4228
                                             54 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _poll_receiver
 ---------------------------------------------------------------------------------
 (8) _poll_receiver                                        8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      6     6      0    4094
                                             48 BANK0      6     6      0
                        _is_deadzone
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _is_deadzone                                         13     9      4    3746
                                             35 BANK0     13     9      4
                            ___fladd
                            ___fltol
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            11     7      4     381
                                             24 BANK0     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            24    16      8    2414
                                              0 BANK0     24    16      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
   _update_input
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _display_write_end
             _display_write_start
             _spiWrite
     _write_space
       _display_write_end
       _display_write_start
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite
   _update_volume
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _display_write_end
             _display_write_start
             _spiWrite
     _write_space
       _display_write_end
       _display_write_start
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _display_write_end
           _display_write_start
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     _is_deadzone
       ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       i1___wmul
     i1___lwdiv
   _handle_rotary
   _poll_receiver

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      80       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      44       5       85.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     25      2E       7       57.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      80      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Jan 10 11:20:21 2019

                  _update_input 0B55                               pc 0002                     __CFG_CP$OFF 0000  
                   _SSPSTATbits 0094                              l53 0A8A                              l54 0A92  
                            l55 0AAC                              l56 0AAD                              l57 0AAD  
                            fsr 0004             ___wmul@multiplicand 00A2                i1___wmul@product 0074  
                  spiWrite@data 00A0                   _update_volume 0D32                             l122 0D31  
                           l211 0B25                             l212 0B54                             l213 0B3D  
                           l214 0B28                             l142 0B63                             l215 0B52  
                           l151 0DC7                             l143 0B8D                             l216 0B2C  
                           l160 0B95                             l152 0D86                             l217 0B30  
                           l161 0BC7                             l153 0D99                             l218 0B34  
                           l170 0E38                             l162 0BC7                             l154 0DBF  
                           l146 0D40                             l219 0B38                             l171 0E16  
                           l155 0DD6                             l147 0D80                             l308 0A31  
                           l180 0F0C                             l172 0E37                             l156 0DD6  
                           l148 0D64                             l173 0E35                             l165 0B00  
                           l174 0E36                             l166 0B1B                             l191 02F4  
                           l183 0A17                             l175 0E38                             l159 0BB2  
                           l192 02F4                             l184 0A1A                             l193 02FB  
                           l281 0EA0                             l169 0DF7                             l194 02FB  
                           l178 0EB9                             l187 0A08                             l179 0F07  
                           l460 05CD                             l188 0A0B                             l461 04BA  
                           l470 05A0                             l462 04BB                             l455 05AB  
                           l471 0558                             l463 04E9                             l472 05AA  
                           l464 04BC                             l456 04A5                             l480 0A83  
                           l473 05CC                             l465 0503                             l457 04B7  
                           l474 05D2                             l466 050D                             l458 04BE  
                           l467 0541                             l459 04B9                             l468 0536  
                           l469 0553                             l477 0A5F                             l750 0CE3  
                           l478 0A69                             l743 0CDE                             l479 0A7E  
                           l744 0CB0                             l760 0C4B                             l745 0CA4  
                           l753 0C46                             l746 0CB5                             l754 0C20  
                           l747 0CB6                             l755 0C14                             l748 0CCF  
                           l756 0C25                             l749 0CDD                             l757 0C26  
                           l758 0C37                             l759 0C45                   ?_display_init 0070  
                           _PR2 0092                    __CFG_CPD$OFF 0000                             _isr 0AB0  
                           fsr0 0004                             indf 0000                   write_char@pos 00B0  
                  __CFG_LVP$OFF 0000                    ___fltol@exp1 0042                            l2001 0CDE  
                          l2003 0CE3                            l2011 0C1B                            l2021 0C3E  
                          l2013 0C20                            l2005 0C09                            l2015 0C26  
                          l2007 0C11                            l2023 0C46                            l2031 0BAB  
                          l2025 0C4B                            l2017 0C30                            l2009 0C14  
                          l2041 04B2                            l2033 0BB2                            l2019 0C37  
                          l2051 04F1                            l2043 04B7                            l2035 04A0  
                          l2027 0B8E                            l2061 0505                            l2053 04F5  
                          l2045 04BD                            l2037 04A5                            l2029 0B95  
                          l2063 050C                            l2071 0541                            l2055 04F9  
                          l2047 04BE                            l2039 04AB                            l2401 0CF5  
                          l2081 0594                            l2073 0547                            l2065 050D  
                          l2057 04FD                            l2049 04E9                            l2411 0D01  
                          l2403 0CF6                            l2091 05D2                            l2083 059B  
                          l2075 054E                            l2067 0535                            l2059 0503  
                          l2421 0D0D                            l2413 0D07                            l2405 0CFC  
                          l2085 05A0                            l2077 0553                            l2069 0536  
                          l2431 0D17                            l2423 0D0E                            l2415 0D0A  
                          l2407 0CFF                            l2079 0558                            l2087 05AB  
                          l2441 0D25                            l2433 0D1A                            l2425 0D0F  
                          l2417 0D0B                            l2409 0D00                            l2089 05CD  
                          l2601 0D6F                            l2443 0D26                            l2435 0D1B  
                          l2427 0D10                            l2419 0D0C                            l2531 0E40  
                          l2451 0D86                            l2611 0B64                            l2603 0D7A  
                          l2621 0B24                            l2445 0D29                            l2437 0D1C  
                          l2429 0D11                            l2541 0E48                            l2533 0E41  
                          l2461 0DB1                            l2453 0D8A                            l2613 0B6D  
                          l2605 0B55                            l2631 0B34                            l2623 0B25  
                          l2447 0D2D                            l2439 0D22                            l2391 0CEE  
                          l2551 0E53                            l2543 0E4B                            l2535 0E42  
                          l2527 0E39                            l2471 0B00                            l2455 0D98  
                          l2463 0DBF                            l2615 0B78                            l2607 0B62  
                          l2711 0A90                            l2633 0B38                            l2625 0B28  
                          l2393 0CF1                            l2385 0CE4                            l2481 0A2E  
                          l2473 0A1B                            l2561 0E60                            l2553 0E56  
                          l2545 0E4C                            l2537 0E43                            l2529 0E3F  
                          l1921 09FD                            l2465 0AE6                            l2457 0D99  
                          l2449 0D81                            l2617 0B87                            l2609 0B63  
                          l2713 0A92                            l2635 0B3C                            l2627 0B2C  
                          l2619 0B1C                            l1915 02EF                            l2395 0CF2  
                          l2387 0CEC                            l2475 0A25                            l2571 0E71  
                          l2563 0E63                            l2555 0E59                            l2547 0E4F  
                          l2539 0E44                            l1931 0A70                            l1923 0A04  
                          l2467 0AF5                            l2459 0DA9                            l2715 0A9C  
                          l2707 0A84                            l2629 0B30                            l2637 0B3D  
                          l2397 0CF3                            l2389 0CED                            l2477 0A28  
                          l2581 0E7C                            l2573 0E72                            l2565 0E68  
                          l2557 0E5C                            l2549 0E50                            l1933 0A77  
                          l1925 0A5A                            l1917 0A0C                            l1941 0EA6  
                          l2469 0AFF                            l2717 0AA1                            l2709 0A8A  
                          l2639 0B52                            l2399 0CF4                            l2479 0A2B  
                          l2583 0E8E                            l2575 0E73                            l2567 0E6D  
                          l2559 0E5F                            l1935 0A7E                            l1927 0A5F  
                          l1919 0A13                            l1951 0EF9                            l1943 0EAA  
                          l2591 0D41                            l2577 0E74                            l2569 0E70  
                          l1937 0A83                            l1929 0A63                            l1945 0EB8  
                          l1953 0F07                            l1961 0DED                            l2593 0D4A  
                          l2585 0D32                            l2579 0E78                            l1947 0EB9  
                          l1939 0EA1                            l1971 0E16                            l1963 0DF7  
                          l1955 0DDA                            l2595 0D50                            l2587 0D3F  
                          l1981 0C9B                            l1949 0EF1                            l1973 0E1E  
                          l1965 0DFF                            l1957 0DE0                            l2597 0D5D  
                          l2589 0D40                            l1991 0CB6                            l1983 0CA1  
                          l2855 04DE                            l1975 0E24                            l1967 0E05  
                          l1959 0DE6                            l2599 0D64                            l2857 0B44  
                          l1993 0CC7                            l1985 0CA4                            l1977 0E2B  
                          l1969 0E0C                            l1995 0CCD                            l1987 0CAB  
                          l1979 0C97                            l1997 0CCF                            l1989 0CB0  
                          l1999 0CD6                            ?_isr 0070                            STR_1 0490  
                          STR_2 0496                            STR_3 049A                            u3010 0A90  
                          u3011 0A8F                            u1600 0A63                            u1601 0A62  
                          u1700 0E1E                            u1701 0E1D                            u1630 0A7D  
                          u1710 0E24                            u1631 0A7C                            u1615 0A6A  
                          u1711 0E23                            u1720 0CA1                            u1640 0EB7  
                          u1721 0CA0                            u1625 0A71                            u1641 0EB6  
                          u3137 0AA7                            u1570 02FA                            u1810 0C24  
                          u1650 0F06                            u1571 02F9                            u1811 0C23  
                          u1651 0F05                            u1740 0CB4                            u1820 0C30  
                          u1900 0540                            u1580 0A13                            u1660 0DE0  
                          u2700 0DD5                            u1741 0CB3                            u1821 0C2F  
                          u1805 0C15                            u1901 053F                            u1581 0A12  
                          u1645 0EB3                            u1661 0DDF                            u2701 0DD4  
                          u1910 0547                            u1590 0A04                            u1670 0DE6  
                          u2710 0AF5                            u1735 0CA5                            u1911 0546  
                          u1591 0A03                            u1655 0F02                            u1671 0DE5  
                          u2711 0AF4                            u1760 0CC7                            u1840 0C44  
                          u1920 05A9                            u1680 0DFF                            u1761 0CC6  
                          u1841 0C43                            u1825 0C2C                            u1921 05A8  
                          u1681 0DFE                            u2705 0DD1                            u1930 05CB  
                          u1690 0E05                            u1850 0BC6                            u2810 0D3E  
                          u1755 0CB7                            u1835 0C38                            u1931 05CA  
                          u1691 0E04                            u1851 0BC5                            u2715 0AF1  
                          u2811 0D3D                            u1780 0CDC                            u1860 04AB  
                          u2820 0D5D                            u1781 0CDB                            u1765 0CC3  
                          u1861 04AA                            u2821 0D5C                            u1790 0C11  
                          u1870 04F9                            u2830 0B61                            u1775 0CD0  
                          u1791 0C10                            u1871 04F8                            u2831 0B60  
                          u2815 0D3A                            u2840 0B23                            u1880 050B  
                          u2680 0D97                            u2841 0B22                            u1881 050A  
                          u2681 0D96                            u2825 0D59                            u1890 0534  
                          u2690 0DBE                            u1891 0533                            u2691 0DBD  
                          u2835 0B5D                            u2685 0D93                            u1895 0530  
                          u2695 0DBA                            i1l62 0ABB                            i1l63 0ACA  
                          i1l64 0ADB                            i1l65 0ADB                    __CFG_WRT$OFF 0000  
                          _main 0A84                            _font 0312          is_deadzone@deadzoneLow 0049  
                          btemp 007E                   __CFG_BOREN$ON 0000                            start 0012  
                 __CFG_IESO$OFF 0000                    ?_is_deadzone 0043                           ??_isr 0056  
                ?_update_volume 0070                   ___fltol@sign1 0041                  ??_display_init 00A1  
               __end_of___fladd 02EC                           ?_main 0070                   __CFG_WDTE$OFF 0000  
               __end_of___fltol 07F7                 __end_of___lwdiv 0CE4                           i1l230 0FFF  
                         i1l222 0FC4                           i1l223 0FC3                           i1l312 068E  
                         i1l320 0F7D                           i1l224 0FBF                           i1l313 0698  
                         i1l321 0F7E                           i1l225 0FC2                           i1l226 0FF4  
                         i1l227 0FF4                           i1l316 0F3D                           i1l228 0FEE  
                         i1l229 0FF3                           i1l318 0F38                           i1l319 0F7E  
                         i1l351 0BD1                           i1l352 0C08                 __end_of___lwmod 0C4C  
                         i1l800 0267                           i1l480 0A59                           i1l801 027F  
                         i1l810 02C5                           i1l802 0276                           i1l811 02D4  
                         i1l803 027E                           i1l812 02DB                           i1l804 027D  
                         i1l900 072E                           i1l813 02DF                           i1l805 02BA  
                         i1l901 0751                           i1l477 0A35                           i1l814 02EB  
                         i1l806 02BA                           i1l670 07D3                           i1l478 0A3F  
                         i1l750 0C96                           i1l807 02B9                           i1l671 07DF  
                         i1l663 077A                           i1l479 0A54                           i1l743 0C91  
                         i1l808 02D5                           i1l672 07D4                           i1l664 07F6  
                         i1l744 0C63                           i1l673 07E5                           i1l665 07C3  
                         i1l745 0C57                           i1l770 008E                           i1l674 07F6  
                         i1l666 07AF                           i1l746 0C68                           i1l771 0099  
                         i1l763 0043                           i1l667 07B0                           i1l747 0C69  
                         i1l780 0135                           i1l772 00E5                           i1l764 0059  
                         i1l668 07C2                           i1l748 0C82                           i1l781 014C  
                         i1l773 00A8                           i1l765 0056                           i1l669 07E6  
                         i1l749 0C90                           i1l790 021B                           i1l782 019F  
                         i1l774 011E                           i1l766 0062                           i1l791 021A  
                         i1l783 015F                           i1l775 014C                           i1l767 006F  
                         i1l792 0229                           i1l784 02EB                           i1l776 0143  
                         i1l768 007B                           i1l793 0240                           i1l785 019E  
                         i1l777 011F                           i1l769 0091                           i1l794 0262  
                         i1l786 0187                           i1l778 012C                           i1l890 06D2  
                         i1l795 0241                           i1l787 018A                           i1l779 012F  
                         i1l891 06E7                           i1l796 024F                           i1l788 0190  
                         i1l892 0703                           i1l789 0268                           i1l797 0256  
                         i1l893 06E8                           i1l885 06B3                           i1l798 0259  
                         i1l894 070A                           i1l886 06BB                           i1l799 0261  
                         i1l895 0717                           i1l887 06CD                           i1l896 070B  
                         i1l888 075A                           i1l889 06E0                           i1l898 0722  
                         i1l899 0722                           _PORTA 0005                           _PORTC 0007  
                         _TRISC 0087                           _TRISD 0088           _activateSelectedRelay 0B1C  
                __CFG_FCMEN$OFF 0000                     _write_space 0D81                 __end_of_dpowers 048E  
       is_deadzone@deadzoneHigh 004B                           pclath 000A                __end_ofi1___wmul 0A5A  
                         status 0003             i1___wmul@multiplier 0070                           wtemp0 007E  
               __end_of_sprintf 05D3              __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 004E  
                __CFG_MCLRE$OFF 0000                 __initialization 0015                    __end_of_main 0AB0  
                  __end_of_font 0484              handle_rotary@portA 0073              handle_rotary@portB 0075  
           _display_write_start 0A0C                          ??_main 00C3                 _handle_potmeter 0F0D  
                write_text@text 00B3                          _ADRESH 001E                          _ADRESL 009E  
          ?_display_write_start 0070                          i1l2101 0779                          i1l2111 079A  
                        i1l2103 077A                          i1l2201 00D0                          i1l2113 079E  
                        i1l2121 07C3                          i1l2105 078F                          i1l2203 00D4  
                        i1l2211 00E5                          i1l2131 07EB                          i1l2123 07C9  
                        i1l2115 07A5                          i1l2107 0790                          i1l2301 0284  
                        i1l2221 012F                          i1l2213 00E6                          i1l2205 00D8  
                        i1l2141 0043                          i1l2133 0030                          i1l2125 07D2  
                        i1l2117 07AE                          i1l2109 0798                          i1l2311 02C5  
                        i1l2303 0292                          i1l2231 0150                          i1l2223 0133  
                        i1l2215 0102                          i1l2207 00DC                          i1l2143 0048  
                        i1l2151 0059                          i1l2135 0037                          i1l2127 07D4  
                        i1l2119 07B0                          u200_20 07C9                          i1l2321 02DB  
                        i1l2313 02CD                          i1l2305 0296                          i1l2241 017A  
                        i1l2233 0155                          i1l2225 0135                          i1l2217 0123  
                        i1l2209 00E0                          i1l2161 0075                          i1l2153 0062  
                        i1l2145 004D                          i1l2137 003D                          u200_21 07C8  
                        i1l2129 07E6                          i1l2323 02E6                          i1l2315 02D2  
                        i1l2307 02B4                          i1l2251 0190                          i1l2243 017E  
                        i1l2235 015E                          i1l2227 013E                          i1l2219 012C  
                        i1l2171 008E                          i1l2163 0079                          i1l2155 0067  
                        i1l2147 0056                          i1l2139 0041                          i1l2331 06A3  
                        i1l2325 02EA                          i1l2317 02D5                          i1l2309 02BF  
                        i1l2261 0206                          i1l2253 0199                          i1l2245 0187  
                        i1l2237 015F                          i1l2229 0143                          i1l2181 00A8  
                        i1l2173 008F                          i1l2165 007B                          i1l2157 006D  
                        i1l2149 0057                          i1l2341 06D2                          i1l2333 06B3  
                        i1l2501 0C4C                          i1l2319 02D9                          i1l2271 023F  
                        i1l2263 020B                          i1l2247 018A                          i1l2239 0176  
                        i1l2255 019F                          i1l2191 00BC                          i1l2183 00AC  
                        i1l2167 0080                          i1l2175 0091                          i1l2159 006F  
                        i1l2351 070B                          i1l2343 06E0                          i1l2335 06C3  
                        i1l2327 069A                          i1l2511 0C63                          i1l2503 0C4E  
                        i1l2281 0256                          i1l2273 0241                          i1l2257 01B5  
                        i1l2265 021B                          i1l2249 018E                          i1l2193 00C0  
                        i1l2185 00B0                          i1l2177 009F                          i1l2169 0085  
                        i1l2097 075B                          i1l2361 0746                          i1l2353 0717  
                        i1l2345 06E8                          i1l2337 06CC                          i1l2329 069F  
                        i1l2521 0C89                          i1l2513 0C69                          i1l2505 0C54  
                        i1l2291 0269                          i1l2283 0259                          i1l2275 024A  
                        i1l2267 0231                          i1l2259 0204                          i1l2195 00C4  
                        i1l2187 00B4                          i1l2179 00A3                          i1l2099 0770  
                        i1l2363 074B                          i1l2355 071B                          i1l2347 06EC  
                        i1l2339 06CD                          i1l2371 0A32                          i1l2515 0C7A  
                        i1l2507 0C57                          i1l2523 0C91                          i1l2293 026D  
                        i1l2285 025E                          i1l2277 024E                          i1l2269 0236  
                        i1l2197 00C8                          i1l2189 00B8                          u201_25 07D6  
                        i1l2365 074F                          i1l2357 0726                          i1l2349 06FA  
                        i1l2381 0A54                          i1l2373 0A35                          i1l2525 0C96  
                        i1l2517 0C80                          i1l2509 0C5E                          i1l2295 0273  
                        i1l2279 0253                          i1l2287 0262                          i1l2199 00CC  
                        i1l2367 0751                          i1l2359 0730                          i1l2383 0A59  
                        i1l2375 0A39                          i1l2519 0C82                          u210_20 0085  
                        u202_20 07E4                          i1l2297 027A                          i1l2289 0268  
                        u210_21 0084                          u202_21 07E3                          i1l2369 075A  
                        i1l2377 0A46                          i1l2721 0AB4                          i1l2299 027F  
                        i1l2379 0A4D                          i1l2491 066B                          i1l2483 05D3  
                        i1l2651 0FA7                          i1l2731 0ACA                          i1l2723 0AB9  
                        i1l2493 0679                          i1l2485 05F4                          i1l2661 0FCF  
                        i1l2653 0FAD                          i1l2645 0F7F                          i1l2733 0ACE  
                        i1l2725 0ABB                          i1l2495 0689                          i1l2487 062F  
                        i1l2671 0FFD                          i1l2663 0FD9                          i1l2655 0FB8  
                        i1l2647 0F93                          i1l2735 0AD2                          i1l2727 0AC1  
                        i1l2719 0AB0                          u211_20 009F                          u203_20 07EB  
                        u211_21 009E                          u203_21 07EA                          i1l2497 068E  
                        i1l2489 066A                          i1l2681 0F3D                          i1l2673 0F0D  
                        i1l2665 0FDF                          i1l2657 0FBF                          i1l2649 0F9D  
                        i1l2737 0AD7                          i1l2729 0AC6                          i1l2499 0698  
                        i1l2683 0F72                          i1l2675 0F17                          i1l2667 0FE7  
                        i1l2659 0FC4                          i1l2677 0F1D                          i1l2669 0FEE  
                        i1l2685 0BC8                          i1l2679 0F38                          i1l2687 0BD0  
                        u220_20 0150                          u212_20 00A3                          u204_20 0041  
                        u220_21 014F                          u212_21 00A2                          u204_21 0040  
                        i1l2689 0BD1                          u221_20 0155                          u213_20 0102  
                        u205_20 0048                          u221_21 0154                          u213_21 0101  
                        u205_21 0047                          u213_25 00FE                          u230_20 020B  
                        u214_20 010D                          u206_20 004D                          u302_20 0AB4  
                        u230_21 020A                          u222_21 0168                          u214_21 010B  
                        u206_21 004C                          u302_21 0AB3                          u222_22 016F  
                        u222_23 0176                          u231_20 0231                          u223_20 017A  
                        u215_20 010E                          u207_20 006D                          u303_20 0AC1  
                        u231_21 0230                          u223_21 0179                          u207_21 006C  
                        u303_21 0AC0                          u240_20 027A                          u232_20 0236  
                        u224_20 017E                          u216_20 0123                          u208_20 0079  
                        u304_20 0ACE                          u240_21 0279                          u232_21 0235  
                        u224_21 017D                          u216_21 0122                          u208_21 0078  
                        u304_21 0ACD                          u241_20 0284                          u225_20 018E  
                        u217_20 0133                          u209_20 0080                          u241_21 0283  
                        u225_21 018D                          u217_21 0132                          u209_21 007F  
                        u233_25 0243                          u242_20 0296                          u234_20 024E  
                        u250_20 069F                          u242_21 0295                          u234_21 024D  
                        u250_21 069E                          u226_25 0192                          u218_25 0137  
                        u243_20 02A5                          u235_20 0253                          u227_20 01B5  
                        u219_20 014B                          u251_20 06A3                          u235_21 0252  
                        u227_21 01B4                          u219_21 014A                          u251_21 06A2  
                        u227_23 01B1                          u243_25 02A0                          u244_20 02B4  
                        u236_20 025E                          u228_20 01DB                          u260_20 0726  
                        u252_20 06C3                          u244_21 02B3                          u236_21 025D  
                        u228_21 01DC                          u260_21 0725                          u252_21 06C2  
                        u228_22 01E1                          u228_23 01E2                          u245_20 02BF  
                        u237_20 0266                          u229_20 01ED                          u261_20 073B  
                        u245_21 02BE                          u237_21 0265                          u229_21 01EE  
                        u229_22 01F3                          u229_23 01F4                          u261_25 0736  
                        u253_25 06D7                          u246_20 02C4                          u238_20 026D  
                        u262_20 074B                          u254_20 06E6                          u246_21 02C3  
                        u238_21 026C                          u262_21 074A                          u254_21 06E5  
                        u247_20 02D2                          u239_20 0273                          u263_20 074F  
                        u247_21 02D1                          u239_21 0272                          u263_21 074E  
                        u255_25 06FB                          u248_20 02D9                          u256_20 0709  
                        u264_20 0A39                          u272_20 0679                          u280_20 0C8F  
                        u248_21 02D8                          u256_21 0708                          u264_21 0A38  
                        u272_21 0678                          u280_21 0C8E                          u272_25 0675  
                        u249_20 02EA                          u273_20 0689                          u249_21 02E9  
                        u273_21 0688                          u257_25 070F                          u265_25 0A40  
                        u273_25 0685                          u194_20 0770                          u258_20 071B  
                        u274_20 0C54                          u290_20 0FD9                          u194_21 076F  
                        u258_21 071A                          u274_21 0C53                          u290_21 0FD8  
                        u266_25 0A47                          u290_25 0FD5                          u195_20 0788  
                        u259_20 0721                          u267_20 0A53                          u291_20 0FDF  
                        u259_21 0720                          u267_21 0A52                          u291_21 0FDE  
                        u195_25 0783                          u275_25 0C58                          u196_20 079E  
                        u276_20 0C67                          u292_20 0FE7                          u196_21 079D  
                        u276_21 0C66                          u292_21 0FE6                          u197_20 07A5  
                        u293_20 0F1D                          u285_20 0F9D                          u197_21 07A4  
                        u293_21 0F1C                          u285_21 0F9C                          u277_25 0C6A  
                        u285_25 0F99                          u278_20 0C7A                          u294_20 0F37  
                        u286_20 0FA7                          u278_21 0C79                          u294_21 0F36  
                        u286_21 0FA6                          u198_25 07B1                          u278_25 0C76  
                        u294_25 0F33                          u286_25 0FA3                          u199_20 07C1  
                        u295_20 0F72                          u287_20 0FAD                          u199_21 07C0  
                        u295_21 0F71                          u287_21 0FAC                          u279_25 0C83  
                        u288_20 0FB8                          u296_20 0BCF                          u288_21 0FB7  
                        u296_21 0BCE                          u289_20 0FCF                          u297_20 0BDF  
                        u289_21 0FCE                          u289_25 0FCB                          u297_25 0BDA  
                        _SSPCON 0014                          _SSPBUF 0013                __end_of___xxtofl 075B  
                __CFG_PWRTE$OFF 0000                       ??___fladd 0028                          ___wmul 0A5A  
                        __lastA 0060                          __lastB 005E                 ??_update_volume 00C1  
                     ??___fltol 003C                       ??___lwdiv 00A4                       ??___lwmod 00AC  
                        _config 0E39                __end_of_init_adc 0A32                          _volume 00C9  
               write_int@number 00BD          ?_activateSelectedRelay 0070               __end_ofi1___lwdiv 0C97  
                        saved_w 007E                __end_of_spiWrite 02FC                       ??_sprintf 00B2  
         ??_display_write_start 00A0                    ___xxtofl@arg 007A                    ___xxtofl@exp 0079  
                  ___xxtofl@val 0070         __end_of__initialization 002C          is_deadzone@currentStep 0043  
          __end_of_display_init 0D32                      ___fltol@f1 0038                  __pcstackCOMMON 0070  
          __size_of_is_deadzone 00C6         __end_of_handle_potmeter 0F7F                       ?i1___wmul 0070  
                    __pbssBANK0 005A                      __pbssBANK1 00C5           __end_of_handle_rotary 1000  
                    __pmaintext 0A84           __end_of_poll_receiver 0C09                         ?___wmul 00A0  
                    __pintentry 0004                         ?_config 0070                      ??i1___wmul 0074  
                __selectedInput 00CB                       ?___xxtofl 0070                    ?_write_space 00A1  
                       _SSPSTAT 0094                      __stringtab 0300                       ?_init_adc 0070  
            __size_of_write_int 0036                      _lastVolume 00C7                       ?_spiWrite 0070  
                       ___fladd 0030                ?_handle_potmeter 0070                         ___fltol 075B  
               __size_of___wmul 002A                         ___lwdiv 0C97                         ___lwmod 0C09  
               __size_of_config 0068                       _ANSELbits 0188                         __ptext1 0D32  
                       __ptext2 0B55                         __ptext3 0D81                         __ptext4 0AE6  
                       __ptext5 0B8E                         __ptext6 0DD7                         __ptext7 0EA1  
                       __ptext8 0A0C                         __ptext9 09FD                __selectedDisplay 00CD  
                       _dpowers 0484               i1___lwdiv@divisor 0070                       _T2CONbits 0012  
                  __size_of_isr 0036               i1___lwdiv@counter 0077                      ??___xxtofl 0074  
                       _sprintf 049D           __size_of_display_init 004E            end_of_initialization 002C  
                    ??_init_adc 00A0                      ??_spiWrite 00A0                    __pstringtext 0300  
             __end_of_step_size 0490           i1___wmul@multiplicand 0072         ??_activateSelectedRelay 00A0  
                     _PORTBbits 0006                       _PORTCbits 0007                       _PORTDbits 0008  
          __inputUpdateRequired 0063      handle_potmeter@currentStep 0052                    _display_init 0CE4  
                   ___fladd@grs 0037               __end_of_write_int 0B1C                   ___xxtofl@sign 0078  
                     _TRISAbits 0085                       _TRISBbits 0086                       _TRISCbits 0087  
                     _TRISEbits 0089                       i1___lwdiv 0C4C                    write_int@num 00BF  
                  write_space@i 00A4                    write_space@x 00A6                   ?_update_input 0070  
                __end_of___wmul 0A84           __end_of_update_volume 0D81                      _write_char 0DD7  
                    _write_font 0EA1                  __end_of_config 0EA1                      _write_text 0B8E  
   __end_of_display_write_start 0A1B             start_initialization 0015               __size_ofi1___wmul 0028  
                   __end_of_isr 0AE6                      ?i1___lwdiv 0070            __size_of_write_space 0056  
              write_space@count 00A1                   ??_is_deadzone 0047                  ??_update_input 00C1  
                      ??___wmul 00A4                        ??_config 00A1             update_volume@spaces 00C1  
                     ___fladd@a 0024                       ___fladd@b 0020                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00A0               __size_of___xxtofl 00C2  
        __CFG_FOSC$INTRC_CLKOUT 0000                     sprintf@flag 00B7                     sprintf@prec 00B8  
             __size_of_init_adc 0017                ___lwdiv@dividend 00A2                        ?___fladd 0020  
                      ?___fltol 0038                        ?___lwdiv 00A0                        ?___lwmod 00A8  
           __end_of_is_deadzone 0699                     ?_write_char 0070               __size_of_spiWrite 0010  
                   ?_write_font 00A6                     ?_write_text 00B3          __size_of_handle_rotary 0081  
                     _lastInput 00C5                ___lwdiv@quotient 00A5                     ??i1___lwdiv 0074  
                      ?_sprintf 00AE          __size_of_poll_receiver 0041                 _is_deadzone$864 004D  
             interrupt_function 0004                  ___wmul@product 00A4                        _IOCBbits 0096  
                      _PIE1bits 008C                        _PIR1bits 000C  __size_of_activateSelectedRelay 0039  
                    _ADCON0bits 001F                     __stringbase 0312                      _ADCON1bits 009F  
             ___wmul@multiplier 00A0   __end_of_activateSelectedRelay 0B55                        i1___wmul 0A32  
                     _step_size 048E                     write_char@c 00B2        __size_of_handle_potmeter 0072  
                   write_font@x 00AE                     write_text@c 00B5            __end_of_update_input 0B8E  
                     _write_int 0AE6               _display_write_end 09FD             __size_of_write_char 0062  
           __size_of_write_font 006C             __size_of_write_text 003A                   _handle_rotary 0F7F  
            ?_display_write_end 0070                     _ignore_poll 0062                     _is_deadzone 05D3  
                 _poll_receiver 0BC8             ??_display_write_end 00A0                __size_of___fladd 02BC  
              __size_of___fltol 009C                __size_of___lwdiv 004D                __size_of___lwmod 0043  
            __end_of__stringtab 0312                      _ANSELHbits 0189                      sprintf@val 00B9  
                      ___xxtofl 0699                 ___lwdiv@divisor 00A0                 ___lwdiv@counter 00A7  
                      __ptext10 0A5A                        __ptext11 049D                        __ptext20 0BC8  
                      __ptext12 0C09                        __ptext21 0F7F                        __ptext13 0C97  
                      __ptext22 0F0D                        __ptext14 0E39                        __ptext23 0C4C  
                      __ptext15 0A1B                        __ptext24 05D3                        __ptext16 0CE4  
                      __ptext25 0A32                        __ptext17 02EC                        __ptext26 0699  
                      __ptext18 0B1C                        __ptext27 075B                        __ptext19 0AB0  
                      __ptext28 0030               __CFG_BOR4V$BOR21V 0000                      ?_write_int 00BD  
     __end_of_display_write_end 0A0C                __size_of_sprintf 0136              i1___lwdiv@dividend 0072  
                      _ir_input 005A                  ?_handle_rotary 0070                        _init_adc 0A1B  
                 __size_of_main 002C               write_font@fontPos 00A6        handle_potmeter@ad_result 0054  
                ?_poll_receiver 0070                        _spiWrite 02EC              i1___lwdiv@quotient 0075  
                    _INTCONbits 000B                   ??_write_space 00A3               ??_handle_potmeter 0050  
                      intlevel1 0000                       sprintf@ap 00B6    __size_of_display_write_start 000F  
                     sprintf@sp 00BB                ___lwmod@dividend 00AA          __size_of_update_volume 004F  
                     stringcode 030A                      _OSCCONbits 008F                    ??_write_char 00B0  
                  ??_write_font 00A8                    ??_write_text 00B5                        sprintf@c 00BC  
                      sprintf@f 00AE           __size_of_update_input 0039                 ___lwmod@divisor 00A8  
               ___lwmod@counter 00AD                        stringtab 0300                     ??_write_int 00BF  
                 ___fladd@signs 0034      __size_of_display_write_end 000F                 ??_handle_rotary 0070  
           __end_of_write_space 0DD7                    ___fladd@aexp 0035                    ___fladd@bexp 0036  
          is_deadzone@adcResult 0045              __end_of_write_char 0E39              __end_of_write_font 0F0D  
            __end_of_write_text 0BC8                 ??_poll_receiver 0070  
