

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jan 28 12:11:00 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "/opt/microchip/xc8/v2.00/pic/include/pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_update_input
  1182                           	FNCALL	_main,_update_vol_motor
  1183                           	FNCALL	_main,_update_volume
  1184                           	FNCALL	_update_volume,_display_write_end
  1185                           	FNCALL	_update_volume,_display_write_start
  1186                           	FNCALL	_update_volume,_write_int
  1187                           	FNCALL	_update_volume,_write_space
  1188                           	FNCALL	_update_volume,_write_text
  1189                           	FNCALL	_update_vol_motor,_get_volume
  1190                           	FNCALL	_get_volume,___lwdiv
  1191                           	FNCALL	_get_volume,_is_deadzone
  1192                           	FNCALL	_is_deadzone,___fladd
  1193                           	FNCALL	_is_deadzone,___fltol
  1194                           	FNCALL	_is_deadzone,___wmul
  1195                           	FNCALL	_is_deadzone,___xxtofl
  1196                           	FNCALL	_update_input,_display_write_end
  1197                           	FNCALL	_update_input,_display_write_start
  1198                           	FNCALL	_update_input,_write_int
  1199                           	FNCALL	_update_input,_write_space
  1200                           	FNCALL	_update_input,_write_text
  1201                           	FNCALL	_write_space,_spiWrite
  1202                           	FNCALL	_write_int,_sprintf
  1203                           	FNCALL	_write_int,_write_char
  1204                           	FNCALL	_write_int,_write_text
  1205                           	FNCALL	_write_text,_write_char
  1206                           	FNCALL	_write_char,_write_font
  1207                           	FNCALL	_write_font,___wmul
  1208                           	FNCALL	_write_font,_spiWrite
  1209                           	FNCALL	_sprintf,___lwdiv
  1210                           	FNCALL	_sprintf,___lwmod
  1211                           	FNCALL	_config,_display_init
  1212                           	FNCALL	_config,_init_adc
  1213                           	FNCALL	_display_init,_spiWrite
  1214                           	FNROOT	_main
  1215                           	FNCALL	_isr,_handle_potmeter
  1216                           	FNCALL	_isr,_handle_rotary
  1217                           	FNCALL	_isr,_start_receive
  1218                           	FNCALL	_start_receive,_handle_remote
  1219                           	FNCALL	_handle_potmeter,i1_get_volume
  1220                           	FNCALL	i1_get_volume,i1___lwdiv
  1221                           	FNCALL	i1_get_volume,i1_is_deadzone
  1222                           	FNCALL	i1_is_deadzone,i1___fladd
  1223                           	FNCALL	i1_is_deadzone,i1___fltol
  1224                           	FNCALL	i1_is_deadzone,i1___wmul
  1225                           	FNCALL	i1_is_deadzone,i1___xxtofl
  1226                           	FNCALL	intlevel1,_isr
  1227                           	global	intlevel1
  1228                           	FNROOT	intlevel1
  1229                           	global	_font
  1230                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1231                           global __pstringtext
  1232                           __pstringtext:
  1233  0600                     stringtab:
  1234  0600                     	global    __stringtab
  1235                           __stringtab:
  1236  0600                     ;	String table - string pointers are 2 bytes each
  1237                           	btfsc	(btemp+1),7
  1238  0600  1BFF               	ljmp	stringcode
  1239  0601  2E0A               	bcf	status,7
  1240  0602  1383               	btfsc	(btemp+1),0
  1241  0603  187F               	bsf	status,7
  1242  0604  1783               	movf	indf,w
  1243  0605  0800               	incf fsr
  1244  0606  0A84               skipnz
  1245  0607  1903               incf btemp+1
  1246  0608  0AFF               	return
  1247  0609  0008               stringcode:
  1248  060A                     	movf btemp+1,w
  1249  060A  087F               andlw 7Fh
  1250  060B  397F               movwf	pclath
  1251  060C  008A               	movf	fsr,w
  1252  060D  0804               incf fsr
  1253  060E  0A84               skipnz
  1254  060F  1903               incf btemp+1
  1255  0610  0AFF               	movwf pc
  1256  0611  0082               	global __stringbase
  1257                           __stringbase:
  1258  0612                     	global    __end_of__stringtab
  1259                           __end_of__stringtab:
  1260  0612                     	file	"./Font.h"
  1261                           	line	4
  1262                           _font:
  1263  0612                     	retlw	03Eh
  1264  0612  343E               	retlw	0
  1265  0613  3400               
  1266                           	retlw	051h
  1267  0614  3451               	retlw	0
  1268  0615  3400               
  1269                           	retlw	049h
  1270  0616  3449               	retlw	0
  1271  0617  3400               
  1272                           	retlw	045h
  1273  0618  3445               	retlw	0
  1274  0619  3400               
  1275                           	retlw	03Eh
  1276  061A  343E               	retlw	0
  1277  061B  3400               
  1278                           	retlw	low(0)
  1279  061C  3400               	retlw	high(0)
  1280  061D  3400               
  1281                           	retlw	042h
  1282  061E  3442               	retlw	0
  1283  061F  3400               
  1284                           	retlw	07Fh
  1285  0620  347F               	retlw	0
  1286  0621  3400               
  1287                           	retlw	040h
  1288  0622  3440               	retlw	0
  1289  0623  3400               
  1290                           	retlw	low(0)
  1291  0624  3400               	retlw	high(0)
  1292  0625  3400               
  1293                           	retlw	042h
  1294  0626  3442               	retlw	0
  1295  0627  3400               
  1296                           	retlw	061h
  1297  0628  3461               	retlw	0
  1298  0629  3400               
  1299                           	retlw	051h
  1300  062A  3451               	retlw	0
  1301  062B  3400               
  1302                           	retlw	049h
  1303  062C  3449               	retlw	0
  1304  062D  3400               
  1305                           	retlw	046h
  1306  062E  3446               	retlw	0
  1307  062F  3400               
  1308                           	retlw	021h
  1309  0630  3421               	retlw	0
  1310  0631  3400               
  1311                           	retlw	041h
  1312  0632  3441               	retlw	0
  1313  0633  3400               
  1314                           	retlw	045h
  1315  0634  3445               	retlw	0
  1316  0635  3400               
  1317                           	retlw	04Bh
  1318  0636  344B               	retlw	0
  1319  0637  3400               
  1320                           	retlw	031h
  1321  0638  3431               	retlw	0
  1322  0639  3400               
  1323                           	retlw	018h
  1324  063A  3418               	retlw	0
  1325  063B  3400               
  1326                           	retlw	014h
  1327  063C  3414               	retlw	0
  1328  063D  3400               
  1329                           	retlw	012h
  1330  063E  3412               	retlw	0
  1331  063F  3400               
  1332                           	retlw	07Fh
  1333  0640  347F               	retlw	0
  1334  0641  3400               
  1335                           	retlw	010h
  1336  0642  3410               	retlw	0
  1337  0643  3400               
  1338                           	retlw	027h
  1339  0644  3427               	retlw	0
  1340  0645  3400               
  1341                           	retlw	045h
  1342  0646  3445               	retlw	0
  1343  0647  3400               
  1344                           	retlw	045h
  1345  0648  3445               	retlw	0
  1346  0649  3400               
  1347                           	retlw	045h
  1348  064A  3445               	retlw	0
  1349  064B  3400               
  1350                           	retlw	039h
  1351  064C  3439               	retlw	0
  1352  064D  3400               
  1353                           	retlw	03Ch
  1354  064E  343C               	retlw	0
  1355  064F  3400               
  1356                           	retlw	04Ah
  1357  0650  344A               	retlw	0
  1358  0651  3400               
  1359                           	retlw	049h
  1360  0652  3449               	retlw	0
  1361  0653  3400               
  1362                           	retlw	049h
  1363  0654  3449               	retlw	0
  1364  0655  3400               
  1365                           	retlw	030h
  1366  0656  3430               	retlw	0
  1367  0657  3400               
  1368                           	retlw	01h
  1369  0658  3401               	retlw	0
  1370  0659  3400               
  1371                           	retlw	071h
  1372  065A  3471               	retlw	0
  1373  065B  3400               
  1374                           	retlw	09h
  1375  065C  3409               	retlw	0
  1376  065D  3400               
  1377                           	retlw	05h
  1378  065E  3405               	retlw	0
  1379  065F  3400               
  1380                           	retlw	03h
  1381  0660  3403               	retlw	0
  1382  0661  3400               
  1383                           	retlw	036h
  1384  0662  3436               	retlw	0
  1385  0663  3400               
  1386                           	retlw	049h
  1387  0664  3449               	retlw	0
  1388  0665  3400               
  1389                           	retlw	049h
  1390  0666  3449               	retlw	0
  1391  0667  3400               
  1392                           	retlw	049h
  1393  0668  3449               	retlw	0
  1394  0669  3400               
  1395                           	retlw	036h
  1396  066A  3436               	retlw	0
  1397  066B  3400               
  1398                           	retlw	06h
  1399  066C  3406               	retlw	0
  1400  066D  3400               
  1401                           	retlw	049h
  1402  066E  3449               	retlw	0
  1403  066F  3400               
  1404                           	retlw	049h
  1405  0670  3449               	retlw	0
  1406  0671  3400               
  1407                           	retlw	029h
  1408  0672  3429               	retlw	0
  1409  0673  3400               
  1410                           	retlw	01Eh
  1411  0674  341E               	retlw	0
  1412  0675  3400               
  1413                           	retlw	07Eh
  1414  0676  347E               	retlw	0
  1415  0677  3400               
  1416                           	retlw	011h
  1417  0678  3411               	retlw	0
  1418  0679  3400               
  1419                           	retlw	011h
  1420  067A  3411               	retlw	0
  1421  067B  3400               
  1422                           	retlw	011h
  1423  067C  3411               	retlw	0
  1424  067D  3400               
  1425                           	retlw	07Eh
  1426  067E  347E               	retlw	0
  1427  067F  3400               
  1428                           	retlw	07Fh
  1429  0680  347F               	retlw	0
  1430  0681  3400               
  1431                           	retlw	049h
  1432  0682  3449               	retlw	0
  1433  0683  3400               
  1434                           	retlw	049h
  1435  0684  3449               	retlw	0
  1436  0685  3400               
  1437                           	retlw	049h
  1438  0686  3449               	retlw	0
  1439  0687  3400               
  1440                           	retlw	036h
  1441  0688  3436               	retlw	0
  1442  0689  3400               
  1443                           	retlw	03Eh
  1444  068A  343E               	retlw	0
  1445  068B  3400               
  1446                           	retlw	041h
  1447  068C  3441               	retlw	0
  1448  068D  3400               
  1449                           	retlw	041h
  1450  068E  3441               	retlw	0
  1451  068F  3400               
  1452                           	retlw	041h
  1453  0690  3441               	retlw	0
  1454  0691  3400               
  1455                           	retlw	022h
  1456  0692  3422               	retlw	0
  1457  0693  3400               
  1458                           	retlw	07Fh
  1459  0694  347F               	retlw	0
  1460  0695  3400               
  1461                           	retlw	041h
  1462  0696  3441               	retlw	0
  1463  0697  3400               
  1464                           	retlw	041h
  1465  0698  3441               	retlw	0
  1466  0699  3400               
  1467                           	retlw	022h
  1468  069A  3422               	retlw	0
  1469  069B  3400               
  1470                           	retlw	01Ch
  1471  069C  341C               	retlw	0
  1472  069D  3400               
  1473                           	retlw	07Fh
  1474  069E  347F               	retlw	0
  1475  069F  3400               
  1476                           	retlw	049h
  1477  06A0  3449               	retlw	0
  1478  06A1  3400               
  1479                           	retlw	049h
  1480  06A2  3449               	retlw	0
  1481  06A3  3400               
  1482                           	retlw	049h
  1483  06A4  3449               	retlw	0
  1484  06A5  3400               
  1485                           	retlw	041h
  1486  06A6  3441               	retlw	0
  1487  06A7  3400               
  1488                           	retlw	07Fh
  1489  06A8  347F               	retlw	0
  1490  06A9  3400               
  1491                           	retlw	09h
  1492  06AA  3409               	retlw	0
  1493  06AB  3400               
  1494                           	retlw	09h
  1495  06AC  3409               	retlw	0
  1496  06AD  3400               
  1497                           	retlw	01h
  1498  06AE  3401               	retlw	0
  1499  06AF  3400               
  1500                           	retlw	01h
  1501  06B0  3401               	retlw	0
  1502  06B1  3400               
  1503                           	retlw	03Eh
  1504  06B2  343E               	retlw	0
  1505  06B3  3400               
  1506                           	retlw	041h
  1507  06B4  3441               	retlw	0
  1508  06B5  3400               
  1509                           	retlw	041h
  1510  06B6  3441               	retlw	0
  1511  06B7  3400               
  1512                           	retlw	051h
  1513  06B8  3451               	retlw	0
  1514  06B9  3400               
  1515                           	retlw	032h
  1516  06BA  3432               	retlw	0
  1517  06BB  3400               
  1518                           	retlw	07Fh
  1519  06BC  347F               	retlw	0
  1520  06BD  3400               
  1521                           	retlw	08h
  1522  06BE  3408               	retlw	0
  1523  06BF  3400               
  1524                           	retlw	08h
  1525  06C0  3408               	retlw	0
  1526  06C1  3400               
  1527                           	retlw	08h
  1528  06C2  3408               	retlw	0
  1529  06C3  3400               
  1530                           	retlw	07Fh
  1531  06C4  347F               	retlw	0
  1532  06C5  3400               
  1533                           	retlw	low(0)
  1534  06C6  3400               	retlw	high(0)
  1535  06C7  3400               
  1536                           	retlw	041h
  1537  06C8  3441               	retlw	0
  1538  06C9  3400               
  1539                           	retlw	07Fh
  1540  06CA  347F               	retlw	0
  1541  06CB  3400               
  1542                           	retlw	041h
  1543  06CC  3441               	retlw	0
  1544  06CD  3400               
  1545                           	retlw	low(0)
  1546  06CE  3400               	retlw	high(0)
  1547  06CF  3400               
  1548                           	retlw	020h
  1549  06D0  3420               	retlw	0
  1550  06D1  3400               
  1551                           	retlw	040h
  1552  06D2  3440               	retlw	0
  1553  06D3  3400               
  1554                           	retlw	041h
  1555  06D4  3441               	retlw	0
  1556  06D5  3400               
  1557                           	retlw	03Fh
  1558  06D6  343F               	retlw	0
  1559  06D7  3400               
  1560                           	retlw	01h
  1561  06D8  3401               	retlw	0
  1562  06D9  3400               
  1563                           	retlw	07Fh
  1564  06DA  347F               	retlw	0
  1565  06DB  3400               
  1566                           	retlw	08h
  1567  06DC  3408               	retlw	0
  1568  06DD  3400               
  1569                           	retlw	014h
  1570  06DE  3414               	retlw	0
  1571  06DF  3400               
  1572                           	retlw	022h
  1573  06E0  3422               	retlw	0
  1574  06E1  3400               
  1575                           	retlw	041h
  1576  06E2  3441               	retlw	0
  1577  06E3  3400               
  1578                           	retlw	07Fh
  1579  06E4  347F               	retlw	0
  1580  06E5  3400               
  1581                           	retlw	040h
  1582  06E6  3440               	retlw	0
  1583  06E7  3400               
  1584                           	retlw	040h
  1585  06E8  3440               	retlw	0
  1586  06E9  3400               
  1587                           	retlw	040h
  1588  06EA  3440               	retlw	0
  1589  06EB  3400               
  1590                           	retlw	040h
  1591  06EC  3440               	retlw	0
  1592  06ED  3400               
  1593                           	retlw	07Fh
  1594  06EE  347F               	retlw	0
  1595  06EF  3400               
  1596                           	retlw	02h
  1597  06F0  3402               	retlw	0
  1598  06F1  3400               
  1599                           	retlw	04h
  1600  06F2  3404               	retlw	0
  1601  06F3  3400               
  1602                           	retlw	02h
  1603  06F4  3402               	retlw	0
  1604  06F5  3400               
  1605                           	retlw	07Fh
  1606  06F6  347F               	retlw	0
  1607  06F7  3400               
  1608                           	retlw	07Fh
  1609  06F8  347F               	retlw	0
  1610  06F9  3400               
  1611                           	retlw	04h
  1612  06FA  3404               	retlw	0
  1613  06FB  3400               
  1614                           	retlw	08h
  1615  06FC  3408               	retlw	0
  1616  06FD  3400               
  1617                           	retlw	010h
  1618  06FE  3410               	retlw	0
  1619  06FF  3400               
  1620                           	retlw	07Fh
  1621  0700  347F               	retlw	0
  1622  0701  3400               
  1623                           	retlw	03Eh
  1624  0702  343E               	retlw	0
  1625  0703  3400               
  1626                           	retlw	041h
  1627  0704  3441               	retlw	0
  1628  0705  3400               
  1629                           	retlw	041h
  1630  0706  3441               	retlw	0
  1631  0707  3400               
  1632                           	retlw	041h
  1633  0708  3441               	retlw	0
  1634  0709  3400               
  1635                           	retlw	03Eh
  1636  070A  343E               	retlw	0
  1637  070B  3400               
  1638                           	retlw	07Fh
  1639  070C  347F               	retlw	0
  1640  070D  3400               
  1641                           	retlw	09h
  1642  070E  3409               	retlw	0
  1643  070F  3400               
  1644                           	retlw	09h
  1645  0710  3409               	retlw	0
  1646  0711  3400               
  1647                           	retlw	09h
  1648  0712  3409               	retlw	0
  1649  0713  3400               
  1650                           	retlw	06h
  1651  0714  3406               	retlw	0
  1652  0715  3400               
  1653                           	retlw	03Eh
  1654  0716  343E               	retlw	0
  1655  0717  3400               
  1656                           	retlw	041h
  1657  0718  3441               	retlw	0
  1658  0719  3400               
  1659                           	retlw	051h
  1660  071A  3451               	retlw	0
  1661  071B  3400               
  1662                           	retlw	021h
  1663  071C  3421               	retlw	0
  1664  071D  3400               
  1665                           	retlw	05Eh
  1666  071E  345E               	retlw	0
  1667  071F  3400               
  1668                           	retlw	07Fh
  1669  0720  347F               	retlw	0
  1670  0721  3400               
  1671                           	retlw	09h
  1672  0722  3409               	retlw	0
  1673  0723  3400               
  1674                           	retlw	019h
  1675  0724  3419               	retlw	0
  1676  0725  3400               
  1677                           	retlw	029h
  1678  0726  3429               	retlw	0
  1679  0727  3400               
  1680                           	retlw	046h
  1681  0728  3446               	retlw	0
  1682  0729  3400               
  1683                           	retlw	046h
  1684  072A  3446               	retlw	0
  1685  072B  3400               
  1686                           	retlw	049h
  1687  072C  3449               	retlw	0
  1688  072D  3400               
  1689                           	retlw	049h
  1690  072E  3449               	retlw	0
  1691  072F  3400               
  1692                           	retlw	049h
  1693  0730  3449               	retlw	0
  1694  0731  3400               
  1695                           	retlw	031h
  1696  0732  3431               	retlw	0
  1697  0733  3400               
  1698                           	retlw	01h
  1699  0734  3401               	retlw	0
  1700  0735  3400               
  1701                           	retlw	01h
  1702  0736  3401               	retlw	0
  1703  0737  3400               
  1704                           	retlw	07Fh
  1705  0738  347F               	retlw	0
  1706  0739  3400               
  1707                           	retlw	01h
  1708  073A  3401               	retlw	0
  1709  073B  3400               
  1710                           	retlw	01h
  1711  073C  3401               	retlw	0
  1712  073D  3400               
  1713                           	retlw	03Fh
  1714  073E  343F               	retlw	0
  1715  073F  3400               
  1716                           	retlw	040h
  1717  0740  3440               	retlw	0
  1718  0741  3400               
  1719                           	retlw	040h
  1720  0742  3440               	retlw	0
  1721  0743  3400               
  1722                           	retlw	040h
  1723  0744  3440               	retlw	0
  1724  0745  3400               
  1725                           	retlw	03Fh
  1726  0746  343F               	retlw	0
  1727  0747  3400               
  1728                           	retlw	01Fh
  1729  0748  341F               	retlw	0
  1730  0749  3400               
  1731                           	retlw	020h
  1732  074A  3420               	retlw	0
  1733  074B  3400               
  1734                           	retlw	040h
  1735  074C  3440               	retlw	0
  1736  074D  3400               
  1737                           	retlw	020h
  1738  074E  3420               	retlw	0
  1739  074F  3400               
  1740                           	retlw	01Fh
  1741  0750  341F               	retlw	0
  1742  0751  3400               
  1743                           	retlw	07Fh
  1744  0752  347F               	retlw	0
  1745  0753  3400               
  1746                           	retlw	020h
  1747  0754  3420               	retlw	0
  1748  0755  3400               
  1749                           	retlw	018h
  1750  0756  3418               	retlw	0
  1751  0757  3400               
  1752                           	retlw	020h
  1753  0758  3420               	retlw	0
  1754  0759  3400               
  1755                           	retlw	07Fh
  1756  075A  347F               	retlw	0
  1757  075B  3400               
  1758                           	retlw	063h
  1759  075C  3463               	retlw	0
  1760  075D  3400               
  1761                           	retlw	014h
  1762  075E  3414               	retlw	0
  1763  075F  3400               
  1764                           	retlw	08h
  1765  0760  3408               	retlw	0
  1766  0761  3400               
  1767                           	retlw	014h
  1768  0762  3414               	retlw	0
  1769  0763  3400               
  1770                           	retlw	063h
  1771  0764  3463               	retlw	0
  1772  0765  3400               
  1773                           	retlw	03h
  1774  0766  3403               	retlw	0
  1775  0767  3400               
  1776                           	retlw	04h
  1777  0768  3404               	retlw	0
  1778  0769  3400               
  1779                           	retlw	078h
  1780  076A  3478               	retlw	0
  1781  076B  3400               
  1782                           	retlw	04h
  1783  076C  3404               	retlw	0
  1784  076D  3400               
  1785                           	retlw	03h
  1786  076E  3403               	retlw	0
  1787  076F  3400               
  1788                           	retlw	061h
  1789  0770  3461               	retlw	0
  1790  0771  3400               
  1791                           	retlw	051h
  1792  0772  3451               	retlw	0
  1793  0773  3400               
  1794                           	retlw	049h
  1795  0774  3449               	retlw	0
  1796  0775  3400               
  1797                           	retlw	045h
  1798  0776  3445               	retlw	0
  1799  0777  3400               
  1800                           	retlw	043h
  1801  0778  3443               	retlw	0
  1802  0779  3400               
  1803                           	retlw	low(0)
  1804  077A  3400               	retlw	high(0)
  1805  077B  3400               
  1806                           	retlw	low(0)
  1807  077C  3400               	retlw	high(0)
  1808  077D  3400               
  1809                           	retlw	low(0)
  1810  077E  3400               	retlw	high(0)
  1811  077F  3400               
  1812                           	retlw	low(0)
  1813  0780  3400               	retlw	high(0)
  1814  0781  3400               
  1815                           	retlw	low(0)
  1816  0782  3400               	retlw	high(0)
  1817  0783  3400               
  1818                           	global __end_of_font
  1819                           __end_of_font:
  1820  0784                     	global	_dpowers
  1821                           psect	stringtext
  1822                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  1823                           	line	358
  1824                           _dpowers:
  1825  0784                     	retlw	01h
  1826  0784  3401               	retlw	0
  1827  0785  3400               
  1828                           	retlw	0Ah
  1829  0786  340A               	retlw	0
  1830  0787  3400               
  1831                           	retlw	064h
  1832  0788  3464               	retlw	0
  1833  0789  3400               
  1834                           	retlw	0E8h
  1835  078A  34E8               	retlw	03h
  1836  078B  3403               
  1837                           	retlw	010h
  1838  078C  3410               	retlw	027h
  1839  078D  3427               
  1840                           	global __end_of_dpowers
  1841                           __end_of_dpowers:
  1842  078E                     	global	_step_size
  1843                           psect	stringtext
  1844                           	file	"./Volume.h"
  1845                           	line	5
  1846                           _step_size:
  1847  078E                     	retlw	019h
  1848  078E  3419               	retlw	0
  1849  078F  3400               
  1850                           	global __end_of_step_size
  1851                           __end_of_step_size:
  1852  0790                     	global	_font
  1853                           	global	_dpowers
  1854                           	global	_step_size
  1855                           	global	_ir_input
  1856                           	global	__lastAdcResult
  1857                           	global	_lastInput
  1858                           	global	_lastVolume
  1859                           	global	__lastB
  1860                           	global	__lastA
  1861                           	global	_vol_motor
  1862                           	global	__inputUpdateRequired
  1863                           	global	_volume
  1864                           	global	__selectedInput
  1865                           	global	__selectedDisplay
  1866                           	global	_ADRESH
  1867                           _ADRESH	set	0x1E
  1868  001E                     	global	_PORTC
  1869                           _PORTC	set	0x7
  1870  0007                     	global	_PORTA
  1871                           _PORTA	set	0x5
  1872  0005                     	global	_SSPBUF
  1873                           _SSPBUF	set	0x13
  1874  0013                     	global	_PORTCbits
  1875                           _PORTCbits	set	0x7
  1876  0007                     	global	_PORTDbits
  1877                           _PORTDbits	set	0x8
  1878  0008                     	global	_SSPCON
  1879                           _SSPCON	set	0x14
  1880  0014                     	global	_PIR1bits
  1881                           _PIR1bits	set	0xC
  1882  000C                     	global	_PORTBbits
  1883                           _PORTBbits	set	0x6
  1884  0006                     	global	_INTCONbits
  1885                           _INTCONbits	set	0xB
  1886  000B                     	global	_ADCON0bits
  1887                           _ADCON0bits	set	0x1F
  1888  001F                     	global	_RC1
  1889                           _RC1	set	0x39
  1890  0039                     	global	_RC0
  1891                           _RC0	set	0x38
  1892  0038                     	global	_GIE
  1893                           _GIE	set	0x5F
  1894  005F                     	global	_ADRESL
  1895                           _ADRESL	set	0x9E
  1896  009E                     	global	_PIE1bits
  1897                           _PIE1bits	set	0x8C
  1898  008C                     	global	_ADCON1bits
  1899                           _ADCON1bits	set	0x9F
  1900  009F                     	global	_IOCBbits
  1901                           _IOCBbits	set	0x96
  1902  0096                     	global	_TRISCbits
  1903                           _TRISCbits	set	0x87
  1904  0087                     	global	_TRISEbits
  1905                           _TRISEbits	set	0x89
  1906  0089                     	global	_TRISBbits
  1907                           _TRISBbits	set	0x86
  1908  0086                     	global	_TRISAbits
  1909                           _TRISAbits	set	0x85
  1910  0085                     	global	_OSCCONbits
  1911                           _OSCCONbits	set	0x8F
  1912  008F                     	global	_SSPSTATbits
  1913                           _SSPSTATbits	set	0x94
  1914  0094                     	global	_TRISC
  1915                           _TRISC	set	0x87
  1916  0087                     	global	_TRISD
  1917                           _TRISD	set	0x88
  1918  0088                     	global	_SSPSTAT
  1919                           _SSPSTAT	set	0x94
  1920  0094                     	global	_ANSELbits
  1921                           _ANSELbits	set	0x188
  1922  0188                     	global	_ANSELHbits
  1923                           _ANSELHbits	set	0x189
  1924  0189                     	
  1925                           STR_1:	
  1926  0790                     	retlw	73	;'I'
  1927  0790  3449               	retlw	78	;'N'
  1928  0791  344E               	retlw	80	;'P'
  1929  0792  3450               	retlw	85	;'U'
  1930  0793  3455               	retlw	84	;'T'
  1931  0794  3454               	retlw	0
  1932  0795  3400               psect	stringtext
  1933                           	
  1934                           STR_2:	
  1935  0796                     	retlw	86	;'V'
  1936  0796  3456               	retlw	79	;'O'
  1937  0797  344F               	retlw	76	;'L'
  1938  0798  344C               	retlw	0
  1939  0799  3400               psect	stringtext
  1940                           	
  1941                           STR_3:	
  1942  079A                     	retlw	37	;'%'
  1943  079A  3425               	retlw	100	;'d'
  1944  079B  3464               	retlw	0
  1945  079C  3400               psect	stringtext
  1946                           ; #config settings
  1947                           global __CFG_FOSC$INTRC_CLKOUT
  1948                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1949  0000                     global __CFG_WDTE$OFF
  1950                           __CFG_WDTE$OFF equ 0x0
  1951  0000                     global __CFG_PWRTE$OFF
  1952                           __CFG_PWRTE$OFF equ 0x0
  1953  0000                     global __CFG_MCLRE$OFF
  1954                           __CFG_MCLRE$OFF equ 0x0
  1955  0000                     global __CFG_CP$OFF
  1956                           __CFG_CP$OFF equ 0x0
  1957  0000                     global __CFG_CPD$OFF
  1958                           __CFG_CPD$OFF equ 0x0
  1959  0000                     global __CFG_BOREN$ON
  1960                           __CFG_BOREN$ON equ 0x0
  1961  0000                     global __CFG_IESO$OFF
  1962                           __CFG_IESO$OFF equ 0x0
  1963  0000                     global __CFG_FCMEN$OFF
  1964                           __CFG_FCMEN$OFF equ 0x0
  1965  0000                     global __CFG_LVP$OFF
  1966                           __CFG_LVP$OFF equ 0x0
  1967  0000                     global __CFG_BOR4V$BOR21V
  1968                           __CFG_BOR4V$BOR21V equ 0x0
  1969  0000                     global __CFG_WRT$OFF
  1970                           __CFG_WRT$OFF equ 0x0
  1971  0000                     	file	"/tmp/xcXeSa37v"
  1972                           	line	#
  1973                           psect cinit,class=CODE,delta=2
  1974                           global start_initialization
  1975                           start_initialization:
  1976  0015                     
  1977                           global __initialization
  1978                           __initialization:
  1979  0015                     psect	bssBANK0,class=BANK0,space=1,noexec
  1980                           global __pbssBANK0
  1981                           __pbssBANK0:
  1982  005E                     _ir_input:
  1983  005E                            ds      4
  1984  005E                     
  1985                           __lastAdcResult:
  1986  0062                            ds      2
  1987  0062                     
  1988                           _lastInput:
  1989  0064                            ds      2
  1990  0064                     
  1991                           _lastVolume:
  1992  0066                            ds      2
  1993  0066                     
  1994                           __lastB:
  1995  0068                            ds      2
  1996  0068                     
  1997                           __lastA:
  1998  006A                            ds      2
  1999  006A                     
  2000                           _vol_motor:
  2001  006C                            ds      1
  2002  006C                     
  2003                           __inputUpdateRequired:
  2004  006D                            ds      1
  2005  006D                     
  2006                           psect	bssBANK1,class=BANK1,space=1,noexec
  2007                           global __pbssBANK1
  2008                           __pbssBANK1:
  2009  00EB                     _volume:
  2010  00EB                            ds      2
  2011  00EB                     
  2012                           __selectedInput:
  2013  00ED                            ds      2
  2014  00ED                     
  2015                           __selectedDisplay:
  2016  00EF                            ds      1
  2017  00EF                     
  2018                           	file	"/tmp/xcXeSa37v"
  2019                           	line	#
  2020                           psect clrtext,class=CODE,delta=2
  2021                           global clear_ram0
  2022                           ;	Called with FSR containing the base address, and
  2023                           ;	W with the last address+1
  2024                           clear_ram0:
  2025  05F5                     	clrwdt			;clear the watchdog before getting into this loop
  2026  05F5  0064               clrloop0:
  2027  05F6                     	clrf	indf		;clear RAM location pointed to by FSR
  2028  05F6  0180               	incf	fsr,f		;increment pointer
  2029  05F7  0A84               	xorwf	fsr,w		;XOR with final address
  2030  05F8  0604               	btfsc	status,2	;have we reached the end yet?
  2031  05F9  1903               	retlw	0		;all done for this memory range, return
  2032  05FA  3400               	xorwf	fsr,w		;XOR again to restore value
  2033  05FB  0604               	goto	clrloop0		;do the next byte
  2034  05FC  2DF6               
  2035                           ; Clear objects allocated to BANK0
  2036                           psect cinit,class=CODE,delta=2,merge=1
  2037                           	bcf	status, 7	;select IRP bank0
  2038  0015  1383               	movlw	low(__pbssBANK0)
  2039  0016  305E               	movwf	fsr
  2040  0017  0084               	movlw	low((__pbssBANK0)+010h)
  2041  0018  306E               	fcall	clear_ram0
  2042  0019  120A  118A  25F5  120A  118A  ; Clear objects allocated to BANK1
  2043                           psect cinit,class=CODE,delta=2,merge=1
  2044                           	bsf	status, 5	;RP0=1, select bank1
  2045  001E  1683               	bcf	status, 6	;RP1=0, select bank1
  2046  001F  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2047  0020  01EB               	clrf	((__pbssBANK1)+1)&07Fh
  2048  0021  01EC               	clrf	((__pbssBANK1)+2)&07Fh
  2049  0022  01ED               	clrf	((__pbssBANK1)+3)&07Fh
  2050  0023  01EE               	clrf	((__pbssBANK1)+4)&07Fh
  2051  0024  01EF               psect cinit,class=CODE,delta=2,merge=1
  2052                           global end_of_initialization,__end_of__initialization
  2053                           
  2054                           ;End of C runtime variable initialization code
  2055                           
  2056                           end_of_initialization:
  2057  0025                     __end_of__initialization:
  2058  0025                     clrf status
  2059  0025  0183               ljmp _main	;jump to C main() function
  2060  0026  160A  118A  2BD9   psect	cstackBANK1,class=BANK1,space=1,noexec
  2061                           global __pcstackBANK1
  2062                           __pcstackBANK1:
  2063  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2064  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2065  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2066  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2067  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2068  00A0                     	global	?___wmul
  2069                           ?___wmul:	; 2 bytes @ 0x0
  2070  00A0                     	global	?___lwdiv
  2071                           ?___lwdiv:	; 2 bytes @ 0x0
  2072  00A0                     	global	?___xxtofl
  2073                           ?___xxtofl:	; 4 bytes @ 0x0
  2074  00A0                     	global	spiWrite@data
  2075                           spiWrite@data:	; 1 bytes @ 0x0
  2076  00A0                     	global	___wmul@multiplier
  2077                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2078  00A0                     	global	___lwdiv@divisor
  2079                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2080  00A0                     	global	___xxtofl@val
  2081                           ___xxtofl@val:	; 4 bytes @ 0x0
  2082  00A0                     	ds	1
  2083  00A0                     ??_config:	; 1 bytes @ 0x1
  2084  00A1                     ?_write_space:	; 1 bytes @ 0x1
  2085  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2086  00A1                     	global	write_space@count
  2087                           write_space@count:	; 2 bytes @ 0x1
  2088  00A1                     	ds	1
  2089  00A1                     	global	___wmul@multiplicand
  2090                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2091  00A2                     	global	___lwdiv@dividend
  2092                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2093  00A2                     	ds	1
  2094  00A2                     ??_write_space:	; 1 bytes @ 0x3
  2095  00A3                     	ds	1
  2096  00A3                     ??___wmul:	; 1 bytes @ 0x4
  2097  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2098  00A4                     ??___xxtofl:	; 1 bytes @ 0x4
  2099  00A4                     	global	write_space@i
  2100                           write_space@i:	; 2 bytes @ 0x4
  2101  00A4                     	global	___wmul@product
  2102                           ___wmul@product:	; 2 bytes @ 0x4
  2103  00A4                     	ds	1
  2104  00A4                     	global	___lwdiv@quotient
  2105                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2106  00A5                     	ds	1
  2107  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2108  00A6                     	global	write_space@x
  2109                           write_space@x:	; 2 bytes @ 0x6
  2110  00A6                     	global	write_font@fontPos
  2111                           write_font@fontPos:	; 2 bytes @ 0x6
  2112  00A6                     	ds	1
  2113  00A6                     	global	___lwdiv@counter
  2114                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2115  00A7                     	ds	1
  2116  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2117  00A8                     	global	?___lwmod
  2118                           ?___lwmod:	; 2 bytes @ 0x8
  2119  00A8                     	global	___xxtofl@sign
  2120                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2121  00A8                     	global	___lwmod@divisor
  2122                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2123  00A8                     	ds	1
  2124  00A8                     	global	___xxtofl@exp
  2125                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2126  00A9                     	ds	1
  2127  00A9                     	global	___lwmod@dividend
  2128                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2129  00AA                     	global	___xxtofl@arg
  2130                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2131  00AA                     	ds	2
  2132  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2133  00AC                     	ds	1
  2134  00AC                     	global	___lwmod@counter
  2135                           ___lwmod@counter:	; 1 bytes @ 0xD
  2136  00AD                     	ds	1
  2137  00AD                     	global	?_sprintf
  2138                           ?_sprintf:	; 2 bytes @ 0xE
  2139  00AE                     	global	?___fladd
  2140                           ?___fladd:	; 4 bytes @ 0xE
  2141  00AE                     	global	write_font@x
  2142                           write_font@x:	; 2 bytes @ 0xE
  2143  00AE                     	global	sprintf@f
  2144                           sprintf@f:	; 2 bytes @ 0xE
  2145  00AE                     	global	___fladd@b
  2146                           ___fladd@b:	; 4 bytes @ 0xE
  2147  00AE                     	ds	2
  2148  00AE                     ??_write_char:	; 1 bytes @ 0x10
  2149  00B0                     	global	write_char@pos
  2150                           write_char@pos:	; 2 bytes @ 0x10
  2151  00B0                     	ds	2
  2152  00B0                     ??_sprintf:	; 1 bytes @ 0x12
  2153  00B2                     	global	write_char@c
  2154                           write_char@c:	; 1 bytes @ 0x12
  2155  00B2                     	global	___fladd@a
  2156                           ___fladd@a:	; 4 bytes @ 0x12
  2157  00B2                     	ds	1
  2158  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2159  00B3                     	global	write_text@text
  2160                           write_text@text:	; 2 bytes @ 0x13
  2161  00B3                     	ds	2
  2162  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2163  00B5                     	global	write_text@c
  2164                           write_text@c:	; 2 bytes @ 0x15
  2165  00B5                     	ds	1
  2166  00B5                     ??___fladd:	; 1 bytes @ 0x16
  2167  00B6                     	global	sprintf@ap
  2168                           sprintf@ap:	; 1 bytes @ 0x16
  2169  00B6                     	ds	1
  2170  00B6                     	global	sprintf@flag
  2171                           sprintf@flag:	; 1 bytes @ 0x17
  2172  00B7                     	ds	1
  2173  00B7                     	global	sprintf@prec
  2174                           sprintf@prec:	; 1 bytes @ 0x18
  2175  00B8                     	ds	1
  2176  00B8                     	global	sprintf@val
  2177                           sprintf@val:	; 2 bytes @ 0x19
  2178  00B9                     	ds	2
  2179  00B9                     	global	sprintf@sp
  2180                           sprintf@sp:	; 1 bytes @ 0x1B
  2181  00BB                     	ds	1
  2182  00BB                     	global	sprintf@c
  2183                           sprintf@c:	; 1 bytes @ 0x1C
  2184  00BC                     	ds	1
  2185  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2186  00BD                     	global	write_int@number
  2187                           write_int@number:	; 2 bytes @ 0x1D
  2188  00BD                     	ds	2
  2189  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2190  00BF                     	global	write_int@num
  2191                           write_int@num:	; 2 bytes @ 0x1F
  2192  00BF                     	ds	2
  2193  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2194  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2195  00C1                     	global	update_volume@spaces
  2196                           update_volume@spaces:	; 2 bytes @ 0x21
  2197  00C1                     	ds	1
  2198  00C1                     	global	___fladd@signs
  2199                           ___fladd@signs:	; 1 bytes @ 0x22
  2200  00C2                     	ds	1
  2201  00C2                     	global	___fladd@aexp
  2202                           ___fladd@aexp:	; 1 bytes @ 0x23
  2203  00C3                     	ds	1
  2204  00C3                     	global	___fladd@bexp
  2205                           ___fladd@bexp:	; 1 bytes @ 0x24
  2206  00C4                     	ds	1
  2207  00C4                     	global	___fladd@grs
  2208                           ___fladd@grs:	; 1 bytes @ 0x25
  2209  00C5                     	ds	1
  2210  00C5                     	global	?___fltol
  2211                           ?___fltol:	; 4 bytes @ 0x26
  2212  00C6                     	global	___fltol@f1
  2213                           ___fltol@f1:	; 4 bytes @ 0x26
  2214  00C6                     	ds	4
  2215  00C6                     ??___fltol:	; 1 bytes @ 0x2A
  2216  00CA                     	ds	5
  2217  00CA                     	global	___fltol@sign1
  2218                           ___fltol@sign1:	; 1 bytes @ 0x2F
  2219  00CF                     	ds	1
  2220  00CF                     	global	___fltol@exp1
  2221                           ___fltol@exp1:	; 1 bytes @ 0x30
  2222  00D0                     	ds	1
  2223  00D0                     	global	?_is_deadzone
  2224                           ?_is_deadzone:	; 2 bytes @ 0x31
  2225  00D1                     	global	is_deadzone@currentStep
  2226                           is_deadzone@currentStep:	; 2 bytes @ 0x31
  2227  00D1                     	ds	2
  2228  00D1                     	global	is_deadzone@adcResult
  2229                           is_deadzone@adcResult:	; 2 bytes @ 0x33
  2230  00D3                     	ds	2
  2231  00D3                     ??_is_deadzone:	; 1 bytes @ 0x35
  2232  00D5                     	ds	2
  2233  00D5                     	global	is_deadzone@deadzoneLow
  2234                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x37
  2235  00D7                     	ds	2
  2236  00D7                     	global	is_deadzone@deadzoneHigh
  2237                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x39
  2238  00D9                     	ds	2
  2239  00D9                     	global	_is_deadzone$899
  2240                           _is_deadzone$899:	; 1 bytes @ 0x3B
  2241  00DB                     	ds	1
  2242  00DB                     	global	is_deadzone@turnPoint
  2243                           is_deadzone@turnPoint:	; 2 bytes @ 0x3C
  2244  00DC                     	ds	2
  2245  00DC                     	global	?_get_volume
  2246                           ?_get_volume:	; 2 bytes @ 0x3E
  2247  00DE                     	global	get_volume@ad_result
  2248                           get_volume@ad_result:	; 2 bytes @ 0x3E
  2249  00DE                     	ds	2
  2250  00DE                     ??_get_volume:	; 1 bytes @ 0x40
  2251  00E0                     	ds	2
  2252  00E0                     	global	get_volume@currentStep
  2253                           get_volume@currentStep:	; 2 bytes @ 0x42
  2254  00E2                     	ds	2
  2255  00E2                     ??_update_vol_motor:	; 1 bytes @ 0x44
  2256  00E4                     	ds	1
  2257  00E4                     	global	update_vol_motor@ad_result
  2258                           update_vol_motor@ad_result:	; 2 bytes @ 0x45
  2259  00E5                     	ds	2
  2260  00E5                     	global	update_vol_motor@curPotmeterVol
  2261                           update_vol_motor@curPotmeterVol:	; 2 bytes @ 0x47
  2262  00E7                     	ds	2
  2263  00E7                     ??_main:	; 1 bytes @ 0x49
  2264  00E9                     	ds	2
  2265  00E9                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2266                           global __pcstackCOMMON
  2267                           __pcstackCOMMON:
  2268  0070                     ?_config:	; 1 bytes @ 0x0
  2269  0070                     ?_update_volume:	; 1 bytes @ 0x0
  2270  0070                     ?_update_input:	; 1 bytes @ 0x0
  2271  0070                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2272  0070                     ?_update_vol_motor:	; 1 bytes @ 0x0
  2273  0070                     ?_handle_rotary:	; 1 bytes @ 0x0
  2274  0070                     ??_handle_rotary:	; 1 bytes @ 0x0
  2275  0070                     ?_start_receive:	; 1 bytes @ 0x0
  2276  0070                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2277  0070                     ?_spiWrite:	; 1 bytes @ 0x0
  2278  0070                     ?_display_write_start:	; 1 bytes @ 0x0
  2279  0070                     ?_display_write_end:	; 1 bytes @ 0x0
  2280  0070                     ?_write_char:	; 1 bytes @ 0x0
  2281  0070                     ?_init_adc:	; 1 bytes @ 0x0
  2282  0070                     ?_handle_remote:	; 1 bytes @ 0x0
  2283  0070                     ??_handle_remote:	; 1 bytes @ 0x0
  2284  0070                     ?_main:	; 1 bytes @ 0x0
  2285  0070                     ?_isr:	; 1 bytes @ 0x0
  2286  0070                     ?_display_init:	; 1 bytes @ 0x0
  2287  0070                     	global	?i1___wmul
  2288                           ?i1___wmul:	; 2 bytes @ 0x0
  2289  0070                     	global	?i1___lwdiv
  2290                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2291  0070                     	global	?i1___xxtofl
  2292                           ?i1___xxtofl:	; 4 bytes @ 0x0
  2293  0070                     	global	handle_remote@found
  2294                           handle_remote@found:	; 1 bytes @ 0x0
  2295  0070                     	global	i1___wmul@multiplier
  2296                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2297  0070                     	global	i1___lwdiv@divisor
  2298                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2299  0070                     	global	i1___xxtofl@val
  2300                           i1___xxtofl@val:	; 4 bytes @ 0x0
  2301  0070                     	ds	1
  2302  0070                     ??_start_receive:	; 1 bytes @ 0x1
  2303  0071                     	ds	1
  2304  0071                     	global	i1___wmul@multiplicand
  2305                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2306  0072                     	global	i1___lwdiv@dividend
  2307                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2308  0072                     	ds	1
  2309  0072                     	global	handle_rotary@portA
  2310                           handle_rotary@portA:	; 2 bytes @ 0x3
  2311  0073                     	ds	1
  2312  0073                     ??i1___wmul:	; 1 bytes @ 0x4
  2313  0074                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2314  0074                     ??i1___xxtofl:	; 1 bytes @ 0x4
  2315  0074                     	global	i1___wmul@product
  2316                           i1___wmul@product:	; 2 bytes @ 0x4
  2317  0074                     	ds	1
  2318  0074                     	global	handle_rotary@portB
  2319                           handle_rotary@portB:	; 2 bytes @ 0x5
  2320  0075                     	global	i1___lwdiv@quotient
  2321                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2322  0075                     	ds	2
  2323  0075                     	global	i1___lwdiv@counter
  2324                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2325  0077                     	ds	1
  2326  0077                     	global	i1___xxtofl@sign
  2327                           i1___xxtofl@sign:	; 1 bytes @ 0x8
  2328  0078                     	ds	1
  2329  0078                     	global	i1___xxtofl@exp
  2330                           i1___xxtofl@exp:	; 1 bytes @ 0x9
  2331  0079                     	global	start_receive@i
  2332                           start_receive@i:	; 2 bytes @ 0x9
  2333  0079                     	ds	1
  2334  0079                     	global	i1___xxtofl@arg
  2335                           i1___xxtofl@arg:	; 4 bytes @ 0xA
  2336  007A                     	ds	4
  2337  007A                     ??_handle_potmeter:	; 1 bytes @ 0xE
  2338  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2339                           global __pcstackBANK0
  2340                           __pcstackBANK0:
  2341  0020                     	global	?i1___fladd
  2342                           ?i1___fladd:	; 4 bytes @ 0x0
  2343  0020                     	global	i1___fladd@b
  2344                           i1___fladd@b:	; 4 bytes @ 0x0
  2345  0020                     	ds	4
  2346  0020                     	global	i1___fladd@a
  2347                           i1___fladd@a:	; 4 bytes @ 0x4
  2348  0024                     	ds	4
  2349  0024                     ??i1___fladd:	; 1 bytes @ 0x8
  2350  0028                     	ds	12
  2351  0028                     	global	i1___fladd@signs
  2352                           i1___fladd@signs:	; 1 bytes @ 0x14
  2353  0034                     	ds	1
  2354  0034                     	global	i1___fladd@aexp
  2355                           i1___fladd@aexp:	; 1 bytes @ 0x15
  2356  0035                     	ds	1
  2357  0035                     	global	i1___fladd@bexp
  2358                           i1___fladd@bexp:	; 1 bytes @ 0x16
  2359  0036                     	ds	1
  2360  0036                     	global	i1___fladd@grs
  2361                           i1___fladd@grs:	; 1 bytes @ 0x17
  2362  0037                     	ds	1
  2363  0037                     	global	?i1___fltol
  2364                           ?i1___fltol:	; 4 bytes @ 0x18
  2365  0038                     	global	i1___fltol@f1
  2366                           i1___fltol@f1:	; 4 bytes @ 0x18
  2367  0038                     	ds	4
  2368  0038                     ??i1___fltol:	; 1 bytes @ 0x1C
  2369  003C                     	ds	5
  2370  003C                     	global	i1___fltol@sign1
  2371                           i1___fltol@sign1:	; 1 bytes @ 0x21
  2372  0041                     	ds	1
  2373  0041                     	global	i1___fltol@exp1
  2374                           i1___fltol@exp1:	; 1 bytes @ 0x22
  2375  0042                     	ds	1
  2376  0042                     	global	?i1_is_deadzone
  2377                           ?i1_is_deadzone:	; 2 bytes @ 0x23
  2378  0043                     	global	i1is_deadzone@currentStep
  2379                           i1is_deadzone@currentStep:	; 2 bytes @ 0x23
  2380  0043                     	ds	2
  2381  0043                     	global	i1is_deadzone@adcResult
  2382                           i1is_deadzone@adcResult:	; 2 bytes @ 0x25
  2383  0045                     	ds	2
  2384  0045                     ??i1_is_deadzone:	; 1 bytes @ 0x27
  2385  0047                     	ds	2
  2386  0047                     	global	i1is_deadzone@deadzoneLow
  2387                           i1is_deadzone@deadzoneLow:	; 2 bytes @ 0x29
  2388  0049                     	ds	2
  2389  0049                     	global	i1is_deadzone@deadzoneHigh
  2390                           i1is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2B
  2391  004B                     	ds	2
  2392  004B                     	global	i1_is_deadzone$899
  2393                           i1_is_deadzone$899:	; 1 bytes @ 0x2D
  2394  004D                     	ds	1
  2395  004D                     	global	i1is_deadzone@turnPoint
  2396                           i1is_deadzone@turnPoint:	; 2 bytes @ 0x2E
  2397  004E                     	ds	2
  2398  004E                     	global	?i1_get_volume
  2399                           ?i1_get_volume:	; 2 bytes @ 0x30
  2400  0050                     	global	i1get_volume@ad_result
  2401                           i1get_volume@ad_result:	; 2 bytes @ 0x30
  2402  0050                     	ds	2
  2403  0050                     ??i1_get_volume:	; 1 bytes @ 0x32
  2404  0052                     	ds	2
  2405  0052                     	global	i1get_volume@currentStep
  2406                           i1get_volume@currentStep:	; 2 bytes @ 0x34
  2407  0054                     	ds	2
  2408  0054                     	global	handle_potmeter@newVol
  2409                           handle_potmeter@newVol:	; 2 bytes @ 0x36
  2410  0056                     	ds	2
  2411  0056                     	global	handle_potmeter@ad_result
  2412                           handle_potmeter@ad_result:	; 2 bytes @ 0x38
  2413  0058                     	ds	2
  2414  0058                     ??_isr:	; 1 bytes @ 0x3A
  2415  005A                     	ds	4
  2416  005A                     ;!
  2417                           ;!Data Sizes:
  2418                           ;!    Strings     13
  2419                           ;!    Constant    382
  2420                           ;!    Data        0
  2421                           ;!    BSS         21
  2422                           ;!    Persistent  0
  2423                           ;!    Stack       0
  2424                           ;!
  2425                           ;!Auto Spaces:
  2426                           ;!    Space          Size  Autos    Used
  2427                           ;!    COMMON           14     14      14
  2428                           ;!    BANK0            80     62      78
  2429                           ;!    BANK1            80     75      80
  2430                           ;!    BANK3            96      0       0
  2431                           ;!    BANK2            96      0       0
  2432                           
  2433                           ;!
  2434                           ;!Pointer List with Targets:
  2435                           ;!
  2436                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2437                           ;!		 -> STR_3(CODE[3]), 
  2438                           ;!
  2439                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2440                           ;!		 -> write_int@num(BANK1[2]), 
  2441                           ;!
  2442                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2443                           ;!		 -> ?_sprintf(BANK1[2]), 
  2444                           ;!
  2445                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2446                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2447                           ;!
  2448                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2449                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2450                           ;!
  2451                           
  2452                           
  2453                           ;!
  2454                           ;!Critical Paths under _main in COMMON
  2455                           ;!
  2456                           ;!    None.
  2457                           ;!
  2458                           ;!Critical Paths under _isr in COMMON
  2459                           ;!
  2460                           ;!    _start_receive->_handle_remote
  2461                           ;!    i1_is_deadzone->i1___xxtofl
  2462                           ;!    i1___fltol->i1___xxtofl
  2463                           ;!    i1___fladd->i1___xxtofl
  2464                           ;!
  2465                           ;!Critical Paths under _main in BANK0
  2466                           ;!
  2467                           ;!    None.
  2468                           ;!
  2469                           ;!Critical Paths under _isr in BANK0
  2470                           ;!
  2471                           ;!    _isr->_handle_potmeter
  2472                           ;!    _handle_potmeter->i1_get_volume
  2473                           ;!    i1_get_volume->i1_is_deadzone
  2474                           ;!    i1_is_deadzone->i1___fltol
  2475                           ;!    i1___fltol->i1___fladd
  2476                           ;!
  2477                           ;!Critical Paths under _main in BANK1
  2478                           ;!
  2479                           ;!    _main->_update_vol_motor
  2480                           ;!    _update_volume->_write_int
  2481                           ;!    _update_vol_motor->_get_volume
  2482                           ;!    _get_volume->_is_deadzone
  2483                           ;!    _is_deadzone->___fltol
  2484                           ;!    ___fltol->___fladd
  2485                           ;!    ___fladd->___xxtofl
  2486                           ;!    _update_input->_write_int
  2487                           ;!    _write_space->_spiWrite
  2488                           ;!    _write_int->_sprintf
  2489                           ;!    _write_text->_write_char
  2490                           ;!    _write_char->_write_font
  2491                           ;!    _write_font->___wmul
  2492                           ;!    _sprintf->___lwmod
  2493                           ;!    ___lwmod->___lwdiv
  2494                           ;!    _display_init->_spiWrite
  2495                           ;!
  2496                           ;!Critical Paths under _isr in BANK1
  2497                           ;!
  2498                           ;!    None.
  2499                           ;!
  2500                           ;!Critical Paths under _main in BANK3
  2501                           ;!
  2502                           ;!    None.
  2503                           ;!
  2504                           ;!Critical Paths under _isr in BANK3
  2505                           ;!
  2506                           ;!    None.
  2507                           ;!
  2508                           ;!Critical Paths under _main in BANK2
  2509                           ;!
  2510                           ;!    None.
  2511                           ;!
  2512                           ;!Critical Paths under _isr in BANK2
  2513                           ;!
  2514                           ;!    None.
  2515                           
  2516 ;;
  2517 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2518 ;;
  2519                           
  2520                           ;!
  2521                           ;!Call Graph Tables:
  2522                           ;!
  2523                           ;! ---------------------------------------------------------------------------------
  2524                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2525                           ;! ---------------------------------------------------------------------------------
  2526                           ;! (0) _main                                                 2     2      0   15886
  2527                           ;!                                             73 BANK1      2     2      0
  2528                           ;!              _activateSelectedRelay
  2529                           ;!                             _config
  2530                           ;!                       _update_input
  2531                           ;!                   _update_vol_motor
  2532                           ;!                      _update_volume
  2533                           ;! ---------------------------------------------------------------------------------
  2534                           ;! (1) _update_volume                                        2     2      0    5526
  2535                           ;!                                             33 BANK1      2     2      0
  2536                           ;!                  _display_write_end
  2537                           ;!                _display_write_start
  2538                           ;!                          _write_int
  2539                           ;!                        _write_space
  2540                           ;!                         _write_text
  2541                           ;! ---------------------------------------------------------------------------------
  2542                           ;! (1) _update_vol_motor                                     5     5      0    4836
  2543                           ;!                                             68 BANK1      5     5      0
  2544                           ;!                         _get_volume
  2545                           ;! ---------------------------------------------------------------------------------
  2546                           ;! (2) _get_volume                                           6     4      2    4723
  2547                           ;!                                             62 BANK1      6     4      2
  2548                           ;!                            ___lwdiv
  2549                           ;!                        _is_deadzone
  2550                           ;! ---------------------------------------------------------------------------------
  2551                           ;! (3) _is_deadzone                                         13     9      4    3998
  2552                           ;!                                             49 BANK1     13     9      4
  2553                           ;!                            ___fladd
  2554                           ;!                            ___fltol
  2555                           ;!                             ___wmul
  2556                           ;!                           ___xxtofl
  2557                           ;! ---------------------------------------------------------------------------------
  2558                           ;! (4) ___xxtofl                                            14    10      4     474
  2559                           ;!                                              0 BANK1     14    10      4
  2560                           ;! ---------------------------------------------------------------------------------
  2561                           ;! (4) ___fltol                                             11     7      4     381
  2562                           ;!                                             38 BANK1     11     7      4
  2563                           ;!                            ___fladd (ARG)
  2564                           ;!                           ___xxtofl (ARG)
  2565                           ;! ---------------------------------------------------------------------------------
  2566                           ;! (4) ___fladd                                             24    16      8    2414
  2567                           ;!                                             14 BANK1     24    16      8
  2568                           ;!                           ___xxtofl (ARG)
  2569                           ;! ---------------------------------------------------------------------------------
  2570                           ;! (1) _update_input                                         0     0      0    5502
  2571                           ;!                  _display_write_end
  2572                           ;!                _display_write_start
  2573                           ;!                          _write_int
  2574                           ;!                        _write_space
  2575                           ;!                         _write_text
  2576                           ;! ---------------------------------------------------------------------------------
  2577                           ;! (2) _write_space                                          7     5      2     266
  2578                           ;!                                              1 BANK1      7     5      2
  2579                           ;!                           _spiWrite
  2580                           ;! ---------------------------------------------------------------------------------
  2581                           ;! (2) _write_int                                            4     2      2    3937
  2582                           ;!                                             29 BANK1      4     2      2
  2583                           ;!                            _sprintf
  2584                           ;!                         _write_char
  2585                           ;!                         _write_text
  2586                           ;! ---------------------------------------------------------------------------------
  2587                           ;! (2) _write_text                                           4     2      2    1299
  2588                           ;!                                             19 BANK1      4     2      2
  2589                           ;!                         _write_char
  2590                           ;! ---------------------------------------------------------------------------------
  2591                           ;! (3) _write_char                                           3     3      0    1003
  2592                           ;!                                             16 BANK1      3     3      0
  2593                           ;!                         _write_font
  2594                           ;! ---------------------------------------------------------------------------------
  2595                           ;! (4) _write_font                                          10     8      2     736
  2596                           ;!                                              6 BANK1     10     8      2
  2597                           ;!                             ___wmul
  2598                           ;!                           _spiWrite
  2599                           ;! ---------------------------------------------------------------------------------
  2600                           ;! (5) ___wmul                                               6     2      4     396
  2601                           ;!                                              0 BANK1      6     2      4
  2602                           ;! ---------------------------------------------------------------------------------
  2603                           ;! (3) _sprintf                                             23    19      4    1363
  2604                           ;!                                             14 BANK1     15    11      4
  2605                           ;!                            ___lwdiv
  2606                           ;!                            ___lwmod
  2607                           ;! ---------------------------------------------------------------------------------
  2608                           ;! (4) ___lwmod                                              6     2      4     311
  2609                           ;!                                              8 BANK1      6     2      4
  2610                           ;!                            ___lwdiv (ARG)
  2611                           ;! ---------------------------------------------------------------------------------
  2612                           ;! (4) ___lwdiv                                              8     4      4     466
  2613                           ;!                                              0 BANK1      8     4      4
  2614                           ;! ---------------------------------------------------------------------------------
  2615                           ;! (2) _display_write_start                                  0     0      0       0
  2616                           ;! ---------------------------------------------------------------------------------
  2617                           ;! (2) _display_write_end                                    0     0      0       0
  2618                           ;! ---------------------------------------------------------------------------------
  2619                           ;! (1) _config                                               3     3      0      22
  2620                           ;!                                              1 BANK1      3     3      0
  2621                           ;!                       _display_init
  2622                           ;!                           _init_adc
  2623                           ;! ---------------------------------------------------------------------------------
  2624                           ;! (2) _init_adc                                             0     0      0       0
  2625                           ;! ---------------------------------------------------------------------------------
  2626                           ;! (2) _display_init                                         0     0      0      22
  2627                           ;!                           _spiWrite
  2628                           ;! ---------------------------------------------------------------------------------
  2629                           ;! (5) _spiWrite                                             1     1      0      22
  2630                           ;!                                              0 BANK1      1     1      0
  2631                           ;! ---------------------------------------------------------------------------------
  2632                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2633                           ;! ---------------------------------------------------------------------------------
  2634                           ;! Estimated maximum stack depth 5
  2635                           ;! ---------------------------------------------------------------------------------
  2636                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2637                           ;! ---------------------------------------------------------------------------------
  2638                           ;! (7) _isr                                                  4     4      0    3792
  2639                           ;!                                             58 BANK0      4     4      0
  2640                           ;!                    _handle_potmeter
  2641                           ;!                      _handle_rotary
  2642                           ;!                      _start_receive
  2643                           ;! ---------------------------------------------------------------------------------
  2644                           ;! (8) _start_receive                                       10    10      0      53
  2645                           ;!                                              1 COMMON    10    10      0
  2646                           ;!                      _handle_remote
  2647                           ;! ---------------------------------------------------------------------------------
  2648                           ;! (9) _handle_remote                                        1     1      0       7
  2649                           ;!                                              0 COMMON     1     1      0
  2650                           ;! ---------------------------------------------------------------------------------
  2651                           ;! (8) _handle_rotary                                        7     7      0     134
  2652                           ;!                                              0 COMMON     7     7      0
  2653                           ;! ---------------------------------------------------------------------------------
  2654                           ;! (8) _handle_potmeter                                      4     4      0    3605
  2655                           ;!                                             54 BANK0      4     4      0
  2656                           ;!                       i1_get_volume
  2657                           ;! ---------------------------------------------------------------------------------
  2658                           ;! (9) i1_get_volume                                         6     4      2    3493
  2659                           ;!                                             48 BANK0      6     4      2
  2660                           ;!                          i1___lwdiv
  2661                           ;!                      i1_is_deadzone
  2662                           ;! ---------------------------------------------------------------------------------
  2663                           ;! (10) i1_is_deadzone                                      13     9      4    3120
  2664                           ;!                                             35 BANK0     13     9      4
  2665                           ;!                          i1___fladd
  2666                           ;!                          i1___fltol
  2667                           ;!                           i1___wmul
  2668                           ;!                         i1___xxtofl
  2669                           ;! ---------------------------------------------------------------------------------
  2670                           ;! (11) i1___xxtofl                                         14    10      4     374
  2671                           ;!                                              0 COMMON    14    10      4
  2672                           ;! ---------------------------------------------------------------------------------
  2673                           ;! (11) i1___wmul                                            6     2      4     144
  2674                           ;!                                              0 COMMON     6     2      4
  2675                           ;! ---------------------------------------------------------------------------------
  2676                           ;! (11) i1___fltol                                          11     7      4     281
  2677                           ;!                                             24 BANK0     11     7      4
  2678                           ;!                          i1___fladd (ARG)
  2679                           ;!                         i1___xxtofl (ARG)
  2680                           ;! ---------------------------------------------------------------------------------
  2681                           ;! (11) i1___fladd                                          24    16      8    2088
  2682                           ;!                                              0 BANK0     24    16      8
  2683                           ;!                         i1___xxtofl (ARG)
  2684                           ;! ---------------------------------------------------------------------------------
  2685                           ;! (10) i1___lwdiv                                           8     4      4     214
  2686                           ;!                                              0 COMMON     8     4      4
  2687                           ;! ---------------------------------------------------------------------------------
  2688                           ;! Estimated maximum stack depth 11
  2689                           ;! ---------------------------------------------------------------------------------
  2690                           ;!
  2691                           ;! Call Graph Graphs:
  2692                           ;!
  2693                           ;! _main (ROOT)
  2694                           ;!   _activateSelectedRelay
  2695                           ;!   _config
  2696                           ;!     _display_init
  2697                           ;!       _spiWrite
  2698                           ;!     _init_adc
  2699                           ;!   _update_input
  2700                           ;!     _display_write_end
  2701                           ;!     _display_write_start
  2702                           ;!     _write_int
  2703                           ;!       _sprintf
  2704                           ;!         ___lwdiv
  2705                           ;!         ___lwmod
  2706                           ;!           ___lwdiv (ARG)
  2707                           ;!       _write_char
  2708                           ;!         _write_font
  2709                           ;!           ___wmul
  2710                           ;!           _spiWrite
  2711                           ;!       _write_text
  2712                           ;!         _write_char
  2713                           ;!           _write_font
  2714                           ;!             ___wmul
  2715                           ;!             _spiWrite
  2716                           ;!     _write_space
  2717                           ;!       _spiWrite
  2718                           ;!     _write_text
  2719                           ;!       _write_char
  2720                           ;!         _write_font
  2721                           ;!           ___wmul
  2722                           ;!           _spiWrite
  2723                           ;!   _update_vol_motor
  2724                           ;!     _get_volume
  2725                           ;!       ___lwdiv
  2726                           ;!       _is_deadzone
  2727                           ;!         ___fladd
  2728                           ;!           ___xxtofl (ARG)
  2729                           ;!         ___fltol
  2730                           ;!           ___fladd (ARG)
  2731                           ;!             ___xxtofl (ARG)
  2732                           ;!           ___xxtofl (ARG)
  2733                           ;!         ___wmul
  2734                           ;!         ___xxtofl
  2735                           ;!   _update_volume
  2736                           ;!     _display_write_end
  2737                           ;!     _display_write_start
  2738                           ;!     _write_int
  2739                           ;!       _sprintf
  2740                           ;!         ___lwdiv
  2741                           ;!         ___lwmod
  2742                           ;!           ___lwdiv (ARG)
  2743                           ;!       _write_char
  2744                           ;!         _write_font
  2745                           ;!           ___wmul
  2746                           ;!           _spiWrite
  2747                           ;!       _write_text
  2748                           ;!         _write_char
  2749                           ;!           _write_font
  2750                           ;!             ___wmul
  2751                           ;!             _spiWrite
  2752                           ;!     _write_space
  2753                           ;!       _spiWrite
  2754                           ;!     _write_text
  2755                           ;!       _write_char
  2756                           ;!         _write_font
  2757                           ;!           ___wmul
  2758                           ;!           _spiWrite
  2759                           ;!
  2760                           ;! _isr (ROOT)
  2761                           ;!   _handle_potmeter
  2762                           ;!     i1_get_volume
  2763                           ;!       i1___lwdiv
  2764                           ;!       i1_is_deadzone
  2765                           ;!         i1___fladd
  2766                           ;!           i1___xxtofl (ARG)
  2767                           ;!         i1___fltol
  2768                           ;!           i1___fladd (ARG)
  2769                           ;!             i1___xxtofl (ARG)
  2770                           ;!           i1___xxtofl (ARG)
  2771                           ;!         i1___wmul
  2772                           ;!         i1___xxtofl
  2773                           ;!   _handle_rotary
  2774                           ;!   _start_receive
  2775                           ;!     _handle_remote
  2776                           ;!
  2777                           
  2778                           ;! Address spaces:
  2779                           
  2780                           ;!Name               Size   Autos  Total    Cost      Usage
  2781                           ;!BITCOMMON            E      0       0       0        0.0%
  2782                           ;!EEDATA             100      0       0       0        0.0%
  2783                           ;!NULL                 0      0       0       0        0.0%
  2784                           ;!CODE                 0      0       0       0        0.0%
  2785                           ;!COMMON               E      E       E       1      100.0%
  2786                           ;!BITSFR0              0      0       0       1        0.0%
  2787                           ;!SFR0                 0      0       0       1        0.0%
  2788                           ;!BITSFR1              0      0       0       2        0.0%
  2789                           ;!SFR1                 0      0       0       2        0.0%
  2790                           ;!STACK                0      0       0       2        0.0%
  2791                           ;!ABS                  0      0      AC       3        0.0%
  2792                           ;!BITBANK0            50      0       0       4        0.0%
  2793                           ;!BITSFR3              0      0       0       4        0.0%
  2794                           ;!SFR3                 0      0       0       4        0.0%
  2795                           ;!BANK0               50     3E      4E       5       97.5%
  2796                           ;!BITSFR2              0      0       0       5        0.0%
  2797                           ;!SFR2                 0      0       0       5        0.0%
  2798                           ;!BITBANK1            50      0       0       6        0.0%
  2799                           ;!BANK1               50     4B      50       7      100.0%
  2800                           ;!BITBANK3            60      0       0       8        0.0%
  2801                           ;!BANK3               60      0       0       9        0.0%
  2802                           ;!BITBANK2            60      0       0      10        0.0%
  2803                           ;!BANK2               60      0       0      11        0.0%
  2804                           ;!DATA                 0      0      AC      12        0.0%
  2805                           
  2806                           	global	_main
  2807                           
  2808 ;; *************** function _main *****************
  2809 ;; Defined at:
  2810 ;;		line 26 in file "main.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;		None
  2813 ;; Auto vars:     Size  Location     Type
  2814 ;;		None
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : B00/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2824 ;;      Params:         0       0       0       0       0
  2825 ;;      Locals:         0       0       0       0       0
  2826 ;;      Temps:          0       0       2       0       0
  2827 ;;      Totals:         0       0       2       0       0
  2828 ;;Total ram usage:        2 bytes
  2829 ;; Hardware stack levels required when called:   11
  2830 ;; This function calls:
  2831 ;;		_activateSelectedRelay
  2832 ;;		_config
  2833 ;;		_update_input
  2834 ;;		_update_vol_motor
  2835 ;;		_update_volume
  2836 ;; This function is called by:
  2837 ;;		Startup code after reset
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2841                           	file	"main.c"
  2842                           	line	26
  2843                           global __pmaintext
  2844                           __pmaintext:	;psect for function _main
  2845  13D9                     psect	maintext
  2846                           	file	"main.c"
  2847                           	line	26
  2848                           	global	__size_of_main
  2849                           	__size_of_main	equ	__end_of_main-_main
  2850  0031                     	
  2851                           _main:	
  2852  13D9                     ;incstack = 0
  2853 ;; hardware stack exceeded
  2854                           	opt	stack 0
  2855                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2856                           	line	28
  2857                           	
  2858                           l3536:	
  2859  13D9                     ;main.c: 28:     config();
  2860                           	fcall	_config
  2861  13D9  160A  118A  272E  160A  118A  	goto	l3538
  2862  13DE  2BDF               	line	32
  2863                           ;main.c: 32:     while(1)
  2864                           	
  2865                           l57:	
  2866  13DF                     	line	34
  2867                           	
  2868                           l3538:	
  2869  13DF                     ;main.c: 33:     {;main.c: 34:         if (!ADCON0bits.GO)
  2870                           	bcf	status, 5	;RP0=0, select bank0
  2871  13DF  1283               	bcf	status, 6	;RP1=0, select bank0
  2872  13E0  1303               	btfsc	(31),1	;volatile
  2873  13E1  189F               	goto	u4551
  2874  13E2  2BE4               	goto	u4550
  2875  13E3  2BE5               u4551:
  2876  13E4                     	goto	l3542
  2877  13E4  2BE7               u4550:
  2878  13E5                     	line	35
  2879                           	
  2880                           l3540:	
  2881  13E5                     ;main.c: 35:             ADCON0bits.GO = 1;
  2882                           	bsf	(31),1	;volatile
  2883  13E5  149F               	goto	l3542
  2884  13E6  2BE7               	
  2885                           l58:	
  2886  13E7                     	line	38
  2887                           	
  2888                           l3542:	
  2889  13E7                     ;main.c: 38:         update_volume();
  2890                           	fcall	_update_volume
  2891  13E7  160A  118A  2797  160A  118A  	line	39
  2892                           ;main.c: 39:         update_input();
  2893                           	fcall	_update_input
  2894  13EC  120A  118A  25A1  160A  118A  	line	42
  2895                           	
  2896                           l3544:	
  2897  13F1                     ;main.c: 42:         activateSelectedRelay();
  2898                           	fcall	_activateSelectedRelay
  2899  13F1  160A  118A  2479  160A  118A  	line	44
  2900                           	
  2901                           l3546:	
  2902  13F6                     ;main.c: 44:         update_vol_motor();
  2903                           	fcall	_update_vol_motor
  2904  13F6  120A  158A  208C  160A  118A  	line	46
  2905                           	
  2906                           l3548:	
  2907  13FB                     ;main.c: 46:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2908                           	opt asmopt_push
  2909                           opt asmopt_off
  2910                           movlw	13
  2911  13FB  300D               	bsf	status, 5	;RP0=1, select bank1
  2912  13FC  1683               	bcf	status, 6	;RP1=0, select bank1
  2913  13FD  1303               movwf	((??_main+0)^080h+0+1),f
  2914  13FE  00EA               	movlw	251
  2915  13FF  30FB               movwf	((??_main+0)^080h+0),f
  2916  1400  00E9               	u4597:
  2917  1401                     decfsz	((??_main+0)^080h+0),f
  2918  1401  0BE9               	goto	u4597
  2919  1402  2C01               	decfsz	((??_main+0)^080h+0+1),f
  2920  1403  0BEA               	goto	u4597
  2921  1404  2C01               opt asmopt_pop
  2922                           
  2923                           	goto	l3538
  2924  1405  2BDF               	line	47
  2925                           ;main.c: 47:     }
  2926                           	
  2927                           l59:	
  2928  1406                     	goto	l3538
  2929  1406  2BDF               	
  2930                           l60:	
  2931  1407                     	line	49
  2932                           	
  2933                           l61:	
  2934  1407                     	global	start
  2935                           	ljmp	start
  2936  1407  120A  118A  2812   	opt stack 0
  2937                           GLOBAL	__end_of_main
  2938                           	__end_of_main:
  2939  140A                     	signat	_main,89
  2940                           	global	_update_volume
  2941                           
  2942 ;; *************** function _update_volume *****************
  2943 ;; Defined at:
  2944 ;;		line 83 in file "Display.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  spaces          2   33[BANK1 ] int 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       0       2       0       0
  2960 ;;      Temps:          0       0       0       0       0
  2961 ;;      Totals:         0       0       2       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:   10
  2965 ;; This function calls:
  2966 ;;		_display_write_end
  2967 ;;		_display_write_start
  2968 ;;		_write_int
  2969 ;;		_write_space
  2970 ;;		_write_text
  2971 ;; This function is called by:
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2976                           	file	"Display.c"
  2977                           	line	83
  2978                           global __ptext1
  2979                           __ptext1:	;psect for function _update_volume
  2980  1797                     psect	text1
  2981                           	file	"Display.c"
  2982                           	line	83
  2983                           	global	__size_of_update_volume
  2984                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2985  0069                     	
  2986                           _update_volume:	
  2987  1797                     ;incstack = 0
  2988 ;; hardware stack exceeded
  2989                           	opt	stack 0
  2990                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2991                           	line	85
  2992                           	
  2993                           l3384:	
  2994  1797                     ;Display.c: 85:     if (lastVolume == volume) return;
  2995                           	bsf	status, 5	;RP0=1, select bank1
  2996  1797  1683               	bcf	status, 6	;RP1=0, select bank1
  2997  1798  1303               	movf	(_volume+1)^080h,w
  2998  1799  086C               	bcf	status, 5	;RP0=0, select bank0
  2999  179A  1283               	bcf	status, 6	;RP1=0, select bank0
  3000  179B  1303               	xorwf	(_lastVolume+1),w
  3001  179C  0667               	skipz
  3002  179D  1D03               	goto	u4325
  3003  179E  2FA5               	bsf	status, 5	;RP0=1, select bank1
  3004  179F  1683               	bcf	status, 6	;RP1=0, select bank1
  3005  17A0  1303               	movf	(_volume)^080h,w
  3006  17A1  086B               	bcf	status, 5	;RP0=0, select bank0
  3007  17A2  1283               	bcf	status, 6	;RP1=0, select bank0
  3008  17A3  1303               	xorwf	(_lastVolume),w
  3009  17A4  0666               u4325:
  3010  17A5                     
  3011                           	skipz
  3012  17A5  1D03               	goto	u4321
  3013  17A6  2FA8               	goto	u4320
  3014  17A7  2FA9               u4321:
  3015  17A8                     	goto	l3388
  3016  17A8  2FAB               u4320:
  3017  17A9                     	goto	l134
  3018  17A9  2FFF               	
  3019                           l3386:	
  3020  17AA                     	goto	l134
  3021  17AA  2FFF               	
  3022                           l133:	
  3023  17AB                     	line	87
  3024                           	
  3025                           l3388:	
  3026  17AB                     ;Display.c: 87:     _selectedDisplay = 0;
  3027                           	bsf	status, 5	;RP0=1, select bank1
  3028  17AB  1683               	bcf	status, 6	;RP1=0, select bank1
  3029  17AC  1303               	clrf	(__selectedDisplay)^080h
  3030  17AD  01EF               	line	88
  3031                           	
  3032                           l3390:	
  3033  17AE                     ;Display.c: 88:     display_write_start();
  3034                           	fcall	_display_write_start
  3035  17AE  160A  118A  2337  160A  118A  	line	90
  3036                           	
  3037                           l3392:	
  3038  17B3                     ;Display.c: 90:     write_text("VOL");
  3039                           	movlw	low(((STR_2)|8000h))
  3040  17B3  3096               	bsf	status, 5	;RP0=1, select bank1
  3041  17B4  1683               	bcf	status, 6	;RP1=0, select bank1
  3042  17B5  1303               	movwf	(write_text@text)^080h
  3043  17B6  00B3               	movlw	high(((STR_2)|8000h))
  3044  17B7  3087               	movwf	((write_text@text)^080h)+1
  3045  17B8  00B4               	fcall	_write_text
  3046  17B9  160A  118A  24B2  160A  118A  	line	93
  3047                           	
  3048                           l3394:	
  3049  17BE                     ;Display.c: 93:     int spaces = 3;
  3050                           	movlw	03h
  3051  17BE  3003               	bsf	status, 5	;RP0=1, select bank1
  3052  17BF  1683               	bcf	status, 6	;RP1=0, select bank1
  3053  17C0  1303               	movwf	(update_volume@spaces)^080h
  3054  17C1  00C1               	movlw	0
  3055  17C2  3000               	movwf	((update_volume@spaces)^080h)+1
  3056  17C3  00C2               	line	94
  3057                           	
  3058                           l3396:	
  3059  17C4                     ;Display.c: 94:     if (volume < 10)
  3060                           	movf	(_volume+1)^080h,w
  3061  17C4  086C               	xorlw	80h
  3062  17C5  3A80               	movwf	btemp+1
  3063  17C6  00FF               	movlw	(0)^80h
  3064  17C7  3080               	subwf	btemp+1,w
  3065  17C8  027F               	skipz
  3066  17C9  1D03               	goto	u4335
  3067  17CA  2FCD               	movlw	0Ah
  3068  17CB  300A               	subwf	(_volume)^080h,w
  3069  17CC  026B               u4335:
  3070  17CD                     
  3071                           	skipnc
  3072  17CD  1803               	goto	u4331
  3073  17CE  2FD0               	goto	u4330
  3074  17CF  2FD1               u4331:
  3075  17D0                     	goto	l3400
  3076  17D0  2FD8               u4330:
  3077  17D1                     	line	95
  3078                           	
  3079                           l3398:	
  3080  17D1                     ;Display.c: 95:         spaces = 4;
  3081                           	movlw	04h
  3082  17D1  3004               	bsf	status, 5	;RP0=1, select bank1
  3083  17D2  1683               	bcf	status, 6	;RP1=0, select bank1
  3084  17D3  1303               	movwf	(update_volume@spaces)^080h
  3085  17D4  00C1               	movlw	0
  3086  17D5  3000               	movwf	((update_volume@spaces)^080h)+1
  3087  17D6  00C2               	goto	l3400
  3088  17D7  2FD8               	
  3089                           l135:	
  3090  17D8                     	line	98
  3091                           	
  3092                           l3400:	
  3093  17D8                     ;Display.c: 98:     write_space(spaces);
  3094                           	bsf	status, 5	;RP0=1, select bank1
  3095  17D8  1683               	bcf	status, 6	;RP1=0, select bank1
  3096  17D9  1303               	movf	(update_volume@spaces+1)^080h,w
  3097  17DA  0842               	movwf	(write_space@count+1)^080h
  3098  17DB  00A2               	movf	(update_volume@spaces)^080h,w
  3099  17DC  0841               	movwf	(write_space@count)^080h
  3100  17DD  00A1               	fcall	_write_space
  3101  17DE  160A  118A  257A  160A  118A  	line	100
  3102                           	
  3103                           l3402:	
  3104  17E3                     ;Display.c: 100:     write_int(volume);
  3105                           	bsf	status, 5	;RP0=1, select bank1
  3106  17E3  1683               	bcf	status, 6	;RP1=0, select bank1
  3107  17E4  1303               	movf	(_volume+1)^080h,w
  3108  17E5  086C               	movwf	(write_int@number+1)^080h
  3109  17E6  00BE               	movf	(_volume)^080h,w
  3110  17E7  086B               	movwf	(write_int@number)^080h
  3111  17E8  00BD               	fcall	_write_int
  3112  17E9  160A  118A  240A  160A  118A  	line	101
  3113                           	
  3114                           l3404:	
  3115  17EE                     ;Display.c: 101:     display_write_end();
  3116                           	fcall	_display_write_end
  3117  17EE  160A  118A  2328  160A  118A  	line	103
  3118                           	
  3119                           l3406:	
  3120  17F3                     ;Display.c: 103:     lastVolume = volume;
  3121                           	bsf	status, 5	;RP0=1, select bank1
  3122  17F3  1683               	bcf	status, 6	;RP1=0, select bank1
  3123  17F4  1303               	movf	(_volume+1)^080h,w
  3124  17F5  086C               	bcf	status, 5	;RP0=0, select bank0
  3125  17F6  1283               	bcf	status, 6	;RP1=0, select bank0
  3126  17F7  1303               	movwf	(_lastVolume+1)
  3127  17F8  00E7               	bsf	status, 5	;RP0=1, select bank1
  3128  17F9  1683               	bcf	status, 6	;RP1=0, select bank1
  3129  17FA  1303               	movf	(_volume)^080h,w
  3130  17FB  086B               	bcf	status, 5	;RP0=0, select bank0
  3131  17FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3132  17FD  1303               	movwf	(_lastVolume)
  3133  17FE  00E6               	line	105
  3134                           	
  3135                           l134:	
  3136  17FF                     	return
  3137  17FF  0008               	opt stack 0
  3138                           GLOBAL	__end_of_update_volume
  3139                           	__end_of_update_volume:
  3140  1800                     	signat	_update_volume,89
  3141                           	global	_update_vol_motor
  3142                           
  3143 ;; *************** function _update_vol_motor *****************
  3144 ;; Defined at:
  3145 ;;		line 15 in file "Volume.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  ad_result       2   69[BANK1 ] unsigned int 
  3150 ;;  curPotmeterV    2   71[BANK1 ] int 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3160 ;;      Params:         0       0       0       0       0
  3161 ;;      Locals:         0       0       4       0       0
  3162 ;;      Temps:          0       0       1       0       0
  3163 ;;      Totals:         0       0       5       0       0
  3164 ;;Total ram usage:        5 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    8
  3167 ;; This function calls:
  3168 ;;		_get_volume
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3174                           	file	"Volume.c"
  3175                           	line	15
  3176                           global __ptext2
  3177                           __ptext2:	;psect for function _update_vol_motor
  3178  088C                     psect	text2
  3179                           	file	"Volume.c"
  3180                           	line	15
  3181                           	global	__size_of_update_vol_motor
  3182                           	__size_of_update_vol_motor	equ	__end_of_update_vol_motor-_update_vol_motor
  3183  0073                     	
  3184                           _update_vol_motor:	
  3185  088C                     ;incstack = 0
  3186 ;; hardware stack exceeded
  3187                           	opt	stack 0
  3188                           ; Regs used in _update_vol_motor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3189                           	line	17
  3190                           	
  3191                           l3450:	
  3192  088C                     ;Volume.c: 17:     if (!vol_motor) return;
  3193                           	bcf	status, 5	;RP0=0, select bank0
  3194  088C  1283               	bcf	status, 6	;RP1=0, select bank0
  3195  088D  1303               	movf	((_vol_motor)),w
  3196  088E  086C               	btfss	status,2
  3197  088F  1D03               	goto	u4361
  3198  0890  2892               	goto	u4360
  3199  0891  2893               u4361:
  3200  0892                     	goto	l320
  3201  0892  2895               u4360:
  3202  0893                     	goto	l321
  3203  0893  28FE               	
  3204                           l3452:	
  3205  0894                     	goto	l321
  3206  0894  28FE               	
  3207                           l320:	
  3208  0895                     	line	24
  3209                           ;Volume.c: 24:     GIE = 0;
  3210                           	bcf	(95/8),(95)&7	;volatile
  3211  0895  138B               	line	26
  3212                           	
  3213                           l3454:	
  3214  0896                     ;Volume.c: 26:     int curPotmeterVol = 40 +1;
  3215                           	movlw	029h
  3216  0896  3029               	bsf	status, 5	;RP0=1, select bank1
  3217  0897  1683               	bcf	status, 6	;RP1=0, select bank1
  3218  0898  1303               	movwf	(update_vol_motor@curPotmeterVol)^080h
  3219  0899  00E7               	movlw	0
  3220  089A  3000               	movwf	((update_vol_motor@curPotmeterVol)^080h)+1
  3221  089B  00E8               	line	29
  3222                           ;Volume.c: 29:     while (volume != curPotmeterVol) {
  3223                           	goto	l3472
  3224  089C  28EB               	
  3225                           l323:	
  3226  089D                     	line	30
  3227                           ;Volume.c: 30:         ADCON0bits.GO = 1;
  3228                           	bcf	status, 5	;RP0=0, select bank0
  3229  089D  1283               	bcf	status, 6	;RP1=0, select bank0
  3230  089E  1303               	bsf	(31),1	;volatile
  3231  089F  149F               	line	31
  3232                           ;Volume.c: 31:         while (ADCON0bits.GO);
  3233                           	goto	l324
  3234  08A0  28A1               	
  3235                           l325:	
  3236  08A1                     	
  3237                           l324:	
  3238  08A1                     	btfsc	(31),1	;volatile
  3239  08A1  189F               	goto	u4371
  3240  08A2  28A4               	goto	u4370
  3241  08A3  28A5               u4371:
  3242  08A4                     	goto	l324
  3243  08A4  28A1               u4370:
  3244  08A5                     	goto	l3456
  3245  08A5  28A6               	
  3246                           l326:	
  3247  08A6                     	line	32
  3248                           	
  3249                           l3456:	
  3250  08A6                     ;Volume.c: 32:         unsigned int ad_result = (ADRESH << 8) + ADRESL;
  3251                           	movf	(30),w	;volatile
  3252  08A6  081E               	bsf	status, 5	;RP0=1, select bank1
  3253  08A7  1683               	bcf	status, 6	;RP1=0, select bank1
  3254  08A8  1303               	movwf	(update_vol_motor@ad_result+1)^080h
  3255  08A9  00E6               	movf	(158)^080h,w	;volatile
  3256  08AA  081E               	movwf	(update_vol_motor@ad_result)^080h
  3257  08AB  00E5               	line	34
  3258                           	
  3259                           l3458:	
  3260  08AC                     ;Volume.c: 34:         curPotmeterVol = get_volume(ad_result);
  3261                           	movf	(update_vol_motor@ad_result+1)^080h,w
  3262  08AC  0866               	movwf	(get_volume@ad_result+1)^080h
  3263  08AD  00DF               	movf	(update_vol_motor@ad_result)^080h,w
  3264  08AE  0865               	movwf	(get_volume@ad_result)^080h
  3265  08AF  00DE               	fcall	_get_volume
  3266  08B0  120A  158A  20FF  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3267  08B5  1683               	bcf	status, 6	;RP1=0, select bank1
  3268  08B6  1303               	movf	(1+(?_get_volume))^080h,w
  3269  08B7  085F               	movwf	(update_vol_motor@curPotmeterVol+1)^080h
  3270  08B8  00E8               	movf	(0+(?_get_volume))^080h,w
  3271  08B9  085E               	movwf	(update_vol_motor@curPotmeterVol)^080h
  3272  08BA  00E7               	line	36
  3273                           	
  3274                           l3460:	
  3275  08BB                     ;Volume.c: 36:         if (curPotmeterVol < 0) continue;
  3276                           	btfss	(update_vol_motor@curPotmeterVol+1)^080h,7
  3277  08BB  1FE8               	goto	u4381
  3278  08BC  28BE               	goto	u4380
  3279  08BD  28BF               u4381:
  3280  08BE                     	goto	l3464
  3281  08BE  28C1               u4380:
  3282  08BF                     	goto	l3472
  3283  08BF  28EB               	
  3284                           l3462:	
  3285  08C0                     	goto	l3472
  3286  08C0  28EB               	
  3287                           l327:	
  3288  08C1                     	line	38
  3289                           	
  3290                           l3464:	
  3291  08C1                     ;Volume.c: 38:         if (volume > curPotmeterVol) {
  3292                           	movf	(update_vol_motor@curPotmeterVol+1)^080h,w
  3293  08C1  0868               	xorlw	80h
  3294  08C2  3A80               	movwf	(??_update_vol_motor+0)^080h+0
  3295  08C3  00E4               	movf	(_volume+1)^080h,w
  3296  08C4  086C               	xorlw	80h
  3297  08C5  3A80               	subwf	(??_update_vol_motor+0)^080h+0,w
  3298  08C6  0264               	skipz
  3299  08C7  1D03               	goto	u4395
  3300  08C8  28CB               	movf	(_volume)^080h,w
  3301  08C9  086B               	subwf	(update_vol_motor@curPotmeterVol)^080h,w
  3302  08CA  0267               u4395:
  3303  08CB                     
  3304                           	skipnc
  3305  08CB  1803               	goto	u4391
  3306  08CC  28CE               	goto	u4390
  3307  08CD  28CF               u4391:
  3308  08CE                     	goto	l3468
  3309  08CE  28D4               u4390:
  3310  08CF                     	line	39
  3311                           	
  3312                           l3466:	
  3313  08CF                     ;Volume.c: 39:             PORTCbits.RC0 = 1;
  3314                           	bcf	status, 5	;RP0=0, select bank0
  3315  08CF  1283               	bcf	status, 6	;RP1=0, select bank0
  3316  08D0  1303               	bsf	(7),0	;volatile
  3317  08D1  1407               	line	40
  3318                           ;Volume.c: 40:             PORTCbits.RC1 = 0;
  3319                           	bcf	(7),1	;volatile
  3320  08D2  1087               	line	41
  3321                           ;Volume.c: 41:         } else if (volume < curPotmeterVol) {
  3322                           	goto	l3472
  3323  08D3  28EB               	
  3324                           l328:	
  3325  08D4                     	
  3326                           l3468:	
  3327  08D4                     	bsf	status, 5	;RP0=1, select bank1
  3328  08D4  1683               	bcf	status, 6	;RP1=0, select bank1
  3329  08D5  1303               	movf	(_volume+1)^080h,w
  3330  08D6  086C               	xorlw	80h
  3331  08D7  3A80               	movwf	(??_update_vol_motor+0)^080h+0
  3332  08D8  00E4               	movf	(update_vol_motor@curPotmeterVol+1)^080h,w
  3333  08D9  0868               	xorlw	80h
  3334  08DA  3A80               	subwf	(??_update_vol_motor+0)^080h+0,w
  3335  08DB  0264               	skipz
  3336  08DC  1D03               	goto	u4405
  3337  08DD  28E0               	movf	(update_vol_motor@curPotmeterVol)^080h,w
  3338  08DE  0867               	subwf	(_volume)^080h,w
  3339  08DF  026B               u4405:
  3340  08E0                     
  3341                           	skipnc
  3342  08E0  1803               	goto	u4401
  3343  08E1  28E3               	goto	u4400
  3344  08E2  28E4               u4401:
  3345  08E3                     	goto	l3472
  3346  08E3  28EB               u4400:
  3347  08E4                     	line	42
  3348                           	
  3349                           l3470:	
  3350  08E4                     ;Volume.c: 42:             PORTCbits.RC0 = 0;
  3351                           	bcf	status, 5	;RP0=0, select bank0
  3352  08E4  1283               	bcf	status, 6	;RP1=0, select bank0
  3353  08E5  1303               	bcf	(7),0	;volatile
  3354  08E6  1007               	line	43
  3355                           ;Volume.c: 43:             PORTCbits.RC1 = 1;
  3356                           	bsf	(7),1	;volatile
  3357  08E7  1487               	goto	l3472
  3358  08E8  28EB               	line	44
  3359                           ;Volume.c: 44:         }
  3360                           	
  3361                           l330:	
  3362  08E9                     	goto	l3472
  3363  08E9  28EB               	
  3364                           l329:	
  3365  08EA                     	goto	l3472
  3366  08EA  28EB               	line	45
  3367                           ;Volume.c: 45:     }
  3368                           	
  3369                           l322:	
  3370  08EB                     	line	29
  3371                           	
  3372                           l3472:	
  3373  08EB                     ;Volume.c: 29:     while (volume != curPotmeterVol) {
  3374                           	bsf	status, 5	;RP0=1, select bank1
  3375  08EB  1683               	bcf	status, 6	;RP1=0, select bank1
  3376  08EC  1303               	movf	(update_vol_motor@curPotmeterVol+1)^080h,w
  3377  08ED  0868               	xorwf	(_volume+1)^080h,w
  3378  08EE  066C               	skipz
  3379  08EF  1D03               	goto	u4415
  3380  08F0  28F3               	movf	(update_vol_motor@curPotmeterVol)^080h,w
  3381  08F1  0867               	xorwf	(_volume)^080h,w
  3382  08F2  066B               u4415:
  3383  08F3                     
  3384                           	skipz
  3385  08F3  1D03               	goto	u4411
  3386  08F4  28F6               	goto	u4410
  3387  08F5  28F7               u4411:
  3388  08F6                     	goto	l323
  3389  08F6  289D               u4410:
  3390  08F7                     	goto	l3474
  3391  08F7  28F8               	
  3392                           l331:	
  3393  08F8                     	line	47
  3394                           	
  3395                           l3474:	
  3396  08F8                     ;Volume.c: 47:     vol_motor = 0;
  3397                           	bcf	status, 5	;RP0=0, select bank0
  3398  08F8  1283               	bcf	status, 6	;RP1=0, select bank0
  3399  08F9  1303               	clrf	(_vol_motor)
  3400  08FA  01EC               	line	48
  3401                           	
  3402                           l3476:	
  3403  08FB                     ;Volume.c: 48:     RC0 = RC1 = 0;
  3404                           	bcf	(57/8),(57)&7	;volatile
  3405  08FB  1087               	bcf	(56/8),(56)&7	;volatile
  3406  08FC  1007               	line	49
  3407                           	
  3408                           l3478:	
  3409  08FD                     ;Volume.c: 49:     GIE = 1;
  3410                           	bsf	(95/8),(95)&7	;volatile
  3411  08FD  178B               	line	50
  3412                           	
  3413                           l321:	
  3414  08FE                     	return
  3415  08FE  0008               	opt stack 0
  3416                           GLOBAL	__end_of_update_vol_motor
  3417                           	__end_of_update_vol_motor:
  3418  08FF                     	signat	_update_vol_motor,89
  3419                           	global	_get_volume
  3420                           
  3421 ;; *************** function _get_volume *****************
  3422 ;; Defined at:
  3423 ;;		line 84 in file "Volume.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;  ad_result       2   62[BANK1 ] unsigned int 
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;  currentStep     2   66[BANK1 ] unsigned int 
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  2   62[BANK1 ] int 
  3430 ;; Registers used:
  3431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3437 ;;      Params:         0       0       2       0       0
  3438 ;;      Locals:         0       0       2       0       0
  3439 ;;      Temps:          0       0       2       0       0
  3440 ;;      Totals:         0       0       6       0       0
  3441 ;;Total ram usage:        6 bytes
  3442 ;; Hardware stack levels used:    1
  3443 ;; Hardware stack levels required when called:    7
  3444 ;; This function calls:
  3445 ;;		___lwdiv
  3446 ;;		_is_deadzone
  3447 ;; This function is called by:
  3448 ;;		_update_vol_motor
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3452                           	line	84
  3453                           global __ptext3
  3454                           __ptext3:	;psect for function _get_volume
  3455  08FF                     psect	text3
  3456                           	file	"Volume.c"
  3457                           	line	84
  3458                           	global	__size_of_get_volume
  3459                           	__size_of_get_volume	equ	__end_of_get_volume-_get_volume
  3460  0079                     	
  3461                           _get_volume:	
  3462  08FF                     ;incstack = 0
  3463 ;; hardware stack exceeded
  3464                           	opt	stack 0
  3465                           ; Regs used in _get_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3466                           	line	86
  3467                           	
  3468                           l3228:	
  3469  08FF                     ;Volume.c: 84: int get_volume(unsigned int ad_result);Volume.c: 85: {;Volume.c: 86:     
                                 if (ad_result == 0 || ad_result < step_size) {
  3470                           	bsf	status, 5	;RP0=1, select bank1
  3471  08FF  1683               	bcf	status, 6	;RP1=0, select bank1
  3472  0900  1303               	movf	((get_volume@ad_result)^080h),w
  3473  0901  085E               iorwf	((get_volume@ad_result+1)^080h),w
  3474  0902  045F               	btfsc	status,2
  3475  0903  1903               	goto	u4261
  3476  0904  2906               	goto	u4260
  3477  0905  2907               u4261:
  3478  0906                     	goto	l3232
  3479  0906  292A               u4260:
  3480  0907                     	
  3481                           l3230:	
  3482  0907                     	movlw	low(_step_size|8000h)
  3483  0907  308E               	movwf	fsr0
  3484  0908  0084               	movlw	high(_step_size|8000h)
  3485  0909  3087               	bcf	status, 5	;RP0=0, select bank0
  3486  090A  1283               	bcf	status, 6	;RP1=0, select bank0
  3487  090B  1303               	movwf	btemp+1
  3488  090C  00FF               	fcall	stringtab
  3489  090D  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3490  0912  1683               	bcf	status, 6	;RP1=0, select bank1
  3491  0913  1303               	movwf	(??_get_volume+0)^080h+0
  3492  0914  00E0               	bcf	status, 5	;RP0=0, select bank0
  3493  0915  1283               	bcf	status, 6	;RP1=0, select bank0
  3494  0916  1303               	fcall	stringtab
  3495  0917  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3496  091C  1683               	bcf	status, 6	;RP1=0, select bank1
  3497  091D  1303               	movwf	(??_get_volume+0)^080h+0+1
  3498  091E  00E1               	movf	1+(??_get_volume+0)^080h+0,w
  3499  091F  0861               	subwf	(get_volume@ad_result+1)^080h,w
  3500  0920  025F               	skipz
  3501  0921  1D03               	goto	u4275
  3502  0922  2925               	movf	0+(??_get_volume+0)^080h+0,w
  3503  0923  0860               	subwf	(get_volume@ad_result)^080h,w
  3504  0924  025E               u4275:
  3505  0925                     	skipnc
  3506  0925  1803               	goto	u4271
  3507  0926  2928               	goto	u4270
  3508  0927  2929               u4271:
  3509  0928                     	goto	l3238
  3510  0928  292F               u4270:
  3511  0929                     	goto	l3232
  3512  0929  292A               	
  3513                           l346:	
  3514  092A                     	line	87
  3515                           	
  3516                           l3232:	
  3517  092A                     ;Volume.c: 87:             return 0;
  3518                           	clrf	(?_get_volume)^080h
  3519  092A  01DE               	clrf	(?_get_volume+1)^080h
  3520  092B  01DF               	goto	l347
  3521  092C  2977               	
  3522                           l3234:	
  3523  092D                     	goto	l347
  3524  092D  2977               	line	88
  3525                           	
  3526                           l3236:	
  3527  092E                     ;Volume.c: 88:     } else {
  3528                           	goto	l3244
  3529  092E  2972               	
  3530                           l344:	
  3531  092F                     	line	89
  3532                           	
  3533                           l3238:	
  3534  092F                     ;Volume.c: 89:         unsigned int currentStep = ad_result / step_size;
  3535                           	movlw	low(_step_size|8000h)
  3536  092F  308E               	movwf	fsr0
  3537  0930  0084               	movlw	high(_step_size|8000h)
  3538  0931  3087               	bcf	status, 5	;RP0=0, select bank0
  3539  0932  1283               	bcf	status, 6	;RP1=0, select bank0
  3540  0933  1303               	movwf	btemp+1
  3541  0934  00FF               	fcall	stringtab
  3542  0935  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3543  093A  1683               	bcf	status, 6	;RP1=0, select bank1
  3544  093B  1303               	movwf	(___lwdiv@divisor)^080h
  3545  093C  00A0               	bcf	status, 5	;RP0=0, select bank0
  3546  093D  1283               	bcf	status, 6	;RP1=0, select bank0
  3547  093E  1303               	fcall	stringtab
  3548  093F  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3549  0944  1683               	bcf	status, 6	;RP1=0, select bank1
  3550  0945  1303               	movwf	(___lwdiv@divisor+1)^080h
  3551  0946  00A1               	movf	(get_volume@ad_result+1)^080h,w
  3552  0947  085F               	movwf	(___lwdiv@dividend+1)^080h
  3553  0948  00A3               	movf	(get_volume@ad_result)^080h,w
  3554  0949  085E               	movwf	(___lwdiv@dividend)^080h
  3555  094A  00A2               	fcall	___lwdiv
  3556  094B  160A  118A  25C6  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3557  0950  1683               	bcf	status, 6	;RP1=0, select bank1
  3558  0951  1303               	movf	(1+(?___lwdiv))^080h,w
  3559  0952  0821               	movwf	(get_volume@currentStep+1)^080h
  3560  0953  00E3               	movf	(0+(?___lwdiv))^080h,w
  3561  0954  0820               	movwf	(get_volume@currentStep)^080h
  3562  0955  00E2               	line	91
  3563                           ;Volume.c: 91:         if (!is_deadzone(currentStep, ad_result))
  3564                           	movf	(get_volume@currentStep+1)^080h,w
  3565  0956  0863               	movwf	(is_deadzone@currentStep+1)^080h
  3566  0957  00D2               	movf	(get_volume@currentStep)^080h,w
  3567  0958  0862               	movwf	(is_deadzone@currentStep)^080h
  3568  0959  00D1               	movf	(get_volume@ad_result+1)^080h,w
  3569  095A  085F               	movwf	(is_deadzone@adcResult+1)^080h
  3570  095B  00D4               	movf	(get_volume@ad_result)^080h,w
  3571  095C  085E               	movwf	(is_deadzone@adcResult)^080h
  3572  095D  00D3               	fcall	_is_deadzone
  3573  095E  120A  158A  25FE  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3574  0963  1683               	bcf	status, 6	;RP1=0, select bank1
  3575  0964  1303               	movf	((0+(?_is_deadzone))^080h),w
  3576  0965  0851               iorwf	((1+(?_is_deadzone))^080h),w
  3577  0966  0452               	btfss	status,2
  3578  0967  1D03               	goto	u4281
  3579  0968  296A               	goto	u4280
  3580  0969  296B               u4281:
  3581  096A                     	goto	l3244
  3582  096A  2972               u4280:
  3583  096B                     	line	92
  3584                           	
  3585                           l3240:	
  3586  096B                     ;Volume.c: 92:             return currentStep;
  3587                           	movf	(get_volume@currentStep+1)^080h,w
  3588  096B  0863               	movwf	(?_get_volume+1)^080h
  3589  096C  00DF               	movf	(get_volume@currentStep)^080h,w
  3590  096D  0862               	movwf	(?_get_volume)^080h
  3591  096E  00DE               	goto	l347
  3592  096F  2977               	
  3593                           l3242:	
  3594  0970                     	goto	l347
  3595  0970  2977               	
  3596                           l349:	
  3597  0971                     	goto	l3244
  3598  0971  2972               	line	93
  3599                           ;Volume.c: 93:     }
  3600                           	
  3601                           l348:	
  3602  0972                     	line	95
  3603                           	
  3604                           l3244:	
  3605  0972                     ;Volume.c: 95:     return -1;
  3606                           	movlw	0FFh
  3607  0972  30FF               	movwf	(?_get_volume)^080h
  3608  0973  00DE               	movlw	0FFh
  3609  0974  30FF               	movwf	((?_get_volume)^080h)+1
  3610  0975  00DF               	goto	l347
  3611  0976  2977               	
  3612                           l3246:	
  3613  0977                     	line	96
  3614                           	
  3615                           l347:	
  3616  0977                     	return
  3617  0977  0008               	opt stack 0
  3618                           GLOBAL	__end_of_get_volume
  3619                           	__end_of_get_volume:
  3620  0978                     	signat	_get_volume,4218
  3621                           	global	_is_deadzone
  3622                           
  3623 ;; *************** function _is_deadzone *****************
  3624 ;; Defined at:
  3625 ;;		line 55 in file "Volume.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  currentStep     2   49[BANK1 ] int 
  3628 ;;  adcResult       2   51[BANK1 ] int 
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;  turnPoint       2   60[BANK1 ] int 
  3631 ;;  deadzoneHigh    2   57[BANK1 ] int 
  3632 ;;  deadzoneLow     2   55[BANK1 ] int 
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  2   49[BANK1 ] int 
  3635 ;; Registers used:
  3636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3642 ;;      Params:         0       0       4       0       0
  3643 ;;      Locals:         0       0       7       0       0
  3644 ;;      Temps:          0       0       2       0       0
  3645 ;;      Totals:         0       0      13       0       0
  3646 ;;Total ram usage:       13 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    6
  3649 ;; This function calls:
  3650 ;;		___fladd
  3651 ;;		___fltol
  3652 ;;		___wmul
  3653 ;;		___xxtofl
  3654 ;; This function is called by:
  3655 ;;		_get_volume
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3659                           	line	55
  3660                           global __ptext4
  3661                           __ptext4:	;psect for function _is_deadzone
  3662  0DFE                     psect	text4
  3663                           	file	"Volume.c"
  3664                           	line	55
  3665                           	global	__size_of_is_deadzone
  3666                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  3667  00CC                     	
  3668                           _is_deadzone:	
  3669  0DFE                     ;incstack = 0
  3670 ;; hardware stack exceeded
  3671                           	opt	stack 0
  3672                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3673                           	line	57
  3674                           	
  3675                           l3060:	
  3676  0DFE                     ;Volume.c: 55: int is_deadzone(int currentStep, int adcResult);Volume.c: 56: {;Volume.c:
                                  57:     int turnPoint = step_size * currentStep;
  3677                           	movlw	low(_step_size|8000h)
  3678  0DFE  308E               	movwf	fsr0
  3679  0DFF  0084               	movlw	high(_step_size|8000h)
  3680  0E00  3087               	bcf	status, 5	;RP0=0, select bank0
  3681  0E01  1283               	bcf	status, 6	;RP1=0, select bank0
  3682  0E02  1303               	movwf	btemp+1
  3683  0E03  00FF               	fcall	stringtab
  3684  0E04  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3685  0E09  1683               	bcf	status, 6	;RP1=0, select bank1
  3686  0E0A  1303               	movwf	(___wmul@multiplier)^080h
  3687  0E0B  00A0               	bcf	status, 5	;RP0=0, select bank0
  3688  0E0C  1283               	bcf	status, 6	;RP1=0, select bank0
  3689  0E0D  1303               	fcall	stringtab
  3690  0E0E  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3691  0E13  1683               	bcf	status, 6	;RP1=0, select bank1
  3692  0E14  1303               	movwf	(___wmul@multiplier+1)^080h
  3693  0E15  00A1               	movf	(is_deadzone@currentStep+1)^080h,w
  3694  0E16  0852               	movwf	(___wmul@multiplicand+1)^080h
  3695  0E17  00A3               	movf	(is_deadzone@currentStep)^080h,w
  3696  0E18  0851               	movwf	(___wmul@multiplicand)^080h
  3697  0E19  00A2               	fcall	___wmul
  3698  0E1A  160A  118A  237E  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3699  0E1F  1683               	bcf	status, 6	;RP1=0, select bank1
  3700  0E20  1303               	movf	(1+(?___wmul))^080h,w
  3701  0E21  0821               	movwf	(is_deadzone@turnPoint+1)^080h
  3702  0E22  00DD               	movf	(0+(?___wmul))^080h,w
  3703  0E23  0820               	movwf	(is_deadzone@turnPoint)^080h
  3704  0E24  00DC               	line	59
  3705                           	
  3706                           l3062:	
  3707  0E25                     ;Volume.c: 59:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  3708                           	movf	(is_deadzone@turnPoint)^080h,w
  3709  0E25  085C               	movwf	(___xxtofl@val)^080h
  3710  0E26  00A0               	movf	(is_deadzone@turnPoint+1)^080h,w
  3711  0E27  085D               	movwf	(___xxtofl@val+1)^080h
  3712  0E28  00A1               	movlw	0
  3713  0E29  3000               	btfsc	(___xxtofl@val+1)^080h,7
  3714  0E2A  1BA1               	movlw	255
  3715  0E2B  30FF               	movwf	(___xxtofl@val+2)^080h
  3716  0E2C  00A2               	movwf	(___xxtofl@val+3)^080h
  3717  0E2D  00A3               	movlw	low(01h)
  3718  0E2E  3001               	fcall	___xxtofl
  3719  0E2F  120A  158A  2474  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3720  0E34  1683               	bcf	status, 6	;RP1=0, select bank1
  3721  0E35  1303               	movf	(3+(?___xxtofl))^080h,w
  3722  0E36  0823               	movwf	(___fladd@a+3)^080h
  3723  0E37  00B5               	movf	(2+(?___xxtofl))^080h,w
  3724  0E38  0822               	movwf	(___fladd@a+2)^080h
  3725  0E39  00B4               	movf	(1+(?___xxtofl))^080h,w
  3726  0E3A  0821               	movwf	(___fladd@a+1)^080h
  3727  0E3B  00B3               	movf	(0+(?___xxtofl))^080h,w
  3728  0E3C  0820               	movwf	(___fladd@a)^080h
  3729  0E3D  00B2               
  3730                           	movlw	0xc1
  3731  0E3E  30C1               	movwf	(___fladd@b+3)^080h
  3732  0E3F  00B1               	movlw	0x23
  3733  0E40  3023               	movwf	(___fladd@b+2)^080h
  3734  0E41  00B0               	movlw	0xae
  3735  0E42  30AE               	movwf	(___fladd@b+1)^080h
  3736  0E43  00AF               	movlw	0x14
  3737  0E44  3014               	movwf	(___fladd@b)^080h
  3738  0E45  00AE               
  3739                           	fcall	___fladd
  3740  0E46  120A  118A  2029  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3741  0E4B  1683               	bcf	status, 6	;RP1=0, select bank1
  3742  0E4C  1303               	movf	(3+(?___fladd))^080h,w
  3743  0E4D  0831               	movwf	(___fltol@f1+3)^080h
  3744  0E4E  00C9               	movf	(2+(?___fladd))^080h,w
  3745  0E4F  0830               	movwf	(___fltol@f1+2)^080h
  3746  0E50  00C8               	movf	(1+(?___fladd))^080h,w
  3747  0E51  082F               	movwf	(___fltol@f1+1)^080h
  3748  0E52  00C7               	movf	(0+(?___fladd))^080h,w
  3749  0E53  082E               	movwf	(___fltol@f1)^080h
  3750  0E54  00C6               
  3751                           	fcall	___fltol
  3752  0E55  120A  158A  2316  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3753  0E5A  1683               	bcf	status, 6	;RP1=0, select bank1
  3754  0E5B  1303               	movf	(1+(?___fltol))^080h,w
  3755  0E5C  0847               	movwf	(is_deadzone@deadzoneLow+1)^080h
  3756  0E5D  00D8               	movf	(0+(?___fltol))^080h,w
  3757  0E5E  0846               	movwf	(is_deadzone@deadzoneLow)^080h
  3758  0E5F  00D7               	line	60
  3759                           	
  3760                           l3064:	
  3761  0E60                     ;Volume.c: 60:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  3762                           	movf	(is_deadzone@turnPoint)^080h,w
  3763  0E60  085C               	movwf	(___xxtofl@val)^080h
  3764  0E61  00A0               	movf	(is_deadzone@turnPoint+1)^080h,w
  3765  0E62  085D               	movwf	(___xxtofl@val+1)^080h
  3766  0E63  00A1               	movlw	0
  3767  0E64  3000               	btfsc	(___xxtofl@val+1)^080h,7
  3768  0E65  1BA1               	movlw	255
  3769  0E66  30FF               	movwf	(___xxtofl@val+2)^080h
  3770  0E67  00A2               	movwf	(___xxtofl@val+3)^080h
  3771  0E68  00A3               	movlw	low(01h)
  3772  0E69  3001               	fcall	___xxtofl
  3773  0E6A  120A  158A  2474  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3774  0E6F  1683               	bcf	status, 6	;RP1=0, select bank1
  3775  0E70  1303               	movf	(3+(?___xxtofl))^080h,w
  3776  0E71  0823               	movwf	(___fladd@a+3)^080h
  3777  0E72  00B5               	movf	(2+(?___xxtofl))^080h,w
  3778  0E73  0822               	movwf	(___fladd@a+2)^080h
  3779  0E74  00B4               	movf	(1+(?___xxtofl))^080h,w
  3780  0E75  0821               	movwf	(___fladd@a+1)^080h
  3781  0E76  00B3               	movf	(0+(?___xxtofl))^080h,w
  3782  0E77  0820               	movwf	(___fladd@a)^080h
  3783  0E78  00B2               
  3784                           	movlw	0x41
  3785  0E79  3041               	movwf	(___fladd@b+3)^080h
  3786  0E7A  00B1               	movlw	0x23
  3787  0E7B  3023               	movwf	(___fladd@b+2)^080h
  3788  0E7C  00B0               	movlw	0xae
  3789  0E7D  30AE               	movwf	(___fladd@b+1)^080h
  3790  0E7E  00AF               	movlw	0x14
  3791  0E7F  3014               	movwf	(___fladd@b)^080h
  3792  0E80  00AE               
  3793                           	fcall	___fladd
  3794  0E81  120A  118A  2029  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3795  0E86  1683               	bcf	status, 6	;RP1=0, select bank1
  3796  0E87  1303               	movf	(3+(?___fladd))^080h,w
  3797  0E88  0831               	movwf	(___fltol@f1+3)^080h
  3798  0E89  00C9               	movf	(2+(?___fladd))^080h,w
  3799  0E8A  0830               	movwf	(___fltol@f1+2)^080h
  3800  0E8B  00C8               	movf	(1+(?___fladd))^080h,w
  3801  0E8C  082F               	movwf	(___fltol@f1+1)^080h
  3802  0E8D  00C7               	movf	(0+(?___fladd))^080h,w
  3803  0E8E  082E               	movwf	(___fltol@f1)^080h
  3804  0E8F  00C6               
  3805                           	fcall	___fltol
  3806  0E90  120A  158A  2316  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  3807  0E95  1683               	bcf	status, 6	;RP1=0, select bank1
  3808  0E96  1303               	movf	(1+(?___fltol))^080h,w
  3809  0E97  0847               	movwf	(is_deadzone@deadzoneHigh+1)^080h
  3810  0E98  00DA               	movf	(0+(?___fltol))^080h,w
  3811  0E99  0846               	movwf	(is_deadzone@deadzoneHigh)^080h
  3812  0E9A  00D9               	line	62
  3813                           	
  3814                           l3066:	
  3815  0E9B                     ;Volume.c: 62:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  3816                           	clrf	(_is_deadzone$899)^080h
  3817  0E9B  01DB               	
  3818                           l3068:	
  3819  0E9C                     	movf	(is_deadzone@deadzoneLow+1)^080h,w
  3820  0E9C  0858               	xorlw	80h
  3821  0E9D  3A80               	movwf	(??_is_deadzone+0)^080h+0
  3822  0E9E  00D5               	movf	(is_deadzone@adcResult+1)^080h,w
  3823  0E9F  0854               	xorlw	80h
  3824  0EA0  3A80               	subwf	(??_is_deadzone+0)^080h+0,w
  3825  0EA1  0255               	skipz
  3826  0EA2  1D03               	goto	u4095
  3827  0EA3  2EA6               	movf	(is_deadzone@adcResult)^080h,w
  3828  0EA4  0853               	subwf	(is_deadzone@deadzoneLow)^080h,w
  3829  0EA5  0257               u4095:
  3830  0EA6                     
  3831                           	skipnc
  3832  0EA6  1803               	goto	u4091
  3833  0EA7  2EA9               	goto	u4090
  3834  0EA8  2EAA               u4091:
  3835  0EA9                     	goto	l3074
  3836  0EA9  2EBF               u4090:
  3837  0EAA                     	
  3838                           l3070:	
  3839  0EAA                     	bsf	status, 5	;RP0=1, select bank1
  3840  0EAA  1683               	bcf	status, 6	;RP1=0, select bank1
  3841  0EAB  1303               	movf	(is_deadzone@adcResult+1)^080h,w
  3842  0EAC  0854               	xorlw	80h
  3843  0EAD  3A80               	movwf	(??_is_deadzone+0)^080h+0
  3844  0EAE  00D5               	movf	(is_deadzone@deadzoneHigh+1)^080h,w
  3845  0EAF  085A               	xorlw	80h
  3846  0EB0  3A80               	subwf	(??_is_deadzone+0)^080h+0,w
  3847  0EB1  0255               	skipz
  3848  0EB2  1D03               	goto	u4105
  3849  0EB3  2EB6               	movf	(is_deadzone@deadzoneHigh)^080h,w
  3850  0EB4  0859               	subwf	(is_deadzone@adcResult)^080h,w
  3851  0EB5  0253               u4105:
  3852  0EB6                     
  3853                           	skipnc
  3854  0EB6  1803               	goto	u4101
  3855  0EB7  2EB9               	goto	u4100
  3856  0EB8  2EBA               u4101:
  3857  0EB9                     	goto	l3074
  3858  0EB9  2EBF               u4100:
  3859  0EBA                     	
  3860                           l3072:	
  3861  0EBA                     	bsf	status, 5	;RP0=1, select bank1
  3862  0EBA  1683               	bcf	status, 6	;RP1=0, select bank1
  3863  0EBB  1303               	clrf	(_is_deadzone$899)^080h
  3864  0EBC  01DB               	incf	(_is_deadzone$899)^080h,f
  3865  0EBD  0ADB               	goto	l3074
  3866  0EBE  2EBF               	
  3867                           l335:	
  3868  0EBF                     	
  3869                           l3074:	
  3870  0EBF                     	bsf	status, 5	;RP0=1, select bank1
  3871  0EBF  1683               	bcf	status, 6	;RP1=0, select bank1
  3872  0EC0  1303               	movf	(_is_deadzone$899)^080h,w
  3873  0EC1  085B               	movwf	(??_is_deadzone+0)^080h+0
  3874  0EC2  00D5               	clrf	(??_is_deadzone+0)^080h+0+1
  3875  0EC3  01D6               	movf	0+(??_is_deadzone+0)^080h+0,w
  3876  0EC4  0855               	movwf	(?_is_deadzone)^080h
  3877  0EC5  00D1               	movf	1+(??_is_deadzone+0)^080h+0,w
  3878  0EC6  0856               	movwf	(?_is_deadzone+1)^080h
  3879  0EC7  00D2               	goto	l336
  3880  0EC8  2EC9               	
  3881                           l3076:	
  3882  0EC9                     	line	63
  3883                           	
  3884                           l336:	
  3885  0EC9                     	return
  3886  0EC9  0008               	opt stack 0
  3887                           GLOBAL	__end_of_is_deadzone
  3888                           	__end_of_is_deadzone:
  3889  0ECA                     	signat	_is_deadzone,8314
  3890                           	global	___xxtofl
  3891                           
  3892 ;; *************** function ___xxtofl *****************
  3893 ;; Defined at:
  3894 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  sign            1    wreg     unsigned char 
  3897 ;;  val             4    0[BANK1 ] long 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  sign            1    8[BANK1 ] unsigned char 
  3900 ;;  arg             4   10[BANK1 ] unsigned long 
  3901 ;;  exp             1    9[BANK1 ] unsigned char 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  4    0[BANK1 ] unsigned char 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3911 ;;      Params:         0       0       4       0       0
  3912 ;;      Locals:         0       0       6       0       0
  3913 ;;      Temps:          0       0       4       0       0
  3914 ;;      Totals:         0       0      14       0       0
  3915 ;;Total ram usage:       14 bytes
  3916 ;; Hardware stack levels used:    1
  3917 ;; Hardware stack levels required when called:    5
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_is_deadzone
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3925                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  3926                           	line	10
  3927                           global __ptext5
  3928                           __ptext5:	;psect for function ___xxtofl
  3929  0C74                     psect	text5
  3930                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
  3931                           	line	10
  3932                           	global	__size_of___xxtofl
  3933                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  3934  00C4                     	
  3935                           ___xxtofl:	
  3936  0C74                     ;incstack = 0
  3937 ;; hardware stack exceeded
  3938                           	opt	stack 0
  3939                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3940                           ;___xxtofl@sign stored from wreg
  3941                           	bsf	status, 5	;RP0=1, select bank1
  3942  0C74  1683               	bcf	status, 6	;RP1=0, select bank1
  3943  0C75  1303               	movwf	(___xxtofl@sign)^080h
  3944  0C76  00A8               	line	15
  3945                           	
  3946                           l2658:	
  3947  0C77                     	movf	((___xxtofl@sign)^080h),w
  3948  0C77  0828               	btfsc	status,2
  3949  0C78  1903               	goto	u3121
  3950  0C79  2C7B               	goto	u3120
  3951  0C7A  2C7C               u3121:
  3952  0C7B                     	goto	l2664
  3953  0C7B  2C90               u3120:
  3954  0C7C                     	
  3955                           l2660:	
  3956  0C7C                     	btfss	(___xxtofl@val+3)^080h,7
  3957  0C7C  1FA3               	goto	u3131
  3958  0C7D  2C7F               	goto	u3130
  3959  0C7E  2C80               u3131:
  3960  0C7F                     	goto	l2664
  3961  0C7F  2C90               u3130:
  3962  0C80                     	line	16
  3963                           	
  3964                           l2662:	
  3965  0C80                     	comf	(___xxtofl@val)^080h+0,w
  3966  0C80  0920               	movwf	(___xxtofl@arg)^080h
  3967  0C81  00AA               	comf	(___xxtofl@val)^080h+1,w
  3968  0C82  0921               	movwf	(___xxtofl@arg+1)^080h
  3969  0C83  00AB               	comf	(___xxtofl@val)^080h+2,w
  3970  0C84  0922               	movwf	(___xxtofl@arg+2)^080h
  3971  0C85  00AC               	comf	(___xxtofl@val)^080h+3,w
  3972  0C86  0923               	movwf	(___xxtofl@arg+3)^080h
  3973  0C87  00AD               	incf	(___xxtofl@arg)^080h,f
  3974  0C88  0AAA               	skipnz
  3975  0C89  1903               	incf	(___xxtofl@arg+1)^080h,f
  3976  0C8A  0AAB               	skipnz
  3977  0C8B  1903               	incf	(___xxtofl@arg+2)^080h,f
  3978  0C8C  0AAC               	skipnz
  3979  0C8D  1903               	incf	(___xxtofl@arg+3)^080h,f
  3980  0C8E  0AAD               	line	17
  3981                           	goto	l911
  3982  0C8F  2C98               	line	18
  3983                           	
  3984                           l910:	
  3985  0C90                     	line	19
  3986                           	
  3987                           l2664:	
  3988  0C90                     	movf	(___xxtofl@val+3)^080h,w
  3989  0C90  0823               	movwf	(___xxtofl@arg+3)^080h
  3990  0C91  00AD               	movf	(___xxtofl@val+2)^080h,w
  3991  0C92  0822               	movwf	(___xxtofl@arg+2)^080h
  3992  0C93  00AC               	movf	(___xxtofl@val+1)^080h,w
  3993  0C94  0821               	movwf	(___xxtofl@arg+1)^080h
  3994  0C95  00AB               	movf	(___xxtofl@val)^080h,w
  3995  0C96  0820               	movwf	(___xxtofl@arg)^080h
  3996  0C97  00AA               
  3997                           	line	20
  3998                           	
  3999                           l911:	
  4000  0C98                     	line	21
  4001                           	movf	(___xxtofl@val+3)^080h,w
  4002  0C98  0823               	iorwf	(___xxtofl@val+2)^080h,w
  4003  0C99  0422               	iorwf	(___xxtofl@val+1)^080h,w
  4004  0C9A  0421               	iorwf	(___xxtofl@val)^080h,w
  4005  0C9B  0420               	skipz
  4006  0C9C  1D03               	goto	u3141
  4007  0C9D  2C9F               	goto	u3140
  4008  0C9E  2CA0               u3141:
  4009  0C9F                     	goto	l2670
  4010  0C9F  2CAA               u3140:
  4011  0CA0                     	line	22
  4012                           	
  4013                           l2666:	
  4014  0CA0                     	movlw	0x0
  4015  0CA0  3000               	movwf	(?___xxtofl+3)^080h
  4016  0CA1  00A3               	movlw	0x0
  4017  0CA2  3000               	movwf	(?___xxtofl+2)^080h
  4018  0CA3  00A2               	movlw	0x0
  4019  0CA4  3000               	movwf	(?___xxtofl+1)^080h
  4020  0CA5  00A1               	movlw	0x0
  4021  0CA6  3000               	movwf	(?___xxtofl)^080h
  4022  0CA7  00A0               
  4023                           	goto	l913
  4024  0CA8  2D37               	
  4025                           l2668:	
  4026  0CA9                     	goto	l913
  4027  0CA9  2D37               	
  4028                           l912:	
  4029  0CAA                     	line	23
  4030                           	
  4031                           l2670:	
  4032  0CAA                     	movlw	low(096h)
  4033  0CAA  3096               	movwf	(??___xxtofl+0)^080h+0
  4034  0CAB  00A4               	movf	(??___xxtofl+0)^080h+0,w
  4035  0CAC  0824               	movwf	(___xxtofl@exp)^080h
  4036  0CAD  00A9               	line	24
  4037                           	goto	l2674
  4038  0CAE  2CBD               	
  4039                           l915:	
  4040  0CAF                     	line	25
  4041                           	
  4042                           l2672:	
  4043  0CAF                     	movlw	low(01h)
  4044  0CAF  3001               	movwf	(??___xxtofl+0)^080h+0
  4045  0CB0  00A4               	movf	(??___xxtofl+0)^080h+0,w
  4046  0CB1  0824               	addwf	(___xxtofl@exp)^080h,f
  4047  0CB2  07A9               	line	26
  4048                           	movlw	01h
  4049  0CB3  3001               u3155:
  4050  0CB4                     	clrc
  4051  0CB4  1003               	rrf	(___xxtofl@arg+3)^080h,f
  4052  0CB5  0CAD               	rrf	(___xxtofl@arg+2)^080h,f
  4053  0CB6  0CAC               	rrf	(___xxtofl@arg+1)^080h,f
  4054  0CB7  0CAB               	rrf	(___xxtofl@arg)^080h,f
  4055  0CB8  0CAA               	addlw	-1
  4056  0CB9  3EFF               	skipz
  4057  0CBA  1D03               	goto	u3155
  4058  0CBB  2CB4               
  4059                           	goto	l2674
  4060  0CBC  2CBD               	line	27
  4061                           	
  4062                           l914:	
  4063  0CBD                     	line	24
  4064                           	
  4065                           l2674:	
  4066  0CBD                     	movlw	high highword(0FE000000h)
  4067  0CBD  30FE               	andwf	(___xxtofl@arg+3)^080h,w
  4068  0CBE  052D               	btfss	status,2
  4069  0CBF  1D03               	goto	u3161
  4070  0CC0  2CC2               	goto	u3160
  4071  0CC1  2CC3               u3161:
  4072  0CC2                     	goto	l2672
  4073  0CC2  2CAF               u3160:
  4074  0CC3                     	goto	l917
  4075  0CC3  2CE0               	
  4076                           l916:	
  4077  0CC4                     	line	28
  4078                           	goto	l917
  4079  0CC4  2CE0               	
  4080                           l918:	
  4081  0CC5                     	line	29
  4082                           	
  4083                           l2676:	
  4084  0CC5                     	movlw	low(01h)
  4085  0CC5  3001               	movwf	(??___xxtofl+0)^080h+0
  4086  0CC6  00A4               	movf	(??___xxtofl+0)^080h+0,w
  4087  0CC7  0824               	addwf	(___xxtofl@exp)^080h,f
  4088  0CC8  07A9               	line	30
  4089                           	
  4090                           l2678:	
  4091  0CC9                     	movlw	01h
  4092  0CC9  3001               	addwf	(___xxtofl@arg)^080h,f
  4093  0CCA  07AA               	movlw	0
  4094  0CCB  3000               	skipnc
  4095  0CCC  1803               movlw 1
  4096  0CCD  3001               	addwf	(___xxtofl@arg+1)^080h,f
  4097  0CCE  07AB               	movlw	0
  4098  0CCF  3000               	skipnc
  4099  0CD0  1803               movlw 1
  4100  0CD1  3001               	addwf	(___xxtofl@arg+2)^080h,f
  4101  0CD2  07AC               	movlw	0
  4102  0CD3  3000               	skipnc
  4103  0CD4  1803               movlw 1
  4104  0CD5  3001               	addwf	(___xxtofl@arg+3)^080h,f
  4105  0CD6  07AD               	line	31
  4106                           	
  4107                           l2680:	
  4108  0CD7                     	movlw	01h
  4109  0CD7  3001               u3175:
  4110  0CD8                     	clrc
  4111  0CD8  1003               	rrf	(___xxtofl@arg+3)^080h,f
  4112  0CD9  0CAD               	rrf	(___xxtofl@arg+2)^080h,f
  4113  0CDA  0CAC               	rrf	(___xxtofl@arg+1)^080h,f
  4114  0CDB  0CAB               	rrf	(___xxtofl@arg)^080h,f
  4115  0CDC  0CAA               	addlw	-1
  4116  0CDD  3EFF               	skipz
  4117  0CDE  1D03               	goto	u3175
  4118  0CDF  2CD8               
  4119                           	line	32
  4120                           	
  4121                           l917:	
  4122  0CE0                     	line	28
  4123                           	movlw	high highword(0FF000000h)
  4124  0CE0  30FF               	andwf	(___xxtofl@arg+3)^080h,w
  4125  0CE1  052D               	btfss	status,2
  4126  0CE2  1D03               	goto	u3181
  4127  0CE3  2CE5               	goto	u3180
  4128  0CE4  2CE6               u3181:
  4129  0CE5                     	goto	l2676
  4130  0CE5  2CC5               u3180:
  4131  0CE6                     	goto	l2684
  4132  0CE6  2CF4               	
  4133                           l919:	
  4134  0CE7                     	line	33
  4135                           	goto	l2684
  4136  0CE7  2CF4               	
  4137                           l921:	
  4138  0CE8                     	line	34
  4139                           	
  4140                           l2682:	
  4141  0CE8                     	movlw	01h
  4142  0CE8  3001               	subwf	(___xxtofl@exp)^080h,f
  4143  0CE9  02A9               	line	35
  4144                           	movlw	01h
  4145  0CEA  3001               	movwf	(??___xxtofl+0)^080h+0
  4146  0CEB  00A4               u3195:
  4147  0CEC                     	clrc
  4148  0CEC  1003               	rlf	(___xxtofl@arg)^080h,f
  4149  0CED  0DAA               	rlf	(___xxtofl@arg+1)^080h,f
  4150  0CEE  0DAB               	rlf	(___xxtofl@arg+2)^080h,f
  4151  0CEF  0DAC               	rlf	(___xxtofl@arg+3)^080h,f
  4152  0CF0  0DAD               	decfsz	(??___xxtofl+0)^080h+0
  4153  0CF1  0BA4               	goto	u3195
  4154  0CF2  2CEC               	goto	l2684
  4155  0CF3  2CF4               	line	36
  4156                           	
  4157                           l920:	
  4158  0CF4                     	line	33
  4159                           	
  4160                           l2684:	
  4161  0CF4                     	btfsc	(___xxtofl@arg+2)^080h,(23)&7
  4162  0CF4  1BAC               	goto	u3201
  4163  0CF5  2CF7               	goto	u3200
  4164  0CF6  2CF8               u3201:
  4165  0CF7                     	goto	l924
  4166  0CF7  2CFF               u3200:
  4167  0CF8                     	
  4168                           l2686:	
  4169  0CF8                     	movlw	low(02h)
  4170  0CF8  3002               	subwf	(___xxtofl@exp)^080h,w
  4171  0CF9  0229               	skipnc
  4172  0CFA  1803               	goto	u3211
  4173  0CFB  2CFD               	goto	u3210
  4174  0CFC  2CFE               u3211:
  4175  0CFD                     	goto	l2682
  4176  0CFD  2CE8               u3210:
  4177  0CFE                     	goto	l924
  4178  0CFE  2CFF               	
  4179                           l923:	
  4180  0CFF                     	
  4181                           l924:	
  4182  0CFF                     	line	37
  4183                           	btfsc	(___xxtofl@exp)^080h,(0)&7
  4184  0CFF  1829               	goto	u3221
  4185  0D00  2D02               	goto	u3220
  4186  0D01  2D03               u3221:
  4187  0D02                     	goto	l925
  4188  0D02  2D0B               u3220:
  4189  0D03                     	line	38
  4190                           	
  4191                           l2688:	
  4192  0D03                     	movlw	0FFh
  4193  0D03  30FF               	andwf	(___xxtofl@arg)^080h,f
  4194  0D04  05AA               	movlw	0FFh
  4195  0D05  30FF               	andwf	(___xxtofl@arg+1)^080h,f
  4196  0D06  05AB               	movlw	07Fh
  4197  0D07  307F               	andwf	(___xxtofl@arg+2)^080h,f
  4198  0D08  05AC               	movlw	0FFh
  4199  0D09  30FF               	andwf	(___xxtofl@arg+3)^080h,f
  4200  0D0A  05AD               	
  4201                           l925:	
  4202  0D0B                     	line	39
  4203                           	clrc
  4204  0D0B  1003               	rrf	(___xxtofl@exp)^080h,f
  4205  0D0C  0CA9               
  4206                           	line	40
  4207                           	
  4208                           l2690:	
  4209  0D0D                     	movf	(___xxtofl@exp)^080h,w
  4210  0D0D  0829               	movwf	(??___xxtofl+0)^080h+0
  4211  0D0E  00A4               	clrf	(??___xxtofl+0)^080h+0+1
  4212  0D0F  01A5               	clrf	(??___xxtofl+0)^080h+0+2
  4213  0D10  01A6               	clrf	(??___xxtofl+0)^080h+0+3
  4214  0D11  01A7               	movlw	018h
  4215  0D12  3018               u3235:
  4216  0D13                     	clrc
  4217  0D13  1003               	rlf	(??___xxtofl+0)^080h+0,f
  4218  0D14  0DA4               	rlf	(??___xxtofl+0)^080h+1,f
  4219  0D15  0DA5               	rlf	(??___xxtofl+0)^080h+2,f
  4220  0D16  0DA6               	rlf	(??___xxtofl+0)^080h+3,f
  4221  0D17  0DA7               u3230:
  4222  0D18                     	addlw	-1
  4223  0D18  3EFF               	skipz
  4224  0D19  1D03               	goto	u3235
  4225  0D1A  2D13               	movf	0+(??___xxtofl+0)^080h+0,w
  4226  0D1B  0824               	iorwf	(___xxtofl@arg)^080h,f
  4227  0D1C  04AA               	movf	1+(??___xxtofl+0)^080h+0,w
  4228  0D1D  0825               	iorwf	(___xxtofl@arg+1)^080h,f
  4229  0D1E  04AB               	movf	2+(??___xxtofl+0)^080h+0,w
  4230  0D1F  0826               	iorwf	(___xxtofl@arg+2)^080h,f
  4231  0D20  04AC               	movf	3+(??___xxtofl+0)^080h+0,w
  4232  0D21  0827               	iorwf	(___xxtofl@arg+3)^080h,f
  4233  0D22  04AD               	line	41
  4234                           	
  4235                           l2692:	
  4236  0D23                     	movf	((___xxtofl@sign)^080h),w
  4237  0D23  0828               	btfsc	status,2
  4238  0D24  1903               	goto	u3241
  4239  0D25  2D27               	goto	u3240
  4240  0D26  2D28               u3241:
  4241  0D27                     	goto	l2698
  4242  0D27  2D2E               u3240:
  4243  0D28                     	
  4244                           l2694:	
  4245  0D28                     	btfss	(___xxtofl@val+3)^080h,7
  4246  0D28  1FA3               	goto	u3251
  4247  0D29  2D2B               	goto	u3250
  4248  0D2A  2D2C               u3251:
  4249  0D2B                     	goto	l2698
  4250  0D2B  2D2E               u3250:
  4251  0D2C                     	line	42
  4252                           	
  4253                           l2696:	
  4254  0D2C                     	bsf	(___xxtofl@arg)^080h+(31/8),(31)&7
  4255  0D2C  17AD               	goto	l2698
  4256  0D2D  2D2E               	
  4257                           l926:	
  4258  0D2E                     	line	43
  4259                           	
  4260                           l2698:	
  4261  0D2E                     	movf	(___xxtofl@arg+3)^080h,w
  4262  0D2E  082D               	movwf	(?___xxtofl+3)^080h
  4263  0D2F  00A3               	movf	(___xxtofl@arg+2)^080h,w
  4264  0D30  082C               	movwf	(?___xxtofl+2)^080h
  4265  0D31  00A2               	movf	(___xxtofl@arg+1)^080h,w
  4266  0D32  082B               	movwf	(?___xxtofl+1)^080h
  4267  0D33  00A1               	movf	(___xxtofl@arg)^080h,w
  4268  0D34  082A               	movwf	(?___xxtofl)^080h
  4269  0D35  00A0               
  4270                           	goto	l913
  4271  0D36  2D37               	
  4272                           l2700:	
  4273  0D37                     	line	44
  4274                           	
  4275                           l913:	
  4276  0D37                     	return
  4277  0D37  0008               	opt stack 0
  4278                           GLOBAL	__end_of___xxtofl
  4279                           	__end_of___xxtofl:
  4280  0D38                     	signat	___xxtofl,8316
  4281                           	global	___fltol
  4282                           
  4283 ;; *************** function ___fltol *****************
  4284 ;; Defined at:
  4285 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  f1              4   38[BANK1 ] unsigned char 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  exp1            1   48[BANK1 ] unsigned char 
  4290 ;;  sign1           1   47[BANK1 ] unsigned char 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  4   38[BANK1 ] long 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       0       4       0       0
  4301 ;;      Locals:         0       0       2       0       0
  4302 ;;      Temps:          0       0       5       0       0
  4303 ;;      Totals:         0       0      11       0       0
  4304 ;;Total ram usage:       11 bytes
  4305 ;; Hardware stack levels used:    1
  4306 ;; Hardware stack levels required when called:    5
  4307 ;; This function calls:
  4308 ;;		Nothing
  4309 ;; This function is called by:
  4310 ;;		_is_deadzone
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  4314                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  4315                           	line	43
  4316                           global __ptext6
  4317                           __ptext6:	;psect for function ___fltol
  4318  0B16                     psect	text6
  4319                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
  4320                           	line	43
  4321                           	global	__size_of___fltol
  4322                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4323  009C                     	
  4324                           ___fltol:	
  4325  0B16                     ;incstack = 0
  4326 ;; hardware stack exceeded
  4327                           	opt	stack 0
  4328                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4329                           	line	47
  4330                           	
  4331                           l2380:	
  4332  0B16                     	bsf	status, 5	;RP0=1, select bank1
  4333  0B16  1683               	bcf	status, 6	;RP1=0, select bank1
  4334  0B17  1303               	movf	(___fltol@f1)^080h,w
  4335  0B18  0846               	movwf	(??___fltol+0)^080h+0
  4336  0B19  00CA               	movf	(___fltol@f1+1)^080h,w
  4337  0B1A  0847               	movwf	((??___fltol+0)^080h+0+1)
  4338  0B1B  00CB               	movf	(___fltol@f1+2)^080h,w
  4339  0B1C  0848               	movwf	((??___fltol+0)^080h+0+2)
  4340  0B1D  00CC               	movf	(___fltol@f1+3)^080h,w
  4341  0B1E  0849               	movwf	((??___fltol+0)^080h+0+3)
  4342  0B1F  00CD               	clrc
  4343  0B20  1003               	rlf	(??___fltol+0)^080h+2,w
  4344  0B21  0D4C               	rlf	(??___fltol+0)^080h+3,w
  4345  0B22  0D4D               	movwf	(??___fltol+4)^080h+0
  4346  0B23  00CE               	movf	(??___fltol+4)^080h+0,w
  4347  0B24  084E               	movwf	(___fltol@exp1)^080h
  4348  0B25  00D0               	movf	(((___fltol@exp1)^080h)),w
  4349  0B26  0850               	btfss	status,2
  4350  0B27  1D03               	goto	u2431
  4351  0B28  2B2A               	goto	u2430
  4352  0B29  2B2B               u2431:
  4353  0B2A                     	goto	l2386
  4354  0B2A  2B35               u2430:
  4355  0B2B                     	line	48
  4356                           	
  4357                           l2382:	
  4358  0B2B                     	movlw	high highword(0)
  4359  0B2B  3000               	movwf	(?___fltol+3)^080h
  4360  0B2C  00C9               	movlw	low highword(0)
  4361  0B2D  3000               	movwf	(?___fltol+2)^080h
  4362  0B2E  00C8               	movlw	high(0)
  4363  0B2F  3000               	movwf	(?___fltol+1)^080h
  4364  0B30  00C7               	movlw	low(0)
  4365  0B31  3000               	movwf	(?___fltol)^080h
  4366  0B32  00C6               
  4367                           	goto	l689
  4368  0B33  2BB1               	
  4369                           l2384:	
  4370  0B34                     	goto	l689
  4371  0B34  2BB1               	
  4372                           l688:	
  4373  0B35                     	line	49
  4374                           	
  4375                           l2386:	
  4376  0B35                     	movf	(___fltol@f1)^080h,w
  4377  0B35  0846               	movwf	(??___fltol+0)^080h+0
  4378  0B36  00CA               	movf	(___fltol@f1+1)^080h,w
  4379  0B37  0847               	movwf	((??___fltol+0)^080h+0+1)
  4380  0B38  00CB               	movf	(___fltol@f1+2)^080h,w
  4381  0B39  0848               	movwf	((??___fltol+0)^080h+0+2)
  4382  0B3A  00CC               	movf	(___fltol@f1+3)^080h,w
  4383  0B3B  0849               	movwf	((??___fltol+0)^080h+0+3)
  4384  0B3C  00CD               	movlw	01Fh
  4385  0B3D  301F               u2445:
  4386  0B3E                     	clrc
  4387  0B3E  1003               	rrf	(??___fltol+0)^080h+3,f
  4388  0B3F  0CCD               	rrf	(??___fltol+0)^080h+2,f
  4389  0B40  0CCC               	rrf	(??___fltol+0)^080h+1,f
  4390  0B41  0CCB               	rrf	(??___fltol+0)^080h+0,f
  4391  0B42  0CCA               u2440:
  4392  0B43                     	addlw	-1
  4393  0B43  3EFF               	skipz
  4394  0B44  1D03               	goto	u2445
  4395  0B45  2B3E               	movf	0+(??___fltol+0)^080h+0,w
  4396  0B46  084A               	movwf	(??___fltol+4)^080h+0
  4397  0B47  00CE               	movf	(??___fltol+4)^080h+0,w
  4398  0B48  084E               	movwf	(___fltol@sign1)^080h
  4399  0B49  00CF               	line	50
  4400                           	
  4401                           l2388:	
  4402  0B4A                     	bsf	(___fltol@f1)^080h+(23/8),(23)&7
  4403  0B4A  17C8               	line	51
  4404                           	
  4405                           l2390:	
  4406  0B4B                     	movlw	0FFh
  4407  0B4B  30FF               	andwf	(___fltol@f1)^080h,f
  4408  0B4C  05C6               	movlw	0FFh
  4409  0B4D  30FF               	andwf	(___fltol@f1+1)^080h,f
  4410  0B4E  05C7               	movlw	0FFh
  4411  0B4F  30FF               	andwf	(___fltol@f1+2)^080h,f
  4412  0B50  05C8               	movlw	0
  4413  0B51  3000               	andwf	(___fltol@f1+3)^080h,f
  4414  0B52  05C9               	line	52
  4415                           	
  4416                           l2392:	
  4417  0B53                     	movlw	096h
  4418  0B53  3096               	subwf	(___fltol@exp1)^080h,f
  4419  0B54  02D0               	line	53
  4420                           	
  4421                           l2394:	
  4422  0B55                     	btfss	(___fltol@exp1)^080h,7
  4423  0B55  1FD0               	goto	u2451
  4424  0B56  2B58               	goto	u2450
  4425  0B57  2B59               u2451:
  4426  0B58                     	goto	l2404
  4427  0B58  2B7E               u2450:
  4428  0B59                     	line	54
  4429                           	
  4430                           l2396:	
  4431  0B59                     	movf	(___fltol@exp1)^080h,w
  4432  0B59  0850               	xorlw	80h
  4433  0B5A  3A80               	addlw	-((-23)^80h)
  4434  0B5B  3E97               	skipnc
  4435  0B5C  1803               	goto	u2461
  4436  0B5D  2B5F               	goto	u2460
  4437  0B5E  2B60               u2461:
  4438  0B5F                     	goto	l2402
  4439  0B5F  2B6B               u2460:
  4440  0B60                     	line	55
  4441                           	
  4442                           l2398:	
  4443  0B60                     	movlw	high highword(0)
  4444  0B60  3000               	movwf	(?___fltol+3)^080h
  4445  0B61  00C9               	movlw	low highword(0)
  4446  0B62  3000               	movwf	(?___fltol+2)^080h
  4447  0B63  00C8               	movlw	high(0)
  4448  0B64  3000               	movwf	(?___fltol+1)^080h
  4449  0B65  00C7               	movlw	low(0)
  4450  0B66  3000               	movwf	(?___fltol)^080h
  4451  0B67  00C6               
  4452                           	goto	l689
  4453  0B68  2BB1               	
  4454                           l2400:	
  4455  0B69                     	goto	l689
  4456  0B69  2BB1               	
  4457                           l691:	
  4458  0B6A                     	goto	l2402
  4459  0B6A  2B6B               	line	56
  4460                           	
  4461                           l692:	
  4462  0B6B                     	line	57
  4463                           	
  4464                           l2402:	
  4465  0B6B                     	movlw	01h
  4466  0B6B  3001               u2475:
  4467  0B6C                     	clrc
  4468  0B6C  1003               	rrf	(___fltol@f1+3)^080h,f
  4469  0B6D  0CC9               	rrf	(___fltol@f1+2)^080h,f
  4470  0B6E  0CC8               	rrf	(___fltol@f1+1)^080h,f
  4471  0B6F  0CC7               	rrf	(___fltol@f1)^080h,f
  4472  0B70  0CC6               	addlw	-1
  4473  0B71  3EFF               	skipz
  4474  0B72  1D03               	goto	u2475
  4475  0B73  2B6C               
  4476                           	line	58
  4477                           	movlw	low(01h)
  4478  0B74  3001               	movwf	(??___fltol+0)^080h+0
  4479  0B75  00CA               	movf	(??___fltol+0)^080h+0,w
  4480  0B76  084A               	addwf	(___fltol@exp1)^080h,f
  4481  0B77  07D0               	btfss	status,2
  4482  0B78  1D03               	goto	u2481
  4483  0B79  2B7B               	goto	u2480
  4484  0B7A  2B7C               u2481:
  4485  0B7B                     	goto	l2402
  4486  0B7B  2B6B               u2480:
  4487  0B7C                     	goto	l2412
  4488  0B7C  2BA1               	
  4489                           l693:	
  4490  0B7D                     	line	59
  4491                           	goto	l2412
  4492  0B7D  2BA1               	
  4493                           l690:	
  4494  0B7E                     	line	60
  4495                           	
  4496                           l2404:	
  4497  0B7E                     	movlw	low(020h)
  4498  0B7E  3020               	subwf	(___fltol@exp1)^080h,w
  4499  0B7F  0250               	skipc
  4500  0B80  1C03               	goto	u2491
  4501  0B81  2B83               	goto	u2490
  4502  0B82  2B84               u2491:
  4503  0B83                     	goto	l696
  4504  0B83  2B9A               u2490:
  4505  0B84                     	line	61
  4506                           	
  4507                           l2406:	
  4508  0B84                     	movlw	high highword(0)
  4509  0B84  3000               	movwf	(?___fltol+3)^080h
  4510  0B85  00C9               	movlw	low highword(0)
  4511  0B86  3000               	movwf	(?___fltol+2)^080h
  4512  0B87  00C8               	movlw	high(0)
  4513  0B88  3000               	movwf	(?___fltol+1)^080h
  4514  0B89  00C7               	movlw	low(0)
  4515  0B8A  3000               	movwf	(?___fltol)^080h
  4516  0B8B  00C6               
  4517                           	goto	l689
  4518  0B8C  2BB1               	
  4519                           l2408:	
  4520  0B8D                     	goto	l689
  4521  0B8D  2BB1               	
  4522                           l695:	
  4523  0B8E                     	line	62
  4524                           	goto	l696
  4525  0B8E  2B9A               	
  4526                           l697:	
  4527  0B8F                     	line	63
  4528                           	
  4529                           l2410:	
  4530  0B8F                     	movlw	01h
  4531  0B8F  3001               	movwf	(??___fltol+0)^080h+0
  4532  0B90  00CA               u2505:
  4533  0B91                     	clrc
  4534  0B91  1003               	rlf	(___fltol@f1)^080h,f
  4535  0B92  0DC6               	rlf	(___fltol@f1+1)^080h,f
  4536  0B93  0DC7               	rlf	(___fltol@f1+2)^080h,f
  4537  0B94  0DC8               	rlf	(___fltol@f1+3)^080h,f
  4538  0B95  0DC9               	decfsz	(??___fltol+0)^080h+0
  4539  0B96  0BCA               	goto	u2505
  4540  0B97  2B91               	line	64
  4541                           	movlw	01h
  4542  0B98  3001               	subwf	(___fltol@exp1)^080h,f
  4543  0B99  02D0               	line	65
  4544                           	
  4545                           l696:	
  4546  0B9A                     	line	62
  4547                           	movf	((___fltol@exp1)^080h),w
  4548  0B9A  0850               	btfss	status,2
  4549  0B9B  1D03               	goto	u2511
  4550  0B9C  2B9E               	goto	u2510
  4551  0B9D  2B9F               u2511:
  4552  0B9E                     	goto	l2410
  4553  0B9E  2B8F               u2510:
  4554  0B9F                     	goto	l2412
  4555  0B9F  2BA1               	
  4556                           l698:	
  4557  0BA0                     	goto	l2412
  4558  0BA0  2BA1               	line	66
  4559                           	
  4560                           l694:	
  4561  0BA1                     	line	67
  4562                           	
  4563                           l2412:	
  4564  0BA1                     	movf	((___fltol@sign1)^080h),w
  4565  0BA1  084F               	btfsc	status,2
  4566  0BA2  1903               	goto	u2521
  4567  0BA3  2BA5               	goto	u2520
  4568  0BA4  2BA6               u2521:
  4569  0BA5                     	goto	l699
  4570  0BA5  2BB1               u2520:
  4571  0BA6                     	line	68
  4572                           	
  4573                           l2414:	
  4574  0BA6                     	comf	(___fltol@f1)^080h,f
  4575  0BA6  09C6               	comf	(___fltol@f1+1)^080h,f
  4576  0BA7  09C7               	comf	(___fltol@f1+2)^080h,f
  4577  0BA8  09C8               	comf	(___fltol@f1+3)^080h,f
  4578  0BA9  09C9               	incf	(___fltol@f1)^080h,f
  4579  0BAA  0AC6               	skipnz
  4580  0BAB  1903               	incf	(___fltol@f1+1)^080h,f
  4581  0BAC  0AC7               	skipnz
  4582  0BAD  1903               	incf	(___fltol@f1+2)^080h,f
  4583  0BAE  0AC8               	skipnz
  4584  0BAF  1903               	incf	(___fltol@f1+3)^080h,f
  4585  0BB0  0AC9               	
  4586                           l699:	
  4587  0BB1                     	line	69
  4588                           	line	70
  4589                           	
  4590                           l689:	
  4591  0BB1                     	return
  4592  0BB1  0008               	opt stack 0
  4593                           GLOBAL	__end_of___fltol
  4594                           	__end_of___fltol:
  4595  0BB2                     	signat	___fltol,4220
  4596                           	global	___fladd
  4597                           
  4598 ;; *************** function ___fladd *****************
  4599 ;; Defined at:
  4600 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  4601 ;; Parameters:    Size  Location     Type
  4602 ;;  b               4   14[BANK1 ] long 
  4603 ;;  a               4   18[BANK1 ] long 
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;  grs             1   37[BANK1 ] unsigned char 
  4606 ;;  bexp            1   36[BANK1 ] unsigned char 
  4607 ;;  aexp            1   35[BANK1 ] unsigned char 
  4608 ;;  signs           1   34[BANK1 ] unsigned char 
  4609 ;; Return value:  Size  Location     Type
  4610 ;;                  4   14[BANK1 ] unsigned char 
  4611 ;; Registers used:
  4612 ;;		wreg, status,2, status,0, btemp+1
  4613 ;; Tracked objects:
  4614 ;;		On entry : 0/0
  4615 ;;		On exit  : 0/0
  4616 ;;		Unchanged: 0/0
  4617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4618 ;;      Params:         0       0       8       0       0
  4619 ;;      Locals:         0       0       4       0       0
  4620 ;;      Temps:          0       0      12       0       0
  4621 ;;      Totals:         0       0      24       0       0
  4622 ;;Total ram usage:       24 bytes
  4623 ;; Hardware stack levels used:    1
  4624 ;; Hardware stack levels required when called:    5
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_is_deadzone
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  4632                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  4633                           	line	10
  4634                           global __ptext7
  4635                           __ptext7:	;psect for function ___fladd
  4636  0029                     psect	text7
  4637                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
  4638                           	line	10
  4639                           	global	__size_of___fladd
  4640                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  4641  02BC                     	
  4642                           ___fladd:	
  4643  0029                     ;incstack = 0
  4644 ;; hardware stack exceeded
  4645                           	opt	stack 0
  4646                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4647                           	line	21
  4648                           	
  4649                           l2464:	
  4650  0029                     	bsf	status, 5	;RP0=1, select bank1
  4651  0029  1683               	bcf	status, 6	;RP1=0, select bank1
  4652  002A  1303               	movf	0+(___fladd@b)^080h+03h,w
  4653  002B  0831               	andlw	080h
  4654  002C  3980               	movwf	(??___fladd+0)^080h+0
  4655  002D  00B6               	movf	(??___fladd+0)^080h+0,w
  4656  002E  0836               	movwf	(___fladd@signs)^080h
  4657  002F  00C2               	line	22
  4658                           	
  4659                           l2466:	
  4660  0030                     	movf	0+(___fladd@b)^080h+03h,w
  4661  0030  0831               	movwf	(??___fladd+0)^080h+0
  4662  0031  00B6               	addwf	(??___fladd+0)^080h+0,w
  4663  0032  0736               	movwf	(??___fladd+1)^080h+0
  4664  0033  00B7               	movf	(??___fladd+1)^080h+0,w
  4665  0034  0837               	movwf	(___fladd@bexp)^080h
  4666  0035  00C4               	line	23
  4667                           	
  4668                           l2468:	
  4669  0036                     	btfss	0+(___fladd@b)^080h+02h,(7)&7
  4670  0036  1FB0               	goto	u2661
  4671  0037  2839               	goto	u2660
  4672  0038  283A               u2661:
  4673  0039                     	goto	l2472
  4674  0039  283C               u2660:
  4675  003A                     	line	24
  4676                           	
  4677                           l2470:	
  4678  003A                     	bsf	(___fladd@bexp)^080h+(0/8),(0)&7
  4679  003A  1444               	goto	l2472
  4680  003B  283C               	line	25
  4681                           	
  4682                           l788:	
  4683  003C                     	line	28
  4684                           	
  4685                           l2472:	
  4686  003C                     	movf	((___fladd@bexp)^080h),w
  4687  003C  0844               	btfsc	status,2
  4688  003D  1903               	goto	u2671
  4689  003E  2840               	goto	u2670
  4690  003F  2841               u2671:
  4691  0040                     	goto	l2482
  4692  0040  2852               u2670:
  4693  0041                     	line	30
  4694                           	
  4695                           l2474:	
  4696  0041                     		incf	((___fladd@bexp)^080h),w
  4697  0041  0A44               	btfss	status,2
  4698  0042  1D03               	goto	u2681
  4699  0043  2845               	goto	u2680
  4700  0044  2846               u2681:
  4701  0045                     	goto	l2478
  4702  0045  284F               u2680:
  4703  0046                     	line	32
  4704                           	
  4705                           l2476:	
  4706  0046                     	movlw	0x0
  4707  0046  3000               	movwf	(___fladd@b+3)^080h
  4708  0047  00B1               	movlw	0x0
  4709  0048  3000               	movwf	(___fladd@b+2)^080h
  4710  0049  00B0               	movlw	0x0
  4711  004A  3000               	movwf	(___fladd@b+1)^080h
  4712  004B  00AF               	movlw	0x0
  4713  004C  3000               	movwf	(___fladd@b)^080h
  4714  004D  00AE               
  4715                           	goto	l2478
  4716  004E  284F               	line	33
  4717                           	
  4718                           l790:	
  4719  004F                     	line	35
  4720                           	
  4721                           l2478:	
  4722  004F                     	bsf	(___fladd@b)^080h+(23/8),(23)&7
  4723  004F  17B0               	line	37
  4724                           	
  4725                           l2480:	
  4726  0050                     	clrf	0+(___fladd@b)^080h+03h
  4727  0050  01B1               	line	38
  4728                           	goto	l2484
  4729  0051  285B               	line	39
  4730                           	
  4731                           l789:	
  4732  0052                     	line	41
  4733                           	
  4734                           l2482:	
  4735  0052                     	movlw	0x0
  4736  0052  3000               	movwf	(___fladd@b+3)^080h
  4737  0053  00B1               	movlw	0x0
  4738  0054  3000               	movwf	(___fladd@b+2)^080h
  4739  0055  00B0               	movlw	0x0
  4740  0056  3000               	movwf	(___fladd@b+1)^080h
  4741  0057  00AF               	movlw	0x0
  4742  0058  3000               	movwf	(___fladd@b)^080h
  4743  0059  00AE               
  4744                           	goto	l2484
  4745  005A  285B               	line	42
  4746                           	
  4747                           l791:	
  4748  005B                     	line	44
  4749                           	
  4750                           l2484:	
  4751  005B                     	movf	0+(___fladd@a)^080h+03h,w
  4752  005B  0835               	andlw	080h
  4753  005C  3980               	movwf	(??___fladd+0)^080h+0
  4754  005D  00B6               	movf	(??___fladd+0)^080h+0,w
  4755  005E  0836               	movwf	(___fladd@aexp)^080h
  4756  005F  00C3               	line	46
  4757                           	
  4758                           l2486:	
  4759  0060                     	movf	(___fladd@aexp)^080h,w
  4760  0060  0843               	xorwf	(___fladd@signs)^080h,w
  4761  0061  0642               	skipnz
  4762  0062  1903               	goto	u2691
  4763  0063  2865               	goto	u2690
  4764  0064  2866               u2691:
  4765  0065                     	goto	l2490
  4766  0065  2868               u2690:
  4767  0066                     	line	47
  4768                           	
  4769                           l2488:	
  4770  0066                     	bsf	(___fladd@signs)^080h+(6/8),(6)&7
  4771  0066  1742               	goto	l2490
  4772  0067  2868               	line	48
  4773                           	
  4774                           l792:	
  4775  0068                     	line	49
  4776                           	
  4777                           l2490:	
  4778  0068                     	movf	0+(___fladd@a)^080h+03h,w
  4779  0068  0835               	movwf	(??___fladd+0)^080h+0
  4780  0069  00B6               	addwf	(??___fladd+0)^080h+0,w
  4781  006A  0736               	movwf	(??___fladd+1)^080h+0
  4782  006B  00B7               	movf	(??___fladd+1)^080h+0,w
  4783  006C  0837               	movwf	(___fladd@aexp)^080h
  4784  006D  00C3               	line	50
  4785                           	
  4786                           l2492:	
  4787  006E                     	btfss	0+(___fladd@a)^080h+02h,(7)&7
  4788  006E  1FB4               	goto	u2701
  4789  006F  2871               	goto	u2700
  4790  0070  2872               u2701:
  4791  0071                     	goto	l2496
  4792  0071  2874               u2700:
  4793  0072                     	line	51
  4794                           	
  4795                           l2494:	
  4796  0072                     	bsf	(___fladd@aexp)^080h+(0/8),(0)&7
  4797  0072  1443               	goto	l2496
  4798  0073  2874               	line	52
  4799                           	
  4800                           l793:	
  4801  0074                     	line	55
  4802                           	
  4803                           l2496:	
  4804  0074                     	movf	((___fladd@aexp)^080h),w
  4805  0074  0843               	btfsc	status,2
  4806  0075  1903               	goto	u2711
  4807  0076  2878               	goto	u2710
  4808  0077  2879               u2711:
  4809  0078                     	goto	l2506
  4810  0078  288A               u2710:
  4811  0079                     	line	57
  4812                           	
  4813                           l2498:	
  4814  0079                     		incf	((___fladd@aexp)^080h),w
  4815  0079  0A43               	btfss	status,2
  4816  007A  1D03               	goto	u2721
  4817  007B  287D               	goto	u2720
  4818  007C  287E               u2721:
  4819  007D                     	goto	l2502
  4820  007D  2887               u2720:
  4821  007E                     	line	59
  4822                           	
  4823                           l2500:	
  4824  007E                     	movlw	0x0
  4825  007E  3000               	movwf	(___fladd@a+3)^080h
  4826  007F  00B5               	movlw	0x0
  4827  0080  3000               	movwf	(___fladd@a+2)^080h
  4828  0081  00B4               	movlw	0x0
  4829  0082  3000               	movwf	(___fladd@a+1)^080h
  4830  0083  00B3               	movlw	0x0
  4831  0084  3000               	movwf	(___fladd@a)^080h
  4832  0085  00B2               
  4833                           	goto	l2502
  4834  0086  2887               	line	60
  4835                           	
  4836                           l795:	
  4837  0087                     	line	62
  4838                           	
  4839                           l2502:	
  4840  0087                     	bsf	(___fladd@a)^080h+(23/8),(23)&7
  4841  0087  17B4               	line	64
  4842                           	
  4843                           l2504:	
  4844  0088                     	clrf	0+(___fladd@a)^080h+03h
  4845  0088  01B5               	line	65
  4846                           	goto	l796
  4847  0089  2892               	line	66
  4848                           	
  4849                           l794:	
  4850  008A                     	line	68
  4851                           	
  4852                           l2506:	
  4853  008A                     	movlw	0x0
  4854  008A  3000               	movwf	(___fladd@a+3)^080h
  4855  008B  00B5               	movlw	0x0
  4856  008C  3000               	movwf	(___fladd@a+2)^080h
  4857  008D  00B4               	movlw	0x0
  4858  008E  3000               	movwf	(___fladd@a+1)^080h
  4859  008F  00B3               	movlw	0x0
  4860  0090  3000               	movwf	(___fladd@a)^080h
  4861  0091  00B2               
  4862                           	line	69
  4863                           	
  4864                           l796:	
  4865  0092                     	line	75
  4866                           	movf	(___fladd@bexp)^080h,w
  4867  0092  0844               	subwf	(___fladd@aexp)^080h,w
  4868  0093  0243               	skipnc
  4869  0094  1803               	goto	u2731
  4870  0095  2897               	goto	u2730
  4871  0096  2898               u2731:
  4872  0097                     	goto	l2542
  4873  0097  28DE               u2730:
  4874  0098                     	line	77
  4875                           	
  4876                           l2508:	
  4877  0098                     	btfss	(___fladd@signs)^080h,(6)&7
  4878  0098  1F42               	goto	u2741
  4879  0099  289B               	goto	u2740
  4880  009A  289C               u2741:
  4881  009B                     	goto	l2512
  4882  009B  28A1               u2740:
  4883  009C                     	line	78
  4884                           	
  4885                           l2510:	
  4886  009C                     	movlw	low(080h)
  4887  009C  3080               	movwf	(??___fladd+0)^080h+0
  4888  009D  00B6               	movf	(??___fladd+0)^080h+0,w
  4889  009E  0836               	xorwf	(___fladd@signs)^080h,f
  4890  009F  06C2               	goto	l2512
  4891  00A0  28A1               	line	79
  4892                           	
  4893                           l798:	
  4894  00A1                     	line	81
  4895                           	
  4896                           l2512:	
  4897  00A1                     	movf	(___fladd@bexp)^080h,w
  4898  00A1  0844               	movwf	(??___fladd+0)^080h+0
  4899  00A2  00B6               	movf	(??___fladd+0)^080h+0,w
  4900  00A3  0836               	movwf	(___fladd@grs)^080h
  4901  00A4  00C5               	line	82
  4902                           	
  4903                           l2514:	
  4904  00A5                     	movf	(___fladd@aexp)^080h,w
  4905  00A5  0843               	movwf	(??___fladd+0)^080h+0
  4906  00A6  00B6               	movf	(??___fladd+0)^080h+0,w
  4907  00A7  0836               	movwf	(___fladd@bexp)^080h
  4908  00A8  00C4               	line	83
  4909                           	
  4910                           l2516:	
  4911  00A9                     	movf	(___fladd@grs)^080h,w
  4912  00A9  0845               	movwf	(??___fladd+0)^080h+0
  4913  00AA  00B6               	movf	(??___fladd+0)^080h+0,w
  4914  00AB  0836               	movwf	(___fladd@aexp)^080h
  4915  00AC  00C3               	line	84
  4916                           	
  4917                           l2518:	
  4918  00AD                     	movf	(___fladd@b)^080h,w
  4919  00AD  082E               	movwf	(??___fladd+0)^080h+0
  4920  00AE  00B6               	movf	(??___fladd+0)^080h+0,w
  4921  00AF  0836               	movwf	(___fladd@grs)^080h
  4922  00B0  00C5               	line	85
  4923                           	
  4924                           l2520:	
  4925  00B1                     	movf	(___fladd@a)^080h,w
  4926  00B1  0832               	movwf	(??___fladd+0)^080h+0
  4927  00B2  00B6               	movf	(??___fladd+0)^080h+0,w
  4928  00B3  0836               	movwf	(___fladd@b)^080h
  4929  00B4  00AE               	line	86
  4930                           	
  4931                           l2522:	
  4932  00B5                     	movf	(___fladd@grs)^080h,w
  4933  00B5  0845               	movwf	(??___fladd+0)^080h+0
  4934  00B6  00B6               	movf	(??___fladd+0)^080h+0,w
  4935  00B7  0836               	movwf	(___fladd@a)^080h
  4936  00B8  00B2               	line	87
  4937                           	
  4938                           l2524:	
  4939  00B9                     	movf	0+(___fladd@b)^080h+01h,w
  4940  00B9  082F               	movwf	(??___fladd+0)^080h+0
  4941  00BA  00B6               	movf	(??___fladd+0)^080h+0,w
  4942  00BB  0836               	movwf	(___fladd@grs)^080h
  4943  00BC  00C5               	line	88
  4944                           	
  4945                           l2526:	
  4946  00BD                     	movf	0+(___fladd@a)^080h+01h,w
  4947  00BD  0833               	movwf	(??___fladd+0)^080h+0
  4948  00BE  00B6               	movf	(??___fladd+0)^080h+0,w
  4949  00BF  0836               	movwf	0+(___fladd@b)^080h+01h
  4950  00C0  00AF               	line	89
  4951                           	
  4952                           l2528:	
  4953  00C1                     	movf	(___fladd@grs)^080h,w
  4954  00C1  0845               	movwf	(??___fladd+0)^080h+0
  4955  00C2  00B6               	movf	(??___fladd+0)^080h+0,w
  4956  00C3  0836               	movwf	0+(___fladd@a)^080h+01h
  4957  00C4  00B3               	line	90
  4958                           	
  4959                           l2530:	
  4960  00C5                     	movf	0+(___fladd@b)^080h+02h,w
  4961  00C5  0830               	movwf	(??___fladd+0)^080h+0
  4962  00C6  00B6               	movf	(??___fladd+0)^080h+0,w
  4963  00C7  0836               	movwf	(___fladd@grs)^080h
  4964  00C8  00C5               	line	91
  4965                           	
  4966                           l2532:	
  4967  00C9                     	movf	0+(___fladd@a)^080h+02h,w
  4968  00C9  0834               	movwf	(??___fladd+0)^080h+0
  4969  00CA  00B6               	movf	(??___fladd+0)^080h+0,w
  4970  00CB  0836               	movwf	0+(___fladd@b)^080h+02h
  4971  00CC  00B0               	line	92
  4972                           	
  4973                           l2534:	
  4974  00CD                     	movf	(___fladd@grs)^080h,w
  4975  00CD  0845               	movwf	(??___fladd+0)^080h+0
  4976  00CE  00B6               	movf	(??___fladd+0)^080h+0,w
  4977  00CF  0836               	movwf	0+(___fladd@a)^080h+02h
  4978  00D0  00B4               	line	93
  4979                           	
  4980                           l2536:	
  4981  00D1                     	movf	0+(___fladd@b)^080h+03h,w
  4982  00D1  0831               	movwf	(??___fladd+0)^080h+0
  4983  00D2  00B6               	movf	(??___fladd+0)^080h+0,w
  4984  00D3  0836               	movwf	(___fladd@grs)^080h
  4985  00D4  00C5               	line	94
  4986                           	
  4987                           l2538:	
  4988  00D5                     	movf	0+(___fladd@a)^080h+03h,w
  4989  00D5  0835               	movwf	(??___fladd+0)^080h+0
  4990  00D6  00B6               	movf	(??___fladd+0)^080h+0,w
  4991  00D7  0836               	movwf	0+(___fladd@b)^080h+03h
  4992  00D8  00B1               	line	95
  4993                           	
  4994                           l2540:	
  4995  00D9                     	movf	(___fladd@grs)^080h,w
  4996  00D9  0845               	movwf	(??___fladd+0)^080h+0
  4997  00DA  00B6               	movf	(??___fladd+0)^080h+0,w
  4998  00DB  0836               	movwf	0+(___fladd@a)^080h+03h
  4999  00DC  00B5               	goto	l2542
  5000  00DD  28DE               	line	96
  5001                           	
  5002                           l797:	
  5003  00DE                     	line	98
  5004                           	
  5005                           l2542:	
  5006  00DE                     	clrf	(___fladd@grs)^080h
  5007  00DE  01C5               	line	100
  5008                           	
  5009                           l2544:	
  5010  00DF                     	movf	(___fladd@bexp)^080h,w
  5011  00DF  0844               	movwf	(??___fladd+0)^080h+0
  5012  00E0  00B6               	clrf	(??___fladd+0)^080h+0+1
  5013  00E1  01B7               	comf	(??___fladd+0)^080h+0,f
  5014  00E2  09B6               	comf	(??___fladd+0)^080h+1,f
  5015  00E3  09B7               	incf	(??___fladd+0)^080h+0,f
  5016  00E4  0AB6               	skipnz
  5017  00E5  1903               	incf	(??___fladd+0)^080h+1,f
  5018  00E6  0AB7               	movf	(___fladd@aexp)^080h,w
  5019  00E7  0843               	addwf	0+(??___fladd+0)^080h+0,w
  5020  00E8  0736               	movwf	(??___fladd+2)^080h+0
  5021  00E9  00B8               	movf	1+(??___fladd+0)^080h+0,w
  5022  00EA  0837               	skipnc
  5023  00EB  1803               	incf	1+(??___fladd+0)^080h+0,w
  5024  00EC  0A37               	movwf	((??___fladd+2)^080h+0)+1
  5025  00ED  00B9               	movf	1+(??___fladd+2)^080h+0,w
  5026  00EE  0839               	xorlw	80h
  5027  00EF  3A80               	movwf	btemp+1
  5028  00F0  00FF               	movlw	(0)^80h
  5029  00F1  3080               	subwf	btemp+1,w
  5030  00F2  027F               	skipz
  5031  00F3  1D03               	goto	u2755
  5032  00F4  28F7               	movlw	01Ah
  5033  00F5  301A               	subwf	0+(??___fladd+2)^080h+0,w
  5034  00F6  0238               u2755:
  5035  00F7                     
  5036                           	skipc
  5037  00F7  1C03               	goto	u2751
  5038  00F8  28FA               	goto	u2750
  5039  00F9  28FB               u2751:
  5040  00FA                     	goto	l2560
  5041  00FA  293C               u2750:
  5042  00FB                     	line	101
  5043                           	
  5044                           l2546:	
  5045  00FB                     	bsf	status, 5	;RP0=1, select bank1
  5046  00FB  1683               	bcf	status, 6	;RP1=0, select bank1
  5047  00FC  1303               	movf	(___fladd@b+3)^080h,w
  5048  00FD  0831               	iorwf	(___fladd@b+2)^080h,w
  5049  00FE  0430               	iorwf	(___fladd@b+1)^080h,w
  5050  00FF  042F               	iorwf	(___fladd@b)^080h,w
  5051  0100  042E               	skipz
  5052  0101  1D03               	goto	u2761
  5053  0102  2904               	goto	u2760
  5054  0103  2906               u2761:
  5055  0104                     	movlw	1
  5056  0104  3001               	goto	u2770
  5057  0105  2907               u2760:
  5058  0106                     	movlw	0
  5059  0106  3000               u2770:
  5060  0107                     	movwf	(??___fladd+0)^080h+0
  5061  0107  00B6               	movf	(??___fladd+0)^080h+0,w
  5062  0108  0836               	movwf	(___fladd@grs)^080h
  5063  0109  00C5               	line	102
  5064                           	movlw	high highword(0)
  5065  010A  3000               	movwf	(___fladd@b+3)^080h
  5066  010B  00B1               	movlw	low highword(0)
  5067  010C  3000               	movwf	(___fladd@b+2)^080h
  5068  010D  00B0               	movlw	high(0)
  5069  010E  3000               	movwf	(___fladd@b+1)^080h
  5070  010F  00AF               	movlw	low(0)
  5071  0110  3000               	movwf	(___fladd@b)^080h
  5072  0111  00AE               
  5073                           	line	103
  5074                           	movf	(___fladd@aexp)^080h,w
  5075  0112  0843               	movwf	(??___fladd+0)^080h+0
  5076  0113  00B6               	movf	(??___fladd+0)^080h+0,w
  5077  0114  0836               	movwf	(___fladd@bexp)^080h
  5078  0115  00C4               	line	104
  5079                           	goto	l800
  5080  0116  2945               	line	105
  5081                           	
  5082                           l799:	
  5083  0117                     	line	106
  5084                           	goto	l2560
  5085  0117  293C               	
  5086                           l802:	
  5087  0118                     	line	109
  5088                           	btfss	(___fladd@grs)^080h,(0)&7
  5089  0118  1C45               	goto	u2781
  5090  0119  291B               	goto	u2780
  5091  011A  291C               u2781:
  5092  011B                     	goto	l2550
  5093  011B  2925               u2780:
  5094  011C                     	line	110
  5095                           	
  5096                           l2548:	
  5097  011C                     	movf	(___fladd@grs)^080h,w
  5098  011C  0845               	movwf	(??___fladd+0)^080h+0
  5099  011D  00B6               	clrc
  5100  011E  1003               	rrf	(??___fladd+0)^080h+0,w
  5101  011F  0C36               	iorlw	01h
  5102  0120  3801               	movwf	(??___fladd+1)^080h+0
  5103  0121  00B7               	movf	(??___fladd+1)^080h+0,w
  5104  0122  0837               	movwf	(___fladd@grs)^080h
  5105  0123  00C5               	line	111
  5106                           	goto	l2552
  5107  0124  2928               	line	112
  5108                           	
  5109                           l803:	
  5110  0125                     	line	113
  5111                           	
  5112                           l2550:	
  5113  0125                     	clrc
  5114  0125  1003               	rrf	(___fladd@grs)^080h,f
  5115  0126  0CC5               
  5116                           	goto	l2552
  5117  0127  2928               	line	114
  5118                           	
  5119                           l804:	
  5120  0128                     	line	115
  5121                           	
  5122                           l2552:	
  5123  0128                     	btfss	(___fladd@b)^080h,(0)&7
  5124  0128  1C2E               	goto	u2791
  5125  0129  292B               	goto	u2790
  5126  012A  292C               u2791:
  5127  012B                     	goto	l2556
  5128  012B  292E               u2790:
  5129  012C                     	line	116
  5130                           	
  5131                           l2554:	
  5132  012C                     	bsf	(___fladd@grs)^080h+(7/8),(7)&7
  5133  012C  17C5               	goto	l2556
  5134  012D  292E               	line	117
  5135                           	
  5136                           l805:	
  5137  012E                     	line	118
  5138                           	
  5139                           l2556:	
  5140  012E                     	movlw	01h
  5141  012E  3001               	movwf	(??___fladd+0)^080h+0
  5142  012F  00B6               u2805:
  5143  0130                     	rlf	(___fladd@b+3)^080h,w
  5144  0130  0D31               	rrf	(___fladd@b+3)^080h,f
  5145  0131  0CB1               	rrf	(___fladd@b+2)^080h,f
  5146  0132  0CB0               	rrf	(___fladd@b+1)^080h,f
  5147  0133  0CAF               	rrf	(___fladd@b)^080h,f
  5148  0134  0CAE               	decfsz	(??___fladd+0)^080h+0&07fh,f
  5149  0135  0BB6               	goto	u2805
  5150  0136  2930               
  5151                           	line	119
  5152                           	
  5153                           l2558:	
  5154  0137                     	movlw	low(01h)
  5155  0137  3001               	movwf	(??___fladd+0)^080h+0
  5156  0138  00B6               	movf	(??___fladd+0)^080h+0,w
  5157  0139  0836               	addwf	(___fladd@bexp)^080h,f
  5158  013A  07C4               	goto	l2560
  5159  013B  293C               	line	120
  5160                           	
  5161                           l801:	
  5162  013C                     	line	106
  5163                           	
  5164                           l2560:	
  5165  013C                     	bsf	status, 5	;RP0=1, select bank1
  5166  013C  1683               	bcf	status, 6	;RP1=0, select bank1
  5167  013D  1303               	movf	(___fladd@aexp)^080h,w
  5168  013E  0843               	subwf	(___fladd@bexp)^080h,w
  5169  013F  0244               	skipc
  5170  0140  1C03               	goto	u2811
  5171  0141  2943               	goto	u2810
  5172  0142  2944               u2811:
  5173  0143                     	goto	l802
  5174  0143  2918               u2810:
  5175  0144                     	goto	l800
  5176  0144  2945               	
  5177                           l806:	
  5178  0145                     	line	121
  5179                           	
  5180                           l800:	
  5181  0145                     	line	124
  5182                           	btfsc	(___fladd@signs)^080h,(6)&7
  5183  0145  1B42               	goto	u2821
  5184  0146  2948               	goto	u2820
  5185  0147  2949               u2821:
  5186  0148                     	goto	l2586
  5187  0148  2998               u2820:
  5188  0149                     	line	127
  5189                           	
  5190                           l2562:	
  5191  0149                     	movf	((___fladd@bexp)^080h),w
  5192  0149  0844               	btfss	status,2
  5193  014A  1D03               	goto	u2831
  5194  014B  294D               	goto	u2830
  5195  014C  294E               u2831:
  5196  014D                     	goto	l2568
  5197  014D  2958               u2830:
  5198  014E                     	line	128
  5199                           	
  5200                           l2564:	
  5201  014E                     	movlw	0x0
  5202  014E  3000               	movwf	(?___fladd+3)^080h
  5203  014F  00B1               	movlw	0x0
  5204  0150  3000               	movwf	(?___fladd+2)^080h
  5205  0151  00B0               	movlw	0x0
  5206  0152  3000               	movwf	(?___fladd+1)^080h
  5207  0153  00AF               	movlw	0x0
  5208  0154  3000               	movwf	(?___fladd)^080h
  5209  0155  00AE               
  5210                           	goto	l809
  5211  0156  2AE4               	
  5212                           l2566:	
  5213  0157                     	goto	l809
  5214  0157  2AE4               	line	129
  5215                           	
  5216                           l808:	
  5217  0158                     	line	132
  5218                           	
  5219                           l2568:	
  5220  0158                     	movf	(___fladd@a)^080h,w
  5221  0158  0832               	addwf	(___fladd@b)^080h,f
  5222  0159  07AE               	movf	(___fladd@a+1)^080h,w
  5223  015A  0833               	clrz
  5224  015B  1103               	skipnc
  5225  015C  1803               	addlw	1
  5226  015D  3E01               	skipnz
  5227  015E  1903               	goto	u2841
  5228  015F  2961               	addwf	(___fladd@b+1)^080h,f
  5229  0160  07AF               u2841:
  5230  0161                     	movf	(___fladd@a+2)^080h,w
  5231  0161  0834               	clrz
  5232  0162  1103               	skipnc
  5233  0163  1803               	addlw	1
  5234  0164  3E01               	skipnz
  5235  0165  1903               	goto	u2842
  5236  0166  2968               	addwf	(___fladd@b+2)^080h,f
  5237  0167  07B0               u2842:
  5238  0168                     	movf	(___fladd@a+3)^080h,w
  5239  0168  0835               	clrz
  5240  0169  1103               	skipnc
  5241  016A  1803               	addlw	1
  5242  016B  3E01               	skipnz
  5243  016C  1903               	goto	u2843
  5244  016D  296F               	addwf	(___fladd@b+3)^080h,f
  5245  016E  07B1               u2843:
  5246  016F                     
  5247                           	line	134
  5248                           	
  5249                           l2570:	
  5250  016F                     	btfss	(___fladd@b+3)^080h,(24)&7
  5251  016F  1C31               	goto	u2851
  5252  0170  2972               	goto	u2850
  5253  0171  2973               u2851:
  5254  0172                     	goto	l2620
  5255  0172  2A61               u2850:
  5256  0173                     	line	135
  5257                           	
  5258                           l2572:	
  5259  0173                     	btfss	(___fladd@grs)^080h,(0)&7
  5260  0173  1C45               	goto	u2861
  5261  0174  2976               	goto	u2860
  5262  0175  2977               u2861:
  5263  0176                     	goto	l2576
  5264  0176  2980               u2860:
  5265  0177                     	line	136
  5266                           	
  5267                           l2574:	
  5268  0177                     	movf	(___fladd@grs)^080h,w
  5269  0177  0845               	movwf	(??___fladd+0)^080h+0
  5270  0178  00B6               	clrc
  5271  0179  1003               	rrf	(??___fladd+0)^080h+0,w
  5272  017A  0C36               	iorlw	01h
  5273  017B  3801               	movwf	(??___fladd+1)^080h+0
  5274  017C  00B7               	movf	(??___fladd+1)^080h+0,w
  5275  017D  0837               	movwf	(___fladd@grs)^080h
  5276  017E  00C5               	line	137
  5277                           	goto	l2578
  5278  017F  2983               	line	138
  5279                           	
  5280                           l811:	
  5281  0180                     	line	139
  5282                           	
  5283                           l2576:	
  5284  0180                     	clrc
  5285  0180  1003               	rrf	(___fladd@grs)^080h,f
  5286  0181  0CC5               
  5287                           	goto	l2578
  5288  0182  2983               	line	140
  5289                           	
  5290                           l812:	
  5291  0183                     	line	141
  5292                           	
  5293                           l2578:	
  5294  0183                     	btfss	(___fladd@b)^080h,(0)&7
  5295  0183  1C2E               	goto	u2871
  5296  0184  2986               	goto	u2870
  5297  0185  2987               u2871:
  5298  0186                     	goto	l2582
  5299  0186  2989               u2870:
  5300  0187                     	line	142
  5301                           	
  5302                           l2580:	
  5303  0187                     	bsf	(___fladd@grs)^080h+(7/8),(7)&7
  5304  0187  17C5               	goto	l2582
  5305  0188  2989               	line	143
  5306                           	
  5307                           l813:	
  5308  0189                     	line	144
  5309                           	
  5310                           l2582:	
  5311  0189                     	movlw	01h
  5312  0189  3001               	movwf	(??___fladd+0)^080h+0
  5313  018A  00B6               u2885:
  5314  018B                     	rlf	(___fladd@b+3)^080h,w
  5315  018B  0D31               	rrf	(___fladd@b+3)^080h,f
  5316  018C  0CB1               	rrf	(___fladd@b+2)^080h,f
  5317  018D  0CB0               	rrf	(___fladd@b+1)^080h,f
  5318  018E  0CAF               	rrf	(___fladd@b)^080h,f
  5319  018F  0CAE               	decfsz	(??___fladd+0)^080h+0&07fh,f
  5320  0190  0BB6               	goto	u2885
  5321  0191  298B               
  5322                           	line	145
  5323                           	
  5324                           l2584:	
  5325  0192                     	movlw	low(01h)
  5326  0192  3001               	movwf	(??___fladd+0)^080h+0
  5327  0193  00B6               	movf	(??___fladd+0)^080h+0,w
  5328  0194  0836               	addwf	(___fladd@bexp)^080h,f
  5329  0195  07C4               	goto	l2620
  5330  0196  2A61               	line	146
  5331                           	
  5332                           l810:	
  5333  0197                     	line	148
  5334                           	goto	l2620
  5335  0197  2A61               	line	149
  5336                           	
  5337                           l807:	
  5338  0198                     	line	153
  5339                           	
  5340                           l2586:	
  5341  0198                     	movf	(___fladd@b+3)^080h,w
  5342  0198  0831               	xorlw	80h
  5343  0199  3A80               	movwf	btemp+1
  5344  019A  00FF               	movf	(___fladd@a+3)^080h,w
  5345  019B  0835               	xorlw	80h
  5346  019C  3A80               	subwf	btemp+1,w
  5347  019D  027F               	
  5348                           	skipz
  5349  019E  1D03               	goto	u2893
  5350  019F  29AA               	movf	(___fladd@a+2)^080h,w
  5351  01A0  0834               	subwf	(___fladd@b+2)^080h,w
  5352  01A1  0230               	skipz
  5353  01A2  1D03               	goto	u2893
  5354  01A3  29AA               	movf	(___fladd@a+1)^080h,w
  5355  01A4  0833               	subwf	(___fladd@b+1)^080h,w
  5356  01A5  022F               	skipz
  5357  01A6  1D03               	goto	u2893
  5358  01A7  29AA               	movf	(___fladd@a)^080h,w
  5359  01A8  0832               	subwf	(___fladd@b)^080h,w
  5360  01A9  022E               u2893:
  5361  01AA                     	skipnc
  5362  01AA  1803               	goto	u2891
  5363  01AB  29AD               	goto	u2890
  5364  01AC  29AE               u2891:
  5365  01AD                     	goto	l2596
  5366  01AD  2A14               u2890:
  5367  01AE                     	line	154
  5368                           	
  5369                           l2588:	
  5370  01AE                     	movlw	0FFh
  5371  01AE  30FF               	movwf	((??___fladd+0)^080h+0)
  5372  01AF  00B6               	movlw	0FFh
  5373  01B0  30FF               	movwf	((??___fladd+0)^080h+0+1)
  5374  01B1  00B7               	movlw	0FFh
  5375  01B2  30FF               	movwf	((??___fladd+0)^080h+0+2)
  5376  01B3  00B8               	movlw	0FFh
  5377  01B4  30FF               	movwf	((??___fladd+0)^080h+0+3)
  5378  01B5  00B9               	movf	(___fladd@a)^080h,w
  5379  01B6  0832               	movwf	(??___fladd+4)^080h+0
  5380  01B7  00BA               	movf	(___fladd@a+1)^080h,w
  5381  01B8  0833               	movwf	((??___fladd+4)^080h+0+1)
  5382  01B9  00BB               	movf	(___fladd@a+2)^080h,w
  5383  01BA  0834               	movwf	((??___fladd+4)^080h+0+2)
  5384  01BB  00BC               	movf	(___fladd@a+3)^080h,w
  5385  01BC  0835               	movwf	((??___fladd+4)^080h+0+3)
  5386  01BD  00BD               	comf	(___fladd@b)^080h,w
  5387  01BE  092E               	movwf	(??___fladd+8)^080h+0
  5388  01BF  00BE               	comf	(___fladd@b+1)^080h,w
  5389  01C0  092F               	movwf	((??___fladd+8)^080h+0+1)
  5390  01C1  00BF               	comf	(___fladd@b+2)^080h,w
  5391  01C2  0930               	movwf	((??___fladd+8)^080h+0+2)
  5392  01C3  00C0               	comf	(___fladd@b+3)^080h,w
  5393  01C4  0931               	movwf	((??___fladd+8)^080h+0+3)
  5394  01C5  00C1               	incf	(??___fladd+8)^080h+0,f
  5395  01C6  0ABE               	skipnz
  5396  01C7  1903               	incf	((??___fladd+8)^080h+0+1),f
  5397  01C8  0ABF               	skipnz
  5398  01C9  1903               	incf	((??___fladd+8)^080h+0+2),f
  5399  01CA  0AC0               	skipnz
  5400  01CB  1903               	incf	((??___fladd+8)^080h+0+3),f
  5401  01CC  0AC1               	movf	0+(??___fladd+8)^080h+0,w
  5402  01CD  083E               	addwf	(??___fladd+4)^080h+0,f
  5403  01CE  07BA               	movf	1+(??___fladd+8)^080h+0,w
  5404  01CF  083F               	skipnc
  5405  01D0  1803               	incfsz	1+(??___fladd+8)^080h+0,w
  5406  01D1  0F3F               	goto	u2900
  5407  01D2  29D4               	goto	u2901
  5408  01D3  29D5               u2900:
  5409  01D4                     	addwf	(??___fladd+4)^080h+1,f
  5410  01D4  07BB               u2901:
  5411  01D5                     	movf	2+(??___fladd+8)^080h+0,w
  5412  01D5  0840               	skipnc
  5413  01D6  1803               	incfsz	2+(??___fladd+8)^080h+0,w
  5414  01D7  0F40               	goto	u2902
  5415  01D8  29DA               	goto	u2903
  5416  01D9  29DB               u2902:
  5417  01DA                     	addwf	(??___fladd+4)^080h+2,f
  5418  01DA  07BC               u2903:
  5419  01DB                     	movf	3+(??___fladd+8)^080h+0,w
  5420  01DB  0841               	skipnc
  5421  01DC  1803               	incf	3+(??___fladd+8)^080h+0,w
  5422  01DD  0A41               	addwf	(??___fladd+4)^080h+3,f
  5423  01DE  07BD               	movf	0+(??___fladd+4)^080h+0,w
  5424  01DF  083A               	addwf	(??___fladd+0)^080h+0,f
  5425  01E0  07B6               	movf	1+(??___fladd+4)^080h+0,w
  5426  01E1  083B               	skipnc
  5427  01E2  1803               	incfsz	1+(??___fladd+4)^080h+0,w
  5428  01E3  0F3B               	goto	u2910
  5429  01E4  29E6               	goto	u2911
  5430  01E5  29E7               u2910:
  5431  01E6                     	addwf	(??___fladd+0)^080h+1,f
  5432  01E6  07B7               u2911:
  5433  01E7                     	movf	2+(??___fladd+4)^080h+0,w
  5434  01E7  083C               	skipnc
  5435  01E8  1803               	incfsz	2+(??___fladd+4)^080h+0,w
  5436  01E9  0F3C               	goto	u2912
  5437  01EA  29EC               	goto	u2913
  5438  01EB  29ED               u2912:
  5439  01EC                     	addwf	(??___fladd+0)^080h+2,f
  5440  01EC  07B8               u2913:
  5441  01ED                     	movf	3+(??___fladd+4)^080h+0,w
  5442  01ED  083D               	skipnc
  5443  01EE  1803               	incf	3+(??___fladd+4)^080h+0,w
  5444  01EF  0A3D               	addwf	(??___fladd+0)^080h+3,f
  5445  01F0  07B9               	movf	3+(??___fladd+0)^080h+0,w
  5446  01F1  0839               	movwf	(___fladd@b+3)^080h
  5447  01F2  00B1               	movf	2+(??___fladd+0)^080h+0,w
  5448  01F3  0838               	movwf	(___fladd@b+2)^080h
  5449  01F4  00B0               	movf	1+(??___fladd+0)^080h+0,w
  5450  01F5  0837               	movwf	(___fladd@b+1)^080h
  5451  01F6  00AF               	movf	0+(??___fladd+0)^080h+0,w
  5452  01F7  0836               	movwf	(___fladd@b)^080h
  5453  01F8  00AE               
  5454                           	line	155
  5455                           	movlw	low(080h)
  5456  01F9  3080               	movwf	(??___fladd+0)^080h+0
  5457  01FA  00B6               	movf	(??___fladd+0)^080h+0,w
  5458  01FB  0836               	xorwf	(___fladd@signs)^080h,f
  5459  01FC  06C2               	line	156
  5460                           	
  5461                           l2590:	
  5462  01FD                     	comf	(___fladd@grs)^080h,f
  5463  01FD  09C5               	incf	(___fladd@grs)^080h,f
  5464  01FE  0AC5               	line	157
  5465                           	
  5466                           l2592:	
  5467  01FF                     	movf	((___fladd@grs)^080h),w
  5468  01FF  0845               	btfss	status,2
  5469  0200  1D03               	goto	u2921
  5470  0201  2A03               	goto	u2920
  5471  0202  2A04               u2921:
  5472  0203                     	goto	l817
  5473  0203  2A22               u2920:
  5474  0204                     	line	158
  5475                           	
  5476                           l2594:	
  5477  0204                     	movlw	01h
  5478  0204  3001               	addwf	(___fladd@b)^080h,f
  5479  0205  07AE               	movlw	0
  5480  0206  3000               	skipnc
  5481  0207  1803               movlw 1
  5482  0208  3001               	addwf	(___fladd@b+1)^080h,f
  5483  0209  07AF               	movlw	0
  5484  020A  3000               	skipnc
  5485  020B  1803               movlw 1
  5486  020C  3001               	addwf	(___fladd@b+2)^080h,f
  5487  020D  07B0               	movlw	0
  5488  020E  3000               	skipnc
  5489  020F  1803               movlw 1
  5490  0210  3001               	addwf	(___fladd@b+3)^080h,f
  5491  0211  07B1               	goto	l817
  5492  0212  2A22               	line	159
  5493                           	
  5494                           l816:	
  5495  0213                     	line	160
  5496                           	goto	l817
  5497  0213  2A22               	line	161
  5498                           	
  5499                           l815:	
  5500  0214                     	line	162
  5501                           	
  5502                           l2596:	
  5503  0214                     	movf	(___fladd@a)^080h,w
  5504  0214  0832               	subwf	(___fladd@b)^080h,f
  5505  0215  02AE               	movf	(___fladd@a+1)^080h,w
  5506  0216  0833               	skipc
  5507  0217  1C03               	incfsz	(___fladd@a+1)^080h,w
  5508  0218  0F33               	subwf	(___fladd@b+1)^080h,f
  5509  0219  02AF               	movf	(___fladd@a+2)^080h,w
  5510  021A  0834               	skipc
  5511  021B  1C03               	incfsz	(___fladd@a+2)^080h,w
  5512  021C  0F34               	subwf	(___fladd@b+2)^080h,f
  5513  021D  02B0               	movf	(___fladd@a+3)^080h,w
  5514  021E  0835               	skipc
  5515  021F  1C03               	incfsz	(___fladd@a+3)^080h,w
  5516  0220  0F35               	subwf	(___fladd@b+3)^080h,f
  5517  0221  02B1               	line	163
  5518                           	
  5519                           l817:	
  5520  0222                     	line	166
  5521                           	movf	(___fladd@b+3)^080h,w
  5522  0222  0831               	iorwf	(___fladd@b+2)^080h,w
  5523  0223  0430               	iorwf	(___fladd@b+1)^080h,w
  5524  0224  042F               	iorwf	(___fladd@b)^080h,w
  5525  0225  042E               	skipz
  5526  0226  1D03               	goto	u2931
  5527  0227  2A29               	goto	u2930
  5528  0228  2A2A               u2931:
  5529  0229                     	goto	l2618
  5530  0229  2A5B               u2930:
  5531  022A                     	
  5532                           l2598:	
  5533  022A                     	movf	((___fladd@grs)^080h),w
  5534  022A  0845               	btfss	status,2
  5535  022B  1D03               	goto	u2941
  5536  022C  2A2E               	goto	u2940
  5537  022D  2A2F               u2941:
  5538  022E                     	goto	l2618
  5539  022E  2A5B               u2940:
  5540  022F                     	line	167
  5541                           	
  5542                           l2600:	
  5543  022F                     	movlw	0x0
  5544  022F  3000               	movwf	(?___fladd+3)^080h
  5545  0230  00B1               	movlw	0x0
  5546  0231  3000               	movwf	(?___fladd+2)^080h
  5547  0232  00B0               	movlw	0x0
  5548  0233  3000               	movwf	(?___fladd+1)^080h
  5549  0234  00AF               	movlw	0x0
  5550  0235  3000               	movwf	(?___fladd)^080h
  5551  0236  00AE               
  5552                           	goto	l809
  5553  0237  2AE4               	
  5554                           l2602:	
  5555  0238                     	goto	l809
  5556  0238  2AE4               	line	168
  5557                           	
  5558                           l818:	
  5559  0239                     	line	171
  5560                           	goto	l2618
  5561  0239  2A5B               	
  5562                           l820:	
  5563  023A                     	line	172
  5564                           	
  5565                           l2604:	
  5566  023A                     	movlw	01h
  5567  023A  3001               	movwf	(??___fladd+0)^080h+0
  5568  023B  00B6               u2955:
  5569  023C                     	clrc
  5570  023C  1003               	rlf	(___fladd@b)^080h,f
  5571  023D  0DAE               	rlf	(___fladd@b+1)^080h,f
  5572  023E  0DAF               	rlf	(___fladd@b+2)^080h,f
  5573  023F  0DB0               	rlf	(___fladd@b+3)^080h,f
  5574  0240  0DB1               	decfsz	(??___fladd+0)^080h+0
  5575  0241  0BB6               	goto	u2955
  5576  0242  2A3C               	line	173
  5577                           	
  5578                           l2606:	
  5579  0243                     	btfss	(___fladd@grs)^080h,(7)&7
  5580  0243  1FC5               	goto	u2961
  5581  0244  2A46               	goto	u2960
  5582  0245  2A47               u2961:
  5583  0246                     	goto	l821
  5584  0246  2A48               u2960:
  5585  0247                     	line	174
  5586                           	
  5587                           l2608:	
  5588  0247                     	bsf	(___fladd@b)^080h+(0/8),(0)&7
  5589  0247  142E               	line	175
  5590                           	
  5591                           l821:	
  5592  0248                     	line	176
  5593                           	btfss	(___fladd@grs)^080h,(0)&7
  5594  0248  1C45               	goto	u2971
  5595  0249  2A4B               	goto	u2970
  5596  024A  2A4C               u2971:
  5597  024B                     	goto	l2612
  5598  024B  2A4F               u2970:
  5599  024C                     	line	177
  5600                           	
  5601                           l2610:	
  5602  024C                     	setc
  5603  024C  1403               	rlf	(___fladd@grs)^080h,f
  5604  024D  0DC5               	line	178
  5605                           	goto	l2614
  5606  024E  2A52               	line	179
  5607                           	
  5608                           l822:	
  5609  024F                     	line	180
  5610                           	
  5611                           l2612:	
  5612  024F                     	clrc
  5613  024F  1003               	rlf	(___fladd@grs)^080h,f
  5614  0250  0DC5               
  5615                           	goto	l2614
  5616  0251  2A52               	line	181
  5617                           	
  5618                           l823:	
  5619  0252                     	line	182
  5620                           	
  5621                           l2614:	
  5622  0252                     	movf	((___fladd@bexp)^080h),w
  5623  0252  0844               	btfsc	status,2
  5624  0253  1903               	goto	u2981
  5625  0254  2A56               	goto	u2980
  5626  0255  2A57               u2981:
  5627  0256                     	goto	l2618
  5628  0256  2A5B               u2980:
  5629  0257                     	line	183
  5630                           	
  5631                           l2616:	
  5632  0257                     	movlw	01h
  5633  0257  3001               	subwf	(___fladd@bexp)^080h,f
  5634  0258  02C4               	goto	l2618
  5635  0259  2A5B               	line	184
  5636                           	
  5637                           l824:	
  5638  025A                     	goto	l2618
  5639  025A  2A5B               	line	185
  5640                           	
  5641                           l819:	
  5642  025B                     	line	171
  5643                           	
  5644                           l2618:	
  5645  025B                     	btfss	(___fladd@b+2)^080h,(23)&7
  5646  025B  1FB0               	goto	u2991
  5647  025C  2A5E               	goto	u2990
  5648  025D  2A5F               u2991:
  5649  025E                     	goto	l2604
  5650  025E  2A3A               u2990:
  5651  025F                     	goto	l2620
  5652  025F  2A61               	
  5653                           l825:	
  5654  0260                     	goto	l2620
  5655  0260  2A61               	line	186
  5656                           	
  5657                           l814:	
  5658  0261                     	line	192
  5659                           	
  5660                           l2620:	
  5661  0261                     	clrf	(___fladd@aexp)^080h
  5662  0261  01C3               	line	193
  5663                           	
  5664                           l2622:	
  5665  0262                     	btfss	(___fladd@grs)^080h,(7)&7
  5666  0262  1FC5               	goto	u3001
  5667  0263  2A65               	goto	u3000
  5668  0264  2A66               u3001:
  5669  0265                     	goto	l2630
  5670  0265  2A78               u3000:
  5671  0266                     	line	194
  5672                           	
  5673                           l2624:	
  5674  0266                     	movf	(___fladd@grs)^080h,w
  5675  0266  0845               	andlw	07Fh
  5676  0267  397F               	btfsc	status,2
  5677  0268  1903               	goto	u3011
  5678  0269  2A6B               	goto	u3010
  5679  026A  2A6C               u3011:
  5680  026B                     	goto	l827
  5681  026B  2A6F               u3010:
  5682  026C                     	line	195
  5683                           	
  5684                           l2626:	
  5685  026C                     	clrf	(___fladd@aexp)^080h
  5686  026C  01C3               	incf	(___fladd@aexp)^080h,f
  5687  026D  0AC3               	line	196
  5688                           	goto	l2630
  5689  026E  2A78               	line	197
  5690                           	
  5691                           l827:	
  5692  026F                     	line	198
  5693                           	btfss	(___fladd@b)^080h,(0)&7
  5694  026F  1C2E               	goto	u3021
  5695  0270  2A72               	goto	u3020
  5696  0271  2A73               u3021:
  5697  0272                     	goto	l2630
  5698  0272  2A78               u3020:
  5699  0273                     	line	199
  5700                           	
  5701                           l2628:	
  5702  0273                     	clrf	(___fladd@aexp)^080h
  5703  0273  01C3               	incf	(___fladd@aexp)^080h,f
  5704  0274  0AC3               	goto	l2630
  5705  0275  2A78               	line	200
  5706                           	
  5707                           l829:	
  5708  0276                     	goto	l2630
  5709  0276  2A78               	line	201
  5710                           	
  5711                           l828:	
  5712  0277                     	goto	l2630
  5713  0277  2A78               	line	202
  5714                           	
  5715                           l826:	
  5716  0278                     	line	203
  5717                           	
  5718                           l2630:	
  5719  0278                     	movf	((___fladd@aexp)^080h),w
  5720  0278  0843               	btfsc	status,2
  5721  0279  1903               	goto	u3031
  5722  027A  2A7C               	goto	u3030
  5723  027B  2A7D               u3031:
  5724  027C                     	goto	l830
  5725  027C  2AB3               u3030:
  5726  027D                     	line	204
  5727                           	
  5728                           l2632:	
  5729  027D                     	movlw	01h
  5730  027D  3001               	addwf	(___fladd@b)^080h,f
  5731  027E  07AE               	movlw	0
  5732  027F  3000               	skipnc
  5733  0280  1803               movlw 1
  5734  0281  3001               	addwf	(___fladd@b+1)^080h,f
  5735  0282  07AF               	movlw	0
  5736  0283  3000               	skipnc
  5737  0284  1803               movlw 1
  5738  0285  3001               	addwf	(___fladd@b+2)^080h,f
  5739  0286  07B0               	movlw	0
  5740  0287  3000               	skipnc
  5741  0288  1803               movlw 1
  5742  0289  3001               	addwf	(___fladd@b+3)^080h,f
  5743  028A  07B1               	line	205
  5744                           	
  5745                           l2634:	
  5746  028B                     	btfss	(___fladd@b+3)^080h,(24)&7
  5747  028B  1C31               	goto	u3041
  5748  028C  2A8E               	goto	u3040
  5749  028D  2A8F               u3041:
  5750  028E                     	goto	l830
  5751  028E  2AB3               u3040:
  5752  028F                     	line	206
  5753                           	
  5754                           l2636:	
  5755  028F                     	movf	(___fladd@b)^080h,w
  5756  028F  082E               	movwf	(??___fladd+0)^080h+0
  5757  0290  00B6               	movf	(___fladd@b+1)^080h,w
  5758  0291  082F               	movwf	((??___fladd+0)^080h+0+1)
  5759  0292  00B7               	movf	(___fladd@b+2)^080h,w
  5760  0293  0830               	movwf	((??___fladd+0)^080h+0+2)
  5761  0294  00B8               	movf	(___fladd@b+3)^080h,w
  5762  0295  0831               	movwf	((??___fladd+0)^080h+0+3)
  5763  0296  00B9               	movlw	01h
  5764  0297  3001               	movwf	(??___fladd+4)^080h+0
  5765  0298  00BA               u3055:
  5766  0299                     	rlf	(??___fladd+0)^080h+3,w
  5767  0299  0D39               	rrf	(??___fladd+0)^080h+3,f
  5768  029A  0CB9               	rrf	(??___fladd+0)^080h+2,f
  5769  029B  0CB8               	rrf	(??___fladd+0)^080h+1,f
  5770  029C  0CB7               	rrf	(??___fladd+0)^080h+0,f
  5771  029D  0CB6               u3050:
  5772  029E                     	decfsz	(??___fladd+4)^080h+0,f
  5773  029E  0BBA               	goto	u3055
  5774  029F  2A99               	movf	3+(??___fladd+0)^080h+0,w
  5775  02A0  0839               	movwf	(___fladd@b+3)^080h
  5776  02A1  00B1               	movf	2+(??___fladd+0)^080h+0,w
  5777  02A2  0838               	movwf	(___fladd@b+2)^080h
  5778  02A3  00B0               	movf	1+(??___fladd+0)^080h+0,w
  5779  02A4  0837               	movwf	(___fladd@b+1)^080h
  5780  02A5  00AF               	movf	0+(??___fladd+0)^080h+0,w
  5781  02A6  0836               	movwf	(___fladd@b)^080h
  5782  02A7  00AE               
  5783                           	line	207
  5784                           		incf	((___fladd@bexp)^080h),w
  5785  02A8  0A44               	btfsc	status,2
  5786  02A9  1903               	goto	u3061
  5787  02AA  2AAC               	goto	u3060
  5788  02AB  2AAD               u3061:
  5789  02AC                     	goto	l830
  5790  02AC  2AB3               u3060:
  5791  02AD                     	line	208
  5792                           	
  5793                           l2638:	
  5794  02AD                     	movlw	low(01h)
  5795  02AD  3001               	movwf	(??___fladd+0)^080h+0
  5796  02AE  00B6               	movf	(??___fladd+0)^080h+0,w
  5797  02AF  0836               	addwf	(___fladd@bexp)^080h,f
  5798  02B0  07C4               	goto	l830
  5799  02B1  2AB3               	line	209
  5800                           	
  5801                           l832:	
  5802  02B2                     	goto	l830
  5803  02B2  2AB3               	line	210
  5804                           	
  5805                           l831:	
  5806  02B3                     	line	211
  5807                           	
  5808                           l830:	
  5809  02B3                     	line	215
  5810                           		incf	((___fladd@bexp)^080h),w
  5811  02B3  0A44               	btfsc	status,2
  5812  02B4  1903               	goto	u3071
  5813  02B5  2AB7               	goto	u3070
  5814  02B6  2AB8               u3071:
  5815  02B7                     	goto	l2642
  5816  02B7  2ABE               u3070:
  5817  02B8                     	
  5818                           l2640:	
  5819  02B8                     	movf	((___fladd@bexp)^080h),w
  5820  02B8  0844               	btfss	status,2
  5821  02B9  1D03               	goto	u3081
  5822  02BA  2ABC               	goto	u3080
  5823  02BB  2ABD               u3081:
  5824  02BC                     	goto	l2648
  5825  02BC  2ACE               u3080:
  5826  02BD                     	goto	l2642
  5827  02BD  2ABE               	
  5828                           l835:	
  5829  02BE                     	line	216
  5830                           	
  5831                           l2642:	
  5832  02BE                     	movlw	high highword(0)
  5833  02BE  3000               	movwf	(___fladd@b+3)^080h
  5834  02BF  00B1               	movlw	low highword(0)
  5835  02C0  3000               	movwf	(___fladd@b+2)^080h
  5836  02C1  00B0               	movlw	high(0)
  5837  02C2  3000               	movwf	(___fladd@b+1)^080h
  5838  02C3  00AF               	movlw	low(0)
  5839  02C4  3000               	movwf	(___fladd@b)^080h
  5840  02C5  00AE               
  5841                           	line	218
  5842                           	
  5843                           l2644:	
  5844  02C6                     	movf	((___fladd@bexp)^080h),w
  5845  02C6  0844               	btfss	status,2
  5846  02C7  1D03               	goto	u3091
  5847  02C8  2ACA               	goto	u3090
  5848  02C9  2ACB               u3091:
  5849  02CA                     	goto	l2648
  5850  02CA  2ACE               u3090:
  5851  02CB                     	line	219
  5852                           	
  5853                           l2646:	
  5854  02CB                     	clrf	(___fladd@signs)^080h
  5855  02CB  01C2               	goto	l2648
  5856  02CC  2ACE               	line	220
  5857                           	
  5858                           l836:	
  5859  02CD                     	goto	l2648
  5860  02CD  2ACE               	line	221
  5861                           	
  5862                           l833:	
  5863  02CE                     	line	225
  5864                           	
  5865                           l2648:	
  5866  02CE                     	btfss	(___fladd@bexp)^080h,(0)&7
  5867  02CE  1C44               	goto	u3101
  5868  02CF  2AD1               	goto	u3100
  5869  02D0  2AD2               u3101:
  5870  02D1                     	goto	l2652
  5871  02D1  2AD4               u3100:
  5872  02D2                     	line	226
  5873                           	
  5874                           l2650:	
  5875  02D2                     	bsf	0+(___fladd@b)^080h+02h+(7/8),(7)&7
  5876  02D2  17B0               	line	227
  5877                           	goto	l838
  5878  02D3  2AD8               	line	229
  5879                           	
  5880                           l837:	
  5881  02D4                     	line	230
  5882                           	
  5883                           l2652:	
  5884  02D4                     	movlw	low(07Fh)
  5885  02D4  307F               	movwf	(??___fladd+0)^080h+0
  5886  02D5  00B6               	movf	(??___fladd+0)^080h+0,w
  5887  02D6  0836               	andwf	0+(___fladd@b)^080h+02h,f
  5888  02D7  05B0               	line	231
  5889                           	
  5890                           l838:	
  5891  02D8                     	line	232
  5892                           	movf	(___fladd@bexp)^080h,w
  5893  02D8  0844               	movwf	(??___fladd+0)^080h+0
  5894  02D9  00B6               	clrc
  5895  02DA  1003               	rrf	(??___fladd+0)^080h+0,w
  5896  02DB  0C36               	movwf	(??___fladd+1)^080h+0
  5897  02DC  00B7               	movf	(??___fladd+1)^080h+0,w
  5898  02DD  0837               	movwf	0+(___fladd@b)^080h+03h
  5899  02DE  00B1               	line	233
  5900                           	
  5901                           l2654:	
  5902  02DF                     	btfss	(___fladd@signs)^080h,(7)&7
  5903  02DF  1FC2               	goto	u3111
  5904  02E0  2AE2               	goto	u3110
  5905  02E1  2AE3               u3111:
  5906  02E2                     	goto	l839
  5907  02E2  2AE4               u3110:
  5908  02E3                     	line	234
  5909                           	
  5910                           l2656:	
  5911  02E3                     	bsf	0+(___fladd@b)^080h+03h+(7/8),(7)&7
  5912  02E3  17B1               	line	235
  5913                           	
  5914                           l839:	
  5915  02E4                     	line	236
  5916                           	line	237
  5917                           	
  5918                           l809:	
  5919  02E4                     	return
  5920  02E4  0008               	opt stack 0
  5921                           GLOBAL	__end_of___fladd
  5922                           	__end_of___fladd:
  5923  02E5                     	signat	___fladd,8316
  5924                           	global	_update_input
  5925                           
  5926 ;; *************** function _update_input *****************
  5927 ;; Defined at:
  5928 ;;		line 65 in file "Display.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;		None
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5942 ;;      Params:         0       0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0
  5944 ;;      Temps:          0       0       0       0       0
  5945 ;;      Totals:         0       0       0       0       0
  5946 ;;Total ram usage:        0 bytes
  5947 ;; Hardware stack levels used:    1
  5948 ;; Hardware stack levels required when called:   10
  5949 ;; This function calls:
  5950 ;;		_display_write_end
  5951 ;;		_display_write_start
  5952 ;;		_write_int
  5953 ;;		_write_space
  5954 ;;		_write_text
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5960                           	file	"Display.c"
  5961                           	line	65
  5962                           global __ptext8
  5963                           __ptext8:	;psect for function _update_input
  5964  05A1                     psect	text8
  5965                           	file	"Display.c"
  5966                           	line	65
  5967                           	global	__size_of_update_input
  5968                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  5969  0054                     	
  5970                           _update_input:	
  5971  05A1                     ;incstack = 0
  5972 ;; hardware stack exceeded
  5973                           	opt	stack 0
  5974                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5975                           	line	67
  5976                           	
  5977                           l3408:	
  5978  05A1                     ;Display.c: 67:     if (lastInput == _selectedInput) return;
  5979                           	bsf	status, 5	;RP0=1, select bank1
  5980  05A1  1683               	bcf	status, 6	;RP1=0, select bank1
  5981  05A2  1303               	movf	(__selectedInput+1)^080h,w
  5982  05A3  086E               	bcf	status, 5	;RP0=0, select bank0
  5983  05A4  1283               	bcf	status, 6	;RP1=0, select bank0
  5984  05A5  1303               	xorwf	(_lastInput+1),w
  5985  05A6  0665               	skipz
  5986  05A7  1D03               	goto	u4345
  5987  05A8  2DAF               	bsf	status, 5	;RP0=1, select bank1
  5988  05A9  1683               	bcf	status, 6	;RP1=0, select bank1
  5989  05AA  1303               	movf	(__selectedInput)^080h,w
  5990  05AB  086D               	bcf	status, 5	;RP0=0, select bank0
  5991  05AC  1283               	bcf	status, 6	;RP1=0, select bank0
  5992  05AD  1303               	xorwf	(_lastInput),w
  5993  05AE  0664               u4345:
  5994  05AF                     
  5995                           	skipz
  5996  05AF  1D03               	goto	u4341
  5997  05B0  2DB2               	goto	u4340
  5998  05B1  2DB3               u4341:
  5999  05B2                     	goto	l129
  6000  05B2  2DB5               u4340:
  6001  05B3                     	goto	l130
  6002  05B3  2DF4               	
  6003                           l3410:	
  6004  05B4                     	goto	l130
  6005  05B4  2DF4               	
  6006                           l129:	
  6007  05B5                     	line	69
  6008                           ;Display.c: 69:     _selectedDisplay = 1;
  6009                           	bsf	status, 5	;RP0=1, select bank1
  6010  05B5  1683               	bcf	status, 6	;RP1=0, select bank1
  6011  05B6  1303               	clrf	(__selectedDisplay)^080h
  6012  05B7  01EF               	incf	(__selectedDisplay)^080h,f
  6013  05B8  0AEF               	line	70
  6014                           	
  6015                           l3412:	
  6016  05B9                     ;Display.c: 70:     display_write_start();
  6017                           	fcall	_display_write_start
  6018  05B9  160A  118A  2337  120A  118A  	line	72
  6019                           	
  6020                           l3414:	
  6021  05BE                     ;Display.c: 72:     write_text("INPUT");
  6022                           	movlw	low(((STR_1)|8000h))
  6023  05BE  3090               	bsf	status, 5	;RP0=1, select bank1
  6024  05BF  1683               	bcf	status, 6	;RP1=0, select bank1
  6025  05C0  1303               	movwf	(write_text@text)^080h
  6026  05C1  00B3               	movlw	high(((STR_1)|8000h))
  6027  05C2  3087               	movwf	((write_text@text)^080h)+1
  6028  05C3  00B4               	fcall	_write_text
  6029  05C4  160A  118A  24B2  120A  118A  	line	74
  6030                           	
  6031                           l3416:	
  6032  05C9                     ;Display.c: 74:     write_space(2);
  6033                           	movlw	02h
  6034  05C9  3002               	bsf	status, 5	;RP0=1, select bank1
  6035  05CA  1683               	bcf	status, 6	;RP1=0, select bank1
  6036  05CB  1303               	movwf	(write_space@count)^080h
  6037  05CC  00A1               	movlw	0
  6038  05CD  3000               	movwf	((write_space@count)^080h)+1
  6039  05CE  00A2               	fcall	_write_space
  6040  05CF  160A  118A  257A  120A  118A  	line	76
  6041                           	
  6042                           l3418:	
  6043  05D4                     ;Display.c: 76:     write_int(_selectedInput+1);
  6044                           	bsf	status, 5	;RP0=1, select bank1
  6045  05D4  1683               	bcf	status, 6	;RP1=0, select bank1
  6046  05D5  1303               	movf	(__selectedInput)^080h,w
  6047  05D6  086D               	addlw	low(01h)
  6048  05D7  3E01               	movwf	(write_int@number)^080h
  6049  05D8  00BD               	movf	(__selectedInput+1)^080h,w
  6050  05D9  086E               	skipnc
  6051  05DA  1803               	addlw	1
  6052  05DB  3E01               	addlw	high(01h)
  6053  05DC  3E00               	movwf	1+(write_int@number)^080h
  6054  05DD  00BE               	fcall	_write_int
  6055  05DE  160A  118A  240A  120A  118A  	line	77
  6056                           	
  6057                           l3420:	
  6058  05E3                     ;Display.c: 77:     display_write_end();
  6059                           	fcall	_display_write_end
  6060  05E3  160A  118A  2328  120A  118A  	line	79
  6061                           	
  6062                           l3422:	
  6063  05E8                     ;Display.c: 79:     lastInput = _selectedInput;
  6064                           	bsf	status, 5	;RP0=1, select bank1
  6065  05E8  1683               	bcf	status, 6	;RP1=0, select bank1
  6066  05E9  1303               	movf	(__selectedInput+1)^080h,w
  6067  05EA  086E               	bcf	status, 5	;RP0=0, select bank0
  6068  05EB  1283               	bcf	status, 6	;RP1=0, select bank0
  6069  05EC  1303               	movwf	(_lastInput+1)
  6070  05ED  00E5               	bsf	status, 5	;RP0=1, select bank1
  6071  05EE  1683               	bcf	status, 6	;RP1=0, select bank1
  6072  05EF  1303               	movf	(__selectedInput)^080h,w
  6073  05F0  086D               	bcf	status, 5	;RP0=0, select bank0
  6074  05F1  1283               	bcf	status, 6	;RP1=0, select bank0
  6075  05F2  1303               	movwf	(_lastInput)
  6076  05F3  00E4               	line	81
  6077                           	
  6078                           l130:	
  6079  05F4                     	return
  6080  05F4  0008               	opt stack 0
  6081                           GLOBAL	__end_of_update_input
  6082                           	__end_of_update_input:
  6083  05F5                     	signat	_update_input,89
  6084                           	global	_write_space
  6085                           
  6086 ;; *************** function _write_space *****************
  6087 ;; Defined at:
  6088 ;;		line 107 in file "Display.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  count           2    1[BANK1 ] int 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  x               2    6[BANK1 ] int 
  6093 ;;  i               2    4[BANK1 ] int 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  1    wreg      void 
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6103 ;;      Params:         0       0       2       0       0
  6104 ;;      Locals:         0       0       4       0       0
  6105 ;;      Temps:          0       0       1       0       0
  6106 ;;      Totals:         0       0       7       0       0
  6107 ;;Total ram usage:        7 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; Hardware stack levels required when called:    6
  6110 ;; This function calls:
  6111 ;;		_spiWrite
  6112 ;; This function is called by:
  6113 ;;		_update_input
  6114 ;;		_update_volume
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  6118                           	line	107
  6119                           global __ptext9
  6120                           __ptext9:	;psect for function _write_space
  6121  157A                     psect	text9
  6122                           	file	"Display.c"
  6123                           	line	107
  6124                           	global	__size_of_write_space
  6125                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  6126  004C                     	
  6127                           _write_space:	
  6128  157A                     ;incstack = 0
  6129                           	opt	stack 0
  6130                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6131                           	line	109
  6132                           	
  6133                           l3190:	
  6134  157A                     ;Display.c: 107: void write_space(int count);Display.c: 108: {;Display.c: 109:     for (
                                 int i = 0; i < count; i++) {
  6135                           	bsf	status, 5	;RP0=1, select bank1
  6136  157A  1683               	bcf	status, 6	;RP1=0, select bank1
  6137  157B  1303               	clrf	(write_space@i)^080h
  6138  157C  01A4               	clrf	(write_space@i+1)^080h
  6139  157D  01A5               	goto	l138
  6140  157E  2DB6               	
  6141                           l139:	
  6142  157F                     	line	111
  6143                           	
  6144                           l3192:	
  6145  157F                     ;Display.c: 111:         for (int x = 0; x < 5; x++) {
  6146                           	bsf	status, 5	;RP0=1, select bank1
  6147  157F  1683               	bcf	status, 6	;RP1=0, select bank1
  6148  1580  1303               	clrf	(write_space@x)^080h
  6149  1581  01A6               	clrf	(write_space@x+1)^080h
  6150  1582  01A7               	
  6151                           l3194:	
  6152  1583                     	movf	(write_space@x+1)^080h,w
  6153  1583  0827               	xorlw	80h
  6154  1584  3A80               	movwf	btemp+1
  6155  1585  00FF               	movlw	(0)^80h
  6156  1586  3080               	subwf	btemp+1,w
  6157  1587  027F               	skipz
  6158  1588  1D03               	goto	u4215
  6159  1589  2D8C               	movlw	05h
  6160  158A  3005               	subwf	(write_space@x)^080h,w
  6161  158B  0226               u4215:
  6162  158C                     
  6163                           	skipc
  6164  158C  1C03               	goto	u4211
  6165  158D  2D8F               	goto	u4210
  6166  158E  2D90               u4211:
  6167  158F                     	goto	l3198
  6168  158F  2D92               u4210:
  6169  1590                     	goto	l3204
  6170  1590  2DAE               	
  6171                           l3196:	
  6172  1591                     	goto	l3204
  6173  1591  2DAE               	
  6174                           l140:	
  6175  1592                     	line	113
  6176                           	
  6177                           l3198:	
  6178  1592                     ;Display.c: 113:             spiWrite(0x00);
  6179                           	movlw	low(0)
  6180  1592  3000               	fcall	_spiWrite
  6181  1593  160A  118A  2346  160A  118A  	line	115
  6182                           	
  6183                           l3200:	
  6184  1598                     ;Display.c: 115:         }
  6185                           	movlw	01h
  6186  1598  3001               	bsf	status, 5	;RP0=1, select bank1
  6187  1599  1683               	bcf	status, 6	;RP1=0, select bank1
  6188  159A  1303               	addwf	(write_space@x)^080h,f
  6189  159B  07A6               	skipnc
  6190  159C  1803               	incf	(write_space@x+1)^080h,f
  6191  159D  0AA7               	movlw	0
  6192  159E  3000               	addwf	(write_space@x+1)^080h,f
  6193  159F  07A7               	
  6194                           l3202:	
  6195  15A0                     	movf	(write_space@x+1)^080h,w
  6196  15A0  0827               	xorlw	80h
  6197  15A1  3A80               	movwf	btemp+1
  6198  15A2  00FF               	movlw	(0)^80h
  6199  15A3  3080               	subwf	btemp+1,w
  6200  15A4  027F               	skipz
  6201  15A5  1D03               	goto	u4225
  6202  15A6  2DA9               	movlw	05h
  6203  15A7  3005               	subwf	(write_space@x)^080h,w
  6204  15A8  0226               u4225:
  6205  15A9                     
  6206                           	skipc
  6207  15A9  1C03               	goto	u4221
  6208  15AA  2DAC               	goto	u4220
  6209  15AB  2DAD               u4221:
  6210  15AC                     	goto	l3198
  6211  15AC  2D92               u4220:
  6212  15AD                     	goto	l3204
  6213  15AD  2DAE               	
  6214                           l141:	
  6215  15AE                     	line	116
  6216                           	
  6217                           l3204:	
  6218  15AE                     ;Display.c: 116:     }
  6219                           	movlw	01h
  6220  15AE  3001               	bsf	status, 5	;RP0=1, select bank1
  6221  15AF  1683               	bcf	status, 6	;RP1=0, select bank1
  6222  15B0  1303               	addwf	(write_space@i)^080h,f
  6223  15B1  07A4               	skipnc
  6224  15B2  1803               	incf	(write_space@i+1)^080h,f
  6225  15B3  0AA5               	movlw	0
  6226  15B4  3000               	addwf	(write_space@i+1)^080h,f
  6227  15B5  07A5               	
  6228                           l138:	
  6229  15B6                     	movf	(write_space@i+1)^080h,w
  6230  15B6  0825               	xorlw	80h
  6231  15B7  3A80               	movwf	(??_write_space+0)^080h+0
  6232  15B8  00A3               	movf	(write_space@count+1)^080h,w
  6233  15B9  0822               	xorlw	80h
  6234  15BA  3A80               	subwf	(??_write_space+0)^080h+0,w
  6235  15BB  0223               	skipz
  6236  15BC  1D03               	goto	u4235
  6237  15BD  2DC0               	movf	(write_space@count)^080h,w
  6238  15BE  0821               	subwf	(write_space@i)^080h,w
  6239  15BF  0224               u4235:
  6240  15C0                     
  6241                           	skipc
  6242  15C0  1C03               	goto	u4231
  6243  15C1  2DC3               	goto	u4230
  6244  15C2  2DC4               u4231:
  6245  15C3                     	goto	l3192
  6246  15C3  2D7F               u4230:
  6247  15C4                     	goto	l143
  6248  15C4  2DC5               	
  6249                           l142:	
  6250  15C5                     	line	117
  6251                           	
  6252                           l143:	
  6253  15C5                     	return
  6254  15C5  0008               	opt stack 0
  6255                           GLOBAL	__end_of_write_space
  6256                           	__end_of_write_space:
  6257  15C6                     	signat	_write_space,4217
  6258                           	global	_write_int
  6259                           
  6260 ;; *************** function _write_int *****************
  6261 ;; Defined at:
  6262 ;;		line 129 in file "Display.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  number          2   29[BANK1 ] int 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;  num             2   31[BANK1 ] unsigned char [2]
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6276 ;;      Params:         0       0       2       0       0
  6277 ;;      Locals:         0       0       2       0       0
  6278 ;;      Temps:          0       0       0       0       0
  6279 ;;      Totals:         0       0       4       0       0
  6280 ;;Total ram usage:        4 bytes
  6281 ;; Hardware stack levels used:    1
  6282 ;; Hardware stack levels required when called:    9
  6283 ;; This function calls:
  6284 ;;		_sprintf
  6285 ;;		_write_char
  6286 ;;		_write_text
  6287 ;; This function is called by:
  6288 ;;		_update_input
  6289 ;;		_update_volume
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  6293                           	line	129
  6294                           global __ptext10
  6295                           __ptext10:	;psect for function _write_int
  6296  140A                     psect	text10
  6297                           	file	"Display.c"
  6298                           	line	129
  6299                           	global	__size_of_write_int
  6300                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  6301  0036                     	
  6302                           _write_int:	
  6303  140A                     ;incstack = 0
  6304 ;; hardware stack exceeded
  6305                           	opt	stack 0
  6306                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6307                           	line	131
  6308                           	
  6309                           l3206:	
  6310  140A                     ;Display.c: 129: void write_int(int number);Display.c: 130: {;Display.c: 131:     if (nu
                                 mber < 10) {
  6311                           	bsf	status, 5	;RP0=1, select bank1
  6312  140A  1683               	bcf	status, 6	;RP1=0, select bank1
  6313  140B  1303               	movf	(write_int@number+1)^080h,w
  6314  140C  083E               	xorlw	80h
  6315  140D  3A80               	movwf	btemp+1
  6316  140E  00FF               	movlw	(0)^80h
  6317  140F  3080               	subwf	btemp+1,w
  6318  1410  027F               	skipz
  6319  1411  1D03               	goto	u4245
  6320  1412  2C15               	movlw	0Ah
  6321  1413  300A               	subwf	(write_int@number)^080h,w
  6322  1414  023D               u4245:
  6323  1415                     
  6324                           	skipnc
  6325  1415  1803               	goto	u4241
  6326  1416  2C18               	goto	u4240
  6327  1417  2C19               u4241:
  6328  1418                     	goto	l3212
  6329  1418  2C24               u4240:
  6330  1419                     	line	132
  6331                           	
  6332                           l3208:	
  6333  1419                     ;Display.c: 132:         write_char(number + 48);
  6334                           	bsf	status, 5	;RP0=1, select bank1
  6335  1419  1683               	bcf	status, 6	;RP1=0, select bank1
  6336  141A  1303               	movf	(write_int@number)^080h,w
  6337  141B  083D               	addlw	030h
  6338  141C  3E30               	fcall	_write_char
  6339  141D  120A  118A  279D  160A  118A  	goto	l153
  6340  1422  2C3F               	line	133
  6341                           	
  6342                           l3210:	
  6343  1423                     ;Display.c: 133:         return;
  6344                           	goto	l153
  6345  1423  2C3F               	line	134
  6346                           ;Display.c: 134:     }
  6347                           	
  6348                           l152:	
  6349  1424                     	line	137
  6350                           	
  6351                           l3212:	
  6352  1424                     ;Display.c: 136:     char num[2];;Display.c: 137:     sprintf(num, "%d", number);
  6353                           	movlw	low(((STR_3)|8000h))
  6354  1424  309A               	bsf	status, 5	;RP0=1, select bank1
  6355  1425  1683               	bcf	status, 6	;RP1=0, select bank1
  6356  1426  1303               	movwf	(sprintf@f)^080h
  6357  1427  00AE               	movlw	high(((STR_3)|8000h))
  6358  1428  3087               	movwf	((sprintf@f)^080h)+1
  6359  1429  00AF               	movf	(write_int@number+1)^080h,w
  6360  142A  083E               	movwf	1+(?_sprintf)^080h+02h
  6361  142B  00B1               	movf	(write_int@number)^080h,w
  6362  142C  083D               	movwf	0+(?_sprintf)^080h+02h
  6363  142D  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  6364  142E  30BF               	fcall	_sprintf
  6365  142F  120A  158A  26CA  160A  118A  	line	139
  6366                           ;Display.c: 139:     write_text(num);
  6367                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  6368  1434  30BF               	bsf	status, 5	;RP0=1, select bank1
  6369  1435  1683               	bcf	status, 6	;RP1=0, select bank1
  6370  1436  1303               	movwf	(write_text@text)^080h
  6371  1437  00B3               	movlw	(0x0)
  6372  1438  3000               	movwf	(write_text@text+1)^080h
  6373  1439  00B4               	fcall	_write_text
  6374  143A  160A  118A  24B2  160A  118A  	line	140
  6375                           	
  6376                           l153:	
  6377  143F                     	return
  6378  143F  0008               	opt stack 0
  6379                           GLOBAL	__end_of_write_int
  6380                           	__end_of_write_int:
  6381  1440                     	signat	_write_int,4217
  6382                           	global	_write_text
  6383                           
  6384 ;; *************** function _write_text *****************
  6385 ;; Defined at:
  6386 ;;		line 119 in file "Display.c"
  6387 ;; Parameters:    Size  Location     Type
  6388 ;;  text            2   19[BANK1 ] PTR unsigned char 
  6389 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;  c               2   21[BANK1 ] PTR unsigned char 
  6392 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6402 ;;      Params:         0       0       2       0       0
  6403 ;;      Locals:         0       0       2       0       0
  6404 ;;      Temps:          0       0       0       0       0
  6405 ;;      Totals:         0       0       4       0       0
  6406 ;;Total ram usage:        4 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    8
  6409 ;; This function calls:
  6410 ;;		_write_char
  6411 ;; This function is called by:
  6412 ;;		_update_input
  6413 ;;		_update_volume
  6414 ;;		_write_int
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6418                           	line	119
  6419                           global __ptext11
  6420                           __ptext11:	;psect for function _write_text
  6421  14B2                     psect	text11
  6422                           	file	"Display.c"
  6423                           	line	119
  6424                           	global	__size_of_write_text
  6425                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  6426  003A                     	
  6427                           _write_text:	
  6428  14B2                     ;incstack = 0
  6429 ;; hardware stack exceeded
  6430                           	opt	stack 0
  6431                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6432                           	line	123
  6433                           	
  6434                           l2990:	
  6435  14B2                     ;Display.c: 119: void write_text(char* text);Display.c: 120: {;Display.c: 121:     char*
                                  c;;Display.c: 123:     for (c = text; *c != '\0'; c++) {
  6436                           	bsf	status, 5	;RP0=1, select bank1
  6437  14B2  1683               	bcf	status, 6	;RP1=0, select bank1
  6438  14B3  1303               		movf	(write_text@text)^080h,w
  6439  14B4  0833               	movwf	(write_text@c)^080h
  6440  14B5  00B5               movf	(write_text@text+1)^080h,w
  6441  14B6  0834               movwf	(write_text@c+1)^080h
  6442  14B7  00B6               
  6443                           	goto	l2996
  6444  14B8  2CD6               	
  6445                           l147:	
  6446  14B9                     	line	124
  6447                           	
  6448                           l2992:	
  6449  14B9                     ;Display.c: 124:         write_char(*c);
  6450                           	bsf	status, 5	;RP0=1, select bank1
  6451  14B9  1683               	bcf	status, 6	;RP1=0, select bank1
  6452  14BA  1303               	movf	(write_text@c+1)^080h,w
  6453  14BB  0836               	bcf	status, 5	;RP0=0, select bank0
  6454  14BC  1283               	bcf	status, 6	;RP1=0, select bank0
  6455  14BD  1303               	movwf	btemp+1
  6456  14BE  00FF               	bsf	status, 5	;RP0=1, select bank1
  6457  14BF  1683               	bcf	status, 6	;RP1=0, select bank1
  6458  14C0  1303               	movf	(write_text@c)^080h,w
  6459  14C1  0835               	movwf	fsr0
  6460  14C2  0084               	bcf	status, 5	;RP0=0, select bank0
  6461  14C3  1283               	bcf	status, 6	;RP1=0, select bank0
  6462  14C4  1303               	fcall	stringtab
  6463  14C5  120A  118A  2600  160A  118A  	fcall	_write_char
  6464  14CA  120A  118A  279D  160A  118A  	line	125
  6465                           	
  6466                           l2994:	
  6467  14CF                     ;Display.c: 125:     }
  6468                           	movlw	01h
  6469  14CF  3001               	bsf	status, 5	;RP0=1, select bank1
  6470  14D0  1683               	bcf	status, 6	;RP1=0, select bank1
  6471  14D1  1303               	addwf	(write_text@c)^080h,f
  6472  14D2  07B5               	skipnc
  6473  14D3  1803               	incf	(write_text@c+1)^080h,f
  6474  14D4  0AB6               	goto	l2996
  6475  14D5  2CD6               	
  6476                           l146:	
  6477  14D6                     	
  6478                           l2996:	
  6479  14D6                     	movf	(write_text@c+1)^080h,w
  6480  14D6  0836               	bcf	status, 5	;RP0=0, select bank0
  6481  14D7  1283               	bcf	status, 6	;RP1=0, select bank0
  6482  14D8  1303               	movwf	btemp+1
  6483  14D9  00FF               	bsf	status, 5	;RP0=1, select bank1
  6484  14DA  1683               	bcf	status, 6	;RP1=0, select bank1
  6485  14DB  1303               	movf	(write_text@c)^080h,w
  6486  14DC  0835               	movwf	fsr0
  6487  14DD  0084               	bcf	status, 5	;RP0=0, select bank0
  6488  14DE  1283               	bcf	status, 6	;RP1=0, select bank0
  6489  14DF  1303               	fcall	stringtab
  6490  14E0  120A  118A  2600  160A  118A  	xorlw	0
  6491  14E5  3A00               	skipz
  6492  14E6  1D03               	goto	u4001
  6493  14E7  2CE9               	goto	u4000
  6494  14E8  2CEA               u4001:
  6495  14E9                     	goto	l2992
  6496  14E9  2CB9               u4000:
  6497  14EA                     	goto	l149
  6498  14EA  2CEB               	
  6499                           l148:	
  6500  14EB                     	line	127
  6501                           	
  6502                           l149:	
  6503  14EB                     	return
  6504  14EB  0008               	opt stack 0
  6505                           GLOBAL	__end_of_write_text
  6506                           	__end_of_write_text:
  6507  14EC                     	signat	_write_text,4217
  6508                           	global	_write_char
  6509                           
  6510 ;; *************** function _write_char *****************
  6511 ;; Defined at:
  6512 ;;		line 142 in file "Display.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  c               1    wreg     unsigned char 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  c               1   18[BANK1 ] unsigned char 
  6517 ;;  pos             2   16[BANK1 ] int 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      void 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6527 ;;      Params:         0       0       0       0       0
  6528 ;;      Locals:         0       0       3       0       0
  6529 ;;      Temps:          0       0       0       0       0
  6530 ;;      Totals:         0       0       3       0       0
  6531 ;;Total ram usage:        3 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    7
  6534 ;; This function calls:
  6535 ;;		_write_font
  6536 ;; This function is called by:
  6537 ;;		_write_text
  6538 ;;		_write_int
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6542                           	line	142
  6543                           global __ptext12
  6544                           __ptext12:	;psect for function _write_char
  6545  079D                     psect	text12
  6546                           	file	"Display.c"
  6547                           	line	142
  6548                           	global	__size_of_write_char
  6549                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  6550  0062                     	
  6551                           _write_char:	
  6552  079D                     ;incstack = 0
  6553 ;; hardware stack exceeded
  6554                           	opt	stack 0
  6555                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6556                           ;write_char@c stored from wreg
  6557                           	bsf	status, 5	;RP0=1, select bank1
  6558  079D  1683               	bcf	status, 6	;RP1=0, select bank1
  6559  079E  1303               	movwf	(write_char@c)^080h
  6560  079F  00B2               	line	147
  6561                           	
  6562                           l2356:	
  6563  07A0                     ;Display.c: 142: void write_char(char c);Display.c: 143: {;Display.c: 144:     int pos;;
                                 Display.c: 147:     if (c >= 48 && c <= 57) {
  6564                           	movlw	low(030h)
  6565  07A0  3030               	subwf	(write_char@c)^080h,w
  6566  07A1  0232               	skipc
  6567  07A2  1C03               	goto	u2371
  6568  07A3  2FA5               	goto	u2370
  6569  07A4  2FA6               u2371:
  6570  07A5                     	goto	l2364
  6571  07A5  2FBD               u2370:
  6572  07A6                     	
  6573                           l2358:	
  6574  07A6                     	movlw	low(03Ah)
  6575  07A6  303A               	subwf	(write_char@c)^080h,w
  6576  07A7  0232               	skipnc
  6577  07A8  1803               	goto	u2381
  6578  07A9  2FAB               	goto	u2380
  6579  07AA  2FAC               u2381:
  6580  07AB                     	goto	l2364
  6581  07AB  2FBD               u2380:
  6582  07AC                     	line	148
  6583                           	
  6584                           l2360:	
  6585  07AC                     ;Display.c: 148:         pos = c - 48;
  6586                           	movf	(write_char@c)^080h,w
  6587  07AC  0832               	addlw	low(-48)
  6588  07AD  3ED0               	movwf	(write_char@pos)^080h
  6589  07AE  00B0               	movlw	high(-48)
  6590  07AF  30FF               	skipnc
  6591  07B0  1803               	movlw	(high(-48)+1)&0ffh
  6592  07B1  3000               	movwf	((write_char@pos)^080h)+1
  6593  07B2  00B1               	line	149
  6594                           	
  6595                           l2362:	
  6596  07B3                     ;Display.c: 149:         write_font(pos);
  6597                           	movf	(write_char@pos+1)^080h,w
  6598  07B3  0831               	movwf	(write_font@fontPos+1)^080h
  6599  07B4  00A7               	movf	(write_char@pos)^080h,w
  6600  07B5  0830               	movwf	(write_font@fontPos)^080h
  6601  07B6  00A6               	fcall	_write_font
  6602  07B7  160A  118A  2663  120A  118A  	line	150
  6603                           ;Display.c: 150:     } else if (c >= 65 && c <= 90) {
  6604                           	goto	l162
  6605  07BC  2FFE               	
  6606                           l156:	
  6607  07BD                     	
  6608                           l2364:	
  6609  07BD                     	movlw	low(041h)
  6610  07BD  3041               	bsf	status, 5	;RP0=1, select bank1
  6611  07BE  1683               	bcf	status, 6	;RP1=0, select bank1
  6612  07BF  1303               	subwf	(write_char@c)^080h,w
  6613  07C0  0232               	skipc
  6614  07C1  1C03               	goto	u2391
  6615  07C2  2FC4               	goto	u2390
  6616  07C3  2FC5               u2391:
  6617  07C4                     	goto	l2372
  6618  07C4  2FDC               u2390:
  6619  07C5                     	
  6620                           l2366:	
  6621  07C5                     	movlw	low(05Bh)
  6622  07C5  305B               	subwf	(write_char@c)^080h,w
  6623  07C6  0232               	skipnc
  6624  07C7  1803               	goto	u2401
  6625  07C8  2FCA               	goto	u2400
  6626  07C9  2FCB               u2401:
  6627  07CA                     	goto	l2372
  6628  07CA  2FDC               u2400:
  6629  07CB                     	line	151
  6630                           	
  6631                           l2368:	
  6632  07CB                     ;Display.c: 151:         pos = (c - 65) + 10;
  6633                           	movf	(write_char@c)^080h,w
  6634  07CB  0832               	addlw	low(-55)
  6635  07CC  3EC9               	movwf	(write_char@pos)^080h
  6636  07CD  00B0               	movlw	high(-55)
  6637  07CE  30FF               	skipnc
  6638  07CF  1803               	movlw	(high(-55)+1)&0ffh
  6639  07D0  3000               	movwf	((write_char@pos)^080h)+1
  6640  07D1  00B1               	line	152
  6641                           	
  6642                           l2370:	
  6643  07D2                     ;Display.c: 152:         write_font(pos);
  6644                           	movf	(write_char@pos+1)^080h,w
  6645  07D2  0831               	movwf	(write_font@fontPos+1)^080h
  6646  07D3  00A7               	movf	(write_char@pos)^080h,w
  6647  07D4  0830               	movwf	(write_font@fontPos)^080h
  6648  07D5  00A6               	fcall	_write_font
  6649  07D6  160A  118A  2663  120A  118A  	line	153
  6650                           ;Display.c: 153:     } else if (c >= 97 && c <= 122) {
  6651                           	goto	l162
  6652  07DB  2FFE               	
  6653                           l158:	
  6654  07DC                     	
  6655                           l2372:	
  6656  07DC                     	movlw	low(061h)
  6657  07DC  3061               	bsf	status, 5	;RP0=1, select bank1
  6658  07DD  1683               	bcf	status, 6	;RP1=0, select bank1
  6659  07DE  1303               	subwf	(write_char@c)^080h,w
  6660  07DF  0232               	skipc
  6661  07E0  1C03               	goto	u2411
  6662  07E1  2FE3               	goto	u2410
  6663  07E2  2FE4               u2411:
  6664  07E3                     	goto	l162
  6665  07E3  2FFE               u2410:
  6666  07E4                     	
  6667                           l2374:	
  6668  07E4                     	movlw	low(07Bh)
  6669  07E4  307B               	subwf	(write_char@c)^080h,w
  6670  07E5  0232               	skipnc
  6671  07E6  1803               	goto	u2421
  6672  07E7  2FE9               	goto	u2420
  6673  07E8  2FEA               u2421:
  6674  07E9                     	goto	l162
  6675  07E9  2FFE               u2420:
  6676  07EA                     	line	154
  6677                           	
  6678                           l2376:	
  6679  07EA                     ;Display.c: 154:         pos = (c - 97) + 10;
  6680                           	movf	(write_char@c)^080h,w
  6681  07EA  0832               	addlw	low(-87)
  6682  07EB  3EA9               	movwf	(write_char@pos)^080h
  6683  07EC  00B0               	movlw	high(-87)
  6684  07ED  30FF               	skipnc
  6685  07EE  1803               	movlw	(high(-87)+1)&0ffh
  6686  07EF  3000               	movwf	((write_char@pos)^080h)+1
  6687  07F0  00B1               	line	155
  6688                           	
  6689                           l2378:	
  6690  07F1                     ;Display.c: 155:         write_font(pos);
  6691                           	movf	(write_char@pos+1)^080h,w
  6692  07F1  0831               	movwf	(write_font@fontPos+1)^080h
  6693  07F2  00A7               	movf	(write_char@pos)^080h,w
  6694  07F3  0830               	movwf	(write_font@fontPos)^080h
  6695  07F4  00A6               	fcall	_write_font
  6696  07F5  160A  118A  2663  120A  118A  	line	156
  6697                           ;Display.c: 156:     } else {
  6698                           	goto	l162
  6699  07FA  2FFE               	
  6700                           l160:	
  6701  07FB                     	goto	l162
  6702  07FB  2FFE               	line	159
  6703                           ;Display.c: 159:     }
  6704                           	
  6705                           l161:	
  6706  07FC                     	goto	l162
  6707  07FC  2FFE               	
  6708                           l159:	
  6709  07FD                     	goto	l162
  6710  07FD  2FFE               	
  6711                           l157:	
  6712  07FE                     	line	160
  6713                           	
  6714                           l162:	
  6715  07FE                     	return
  6716  07FE  0008               	opt stack 0
  6717                           GLOBAL	__end_of_write_char
  6718                           	__end_of_write_char:
  6719  07FF                     	signat	_write_char,4217
  6720                           	global	_write_font
  6721                           
  6722 ;; *************** function _write_font *****************
  6723 ;; Defined at:
  6724 ;;		line 162 in file "Display.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  fontPos         2    6[BANK1 ] int 
  6727 ;; Auto vars:     Size  Location     Type
  6728 ;;  x               2   14[BANK1 ] int 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      void 
  6731 ;; Registers used:
  6732 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6738 ;;      Params:         0       0       2       0       0
  6739 ;;      Locals:         0       0       2       0       0
  6740 ;;      Temps:          0       0       6       0       0
  6741 ;;      Totals:         0       0      10       0       0
  6742 ;;Total ram usage:       10 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    6
  6745 ;; This function calls:
  6746 ;;		___wmul
  6747 ;;		_spiWrite
  6748 ;; This function is called by:
  6749 ;;		_write_char
  6750 ;; This function uses a non-reentrant model
  6751 ;;
  6752                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6753                           	line	162
  6754                           global __ptext13
  6755                           __ptext13:	;psect for function _write_font
  6756  1663                     psect	text13
  6757                           	file	"Display.c"
  6758                           	line	162
  6759                           	global	__size_of_write_font
  6760                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  6761  0062                     	
  6762                           _write_font:	
  6763  1663                     ;incstack = 0
  6764 ;; hardware stack exceeded
  6765                           	opt	stack 0
  6766                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6767                           	line	164
  6768                           	
  6769                           l2344:	
  6770  1663                     ;Display.c: 162: void write_font(int fontPos);Display.c: 163: {;Display.c: 164:     for(
                                 int x=0; x < 5; x++){
  6771                           	bsf	status, 5	;RP0=1, select bank1
  6772  1663  1683               	bcf	status, 6	;RP1=0, select bank1
  6773  1664  1303               	clrf	(write_font@x)^080h
  6774  1665  01AE               	clrf	(write_font@x+1)^080h
  6775  1666  01AF               	
  6776                           l2346:	
  6777  1667                     	movf	(write_font@x+1)^080h,w
  6778  1667  082F               	xorlw	80h
  6779  1668  3A80               	movwf	btemp+1
  6780  1669  00FF               	movlw	(0)^80h
  6781  166A  3080               	subwf	btemp+1,w
  6782  166B  027F               	skipz
  6783  166C  1D03               	goto	u2355
  6784  166D  2E70               	movlw	05h
  6785  166E  3005               	subwf	(write_font@x)^080h,w
  6786  166F  022E               u2355:
  6787  1670                     
  6788                           	skipc
  6789  1670  1C03               	goto	u2351
  6790  1671  2E73               	goto	u2350
  6791  1672  2E74               u2351:
  6792  1673                     	goto	l2350
  6793  1673  2E76               u2350:
  6794  1674                     	goto	l167
  6795  1674  2EC4               	
  6796                           l2348:	
  6797  1675                     	goto	l167
  6798  1675  2EC4               	
  6799                           l165:	
  6800  1676                     	line	165
  6801                           	
  6802                           l2350:	
  6803  1676                     ;Display.c: 165:         spiWrite(font[fontPos][x]);
  6804                           	bsf	status, 5	;RP0=1, select bank1
  6805  1676  1683               	bcf	status, 6	;RP1=0, select bank1
  6806  1677  1303               	movf	(write_font@x+1)^080h,w
  6807  1678  082F               	movwf	(??_write_font+0)^080h+0+1
  6808  1679  00A9               	movf	(write_font@x)^080h,w
  6809  167A  082E               	movwf	(??_write_font+0)^080h+0
  6810  167B  00A8               	clrc
  6811  167C  1003               	rlf	(??_write_font+0)^080h+0,f
  6812  167D  0DA8               	rlf	(??_write_font+0)^080h+1,f
  6813  167E  0DA9               	movf	(write_font@fontPos+1)^080h,w
  6814  167F  0827               	movwf	(___wmul@multiplier+1)^080h
  6815  1680  00A1               	movf	(write_font@fontPos)^080h,w
  6816  1681  0826               	movwf	(___wmul@multiplier)^080h
  6817  1682  00A0               	movlw	0Ah
  6818  1683  300A               	movwf	(___wmul@multiplicand)^080h
  6819  1684  00A2               	movlw	0
  6820  1685  3000               	movwf	((___wmul@multiplicand)^080h)+1
  6821  1686  00A3               	fcall	___wmul
  6822  1687  160A  118A  237E  160A  118A  	movlw	low(((_font)|8000h))
  6823  168C  3012               	bsf	status, 5	;RP0=1, select bank1
  6824  168D  1683               	bcf	status, 6	;RP1=0, select bank1
  6825  168E  1303               	movwf	(??_write_font+2)^080h+0
  6826  168F  00AA               	movlw	high(((_font)|8000h))
  6827  1690  3086               	movwf	(??_write_font+2)^080h+0+1
  6828  1691  00AB               	movf	(0+(?___wmul))^080h,w
  6829  1692  0820               	addwf	0+(??_write_font+2)^080h+0,w
  6830  1693  072A               	movwf	(??_write_font+4)^080h+0
  6831  1694  00AC               	movf	(1+(?___wmul))^080h,w
  6832  1695  0821               	skipnc
  6833  1696  1803               	incf	(1+(?___wmul))^080h,w
  6834  1697  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  6835  1698  072B               	movwf	1+(??_write_font+4)^080h+0
  6836  1699  00AD               	movf	0+(??_write_font+0)^080h+0,w
  6837  169A  0828               	addwf	0+(??_write_font+4)^080h+0,w
  6838  169B  072C               	movwf	fsr0
  6839  169C  0084               	movf	1+(??_write_font+0)^080h+0,w
  6840  169D  0829               	skipnc
  6841  169E  1803               	incf	1+(??_write_font+0)^080h+0,w
  6842  169F  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  6843  16A0  072D               	bcf	status, 5	;RP0=0, select bank0
  6844  16A1  1283               	bcf	status, 6	;RP1=0, select bank0
  6845  16A2  1303               	movwf	btemp+1
  6846  16A3  00FF               	fcall	stringtab
  6847  16A4  120A  118A  2600  160A  118A  	fcall	_spiWrite
  6848  16A9  160A  118A  2346  160A  118A  	line	166
  6849                           	
  6850                           l2352:	
  6851  16AE                     ;Display.c: 166:     }
  6852                           	movlw	01h
  6853  16AE  3001               	bsf	status, 5	;RP0=1, select bank1
  6854  16AF  1683               	bcf	status, 6	;RP1=0, select bank1
  6855  16B0  1303               	addwf	(write_font@x)^080h,f
  6856  16B1  07AE               	skipnc
  6857  16B2  1803               	incf	(write_font@x+1)^080h,f
  6858  16B3  0AAF               	movlw	0
  6859  16B4  3000               	addwf	(write_font@x+1)^080h,f
  6860  16B5  07AF               	
  6861                           l2354:	
  6862  16B6                     	movf	(write_font@x+1)^080h,w
  6863  16B6  082F               	xorlw	80h
  6864  16B7  3A80               	movwf	btemp+1
  6865  16B8  00FF               	movlw	(0)^80h
  6866  16B9  3080               	subwf	btemp+1,w
  6867  16BA  027F               	skipz
  6868  16BB  1D03               	goto	u2365
  6869  16BC  2EBF               	movlw	05h
  6870  16BD  3005               	subwf	(write_font@x)^080h,w
  6871  16BE  022E               u2365:
  6872  16BF                     
  6873                           	skipc
  6874  16BF  1C03               	goto	u2361
  6875  16C0  2EC2               	goto	u2360
  6876  16C1  2EC3               u2361:
  6877  16C2                     	goto	l2350
  6878  16C2  2E76               u2360:
  6879  16C3                     	goto	l167
  6880  16C3  2EC4               	
  6881                           l166:	
  6882  16C4                     	line	167
  6883                           	
  6884                           l167:	
  6885  16C4                     	return
  6886  16C4  0008               	opt stack 0
  6887                           GLOBAL	__end_of_write_font
  6888                           	__end_of_write_font:
  6889  16C5                     	signat	_write_font,4217
  6890                           	global	___wmul
  6891                           
  6892 ;; *************** function ___wmul *****************
  6893 ;; Defined at:
  6894 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  multiplier      2    0[BANK1 ] unsigned int 
  6897 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  product         2    4[BANK1 ] unsigned int 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  2    0[BANK1 ] unsigned int 
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6909 ;;      Params:         0       0       4       0       0
  6910 ;;      Locals:         0       0       2       0       0
  6911 ;;      Temps:          0       0       0       0       0
  6912 ;;      Totals:         0       0       6       0       0
  6913 ;;Total ram usage:        6 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    5
  6916 ;; This function calls:
  6917 ;;		Nothing
  6918 ;; This function is called by:
  6919 ;;		_write_font
  6920 ;;		_is_deadzone
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  6924                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  6925                           	line	15
  6926                           global __ptext14
  6927                           __ptext14:	;psect for function ___wmul
  6928  137E                     psect	text14
  6929                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
  6930                           	line	15
  6931                           	global	__size_of___wmul
  6932                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  6933  002A                     	
  6934                           ___wmul:	
  6935  137E                     ;incstack = 0
  6936 ;; hardware stack exceeded
  6937                           	opt	stack 0
  6938                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6939                           	line	43
  6940                           	
  6941                           l2330:	
  6942  137E                     	bsf	status, 5	;RP0=1, select bank1
  6943  137E  1683               	bcf	status, 6	;RP1=0, select bank1
  6944  137F  1303               	clrf	(___wmul@product)^080h
  6945  1380  01A4               	clrf	(___wmul@product+1)^080h
  6946  1381  01A5               	goto	l2332
  6947  1382  2B83               	line	44
  6948                           	
  6949                           l502:	
  6950  1383                     	line	45
  6951                           	
  6952                           l2332:	
  6953  1383                     	btfss	(___wmul@multiplier)^080h,(0)&7
  6954  1383  1C20               	goto	u2311
  6955  1384  2B86               	goto	u2310
  6956  1385  2B87               u2311:
  6957  1386                     	goto	l503
  6958  1386  2B8D               u2310:
  6959  1387                     	line	46
  6960                           	
  6961                           l2334:	
  6962  1387                     	movf	(___wmul@multiplicand)^080h,w
  6963  1387  0822               	addwf	(___wmul@product)^080h,f
  6964  1388  07A4               	skipnc
  6965  1389  1803               	incf	(___wmul@product+1)^080h,f
  6966  138A  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  6967  138B  0823               	addwf	(___wmul@product+1)^080h,f
  6968  138C  07A5               	
  6969                           l503:	
  6970  138D                     	line	47
  6971                           	movlw	01h
  6972  138D  3001               	
  6973                           u2325:
  6974  138E                     	clrc
  6975  138E  1003               	rlf	(___wmul@multiplicand)^080h,f
  6976  138F  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  6977  1390  0DA3               	addlw	-1
  6978  1391  3EFF               	skipz
  6979  1392  1D03               	goto	u2325
  6980  1393  2B8E               	line	48
  6981                           	
  6982                           l2336:	
  6983  1394                     	movlw	01h
  6984  1394  3001               	
  6985                           u2335:
  6986  1395                     	clrc
  6987  1395  1003               	rrf	(___wmul@multiplier+1)^080h,f
  6988  1396  0CA1               	rrf	(___wmul@multiplier)^080h,f
  6989  1397  0CA0               	addlw	-1
  6990  1398  3EFF               	skipz
  6991  1399  1D03               	goto	u2335
  6992  139A  2B95               	line	49
  6993                           	
  6994                           l2338:	
  6995  139B                     	movf	((___wmul@multiplier)^080h),w
  6996  139B  0820               iorwf	((___wmul@multiplier+1)^080h),w
  6997  139C  0421               	btfss	status,2
  6998  139D  1D03               	goto	u2341
  6999  139E  2BA0               	goto	u2340
  7000  139F  2BA1               u2341:
  7001  13A0                     	goto	l2332
  7002  13A0  2B83               u2340:
  7003  13A1                     	goto	l2340
  7004  13A1  2BA2               	
  7005                           l504:	
  7006  13A2                     	line	52
  7007                           	
  7008                           l2340:	
  7009  13A2                     	movf	(___wmul@product+1)^080h,w
  7010  13A2  0825               	movwf	(?___wmul+1)^080h
  7011  13A3  00A1               	movf	(___wmul@product)^080h,w
  7012  13A4  0824               	movwf	(?___wmul)^080h
  7013  13A5  00A0               	goto	l505
  7014  13A6  2BA7               	
  7015                           l2342:	
  7016  13A7                     	line	53
  7017                           	
  7018                           l505:	
  7019  13A7                     	return
  7020  13A7  0008               	opt stack 0
  7021                           GLOBAL	__end_of___wmul
  7022                           	__end_of___wmul:
  7023  13A8                     	signat	___wmul,8314
  7024                           	global	_sprintf
  7025                           
  7026 ;; *************** function _sprintf *****************
  7027 ;; Defined at:
  7028 ;;		line 500 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  sp              1    wreg     PTR unsigned char 
  7031 ;;		 -> write_int@num(2), 
  7032 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  7033 ;;		 -> STR_3(3), 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  7036 ;;		 -> write_int@num(2), 
  7037 ;;  tmpval          4    0        struct .
  7038 ;;  val             2   25[BANK1 ] unsigned int 
  7039 ;;  cp              2    0        PTR const unsigned char 
  7040 ;;  len             2    0        unsigned int 
  7041 ;;  c               1   28[BANK1 ] unsigned char 
  7042 ;;  prec            1   24[BANK1 ] char 
  7043 ;;  flag            1   23[BANK1 ] unsigned char 
  7044 ;;  ap              1   22[BANK1 ] PTR void [1]
  7045 ;;		 -> ?_sprintf(2), 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  2   14[BANK1 ] int 
  7048 ;; Registers used:
  7049 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7050 ;; Tracked objects:
  7051 ;;		On entry : 0/0
  7052 ;;		On exit  : 0/0
  7053 ;;		Unchanged: 0/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7055 ;;      Params:         0       0       4       0       0
  7056 ;;      Locals:         0       0       7       0       0
  7057 ;;      Temps:          0       0       4       0       0
  7058 ;;      Totals:         0       0      15       0       0
  7059 ;;Total ram usage:       15 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; Hardware stack levels required when called:    6
  7062 ;; This function calls:
  7063 ;;		___lwdiv
  7064 ;;		___lwmod
  7065 ;; This function is called by:
  7066 ;;		_write_int
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  7070                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  7071                           	line	500
  7072                           global __ptext15
  7073                           __ptext15:	;psect for function _sprintf
  7074  0ECA                     psect	text15
  7075                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c"
  7076                           	line	500
  7077                           	global	__size_of_sprintf
  7078                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  7079  0136                     	
  7080                           _sprintf:	
  7081  0ECA                     ;incstack = 0
  7082 ;; hardware stack exceeded
  7083                           	opt	stack 0
  7084                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7085                           ;sprintf@sp stored from wreg
  7086                           	bsf	status, 5	;RP0=1, select bank1
  7087  0ECA  1683               	bcf	status, 6	;RP1=0, select bank1
  7088  0ECB  1303               	movwf	(sprintf@sp)^080h
  7089  0ECC  00BB               	line	545
  7090                           	
  7091                           l2998:	
  7092  0ECD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 500: sprintf(char * sp, const
                                  char * f, ...);/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 501: {;/opt/mi
                                 crochip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 502:  va_list ap;;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 507:  char c;;/opt/microchip/xc8/v2.00/pic/source
                                 s/c90/common/doprnt.c: 516:  signed char prec;;/opt/microchip/xc8/v2.00/pic/sources/c90/
                                 common/doprnt.c: 520:  unsigned char flag;;/opt/microchip/xc8/v2.00/pic/sources/c90/comm
                                 on/doprnt.c: 538:  } tmpval;
  7093                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  7094  0ECD  30B0               	movwf	(??_sprintf+0)^080h+0
  7095  0ECE  00B2               	movf	(??_sprintf+0)^080h+0,w
  7096  0ECF  0832               	movwf	(sprintf@ap)^080h
  7097  0ED0  00B6               	line	548
  7098                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  7099                           	goto	l3050
  7100  0ED1  2FD8               	
  7101                           l481:	
  7102  0ED2                     	line	550
  7103                           	
  7104                           l3000:	
  7105  0ED2                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 550:   if(c != '%')
  7106                           		movlw	37
  7107  0ED2  3025               	xorwf	((sprintf@c)^080h),w
  7108  0ED3  063C               	btfsc	status,2
  7109  0ED4  1903               	goto	u4011
  7110  0ED5  2ED7               	goto	u4010
  7111  0ED6  2ED8               u4011:
  7112  0ED7                     	goto	l3006
  7113  0ED7  2EE4               u4010:
  7114  0ED8                     	line	553
  7115                           	
  7116                           l3002:	
  7117  0ED8                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 552:   {;/opt/microchip/xc8/v
                                 2.00/pic/sources/c90/common/doprnt.c: 553:    ((*sp++ = (c)));
  7118                           	movf	(sprintf@c)^080h,w
  7119  0ED8  083C               	movwf	(??_sprintf+0)^080h+0
  7120  0ED9  00B2               	movf	(sprintf@sp)^080h,w
  7121  0EDA  083B               	movwf	fsr0
  7122  0EDB  0084               	movf	(??_sprintf+0)^080h+0,w
  7123  0EDC  0832               	bcf	status, 7	;select IRP bank0
  7124  0EDD  1383               	movwf	indf
  7125  0EDE  0080               	
  7126                           l3004:	
  7127  0EDF                     	movlw	low(01h)
  7128  0EDF  3001               	movwf	(??_sprintf+0)^080h+0
  7129  0EE0  00B2               	movf	(??_sprintf+0)^080h+0,w
  7130  0EE1  0832               	addwf	(sprintf@sp)^080h,f
  7131  0EE2  07BB               	line	554
  7132                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 554:    continue;
  7133                           	goto	l3050
  7134  0EE3  2FD8               	line	555
  7135                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 555:   }
  7136                           	
  7137                           l482:	
  7138  0EE4                     	line	560
  7139                           	
  7140                           l3006:	
  7141  0EE4                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 560:   flag = 0;
  7142                           	clrf	(sprintf@flag)^080h
  7143  0EE4  01B7               	line	654
  7144                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 654:   switch(c = *f++) {
  7145                           	goto	l3010
  7146  0EE5  2EEB               	line	656
  7147                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 656:   case 0:
  7148                           	
  7149                           l484:	
  7150  0EE6                     	line	657
  7151                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 657:    goto alldone;
  7152                           	goto	l3052
  7153  0EE6  2FFA               	line	716
  7154                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 716:   case 'd':
  7155                           	
  7156                           l486:	
  7157  0EE7                     	goto	l3012
  7158  0EE7  2F16               	line	717
  7159                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 717:   case 'i':
  7160                           	
  7161                           l487:	
  7162  0EE8                     	line	718
  7163                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 718:    break;
  7164                           	goto	l3012
  7165  0EE8  2F16               	line	821
  7166                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 821:   default:
  7167                           	
  7168                           l489:	
  7169  0EE9                     	line	832
  7170                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 832:    continue;
  7171                           	goto	l3050
  7172  0EE9  2FD8               	line	841
  7173                           	
  7174                           l3008:	
  7175  0EEA                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 841:   }
  7176                           	goto	l3012
  7177  0EEA  2F16               	
  7178                           l483:	
  7179  0EEB                     	
  7180                           l3010:	
  7181  0EEB                     	movf	(sprintf@f+1)^080h,w
  7182  0EEB  082F               	movwf	(??_sprintf+0)^080h+0+1
  7183  0EEC  00B3               	movf	(sprintf@f)^080h,w
  7184  0EED  082E               	movwf	(??_sprintf+0)^080h+0
  7185  0EEE  00B2               	incf	(sprintf@f)^080h,f
  7186  0EEF  0AAE               	skipnz
  7187  0EF0  1903               	incf	(sprintf@f+1)^080h,f
  7188  0EF1  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  7189  0EF2  0833               	bcf	status, 5	;RP0=0, select bank0
  7190  0EF3  1283               	bcf	status, 6	;RP1=0, select bank0
  7191  0EF4  1303               	movwf	btemp+1
  7192  0EF5  00FF               	bsf	status, 5	;RP0=1, select bank1
  7193  0EF6  1683               	bcf	status, 6	;RP1=0, select bank1
  7194  0EF7  1303               	movf	0+(??_sprintf+0)^080h+0,w
  7195  0EF8  0832               	movwf	fsr0
  7196  0EF9  0084               	bcf	status, 5	;RP0=0, select bank0
  7197  0EFA  1283               	bcf	status, 6	;RP1=0, select bank0
  7198  0EFB  1303               	fcall	stringtab
  7199  0EFC  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7200  0F01  1683               	bcf	status, 6	;RP1=0, select bank1
  7201  0F02  1303               	movwf	(sprintf@c)^080h
  7202  0F03  00BC               	movwf	(??_sprintf+2)^080h+0
  7203  0F04  00B4               	clrf	(??_sprintf+2)^080h+0+1
  7204  0F05  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  7205                           ; Switch size 1, requested type "space"
  7206                           ; Number of cases is 1, Range of values is 0 to 0
  7207                           ; switch strategies available:
  7208                           ; Name         Instructions Cycles
  7209                           ; simple_byte            4     3 (average)
  7210                           ; direct_byte           11     8 (fixed)
  7211                           ; jumptable            260     6 (fixed)
  7212                           ;	Chosen strategy is simple_byte
  7213                           
  7214                           	movf 1+(??_sprintf+2)^080h+0,w
  7215  0F06  0835               	opt asmopt_push
  7216                           	opt asmopt_off
  7217                           	xorlw	0^0	; case 0
  7218  0F07  3A00               	skipnz
  7219  0F08  1903               	goto	l3666
  7220  0F09  2F0B               	goto	l3050
  7221  0F0A  2FD8               	opt asmopt_pop
  7222                           	
  7223                           l3666:	
  7224  0F0B                     ; Switch size 1, requested type "space"
  7225                           ; Number of cases is 3, Range of values is 0 to 105
  7226                           ; switch strategies available:
  7227                           ; Name         Instructions Cycles
  7228                           ; simple_byte           10     6 (average)
  7229                           ; jumptable            260     6 (fixed)
  7230                           ;	Chosen strategy is simple_byte
  7231                           
  7232                           	movf 0+(??_sprintf+2)^080h+0,w
  7233  0F0B  0834               	opt asmopt_push
  7234                           	opt asmopt_off
  7235                           	xorlw	0^0	; case 0
  7236  0F0C  3A00               	skipnz
  7237  0F0D  1903               	goto	l3052
  7238  0F0E  2FFA               	xorlw	100^0	; case 100
  7239  0F0F  3A64               	skipnz
  7240  0F10  1903               	goto	l3012
  7241  0F11  2F16               	xorlw	105^100	; case 105
  7242  0F12  3A0D               	skipnz
  7243  0F13  1903               	goto	l3012
  7244  0F14  2F16               	goto	l3050
  7245  0F15  2FD8               	opt asmopt_pop
  7246                           
  7247                           	
  7248                           l488:	
  7249  0F16                     	line	1278
  7250                           	
  7251                           l3012:	
  7252  0F16                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1272:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1278:     val = (int)(*(int *)__va_arg((*(int **)
                                 ap), (int)0));
  7253                           	movf	(sprintf@ap)^080h,w
  7254  0F16  0836               	movwf	fsr0
  7255  0F17  0084               	bcf	status, 7	;select IRP bank0
  7256  0F18  1383               	movf	indf,w
  7257  0F19  0800               	movwf	(sprintf@val)^080h
  7258  0F1A  00B9               	incf	fsr0,f
  7259  0F1B  0A84               	movf	indf,w
  7260  0F1C  0800               	movwf	(sprintf@val+1)^080h
  7261  0F1D  00BA               	
  7262                           l3014:	
  7263  0F1E                     	movlw	low(02h)
  7264  0F1E  3002               	movwf	(??_sprintf+0)^080h+0
  7265  0F1F  00B2               	movf	(??_sprintf+0)^080h+0,w
  7266  0F20  0832               	addwf	(sprintf@ap)^080h,f
  7267  0F21  07B6               	line	1280
  7268                           	
  7269                           l3016:	
  7270  0F22                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1280:    if((int)val < 0) {
  7271                           	btfss	(sprintf@val+1)^080h,7
  7272  0F22  1FBA               	goto	u4021
  7273  0F23  2F25               	goto	u4020
  7274  0F24  2F26               u4021:
  7275  0F25                     	goto	l3022
  7276  0F25  2F30               u4020:
  7277  0F26                     	line	1281
  7278                           	
  7279                           l3018:	
  7280  0F26                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1281:     flag |= 0x03;
  7281                           	movlw	low(03h)
  7282  0F26  3003               	movwf	(??_sprintf+0)^080h+0
  7283  0F27  00B2               	movf	(??_sprintf+0)^080h+0,w
  7284  0F28  0832               	iorwf	(sprintf@flag)^080h,f
  7285  0F29  04B7               	line	1282
  7286                           	
  7287                           l3020:	
  7288  0F2A                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1282:     val = -val;
  7289                           	comf	(sprintf@val)^080h,f
  7290  0F2A  09B9               	comf	(sprintf@val+1)^080h,f
  7291  0F2B  09BA               	incf	(sprintf@val)^080h,f
  7292  0F2C  0AB9               	skipnz
  7293  0F2D  1903               	incf	(sprintf@val+1)^080h,f
  7294  0F2E  0ABA               	goto	l3022
  7295  0F2F  2F30               	line	1283
  7296                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1283:    }
  7297                           	
  7298                           l490:	
  7299  0F30                     	line	1324
  7300                           	
  7301                           l3022:	
  7302  0F30                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1285:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1324:    for(c = 1 ; c != sizeof dpowers/sizeof d
                                 powers[0] ; c++)
  7303                           	clrf	(sprintf@c)^080h
  7304  0F30  01BC               	incf	(sprintf@c)^080h,f
  7305  0F31  0ABC               	
  7306                           l3024:	
  7307  0F32                     		movlw	5
  7308  0F32  3005               	xorwf	((sprintf@c)^080h),w
  7309  0F33  063C               	btfss	status,2
  7310  0F34  1D03               	goto	u4031
  7311  0F35  2F37               	goto	u4030
  7312  0F36  2F38               u4031:
  7313  0F37                     	goto	l3028
  7314  0F37  2F3A               u4030:
  7315  0F38                     	goto	l3034
  7316  0F38  2F6E               	
  7317                           l3026:	
  7318  0F39                     	goto	l3034
  7319  0F39  2F6E               	
  7320                           l491:	
  7321  0F3A                     	line	1325
  7322                           	
  7323                           l3028:	
  7324  0F3A                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1325:     if(val < dpowers[c]
                                 )
  7325                           	movf	(sprintf@c)^080h,w
  7326  0F3A  083C               	movwf	(??_sprintf+0)^080h+0
  7327  0F3B  00B2               	addwf	(??_sprintf+0)^080h+0,w
  7328  0F3C  0732               	addlw	low(((_dpowers)|8000h))
  7329  0F3D  3E84               	movwf	fsr0
  7330  0F3E  0084               	movlw	high(((_dpowers)|8000h))
  7331  0F3F  3087               	skipnc
  7332  0F40  1803               	addlw	1
  7333  0F41  3E01               	bcf	status, 5	;RP0=0, select bank0
  7334  0F42  1283               	bcf	status, 6	;RP1=0, select bank0
  7335  0F43  1303               	movwf	btemp+1
  7336  0F44  00FF               	fcall	stringtab
  7337  0F45  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7338  0F4A  1683               	bcf	status, 6	;RP1=0, select bank1
  7339  0F4B  1303               	movwf	(??_sprintf+1)^080h+0
  7340  0F4C  00B3               	bcf	status, 5	;RP0=0, select bank0
  7341  0F4D  1283               	bcf	status, 6	;RP1=0, select bank0
  7342  0F4E  1303               	fcall	stringtab
  7343  0F4F  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7344  0F54  1683               	bcf	status, 6	;RP1=0, select bank1
  7345  0F55  1303               	movwf	(??_sprintf+1)^080h+0+1
  7346  0F56  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  7347  0F57  0834               	subwf	(sprintf@val+1)^080h,w
  7348  0F58  023A               	skipz
  7349  0F59  1D03               	goto	u4045
  7350  0F5A  2F5D               	movf	0+(??_sprintf+1)^080h+0,w
  7351  0F5B  0833               	subwf	(sprintf@val)^080h,w
  7352  0F5C  0239               u4045:
  7353  0F5D                     	skipnc
  7354  0F5D  1803               	goto	u4041
  7355  0F5E  2F60               	goto	u4040
  7356  0F5F  2F61               u4041:
  7357  0F60                     	goto	l3032
  7358  0F60  2F63               u4040:
  7359  0F61                     	goto	l3034
  7360  0F61  2F6E               	line	1326
  7361                           	
  7362                           l3030:	
  7363  0F62                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1326:      break;
  7364                           	goto	l3034
  7365  0F62  2F6E               	
  7366                           l493:	
  7367  0F63                     	
  7368                           l3032:	
  7369  0F63                     	movlw	low(01h)
  7370  0F63  3001               	movwf	(??_sprintf+0)^080h+0
  7371  0F64  00B2               	movf	(??_sprintf+0)^080h+0,w
  7372  0F65  0832               	addwf	(sprintf@c)^080h,f
  7373  0F66  07BC               		movlw	5
  7374  0F67  3005               	xorwf	((sprintf@c)^080h),w
  7375  0F68  063C               	btfss	status,2
  7376  0F69  1D03               	goto	u4051
  7377  0F6A  2F6C               	goto	u4050
  7378  0F6B  2F6D               u4051:
  7379  0F6C                     	goto	l3028
  7380  0F6C  2F3A               u4050:
  7381  0F6D                     	goto	l3034
  7382  0F6D  2F6E               	
  7383                           l492:	
  7384  0F6E                     	line	1457
  7385                           	
  7386                           l3034:	
  7387  0F6E                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1441:   {;/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1457:    if(flag & 0x03)
  7388                           	movf	(sprintf@flag)^080h,w
  7389  0F6E  0837               	andlw	03h
  7390  0F6F  3903               	btfsc	status,2
  7391  0F70  1903               	goto	u4061
  7392  0F71  2F73               	goto	u4060
  7393  0F72  2F74               u4061:
  7394  0F73                     	goto	l3040
  7395  0F73  2F80               u4060:
  7396  0F74                     	line	1458
  7397                           	
  7398                           l3036:	
  7399  0F74                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1458:     ((*sp++ = ('-')));

  7400                           	movlw	low(02Dh)
  7401  0F74  302D               	movwf	(??_sprintf+0)^080h+0
  7402  0F75  00B2               	movf	(sprintf@sp)^080h,w
  7403  0F76  083B               	movwf	fsr0
  7404  0F77  0084               	movf	(??_sprintf+0)^080h+0,w
  7405  0F78  0832               	bcf	status, 7	;select IRP bank0
  7406  0F79  1383               	movwf	indf
  7407  0F7A  0080               	
  7408                           l3038:	
  7409  0F7B                     	movlw	low(01h)
  7410  0F7B  3001               	movwf	(??_sprintf+0)^080h+0
  7411  0F7C  00B2               	movf	(??_sprintf+0)^080h+0,w
  7412  0F7D  0832               	addwf	(sprintf@sp)^080h,f
  7413  0F7E  07BB               	goto	l3040
  7414  0F7F  2F80               	
  7415                           l494:	
  7416  0F80                     	line	1491
  7417                           	
  7418                           l3040:	
  7419  0F80                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1488:   };/opt/microchip/xc8/
                                 v2.00/pic/sources/c90/common/doprnt.c: 1491:   prec = c;
  7420                           	movf	(sprintf@c)^080h,w
  7421  0F80  083C               	movwf	(??_sprintf+0)^080h+0
  7422  0F81  00B2               	movf	(??_sprintf+0)^080h+0,w
  7423  0F82  0832               	movwf	(sprintf@prec)^080h
  7424  0F83  00B8               	line	1493
  7425                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  7426                           	goto	l3048
  7427  0F84  2FCD               	
  7428                           l496:	
  7429  0F85                     	line	1508
  7430                           	
  7431                           l3042:	
  7432  0F85                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1497:    {;/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1508:     c = (val / dpowers[prec]) % 10 + '0';

  7433                           	movlw	0Ah
  7434  0F85  300A               	movwf	(___lwmod@divisor)^080h
  7435  0F86  00A8               	movlw	0
  7436  0F87  3000               	movwf	((___lwmod@divisor)^080h)+1
  7437  0F88  00A9               	movf	(sprintf@prec)^080h,w
  7438  0F89  0838               	movwf	(??_sprintf+0)^080h+0
  7439  0F8A  00B2               	addwf	(??_sprintf+0)^080h+0,w
  7440  0F8B  0732               	addlw	low(((_dpowers)|8000h))
  7441  0F8C  3E84               	movwf	fsr0
  7442  0F8D  0084               	movlw	high(((_dpowers)|8000h))
  7443  0F8E  3087               	skipnc
  7444  0F8F  1803               	addlw	1
  7445  0F90  3E01               	bcf	status, 5	;RP0=0, select bank0
  7446  0F91  1283               	bcf	status, 6	;RP1=0, select bank0
  7447  0F92  1303               	movwf	btemp+1
  7448  0F93  00FF               	fcall	stringtab
  7449  0F94  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7450  0F99  1683               	bcf	status, 6	;RP1=0, select bank1
  7451  0F9A  1303               	movwf	(___lwdiv@divisor)^080h
  7452  0F9B  00A0               	bcf	status, 5	;RP0=0, select bank0
  7453  0F9C  1283               	bcf	status, 6	;RP1=0, select bank0
  7454  0F9D  1303               	fcall	stringtab
  7455  0F9E  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7456  0FA3  1683               	bcf	status, 6	;RP1=0, select bank1
  7457  0FA4  1303               	movwf	(___lwdiv@divisor+1)^080h
  7458  0FA5  00A1               	movf	(sprintf@val+1)^080h,w
  7459  0FA6  083A               	movwf	(___lwdiv@dividend+1)^080h
  7460  0FA7  00A3               	movf	(sprintf@val)^080h,w
  7461  0FA8  0839               	movwf	(___lwdiv@dividend)^080h
  7462  0FA9  00A2               	fcall	___lwdiv
  7463  0FAA  160A  118A  25C6  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7464  0FAF  1683               	bcf	status, 6	;RP1=0, select bank1
  7465  0FB0  1303               	movf	(1+(?___lwdiv))^080h,w
  7466  0FB1  0821               	movwf	(___lwmod@dividend+1)^080h
  7467  0FB2  00AB               	movf	(0+(?___lwdiv))^080h,w
  7468  0FB3  0820               	movwf	(___lwmod@dividend)^080h
  7469  0FB4  00AA               	fcall	___lwmod
  7470  0FB5  160A  118A  24EC  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7471  0FBA  1683               	bcf	status, 6	;RP1=0, select bank1
  7472  0FBB  1303               	movf	(0+(?___lwmod))^080h,w
  7473  0FBC  0828               	addlw	030h
  7474  0FBD  3E30               	movwf	(??_sprintf+1)^080h+0
  7475  0FBE  00B3               	movf	(??_sprintf+1)^080h+0,w
  7476  0FBF  0833               	movwf	(sprintf@c)^080h
  7477  0FC0  00BC               	line	1543
  7478                           	
  7479                           l3044:	
  7480  0FC1                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1542:    };/opt/microchip/xc8
                                 /v2.00/pic/sources/c90/common/doprnt.c: 1543:    ((*sp++ = (c)));
  7481                           	movf	(sprintf@c)^080h,w
  7482  0FC1  083C               	movwf	(??_sprintf+0)^080h+0
  7483  0FC2  00B2               	movf	(sprintf@sp)^080h,w
  7484  0FC3  083B               	movwf	fsr0
  7485  0FC4  0084               	movf	(??_sprintf+0)^080h+0,w
  7486  0FC5  0832               	bcf	status, 7	;select IRP bank0
  7487  0FC6  1383               	movwf	indf
  7488  0FC7  0080               	
  7489                           l3046:	
  7490  0FC8                     	movlw	low(01h)
  7491  0FC8  3001               	movwf	(??_sprintf+0)^080h+0
  7492  0FC9  00B2               	movf	(??_sprintf+0)^080h+0,w
  7493  0FCA  0832               	addwf	(sprintf@sp)^080h,f
  7494  0FCB  07BB               	goto	l3048
  7495  0FCC  2FCD               	line	1544
  7496                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1544:   }
  7497                           	
  7498                           l495:	
  7499  0FCD                     	line	1493
  7500                           	
  7501                           l3048:	
  7502  0FCD                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1493:   while(prec--) {
  7503                           	movlw	low(-1)
  7504  0FCD  30FF               	movwf	(??_sprintf+0)^080h+0
  7505  0FCE  00B2               	movf	(??_sprintf+0)^080h+0,w
  7506  0FCF  0832               	addwf	(sprintf@prec)^080h,f
  7507  0FD0  07B8               		incf	(((sprintf@prec)^080h)),w
  7508  0FD1  0A38               	btfss	status,2
  7509  0FD2  1D03               	goto	u4071
  7510  0FD3  2FD5               	goto	u4070
  7511  0FD4  2FD6               u4071:
  7512  0FD5                     	goto	l3042
  7513  0FD5  2F85               u4070:
  7514  0FD6                     	goto	l3050
  7515  0FD6  2FD8               	
  7516                           l497:	
  7517  0FD7                     	goto	l3050
  7518  0FD7  2FD8               	line	1552
  7519                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1552:  }
  7520                           	
  7521                           l480:	
  7522  0FD8                     	line	548
  7523                           	
  7524                           l3050:	
  7525  0FD8                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 548:  while((c = *f++)) {
  7526                           	movf	(sprintf@f+1)^080h,w
  7527  0FD8  082F               	movwf	(??_sprintf+0)^080h+0+1
  7528  0FD9  00B3               	movf	(sprintf@f)^080h,w
  7529  0FDA  082E               	movwf	(??_sprintf+0)^080h+0
  7530  0FDB  00B2               	incf	(sprintf@f)^080h,f
  7531  0FDC  0AAE               	skipnz
  7532  0FDD  1903               	incf	(sprintf@f+1)^080h,f
  7533  0FDE  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  7534  0FDF  0833               	bcf	status, 5	;RP0=0, select bank0
  7535  0FE0  1283               	bcf	status, 6	;RP1=0, select bank0
  7536  0FE1  1303               	movwf	btemp+1
  7537  0FE2  00FF               	bsf	status, 5	;RP0=1, select bank1
  7538  0FE3  1683               	bcf	status, 6	;RP1=0, select bank1
  7539  0FE4  1303               	movf	0+(??_sprintf+0)^080h+0,w
  7540  0FE5  0832               	movwf	fsr0
  7541  0FE6  0084               	bcf	status, 5	;RP0=0, select bank0
  7542  0FE7  1283               	bcf	status, 6	;RP1=0, select bank0
  7543  0FE8  1303               	fcall	stringtab
  7544  0FE9  120A  118A  2600  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  7545  0FEE  1683               	bcf	status, 6	;RP1=0, select bank1
  7546  0FEF  1303               	movwf	(??_sprintf+2)^080h+0
  7547  0FF0  00B4               	movf	(??_sprintf+2)^080h+0,w
  7548  0FF1  0834               	movwf	(sprintf@c)^080h
  7549  0FF2  00BC               	movf	(((sprintf@c)^080h)),w
  7550  0FF3  083C               	btfss	status,2
  7551  0FF4  1D03               	goto	u4081
  7552  0FF5  2FF7               	goto	u4080
  7553  0FF6  2FF8               u4081:
  7554  0FF7                     	goto	l3000
  7555  0FF7  2ED2               u4080:
  7556  0FF8                     	goto	l3052
  7557  0FF8  2FFA               	
  7558                           l498:	
  7559  0FF9                     	goto	l3052
  7560  0FF9  2FFA               	line	1554
  7561                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1554: alldone:
  7562                           	
  7563                           l485:	
  7564  0FFA                     	line	1557
  7565                           	
  7566                           l3052:	
  7567  0FFA                     ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1557:  *sp = 0;
  7568                           	movf	(sprintf@sp)^080h,w
  7569  0FFA  083B               	movwf	fsr0
  7570  0FFB  0084               	bcf	status, 7	;select IRP bank0
  7571  0FFC  1383               	clrf	indf
  7572  0FFD  0180               	goto	l499
  7573  0FFE  2FFF               	line	1559
  7574                           	
  7575                           l3054:	
  7576  0FFF                     	line	1560
  7577                           ;/opt/microchip/xc8/v2.00/pic/sources/c90/common/doprnt.c: 1559:  return 0;;	Return valu
                                 e of _sprintf is never used
  7578                           	
  7579                           l499:	
  7580  0FFF                     	return
  7581  0FFF  0008               	opt stack 0
  7582                           GLOBAL	__end_of_sprintf
  7583                           	__end_of_sprintf:
  7584  1000                     	signat	_sprintf,4698
  7585                           	global	___lwmod
  7586                           
  7587 ;; *************** function ___lwmod *****************
  7588 ;; Defined at:
  7589 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  7590 ;; Parameters:    Size  Location     Type
  7591 ;;  divisor         2    8[BANK1 ] unsigned int 
  7592 ;;  dividend        2   10[BANK1 ] unsigned int 
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  counter         1   13[BANK1 ] unsigned char 
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  2    8[BANK1 ] unsigned int 
  7597 ;; Registers used:
  7598 ;;		wreg, status,2, status,0
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7604 ;;      Params:         0       0       4       0       0
  7605 ;;      Locals:         0       0       1       0       0
  7606 ;;      Temps:          0       0       1       0       0
  7607 ;;      Totals:         0       0       6       0       0
  7608 ;;Total ram usage:        6 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:    5
  7611 ;; This function calls:
  7612 ;;		Nothing
  7613 ;; This function is called by:
  7614 ;;		_sprintf
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  7618                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  7619                           	line	5
  7620                           global __ptext16
  7621                           __ptext16:	;psect for function ___lwmod
  7622  14EC                     psect	text16
  7623                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwmod.c"
  7624                           	line	5
  7625                           	global	__size_of___lwmod
  7626                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  7627  0043                     	
  7628                           ___lwmod:	
  7629  14EC                     ;incstack = 0
  7630 ;; hardware stack exceeded
  7631                           	opt	stack 0
  7632                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7633                           	line	12
  7634                           	
  7635                           l2442:	
  7636  14EC                     	bsf	status, 5	;RP0=1, select bank1
  7637  14EC  1683               	bcf	status, 6	;RP1=0, select bank1
  7638  14ED  1303               	movf	((___lwmod@divisor)^080h),w
  7639  14EE  0828               iorwf	((___lwmod@divisor+1)^080h),w
  7640  14EF  0429               	btfsc	status,2
  7641  14F0  1903               	goto	u2601
  7642  14F1  2CF3               	goto	u2600
  7643  14F2  2CF4               u2601:
  7644  14F3                     	goto	l2460
  7645  14F3  2D29               u2600:
  7646  14F4                     	line	13
  7647                           	
  7648                           l2444:	
  7649  14F4                     	clrf	(___lwmod@counter)^080h
  7650  14F4  01AD               	incf	(___lwmod@counter)^080h,f
  7651  14F5  0AAD               	line	14
  7652                           	goto	l2450
  7653  14F6  2D03               	
  7654                           l780:	
  7655  14F7                     	line	15
  7656                           	
  7657                           l2446:	
  7658  14F7                     	movlw	01h
  7659  14F7  3001               	
  7660                           u2615:
  7661  14F8                     	clrc
  7662  14F8  1003               	rlf	(___lwmod@divisor)^080h,f
  7663  14F9  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  7664  14FA  0DA9               	addlw	-1
  7665  14FB  3EFF               	skipz
  7666  14FC  1D03               	goto	u2615
  7667  14FD  2CF8               	line	16
  7668                           	
  7669                           l2448:	
  7670  14FE                     	movlw	low(01h)
  7671  14FE  3001               	movwf	(??___lwmod+0)^080h+0
  7672  14FF  00AC               	movf	(??___lwmod+0)^080h+0,w
  7673  1500  082C               	addwf	(___lwmod@counter)^080h,f
  7674  1501  07AD               	goto	l2450
  7675  1502  2D03               	line	17
  7676                           	
  7677                           l779:	
  7678  1503                     	line	14
  7679                           	
  7680                           l2450:	
  7681  1503                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  7682  1503  1FA9               	goto	u2621
  7683  1504  2D06               	goto	u2620
  7684  1505  2D07               u2621:
  7685  1506                     	goto	l2446
  7686  1506  2CF7               u2620:
  7687  1507                     	goto	l2452
  7688  1507  2D09               	
  7689                           l781:	
  7690  1508                     	goto	l2452
  7691  1508  2D09               	line	18
  7692                           	
  7693                           l782:	
  7694  1509                     	line	19
  7695                           	
  7696                           l2452:	
  7697  1509                     	movf	(___lwmod@divisor+1)^080h,w
  7698  1509  0829               	subwf	(___lwmod@dividend+1)^080h,w
  7699  150A  022B               	skipz
  7700  150B  1D03               	goto	u2635
  7701  150C  2D0F               	movf	(___lwmod@divisor)^080h,w
  7702  150D  0828               	subwf	(___lwmod@dividend)^080h,w
  7703  150E  022A               u2635:
  7704  150F                     	skipc
  7705  150F  1C03               	goto	u2631
  7706  1510  2D12               	goto	u2630
  7707  1511  2D13               u2631:
  7708  1512                     	goto	l2456
  7709  1512  2D1A               u2630:
  7710  1513                     	line	20
  7711                           	
  7712                           l2454:	
  7713  1513                     	movf	(___lwmod@divisor)^080h,w
  7714  1513  0828               	subwf	(___lwmod@dividend)^080h,f
  7715  1514  02AA               	movf	(___lwmod@divisor+1)^080h,w
  7716  1515  0829               	skipc
  7717  1516  1C03               	decf	(___lwmod@dividend+1)^080h,f
  7718  1517  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  7719  1518  02AB               	goto	l2456
  7720  1519  2D1A               	
  7721                           l783:	
  7722  151A                     	line	21
  7723                           	
  7724                           l2456:	
  7725  151A                     	movlw	01h
  7726  151A  3001               	
  7727                           u2645:
  7728  151B                     	clrc
  7729  151B  1003               	rrf	(___lwmod@divisor+1)^080h,f
  7730  151C  0CA9               	rrf	(___lwmod@divisor)^080h,f
  7731  151D  0CA8               	addlw	-1
  7732  151E  3EFF               	skipz
  7733  151F  1D03               	goto	u2645
  7734  1520  2D1B               	line	22
  7735                           	
  7736                           l2458:	
  7737  1521                     	movlw	01h
  7738  1521  3001               	subwf	(___lwmod@counter)^080h,f
  7739  1522  02AD               	btfss	status,2
  7740  1523  1D03               	goto	u2651
  7741  1524  2D26               	goto	u2650
  7742  1525  2D27               u2651:
  7743  1526                     	goto	l2452
  7744  1526  2D09               u2650:
  7745  1527                     	goto	l2460
  7746  1527  2D29               	
  7747                           l784:	
  7748  1528                     	goto	l2460
  7749  1528  2D29               	line	23
  7750                           	
  7751                           l778:	
  7752  1529                     	line	24
  7753                           	
  7754                           l2460:	
  7755  1529                     	movf	(___lwmod@dividend+1)^080h,w
  7756  1529  082B               	movwf	(?___lwmod+1)^080h
  7757  152A  00A9               	movf	(___lwmod@dividend)^080h,w
  7758  152B  082A               	movwf	(?___lwmod)^080h
  7759  152C  00A8               	goto	l785
  7760  152D  2D2E               	
  7761                           l2462:	
  7762  152E                     	line	25
  7763                           	
  7764                           l785:	
  7765  152E                     	return
  7766  152E  0008               	opt stack 0
  7767                           GLOBAL	__end_of___lwmod
  7768                           	__end_of___lwmod:
  7769  152F                     	signat	___lwmod,8314
  7770                           	global	___lwdiv
  7771                           
  7772 ;; *************** function ___lwdiv *****************
  7773 ;; Defined at:
  7774 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  divisor         2    0[BANK1 ] unsigned int 
  7777 ;;  dividend        2    2[BANK1 ] unsigned int 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  quotient        2    5[BANK1 ] unsigned int 
  7780 ;;  counter         1    7[BANK1 ] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  2    0[BANK1 ] unsigned int 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7790 ;;      Params:         0       0       4       0       0
  7791 ;;      Locals:         0       0       3       0       0
  7792 ;;      Temps:          0       0       1       0       0
  7793 ;;      Totals:         0       0       8       0       0
  7794 ;;Total ram usage:        8 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; Hardware stack levels required when called:    5
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_get_volume
  7801 ;;		_sprintf
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  7805                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7806                           	line	5
  7807                           global __ptext17
  7808                           __ptext17:	;psect for function ___lwdiv
  7809  15C6                     psect	text17
  7810                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
  7811                           	line	5
  7812                           	global	__size_of___lwdiv
  7813                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  7814  004D                     	
  7815                           ___lwdiv:	
  7816  15C6                     ;incstack = 0
  7817 ;; hardware stack exceeded
  7818                           	opt	stack 0
  7819                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7820                           	line	13
  7821                           	
  7822                           l2416:	
  7823  15C6                     	bsf	status, 5	;RP0=1, select bank1
  7824  15C6  1683               	bcf	status, 6	;RP1=0, select bank1
  7825  15C7  1303               	clrf	(___lwdiv@quotient)^080h
  7826  15C8  01A5               	clrf	(___lwdiv@quotient+1)^080h
  7827  15C9  01A6               	line	14
  7828                           	
  7829                           l2418:	
  7830  15CA                     	movf	((___lwdiv@divisor)^080h),w
  7831  15CA  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  7832  15CB  0421               	btfsc	status,2
  7833  15CC  1903               	goto	u2531
  7834  15CD  2DCF               	goto	u2530
  7835  15CE  2DD0               u2531:
  7836  15CF                     	goto	l2438
  7837  15CF  2E0D               u2530:
  7838  15D0                     	line	15
  7839                           	
  7840                           l2420:	
  7841  15D0                     	clrf	(___lwdiv@counter)^080h
  7842  15D0  01A7               	incf	(___lwdiv@counter)^080h,f
  7843  15D1  0AA7               	line	16
  7844                           	goto	l2426
  7845  15D2  2DDF               	
  7846                           l770:	
  7847  15D3                     	line	17
  7848                           	
  7849                           l2422:	
  7850  15D3                     	movlw	01h
  7851  15D3  3001               	
  7852                           u2545:
  7853  15D4                     	clrc
  7854  15D4  1003               	rlf	(___lwdiv@divisor)^080h,f
  7855  15D5  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  7856  15D6  0DA1               	addlw	-1
  7857  15D7  3EFF               	skipz
  7858  15D8  1D03               	goto	u2545
  7859  15D9  2DD4               	line	18
  7860                           	
  7861                           l2424:	
  7862  15DA                     	movlw	low(01h)
  7863  15DA  3001               	movwf	(??___lwdiv+0)^080h+0
  7864  15DB  00A4               	movf	(??___lwdiv+0)^080h+0,w
  7865  15DC  0824               	addwf	(___lwdiv@counter)^080h,f
  7866  15DD  07A7               	goto	l2426
  7867  15DE  2DDF               	line	19
  7868                           	
  7869                           l769:	
  7870  15DF                     	line	16
  7871                           	
  7872                           l2426:	
  7873  15DF                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  7874  15DF  1FA1               	goto	u2551
  7875  15E0  2DE2               	goto	u2550
  7876  15E1  2DE3               u2551:
  7877  15E2                     	goto	l2422
  7878  15E2  2DD3               u2550:
  7879  15E3                     	goto	l2428
  7880  15E3  2DE5               	
  7881                           l771:	
  7882  15E4                     	goto	l2428
  7883  15E4  2DE5               	line	20
  7884                           	
  7885                           l772:	
  7886  15E5                     	line	21
  7887                           	
  7888                           l2428:	
  7889  15E5                     	movlw	01h
  7890  15E5  3001               	
  7891                           u2565:
  7892  15E6                     	clrc
  7893  15E6  1003               	rlf	(___lwdiv@quotient)^080h,f
  7894  15E7  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  7895  15E8  0DA6               	addlw	-1
  7896  15E9  3EFF               	skipz
  7897  15EA  1D03               	goto	u2565
  7898  15EB  2DE6               	line	22
  7899                           	movf	(___lwdiv@divisor+1)^080h,w
  7900  15EC  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  7901  15ED  0223               	skipz
  7902  15EE  1D03               	goto	u2575
  7903  15EF  2DF2               	movf	(___lwdiv@divisor)^080h,w
  7904  15F0  0820               	subwf	(___lwdiv@dividend)^080h,w
  7905  15F1  0222               u2575:
  7906  15F2                     	skipc
  7907  15F2  1C03               	goto	u2571
  7908  15F3  2DF5               	goto	u2570
  7909  15F4  2DF6               u2571:
  7910  15F5                     	goto	l2434
  7911  15F5  2DFE               u2570:
  7912  15F6                     	line	23
  7913                           	
  7914                           l2430:	
  7915  15F6                     	movf	(___lwdiv@divisor)^080h,w
  7916  15F6  0820               	subwf	(___lwdiv@dividend)^080h,f
  7917  15F7  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  7918  15F8  0821               	skipc
  7919  15F9  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  7920  15FA  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  7921  15FB  02A3               	line	24
  7922                           	
  7923                           l2432:	
  7924  15FC                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  7925  15FC  1425               	goto	l2434
  7926  15FD  2DFE               	line	25
  7927                           	
  7928                           l773:	
  7929  15FE                     	line	26
  7930                           	
  7931                           l2434:	
  7932  15FE                     	movlw	01h
  7933  15FE  3001               	
  7934                           u2585:
  7935  15FF                     	clrc
  7936  15FF  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  7937  1600  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  7938  1601  0CA0               	addlw	-1
  7939  1602  3EFF               	skipz
  7940  1603  1D03               	goto	u2585
  7941  1604  2DFF               	line	27
  7942                           	
  7943                           l2436:	
  7944  1605                     	movlw	01h
  7945  1605  3001               	subwf	(___lwdiv@counter)^080h,f
  7946  1606  02A7               	btfss	status,2
  7947  1607  1D03               	goto	u2591
  7948  1608  2E0A               	goto	u2590
  7949  1609  2E0B               u2591:
  7950  160A                     	goto	l2428
  7951  160A  2DE5               u2590:
  7952  160B                     	goto	l2438
  7953  160B  2E0D               	
  7954                           l774:	
  7955  160C                     	goto	l2438
  7956  160C  2E0D               	line	28
  7957                           	
  7958                           l768:	
  7959  160D                     	line	29
  7960                           	
  7961                           l2438:	
  7962  160D                     	movf	(___lwdiv@quotient+1)^080h,w
  7963  160D  0826               	movwf	(?___lwdiv+1)^080h
  7964  160E  00A1               	movf	(___lwdiv@quotient)^080h,w
  7965  160F  0825               	movwf	(?___lwdiv)^080h
  7966  1610  00A0               	goto	l775
  7967  1611  2E12               	
  7968                           l2440:	
  7969  1612                     	line	30
  7970                           	
  7971                           l775:	
  7972  1612                     	return
  7973  1612  0008               	opt stack 0
  7974                           GLOBAL	__end_of___lwdiv
  7975                           	__end_of___lwdiv:
  7976  1613                     	signat	___lwdiv,8314
  7977                           	global	_display_write_start
  7978                           
  7979 ;; *************** function _display_write_start *****************
  7980 ;; Defined at:
  7981 ;;		line 170 in file "Display.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7995 ;;      Params:         0       0       0       0       0
  7996 ;;      Locals:         0       0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0
  7998 ;;      Totals:         0       0       0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:    5
  8002 ;; This function calls:
  8003 ;;		Nothing
  8004 ;; This function is called by:
  8005 ;;		_update_input
  8006 ;;		_update_volume
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  8010                           	file	"Display.c"
  8011                           	line	170
  8012                           global __ptext18
  8013                           __ptext18:	;psect for function _display_write_start
  8014  1337                     psect	text18
  8015                           	file	"Display.c"
  8016                           	line	170
  8017                           	global	__size_of_display_write_start
  8018                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  8019  000F                     	
  8020                           _display_write_start:	
  8021  1337                     ;incstack = 0
  8022                           	opt	stack 1
  8023                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  8024                           	line	172
  8025                           	
  8026                           l3186:	
  8027  1337                     ;Display.c: 172:     if (_selectedDisplay == 0) {
  8028                           	bsf	status, 5	;RP0=1, select bank1
  8029  1337  1683               	bcf	status, 6	;RP1=0, select bank1
  8030  1338  1303               	movf	((__selectedDisplay)^080h),w
  8031  1339  086F               	btfss	status,2
  8032  133A  1D03               	goto	u4201
  8033  133B  2B3D               	goto	u4200
  8034  133C  2B3E               u4201:
  8035  133D                     	goto	l170
  8036  133D  2B42               u4200:
  8037  133E                     	line	173
  8038                           	
  8039                           l3188:	
  8040  133E                     ;Display.c: 173:         PORTCbits.RC4 = 0;
  8041                           	bcf	status, 5	;RP0=0, select bank0
  8042  133E  1283               	bcf	status, 6	;RP1=0, select bank0
  8043  133F  1303               	bcf	(7),4	;volatile
  8044  1340  1207               	line	174
  8045                           ;Display.c: 174:         return;
  8046                           	goto	l171
  8047  1341  2B45               	line	175
  8048                           ;Display.c: 175:     }
  8049                           	
  8050                           l170:	
  8051  1342                     	line	177
  8052                           ;Display.c: 177:     PORTDbits.RD4 = 0;
  8053                           	bcf	status, 5	;RP0=0, select bank0
  8054  1342  1283               	bcf	status, 6	;RP1=0, select bank0
  8055  1343  1303               	bcf	(8),4	;volatile
  8056  1344  1208               	line	178
  8057                           	
  8058                           l171:	
  8059  1345                     	return
  8060  1345  0008               	opt stack 0
  8061                           GLOBAL	__end_of_display_write_start
  8062                           	__end_of_display_write_start:
  8063  1346                     	signat	_display_write_start,89
  8064                           	global	_display_write_end
  8065                           
  8066 ;; *************** function _display_write_end *****************
  8067 ;; Defined at:
  8068 ;;		line 181 in file "Display.c"
  8069 ;; Parameters:    Size  Location     Type
  8070 ;;		None
  8071 ;; Auto vars:     Size  Location     Type
  8072 ;;		None
  8073 ;; Return value:  Size  Location     Type
  8074 ;;                  1    wreg      void 
  8075 ;; Registers used:
  8076 ;;		wreg, status,2, status,0
  8077 ;; Tracked objects:
  8078 ;;		On entry : 0/0
  8079 ;;		On exit  : 0/0
  8080 ;;		Unchanged: 0/0
  8081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8082 ;;      Params:         0       0       0       0       0
  8083 ;;      Locals:         0       0       0       0       0
  8084 ;;      Temps:          0       0       0       0       0
  8085 ;;      Totals:         0       0       0       0       0
  8086 ;;Total ram usage:        0 bytes
  8087 ;; Hardware stack levels used:    1
  8088 ;; Hardware stack levels required when called:    5
  8089 ;; This function calls:
  8090 ;;		Nothing
  8091 ;; This function is called by:
  8092 ;;		_update_input
  8093 ;;		_update_volume
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  8097                           	line	181
  8098                           global __ptext19
  8099                           __ptext19:	;psect for function _display_write_end
  8100  1328                     psect	text19
  8101                           	file	"Display.c"
  8102                           	line	181
  8103                           	global	__size_of_display_write_end
  8104                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  8105  000F                     	
  8106                           _display_write_end:	
  8107  1328                     ;incstack = 0
  8108                           	opt	stack 1
  8109                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  8110                           	line	183
  8111                           	
  8112                           l3214:	
  8113  1328                     ;Display.c: 183:     if (_selectedDisplay == 0) {
  8114                           	bsf	status, 5	;RP0=1, select bank1
  8115  1328  1683               	bcf	status, 6	;RP1=0, select bank1
  8116  1329  1303               	movf	((__selectedDisplay)^080h),w
  8117  132A  086F               	btfss	status,2
  8118  132B  1D03               	goto	u4251
  8119  132C  2B2E               	goto	u4250
  8120  132D  2B2F               u4251:
  8121  132E                     	goto	l174
  8122  132E  2B33               u4250:
  8123  132F                     	line	184
  8124                           	
  8125                           l3216:	
  8126  132F                     ;Display.c: 184:         PORTCbits.RC4 = 1;
  8127                           	bcf	status, 5	;RP0=0, select bank0
  8128  132F  1283               	bcf	status, 6	;RP1=0, select bank0
  8129  1330  1303               	bsf	(7),4	;volatile
  8130  1331  1607               	line	185
  8131                           ;Display.c: 185:         return;
  8132                           	goto	l175
  8133  1332  2B36               	line	186
  8134                           ;Display.c: 186:     }
  8135                           	
  8136                           l174:	
  8137  1333                     	line	188
  8138                           ;Display.c: 188:     PORTDbits.RD4 = 1;
  8139                           	bcf	status, 5	;RP0=0, select bank0
  8140  1333  1283               	bcf	status, 6	;RP1=0, select bank0
  8141  1334  1303               	bsf	(8),4	;volatile
  8142  1335  1608               	line	189
  8143                           	
  8144                           l175:	
  8145  1336                     	return
  8146  1336  0008               	opt stack 0
  8147                           GLOBAL	__end_of_display_write_end
  8148                           	__end_of_display_write_end:
  8149  1337                     	signat	_display_write_end,89
  8150                           	global	_config
  8151                           
  8152 ;; *************** function _config *****************
  8153 ;; Defined at:
  8154 ;;		line 3 in file "Config.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;		None
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      void 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0, pclath, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8168 ;;      Params:         0       0       0       0       0
  8169 ;;      Locals:         0       0       0       0       0
  8170 ;;      Temps:          0       0       3       0       0
  8171 ;;      Totals:         0       0       3       0       0
  8172 ;;Total ram usage:        3 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    7
  8175 ;; This function calls:
  8176 ;;		_display_init
  8177 ;;		_init_adc
  8178 ;; This function is called by:
  8179 ;;		_main
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  8183                           	file	"Config.c"
  8184                           	line	3
  8185                           global __ptext20
  8186                           __ptext20:	;psect for function _config
  8187  172E                     psect	text20
  8188                           	file	"Config.c"
  8189                           	line	3
  8190                           	global	__size_of_config
  8191                           	__size_of_config	equ	__end_of_config-_config
  8192  0069                     	
  8193                           _config:	
  8194  172E                     ;incstack = 0
  8195                           	opt	stack 0
  8196                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  8197                           	line	5
  8198                           	
  8199                           l3324:	
  8200  172E                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  8201                           	bsf	status, 5	;RP0=1, select bank1
  8202  172E  1683               	bcf	status, 6	;RP1=0, select bank1
  8203  172F  1303               	movf	(143)^080h,w	;volatile
  8204  1730  080F               	andlw	not (((1<<3)-1)<<4)
  8205  1731  398F               	iorlw	(06h & ((1<<3)-1))<<4
  8206  1732  3860               	movwf	(143)^080h	;volatile
  8207  1733  008F               	line	6
  8208                           	
  8209                           l3326:	
  8210  1734                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  8211                           	bcf	(143)^080h,3	;volatile
  8212  1734  118F               	line	13
  8213                           	
  8214                           l3328:	
  8215  1735                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  8216                           	bcf	(133)^080h,0	;volatile
  8217  1735  1005               	line	14
  8218                           	
  8219                           l3330:	
  8220  1736                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  8221                           	bcf	(133)^080h,1	;volatile
  8222  1736  1085               	line	15
  8223                           	
  8224                           l3332:	
  8225  1737                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  8226                           	bcf	(133)^080h,2	;volatile
  8227  1737  1105               	line	16
  8228                           	
  8229                           l3334:	
  8230  1738                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  8231                           	bcf	(133)^080h,3	;volatile
  8232  1738  1185               	line	18
  8233                           	
  8234                           l3336:	
  8235  1739                     ;Config.c: 18:     PORTA = 0x0F;
  8236                           	movlw	low(0Fh)
  8237  1739  300F               	bcf	status, 5	;RP0=0, select bank0
  8238  173A  1283               	bcf	status, 6	;RP1=0, select bank0
  8239  173B  1303               	movwf	(5)	;volatile
  8240  173C  0085               	line	25
  8241                           	
  8242                           l3338:	
  8243  173D                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  8244                           	bsf	status, 5	;RP0=1, select bank1
  8245  173D  1683               	bcf	status, 6	;RP1=0, select bank1
  8246  173E  1303               	bsf	(134)^080h,4	;volatile
  8247  173F  1606               	line	26
  8248                           	
  8249                           l3340:	
  8250  1740                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  8251                           	bsf	(134)^080h,5	;volatile
  8252  1740  1686               	line	28
  8253                           	
  8254                           l3342:	
  8255  1741                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  8256                           	bsf	status, 5	;RP0=1, select bank3
  8257  1741  1683               	bsf	status, 6	;RP1=1, select bank3
  8258  1742  1703               	bcf	(393)^0180h,3	;volatile
  8259  1743  1189               	line	29
  8260                           	
  8261                           l3344:	
  8262  1744                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  8263                           	bcf	(393)^0180h,5	;volatile
  8264  1744  1289               	line	35
  8265                           	
  8266                           l3346:	
  8267  1745                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  8268                           	bsf	status, 5	;RP0=1, select bank1
  8269  1745  1683               	bcf	status, 6	;RP1=0, select bank1
  8270  1746  1303               	bsf	(137)^080h,2	;volatile
  8271  1747  1509               	line	36
  8272                           	
  8273                           l3348:	
  8274  1748                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  8275                           	bsf	status, 5	;RP0=1, select bank3
  8276  1748  1683               	bsf	status, 6	;RP1=1, select bank3
  8277  1749  1703               	bsf	(392)^0180h,7	;volatile
  8278  174A  1788               	line	41
  8279                           	
  8280                           l3350:	
  8281  174B                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  8282                           	bsf	status, 5	;RP0=1, select bank1
  8283  174B  1683               	bcf	status, 6	;RP1=0, select bank1
  8284  174C  1303               	bsf	(134)^080h,0	;volatile
  8285  174D  1406               	line	42
  8286                           	
  8287                           l3352:	
  8288  174E                     ;Config.c: 42:     ANSELHbits.ANS12 = 0;
  8289                           	bsf	status, 5	;RP0=1, select bank3
  8290  174E  1683               	bsf	status, 6	;RP1=1, select bank3
  8291  174F  1703               	bcf	(393)^0180h,4	;volatile
  8292  1750  1209               	line	48
  8293                           	
  8294                           l3354:	
  8295  1751                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  8296                           	bsf	status, 5	;RP0=1, select bank1
  8297  1751  1683               	bcf	status, 6	;RP1=0, select bank1
  8298  1752  1303               	bcf	(135)^080h,0	;volatile
  8299  1753  1007               	line	49
  8300                           	
  8301                           l3356:	
  8302  1754                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  8303                           	bcf	(135)^080h,1	;volatile
  8304  1754  1087               	line	51
  8305                           	
  8306                           l3358:	
  8307  1755                     ;Config.c: 51:     PORTC = 0x00;
  8308                           	bcf	status, 5	;RP0=0, select bank0
  8309  1755  1283               	bcf	status, 6	;RP1=0, select bank0
  8310  1756  1303               	clrf	(7)	;volatile
  8311  1757  0187               	line	57
  8312                           	
  8313                           l3360:	
  8314  1758                     ;Config.c: 57:     display_init();
  8315                           	fcall	_display_init
  8316  1758  160A  118A  2613  160A  118A  	line	60
  8317                           	
  8318                           l3362:	
  8319  175D                     ;Config.c: 60:     init_adc();
  8320                           	fcall	_init_adc
  8321  175D  120A  158A  2009  160A  118A  	line	67
  8322                           	
  8323                           l3364:	
  8324  1762                     ;Config.c: 67:     IOCBbits.IOCB0 = 1;
  8325                           	bsf	status, 5	;RP0=1, select bank1
  8326  1762  1683               	bcf	status, 6	;RP1=0, select bank1
  8327  1763  1303               	bsf	(150)^080h,0	;volatile
  8328  1764  1416               	line	68
  8329                           	
  8330                           l3366:	
  8331  1765                     ;Config.c: 68:     IOCBbits.IOCB4 = 1;
  8332                           	bsf	(150)^080h,4	;volatile
  8333  1765  1616               	line	69
  8334                           	
  8335                           l3368:	
  8336  1766                     ;Config.c: 69:     IOCBbits.IOCB5 = 1;
  8337                           	bsf	(150)^080h,5	;volatile
  8338  1766  1696               	line	71
  8339                           	
  8340                           l3370:	
  8341  1767                     ;Config.c: 71:     INTCONbits.PEIE = 1;
  8342                           	bsf	(11),6	;volatile
  8343  1767  170B               	line	72
  8344                           	
  8345                           l3372:	
  8346  1768                     ;Config.c: 72:     INTCONbits.RBIE = 1;
  8347                           	bsf	(11),3	;volatile
  8348  1768  158B               	line	74
  8349                           	
  8350                           l3374:	
  8351  1769                     ;Config.c: 74:     INTCONbits.GIE = 1;
  8352                           	bsf	(11),7	;volatile
  8353  1769  178B               	line	83
  8354                           	
  8355                           l3376:	
  8356  176A                     ;Config.c: 83:     _inputUpdateRequired = 1;
  8357                           	bcf	status, 5	;RP0=0, select bank0
  8358  176A  1283               	bcf	status, 6	;RP1=0, select bank0
  8359  176B  1303               	clrf	(__inputUpdateRequired)
  8360  176C  01ED               	incf	(__inputUpdateRequired),f
  8361  176D  0AED               	line	84
  8362                           	
  8363                           l3378:	
  8364  176E                     ;Config.c: 84:     _selectedInput = 0;
  8365                           	bsf	status, 5	;RP0=1, select bank1
  8366  176E  1683               	bcf	status, 6	;RP1=0, select bank1
  8367  176F  1303               	clrf	(__selectedInput)^080h
  8368  1770  01ED               	clrf	(__selectedInput+1)^080h
  8369  1771  01EE               	line	85
  8370                           	
  8371                           l3380:	
  8372  1772                     ;Config.c: 85:     _lastA = PORTBbits.RB4;
  8373                           	bcf	status, 5	;RP0=0, select bank0
  8374  1772  1283               	bcf	status, 6	;RP1=0, select bank0
  8375  1773  1303               	swapf	(6),w	;volatile
  8376  1774  0E06               	andlw	(1<<1)-1
  8377  1775  3901               	bsf	status, 5	;RP0=1, select bank1
  8378  1776  1683               	bcf	status, 6	;RP1=0, select bank1
  8379  1777  1303               	movwf	(??_config+0)^080h+0
  8380  1778  00A1               	clrf	(??_config+0)^080h+0+1
  8381  1779  01A2               	movf	0+(??_config+0)^080h+0,w
  8382  177A  0821               	bcf	status, 5	;RP0=0, select bank0
  8383  177B  1283               	bcf	status, 6	;RP1=0, select bank0
  8384  177C  1303               	movwf	(__lastA)
  8385  177D  00EA               	bsf	status, 5	;RP0=1, select bank1
  8386  177E  1683               	bcf	status, 6	;RP1=0, select bank1
  8387  177F  1303               	movf	1+(??_config+0)^080h+0,w
  8388  1780  0822               	bcf	status, 5	;RP0=0, select bank0
  8389  1781  1283               	bcf	status, 6	;RP1=0, select bank0
  8390  1782  1303               	movwf	(__lastA+1)
  8391  1783  00EB               	line	86
  8392                           	
  8393                           l3382:	
  8394  1784                     ;Config.c: 86:     _lastB = PORTBbits.RB5;
  8395                           	swapf	(6),w	;volatile
  8396  1784  0E06               	bsf	status, 5	;RP0=1, select bank1
  8397  1785  1683               	bcf	status, 6	;RP1=0, select bank1
  8398  1786  1303               	movwf	(??_config+0)^080h+0
  8399  1787  00A1               	rrf	(??_config+0)^080h+0,w
  8400  1788  0C21               	andlw	(1<<1)-1
  8401  1789  3901               	movwf	(??_config+1)^080h+0
  8402  178A  00A2               	clrf	(??_config+1)^080h+0+1
  8403  178B  01A3               	movf	0+(??_config+1)^080h+0,w
  8404  178C  0822               	bcf	status, 5	;RP0=0, select bank0
  8405  178D  1283               	bcf	status, 6	;RP1=0, select bank0
  8406  178E  1303               	movwf	(__lastB)
  8407  178F  00E8               	bsf	status, 5	;RP0=1, select bank1
  8408  1790  1683               	bcf	status, 6	;RP1=0, select bank1
  8409  1791  1303               	movf	1+(??_config+1)^080h+0,w
  8410  1792  0823               	bcf	status, 5	;RP0=0, select bank0
  8411  1793  1283               	bcf	status, 6	;RP1=0, select bank0
  8412  1794  1303               	movwf	(__lastB+1)
  8413  1795  00E9               	line	87
  8414                           	
  8415                           l276:	
  8416  1796                     	return
  8417  1796  0008               	opt stack 0
  8418                           GLOBAL	__end_of_config
  8419                           	__end_of_config:
  8420  1797                     	signat	_config,89
  8421                           	global	_init_adc
  8422                           
  8423 ;; *************** function _init_adc *****************
  8424 ;; Defined at:
  8425 ;;		line 3 in file "Volume.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;		None
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;		None
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      void 
  8432 ;; Registers used:
  8433 ;;		wreg, status,2, status,0
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8439 ;;      Params:         0       0       0       0       0
  8440 ;;      Locals:         0       0       0       0       0
  8441 ;;      Temps:          0       0       0       0       0
  8442 ;;      Totals:         0       0       0       0       0
  8443 ;;Total ram usage:        0 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:    5
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_config
  8450 ;; This function uses a non-reentrant model
  8451 ;;
  8452                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  8453                           	file	"Volume.c"
  8454                           	line	3
  8455                           global __ptext21
  8456                           __ptext21:	;psect for function _init_adc
  8457  0809                     psect	text21
  8458                           	file	"Volume.c"
  8459                           	line	3
  8460                           	global	__size_of_init_adc
  8461                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  8462  0017                     	
  8463                           _init_adc:	
  8464  0809                     ;incstack = 0
  8465                           	opt	stack 1
  8466                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  8467                           	line	5
  8468                           	
  8469                           l3218:	
  8470  0809                     ;Volume.c: 5:     ADCON0bits.CHS = 0b0111;
  8471                           	bcf	status, 5	;RP0=0, select bank0
  8472  0809  1283               	bcf	status, 6	;RP1=0, select bank0
  8473  080A  1303               	movf	(31),w	;volatile
  8474  080B  081F               	andlw	not (((1<<4)-1)<<2)
  8475  080C  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  8476  080D  381C               	movwf	(31)	;volatile
  8477  080E  009F               	line	6
  8478                           ;Volume.c: 6:     ADCON0bits.ADCS = 0b001;
  8479                           	movf	(31),w	;volatile
  8480  080F  081F               	andlw	not (((1<<2)-1)<<6)
  8481  0810  393F               	iorlw	(01h & ((1<<2)-1))<<6
  8482  0811  3840               	movwf	(31)	;volatile
  8483  0812  009F               	line	7
  8484                           	
  8485                           l3220:	
  8486  0813                     ;Volume.c: 7:     ADCON1bits.ADFM = 1;
  8487                           	bsf	status, 5	;RP0=1, select bank1
  8488  0813  1683               	bcf	status, 6	;RP1=0, select bank1
  8489  0814  1303               	bsf	(159)^080h,7	;volatile
  8490  0815  179F               	line	9
  8491                           	
  8492                           l3222:	
  8493  0816                     ;Volume.c: 9:     PIR1bits.ADIF = 0;
  8494                           	bcf	status, 5	;RP0=0, select bank0
  8495  0816  1283               	bcf	status, 6	;RP1=0, select bank0
  8496  0817  1303               	bcf	(12),6	;volatile
  8497  0818  130C               	line	10
  8498                           	
  8499                           l3224:	
  8500  0819                     ;Volume.c: 10:     PIE1bits.ADIE = 1;
  8501                           	bsf	status, 5	;RP0=1, select bank1
  8502  0819  1683               	bcf	status, 6	;RP1=0, select bank1
  8503  081A  1303               	bsf	(140)^080h,6	;volatile
  8504  081B  170C               	line	12
  8505                           	
  8506                           l3226:	
  8507  081C                     ;Volume.c: 12:     ADCON0bits.ADON = 1;
  8508                           	bcf	status, 5	;RP0=0, select bank0
  8509  081C  1283               	bcf	status, 6	;RP1=0, select bank0
  8510  081D  1303               	bsf	(31),0	;volatile
  8511  081E  141F               	line	13
  8512                           	
  8513                           l317:	
  8514  081F                     	return
  8515  081F  0008               	opt stack 0
  8516                           GLOBAL	__end_of_init_adc
  8517                           	__end_of_init_adc:
  8518  0820                     	signat	_init_adc,89
  8519                           	global	_display_init
  8520                           
  8521 ;; *************** function _display_init *****************
  8522 ;; Defined at:
  8523 ;;		line 3 in file "Display.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;		None
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  1    wreg      void 
  8530 ;; Registers used:
  8531 ;;		wreg, status,2, status,0, pclath, cstack
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8537 ;;      Params:         0       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0
  8540 ;;      Totals:         0       0       0       0       0
  8541 ;;Total ram usage:        0 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; Hardware stack levels required when called:    6
  8544 ;; This function calls:
  8545 ;;		_spiWrite
  8546 ;; This function is called by:
  8547 ;;		_config
  8548 ;; This function uses a non-reentrant model
  8549 ;;
  8550                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8551                           	file	"Display.c"
  8552                           	line	3
  8553                           global __ptext22
  8554                           __ptext22:	;psect for function _display_init
  8555  1613                     psect	text22
  8556                           	file	"Display.c"
  8557                           	line	3
  8558                           	global	__size_of_display_init
  8559                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  8560  0050                     	
  8561                           _display_init:	
  8562  1613                     ;incstack = 0
  8563                           	opt	stack 0
  8564                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  8565                           	line	7
  8566                           	
  8567                           l3122:	
  8568  1613                     ;Display.c: 7:     SSPCON = 0b00100000;
  8569                           	movlw	low(020h)
  8570  1613  3020               	bcf	status, 5	;RP0=0, select bank0
  8571  1614  1283               	bcf	status, 6	;RP1=0, select bank0
  8572  1615  1303               	movwf	(20)	;volatile
  8573  1616  0094               	line	8
  8574                           ;Display.c: 8:     SSPSTAT = 0b01000000;
  8575                           	movlw	low(040h)
  8576  1617  3040               	bsf	status, 5	;RP0=1, select bank1
  8577  1618  1683               	bcf	status, 6	;RP1=0, select bank1
  8578  1619  1303               	movwf	(148)^080h	;volatile
  8579  161A  0094               	line	11
  8580                           	
  8581                           l3124:	
  8582  161B                     ;Display.c: 11:     TRISD = 0x00;
  8583                           	clrf	(136)^080h	;volatile
  8584  161B  0188               	line	12
  8585                           	
  8586                           l3126:	
  8587  161C                     ;Display.c: 12:     TRISC = 0x00;
  8588                           	clrf	(135)^080h	;volatile
  8589  161C  0187               	line	15
  8590                           	
  8591                           l3128:	
  8592  161D                     ;Display.c: 15:     PORTDbits.RD2 = 1;
  8593                           	bcf	status, 5	;RP0=0, select bank0
  8594  161D  1283               	bcf	status, 6	;RP1=0, select bank0
  8595  161E  1303               	bsf	(8),2	;volatile
  8596  161F  1508               	line	16
  8597                           	
  8598                           l3130:	
  8599  1620                     ;Display.c: 16:     PORTDbits.RD6 = 0;
  8600                           	bcf	(8),6	;volatile
  8601  1620  1308               	line	17
  8602                           	
  8603                           l3132:	
  8604  1621                     ;Display.c: 17:     PORTDbits.RD4 = 1;
  8605                           	bsf	(8),4	;volatile
  8606  1621  1608               	line	18
  8607                           	
  8608                           l3134:	
  8609  1622                     ;Display.c: 18:     PORTCbits.RC3 = 0;
  8610                           	bcf	(7),3	;volatile
  8611  1622  1187               	line	21
  8612                           	
  8613                           l3136:	
  8614  1623                     ;Display.c: 21:     PORTDbits.RD7 = 1;
  8615                           	bsf	(8),7	;volatile
  8616  1623  1788               	line	22
  8617                           	
  8618                           l3138:	
  8619  1624                     ;Display.c: 22:     PORTDbits.RD4 = 0;
  8620                           	bcf	(8),4	;volatile
  8621  1624  1208               	line	23
  8622                           	
  8623                           l3140:	
  8624  1625                     ;Display.c: 23:     spiWrite(0b01001111);
  8625                           	movlw	low(04Fh)
  8626  1625  304F               	fcall	_spiWrite
  8627  1626  160A  118A  2346  160A  118A  	line	24
  8628                           	
  8629                           l3142:	
  8630  162B                     ;Display.c: 24:     PORTDbits.RD4 = 1;
  8631                           	bcf	status, 5	;RP0=0, select bank0
  8632  162B  1283               	bcf	status, 6	;RP1=0, select bank0
  8633  162C  1303               	bsf	(8),4	;volatile
  8634  162D  1608               	line	27
  8635                           	
  8636                           l3144:	
  8637  162E                     ;Display.c: 27:     PORTDbits.RD7 = 1;
  8638                           	bsf	(8),7	;volatile
  8639  162E  1788               	line	28
  8640                           	
  8641                           l3146:	
  8642  162F                     ;Display.c: 28:     PORTDbits.RD4 = 0;
  8643                           	bcf	(8),4	;volatile
  8644  162F  1208               	line	29
  8645                           	
  8646                           l3148:	
  8647  1630                     ;Display.c: 29:     spiWrite(0b10000011);
  8648                           	movlw	low(083h)
  8649  1630  3083               	fcall	_spiWrite
  8650  1631  160A  118A  2346  160A  118A  	line	30
  8651                           	
  8652                           l3150:	
  8653  1636                     ;Display.c: 30:     PORTDbits.RD4 = 1;
  8654                           	bcf	status, 5	;RP0=0, select bank0
  8655  1636  1283               	bcf	status, 6	;RP1=0, select bank0
  8656  1637  1303               	bsf	(8),4	;volatile
  8657  1638  1608               	line	34
  8658                           	
  8659                           l3152:	
  8660  1639                     ;Display.c: 34:     PORTDbits.RD7 = 0;
  8661                           	bcf	(8),7	;volatile
  8662  1639  1388               	line	38
  8663                           	
  8664                           l3154:	
  8665  163A                     ;Display.c: 38:     PORTCbits.RC2 = 1;
  8666                           	bsf	(7),2	;volatile
  8667  163A  1507               	line	39
  8668                           	
  8669                           l3156:	
  8670  163B                     ;Display.c: 39:     PORTCbits.RC6 = 0;
  8671                           	bcf	(7),6	;volatile
  8672  163B  1307               	line	40
  8673                           	
  8674                           l3158:	
  8675  163C                     ;Display.c: 40:     PORTCbits.RC4 = 1;
  8676                           	bsf	(7),4	;volatile
  8677  163C  1607               	line	41
  8678                           	
  8679                           l3160:	
  8680  163D                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  8681                           	bcf	(7),3	;volatile
  8682  163D  1187               	line	43
  8683                           	
  8684                           l3162:	
  8685  163E                     ;Display.c: 43:     PORTCbits.RC7 = 1;
  8686                           	bsf	(7),7	;volatile
  8687  163E  1787               	line	44
  8688                           	
  8689                           l3164:	
  8690  163F                     ;Display.c: 44:     PORTCbits.RC4 = 0;
  8691                           	bcf	(7),4	;volatile
  8692  163F  1207               	line	45
  8693                           	
  8694                           l3166:	
  8695  1640                     ;Display.c: 45:     spiWrite(0b01001111);
  8696                           	movlw	low(04Fh)
  8697  1640  304F               	fcall	_spiWrite
  8698  1641  160A  118A  2346  160A  118A  	line	47
  8699                           	
  8700                           l3168:	
  8701  1646                     ;Display.c: 47:     PORTCbits.RC4 = 1;
  8702                           	bcf	status, 5	;RP0=0, select bank0
  8703  1646  1283               	bcf	status, 6	;RP1=0, select bank0
  8704  1647  1303               	bsf	(7),4	;volatile
  8705  1648  1607               	line	49
  8706                           	
  8707                           l3170:	
  8708  1649                     ;Display.c: 49:     PORTCbits.RC7 = 1;
  8709                           	bsf	(7),7	;volatile
  8710  1649  1787               	line	50
  8711                           	
  8712                           l3172:	
  8713  164A                     ;Display.c: 50:     PORTCbits.RC4 = 0;
  8714                           	bcf	(7),4	;volatile
  8715  164A  1207               	line	52
  8716                           	
  8717                           l3174:	
  8718  164B                     ;Display.c: 52:     spiWrite(0b10000011);
  8719                           	movlw	low(083h)
  8720  164B  3083               	fcall	_spiWrite
  8721  164C  160A  118A  2346  160A  118A  	line	53
  8722                           	
  8723                           l3176:	
  8724  1651                     ;Display.c: 53:     PORTCbits.RC4 = 1;
  8725                           	bcf	status, 5	;RP0=0, select bank0
  8726  1651  1283               	bcf	status, 6	;RP1=0, select bank0
  8727  1652  1303               	bsf	(7),4	;volatile
  8728  1653  1607               	line	56
  8729                           	
  8730                           l3178:	
  8731  1654                     ;Display.c: 56:     PORTCbits.RC7 = 0;
  8732                           	bcf	(7),7	;volatile
  8733  1654  1387               	line	59
  8734                           	
  8735                           l3180:	
  8736  1655                     ;Display.c: 59:     _selectedDisplay = 0;
  8737                           	bsf	status, 5	;RP0=1, select bank1
  8738  1655  1683               	bcf	status, 6	;RP1=0, select bank1
  8739  1656  1303               	clrf	(__selectedDisplay)^080h
  8740  1657  01EF               	line	60
  8741                           	
  8742                           l3182:	
  8743  1658                     ;Display.c: 60:     lastVolume = 99;
  8744                           	movlw	063h
  8745  1658  3063               	bcf	status, 5	;RP0=0, select bank0
  8746  1659  1283               	bcf	status, 6	;RP1=0, select bank0
  8747  165A  1303               	movwf	(_lastVolume)
  8748  165B  00E6               	movlw	0
  8749  165C  3000               	movwf	((_lastVolume))+1
  8750  165D  00E7               	line	61
  8751                           	
  8752                           l3184:	
  8753  165E                     ;Display.c: 61:     lastInput = 99;
  8754                           	movlw	063h
  8755  165E  3063               	movwf	(_lastInput)
  8756  165F  00E4               	movlw	0
  8757  1660  3000               	movwf	((_lastInput))+1
  8758  1661  00E5               	line	63
  8759                           	
  8760                           l126:	
  8761  1662                     	return
  8762  1662  0008               	opt stack 0
  8763                           GLOBAL	__end_of_display_init
  8764                           	__end_of_display_init:
  8765  1663                     	signat	_display_init,89
  8766                           	global	_spiWrite
  8767                           
  8768 ;; *************** function _spiWrite *****************
  8769 ;; Defined at:
  8770 ;;		line 192 in file "Display.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;  data            1    wreg     unsigned char 
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;  data            1    0[BANK1 ] unsigned char 
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  1    wreg      void 
  8777 ;; Registers used:
  8778 ;;		wreg
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8784 ;;      Params:         0       0       0       0       0
  8785 ;;      Locals:         0       0       1       0       0
  8786 ;;      Temps:          0       0       0       0       0
  8787 ;;      Totals:         0       0       1       0       0
  8788 ;;Total ram usage:        1 bytes
  8789 ;; Hardware stack levels used:    1
  8790 ;; Hardware stack levels required when called:    5
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		_display_init
  8795 ;;		_write_space
  8796 ;;		_write_font
  8797 ;; This function uses a non-reentrant model
  8798 ;;
  8799                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8800                           	line	192
  8801                           global __ptext23
  8802                           __ptext23:	;psect for function _spiWrite
  8803  1346                     psect	text23
  8804                           	file	"Display.c"
  8805                           	line	192
  8806                           	global	__size_of_spiWrite
  8807                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  8808  0010                     	
  8809                           _spiWrite:	
  8810  1346                     ;incstack = 0
  8811 ;; hardware stack exceeded
  8812                           	opt	stack 0
  8813                           ; Regs used in _spiWrite: [wreg]
  8814                           ;spiWrite@data stored from wreg
  8815                           	bsf	status, 5	;RP0=1, select bank1
  8816  1346  1683               	bcf	status, 6	;RP1=0, select bank1
  8817  1347  1303               	movwf	(spiWrite@data)^080h
  8818  1348  00A0               	line	194
  8819                           	
  8820                           l2328:	
  8821  1349                     ;Display.c: 192: void spiWrite(char data);Display.c: 193: {;Display.c: 194:     SSPBUF =
                                  data;
  8822                           	movf	(spiWrite@data)^080h,w
  8823  1349  0820               	bcf	status, 5	;RP0=0, select bank0
  8824  134A  1283               	bcf	status, 6	;RP1=0, select bank0
  8825  134B  1303               	movwf	(19)	;volatile
  8826  134C  0093               	line	196
  8827                           ;Display.c: 196:     while(!SSPSTATbits.BF);
  8828                           	goto	l178
  8829  134D  2B4E               	
  8830                           l179:	
  8831  134E                     	
  8832                           l178:	
  8833  134E                     	bsf	status, 5	;RP0=1, select bank1
  8834  134E  1683               	bcf	status, 6	;RP1=0, select bank1
  8835  134F  1303               	btfss	(148)^080h,0	;volatile
  8836  1350  1C14               	goto	u2301
  8837  1351  2B53               	goto	u2300
  8838  1352  2B54               u2301:
  8839  1353                     	goto	l178
  8840  1353  2B4E               u2300:
  8841  1354                     	goto	l181
  8842  1354  2B55               	
  8843                           l180:	
  8844  1355                     	line	197
  8845                           	
  8846                           l181:	
  8847  1355                     	return
  8848  1355  0008               	opt stack 0
  8849                           GLOBAL	__end_of_spiWrite
  8850                           	__end_of_spiWrite:
  8851  1356                     	signat	_spiWrite,4217
  8852                           	global	_activateSelectedRelay
  8853                           
  8854 ;; *************** function _activateSelectedRelay *****************
  8855 ;; Defined at:
  8856 ;;		line 3 in file "Input.c"
  8857 ;; Parameters:    Size  Location     Type
  8858 ;;		None
  8859 ;; Auto vars:     Size  Location     Type
  8860 ;;		None
  8861 ;; Return value:  Size  Location     Type
  8862 ;;                  1    wreg      void 
  8863 ;; Registers used:
  8864 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8865 ;; Tracked objects:
  8866 ;;		On entry : 0/0
  8867 ;;		On exit  : 0/0
  8868 ;;		Unchanged: 0/0
  8869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8870 ;;      Params:         0       0       0       0       0
  8871 ;;      Locals:         0       0       0       0       0
  8872 ;;      Temps:          0       0       0       0       0
  8873 ;;      Totals:         0       0       0       0       0
  8874 ;;Total ram usage:        0 bytes
  8875 ;; Hardware stack levels used:    1
  8876 ;; Hardware stack levels required when called:    5
  8877 ;; This function calls:
  8878 ;;		Nothing
  8879 ;; This function is called by:
  8880 ;;		_main
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8884                           	file	"Input.c"
  8885                           	line	3
  8886                           global __ptext24
  8887                           __ptext24:	;psect for function _activateSelectedRelay
  8888  1479                     psect	text24
  8889                           	file	"Input.c"
  8890                           	line	3
  8891                           	global	__size_of_activateSelectedRelay
  8892                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  8893  0039                     	
  8894                           _activateSelectedRelay:	
  8895  1479                     ;incstack = 0
  8896                           	opt	stack 2
  8897                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  8898                           	line	5
  8899                           	
  8900                           l3424:	
  8901  1479                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  8902                           	bcf	status, 5	;RP0=0, select bank0
  8903  1479  1283               	bcf	status, 6	;RP1=0, select bank0
  8904  147A  1303               	movf	((__inputUpdateRequired)),w
  8905  147B  086D               	btfss	status,2
  8906  147C  1D03               	goto	u4351
  8907  147D  2C7F               	goto	u4350
  8908  147E  2C80               u4351:
  8909  147F                     	goto	l3428
  8910  147F  2C82               u4350:
  8911  1480                     	goto	l201
  8912  1480  2CB1               	
  8913                           l3426:	
  8914  1481                     	goto	l201
  8915  1481  2CB1               	
  8916                           l200:	
  8917  1482                     	line	7
  8918                           	
  8919                           l3428:	
  8920  1482                     ;Input.c: 7:     PORTA = 0x0F;
  8921                           	movlw	low(0Fh)
  8922  1482  300F               	movwf	(5)	;volatile
  8923  1483  0085               	line	9
  8924                           ;Input.c: 9:     switch (_selectedInput) {
  8925                           	goto	l3442
  8926  1484  2C9A               	line	10
  8927                           ;Input.c: 10:         case 0:
  8928                           	
  8929                           l203:	
  8930  1485                     	line	11
  8931                           	
  8932                           l3430:	
  8933  1485                     ;Input.c: 11:             PORTA = ~0x01;
  8934                           	movlw	low(0FEh)
  8935  1485  30FE               	bcf	status, 5	;RP0=0, select bank0
  8936  1486  1283               	movwf	(5)	;volatile
  8937  1487  0085               	line	12
  8938                           ;Input.c: 12:             break;
  8939                           	goto	l3444
  8940  1488  2CAF               	line	13
  8941                           ;Input.c: 13:         case 1:
  8942                           	
  8943                           l205:	
  8944  1489                     	line	14
  8945                           	
  8946                           l3432:	
  8947  1489                     ;Input.c: 14:             PORTA = ~0x02;
  8948                           	movlw	low(0FDh)
  8949  1489  30FD               	bcf	status, 5	;RP0=0, select bank0
  8950  148A  1283               	movwf	(5)	;volatile
  8951  148B  0085               	line	15
  8952                           ;Input.c: 15:             break;
  8953                           	goto	l3444
  8954  148C  2CAF               	line	16
  8955                           ;Input.c: 16:         case 2:
  8956                           	
  8957                           l206:	
  8958  148D                     	line	17
  8959                           	
  8960                           l3434:	
  8961  148D                     ;Input.c: 17:             PORTA = ~0x04;
  8962                           	movlw	low(0FBh)
  8963  148D  30FB               	bcf	status, 5	;RP0=0, select bank0
  8964  148E  1283               	movwf	(5)	;volatile
  8965  148F  0085               	line	18
  8966                           ;Input.c: 18:             break;
  8967                           	goto	l3444
  8968  1490  2CAF               	line	19
  8969                           ;Input.c: 19:         case 3:
  8970                           	
  8971                           l207:	
  8972  1491                     	line	20
  8973                           	
  8974                           l3436:	
  8975  1491                     ;Input.c: 20:             PORTA = ~0x08;
  8976                           	movlw	low(0F7h)
  8977  1491  30F7               	bcf	status, 5	;RP0=0, select bank0
  8978  1492  1283               	movwf	(5)	;volatile
  8979  1493  0085               	line	21
  8980                           ;Input.c: 21:             break;
  8981                           	goto	l3444
  8982  1494  2CAF               	line	22
  8983                           ;Input.c: 22:         default:
  8984                           	
  8985                           l208:	
  8986  1495                     	line	23
  8987                           	
  8988                           l3438:	
  8989  1495                     ;Input.c: 23:             PORTA = ~0x01;
  8990                           	movlw	low(0FEh)
  8991  1495  30FE               	bcf	status, 5	;RP0=0, select bank0
  8992  1496  1283               	movwf	(5)	;volatile
  8993  1497  0085               	line	24
  8994                           ;Input.c: 24:             break;
  8995                           	goto	l3444
  8996  1498  2CAF               	line	25
  8997                           	
  8998                           l3440:	
  8999  1499                     ;Input.c: 25:     }
  9000                           	goto	l3444
  9001  1499  2CAF               	
  9002                           l202:	
  9003  149A                     	
  9004                           l3442:	
  9005  149A                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9006                           ; Switch size 1, requested type "space"
  9007                           ; Number of cases is 1, Range of values is 0 to 0
  9008                           ; switch strategies available:
  9009                           ; Name         Instructions Cycles
  9010                           ; simple_byte            4     3 (average)
  9011                           ; direct_byte           11     8 (fixed)
  9012                           ; jumptable            260     6 (fixed)
  9013                           ;	Chosen strategy is simple_byte
  9014                           
  9015                           	bsf	status, 5	;RP0=1, select bank1
  9016  149A  1683               	bcf	status, 6	;RP1=0, select bank1
  9017  149B  1303               	movf (__selectedInput+1)^080h,w
  9018  149C  086E               	opt asmopt_push
  9019                           	opt asmopt_off
  9020                           	xorlw	0^0	; case 0
  9021  149D  3A00               	skipnz
  9022  149E  1903               	goto	l3668
  9023  149F  2CA1               	goto	l3438
  9024  14A0  2C95               	opt asmopt_pop
  9025                           	
  9026                           l3668:	
  9027  14A1                     ; Switch size 1, requested type "space"
  9028                           ; Number of cases is 4, Range of values is 0 to 3
  9029                           ; switch strategies available:
  9030                           ; Name         Instructions Cycles
  9031                           ; simple_byte           13     7 (average)
  9032                           ; direct_byte           20     8 (fixed)
  9033                           ; jumptable            260     6 (fixed)
  9034                           ;	Chosen strategy is simple_byte
  9035                           
  9036                           	movf (__selectedInput)^080h,w
  9037  14A1  086D               	opt asmopt_push
  9038                           	opt asmopt_off
  9039                           	xorlw	0^0	; case 0
  9040  14A2  3A00               	skipnz
  9041  14A3  1903               	goto	l3430
  9042  14A4  2C85               	xorlw	1^0	; case 1
  9043  14A5  3A01               	skipnz
  9044  14A6  1903               	goto	l3432
  9045  14A7  2C89               	xorlw	2^1	; case 2
  9046  14A8  3A03               	skipnz
  9047  14A9  1903               	goto	l3434
  9048  14AA  2C8D               	xorlw	3^2	; case 3
  9049  14AB  3A01               	skipnz
  9050  14AC  1903               	goto	l3436
  9051  14AD  2C91               	goto	l3438
  9052  14AE  2C95               	opt asmopt_pop
  9053                           
  9054                           	
  9055                           l204:	
  9056  14AF                     	line	27
  9057                           	
  9058                           l3444:	
  9059  14AF                     ;Input.c: 27:     _inputUpdateRequired = 0;
  9060                           	bcf	status, 5	;RP0=0, select bank0
  9061  14AF  1283               	clrf	(__inputUpdateRequired)
  9062  14B0  01ED               	line	28
  9063                           	
  9064                           l201:	
  9065  14B1                     	return
  9066  14B1  0008               	opt stack 0
  9067                           GLOBAL	__end_of_activateSelectedRelay
  9068                           	__end_of_activateSelectedRelay:
  9069  14B2                     	signat	_activateSelectedRelay,89
  9070                           	global	_isr
  9071                           
  9072 ;; *************** function _isr *****************
  9073 ;; Defined at:
  9074 ;;		line 51 in file "main.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;		None
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;		None
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9088 ;;      Params:         0       0       0       0       0
  9089 ;;      Locals:         0       0       0       0       0
  9090 ;;      Temps:          0       4       0       0       0
  9091 ;;      Totals:         0       4       0       0       0
  9092 ;;Total ram usage:        4 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; Hardware stack levels required when called:    4
  9095 ;; This function calls:
  9096 ;;		_handle_potmeter
  9097 ;;		_handle_rotary
  9098 ;;		_start_receive
  9099 ;; This function is called by:
  9100 ;;		Interrupt level 1
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9104                           	file	"main.c"
  9105                           	line	51
  9106                           global __ptext25
  9107                           __ptext25:	;psect for function _isr
  9108  13A8                     psect	text25
  9109                           	file	"main.c"
  9110                           	line	51
  9111                           	global	__size_of_isr
  9112                           	__size_of_isr	equ	__end_of_isr-_isr
  9113  0031                     	
  9114                           _isr:	
  9115  13A8                     ;incstack = 0
  9116 ;; hardware stack exceeded
  9117                           	opt	stack 0
  9118                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9119                           psect	intentry,class=CODE,delta=2
  9120                           global __pintentry
  9121                           __pintentry:
  9122  0004                     global interrupt_function
  9123                           interrupt_function:
  9124  0004                     	global saved_w
  9125                           	saved_w	set	btemp+0
  9126  007E                     	movwf	saved_w
  9127  0004  00FE               	swapf	status,w
  9128  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  9129  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  9130  0007  1303               	movwf	(??_isr+0)
  9131  0008  00DA               	movf	fsr0,w
  9132  0009  0804               	movwf	(??_isr+1)
  9133  000A  00DB               	movf	pclath,w
  9134  000B  080A               	movwf	(??_isr+2)
  9135  000C  00DC               	movf	btemp+1,w
  9136  000D  087F               	movwf	(??_isr+3)
  9137  000E  00DD               	ljmp	_isr
  9138  000F  160A  118A  2BA8   psect	text25
  9139                           	line	53
  9140                           	
  9141                           i1l3550:	
  9142  13A8                     ;main.c: 53:     if (INTCONbits.RBIF) {
  9143                           	btfss	(11),0	;volatile
  9144  13A8  1C0B               	goto	u456_21
  9145  13A9  2BAB               	goto	u456_20
  9146  13AA  2BAC               u456_21:
  9147  13AB                     	goto	i1l3560
  9148  13AB  2BBF               u456_20:
  9149  13AC                     	line	55
  9150                           	
  9151                           i1l3552:	
  9152  13AC                     ;main.c: 55:         handle_rotary();
  9153                           	fcall	_handle_rotary
  9154  13AC  120A  158A  2178  160A  118A  	line	57
  9155                           	
  9156                           i1l3554:	
  9157  13B1                     ;main.c: 57:         if (PORTBbits.RB0 == 0) {
  9158                           	bcf	status, 5	;RP0=0, select bank0
  9159  13B1  1283               	bcf	status, 6	;RP1=0, select bank0
  9160  13B2  1303               	btfsc	(6),0	;volatile
  9161  13B3  1806               	goto	u457_21
  9162  13B4  2BB6               	goto	u457_20
  9163  13B5  2BB7               u457_21:
  9164  13B6                     	goto	i1l3558
  9165  13B6  2BBD               u457_20:
  9166  13B7                     	line	58
  9167                           	
  9168                           i1l3556:	
  9169  13B7                     ;main.c: 58:             start_receive();
  9170                           	fcall	_start_receive
  9171  13B7  120A  158A  2020  160A  118A  	goto	i1l3558
  9172  13BC  2BBD               	line	59
  9173                           ;main.c: 59:         }
  9174                           	
  9175                           i1l67:	
  9176  13BD                     	line	61
  9177                           	
  9178                           i1l3558:	
  9179  13BD                     ;main.c: 61:         INTCONbits.RBIF = 0;
  9180                           	bcf	(11),0	;volatile
  9181  13BD  100B               	goto	i1l3560
  9182  13BE  2BBF               	line	62
  9183                           ;main.c: 62:     }
  9184                           	
  9185                           i1l66:	
  9186  13BF                     	line	64
  9187                           	
  9188                           i1l3560:	
  9189  13BF                     ;main.c: 64:     if (PIR1bits.ADIF) {
  9190                           	bcf	status, 5	;RP0=0, select bank0
  9191  13BF  1283               	bcf	status, 6	;RP1=0, select bank0
  9192  13C0  1303               	btfss	(12),6	;volatile
  9193  13C1  1F0C               	goto	u458_21
  9194  13C2  2BC4               	goto	u458_20
  9195  13C3  2BC5               u458_21:
  9196  13C4                     	goto	i1l69
  9197  13C4  2BCE               u458_20:
  9198  13C5                     	line	66
  9199                           	
  9200                           i1l3562:	
  9201  13C5                     ;main.c: 66:         handle_potmeter();
  9202                           	fcall	_handle_potmeter
  9203  13C5  160A  118A  2440  160A  118A  	line	68
  9204                           	
  9205                           i1l3564:	
  9206  13CA                     ;main.c: 68:         PIR1bits.ADIF = 0;
  9207                           	bcf	status, 5	;RP0=0, select bank0
  9208  13CA  1283               	bcf	status, 6	;RP1=0, select bank0
  9209  13CB  1303               	bcf	(12),6	;volatile
  9210  13CC  130C               	goto	i1l69
  9211  13CD  2BCE               	line	69
  9212                           ;main.c: 69:     }
  9213                           	
  9214                           i1l68:	
  9215  13CE                     	line	71
  9216                           	
  9217                           i1l69:	
  9218  13CE                     	movf	(??_isr+3),w
  9219  13CE  085D               	movwf	btemp+1
  9220  13CF  00FF               	movf	(??_isr+2),w
  9221  13D0  085C               	movwf	pclath
  9222  13D1  008A               	movf	(??_isr+1),w
  9223  13D2  085B               	movwf	fsr0
  9224  13D3  0084               	swapf	(??_isr+0)^00h,w
  9225  13D4  0E5A               	movwf	status
  9226  13D5  0083               	swapf	saved_w,f
  9227  13D6  0EFE               	swapf	saved_w,w
  9228  13D7  0E7E               	retfie
  9229  13D8  0009               	opt stack 0
  9230                           GLOBAL	__end_of_isr
  9231                           	__end_of_isr:
  9232  13D9                     	signat	_isr,89
  9233                           	global	_start_receive
  9234                           
  9235 ;; *************** function _start_receive *****************
  9236 ;; Defined at:
  9237 ;;		line 14 in file "Remote.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;		None
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;  i               2    9[COMMON] int 
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1    wreg      void 
  9244 ;; Registers used:
  9245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9251 ;;      Params:         0       0       0       0       0
  9252 ;;      Locals:         2       0       0       0       0
  9253 ;;      Temps:          8       0       0       0       0
  9254 ;;      Totals:        10       0       0       0       0
  9255 ;;Total ram usage:       10 bytes
  9256 ;; Hardware stack levels used:    1
  9257 ;; Hardware stack levels required when called:    1
  9258 ;; This function calls:
  9259 ;;		_handle_remote
  9260 ;; This function is called by:
  9261 ;;		_isr
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9265                           	file	"Remote.c"
  9266                           	line	14
  9267                           global __ptext26
  9268                           __ptext26:	;psect for function _start_receive
  9269  0820                     psect	text26
  9270                           	file	"Remote.c"
  9271                           	line	14
  9272                           	global	__size_of_start_receive
  9273                           	__size_of_start_receive	equ	__end_of_start_receive-_start_receive
  9274  006C                     	
  9275                           _start_receive:	
  9276  0820                     ;incstack = 0
  9277 ;; hardware stack exceeded
  9278                           	opt	stack 0
  9279                           ; Regs used in _start_receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9280                           	line	16
  9281                           	
  9282                           i1l3508:	
  9283  0820                     ;Remote.c: 16:     ir_input = 0;
  9284                           	movlw	high highword(0)
  9285  0820  3000               	bcf	status, 5	;RP0=0, select bank0
  9286  0821  1283               	bcf	status, 6	;RP1=0, select bank0
  9287  0822  1303               	movwf	(_ir_input+3)
  9288  0823  00E1               	movlw	low highword(0)
  9289  0824  3000               	movwf	(_ir_input+2)
  9290  0825  00E0               	movlw	high(0)
  9291  0826  3000               	movwf	(_ir_input+1)
  9292  0827  00DF               	movlw	low(0)
  9293  0828  3000               	movwf	(_ir_input)
  9294  0829  00DE               
  9295                           	line	19
  9296                           ;Remote.c: 19:     _delay((unsigned long)((633)*(4000000/4000000.0)));
  9297                           	opt asmopt_push
  9298                           opt asmopt_off
  9299                           	movlw	210
  9300  082A  30D2               movwf	((??_start_receive+0)+0),f
  9301  082B  00F1               	u460_27:
  9302  082C                     decfsz	(??_start_receive+0)+0,f
  9303  082C  0BF1               	goto	u460_27
  9304  082D  282C               	nop2
  9305  082E  282F               opt asmopt_pop
  9306                           
  9307                           	line	20
  9308                           	
  9309                           i1l3510:	
  9310  082F                     ;Remote.c: 20:     for (int i = 0; i < 12; i++) {
  9311                           	clrf	(start_receive@i)
  9312  082F  01F9               	clrf	(start_receive@i+1)
  9313  0830  01FA               	
  9314                           i1l3512:	
  9315  0831                     	movf	(start_receive@i+1),w
  9316  0831  087A               	xorlw	80h
  9317  0832  3A80               	movwf	btemp+1
  9318  0833  00FF               	movlw	(0)^80h
  9319  0834  3080               	subwf	btemp+1,w
  9320  0835  027F               	skipz
  9321  0836  1D03               	goto	u450_25
  9322  0837  283A               	movlw	0Ch
  9323  0838  300C               	subwf	(start_receive@i),w
  9324  0839  0279               u450_25:
  9325  083A                     
  9326                           	skipc
  9327  083A  1C03               	goto	u450_21
  9328  083B  283D               	goto	u450_20
  9329  083C  283E               u450_21:
  9330  083D                     	goto	i1l3516
  9331  083D  2840               u450_20:
  9332  083E                     	goto	i1l3524
  9333  083E  2886               	
  9334                           i1l3514:	
  9335  083F                     	goto	i1l3524
  9336  083F  2886               	
  9337                           i1l376:	
  9338  0840                     	line	21
  9339                           	
  9340                           i1l3516:	
  9341  0840                     ;Remote.c: 21:         ir_input = (ir_input << 1) | !PORTBbits.RB0;
  9342                           	clrc
  9343  0840  1003               	bcf	status, 5	;RP0=0, select bank0
  9344  0841  1283               	bcf	status, 6	;RP1=0, select bank0
  9345  0842  1303               	btfss	(6),0	;volatile
  9346  0843  1C06               	setc
  9347  0844  1403               	movlw	0
  9348  0845  3000               	skipnc
  9349  0846  1803               	movlw	1
  9350  0847  3001               
  9351                           	movwf	(??_start_receive+0)+0
  9352  0848  00F1               	clrf	((??_start_receive+0)+0+1)
  9353  0849  01F2               	clrf	((??_start_receive+0)+0+2)
  9354  084A  01F3               	clrf	((??_start_receive+0)+0+3)
  9355  084B  01F4               	movf	(_ir_input),w
  9356  084C  085E               	movwf	(??_start_receive+4)+0
  9357  084D  00F5               	movf	(_ir_input+1),w
  9358  084E  085F               	movwf	((??_start_receive+4)+0+1)
  9359  084F  00F6               	movf	(_ir_input+2),w
  9360  0850  0860               	movwf	((??_start_receive+4)+0+2)
  9361  0851  00F7               	movf	(_ir_input+3),w
  9362  0852  0861               	movwf	((??_start_receive+4)+0+3)
  9363  0853  00F8               	movlw	01h
  9364  0854  3001               u451_25:
  9365  0855                     	clrc
  9366  0855  1003               	rlf	(??_start_receive+4)+0,f
  9367  0856  0DF5               	rlf	(??_start_receive+4)+1,f
  9368  0857  0DF6               	rlf	(??_start_receive+4)+2,f
  9369  0858  0DF7               	rlf	(??_start_receive+4)+3,f
  9370  0859  0DF8               u451_20:
  9371  085A                     	addlw	-1
  9372  085A  3EFF               	skipz
  9373  085B  1D03               	goto	u451_25
  9374  085C  2855               	movf	0+(??_start_receive+4)+0,w
  9375  085D  0875               	iorwf	(??_start_receive+0)+0,f
  9376  085E  04F1               	movf	1+(??_start_receive+4)+0,w
  9377  085F  0876               	iorwf	(??_start_receive+0)+1,f
  9378  0860  04F2               	movf	2+(??_start_receive+4)+0,w
  9379  0861  0877               	iorwf	(??_start_receive+0)+2,f
  9380  0862  04F3               	movf	3+(??_start_receive+4)+0,w
  9381  0863  0878               	iorwf	(??_start_receive+0)+3,f
  9382  0864  04F4               	movf	3+(??_start_receive+0)+0,w
  9383  0865  0874               	movwf	(_ir_input+3)
  9384  0866  00E1               	movf	2+(??_start_receive+0)+0,w
  9385  0867  0873               	movwf	(_ir_input+2)
  9386  0868  00E0               	movf	1+(??_start_receive+0)+0,w
  9387  0869  0872               	movwf	(_ir_input+1)
  9388  086A  00DF               	movf	0+(??_start_receive+0)+0,w
  9389  086B  0871               	movwf	(_ir_input)
  9390  086C  00DE               
  9391                           	line	23
  9392                           	
  9393                           i1l3518:	
  9394  086D                     ;Remote.c: 23:         _delay((unsigned long)((1266)*(4000000/4000000.0)));
  9395                           	opt asmopt_push
  9396                           opt asmopt_off
  9397                           	movlw	253
  9398  086D  30FD               movwf	((??_start_receive+0)+0),f
  9399  086E  00F1               	u461_27:
  9400  086F                     	nop2
  9401  086F  2870               decfsz	(??_start_receive+0)+0,f
  9402  0870  0BF1               	goto	u461_27
  9403  0871  286F               opt asmopt_pop
  9404                           
  9405                           	line	24
  9406                           	
  9407                           i1l3520:	
  9408  0872                     ;Remote.c: 24:     }
  9409                           	movlw	01h
  9410  0872  3001               	addwf	(start_receive@i),f
  9411  0873  07F9               	skipnc
  9412  0874  1803               	incf	(start_receive@i+1),f
  9413  0875  0AFA               	movlw	0
  9414  0876  3000               	addwf	(start_receive@i+1),f
  9415  0877  07FA               	
  9416                           i1l3522:	
  9417  0878                     	movf	(start_receive@i+1),w
  9418  0878  087A               	xorlw	80h
  9419  0879  3A80               	movwf	btemp+1
  9420  087A  00FF               	movlw	(0)^80h
  9421  087B  3080               	subwf	btemp+1,w
  9422  087C  027F               	skipz
  9423  087D  1D03               	goto	u452_25
  9424  087E  2881               	movlw	0Ch
  9425  087F  300C               	subwf	(start_receive@i),w
  9426  0880  0279               u452_25:
  9427  0881                     
  9428                           	skipc
  9429  0881  1C03               	goto	u452_21
  9430  0882  2884               	goto	u452_20
  9431  0883  2885               u452_21:
  9432  0884                     	goto	i1l3516
  9433  0884  2840               u452_20:
  9434  0885                     	goto	i1l3524
  9435  0885  2886               	
  9436                           i1l377:	
  9437  0886                     	line	26
  9438                           	
  9439                           i1l3524:	
  9440  0886                     ;Remote.c: 26:     handle_remote();
  9441                           	fcall	_handle_remote
  9442  0886  120A  158A  21F9  120A  158A  	line	27
  9443                           	
  9444                           i1l378:	
  9445  088B                     	return
  9446  088B  0008               	opt stack 0
  9447                           GLOBAL	__end_of_start_receive
  9448                           	__end_of_start_receive:
  9449  088C                     	signat	_start_receive,89
  9450                           	global	_handle_remote
  9451                           
  9452 ;; *************** function _handle_remote *****************
  9453 ;; Defined at:
  9454 ;;		line 30 in file "Remote.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;		None
  9457 ;; Auto vars:     Size  Location     Type
  9458 ;;  found           1    0[COMMON] unsigned char 
  9459 ;; Return value:  Size  Location     Type
  9460 ;;                  1    wreg      void 
  9461 ;; Registers used:
  9462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9463 ;; Tracked objects:
  9464 ;;		On entry : 0/0
  9465 ;;		On exit  : 0/0
  9466 ;;		Unchanged: 0/0
  9467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9468 ;;      Params:         0       0       0       0       0
  9469 ;;      Locals:         1       0       0       0       0
  9470 ;;      Temps:          0       0       0       0       0
  9471 ;;      Totals:         1       0       0       0       0
  9472 ;;Total ram usage:        1 bytes
  9473 ;; Hardware stack levels used:    1
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_start_receive
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  9481                           	line	30
  9482                           global __ptext27
  9483                           __ptext27:	;psect for function _handle_remote
  9484  09F9                     psect	text27
  9485                           	file	"Remote.c"
  9486                           	line	30
  9487                           	global	__size_of_handle_remote
  9488                           	__size_of_handle_remote	equ	__end_of_handle_remote-_handle_remote
  9489  0081                     	
  9490                           _handle_remote:	
  9491  09F9                     ;incstack = 0
  9492 ;; hardware stack exceeded
  9493                           	opt	stack 0
  9494                           ; Regs used in _handle_remote: [wreg-fsr0h+status,2+status,0]
  9495                           	line	32
  9496                           	
  9497                           i1l3248:	
  9498  09F9                     ;Remote.c: 32:     char found = 0;
  9499                           	clrf	(handle_remote@found)
  9500  09F9  01F0               	line	34
  9501                           ;Remote.c: 34:     switch (ir_input) {
  9502                           	goto	i1l3288
  9503  09FA  2A4C               	line	35
  9504                           ;Remote.c: 35:         case 0x0665:
  9505                           	
  9506                           i1l382:	
  9507  09FB                     	line	36
  9508                           	
  9509                           i1l3250:	
  9510  09FB                     ;Remote.c: 36:             _selectedInput = 0;
  9511                           	bsf	status, 5	;RP0=1, select bank1
  9512  09FB  1683               	bcf	status, 6	;RP1=0, select bank1
  9513  09FC  1303               	clrf	(__selectedInput)^080h
  9514  09FD  01ED               	clrf	(__selectedInput+1)^080h
  9515  09FE  01EE               	line	37
  9516                           	
  9517                           i1l3252:	
  9518  09FF                     ;Remote.c: 37:             _inputUpdateRequired = 1;
  9519                           	bcf	status, 5	;RP0=0, select bank0
  9520  09FF  1283               	bcf	status, 6	;RP1=0, select bank0
  9521  0A00  1303               	clrf	(__inputUpdateRequired)
  9522  0A01  01ED               	incf	(__inputUpdateRequired),f
  9523  0A02  0AED               	line	38
  9524                           	
  9525                           i1l3254:	
  9526  0A03                     ;Remote.c: 38:             found = 1;
  9527                           	clrf	(handle_remote@found)
  9528  0A03  01F0               	incf	(handle_remote@found),f
  9529  0A04  0AF0               	line	39
  9530                           ;Remote.c: 39:             break;
  9531                           	goto	i1l3290
  9532  0A05  2A71               	line	40
  9533                           ;Remote.c: 40:         case 0x06A3:
  9534                           	
  9535                           i1l384:	
  9536  0A06                     	line	41
  9537                           	
  9538                           i1l3256:	
  9539  0A06                     ;Remote.c: 41:             _selectedInput = 1;
  9540                           	movlw	01h
  9541  0A06  3001               	bsf	status, 5	;RP0=1, select bank1
  9542  0A07  1683               	bcf	status, 6	;RP1=0, select bank1
  9543  0A08  1303               	movwf	(__selectedInput)^080h
  9544  0A09  00ED               	movlw	0
  9545  0A0A  3000               	movwf	((__selectedInput)^080h)+1
  9546  0A0B  00EE               	line	42
  9547                           	
  9548                           i1l3258:	
  9549  0A0C                     ;Remote.c: 42:             _inputUpdateRequired = 1;
  9550                           	bcf	status, 5	;RP0=0, select bank0
  9551  0A0C  1283               	bcf	status, 6	;RP1=0, select bank0
  9552  0A0D  1303               	clrf	(__inputUpdateRequired)
  9553  0A0E  01ED               	incf	(__inputUpdateRequired),f
  9554  0A0F  0AED               	line	43
  9555                           	
  9556                           i1l3260:	
  9557  0A10                     ;Remote.c: 43:             found = 1;
  9558                           	clrf	(handle_remote@found)
  9559  0A10  01F0               	incf	(handle_remote@found),f
  9560  0A11  0AF0               	line	44
  9561                           ;Remote.c: 44:             break;
  9562                           	goto	i1l3290
  9563  0A12  2A71               	line	45
  9564                           ;Remote.c: 45:         case 0x0669:
  9565                           	
  9566                           i1l385:	
  9567  0A13                     	line	46
  9568                           	
  9569                           i1l3262:	
  9570  0A13                     ;Remote.c: 46:             _selectedInput = 2;
  9571                           	movlw	02h
  9572  0A13  3002               	bsf	status, 5	;RP0=1, select bank1
  9573  0A14  1683               	bcf	status, 6	;RP1=0, select bank1
  9574  0A15  1303               	movwf	(__selectedInput)^080h
  9575  0A16  00ED               	movlw	0
  9576  0A17  3000               	movwf	((__selectedInput)^080h)+1
  9577  0A18  00EE               	line	47
  9578                           	
  9579                           i1l3264:	
  9580  0A19                     ;Remote.c: 47:             _inputUpdateRequired = 1;
  9581                           	bcf	status, 5	;RP0=0, select bank0
  9582  0A19  1283               	bcf	status, 6	;RP1=0, select bank0
  9583  0A1A  1303               	clrf	(__inputUpdateRequired)
  9584  0A1B  01ED               	incf	(__inputUpdateRequired),f
  9585  0A1C  0AED               	line	48
  9586                           	
  9587                           i1l3266:	
  9588  0A1D                     ;Remote.c: 48:             found = 1;
  9589                           	clrf	(handle_remote@found)
  9590  0A1D  01F0               	incf	(handle_remote@found),f
  9591  0A1E  0AF0               	line	49
  9592                           ;Remote.c: 49:             break;
  9593                           	goto	i1l3290
  9594  0A1F  2A71               	line	50
  9595                           ;Remote.c: 50:         case 0x0663:
  9596                           	
  9597                           i1l386:	
  9598  0A20                     	line	51
  9599                           	
  9600                           i1l3268:	
  9601  0A20                     ;Remote.c: 51:             _selectedInput = 3;
  9602                           	movlw	03h
  9603  0A20  3003               	bsf	status, 5	;RP0=1, select bank1
  9604  0A21  1683               	bcf	status, 6	;RP1=0, select bank1
  9605  0A22  1303               	movwf	(__selectedInput)^080h
  9606  0A23  00ED               	movlw	0
  9607  0A24  3000               	movwf	((__selectedInput)^080h)+1
  9608  0A25  00EE               	line	52
  9609                           	
  9610                           i1l3270:	
  9611  0A26                     ;Remote.c: 52:             _inputUpdateRequired = 1;
  9612                           	bcf	status, 5	;RP0=0, select bank0
  9613  0A26  1283               	bcf	status, 6	;RP1=0, select bank0
  9614  0A27  1303               	clrf	(__inputUpdateRequired)
  9615  0A28  01ED               	incf	(__inputUpdateRequired),f
  9616  0A29  0AED               	line	53
  9617                           	
  9618                           i1l3272:	
  9619  0A2A                     ;Remote.c: 53:             found = 1;
  9620                           	clrf	(handle_remote@found)
  9621  0A2A  01F0               	incf	(handle_remote@found),f
  9622  0A2B  0AF0               	line	54
  9623                           ;Remote.c: 54:             break;
  9624                           	goto	i1l3290
  9625  0A2C  2A71               	line	55
  9626                           ;Remote.c: 55:         case 0x06A9:
  9627                           	
  9628                           i1l387:	
  9629  0A2D                     	line	56
  9630                           	
  9631                           i1l3274:	
  9632  0A2D                     ;Remote.c: 56:             volume++;
  9633                           	movlw	01h
  9634  0A2D  3001               	bsf	status, 5	;RP0=1, select bank1
  9635  0A2E  1683               	bcf	status, 6	;RP1=0, select bank1
  9636  0A2F  1303               	addwf	(_volume)^080h,f
  9637  0A30  07EB               	skipnc
  9638  0A31  1803               	incf	(_volume+1)^080h,f
  9639  0A32  0AEC               	movlw	0
  9640  0A33  3000               	addwf	(_volume+1)^080h,f
  9641  0A34  07EC               	line	57
  9642                           	
  9643                           i1l3276:	
  9644  0A35                     ;Remote.c: 57:             found = 1;
  9645                           	clrf	(handle_remote@found)
  9646  0A35  01F0               	incf	(handle_remote@found),f
  9647  0A36  0AF0               	line	58
  9648                           	
  9649                           i1l3278:	
  9650  0A37                     ;Remote.c: 58:             vol_motor = 1;
  9651                           	bcf	status, 5	;RP0=0, select bank0
  9652  0A37  1283               	bcf	status, 6	;RP1=0, select bank0
  9653  0A38  1303               	clrf	(_vol_motor)
  9654  0A39  01EC               	incf	(_vol_motor),f
  9655  0A3A  0AEC               	line	60
  9656                           ;Remote.c: 60:             break;
  9657                           	goto	i1l3290
  9658  0A3B  2A71               	line	61
  9659                           ;Remote.c: 61:         case 0x06A5:
  9660                           	
  9661                           i1l388:	
  9662  0A3C                     	line	62
  9663                           	
  9664                           i1l3280:	
  9665  0A3C                     ;Remote.c: 62:             volume--;
  9666                           	movlw	0FFh
  9667  0A3C  30FF               	bsf	status, 5	;RP0=1, select bank1
  9668  0A3D  1683               	bcf	status, 6	;RP1=0, select bank1
  9669  0A3E  1303               	addwf	(_volume)^080h,f
  9670  0A3F  07EB               	skipnc
  9671  0A40  1803               	incf	(_volume+1)^080h,f
  9672  0A41  0AEC               	movlw	0FFh
  9673  0A42  30FF               	addwf	(_volume+1)^080h,f
  9674  0A43  07EC               	line	63
  9675                           	
  9676                           i1l3282:	
  9677  0A44                     ;Remote.c: 63:             found = 1;
  9678                           	clrf	(handle_remote@found)
  9679  0A44  01F0               	incf	(handle_remote@found),f
  9680  0A45  0AF0               	line	64
  9681                           	
  9682                           i1l3284:	
  9683  0A46                     ;Remote.c: 64:             vol_motor = 1;
  9684                           	bcf	status, 5	;RP0=0, select bank0
  9685  0A46  1283               	bcf	status, 6	;RP1=0, select bank0
  9686  0A47  1303               	clrf	(_vol_motor)
  9687  0A48  01EC               	incf	(_vol_motor),f
  9688  0A49  0AEC               	line	66
  9689                           ;Remote.c: 66:             break;
  9690                           	goto	i1l3290
  9691  0A4A  2A71               	line	67
  9692                           	
  9693                           i1l3286:	
  9694  0A4B                     ;Remote.c: 67:     }
  9695                           	goto	i1l3290
  9696  0A4B  2A71               	
  9697                           i1l381:	
  9698  0A4C                     	
  9699                           i1l3288:	
  9700  0A4C                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  9701                           ; Switch size 1, requested type "space"
  9702                           ; Number of cases is 1, Range of values is 0 to 0
  9703                           ; switch strategies available:
  9704                           ; Name         Instructions Cycles
  9705                           ; simple_byte            4     3 (average)
  9706                           ; direct_byte           11     8 (fixed)
  9707                           ; jumptable            260     6 (fixed)
  9708                           ;	Chosen strategy is simple_byte
  9709                           
  9710                           	bcf	status, 5	;RP0=0, select bank0
  9711  0A4C  1283               	bcf	status, 6	;RP1=0, select bank0
  9712  0A4D  1303               	movf (_ir_input+3),w
  9713  0A4E  0861               	opt asmopt_push
  9714                           	opt asmopt_off
  9715                           	xorlw	0^0	; case 0
  9716  0A4F  3A00               	skipnz
  9717  0A50  1903               	goto	i1l3672
  9718  0A51  2A6C               	goto	i1l3290
  9719  0A52  2A71               	opt asmopt_pop
  9720                           	
  9721                           i1l3670:	
  9722  0A53                     ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
                                 itches
  9723                           ; Switch size 1, requested type "space"
  9724                           ; Number of cases is 1, Range of values is 6 to 6
  9725                           ; switch strategies available:
  9726                           ; Name         Instructions Cycles
  9727                           ; simple_byte            4     3 (average)
  9728                           ; direct_byte           14    11 (fixed)
  9729                           ; jumptable            263     9 (fixed)
  9730                           ;	Chosen strategy is simple_byte
  9731                           
  9732                           	movf (_ir_input+1),w
  9733  0A53  085F               	opt asmopt_push
  9734                           	opt asmopt_off
  9735                           	xorlw	6^0	; case 6
  9736  0A54  3A06               	skipnz
  9737  0A55  1903               	goto	i1l3674
  9738  0A56  2A58               	goto	i1l3290
  9739  0A57  2A71               	opt asmopt_pop
  9740                           	
  9741                           i1l3674:	
  9742  0A58                     ; Switch size 1, requested type "space"
  9743                           ; Number of cases is 6, Range of values is 99 to 169
  9744                           ; switch strategies available:
  9745                           ; Name         Instructions Cycles
  9746                           ; simple_byte           19    10 (average)
  9747                           ; direct_byte          224    11 (fixed)
  9748                           ; jumptable            263     9 (fixed)
  9749                           ;	Chosen strategy is simple_byte
  9750                           
  9751                           	movf (_ir_input),w
  9752  0A58  085E               	opt asmopt_push
  9753                           	opt asmopt_off
  9754                           	xorlw	99^0	; case 99
  9755  0A59  3A63               	skipnz
  9756  0A5A  1903               	goto	i1l3268
  9757  0A5B  2A20               	xorlw	101^99	; case 101
  9758  0A5C  3A06               	skipnz
  9759  0A5D  1903               	goto	i1l3250
  9760  0A5E  29FB               	xorlw	105^101	; case 105
  9761  0A5F  3A0C               	skipnz
  9762  0A60  1903               	goto	i1l3262
  9763  0A61  2A13               	xorlw	163^105	; case 163
  9764  0A62  3ACA               	skipnz
  9765  0A63  1903               	goto	i1l3256
  9766  0A64  2A06               	xorlw	165^163	; case 165
  9767  0A65  3A06               	skipnz
  9768  0A66  1903               	goto	i1l3280
  9769  0A67  2A3C               	xorlw	169^165	; case 169
  9770  0A68  3A0C               	skipnz
  9771  0A69  1903               	goto	i1l3274
  9772  0A6A  2A2D               	goto	i1l3290
  9773  0A6B  2A71               	opt asmopt_pop
  9774                           	
  9775                           i1l3672:	
  9776  0A6C                     ; Switch size 1, requested type "space"
  9777                           ; Number of cases is 1, Range of values is 0 to 0
  9778                           ; switch strategies available:
  9779                           ; Name         Instructions Cycles
  9780                           ; simple_byte            4     3 (average)
  9781                           ; direct_byte           11     8 (fixed)
  9782                           ; jumptable            260     6 (fixed)
  9783                           ;	Chosen strategy is simple_byte
  9784                           
  9785                           	movf (_ir_input+2),w
  9786  0A6C  0860               	opt asmopt_push
  9787                           	opt asmopt_off
  9788                           	xorlw	0^0	; case 0
  9789  0A6D  3A00               	skipnz
  9790  0A6E  1903               	goto	i1l3670
  9791  0A6F  2A53               	goto	i1l3290
  9792  0A70  2A71               	opt asmopt_pop
  9793                           
  9794                           	
  9795                           i1l383:	
  9796  0A71                     	line	69
  9797                           	
  9798                           i1l3290:	
  9799  0A71                     ;Remote.c: 69:     ir_input = 0;
  9800                           	movlw	high highword(0)
  9801  0A71  3000               	movwf	(_ir_input+3)
  9802  0A72  00E1               	movlw	low highword(0)
  9803  0A73  3000               	movwf	(_ir_input+2)
  9804  0A74  00E0               	movlw	high(0)
  9805  0A75  3000               	movwf	(_ir_input+1)
  9806  0A76  00DF               	movlw	low(0)
  9807  0A77  3000               	movwf	(_ir_input)
  9808  0A78  00DE               
  9809                           	line	71
  9810                           	
  9811                           i1l389:	
  9812  0A79                     	return
  9813  0A79  0008               	opt stack 0
  9814                           GLOBAL	__end_of_handle_remote
  9815                           	__end_of_handle_remote:
  9816  0A7A                     	signat	_handle_remote,89
  9817                           	global	_handle_rotary
  9818                           
  9819 ;; *************** function _handle_rotary *****************
  9820 ;; Defined at:
  9821 ;;		line 30 in file "Input.c"
  9822 ;; Parameters:    Size  Location     Type
  9823 ;;		None
  9824 ;; Auto vars:     Size  Location     Type
  9825 ;;  portB           2    5[COMMON] int 
  9826 ;;  portA           2    3[COMMON] int 
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, status,2, status,0
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9836 ;;      Params:         0       0       0       0       0
  9837 ;;      Locals:         4       0       0       0       0
  9838 ;;      Temps:          3       0       0       0       0
  9839 ;;      Totals:         7       0       0       0       0
  9840 ;;Total ram usage:        7 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; This function calls:
  9843 ;;		Nothing
  9844 ;; This function is called by:
  9845 ;;		_isr
  9846 ;; This function uses a non-reentrant model
  9847 ;;
  9848                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  9849                           	file	"Input.c"
  9850                           	line	30
  9851                           global __ptext28
  9852                           __ptext28:	;psect for function _handle_rotary
  9853  0978                     psect	text28
  9854                           	file	"Input.c"
  9855                           	line	30
  9856                           	global	__size_of_handle_rotary
  9857                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  9858  0081                     	
  9859                           _handle_rotary:	
  9860  0978                     ;incstack = 0
  9861                           	opt	stack 0
  9862                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  9863                           	line	32
  9864                           	
  9865                           i1l3480:	
  9866  0978                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  9867                           	bcf	status, 5	;RP0=0, select bank0
  9868  0978  1283               	bcf	status, 6	;RP1=0, select bank0
  9869  0979  1303               	swapf	(6),w	;volatile
  9870  097A  0E06               	andlw	(1<<1)-1
  9871  097B  3901               	movwf	(??_handle_rotary+0)+0
  9872  097C  00F0               	clrf	(??_handle_rotary+0)+0+1
  9873  097D  01F1               	movf	0+(??_handle_rotary+0)+0,w
  9874  097E  0870               	movwf	(handle_rotary@portA)
  9875  097F  00F3               	movf	1+(??_handle_rotary+0)+0,w
  9876  0980  0871               	movwf	(handle_rotary@portA+1)
  9877  0981  00F4               	line	33
  9878                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  9879                           	swapf	(6),w	;volatile
  9880  0982  0E06               	movwf	(??_handle_rotary+0)+0
  9881  0983  00F0               	rrf	(??_handle_rotary+0)+0,w
  9882  0984  0C70               	andlw	(1<<1)-1
  9883  0985  3901               	movwf	(??_handle_rotary+1)+0
  9884  0986  00F1               	clrf	(??_handle_rotary+1)+0+1
  9885  0987  01F2               	movf	0+(??_handle_rotary+1)+0,w
  9886  0988  0871               	movwf	(handle_rotary@portB)
  9887  0989  00F5               	movf	1+(??_handle_rotary+1)+0,w
  9888  098A  0872               	movwf	(handle_rotary@portB+1)
  9889  098B  00F6               	line	35
  9890                           	
  9891                           i1l3482:	
  9892  098C                     ;Input.c: 35:         if (_lastA != portA) {
  9893                           	movf	(__lastA+1),w
  9894  098C  086B               	xorwf	(handle_rotary@portA+1),w
  9895  098D  0674               	skipz
  9896  098E  1D03               	goto	u442_25
  9897  098F  2992               	movf	(__lastA),w
  9898  0990  086A               	xorwf	(handle_rotary@portA),w
  9899  0991  0673               u442_25:
  9900  0992                     
  9901                           	skipnz
  9902  0992  1903               	goto	u442_21
  9903  0993  2995               	goto	u442_20
  9904  0994  2996               u442_21:
  9905  0995                     	goto	i1l3494
  9906  0995  29BD               u442_20:
  9907  0996                     	line	36
  9908                           	
  9909                           i1l3484:	
  9910  0996                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  9911                           	movf	(__lastB+1),w
  9912  0996  0869               	xorwf	(__lastA+1),w
  9913  0997  066B               	skipz
  9914  0998  1D03               	goto	u443_25
  9915  0999  299C               	movf	(__lastB),w
  9916  099A  0868               	xorwf	(__lastA),w
  9917  099B  066A               u443_25:
  9918  099C                     
  9919                           	skipz
  9920  099C  1D03               	goto	u443_21
  9921  099D  299F               	goto	u443_20
  9922  099E  29A0               u443_21:
  9923  099F                     	goto	i1l3494
  9924  099F  29BD               u443_20:
  9925  09A0                     	
  9926                           i1l3486:	
  9927  09A0                     	movf	((handle_rotary@portA)),w
  9928  09A0  0873               iorwf	((handle_rotary@portA+1)),w
  9929  09A1  0474               	btfsc	status,2
  9930  09A2  1903               	goto	u444_21
  9931  09A3  29A5               	goto	u444_20
  9932  09A4  29A6               u444_21:
  9933  09A5                     	goto	i1l3494
  9934  09A5  29BD               u444_20:
  9935  09A6                     	line	37
  9936                           	
  9937                           i1l3488:	
  9938  09A6                     ;Input.c: 37:                 if (_selectedInput < 3) {
  9939                           	movlw	0
  9940  09A6  3000               	bsf	status, 5	;RP0=1, select bank1
  9941  09A7  1683               	bcf	status, 6	;RP1=0, select bank1
  9942  09A8  1303               	subwf	(__selectedInput+1)^080h,w
  9943  09A9  026E               	movlw	03h
  9944  09AA  3003               	skipnz
  9945  09AB  1903               	subwf	(__selectedInput)^080h,w
  9946  09AC  026D               	skipnc
  9947  09AD  1803               	goto	u445_21
  9948  09AE  29B0               	goto	u445_20
  9949  09AF  29B1               u445_21:
  9950  09B0                     	goto	i1l3492
  9951  09B0  29B8               u445_20:
  9952  09B1                     	line	38
  9953                           	
  9954                           i1l3490:	
  9955  09B1                     ;Input.c: 38:                     _selectedInput++;
  9956                           	movlw	01h
  9957  09B1  3001               	addwf	(__selectedInput)^080h,f
  9958  09B2  07ED               	skipnc
  9959  09B3  1803               	incf	(__selectedInput+1)^080h,f
  9960  09B4  0AEE               	movlw	0
  9961  09B5  3000               	addwf	(__selectedInput+1)^080h,f
  9962  09B6  07EE               	line	39
  9963                           ;Input.c: 39:                 } else {
  9964                           	goto	i1l3494
  9965  09B7  29BD               	
  9966                           i1l213:	
  9967  09B8                     	line	40
  9968                           	
  9969                           i1l3492:	
  9970  09B8                     ;Input.c: 40:                     _selectedInput = 0;
  9971                           	clrf	(__selectedInput)^080h
  9972  09B8  01ED               	clrf	(__selectedInput+1)^080h
  9973  09B9  01EE               	goto	i1l3494
  9974  09BA  29BD               	line	41
  9975                           ;Input.c: 41:                 }
  9976                           	
  9977                           i1l214:	
  9978  09BB                     	goto	i1l3494
  9979  09BB  29BD               	line	42
  9980                           ;Input.c: 42:             }
  9981                           	
  9982                           i1l212:	
  9983  09BC                     	goto	i1l3494
  9984  09BC  29BD               	line	43
  9985                           ;Input.c: 43:         }
  9986                           	
  9987                           i1l211:	
  9988  09BD                     	line	45
  9989                           	
  9990                           i1l3494:	
  9991  09BD                     ;Input.c: 45:         if (_lastB != portB) {
  9992                           	bcf	status, 5	;RP0=0, select bank0
  9993  09BD  1283               	movf	(__lastB+1),w
  9994  09BE  0869               	xorwf	(handle_rotary@portB+1),w
  9995  09BF  0676               	skipz
  9996  09C0  1D03               	goto	u446_25
  9997  09C1  29C4               	movf	(__lastB),w
  9998  09C2  0868               	xorwf	(handle_rotary@portB),w
  9999  09C3  0675               u446_25:
 10000  09C4                     
 10001                           	skipnz
 10002  09C4  1903               	goto	u446_21
 10003  09C5  29C7               	goto	u446_20
 10004  09C6  29C8               u446_21:
 10005  09C7                     	goto	i1l215
 10006  09C7  29ED               u446_20:
 10007  09C8                     	line	46
 10008                           	
 10009                           i1l3496:	
 10010  09C8                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
 10011                           	movf	(__lastB+1),w
 10012  09C8  0869               	xorwf	(__lastA+1),w
 10013  09C9  066B               	skipz
 10014  09CA  1D03               	goto	u447_25
 10015  09CB  29CE               	movf	(__lastB),w
 10016  09CC  0868               	xorwf	(__lastA),w
 10017  09CD  066A               u447_25:
 10018  09CE                     
 10019                           	skipz
 10020  09CE  1D03               	goto	u447_21
 10021  09CF  29D1               	goto	u447_20
 10022  09D0  29D2               u447_21:
 10023  09D1                     	goto	i1l215
 10024  09D1  29ED               u447_20:
 10025  09D2                     	
 10026                           i1l3498:	
 10027  09D2                     	movf	((handle_rotary@portB)),w
 10028  09D2  0875               iorwf	((handle_rotary@portB+1)),w
 10029  09D3  0476               	btfsc	status,2
 10030  09D4  1903               	goto	u448_21
 10031  09D5  29D7               	goto	u448_20
 10032  09D6  29D8               u448_21:
 10033  09D7                     	goto	i1l215
 10034  09D7  29ED               u448_20:
 10035  09D8                     	line	47
 10036                           	
 10037                           i1l3500:	
 10038  09D8                     ;Input.c: 47:                 if (_selectedInput > 0) {
 10039                           	bsf	status, 5	;RP0=1, select bank1
 10040  09D8  1683               	bcf	status, 6	;RP1=0, select bank1
 10041  09D9  1303               	movf	((__selectedInput)^080h),w
 10042  09DA  086D               iorwf	((__selectedInput+1)^080h),w
 10043  09DB  046E               	btfsc	status,2
 10044  09DC  1903               	goto	u449_21
 10045  09DD  29DF               	goto	u449_20
 10046  09DE  29E0               u449_21:
 10047  09DF                     	goto	i1l3504
 10048  09DF  29E7               u449_20:
 10049  09E0                     	line	48
 10050                           	
 10051                           i1l3502:	
 10052  09E0                     ;Input.c: 48:                     _selectedInput--;
 10053                           	movlw	01h
 10054  09E0  3001               	subwf	(__selectedInput)^080h,f
 10055  09E1  02ED               	movlw	0
 10056  09E2  3000               	skipc
 10057  09E3  1C03               	decf	(__selectedInput+1)^080h,f
 10058  09E4  03EE               	subwf	(__selectedInput+1)^080h,f
 10059  09E5  02EE               	line	49
 10060                           ;Input.c: 49:                 } else {
 10061                           	goto	i1l215
 10062  09E6  29ED               	
 10063                           i1l217:	
 10064  09E7                     	line	50
 10065                           	
 10066                           i1l3504:	
 10067  09E7                     ;Input.c: 50:                     _selectedInput = 3;
 10068                           	movlw	03h
 10069  09E7  3003               	movwf	(__selectedInput)^080h
 10070  09E8  00ED               	movlw	0
 10071  09E9  3000               	movwf	((__selectedInput)^080h)+1
 10072  09EA  00EE               	goto	i1l215
 10073  09EB  29ED               	line	51
 10074                           ;Input.c: 51:                 }
 10075                           	
 10076                           i1l218:	
 10077  09EC                     	goto	i1l215
 10078  09EC  29ED               	line	52
 10079                           ;Input.c: 52:             }
 10080                           	
 10081                           i1l216:	
 10082  09ED                     	line	53
 10083                           ;Input.c: 53:         }
 10084                           	
 10085                           i1l215:	
 10086  09ED                     	line	55
 10087                           ;Input.c: 55:         _lastA = portA;
 10088                           	movf	(handle_rotary@portA+1),w
 10089  09ED  0874               	bcf	status, 5	;RP0=0, select bank0
 10090  09EE  1283               	movwf	(__lastA+1)
 10091  09EF  00EB               	movf	(handle_rotary@portA),w
 10092  09F0  0873               	movwf	(__lastA)
 10093  09F1  00EA               	line	56
 10094                           ;Input.c: 56:         _lastB = portB;
 10095                           	movf	(handle_rotary@portB+1),w
 10096  09F2  0876               	movwf	(__lastB+1)
 10097  09F3  00E9               	movf	(handle_rotary@portB),w
 10098  09F4  0875               	movwf	(__lastB)
 10099  09F5  00E8               	line	57
 10100                           	
 10101                           i1l3506:	
 10102  09F6                     ;Input.c: 57:         _inputUpdateRequired = 1;
 10103                           	clrf	(__inputUpdateRequired)
 10104  09F6  01ED               	incf	(__inputUpdateRequired),f
 10105  09F7  0AED               	line	58
 10106                           	
 10107                           i1l219:	
 10108  09F8                     	return
 10109  09F8  0008               	opt stack 0
 10110                           GLOBAL	__end_of_handle_rotary
 10111                           	__end_of_handle_rotary:
 10112  09F9                     	signat	_handle_rotary,89
 10113                           	global	_handle_potmeter
 10114                           
 10115 ;; *************** function _handle_potmeter *****************
 10116 ;; Defined at:
 10117 ;;		line 65 in file "Volume.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;		None
 10120 ;; Auto vars:     Size  Location     Type
 10121 ;;  ad_result       2   56[BANK0 ] unsigned int 
 10122 ;;  newVol          2   54[BANK0 ] int 
 10123 ;; Return value:  Size  Location     Type
 10124 ;;                  1    wreg      void 
 10125 ;; Registers used:
 10126 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10127 ;; Tracked objects:
 10128 ;;		On entry : 0/0
 10129 ;;		On exit  : 0/0
 10130 ;;		Unchanged: 0/0
 10131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10132 ;;      Params:         0       0       0       0       0
 10133 ;;      Locals:         0       4       0       0       0
 10134 ;;      Temps:          0       0       0       0       0
 10135 ;;      Totals:         0       4       0       0       0
 10136 ;;Total ram usage:        4 bytes
 10137 ;; Hardware stack levels used:    1
 10138 ;; Hardware stack levels required when called:    3
 10139 ;; This function calls:
 10140 ;;		i1_get_volume
 10141 ;; This function is called by:
 10142 ;;		_isr
 10143 ;; This function uses a non-reentrant model
 10144 ;;
 10145                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 10146                           	file	"Volume.c"
 10147                           	line	65
 10148                           global __ptext29
 10149                           __ptext29:	;psect for function _handle_potmeter
 10150  1440                     psect	text29
 10151                           	file	"Volume.c"
 10152                           	line	65
 10153                           	global	__size_of_handle_potmeter
 10154                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
 10155  0039                     	
 10156                           _handle_potmeter:	
 10157  1440                     ;incstack = 0
 10158 ;; hardware stack exceeded
 10159                           	opt	stack 0
 10160                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10161                           	line	67
 10162                           	
 10163                           i1l3526:	
 10164  1440                     ;Volume.c: 67:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
 10165                           	bcf	status, 5	;RP0=0, select bank0
 10166  1440  1283               	bcf	status, 6	;RP1=0, select bank0
 10167  1441  1303               	movf	(30),w	;volatile
 10168  1442  081E               	movwf	(handle_potmeter@ad_result+1)
 10169  1443  00D9               	bsf	status, 5	;RP0=1, select bank1
 10170  1444  1683               	bcf	status, 6	;RP1=0, select bank1
 10171  1445  1303               	movf	(158)^080h,w	;volatile
 10172  1446  081E               	bcf	status, 5	;RP0=0, select bank0
 10173  1447  1283               	bcf	status, 6	;RP1=0, select bank0
 10174  1448  1303               	movwf	(handle_potmeter@ad_result)
 10175  1449  00D8               	line	69
 10176                           ;Volume.c: 69:     if (ad_result == _lastAdcResult)
 10177                           	movf	(__lastAdcResult+1),w
 10178  144A  0863               	xorwf	(handle_potmeter@ad_result+1),w
 10179  144B  0659               	skipz
 10180  144C  1D03               	goto	u453_25
 10181  144D  2C50               	movf	(__lastAdcResult),w
 10182  144E  0862               	xorwf	(handle_potmeter@ad_result),w
 10183  144F  0658               u453_25:
 10184  1450                     
 10185                           	skipz
 10186  1450  1D03               	goto	u453_21
 10187  1451  2C53               	goto	u453_20
 10188  1452  2C54               u453_21:
 10189  1453                     	goto	i1l3530
 10190  1453  2C56               u453_20:
 10191  1454                     	goto	i1l340
 10192  1454  2C78               	line	70
 10193                           	
 10194                           i1l3528:	
 10195  1455                     ;Volume.c: 70:         return;
 10196                           	goto	i1l340
 10197  1455  2C78               	
 10198                           i1l339:	
 10199  1456                     	line	73
 10200                           	
 10201                           i1l3530:	
 10202  1456                     ;Volume.c: 73:     int newVol = get_volume(ad_result);
 10203                           	movf	(handle_potmeter@ad_result+1),w
 10204  1456  0859               	movwf	(i1get_volume@ad_result+1)
 10205  1457  00D1               	movf	(handle_potmeter@ad_result),w
 10206  1458  0858               	movwf	(i1get_volume@ad_result)
 10207  1459  00D0               	fcall	i1_get_volume
 10208  145A  160A  118A  26C5  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 10209  145F  1283               	bcf	status, 6	;RP1=0, select bank0
 10210  1460  1303               	movf	(1+(?i1_get_volume)),w
 10211  1461  0851               	movwf	(handle_potmeter@newVol+1)
 10212  1462  00D7               	movf	(0+(?i1_get_volume)),w
 10213  1463  0850               	movwf	(handle_potmeter@newVol)
 10214  1464  00D6               	line	77
 10215                           	
 10216                           i1l3532:	
 10217  1465                     ;Volume.c: 77:     if (newVol >= 0) {
 10218                           	btfsc	(handle_potmeter@newVol+1),7
 10219  1465  1BD7               	goto	u454_21
 10220  1466  2C68               	goto	u454_20
 10221  1467  2C69               u454_21:
 10222  1468                     	goto	i1l341
 10223  1468  2C73               u454_20:
 10224  1469                     	line	78
 10225                           	
 10226                           i1l3534:	
 10227  1469                     ;Volume.c: 78:         volume = newVol;
 10228                           	movf	(handle_potmeter@newVol+1),w
 10229  1469  0857               	bsf	status, 5	;RP0=1, select bank1
 10230  146A  1683               	bcf	status, 6	;RP1=0, select bank1
 10231  146B  1303               	movwf	(_volume+1)^080h
 10232  146C  00EC               	bcf	status, 5	;RP0=0, select bank0
 10233  146D  1283               	bcf	status, 6	;RP1=0, select bank0
 10234  146E  1303               	movf	(handle_potmeter@newVol),w
 10235  146F  0856               	bsf	status, 5	;RP0=1, select bank1
 10236  1470  1683               	bcf	status, 6	;RP1=0, select bank1
 10237  1471  1303               	movwf	(_volume)^080h
 10238  1472  00EB               	line	80
 10239                           ;Volume.c: 80:     }
 10240                           	
 10241                           i1l341:	
 10242  1473                     	line	81
 10243                           ;Volume.c: 81:     _lastAdcResult = ad_result;
 10244                           	bcf	status, 5	;RP0=0, select bank0
 10245  1473  1283               	movf	(handle_potmeter@ad_result+1),w
 10246  1474  0859               	movwf	(__lastAdcResult+1)
 10247  1475  00E3               	movf	(handle_potmeter@ad_result),w
 10248  1476  0858               	movwf	(__lastAdcResult)
 10249  1477  00E2               	line	82
 10250                           	
 10251                           i1l340:	
 10252  1478                     	return
 10253  1478  0008               	opt stack 0
 10254                           GLOBAL	__end_of_handle_potmeter
 10255                           	__end_of_handle_potmeter:
 10256  1479                     	signat	_handle_potmeter,89
 10257                           	global	i1_get_volume
 10258                           
 10259 ;; *************** function i1_get_volume *****************
 10260 ;; Defined at:
 10261 ;;		line 84 in file "Volume.c"
 10262 ;; Parameters:    Size  Location     Type
 10263 ;;  ad_result       2   48[BANK0 ] unsigned int 
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;  get_volume      2   52[BANK0 ] unsigned int 
 10266 ;; Return value:  Size  Location     Type
 10267 ;;                  2   48[BANK0 ] int 
 10268 ;; Registers used:
 10269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10270 ;; Tracked objects:
 10271 ;;		On entry : 0/0
 10272 ;;		On exit  : 0/0
 10273 ;;		Unchanged: 0/0
 10274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10275 ;;      Params:         0       2       0       0       0
 10276 ;;      Locals:         0       2       0       0       0
 10277 ;;      Temps:          0       2       0       0       0
 10278 ;;      Totals:         0       6       0       0       0
 10279 ;;Total ram usage:        6 bytes
 10280 ;; Hardware stack levels used:    1
 10281 ;; Hardware stack levels required when called:    2
 10282 ;; This function calls:
 10283 ;;		i1___lwdiv
 10284 ;;		i1_is_deadzone
 10285 ;; This function is called by:
 10286 ;;		_handle_potmeter
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 10290                           	line	84
 10291                           global __ptext30
 10292                           __ptext30:	;psect for function i1_get_volume
 10293  16C5                     psect	text30
 10294                           	file	"Volume.c"
 10295                           	line	84
 10296                           	global	__size_ofi1_get_volume
 10297                           	__size_ofi1_get_volume	equ	__end_ofi1_get_volume-i1_get_volume
 10298  0069                     	
 10299                           i1_get_volume:	
 10300  16C5                     ;incstack = 0
 10301 ;; hardware stack exceeded
 10302                           	opt	stack 0
 10303                           ; Regs used in i1_get_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10304                           	line	86
 10305                           	
 10306                           i1l3304:	
 10307  16C5                     ;Volume.c: 84: int get_volume(unsigned int ad_result);Volume.c: 85: {;Volume.c: 86:     
                                 if (ad_result == 0 || ad_result < step_size) {
 10308                           	bcf	status, 5	;RP0=0, select bank0
 10309  16C5  1283               	bcf	status, 6	;RP1=0, select bank0
 10310  16C6  1303               	movf	((i1get_volume@ad_result)),w
 10311  16C7  0850               iorwf	((i1get_volume@ad_result+1)),w
 10312  16C8  0451               	btfsc	status,2
 10313  16C9  1903               	goto	u429_21
 10314  16CA  2ECC               	goto	u429_20
 10315  16CB  2ECD               u429_21:
 10316  16CC                     	goto	i1l3308
 10317  16CC  2EE8               u429_20:
 10318  16CD                     	
 10319                           i1l3306:	
 10320  16CD                     	movlw	low(_step_size|8000h)
 10321  16CD  308E               	movwf	fsr0
 10322  16CE  0084               	movlw	high(_step_size|8000h)
 10323  16CF  3087               	movwf	btemp+1
 10324  16D0  00FF               	fcall	stringtab
 10325  16D1  120A  118A  2600  160A  118A  	movwf	(??i1_get_volume+0)+0
 10326  16D6  00D2               	fcall	stringtab
 10327  16D7  120A  118A  2600  160A  118A  	movwf	(??i1_get_volume+0)+0+1
 10328  16DC  00D3               	movf	1+(??i1_get_volume+0)+0,w
 10329  16DD  0853               	subwf	(i1get_volume@ad_result+1),w
 10330  16DE  0251               	skipz
 10331  16DF  1D03               	goto	u430_25
 10332  16E0  2EE3               	movf	0+(??i1_get_volume+0)+0,w
 10333  16E1  0852               	subwf	(i1get_volume@ad_result),w
 10334  16E2  0250               u430_25:
 10335  16E3                     	skipnc
 10336  16E3  1803               	goto	u430_21
 10337  16E4  2EE6               	goto	u430_20
 10338  16E5  2EE7               u430_21:
 10339  16E6                     	goto	i1l3314
 10340  16E6  2EED               u430_20:
 10341  16E7                     	goto	i1l3308
 10342  16E7  2EE8               	
 10343                           i1l346:	
 10344  16E8                     	line	87
 10345                           	
 10346                           i1l3308:	
 10347  16E8                     ;Volume.c: 87:             return 0;
 10348                           	clrf	(?i1_get_volume)
 10349  16E8  01D0               	clrf	(?i1_get_volume+1)
 10350  16E9  01D1               	goto	i1l347
 10351  16EA  2F2D               	
 10352                           i1l3310:	
 10353  16EB                     	goto	i1l347
 10354  16EB  2F2D               	line	88
 10355                           	
 10356                           i1l3312:	
 10357  16EC                     ;Volume.c: 88:     } else {
 10358                           	goto	i1l3320
 10359  16EC  2F28               	
 10360                           i1l344:	
 10361  16ED                     	line	89
 10362                           	
 10363                           i1l3314:	
 10364  16ED                     ;Volume.c: 89:         unsigned int currentStep = ad_result / step_size;
 10365                           	movlw	low(_step_size|8000h)
 10366  16ED  308E               	movwf	fsr0
 10367  16EE  0084               	movlw	high(_step_size|8000h)
 10368  16EF  3087               	movwf	btemp+1
 10369  16F0  00FF               	fcall	stringtab
 10370  16F1  120A  118A  2600  160A  118A  	movwf	(i1___lwdiv@divisor)
 10371  16F6  00F0               	fcall	stringtab
 10372  16F7  120A  118A  2600  160A  118A  	movwf	(i1___lwdiv@divisor+1)
 10373  16FC  00F1               	movf	(i1get_volume@ad_result+1),w
 10374  16FD  0851               	movwf	(i1___lwdiv@dividend+1)
 10375  16FE  00F3               	movf	(i1get_volume@ad_result),w
 10376  16FF  0850               	movwf	(i1___lwdiv@dividend)
 10377  1700  00F2               	fcall	i1___lwdiv
 10378  1701  160A  118A  252F  160A  118A  	movf	(1+(?i1___lwdiv)),w
 10379  1706  0871               	bcf	status, 5	;RP0=0, select bank0
 10380  1707  1283               	bcf	status, 6	;RP1=0, select bank0
 10381  1708  1303               	movwf	(i1get_volume@currentStep+1)
 10382  1709  00D5               	movf	(0+(?i1___lwdiv)),w
 10383  170A  0870               	movwf	(i1get_volume@currentStep)
 10384  170B  00D4               	line	91
 10385                           ;Volume.c: 91:         if (!is_deadzone(currentStep, ad_result))
 10386                           	movf	(i1get_volume@currentStep+1),w
 10387  170C  0855               	movwf	(i1is_deadzone@currentStep+1)
 10388  170D  00C4               	movf	(i1get_volume@currentStep),w
 10389  170E  0854               	movwf	(i1is_deadzone@currentStep)
 10390  170F  00C3               	movf	(i1get_volume@ad_result+1),w
 10391  1710  0851               	movwf	(i1is_deadzone@adcResult+1)
 10392  1711  00C6               	movf	(i1get_volume@ad_result),w
 10393  1712  0850               	movwf	(i1is_deadzone@adcResult)
 10394  1713  00C5               	fcall	i1_is_deadzone
 10395  1714  120A  158A  2538  160A  118A  	bcf	status, 5	;RP0=0, select bank0
 10396  1719  1283               	bcf	status, 6	;RP1=0, select bank0
 10397  171A  1303               	movf	((0+(?i1_is_deadzone))),w
 10398  171B  0843               iorwf	((1+(?i1_is_deadzone))),w
 10399  171C  0444               	btfss	status,2
 10400  171D  1D03               	goto	u431_21
 10401  171E  2F20               	goto	u431_20
 10402  171F  2F21               u431_21:
 10403  1720                     	goto	i1l3320
 10404  1720  2F28               u431_20:
 10405  1721                     	line	92
 10406                           	
 10407                           i1l3316:	
 10408  1721                     ;Volume.c: 92:             return currentStep;
 10409                           	movf	(i1get_volume@currentStep+1),w
 10410  1721  0855               	movwf	(?i1_get_volume+1)
 10411  1722  00D1               	movf	(i1get_volume@currentStep),w
 10412  1723  0854               	movwf	(?i1_get_volume)
 10413  1724  00D0               	goto	i1l347
 10414  1725  2F2D               	
 10415                           i1l3318:	
 10416  1726                     	goto	i1l347
 10417  1726  2F2D               	
 10418                           i1l349:	
 10419  1727                     	goto	i1l3320
 10420  1727  2F28               	line	93
 10421                           ;Volume.c: 93:     }
 10422                           	
 10423                           i1l348:	
 10424  1728                     	line	95
 10425                           	
 10426                           i1l3320:	
 10427  1728                     ;Volume.c: 95:     return -1;
 10428                           	movlw	0FFh
 10429  1728  30FF               	movwf	(?i1_get_volume)
 10430  1729  00D0               	movlw	0FFh
 10431  172A  30FF               	movwf	((?i1_get_volume))+1
 10432  172B  00D1               	goto	i1l347
 10433  172C  2F2D               	
 10434                           i1l3322:	
 10435  172D                     	line	96
 10436                           	
 10437                           i1l347:	
 10438  172D                     	return
 10439  172D  0008               	opt stack 0
 10440                           GLOBAL	__end_ofi1_get_volume
 10441                           	__end_ofi1_get_volume:
 10442  172E                     	signat	i1_get_volume,90
 10443                           	global	i1_is_deadzone
 10444                           
 10445 ;; *************** function i1_is_deadzone *****************
 10446 ;; Defined at:
 10447 ;;		line 55 in file "Volume.c"
 10448 ;; Parameters:    Size  Location     Type
 10449 ;;  currentStep     2   35[BANK0 ] int 
 10450 ;;  adcResult       2   37[BANK0 ] int 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;  is_deadzone     2   46[BANK0 ] int 
 10453 ;;  is_deadzone     2   43[BANK0 ] int 
 10454 ;;  is_deadzone     2   41[BANK0 ] int 
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  2   35[BANK0 ] int 
 10457 ;; Registers used:
 10458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10464 ;;      Params:         0       4       0       0       0
 10465 ;;      Locals:         0       7       0       0       0
 10466 ;;      Temps:          0       2       0       0       0
 10467 ;;      Totals:         0      13       0       0       0
 10468 ;;Total ram usage:       13 bytes
 10469 ;; Hardware stack levels used:    1
 10470 ;; Hardware stack levels required when called:    1
 10471 ;; This function calls:
 10472 ;;		i1___fladd
 10473 ;;		i1___fltol
 10474 ;;		i1___wmul
 10475 ;;		i1___xxtofl
 10476 ;; This function is called by:
 10477 ;;		i1_get_volume
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10481                           	line	55
 10482                           global __ptext31
 10483                           __ptext31:	;psect for function i1_is_deadzone
 10484  0D38                     psect	text31
 10485                           	file	"Volume.c"
 10486                           	line	55
 10487                           	global	__size_ofi1_is_deadzone
 10488                           	__size_ofi1_is_deadzone	equ	__end_ofi1_is_deadzone-i1_is_deadzone
 10489  00C6                     	
 10490                           i1_is_deadzone:	
 10491  0D38                     ;incstack = 0
 10492 ;; hardware stack exceeded
 10493                           	opt	stack 0
 10494                           ; Regs used in i1_is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10495                           	line	57
 10496                           	
 10497                           i1l3078:	
 10498  0D38                     ;Volume.c: 55: int is_deadzone(int currentStep, int adcResult);Volume.c: 56: {;Volume.c:
                                  57:     int turnPoint = step_size * currentStep;
 10499                           	movlw	low(_step_size|8000h)
 10500  0D38  308E               	movwf	fsr0
 10501  0D39  0084               	movlw	high(_step_size|8000h)
 10502  0D3A  3087               	bcf	status, 5	;RP0=0, select bank0
 10503  0D3B  1283               	bcf	status, 6	;RP1=0, select bank0
 10504  0D3C  1303               	movwf	btemp+1
 10505  0D3D  00FF               	fcall	stringtab
 10506  0D3E  120A  118A  2600  120A  158A  	movwf	(i1___wmul@multiplier)
 10507  0D43  00F0               	fcall	stringtab
 10508  0D44  120A  118A  2600  120A  158A  	movwf	(i1___wmul@multiplier+1)
 10509  0D49  00F1               	movf	(i1is_deadzone@currentStep+1),w
 10510  0D4A  0844               	movwf	(i1___wmul@multiplicand+1)
 10511  0D4B  00F3               	movf	(i1is_deadzone@currentStep),w
 10512  0D4C  0843               	movwf	(i1___wmul@multiplicand)
 10513  0D4D  00F2               	fcall	i1___wmul
 10514  0D4E  160A  118A  2356  120A  158A  	movf	(1+(?i1___wmul)),w
 10515  0D53  0871               	bcf	status, 5	;RP0=0, select bank0
 10516  0D54  1283               	bcf	status, 6	;RP1=0, select bank0
 10517  0D55  1303               	movwf	(i1is_deadzone@turnPoint+1)
 10518  0D56  00CF               	movf	(0+(?i1___wmul)),w
 10519  0D57  0870               	movwf	(i1is_deadzone@turnPoint)
 10520  0D58  00CE               	line	59
 10521                           	
 10522                           i1l3080:	
 10523  0D59                     ;Volume.c: 59:     int deadzoneLow = turnPoint - ((1023) * 0.01);
 10524                           	movf	(i1is_deadzone@turnPoint),w
 10525  0D59  084E               	movwf	(i1___xxtofl@val)
 10526  0D5A  00F0               	movf	(i1is_deadzone@turnPoint+1),w
 10527  0D5B  084F               	movwf	(i1___xxtofl@val+1)
 10528  0D5C  00F1               	movlw	0
 10529  0D5D  3000               	btfsc	(i1___xxtofl@val+1),7
 10530  0D5E  1BF1               	movlw	255
 10531  0D5F  30FF               	movwf	(i1___xxtofl@val+2)
 10532  0D60  00F2               	movwf	(i1___xxtofl@val+3)
 10533  0D61  00F3               	movlw	low(01h)
 10534  0D62  3001               	fcall	i1___xxtofl
 10535  0D63  120A  158A  23B2  120A  158A  	movf	(3+(?i1___xxtofl)),w
 10536  0D68  0873               	bcf	status, 5	;RP0=0, select bank0
 10537  0D69  1283               	bcf	status, 6	;RP1=0, select bank0
 10538  0D6A  1303               	movwf	(i1___fladd@a+3)
 10539  0D6B  00A7               	movf	(2+(?i1___xxtofl)),w
 10540  0D6C  0872               	movwf	(i1___fladd@a+2)
 10541  0D6D  00A6               	movf	(1+(?i1___xxtofl)),w
 10542  0D6E  0871               	movwf	(i1___fladd@a+1)
 10543  0D6F  00A5               	movf	(0+(?i1___xxtofl)),w
 10544  0D70  0870               	movwf	(i1___fladd@a)
 10545  0D71  00A4               
 10546                           	movlw	0xc1
 10547  0D72  30C1               	movwf	(i1___fladd@b+3)
 10548  0D73  00A3               	movlw	0x23
 10549  0D74  3023               	movwf	(i1___fladd@b+2)
 10550  0D75  00A2               	movlw	0xae
 10551  0D76  30AE               	movwf	(i1___fladd@b+1)
 10552  0D77  00A1               	movlw	0x14
 10553  0D78  3014               	movwf	(i1___fladd@b)
 10554  0D79  00A0               
 10555                           	fcall	i1___fladd
 10556  0D7A  120A  118A  22E5  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10557  0D7F  1283               	bcf	status, 6	;RP1=0, select bank0
 10558  0D80  1303               	movf	(3+(?i1___fladd)),w
 10559  0D81  0823               	movwf	(i1___fltol@f1+3)
 10560  0D82  00BB               	movf	(2+(?i1___fladd)),w
 10561  0D83  0822               	movwf	(i1___fltol@f1+2)
 10562  0D84  00BA               	movf	(1+(?i1___fladd)),w
 10563  0D85  0821               	movwf	(i1___fltol@f1+1)
 10564  0D86  00B9               	movf	(0+(?i1___fladd)),w
 10565  0D87  0820               	movwf	(i1___fltol@f1)
 10566  0D88  00B8               
 10567                           	fcall	i1___fltol
 10568  0D89  120A  158A  227A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10569  0D8E  1283               	bcf	status, 6	;RP1=0, select bank0
 10570  0D8F  1303               	movf	(1+(?i1___fltol)),w
 10571  0D90  0839               	movwf	(i1is_deadzone@deadzoneLow+1)
 10572  0D91  00CA               	movf	(0+(?i1___fltol)),w
 10573  0D92  0838               	movwf	(i1is_deadzone@deadzoneLow)
 10574  0D93  00C9               	line	60
 10575                           	
 10576                           i1l3082:	
 10577  0D94                     ;Volume.c: 60:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
 10578                           	movf	(i1is_deadzone@turnPoint),w
 10579  0D94  084E               	movwf	(i1___xxtofl@val)
 10580  0D95  00F0               	movf	(i1is_deadzone@turnPoint+1),w
 10581  0D96  084F               	movwf	(i1___xxtofl@val+1)
 10582  0D97  00F1               	movlw	0
 10583  0D98  3000               	btfsc	(i1___xxtofl@val+1),7
 10584  0D99  1BF1               	movlw	255
 10585  0D9A  30FF               	movwf	(i1___xxtofl@val+2)
 10586  0D9B  00F2               	movwf	(i1___xxtofl@val+3)
 10587  0D9C  00F3               	movlw	low(01h)
 10588  0D9D  3001               	fcall	i1___xxtofl
 10589  0D9E  120A  158A  23B2  120A  158A  	movf	(3+(?i1___xxtofl)),w
 10590  0DA3  0873               	bcf	status, 5	;RP0=0, select bank0
 10591  0DA4  1283               	bcf	status, 6	;RP1=0, select bank0
 10592  0DA5  1303               	movwf	(i1___fladd@a+3)
 10593  0DA6  00A7               	movf	(2+(?i1___xxtofl)),w
 10594  0DA7  0872               	movwf	(i1___fladd@a+2)
 10595  0DA8  00A6               	movf	(1+(?i1___xxtofl)),w
 10596  0DA9  0871               	movwf	(i1___fladd@a+1)
 10597  0DAA  00A5               	movf	(0+(?i1___xxtofl)),w
 10598  0DAB  0870               	movwf	(i1___fladd@a)
 10599  0DAC  00A4               
 10600                           	movlw	0x41
 10601  0DAD  3041               	movwf	(i1___fladd@b+3)
 10602  0DAE  00A3               	movlw	0x23
 10603  0DAF  3023               	movwf	(i1___fladd@b+2)
 10604  0DB0  00A2               	movlw	0xae
 10605  0DB1  30AE               	movwf	(i1___fladd@b+1)
 10606  0DB2  00A1               	movlw	0x14
 10607  0DB3  3014               	movwf	(i1___fladd@b)
 10608  0DB4  00A0               
 10609                           	fcall	i1___fladd
 10610  0DB5  120A  118A  22E5  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10611  0DBA  1283               	bcf	status, 6	;RP1=0, select bank0
 10612  0DBB  1303               	movf	(3+(?i1___fladd)),w
 10613  0DBC  0823               	movwf	(i1___fltol@f1+3)
 10614  0DBD  00BB               	movf	(2+(?i1___fladd)),w
 10615  0DBE  0822               	movwf	(i1___fltol@f1+2)
 10616  0DBF  00BA               	movf	(1+(?i1___fladd)),w
 10617  0DC0  0821               	movwf	(i1___fltol@f1+1)
 10618  0DC1  00B9               	movf	(0+(?i1___fladd)),w
 10619  0DC2  0820               	movwf	(i1___fltol@f1)
 10620  0DC3  00B8               
 10621                           	fcall	i1___fltol
 10622  0DC4  120A  158A  227A  120A  158A  	bcf	status, 5	;RP0=0, select bank0
 10623  0DC9  1283               	bcf	status, 6	;RP1=0, select bank0
 10624  0DCA  1303               	movf	(1+(?i1___fltol)),w
 10625  0DCB  0839               	movwf	(i1is_deadzone@deadzoneHigh+1)
 10626  0DCC  00CC               	movf	(0+(?i1___fltol)),w
 10627  0DCD  0838               	movwf	(i1is_deadzone@deadzoneHigh)
 10628  0DCE  00CB               	line	62
 10629                           	
 10630                           i1l3084:	
 10631  0DCF                     ;Volume.c: 62:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
 10632                           	clrf	(i1_is_deadzone$899)
 10633  0DCF  01CD               	
 10634                           i1l3086:	
 10635  0DD0                     	movf	(i1is_deadzone@deadzoneLow+1),w
 10636  0DD0  084A               	xorlw	80h
 10637  0DD1  3A80               	movwf	(??i1_is_deadzone+0)+0
 10638  0DD2  00C7               	movf	(i1is_deadzone@adcResult+1),w
 10639  0DD3  0846               	xorlw	80h
 10640  0DD4  3A80               	subwf	(??i1_is_deadzone+0)+0,w
 10641  0DD5  0247               	skipz
 10642  0DD6  1D03               	goto	u411_25
 10643  0DD7  2DDA               	movf	(i1is_deadzone@adcResult),w
 10644  0DD8  0845               	subwf	(i1is_deadzone@deadzoneLow),w
 10645  0DD9  0249               u411_25:
 10646  0DDA                     
 10647                           	skipnc
 10648  0DDA  1803               	goto	u411_21
 10649  0DDB  2DDD               	goto	u411_20
 10650  0DDC  2DDE               u411_21:
 10651  0DDD                     	goto	i1l3092
 10652  0DDD  2DF3               u411_20:
 10653  0DDE                     	
 10654                           i1l3088:	
 10655  0DDE                     	bcf	status, 5	;RP0=0, select bank0
 10656  0DDE  1283               	bcf	status, 6	;RP1=0, select bank0
 10657  0DDF  1303               	movf	(i1is_deadzone@adcResult+1),w
 10658  0DE0  0846               	xorlw	80h
 10659  0DE1  3A80               	movwf	(??i1_is_deadzone+0)+0
 10660  0DE2  00C7               	movf	(i1is_deadzone@deadzoneHigh+1),w
 10661  0DE3  084C               	xorlw	80h
 10662  0DE4  3A80               	subwf	(??i1_is_deadzone+0)+0,w
 10663  0DE5  0247               	skipz
 10664  0DE6  1D03               	goto	u412_25
 10665  0DE7  2DEA               	movf	(i1is_deadzone@deadzoneHigh),w
 10666  0DE8  084B               	subwf	(i1is_deadzone@adcResult),w
 10667  0DE9  0245               u412_25:
 10668  0DEA                     
 10669                           	skipnc
 10670  0DEA  1803               	goto	u412_21
 10671  0DEB  2DED               	goto	u412_20
 10672  0DEC  2DEE               u412_21:
 10673  0DED                     	goto	i1l3092
 10674  0DED  2DF3               u412_20:
 10675  0DEE                     	
 10676                           i1l3090:	
 10677  0DEE                     	bcf	status, 5	;RP0=0, select bank0
 10678  0DEE  1283               	bcf	status, 6	;RP1=0, select bank0
 10679  0DEF  1303               	clrf	(i1_is_deadzone$899)
 10680  0DF0  01CD               	incf	(i1_is_deadzone$899),f
 10681  0DF1  0ACD               	goto	i1l3092
 10682  0DF2  2DF3               	
 10683                           i1l335:	
 10684  0DF3                     	
 10685                           i1l3092:	
 10686  0DF3                     	bcf	status, 5	;RP0=0, select bank0
 10687  0DF3  1283               	bcf	status, 6	;RP1=0, select bank0
 10688  0DF4  1303               	movf	(i1_is_deadzone$899),w
 10689  0DF5  084D               	movwf	(??i1_is_deadzone+0)+0
 10690  0DF6  00C7               	clrf	(??i1_is_deadzone+0)+0+1
 10691  0DF7  01C8               	movf	0+(??i1_is_deadzone+0)+0,w
 10692  0DF8  0847               	movwf	(?i1_is_deadzone)
 10693  0DF9  00C3               	movf	1+(??i1_is_deadzone+0)+0,w
 10694  0DFA  0848               	movwf	(?i1_is_deadzone+1)
 10695  0DFB  00C4               	goto	i1l336
 10696  0DFC  2DFD               	
 10697                           i1l3094:	
 10698  0DFD                     	line	63
 10699                           	
 10700                           i1l336:	
 10701  0DFD                     	return
 10702  0DFD  0008               	opt stack 0
 10703                           GLOBAL	__end_ofi1_is_deadzone
 10704                           	__end_ofi1_is_deadzone:
 10705  0DFE                     	signat	i1_is_deadzone,90
 10706                           	global	i1___xxtofl
 10707                           
 10708 ;; *************** function i1___xxtofl *****************
 10709 ;; Defined at:
 10710 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
 10711 ;; Parameters:    Size  Location     Type
 10712 ;;  sign            1    wreg     unsigned char 
 10713 ;;  val             4    0[COMMON] long 
 10714 ;; Auto vars:     Size  Location     Type
 10715 ;;  sign            1    8[COMMON] unsigned char 
 10716 ;;  __xxtofl        4   10[COMMON] unsigned long 
 10717 ;;  __xxtofl        1    9[COMMON] unsigned char 
 10718 ;; Return value:  Size  Location     Type
 10719 ;;                  4    0[COMMON] unsigned char 
 10720 ;; Registers used:
 10721 ;;		wreg, status,2, status,0
 10722 ;; Tracked objects:
 10723 ;;		On entry : 0/0
 10724 ;;		On exit  : 0/0
 10725 ;;		Unchanged: 0/0
 10726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10727 ;;      Params:         4       0       0       0       0
 10728 ;;      Locals:         6       0       0       0       0
 10729 ;;      Temps:          4       0       0       0       0
 10730 ;;      Totals:        14       0       0       0       0
 10731 ;;Total ram usage:       14 bytes
 10732 ;; Hardware stack levels used:    1
 10733 ;; This function calls:
 10734 ;;		Nothing
 10735 ;; This function is called by:
 10736 ;;		i1_is_deadzone
 10737 ;; This function uses a non-reentrant model
 10738 ;;
 10739                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 10740                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
 10741                           	line	10
 10742                           global __ptext32
 10743                           __ptext32:	;psect for function i1___xxtofl
 10744  0BB2                     psect	text32
 10745                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/xxtofl.c"
 10746                           	line	10
 10747                           	global	__size_ofi1___xxtofl
 10748                           	__size_ofi1___xxtofl	equ	__end_ofi1___xxtofl-i1___xxtofl
 10749  00C2                     	
 10750                           i1___xxtofl:	
 10751  0BB2                     ;incstack = 0
 10752 ;; hardware stack exceeded
 10753                           	opt	stack 0
 10754                           ; Regs used in i1___xxtofl: [wreg+status,2+status,0]
 10755                           ;i1___xxtofl@sign stored from wreg
 10756                           	movwf	(i1___xxtofl@sign)
 10757  0BB2  00F8               	line	15
 10758                           	
 10759                           i1l2946:	
 10760  0BB3                     	movf	((i1___xxtofl@sign)),w
 10761  0BB3  0878               	btfsc	status,2
 10762  0BB4  1903               	goto	u386_21
 10763  0BB5  2BB7               	goto	u386_20
 10764  0BB6  2BB8               u386_21:
 10765  0BB7                     	goto	i1l2952
 10766  0BB7  2BCC               u386_20:
 10767  0BB8                     	
 10768                           i1l2948:	
 10769  0BB8                     	btfss	(i1___xxtofl@val+3),7
 10770  0BB8  1FF3               	goto	u387_21
 10771  0BB9  2BBB               	goto	u387_20
 10772  0BBA  2BBC               u387_21:
 10773  0BBB                     	goto	i1l2952
 10774  0BBB  2BCC               u387_20:
 10775  0BBC                     	line	16
 10776                           	
 10777                           i1l2950:	
 10778  0BBC                     	comf	(i1___xxtofl@val)+0,w
 10779  0BBC  0970               	movwf	(i1___xxtofl@arg)
 10780  0BBD  00FA               	comf	(i1___xxtofl@val)+1,w
 10781  0BBE  0971               	movwf	(i1___xxtofl@arg+1)
 10782  0BBF  00FB               	comf	(i1___xxtofl@val)+2,w
 10783  0BC0  0972               	movwf	(i1___xxtofl@arg+2)
 10784  0BC1  00FC               	comf	(i1___xxtofl@val)+3,w
 10785  0BC2  0973               	movwf	(i1___xxtofl@arg+3)
 10786  0BC3  00FD               	incf	(i1___xxtofl@arg),f
 10787  0BC4  0AFA               	skipnz
 10788  0BC5  1903               	incf	(i1___xxtofl@arg+1),f
 10789  0BC6  0AFB               	skipnz
 10790  0BC7  1903               	incf	(i1___xxtofl@arg+2),f
 10791  0BC8  0AFC               	skipnz
 10792  0BC9  1903               	incf	(i1___xxtofl@arg+3),f
 10793  0BCA  0AFD               	line	17
 10794                           	goto	i1l911
 10795  0BCB  2BD4               	line	18
 10796                           	
 10797                           i1l910:	
 10798  0BCC                     	line	19
 10799                           	
 10800                           i1l2952:	
 10801  0BCC                     	movf	(i1___xxtofl@val+3),w
 10802  0BCC  0873               	movwf	(i1___xxtofl@arg+3)
 10803  0BCD  00FD               	movf	(i1___xxtofl@val+2),w
 10804  0BCE  0872               	movwf	(i1___xxtofl@arg+2)
 10805  0BCF  00FC               	movf	(i1___xxtofl@val+1),w
 10806  0BD0  0871               	movwf	(i1___xxtofl@arg+1)
 10807  0BD1  00FB               	movf	(i1___xxtofl@val),w
 10808  0BD2  0870               	movwf	(i1___xxtofl@arg)
 10809  0BD3  00FA               
 10810                           	line	20
 10811                           	
 10812                           i1l911:	
 10813  0BD4                     	line	21
 10814                           	movf	(i1___xxtofl@val+3),w
 10815  0BD4  0873               	iorwf	(i1___xxtofl@val+2),w
 10816  0BD5  0472               	iorwf	(i1___xxtofl@val+1),w
 10817  0BD6  0471               	iorwf	(i1___xxtofl@val),w
 10818  0BD7  0470               	skipz
 10819  0BD8  1D03               	goto	u388_21
 10820  0BD9  2BDB               	goto	u388_20
 10821  0BDA  2BDC               u388_21:
 10822  0BDB                     	goto	i1l2958
 10823  0BDB  2BE6               u388_20:
 10824  0BDC                     	line	22
 10825                           	
 10826                           i1l2954:	
 10827  0BDC                     	movlw	0x0
 10828  0BDC  3000               	movwf	(?i1___xxtofl+3)
 10829  0BDD  00F3               	movlw	0x0
 10830  0BDE  3000               	movwf	(?i1___xxtofl+2)
 10831  0BDF  00F2               	movlw	0x0
 10832  0BE0  3000               	movwf	(?i1___xxtofl+1)
 10833  0BE1  00F1               	movlw	0x0
 10834  0BE2  3000               	movwf	(?i1___xxtofl)
 10835  0BE3  00F0               
 10836                           	goto	i1l913
 10837  0BE4  2C73               	
 10838                           i1l2956:	
 10839  0BE5                     	goto	i1l913
 10840  0BE5  2C73               	
 10841                           i1l912:	
 10842  0BE6                     	line	23
 10843                           	
 10844                           i1l2958:	
 10845  0BE6                     	movlw	low(096h)
 10846  0BE6  3096               	movwf	(??i1___xxtofl+0)+0
 10847  0BE7  00F4               	movf	(??i1___xxtofl+0)+0,w
 10848  0BE8  0874               	movwf	(i1___xxtofl@exp)
 10849  0BE9  00F9               	line	24
 10850                           	goto	i1l2962
 10851  0BEA  2BF9               	
 10852                           i1l915:	
 10853  0BEB                     	line	25
 10854                           	
 10855                           i1l2960:	
 10856  0BEB                     	movlw	low(01h)
 10857  0BEB  3001               	movwf	(??i1___xxtofl+0)+0
 10858  0BEC  00F4               	movf	(??i1___xxtofl+0)+0,w
 10859  0BED  0874               	addwf	(i1___xxtofl@exp),f
 10860  0BEE  07F9               	line	26
 10861                           	movlw	01h
 10862  0BEF  3001               u389_25:
 10863  0BF0                     	clrc
 10864  0BF0  1003               	rrf	(i1___xxtofl@arg+3),f
 10865  0BF1  0CFD               	rrf	(i1___xxtofl@arg+2),f
 10866  0BF2  0CFC               	rrf	(i1___xxtofl@arg+1),f
 10867  0BF3  0CFB               	rrf	(i1___xxtofl@arg),f
 10868  0BF4  0CFA               	addlw	-1
 10869  0BF5  3EFF               	skipz
 10870  0BF6  1D03               	goto	u389_25
 10871  0BF7  2BF0               
 10872                           	goto	i1l2962
 10873  0BF8  2BF9               	line	27
 10874                           	
 10875                           i1l914:	
 10876  0BF9                     	line	24
 10877                           	
 10878                           i1l2962:	
 10879  0BF9                     	movlw	high highword(0FE000000h)
 10880  0BF9  30FE               	andwf	(i1___xxtofl@arg+3),w
 10881  0BFA  057D               	btfss	status,2
 10882  0BFB  1D03               	goto	u390_21
 10883  0BFC  2BFE               	goto	u390_20
 10884  0BFD  2BFF               u390_21:
 10885  0BFE                     	goto	i1l2960
 10886  0BFE  2BEB               u390_20:
 10887  0BFF                     	goto	i1l917
 10888  0BFF  2C1C               	
 10889                           i1l916:	
 10890  0C00                     	line	28
 10891                           	goto	i1l917
 10892  0C00  2C1C               	
 10893                           i1l918:	
 10894  0C01                     	line	29
 10895                           	
 10896                           i1l2964:	
 10897  0C01                     	movlw	low(01h)
 10898  0C01  3001               	movwf	(??i1___xxtofl+0)+0
 10899  0C02  00F4               	movf	(??i1___xxtofl+0)+0,w
 10900  0C03  0874               	addwf	(i1___xxtofl@exp),f
 10901  0C04  07F9               	line	30
 10902                           	
 10903                           i1l2966:	
 10904  0C05                     	movlw	01h
 10905  0C05  3001               	addwf	(i1___xxtofl@arg),f
 10906  0C06  07FA               	movlw	0
 10907  0C07  3000               	skipnc
 10908  0C08  1803               movlw 1
 10909  0C09  3001               	addwf	(i1___xxtofl@arg+1),f
 10910  0C0A  07FB               	movlw	0
 10911  0C0B  3000               	skipnc
 10912  0C0C  1803               movlw 1
 10913  0C0D  3001               	addwf	(i1___xxtofl@arg+2),f
 10914  0C0E  07FC               	movlw	0
 10915  0C0F  3000               	skipnc
 10916  0C10  1803               movlw 1
 10917  0C11  3001               	addwf	(i1___xxtofl@arg+3),f
 10918  0C12  07FD               	line	31
 10919                           	
 10920                           i1l2968:	
 10921  0C13                     	movlw	01h
 10922  0C13  3001               u391_25:
 10923  0C14                     	clrc
 10924  0C14  1003               	rrf	(i1___xxtofl@arg+3),f
 10925  0C15  0CFD               	rrf	(i1___xxtofl@arg+2),f
 10926  0C16  0CFC               	rrf	(i1___xxtofl@arg+1),f
 10927  0C17  0CFB               	rrf	(i1___xxtofl@arg),f
 10928  0C18  0CFA               	addlw	-1
 10929  0C19  3EFF               	skipz
 10930  0C1A  1D03               	goto	u391_25
 10931  0C1B  2C14               
 10932                           	line	32
 10933                           	
 10934                           i1l917:	
 10935  0C1C                     	line	28
 10936                           	movlw	high highword(0FF000000h)
 10937  0C1C  30FF               	andwf	(i1___xxtofl@arg+3),w
 10938  0C1D  057D               	btfss	status,2
 10939  0C1E  1D03               	goto	u392_21
 10940  0C1F  2C21               	goto	u392_20
 10941  0C20  2C22               u392_21:
 10942  0C21                     	goto	i1l2964
 10943  0C21  2C01               u392_20:
 10944  0C22                     	goto	i1l2972
 10945  0C22  2C30               	
 10946                           i1l919:	
 10947  0C23                     	line	33
 10948                           	goto	i1l2972
 10949  0C23  2C30               	
 10950                           i1l921:	
 10951  0C24                     	line	34
 10952                           	
 10953                           i1l2970:	
 10954  0C24                     	movlw	01h
 10955  0C24  3001               	subwf	(i1___xxtofl@exp),f
 10956  0C25  02F9               	line	35
 10957                           	movlw	01h
 10958  0C26  3001               	movwf	(??i1___xxtofl+0)+0
 10959  0C27  00F4               u393_25:
 10960  0C28                     	clrc
 10961  0C28  1003               	rlf	(i1___xxtofl@arg),f
 10962  0C29  0DFA               	rlf	(i1___xxtofl@arg+1),f
 10963  0C2A  0DFB               	rlf	(i1___xxtofl@arg+2),f
 10964  0C2B  0DFC               	rlf	(i1___xxtofl@arg+3),f
 10965  0C2C  0DFD               	decfsz	(??i1___xxtofl+0)+0
 10966  0C2D  0BF4               	goto	u393_25
 10967  0C2E  2C28               	goto	i1l2972
 10968  0C2F  2C30               	line	36
 10969                           	
 10970                           i1l920:	
 10971  0C30                     	line	33
 10972                           	
 10973                           i1l2972:	
 10974  0C30                     	btfsc	(i1___xxtofl@arg+2),(23)&7
 10975  0C30  1BFC               	goto	u394_21
 10976  0C31  2C33               	goto	u394_20
 10977  0C32  2C34               u394_21:
 10978  0C33                     	goto	i1l924
 10979  0C33  2C3B               u394_20:
 10980  0C34                     	
 10981                           i1l2974:	
 10982  0C34                     	movlw	low(02h)
 10983  0C34  3002               	subwf	(i1___xxtofl@exp),w
 10984  0C35  0279               	skipnc
 10985  0C36  1803               	goto	u395_21
 10986  0C37  2C39               	goto	u395_20
 10987  0C38  2C3A               u395_21:
 10988  0C39                     	goto	i1l2970
 10989  0C39  2C24               u395_20:
 10990  0C3A                     	goto	i1l924
 10991  0C3A  2C3B               	
 10992                           i1l923:	
 10993  0C3B                     	
 10994                           i1l924:	
 10995  0C3B                     	line	37
 10996                           	btfsc	(i1___xxtofl@exp),(0)&7
 10997  0C3B  1879               	goto	u396_21
 10998  0C3C  2C3E               	goto	u396_20
 10999  0C3D  2C3F               u396_21:
 11000  0C3E                     	goto	i1l925
 11001  0C3E  2C47               u396_20:
 11002  0C3F                     	line	38
 11003                           	
 11004                           i1l2976:	
 11005  0C3F                     	movlw	0FFh
 11006  0C3F  30FF               	andwf	(i1___xxtofl@arg),f
 11007  0C40  05FA               	movlw	0FFh
 11008  0C41  30FF               	andwf	(i1___xxtofl@arg+1),f
 11009  0C42  05FB               	movlw	07Fh
 11010  0C43  307F               	andwf	(i1___xxtofl@arg+2),f
 11011  0C44  05FC               	movlw	0FFh
 11012  0C45  30FF               	andwf	(i1___xxtofl@arg+3),f
 11013  0C46  05FD               	
 11014                           i1l925:	
 11015  0C47                     	line	39
 11016                           	clrc
 11017  0C47  1003               	rrf	(i1___xxtofl@exp),f
 11018  0C48  0CF9               
 11019                           	line	40
 11020                           	
 11021                           i1l2978:	
 11022  0C49                     	movf	(i1___xxtofl@exp),w
 11023  0C49  0879               	movwf	(??i1___xxtofl+0)+0
 11024  0C4A  00F4               	clrf	(??i1___xxtofl+0)+0+1
 11025  0C4B  01F5               	clrf	(??i1___xxtofl+0)+0+2
 11026  0C4C  01F6               	clrf	(??i1___xxtofl+0)+0+3
 11027  0C4D  01F7               	movlw	018h
 11028  0C4E  3018               u397_25:
 11029  0C4F                     	clrc
 11030  0C4F  1003               	rlf	(??i1___xxtofl+0)+0,f
 11031  0C50  0DF4               	rlf	(??i1___xxtofl+0)+1,f
 11032  0C51  0DF5               	rlf	(??i1___xxtofl+0)+2,f
 11033  0C52  0DF6               	rlf	(??i1___xxtofl+0)+3,f
 11034  0C53  0DF7               u397_20:
 11035  0C54                     	addlw	-1
 11036  0C54  3EFF               	skipz
 11037  0C55  1D03               	goto	u397_25
 11038  0C56  2C4F               	movf	0+(??i1___xxtofl+0)+0,w
 11039  0C57  0874               	iorwf	(i1___xxtofl@arg),f
 11040  0C58  04FA               	movf	1+(??i1___xxtofl+0)+0,w
 11041  0C59  0875               	iorwf	(i1___xxtofl@arg+1),f
 11042  0C5A  04FB               	movf	2+(??i1___xxtofl+0)+0,w
 11043  0C5B  0876               	iorwf	(i1___xxtofl@arg+2),f
 11044  0C5C  04FC               	movf	3+(??i1___xxtofl+0)+0,w
 11045  0C5D  0877               	iorwf	(i1___xxtofl@arg+3),f
 11046  0C5E  04FD               	line	41
 11047                           	
 11048                           i1l2980:	
 11049  0C5F                     	movf	((i1___xxtofl@sign)),w
 11050  0C5F  0878               	btfsc	status,2
 11051  0C60  1903               	goto	u398_21
 11052  0C61  2C63               	goto	u398_20
 11053  0C62  2C64               u398_21:
 11054  0C63                     	goto	i1l2986
 11055  0C63  2C6A               u398_20:
 11056  0C64                     	
 11057                           i1l2982:	
 11058  0C64                     	btfss	(i1___xxtofl@val+3),7
 11059  0C64  1FF3               	goto	u399_21
 11060  0C65  2C67               	goto	u399_20
 11061  0C66  2C68               u399_21:
 11062  0C67                     	goto	i1l2986
 11063  0C67  2C6A               u399_20:
 11064  0C68                     	line	42
 11065                           	
 11066                           i1l2984:	
 11067  0C68                     	bsf	(i1___xxtofl@arg)+(31/8),(31)&7
 11068  0C68  17FD               	goto	i1l2986
 11069  0C69  2C6A               	
 11070                           i1l926:	
 11071  0C6A                     	line	43
 11072                           	
 11073                           i1l2986:	
 11074  0C6A                     	movf	(i1___xxtofl@arg+3),w
 11075  0C6A  087D               	movwf	(?i1___xxtofl+3)
 11076  0C6B  00F3               	movf	(i1___xxtofl@arg+2),w
 11077  0C6C  087C               	movwf	(?i1___xxtofl+2)
 11078  0C6D  00F2               	movf	(i1___xxtofl@arg+1),w
 11079  0C6E  087B               	movwf	(?i1___xxtofl+1)
 11080  0C6F  00F1               	movf	(i1___xxtofl@arg),w
 11081  0C70  087A               	movwf	(?i1___xxtofl)
 11082  0C71  00F0               
 11083                           	goto	i1l913
 11084  0C72  2C73               	
 11085                           i1l2988:	
 11086  0C73                     	line	44
 11087                           	
 11088                           i1l913:	
 11089  0C73                     	return
 11090  0C73  0008               	opt stack 0
 11091                           GLOBAL	__end_ofi1___xxtofl
 11092                           	__end_ofi1___xxtofl:
 11093  0C74                     	signat	i1___xxtofl,92
 11094                           	global	i1___wmul
 11095                           
 11096 ;; *************** function i1___wmul *****************
 11097 ;; Defined at:
 11098 ;;		line 15 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
 11099 ;; Parameters:    Size  Location     Type
 11100 ;;  multiplier      2    0[COMMON] unsigned int 
 11101 ;;  multiplicand    2    2[COMMON] unsigned int 
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;  __wmul          2    4[COMMON] unsigned int 
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  2    0[COMMON] unsigned int 
 11106 ;; Registers used:
 11107 ;;		wreg, status,2, status,0
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11113 ;;      Params:         4       0       0       0       0
 11114 ;;      Locals:         2       0       0       0       0
 11115 ;;      Temps:          0       0       0       0       0
 11116 ;;      Totals:         6       0       0       0       0
 11117 ;;Total ram usage:        6 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; This function calls:
 11120 ;;		Nothing
 11121 ;; This function is called by:
 11122 ;;		i1_is_deadzone
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 11126                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
 11127                           	line	15
 11128                           global __ptext33
 11129                           __ptext33:	;psect for function i1___wmul
 11130  1356                     psect	text33
 11131                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/Umul16.c"
 11132                           	line	15
 11133                           	global	__size_ofi1___wmul
 11134                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
 11135  0028                     	
 11136                           i1___wmul:	
 11137  1356                     ;incstack = 0
 11138 ;; hardware stack exceeded
 11139                           	opt	stack 0
 11140                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 11141                           	line	43
 11142                           	
 11143                           i1l2702:	
 11144  1356                     	clrf	(i1___wmul@product)
 11145  1356  01F4               	clrf	(i1___wmul@product+1)
 11146  1357  01F5               	goto	i1l2704
 11147  1358  2B59               	line	44
 11148                           	
 11149                           i1l502:	
 11150  1359                     	line	45
 11151                           	
 11152                           i1l2704:	
 11153  1359                     	btfss	(i1___wmul@multiplier),(0)&7
 11154  1359  1C70               	goto	u326_21
 11155  135A  2B5C               	goto	u326_20
 11156  135B  2B5D               u326_21:
 11157  135C                     	goto	i1l503
 11158  135C  2B63               u326_20:
 11159  135D                     	line	46
 11160                           	
 11161                           i1l2706:	
 11162  135D                     	movf	(i1___wmul@multiplicand),w
 11163  135D  0872               	addwf	(i1___wmul@product),f
 11164  135E  07F4               	skipnc
 11165  135F  1803               	incf	(i1___wmul@product+1),f
 11166  1360  0AF5               	movf	(i1___wmul@multiplicand+1),w
 11167  1361  0873               	addwf	(i1___wmul@product+1),f
 11168  1362  07F5               	
 11169                           i1l503:	
 11170  1363                     	line	47
 11171                           	movlw	01h
 11172  1363  3001               	
 11173                           u327_25:
 11174  1364                     	clrc
 11175  1364  1003               	rlf	(i1___wmul@multiplicand),f
 11176  1365  0DF2               	rlf	(i1___wmul@multiplicand+1),f
 11177  1366  0DF3               	addlw	-1
 11178  1367  3EFF               	skipz
 11179  1368  1D03               	goto	u327_25
 11180  1369  2B64               	line	48
 11181                           	
 11182                           i1l2708:	
 11183  136A                     	movlw	01h
 11184  136A  3001               	
 11185                           u328_25:
 11186  136B                     	clrc
 11187  136B  1003               	rrf	(i1___wmul@multiplier+1),f
 11188  136C  0CF1               	rrf	(i1___wmul@multiplier),f
 11189  136D  0CF0               	addlw	-1
 11190  136E  3EFF               	skipz
 11191  136F  1D03               	goto	u328_25
 11192  1370  2B6B               	line	49
 11193                           	
 11194                           i1l2710:	
 11195  1371                     	movf	((i1___wmul@multiplier)),w
 11196  1371  0870               iorwf	((i1___wmul@multiplier+1)),w
 11197  1372  0471               	btfss	status,2
 11198  1373  1D03               	goto	u329_21
 11199  1374  2B76               	goto	u329_20
 11200  1375  2B77               u329_21:
 11201  1376                     	goto	i1l2704
 11202  1376  2B59               u329_20:
 11203  1377                     	goto	i1l2712
 11204  1377  2B78               	
 11205                           i1l504:	
 11206  1378                     	line	52
 11207                           	
 11208                           i1l2712:	
 11209  1378                     	movf	(i1___wmul@product+1),w
 11210  1378  0875               	movwf	(?i1___wmul+1)
 11211  1379  00F1               	movf	(i1___wmul@product),w
 11212  137A  0874               	movwf	(?i1___wmul)
 11213  137B  00F0               	goto	i1l505
 11214  137C  2B7D               	
 11215                           i1l2714:	
 11216  137D                     	line	53
 11217                           	
 11218                           i1l505:	
 11219  137D                     	return
 11220  137D  0008               	opt stack 0
 11221                           GLOBAL	__end_ofi1___wmul
 11222                           	__end_ofi1___wmul:
 11223  137E                     	signat	i1___wmul,90
 11224                           	global	i1___fltol
 11225                           
 11226 ;; *************** function i1___fltol *****************
 11227 ;; Defined at:
 11228 ;;		line 43 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  f1              4   24[BANK0 ] unsigned int 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  __fltol         1   34[BANK0 ] unsigned char 
 11233 ;;  __fltol         1   33[BANK0 ] unsigned char 
 11234 ;; Return value:  Size  Location     Type
 11235 ;;                  4   24[BANK0 ] long 
 11236 ;; Registers used:
 11237 ;;		wreg, status,2, status,0
 11238 ;; Tracked objects:
 11239 ;;		On entry : 0/0
 11240 ;;		On exit  : 0/0
 11241 ;;		Unchanged: 0/0
 11242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11243 ;;      Params:         0       4       0       0       0
 11244 ;;      Locals:         0       2       0       0       0
 11245 ;;      Temps:          0       5       0       0       0
 11246 ;;      Totals:         0      11       0       0       0
 11247 ;;Total ram usage:       11 bytes
 11248 ;; Hardware stack levels used:    1
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		i1_is_deadzone
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 11256                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
 11257                           	line	43
 11258                           global __ptext34
 11259                           __ptext34:	;psect for function i1___fltol
 11260  0A7A                     psect	text34
 11261                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/fltol.c"
 11262                           	line	43
 11263                           	global	__size_ofi1___fltol
 11264                           	__size_ofi1___fltol	equ	__end_ofi1___fltol-i1___fltol
 11265  009C                     	
 11266                           i1___fltol:	
 11267  0A7A                     ;incstack = 0
 11268 ;; hardware stack exceeded
 11269                           	opt	stack 0
 11270                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
 11271                           	line	47
 11272                           	
 11273                           i1l2716:	
 11274  0A7A                     	bcf	status, 5	;RP0=0, select bank0
 11275  0A7A  1283               	bcf	status, 6	;RP1=0, select bank0
 11276  0A7B  1303               	movf	(i1___fltol@f1),w
 11277  0A7C  0838               	movwf	(??i1___fltol+0)+0
 11278  0A7D  00BC               	movf	(i1___fltol@f1+1),w
 11279  0A7E  0839               	movwf	((??i1___fltol+0)+0+1)
 11280  0A7F  00BD               	movf	(i1___fltol@f1+2),w
 11281  0A80  083A               	movwf	((??i1___fltol+0)+0+2)
 11282  0A81  00BE               	movf	(i1___fltol@f1+3),w
 11283  0A82  083B               	movwf	((??i1___fltol+0)+0+3)
 11284  0A83  00BF               	clrc
 11285  0A84  1003               	rlf	(??i1___fltol+0)+2,w
 11286  0A85  0D3E               	rlf	(??i1___fltol+0)+3,w
 11287  0A86  0D3F               	movwf	(??i1___fltol+4)+0
 11288  0A87  00C0               	movf	(??i1___fltol+4)+0,w
 11289  0A88  0840               	movwf	(i1___fltol@exp1)
 11290  0A89  00C2               	movf	(((i1___fltol@exp1))),w
 11291  0A8A  0842               	btfss	status,2
 11292  0A8B  1D03               	goto	u330_21
 11293  0A8C  2A8E               	goto	u330_20
 11294  0A8D  2A8F               u330_21:
 11295  0A8E                     	goto	i1l2722
 11296  0A8E  2A99               u330_20:
 11297  0A8F                     	line	48
 11298                           	
 11299                           i1l2718:	
 11300  0A8F                     	movlw	high highword(0)
 11301  0A8F  3000               	movwf	(?i1___fltol+3)
 11302  0A90  00BB               	movlw	low highword(0)
 11303  0A91  3000               	movwf	(?i1___fltol+2)
 11304  0A92  00BA               	movlw	high(0)
 11305  0A93  3000               	movwf	(?i1___fltol+1)
 11306  0A94  00B9               	movlw	low(0)
 11307  0A95  3000               	movwf	(?i1___fltol)
 11308  0A96  00B8               
 11309                           	goto	i1l689
 11310  0A97  2B15               	
 11311                           i1l2720:	
 11312  0A98                     	goto	i1l689
 11313  0A98  2B15               	
 11314                           i1l688:	
 11315  0A99                     	line	49
 11316                           	
 11317                           i1l2722:	
 11318  0A99                     	movf	(i1___fltol@f1),w
 11319  0A99  0838               	movwf	(??i1___fltol+0)+0
 11320  0A9A  00BC               	movf	(i1___fltol@f1+1),w
 11321  0A9B  0839               	movwf	((??i1___fltol+0)+0+1)
 11322  0A9C  00BD               	movf	(i1___fltol@f1+2),w
 11323  0A9D  083A               	movwf	((??i1___fltol+0)+0+2)
 11324  0A9E  00BE               	movf	(i1___fltol@f1+3),w
 11325  0A9F  083B               	movwf	((??i1___fltol+0)+0+3)
 11326  0AA0  00BF               	movlw	01Fh
 11327  0AA1  301F               u331_25:
 11328  0AA2                     	clrc
 11329  0AA2  1003               	rrf	(??i1___fltol+0)+3,f
 11330  0AA3  0CBF               	rrf	(??i1___fltol+0)+2,f
 11331  0AA4  0CBE               	rrf	(??i1___fltol+0)+1,f
 11332  0AA5  0CBD               	rrf	(??i1___fltol+0)+0,f
 11333  0AA6  0CBC               u331_20:
 11334  0AA7                     	addlw	-1
 11335  0AA7  3EFF               	skipz
 11336  0AA8  1D03               	goto	u331_25
 11337  0AA9  2AA2               	movf	0+(??i1___fltol+0)+0,w
 11338  0AAA  083C               	movwf	(??i1___fltol+4)+0
 11339  0AAB  00C0               	movf	(??i1___fltol+4)+0,w
 11340  0AAC  0840               	movwf	(i1___fltol@sign1)
 11341  0AAD  00C1               	line	50
 11342                           	
 11343                           i1l2724:	
 11344  0AAE                     	bsf	(i1___fltol@f1)+(23/8),(23)&7
 11345  0AAE  17BA               	line	51
 11346                           	
 11347                           i1l2726:	
 11348  0AAF                     	movlw	0FFh
 11349  0AAF  30FF               	andwf	(i1___fltol@f1),f
 11350  0AB0  05B8               	movlw	0FFh
 11351  0AB1  30FF               	andwf	(i1___fltol@f1+1),f
 11352  0AB2  05B9               	movlw	0FFh
 11353  0AB3  30FF               	andwf	(i1___fltol@f1+2),f
 11354  0AB4  05BA               	movlw	0
 11355  0AB5  3000               	andwf	(i1___fltol@f1+3),f
 11356  0AB6  05BB               	line	52
 11357                           	
 11358                           i1l2728:	
 11359  0AB7                     	movlw	096h
 11360  0AB7  3096               	subwf	(i1___fltol@exp1),f
 11361  0AB8  02C2               	line	53
 11362                           	
 11363                           i1l2730:	
 11364  0AB9                     	btfss	(i1___fltol@exp1),7
 11365  0AB9  1FC2               	goto	u332_21
 11366  0ABA  2ABC               	goto	u332_20
 11367  0ABB  2ABD               u332_21:
 11368  0ABC                     	goto	i1l2740
 11369  0ABC  2AE2               u332_20:
 11370  0ABD                     	line	54
 11371                           	
 11372                           i1l2732:	
 11373  0ABD                     	movf	(i1___fltol@exp1),w
 11374  0ABD  0842               	xorlw	80h
 11375  0ABE  3A80               	addlw	-((-23)^80h)
 11376  0ABF  3E97               	skipnc
 11377  0AC0  1803               	goto	u333_21
 11378  0AC1  2AC3               	goto	u333_20
 11379  0AC2  2AC4               u333_21:
 11380  0AC3                     	goto	i1l2738
 11381  0AC3  2ACF               u333_20:
 11382  0AC4                     	line	55
 11383                           	
 11384                           i1l2734:	
 11385  0AC4                     	movlw	high highword(0)
 11386  0AC4  3000               	movwf	(?i1___fltol+3)
 11387  0AC5  00BB               	movlw	low highword(0)
 11388  0AC6  3000               	movwf	(?i1___fltol+2)
 11389  0AC7  00BA               	movlw	high(0)
 11390  0AC8  3000               	movwf	(?i1___fltol+1)
 11391  0AC9  00B9               	movlw	low(0)
 11392  0ACA  3000               	movwf	(?i1___fltol)
 11393  0ACB  00B8               
 11394                           	goto	i1l689
 11395  0ACC  2B15               	
 11396                           i1l2736:	
 11397  0ACD                     	goto	i1l689
 11398  0ACD  2B15               	
 11399                           i1l691:	
 11400  0ACE                     	goto	i1l2738
 11401  0ACE  2ACF               	line	56
 11402                           	
 11403                           i1l692:	
 11404  0ACF                     	line	57
 11405                           	
 11406                           i1l2738:	
 11407  0ACF                     	movlw	01h
 11408  0ACF  3001               u334_25:
 11409  0AD0                     	clrc
 11410  0AD0  1003               	rrf	(i1___fltol@f1+3),f
 11411  0AD1  0CBB               	rrf	(i1___fltol@f1+2),f
 11412  0AD2  0CBA               	rrf	(i1___fltol@f1+1),f
 11413  0AD3  0CB9               	rrf	(i1___fltol@f1),f
 11414  0AD4  0CB8               	addlw	-1
 11415  0AD5  3EFF               	skipz
 11416  0AD6  1D03               	goto	u334_25
 11417  0AD7  2AD0               
 11418                           	line	58
 11419                           	movlw	low(01h)
 11420  0AD8  3001               	movwf	(??i1___fltol+0)+0
 11421  0AD9  00BC               	movf	(??i1___fltol+0)+0,w
 11422  0ADA  083C               	addwf	(i1___fltol@exp1),f
 11423  0ADB  07C2               	btfss	status,2
 11424  0ADC  1D03               	goto	u335_21
 11425  0ADD  2ADF               	goto	u335_20
 11426  0ADE  2AE0               u335_21:
 11427  0ADF                     	goto	i1l2738
 11428  0ADF  2ACF               u335_20:
 11429  0AE0                     	goto	i1l2748
 11430  0AE0  2B05               	
 11431                           i1l693:	
 11432  0AE1                     	line	59
 11433                           	goto	i1l2748
 11434  0AE1  2B05               	
 11435                           i1l690:	
 11436  0AE2                     	line	60
 11437                           	
 11438                           i1l2740:	
 11439  0AE2                     	movlw	low(020h)
 11440  0AE2  3020               	subwf	(i1___fltol@exp1),w
 11441  0AE3  0242               	skipc
 11442  0AE4  1C03               	goto	u336_21
 11443  0AE5  2AE7               	goto	u336_20
 11444  0AE6  2AE8               u336_21:
 11445  0AE7                     	goto	i1l696
 11446  0AE7  2AFE               u336_20:
 11447  0AE8                     	line	61
 11448                           	
 11449                           i1l2742:	
 11450  0AE8                     	movlw	high highword(0)
 11451  0AE8  3000               	movwf	(?i1___fltol+3)
 11452  0AE9  00BB               	movlw	low highword(0)
 11453  0AEA  3000               	movwf	(?i1___fltol+2)
 11454  0AEB  00BA               	movlw	high(0)
 11455  0AEC  3000               	movwf	(?i1___fltol+1)
 11456  0AED  00B9               	movlw	low(0)
 11457  0AEE  3000               	movwf	(?i1___fltol)
 11458  0AEF  00B8               
 11459                           	goto	i1l689
 11460  0AF0  2B15               	
 11461                           i1l2744:	
 11462  0AF1                     	goto	i1l689
 11463  0AF1  2B15               	
 11464                           i1l695:	
 11465  0AF2                     	line	62
 11466                           	goto	i1l696
 11467  0AF2  2AFE               	
 11468                           i1l697:	
 11469  0AF3                     	line	63
 11470                           	
 11471                           i1l2746:	
 11472  0AF3                     	movlw	01h
 11473  0AF3  3001               	movwf	(??i1___fltol+0)+0
 11474  0AF4  00BC               u337_25:
 11475  0AF5                     	clrc
 11476  0AF5  1003               	rlf	(i1___fltol@f1),f
 11477  0AF6  0DB8               	rlf	(i1___fltol@f1+1),f
 11478  0AF7  0DB9               	rlf	(i1___fltol@f1+2),f
 11479  0AF8  0DBA               	rlf	(i1___fltol@f1+3),f
 11480  0AF9  0DBB               	decfsz	(??i1___fltol+0)+0
 11481  0AFA  0BBC               	goto	u337_25
 11482  0AFB  2AF5               	line	64
 11483                           	movlw	01h
 11484  0AFC  3001               	subwf	(i1___fltol@exp1),f
 11485  0AFD  02C2               	line	65
 11486                           	
 11487                           i1l696:	
 11488  0AFE                     	line	62
 11489                           	movf	((i1___fltol@exp1)),w
 11490  0AFE  0842               	btfss	status,2
 11491  0AFF  1D03               	goto	u338_21
 11492  0B00  2B02               	goto	u338_20
 11493  0B01  2B03               u338_21:
 11494  0B02                     	goto	i1l2746
 11495  0B02  2AF3               u338_20:
 11496  0B03                     	goto	i1l2748
 11497  0B03  2B05               	
 11498                           i1l698:	
 11499  0B04                     	goto	i1l2748
 11500  0B04  2B05               	line	66
 11501                           	
 11502                           i1l694:	
 11503  0B05                     	line	67
 11504                           	
 11505                           i1l2748:	
 11506  0B05                     	movf	((i1___fltol@sign1)),w
 11507  0B05  0841               	btfsc	status,2
 11508  0B06  1903               	goto	u339_21
 11509  0B07  2B09               	goto	u339_20
 11510  0B08  2B0A               u339_21:
 11511  0B09                     	goto	i1l699
 11512  0B09  2B15               u339_20:
 11513  0B0A                     	line	68
 11514                           	
 11515                           i1l2750:	
 11516  0B0A                     	comf	(i1___fltol@f1),f
 11517  0B0A  09B8               	comf	(i1___fltol@f1+1),f
 11518  0B0B  09B9               	comf	(i1___fltol@f1+2),f
 11519  0B0C  09BA               	comf	(i1___fltol@f1+3),f
 11520  0B0D  09BB               	incf	(i1___fltol@f1),f
 11521  0B0E  0AB8               	skipnz
 11522  0B0F  1903               	incf	(i1___fltol@f1+1),f
 11523  0B10  0AB9               	skipnz
 11524  0B11  1903               	incf	(i1___fltol@f1+2),f
 11525  0B12  0ABA               	skipnz
 11526  0B13  1903               	incf	(i1___fltol@f1+3),f
 11527  0B14  0ABB               	
 11528                           i1l699:	
 11529  0B15                     	line	69
 11530                           	line	70
 11531                           	
 11532                           i1l689:	
 11533  0B15                     	return
 11534  0B15  0008               	opt stack 0
 11535                           GLOBAL	__end_ofi1___fltol
 11536                           	__end_ofi1___fltol:
 11537  0B16                     	signat	i1___fltol,92
 11538                           	global	i1___fladd
 11539                           
 11540 ;; *************** function i1___fladd *****************
 11541 ;; Defined at:
 11542 ;;		line 10 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  b               4    0[BANK0 ] long 
 11545 ;;  a               4    4[BANK0 ] long 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  __fladd         1   23[BANK0 ] unsigned char 
 11548 ;;  __fladd         1   22[BANK0 ] unsigned char 
 11549 ;;  __fladd         1   21[BANK0 ] unsigned char 
 11550 ;;  __fladd         1   20[BANK0 ] unsigned char 
 11551 ;; Return value:  Size  Location     Type
 11552 ;;                  4    0[BANK0 ] unsigned char 
 11553 ;; Registers used:
 11554 ;;		wreg, status,2, status,0, btemp+1
 11555 ;; Tracked objects:
 11556 ;;		On entry : 0/0
 11557 ;;		On exit  : 0/0
 11558 ;;		Unchanged: 0/0
 11559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11560 ;;      Params:         0       8       0       0       0
 11561 ;;      Locals:         0       4       0       0       0
 11562 ;;      Temps:          0      12       0       0       0
 11563 ;;      Totals:         0      24       0       0       0
 11564 ;;Total ram usage:       24 bytes
 11565 ;; Hardware stack levels used:    1
 11566 ;; This function calls:
 11567 ;;		Nothing
 11568 ;; This function is called by:
 11569 ;;		i1_is_deadzone
 11570 ;; This function uses a non-reentrant model
 11571 ;;
 11572                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
 11573                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
 11574                           	line	10
 11575                           global __ptext35
 11576                           __ptext35:	;psect for function i1___fladd
 11577  02E5                     psect	text35
 11578                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/sprcadd.c"
 11579                           	line	10
 11580                           	global	__size_ofi1___fladd
 11581                           	__size_ofi1___fladd	equ	__end_ofi1___fladd-i1___fladd
 11582  02BC                     	
 11583                           i1___fladd:	
 11584  02E5                     ;incstack = 0
 11585 ;; hardware stack exceeded
 11586                           	opt	stack 0
 11587                           ; Regs used in i1___fladd: [wreg+status,2+status,0+btemp+1]
 11588                           	line	21
 11589                           	
 11590                           i1l2752:	
 11591  02E5                     	bcf	status, 5	;RP0=0, select bank0
 11592  02E5  1283               	bcf	status, 6	;RP1=0, select bank0
 11593  02E6  1303               	movf	0+(i1___fladd@b)+03h,w
 11594  02E7  0823               	andlw	080h
 11595  02E8  3980               	movwf	(??i1___fladd+0)+0
 11596  02E9  00A8               	movf	(??i1___fladd+0)+0,w
 11597  02EA  0828               	movwf	(i1___fladd@signs)
 11598  02EB  00B4               	line	22
 11599                           	
 11600                           i1l2754:	
 11601  02EC                     	movf	0+(i1___fladd@b)+03h,w
 11602  02EC  0823               	movwf	(??i1___fladd+0)+0
 11603  02ED  00A8               	addwf	(??i1___fladd+0)+0,w
 11604  02EE  0728               	movwf	(??i1___fladd+1)+0
 11605  02EF  00A9               	movf	(??i1___fladd+1)+0,w
 11606  02F0  0829               	movwf	(i1___fladd@bexp)
 11607  02F1  00B6               	line	23
 11608                           	
 11609                           i1l2756:	
 11610  02F2                     	btfss	0+(i1___fladd@b)+02h,(7)&7
 11611  02F2  1FA2               	goto	u340_21
 11612  02F3  2AF5               	goto	u340_20
 11613  02F4  2AF6               u340_21:
 11614  02F5                     	goto	i1l2760
 11615  02F5  2AF8               u340_20:
 11616  02F6                     	line	24
 11617                           	
 11618                           i1l2758:	
 11619  02F6                     	bsf	(i1___fladd@bexp)+(0/8),(0)&7
 11620  02F6  1436               	goto	i1l2760
 11621  02F7  2AF8               	line	25
 11622                           	
 11623                           i1l788:	
 11624  02F8                     	line	28
 11625                           	
 11626                           i1l2760:	
 11627  02F8                     	movf	((i1___fladd@bexp)),w
 11628  02F8  0836               	btfsc	status,2
 11629  02F9  1903               	goto	u341_21
 11630  02FA  2AFC               	goto	u341_20
 11631  02FB  2AFD               u341_21:
 11632  02FC                     	goto	i1l2770
 11633  02FC  2B0E               u341_20:
 11634  02FD                     	line	30
 11635                           	
 11636                           i1l2762:	
 11637  02FD                     		incf	((i1___fladd@bexp)),w
 11638  02FD  0A36               	btfss	status,2
 11639  02FE  1D03               	goto	u342_21
 11640  02FF  2B01               	goto	u342_20
 11641  0300  2B02               u342_21:
 11642  0301                     	goto	i1l2766
 11643  0301  2B0B               u342_20:
 11644  0302                     	line	32
 11645                           	
 11646                           i1l2764:	
 11647  0302                     	movlw	0x0
 11648  0302  3000               	movwf	(i1___fladd@b+3)
 11649  0303  00A3               	movlw	0x0
 11650  0304  3000               	movwf	(i1___fladd@b+2)
 11651  0305  00A2               	movlw	0x0
 11652  0306  3000               	movwf	(i1___fladd@b+1)
 11653  0307  00A1               	movlw	0x0
 11654  0308  3000               	movwf	(i1___fladd@b)
 11655  0309  00A0               
 11656                           	goto	i1l2766
 11657  030A  2B0B               	line	33
 11658                           	
 11659                           i1l790:	
 11660  030B                     	line	35
 11661                           	
 11662                           i1l2766:	
 11663  030B                     	bsf	(i1___fladd@b)+(23/8),(23)&7
 11664  030B  17A2               	line	37
 11665                           	
 11666                           i1l2768:	
 11667  030C                     	clrf	0+(i1___fladd@b)+03h
 11668  030C  01A3               	line	38
 11669                           	goto	i1l2772
 11670  030D  2B17               	line	39
 11671                           	
 11672                           i1l789:	
 11673  030E                     	line	41
 11674                           	
 11675                           i1l2770:	
 11676  030E                     	movlw	0x0
 11677  030E  3000               	movwf	(i1___fladd@b+3)
 11678  030F  00A3               	movlw	0x0
 11679  0310  3000               	movwf	(i1___fladd@b+2)
 11680  0311  00A2               	movlw	0x0
 11681  0312  3000               	movwf	(i1___fladd@b+1)
 11682  0313  00A1               	movlw	0x0
 11683  0314  3000               	movwf	(i1___fladd@b)
 11684  0315  00A0               
 11685                           	goto	i1l2772
 11686  0316  2B17               	line	42
 11687                           	
 11688                           i1l791:	
 11689  0317                     	line	44
 11690                           	
 11691                           i1l2772:	
 11692  0317                     	movf	0+(i1___fladd@a)+03h,w
 11693  0317  0827               	andlw	080h
 11694  0318  3980               	movwf	(??i1___fladd+0)+0
 11695  0319  00A8               	movf	(??i1___fladd+0)+0,w
 11696  031A  0828               	movwf	(i1___fladd@aexp)
 11697  031B  00B5               	line	46
 11698                           	
 11699                           i1l2774:	
 11700  031C                     	movf	(i1___fladd@aexp),w
 11701  031C  0835               	xorwf	(i1___fladd@signs),w
 11702  031D  0634               	skipnz
 11703  031E  1903               	goto	u343_21
 11704  031F  2B21               	goto	u343_20
 11705  0320  2B22               u343_21:
 11706  0321                     	goto	i1l2778
 11707  0321  2B24               u343_20:
 11708  0322                     	line	47
 11709                           	
 11710                           i1l2776:	
 11711  0322                     	bsf	(i1___fladd@signs)+(6/8),(6)&7
 11712  0322  1734               	goto	i1l2778
 11713  0323  2B24               	line	48
 11714                           	
 11715                           i1l792:	
 11716  0324                     	line	49
 11717                           	
 11718                           i1l2778:	
 11719  0324                     	movf	0+(i1___fladd@a)+03h,w
 11720  0324  0827               	movwf	(??i1___fladd+0)+0
 11721  0325  00A8               	addwf	(??i1___fladd+0)+0,w
 11722  0326  0728               	movwf	(??i1___fladd+1)+0
 11723  0327  00A9               	movf	(??i1___fladd+1)+0,w
 11724  0328  0829               	movwf	(i1___fladd@aexp)
 11725  0329  00B5               	line	50
 11726                           	
 11727                           i1l2780:	
 11728  032A                     	btfss	0+(i1___fladd@a)+02h,(7)&7
 11729  032A  1FA6               	goto	u344_21
 11730  032B  2B2D               	goto	u344_20
 11731  032C  2B2E               u344_21:
 11732  032D                     	goto	i1l2784
 11733  032D  2B30               u344_20:
 11734  032E                     	line	51
 11735                           	
 11736                           i1l2782:	
 11737  032E                     	bsf	(i1___fladd@aexp)+(0/8),(0)&7
 11738  032E  1435               	goto	i1l2784
 11739  032F  2B30               	line	52
 11740                           	
 11741                           i1l793:	
 11742  0330                     	line	55
 11743                           	
 11744                           i1l2784:	
 11745  0330                     	movf	((i1___fladd@aexp)),w
 11746  0330  0835               	btfsc	status,2
 11747  0331  1903               	goto	u345_21
 11748  0332  2B34               	goto	u345_20
 11749  0333  2B35               u345_21:
 11750  0334                     	goto	i1l2794
 11751  0334  2B46               u345_20:
 11752  0335                     	line	57
 11753                           	
 11754                           i1l2786:	
 11755  0335                     		incf	((i1___fladd@aexp)),w
 11756  0335  0A35               	btfss	status,2
 11757  0336  1D03               	goto	u346_21
 11758  0337  2B39               	goto	u346_20
 11759  0338  2B3A               u346_21:
 11760  0339                     	goto	i1l2790
 11761  0339  2B43               u346_20:
 11762  033A                     	line	59
 11763                           	
 11764                           i1l2788:	
 11765  033A                     	movlw	0x0
 11766  033A  3000               	movwf	(i1___fladd@a+3)
 11767  033B  00A7               	movlw	0x0
 11768  033C  3000               	movwf	(i1___fladd@a+2)
 11769  033D  00A6               	movlw	0x0
 11770  033E  3000               	movwf	(i1___fladd@a+1)
 11771  033F  00A5               	movlw	0x0
 11772  0340  3000               	movwf	(i1___fladd@a)
 11773  0341  00A4               
 11774                           	goto	i1l2790
 11775  0342  2B43               	line	60
 11776                           	
 11777                           i1l795:	
 11778  0343                     	line	62
 11779                           	
 11780                           i1l2790:	
 11781  0343                     	bsf	(i1___fladd@a)+(23/8),(23)&7
 11782  0343  17A6               	line	64
 11783                           	
 11784                           i1l2792:	
 11785  0344                     	clrf	0+(i1___fladd@a)+03h
 11786  0344  01A7               	line	65
 11787                           	goto	i1l796
 11788  0345  2B4E               	line	66
 11789                           	
 11790                           i1l794:	
 11791  0346                     	line	68
 11792                           	
 11793                           i1l2794:	
 11794  0346                     	movlw	0x0
 11795  0346  3000               	movwf	(i1___fladd@a+3)
 11796  0347  00A7               	movlw	0x0
 11797  0348  3000               	movwf	(i1___fladd@a+2)
 11798  0349  00A6               	movlw	0x0
 11799  034A  3000               	movwf	(i1___fladd@a+1)
 11800  034B  00A5               	movlw	0x0
 11801  034C  3000               	movwf	(i1___fladd@a)
 11802  034D  00A4               
 11803                           	line	69
 11804                           	
 11805                           i1l796:	
 11806  034E                     	line	75
 11807                           	movf	(i1___fladd@bexp),w
 11808  034E  0836               	subwf	(i1___fladd@aexp),w
 11809  034F  0235               	skipnc
 11810  0350  1803               	goto	u347_21
 11811  0351  2B53               	goto	u347_20
 11812  0352  2B54               u347_21:
 11813  0353                     	goto	i1l2830
 11814  0353  2B9A               u347_20:
 11815  0354                     	line	77
 11816                           	
 11817                           i1l2796:	
 11818  0354                     	btfss	(i1___fladd@signs),(6)&7
 11819  0354  1F34               	goto	u348_21
 11820  0355  2B57               	goto	u348_20
 11821  0356  2B58               u348_21:
 11822  0357                     	goto	i1l2800
 11823  0357  2B5D               u348_20:
 11824  0358                     	line	78
 11825                           	
 11826                           i1l2798:	
 11827  0358                     	movlw	low(080h)
 11828  0358  3080               	movwf	(??i1___fladd+0)+0
 11829  0359  00A8               	movf	(??i1___fladd+0)+0,w
 11830  035A  0828               	xorwf	(i1___fladd@signs),f
 11831  035B  06B4               	goto	i1l2800
 11832  035C  2B5D               	line	79
 11833                           	
 11834                           i1l798:	
 11835  035D                     	line	81
 11836                           	
 11837                           i1l2800:	
 11838  035D                     	movf	(i1___fladd@bexp),w
 11839  035D  0836               	movwf	(??i1___fladd+0)+0
 11840  035E  00A8               	movf	(??i1___fladd+0)+0,w
 11841  035F  0828               	movwf	(i1___fladd@grs)
 11842  0360  00B7               	line	82
 11843                           	
 11844                           i1l2802:	
 11845  0361                     	movf	(i1___fladd@aexp),w
 11846  0361  0835               	movwf	(??i1___fladd+0)+0
 11847  0362  00A8               	movf	(??i1___fladd+0)+0,w
 11848  0363  0828               	movwf	(i1___fladd@bexp)
 11849  0364  00B6               	line	83
 11850                           	
 11851                           i1l2804:	
 11852  0365                     	movf	(i1___fladd@grs),w
 11853  0365  0837               	movwf	(??i1___fladd+0)+0
 11854  0366  00A8               	movf	(??i1___fladd+0)+0,w
 11855  0367  0828               	movwf	(i1___fladd@aexp)
 11856  0368  00B5               	line	84
 11857                           	
 11858                           i1l2806:	
 11859  0369                     	movf	(i1___fladd@b),w
 11860  0369  0820               	movwf	(??i1___fladd+0)+0
 11861  036A  00A8               	movf	(??i1___fladd+0)+0,w
 11862  036B  0828               	movwf	(i1___fladd@grs)
 11863  036C  00B7               	line	85
 11864                           	
 11865                           i1l2808:	
 11866  036D                     	movf	(i1___fladd@a),w
 11867  036D  0824               	movwf	(??i1___fladd+0)+0
 11868  036E  00A8               	movf	(??i1___fladd+0)+0,w
 11869  036F  0828               	movwf	(i1___fladd@b)
 11870  0370  00A0               	line	86
 11871                           	
 11872                           i1l2810:	
 11873  0371                     	movf	(i1___fladd@grs),w
 11874  0371  0837               	movwf	(??i1___fladd+0)+0
 11875  0372  00A8               	movf	(??i1___fladd+0)+0,w
 11876  0373  0828               	movwf	(i1___fladd@a)
 11877  0374  00A4               	line	87
 11878                           	
 11879                           i1l2812:	
 11880  0375                     	movf	0+(i1___fladd@b)+01h,w
 11881  0375  0821               	movwf	(??i1___fladd+0)+0
 11882  0376  00A8               	movf	(??i1___fladd+0)+0,w
 11883  0377  0828               	movwf	(i1___fladd@grs)
 11884  0378  00B7               	line	88
 11885                           	
 11886                           i1l2814:	
 11887  0379                     	movf	0+(i1___fladd@a)+01h,w
 11888  0379  0825               	movwf	(??i1___fladd+0)+0
 11889  037A  00A8               	movf	(??i1___fladd+0)+0,w
 11890  037B  0828               	movwf	0+(i1___fladd@b)+01h
 11891  037C  00A1               	line	89
 11892                           	
 11893                           i1l2816:	
 11894  037D                     	movf	(i1___fladd@grs),w
 11895  037D  0837               	movwf	(??i1___fladd+0)+0
 11896  037E  00A8               	movf	(??i1___fladd+0)+0,w
 11897  037F  0828               	movwf	0+(i1___fladd@a)+01h
 11898  0380  00A5               	line	90
 11899                           	
 11900                           i1l2818:	
 11901  0381                     	movf	0+(i1___fladd@b)+02h,w
 11902  0381  0822               	movwf	(??i1___fladd+0)+0
 11903  0382  00A8               	movf	(??i1___fladd+0)+0,w
 11904  0383  0828               	movwf	(i1___fladd@grs)
 11905  0384  00B7               	line	91
 11906                           	
 11907                           i1l2820:	
 11908  0385                     	movf	0+(i1___fladd@a)+02h,w
 11909  0385  0826               	movwf	(??i1___fladd+0)+0
 11910  0386  00A8               	movf	(??i1___fladd+0)+0,w
 11911  0387  0828               	movwf	0+(i1___fladd@b)+02h
 11912  0388  00A2               	line	92
 11913                           	
 11914                           i1l2822:	
 11915  0389                     	movf	(i1___fladd@grs),w
 11916  0389  0837               	movwf	(??i1___fladd+0)+0
 11917  038A  00A8               	movf	(??i1___fladd+0)+0,w
 11918  038B  0828               	movwf	0+(i1___fladd@a)+02h
 11919  038C  00A6               	line	93
 11920                           	
 11921                           i1l2824:	
 11922  038D                     	movf	0+(i1___fladd@b)+03h,w
 11923  038D  0823               	movwf	(??i1___fladd+0)+0
 11924  038E  00A8               	movf	(??i1___fladd+0)+0,w
 11925  038F  0828               	movwf	(i1___fladd@grs)
 11926  0390  00B7               	line	94
 11927                           	
 11928                           i1l2826:	
 11929  0391                     	movf	0+(i1___fladd@a)+03h,w
 11930  0391  0827               	movwf	(??i1___fladd+0)+0
 11931  0392  00A8               	movf	(??i1___fladd+0)+0,w
 11932  0393  0828               	movwf	0+(i1___fladd@b)+03h
 11933  0394  00A3               	line	95
 11934                           	
 11935                           i1l2828:	
 11936  0395                     	movf	(i1___fladd@grs),w
 11937  0395  0837               	movwf	(??i1___fladd+0)+0
 11938  0396  00A8               	movf	(??i1___fladd+0)+0,w
 11939  0397  0828               	movwf	0+(i1___fladd@a)+03h
 11940  0398  00A7               	goto	i1l2830
 11941  0399  2B9A               	line	96
 11942                           	
 11943                           i1l797:	
 11944  039A                     	line	98
 11945                           	
 11946                           i1l2830:	
 11947  039A                     	clrf	(i1___fladd@grs)
 11948  039A  01B7               	line	100
 11949                           	
 11950                           i1l2832:	
 11951  039B                     	movf	(i1___fladd@bexp),w
 11952  039B  0836               	movwf	(??i1___fladd+0)+0
 11953  039C  00A8               	clrf	(??i1___fladd+0)+0+1
 11954  039D  01A9               	comf	(??i1___fladd+0)+0,f
 11955  039E  09A8               	comf	(??i1___fladd+0)+1,f
 11956  039F  09A9               	incf	(??i1___fladd+0)+0,f
 11957  03A0  0AA8               	skipnz
 11958  03A1  1903               	incf	(??i1___fladd+0)+1,f
 11959  03A2  0AA9               	movf	(i1___fladd@aexp),w
 11960  03A3  0835               	addwf	0+(??i1___fladd+0)+0,w
 11961  03A4  0728               	movwf	(??i1___fladd+2)+0
 11962  03A5  00AA               	movf	1+(??i1___fladd+0)+0,w
 11963  03A6  0829               	skipnc
 11964  03A7  1803               	incf	1+(??i1___fladd+0)+0,w
 11965  03A8  0A29               	movwf	((??i1___fladd+2)+0)+1
 11966  03A9  00AB               	movf	1+(??i1___fladd+2)+0,w
 11967  03AA  082B               	xorlw	80h
 11968  03AB  3A80               	movwf	btemp+1
 11969  03AC  00FF               	movlw	(0)^80h
 11970  03AD  3080               	subwf	btemp+1,w
 11971  03AE  027F               	skipz
 11972  03AF  1D03               	goto	u349_25
 11973  03B0  2BB3               	movlw	01Ah
 11974  03B1  301A               	subwf	0+(??i1___fladd+2)+0,w
 11975  03B2  022A               u349_25:
 11976  03B3                     
 11977                           	skipc
 11978  03B3  1C03               	goto	u349_21
 11979  03B4  2BB6               	goto	u349_20
 11980  03B5  2BB7               u349_21:
 11981  03B6                     	goto	i1l2848
 11982  03B6  2BF8               u349_20:
 11983  03B7                     	line	101
 11984                           	
 11985                           i1l2834:	
 11986  03B7                     	bcf	status, 5	;RP0=0, select bank0
 11987  03B7  1283               	bcf	status, 6	;RP1=0, select bank0
 11988  03B8  1303               	movf	(i1___fladd@b+3),w
 11989  03B9  0823               	iorwf	(i1___fladd@b+2),w
 11990  03BA  0422               	iorwf	(i1___fladd@b+1),w
 11991  03BB  0421               	iorwf	(i1___fladd@b),w
 11992  03BC  0420               	skipz
 11993  03BD  1D03               	goto	u350_21
 11994  03BE  2BC0               	goto	u350_20
 11995  03BF  2BC2               u350_21:
 11996  03C0                     	movlw	1
 11997  03C0  3001               	goto	u351_20
 11998  03C1  2BC3               u350_20:
 11999  03C2                     	movlw	0
 12000  03C2  3000               u351_20:
 12001  03C3                     	movwf	(??i1___fladd+0)+0
 12002  03C3  00A8               	movf	(??i1___fladd+0)+0,w
 12003  03C4  0828               	movwf	(i1___fladd@grs)
 12004  03C5  00B7               	line	102
 12005                           	movlw	high highword(0)
 12006  03C6  3000               	movwf	(i1___fladd@b+3)
 12007  03C7  00A3               	movlw	low highword(0)
 12008  03C8  3000               	movwf	(i1___fladd@b+2)
 12009  03C9  00A2               	movlw	high(0)
 12010  03CA  3000               	movwf	(i1___fladd@b+1)
 12011  03CB  00A1               	movlw	low(0)
 12012  03CC  3000               	movwf	(i1___fladd@b)
 12013  03CD  00A0               
 12014                           	line	103
 12015                           	movf	(i1___fladd@aexp),w
 12016  03CE  0835               	movwf	(??i1___fladd+0)+0
 12017  03CF  00A8               	movf	(??i1___fladd+0)+0,w
 12018  03D0  0828               	movwf	(i1___fladd@bexp)
 12019  03D1  00B6               	line	104
 12020                           	goto	i1l800
 12021  03D2  2C01               	line	105
 12022                           	
 12023                           i1l799:	
 12024  03D3                     	line	106
 12025                           	goto	i1l2848
 12026  03D3  2BF8               	
 12027                           i1l802:	
 12028  03D4                     	line	109
 12029                           	btfss	(i1___fladd@grs),(0)&7
 12030  03D4  1C37               	goto	u352_21
 12031  03D5  2BD7               	goto	u352_20
 12032  03D6  2BD8               u352_21:
 12033  03D7                     	goto	i1l2838
 12034  03D7  2BE1               u352_20:
 12035  03D8                     	line	110
 12036                           	
 12037                           i1l2836:	
 12038  03D8                     	movf	(i1___fladd@grs),w
 12039  03D8  0837               	movwf	(??i1___fladd+0)+0
 12040  03D9  00A8               	clrc
 12041  03DA  1003               	rrf	(??i1___fladd+0)+0,w
 12042  03DB  0C28               	iorlw	01h
 12043  03DC  3801               	movwf	(??i1___fladd+1)+0
 12044  03DD  00A9               	movf	(??i1___fladd+1)+0,w
 12045  03DE  0829               	movwf	(i1___fladd@grs)
 12046  03DF  00B7               	line	111
 12047                           	goto	i1l2840
 12048  03E0  2BE4               	line	112
 12049                           	
 12050                           i1l803:	
 12051  03E1                     	line	113
 12052                           	
 12053                           i1l2838:	
 12054  03E1                     	clrc
 12055  03E1  1003               	rrf	(i1___fladd@grs),f
 12056  03E2  0CB7               
 12057                           	goto	i1l2840
 12058  03E3  2BE4               	line	114
 12059                           	
 12060                           i1l804:	
 12061  03E4                     	line	115
 12062                           	
 12063                           i1l2840:	
 12064  03E4                     	btfss	(i1___fladd@b),(0)&7
 12065  03E4  1C20               	goto	u353_21
 12066  03E5  2BE7               	goto	u353_20
 12067  03E6  2BE8               u353_21:
 12068  03E7                     	goto	i1l2844
 12069  03E7  2BEA               u353_20:
 12070  03E8                     	line	116
 12071                           	
 12072                           i1l2842:	
 12073  03E8                     	bsf	(i1___fladd@grs)+(7/8),(7)&7
 12074  03E8  17B7               	goto	i1l2844
 12075  03E9  2BEA               	line	117
 12076                           	
 12077                           i1l805:	
 12078  03EA                     	line	118
 12079                           	
 12080                           i1l2844:	
 12081  03EA                     	movlw	01h
 12082  03EA  3001               	movwf	(??i1___fladd+0)+0
 12083  03EB  00A8               u354_25:
 12084  03EC                     	rlf	(i1___fladd@b+3),w
 12085  03EC  0D23               	rrf	(i1___fladd@b+3),f
 12086  03ED  0CA3               	rrf	(i1___fladd@b+2),f
 12087  03EE  0CA2               	rrf	(i1___fladd@b+1),f
 12088  03EF  0CA1               	rrf	(i1___fladd@b),f
 12089  03F0  0CA0               	decfsz	(??i1___fladd+0)+0&07fh,f
 12090  03F1  0BA8               	goto	u354_25
 12091  03F2  2BEC               
 12092                           	line	119
 12093                           	
 12094                           i1l2846:	
 12095  03F3                     	movlw	low(01h)
 12096  03F3  3001               	movwf	(??i1___fladd+0)+0
 12097  03F4  00A8               	movf	(??i1___fladd+0)+0,w
 12098  03F5  0828               	addwf	(i1___fladd@bexp),f
 12099  03F6  07B6               	goto	i1l2848
 12100  03F7  2BF8               	line	120
 12101                           	
 12102                           i1l801:	
 12103  03F8                     	line	106
 12104                           	
 12105                           i1l2848:	
 12106  03F8                     	bcf	status, 5	;RP0=0, select bank0
 12107  03F8  1283               	bcf	status, 6	;RP1=0, select bank0
 12108  03F9  1303               	movf	(i1___fladd@aexp),w
 12109  03FA  0835               	subwf	(i1___fladd@bexp),w
 12110  03FB  0236               	skipc
 12111  03FC  1C03               	goto	u355_21
 12112  03FD  2BFF               	goto	u355_20
 12113  03FE  2C00               u355_21:
 12114  03FF                     	goto	i1l802
 12115  03FF  2BD4               u355_20:
 12116  0400                     	goto	i1l800
 12117  0400  2C01               	
 12118                           i1l806:	
 12119  0401                     	line	121
 12120                           	
 12121                           i1l800:	
 12122  0401                     	line	124
 12123                           	btfsc	(i1___fladd@signs),(6)&7
 12124  0401  1B34               	goto	u356_21
 12125  0402  2C04               	goto	u356_20
 12126  0403  2C05               u356_21:
 12127  0404                     	goto	i1l2874
 12128  0404  2C54               u356_20:
 12129  0405                     	line	127
 12130                           	
 12131                           i1l2850:	
 12132  0405                     	movf	((i1___fladd@bexp)),w
 12133  0405  0836               	btfss	status,2
 12134  0406  1D03               	goto	u357_21
 12135  0407  2C09               	goto	u357_20
 12136  0408  2C0A               u357_21:
 12137  0409                     	goto	i1l2856
 12138  0409  2C14               u357_20:
 12139  040A                     	line	128
 12140                           	
 12141                           i1l2852:	
 12142  040A                     	movlw	0x0
 12143  040A  3000               	movwf	(?i1___fladd+3)
 12144  040B  00A3               	movlw	0x0
 12145  040C  3000               	movwf	(?i1___fladd+2)
 12146  040D  00A2               	movlw	0x0
 12147  040E  3000               	movwf	(?i1___fladd+1)
 12148  040F  00A1               	movlw	0x0
 12149  0410  3000               	movwf	(?i1___fladd)
 12150  0411  00A0               
 12151                           	goto	i1l809
 12152  0412  2DA0               	
 12153                           i1l2854:	
 12154  0413                     	goto	i1l809
 12155  0413  2DA0               	line	129
 12156                           	
 12157                           i1l808:	
 12158  0414                     	line	132
 12159                           	
 12160                           i1l2856:	
 12161  0414                     	movf	(i1___fladd@a),w
 12162  0414  0824               	addwf	(i1___fladd@b),f
 12163  0415  07A0               	movf	(i1___fladd@a+1),w
 12164  0416  0825               	clrz
 12165  0417  1103               	skipnc
 12166  0418  1803               	addlw	1
 12167  0419  3E01               	skipnz
 12168  041A  1903               	goto	u358_21
 12169  041B  2C1D               	addwf	(i1___fladd@b+1),f
 12170  041C  07A1               u358_21:
 12171  041D                     	movf	(i1___fladd@a+2),w
 12172  041D  0826               	clrz
 12173  041E  1103               	skipnc
 12174  041F  1803               	addlw	1
 12175  0420  3E01               	skipnz
 12176  0421  1903               	goto	u358_22
 12177  0422  2C24               	addwf	(i1___fladd@b+2),f
 12178  0423  07A2               u358_22:
 12179  0424                     	movf	(i1___fladd@a+3),w
 12180  0424  0827               	clrz
 12181  0425  1103               	skipnc
 12182  0426  1803               	addlw	1
 12183  0427  3E01               	skipnz
 12184  0428  1903               	goto	u358_23
 12185  0429  2C2B               	addwf	(i1___fladd@b+3),f
 12186  042A  07A3               u358_23:
 12187  042B                     
 12188                           	line	134
 12189                           	
 12190                           i1l2858:	
 12191  042B                     	btfss	(i1___fladd@b+3),(24)&7
 12192  042B  1C23               	goto	u359_21
 12193  042C  2C2E               	goto	u359_20
 12194  042D  2C2F               u359_21:
 12195  042E                     	goto	i1l2908
 12196  042E  2D1D               u359_20:
 12197  042F                     	line	135
 12198                           	
 12199                           i1l2860:	
 12200  042F                     	btfss	(i1___fladd@grs),(0)&7
 12201  042F  1C37               	goto	u360_21
 12202  0430  2C32               	goto	u360_20
 12203  0431  2C33               u360_21:
 12204  0432                     	goto	i1l2864
 12205  0432  2C3C               u360_20:
 12206  0433                     	line	136
 12207                           	
 12208                           i1l2862:	
 12209  0433                     	movf	(i1___fladd@grs),w
 12210  0433  0837               	movwf	(??i1___fladd+0)+0
 12211  0434  00A8               	clrc
 12212  0435  1003               	rrf	(??i1___fladd+0)+0,w
 12213  0436  0C28               	iorlw	01h
 12214  0437  3801               	movwf	(??i1___fladd+1)+0
 12215  0438  00A9               	movf	(??i1___fladd+1)+0,w
 12216  0439  0829               	movwf	(i1___fladd@grs)
 12217  043A  00B7               	line	137
 12218                           	goto	i1l2866
 12219  043B  2C3F               	line	138
 12220                           	
 12221                           i1l811:	
 12222  043C                     	line	139
 12223                           	
 12224                           i1l2864:	
 12225  043C                     	clrc
 12226  043C  1003               	rrf	(i1___fladd@grs),f
 12227  043D  0CB7               
 12228                           	goto	i1l2866
 12229  043E  2C3F               	line	140
 12230                           	
 12231                           i1l812:	
 12232  043F                     	line	141
 12233                           	
 12234                           i1l2866:	
 12235  043F                     	btfss	(i1___fladd@b),(0)&7
 12236  043F  1C20               	goto	u361_21
 12237  0440  2C42               	goto	u361_20
 12238  0441  2C43               u361_21:
 12239  0442                     	goto	i1l2870
 12240  0442  2C45               u361_20:
 12241  0443                     	line	142
 12242                           	
 12243                           i1l2868:	
 12244  0443                     	bsf	(i1___fladd@grs)+(7/8),(7)&7
 12245  0443  17B7               	goto	i1l2870
 12246  0444  2C45               	line	143
 12247                           	
 12248                           i1l813:	
 12249  0445                     	line	144
 12250                           	
 12251                           i1l2870:	
 12252  0445                     	movlw	01h
 12253  0445  3001               	movwf	(??i1___fladd+0)+0
 12254  0446  00A8               u362_25:
 12255  0447                     	rlf	(i1___fladd@b+3),w
 12256  0447  0D23               	rrf	(i1___fladd@b+3),f
 12257  0448  0CA3               	rrf	(i1___fladd@b+2),f
 12258  0449  0CA2               	rrf	(i1___fladd@b+1),f
 12259  044A  0CA1               	rrf	(i1___fladd@b),f
 12260  044B  0CA0               	decfsz	(??i1___fladd+0)+0&07fh,f
 12261  044C  0BA8               	goto	u362_25
 12262  044D  2C47               
 12263                           	line	145
 12264                           	
 12265                           i1l2872:	
 12266  044E                     	movlw	low(01h)
 12267  044E  3001               	movwf	(??i1___fladd+0)+0
 12268  044F  00A8               	movf	(??i1___fladd+0)+0,w
 12269  0450  0828               	addwf	(i1___fladd@bexp),f
 12270  0451  07B6               	goto	i1l2908
 12271  0452  2D1D               	line	146
 12272                           	
 12273                           i1l810:	
 12274  0453                     	line	148
 12275                           	goto	i1l2908
 12276  0453  2D1D               	line	149
 12277                           	
 12278                           i1l807:	
 12279  0454                     	line	153
 12280                           	
 12281                           i1l2874:	
 12282  0454                     	movf	(i1___fladd@b+3),w
 12283  0454  0823               	xorlw	80h
 12284  0455  3A80               	movwf	btemp+1
 12285  0456  00FF               	movf	(i1___fladd@a+3),w
 12286  0457  0827               	xorlw	80h
 12287  0458  3A80               	subwf	btemp+1,w
 12288  0459  027F               	
 12289                           	skipz
 12290  045A  1D03               	goto	u363_23
 12291  045B  2C66               	movf	(i1___fladd@a+2),w
 12292  045C  0826               	subwf	(i1___fladd@b+2),w
 12293  045D  0222               	skipz
 12294  045E  1D03               	goto	u363_23
 12295  045F  2C66               	movf	(i1___fladd@a+1),w
 12296  0460  0825               	subwf	(i1___fladd@b+1),w
 12297  0461  0221               	skipz
 12298  0462  1D03               	goto	u363_23
 12299  0463  2C66               	movf	(i1___fladd@a),w
 12300  0464  0824               	subwf	(i1___fladd@b),w
 12301  0465  0220               u363_23:
 12302  0466                     	skipnc
 12303  0466  1803               	goto	u363_21
 12304  0467  2C69               	goto	u363_20
 12305  0468  2C6A               u363_21:
 12306  0469                     	goto	i1l2884
 12307  0469  2CD0               u363_20:
 12308  046A                     	line	154
 12309                           	
 12310                           i1l2876:	
 12311  046A                     	movlw	0FFh
 12312  046A  30FF               	movwf	((??i1___fladd+0)+0)
 12313  046B  00A8               	movlw	0FFh
 12314  046C  30FF               	movwf	((??i1___fladd+0)+0+1)
 12315  046D  00A9               	movlw	0FFh
 12316  046E  30FF               	movwf	((??i1___fladd+0)+0+2)
 12317  046F  00AA               	movlw	0FFh
 12318  0470  30FF               	movwf	((??i1___fladd+0)+0+3)
 12319  0471  00AB               	movf	(i1___fladd@a),w
 12320  0472  0824               	movwf	(??i1___fladd+4)+0
 12321  0473  00AC               	movf	(i1___fladd@a+1),w
 12322  0474  0825               	movwf	((??i1___fladd+4)+0+1)
 12323  0475  00AD               	movf	(i1___fladd@a+2),w
 12324  0476  0826               	movwf	((??i1___fladd+4)+0+2)
 12325  0477  00AE               	movf	(i1___fladd@a+3),w
 12326  0478  0827               	movwf	((??i1___fladd+4)+0+3)
 12327  0479  00AF               	comf	(i1___fladd@b),w
 12328  047A  0920               	movwf	(??i1___fladd+8)+0
 12329  047B  00B0               	comf	(i1___fladd@b+1),w
 12330  047C  0921               	movwf	((??i1___fladd+8)+0+1)
 12331  047D  00B1               	comf	(i1___fladd@b+2),w
 12332  047E  0922               	movwf	((??i1___fladd+8)+0+2)
 12333  047F  00B2               	comf	(i1___fladd@b+3),w
 12334  0480  0923               	movwf	((??i1___fladd+8)+0+3)
 12335  0481  00B3               	incf	(??i1___fladd+8)+0,f
 12336  0482  0AB0               	skipnz
 12337  0483  1903               	incf	((??i1___fladd+8)+0+1),f
 12338  0484  0AB1               	skipnz
 12339  0485  1903               	incf	((??i1___fladd+8)+0+2),f
 12340  0486  0AB2               	skipnz
 12341  0487  1903               	incf	((??i1___fladd+8)+0+3),f
 12342  0488  0AB3               	movf	0+(??i1___fladd+8)+0,w
 12343  0489  0830               	addwf	(??i1___fladd+4)+0,f
 12344  048A  07AC               	movf	1+(??i1___fladd+8)+0,w
 12345  048B  0831               	skipnc
 12346  048C  1803               	incfsz	1+(??i1___fladd+8)+0,w
 12347  048D  0F31               	goto	u364_20
 12348  048E  2C90               	goto	u364_21
 12349  048F  2C91               u364_20:
 12350  0490                     	addwf	(??i1___fladd+4)+1,f
 12351  0490  07AD               u364_21:
 12352  0491                     	movf	2+(??i1___fladd+8)+0,w
 12353  0491  0832               	skipnc
 12354  0492  1803               	incfsz	2+(??i1___fladd+8)+0,w
 12355  0493  0F32               	goto	u364_22
 12356  0494  2C96               	goto	u364_23
 12357  0495  2C97               u364_22:
 12358  0496                     	addwf	(??i1___fladd+4)+2,f
 12359  0496  07AE               u364_23:
 12360  0497                     	movf	3+(??i1___fladd+8)+0,w
 12361  0497  0833               	skipnc
 12362  0498  1803               	incf	3+(??i1___fladd+8)+0,w
 12363  0499  0A33               	addwf	(??i1___fladd+4)+3,f
 12364  049A  07AF               	movf	0+(??i1___fladd+4)+0,w
 12365  049B  082C               	addwf	(??i1___fladd+0)+0,f
 12366  049C  07A8               	movf	1+(??i1___fladd+4)+0,w
 12367  049D  082D               	skipnc
 12368  049E  1803               	incfsz	1+(??i1___fladd+4)+0,w
 12369  049F  0F2D               	goto	u365_20
 12370  04A0  2CA2               	goto	u365_21
 12371  04A1  2CA3               u365_20:
 12372  04A2                     	addwf	(??i1___fladd+0)+1,f
 12373  04A2  07A9               u365_21:
 12374  04A3                     	movf	2+(??i1___fladd+4)+0,w
 12375  04A3  082E               	skipnc
 12376  04A4  1803               	incfsz	2+(??i1___fladd+4)+0,w
 12377  04A5  0F2E               	goto	u365_22
 12378  04A6  2CA8               	goto	u365_23
 12379  04A7  2CA9               u365_22:
 12380  04A8                     	addwf	(??i1___fladd+0)+2,f
 12381  04A8  07AA               u365_23:
 12382  04A9                     	movf	3+(??i1___fladd+4)+0,w
 12383  04A9  082F               	skipnc
 12384  04AA  1803               	incf	3+(??i1___fladd+4)+0,w
 12385  04AB  0A2F               	addwf	(??i1___fladd+0)+3,f
 12386  04AC  07AB               	movf	3+(??i1___fladd+0)+0,w
 12387  04AD  082B               	movwf	(i1___fladd@b+3)
 12388  04AE  00A3               	movf	2+(??i1___fladd+0)+0,w
 12389  04AF  082A               	movwf	(i1___fladd@b+2)
 12390  04B0  00A2               	movf	1+(??i1___fladd+0)+0,w
 12391  04B1  0829               	movwf	(i1___fladd@b+1)
 12392  04B2  00A1               	movf	0+(??i1___fladd+0)+0,w
 12393  04B3  0828               	movwf	(i1___fladd@b)
 12394  04B4  00A0               
 12395                           	line	155
 12396                           	movlw	low(080h)
 12397  04B5  3080               	movwf	(??i1___fladd+0)+0
 12398  04B6  00A8               	movf	(??i1___fladd+0)+0,w
 12399  04B7  0828               	xorwf	(i1___fladd@signs),f
 12400  04B8  06B4               	line	156
 12401                           	
 12402                           i1l2878:	
 12403  04B9                     	comf	(i1___fladd@grs),f
 12404  04B9  09B7               	incf	(i1___fladd@grs),f
 12405  04BA  0AB7               	line	157
 12406                           	
 12407                           i1l2880:	
 12408  04BB                     	movf	((i1___fladd@grs)),w
 12409  04BB  0837               	btfss	status,2
 12410  04BC  1D03               	goto	u366_21
 12411  04BD  2CBF               	goto	u366_20
 12412  04BE  2CC0               u366_21:
 12413  04BF                     	goto	i1l817
 12414  04BF  2CDE               u366_20:
 12415  04C0                     	line	158
 12416                           	
 12417                           i1l2882:	
 12418  04C0                     	movlw	01h
 12419  04C0  3001               	addwf	(i1___fladd@b),f
 12420  04C1  07A0               	movlw	0
 12421  04C2  3000               	skipnc
 12422  04C3  1803               movlw 1
 12423  04C4  3001               	addwf	(i1___fladd@b+1),f
 12424  04C5  07A1               	movlw	0
 12425  04C6  3000               	skipnc
 12426  04C7  1803               movlw 1
 12427  04C8  3001               	addwf	(i1___fladd@b+2),f
 12428  04C9  07A2               	movlw	0
 12429  04CA  3000               	skipnc
 12430  04CB  1803               movlw 1
 12431  04CC  3001               	addwf	(i1___fladd@b+3),f
 12432  04CD  07A3               	goto	i1l817
 12433  04CE  2CDE               	line	159
 12434                           	
 12435                           i1l816:	
 12436  04CF                     	line	160
 12437                           	goto	i1l817
 12438  04CF  2CDE               	line	161
 12439                           	
 12440                           i1l815:	
 12441  04D0                     	line	162
 12442                           	
 12443                           i1l2884:	
 12444  04D0                     	movf	(i1___fladd@a),w
 12445  04D0  0824               	subwf	(i1___fladd@b),f
 12446  04D1  02A0               	movf	(i1___fladd@a+1),w
 12447  04D2  0825               	skipc
 12448  04D3  1C03               	incfsz	(i1___fladd@a+1),w
 12449  04D4  0F25               	subwf	(i1___fladd@b+1),f
 12450  04D5  02A1               	movf	(i1___fladd@a+2),w
 12451  04D6  0826               	skipc
 12452  04D7  1C03               	incfsz	(i1___fladd@a+2),w
 12453  04D8  0F26               	subwf	(i1___fladd@b+2),f
 12454  04D9  02A2               	movf	(i1___fladd@a+3),w
 12455  04DA  0827               	skipc
 12456  04DB  1C03               	incfsz	(i1___fladd@a+3),w
 12457  04DC  0F27               	subwf	(i1___fladd@b+3),f
 12458  04DD  02A3               	line	163
 12459                           	
 12460                           i1l817:	
 12461  04DE                     	line	166
 12462                           	movf	(i1___fladd@b+3),w
 12463  04DE  0823               	iorwf	(i1___fladd@b+2),w
 12464  04DF  0422               	iorwf	(i1___fladd@b+1),w
 12465  04E0  0421               	iorwf	(i1___fladd@b),w
 12466  04E1  0420               	skipz
 12467  04E2  1D03               	goto	u367_21
 12468  04E3  2CE5               	goto	u367_20
 12469  04E4  2CE6               u367_21:
 12470  04E5                     	goto	i1l2906
 12471  04E5  2D17               u367_20:
 12472  04E6                     	
 12473                           i1l2886:	
 12474  04E6                     	movf	((i1___fladd@grs)),w
 12475  04E6  0837               	btfss	status,2
 12476  04E7  1D03               	goto	u368_21
 12477  04E8  2CEA               	goto	u368_20
 12478  04E9  2CEB               u368_21:
 12479  04EA                     	goto	i1l2906
 12480  04EA  2D17               u368_20:
 12481  04EB                     	line	167
 12482                           	
 12483                           i1l2888:	
 12484  04EB                     	movlw	0x0
 12485  04EB  3000               	movwf	(?i1___fladd+3)
 12486  04EC  00A3               	movlw	0x0
 12487  04ED  3000               	movwf	(?i1___fladd+2)
 12488  04EE  00A2               	movlw	0x0
 12489  04EF  3000               	movwf	(?i1___fladd+1)
 12490  04F0  00A1               	movlw	0x0
 12491  04F1  3000               	movwf	(?i1___fladd)
 12492  04F2  00A0               
 12493                           	goto	i1l809
 12494  04F3  2DA0               	
 12495                           i1l2890:	
 12496  04F4                     	goto	i1l809
 12497  04F4  2DA0               	line	168
 12498                           	
 12499                           i1l818:	
 12500  04F5                     	line	171
 12501                           	goto	i1l2906
 12502  04F5  2D17               	
 12503                           i1l820:	
 12504  04F6                     	line	172
 12505                           	
 12506                           i1l2892:	
 12507  04F6                     	movlw	01h
 12508  04F6  3001               	movwf	(??i1___fladd+0)+0
 12509  04F7  00A8               u369_25:
 12510  04F8                     	clrc
 12511  04F8  1003               	rlf	(i1___fladd@b),f
 12512  04F9  0DA0               	rlf	(i1___fladd@b+1),f
 12513  04FA  0DA1               	rlf	(i1___fladd@b+2),f
 12514  04FB  0DA2               	rlf	(i1___fladd@b+3),f
 12515  04FC  0DA3               	decfsz	(??i1___fladd+0)+0
 12516  04FD  0BA8               	goto	u369_25
 12517  04FE  2CF8               	line	173
 12518                           	
 12519                           i1l2894:	
 12520  04FF                     	btfss	(i1___fladd@grs),(7)&7
 12521  04FF  1FB7               	goto	u370_21
 12522  0500  2D02               	goto	u370_20
 12523  0501  2D03               u370_21:
 12524  0502                     	goto	i1l821
 12525  0502  2D04               u370_20:
 12526  0503                     	line	174
 12527                           	
 12528                           i1l2896:	
 12529  0503                     	bsf	(i1___fladd@b)+(0/8),(0)&7
 12530  0503  1420               	line	175
 12531                           	
 12532                           i1l821:	
 12533  0504                     	line	176
 12534                           	btfss	(i1___fladd@grs),(0)&7
 12535  0504  1C37               	goto	u371_21
 12536  0505  2D07               	goto	u371_20
 12537  0506  2D08               u371_21:
 12538  0507                     	goto	i1l2900
 12539  0507  2D0B               u371_20:
 12540  0508                     	line	177
 12541                           	
 12542                           i1l2898:	
 12543  0508                     	setc
 12544  0508  1403               	rlf	(i1___fladd@grs),f
 12545  0509  0DB7               	line	178
 12546                           	goto	i1l2902
 12547  050A  2D0E               	line	179
 12548                           	
 12549                           i1l822:	
 12550  050B                     	line	180
 12551                           	
 12552                           i1l2900:	
 12553  050B                     	clrc
 12554  050B  1003               	rlf	(i1___fladd@grs),f
 12555  050C  0DB7               
 12556                           	goto	i1l2902
 12557  050D  2D0E               	line	181
 12558                           	
 12559                           i1l823:	
 12560  050E                     	line	182
 12561                           	
 12562                           i1l2902:	
 12563  050E                     	movf	((i1___fladd@bexp)),w
 12564  050E  0836               	btfsc	status,2
 12565  050F  1903               	goto	u372_21
 12566  0510  2D12               	goto	u372_20
 12567  0511  2D13               u372_21:
 12568  0512                     	goto	i1l2906
 12569  0512  2D17               u372_20:
 12570  0513                     	line	183
 12571                           	
 12572                           i1l2904:	
 12573  0513                     	movlw	01h
 12574  0513  3001               	subwf	(i1___fladd@bexp),f
 12575  0514  02B6               	goto	i1l2906
 12576  0515  2D17               	line	184
 12577                           	
 12578                           i1l824:	
 12579  0516                     	goto	i1l2906
 12580  0516  2D17               	line	185
 12581                           	
 12582                           i1l819:	
 12583  0517                     	line	171
 12584                           	
 12585                           i1l2906:	
 12586  0517                     	btfss	(i1___fladd@b+2),(23)&7
 12587  0517  1FA2               	goto	u373_21
 12588  0518  2D1A               	goto	u373_20
 12589  0519  2D1B               u373_21:
 12590  051A                     	goto	i1l2892
 12591  051A  2CF6               u373_20:
 12592  051B                     	goto	i1l2908
 12593  051B  2D1D               	
 12594                           i1l825:	
 12595  051C                     	goto	i1l2908
 12596  051C  2D1D               	line	186
 12597                           	
 12598                           i1l814:	
 12599  051D                     	line	192
 12600                           	
 12601                           i1l2908:	
 12602  051D                     	clrf	(i1___fladd@aexp)
 12603  051D  01B5               	line	193
 12604                           	
 12605                           i1l2910:	
 12606  051E                     	btfss	(i1___fladd@grs),(7)&7
 12607  051E  1FB7               	goto	u374_21
 12608  051F  2D21               	goto	u374_20
 12609  0520  2D22               u374_21:
 12610  0521                     	goto	i1l2918
 12611  0521  2D34               u374_20:
 12612  0522                     	line	194
 12613                           	
 12614                           i1l2912:	
 12615  0522                     	movf	(i1___fladd@grs),w
 12616  0522  0837               	andlw	07Fh
 12617  0523  397F               	btfsc	status,2
 12618  0524  1903               	goto	u375_21
 12619  0525  2D27               	goto	u375_20
 12620  0526  2D28               u375_21:
 12621  0527                     	goto	i1l827
 12622  0527  2D2B               u375_20:
 12623  0528                     	line	195
 12624                           	
 12625                           i1l2914:	
 12626  0528                     	clrf	(i1___fladd@aexp)
 12627  0528  01B5               	incf	(i1___fladd@aexp),f
 12628  0529  0AB5               	line	196
 12629                           	goto	i1l2918
 12630  052A  2D34               	line	197
 12631                           	
 12632                           i1l827:	
 12633  052B                     	line	198
 12634                           	btfss	(i1___fladd@b),(0)&7
 12635  052B  1C20               	goto	u376_21
 12636  052C  2D2E               	goto	u376_20
 12637  052D  2D2F               u376_21:
 12638  052E                     	goto	i1l2918
 12639  052E  2D34               u376_20:
 12640  052F                     	line	199
 12641                           	
 12642                           i1l2916:	
 12643  052F                     	clrf	(i1___fladd@aexp)
 12644  052F  01B5               	incf	(i1___fladd@aexp),f
 12645  0530  0AB5               	goto	i1l2918
 12646  0531  2D34               	line	200
 12647                           	
 12648                           i1l829:	
 12649  0532                     	goto	i1l2918
 12650  0532  2D34               	line	201
 12651                           	
 12652                           i1l828:	
 12653  0533                     	goto	i1l2918
 12654  0533  2D34               	line	202
 12655                           	
 12656                           i1l826:	
 12657  0534                     	line	203
 12658                           	
 12659                           i1l2918:	
 12660  0534                     	movf	((i1___fladd@aexp)),w
 12661  0534  0835               	btfsc	status,2
 12662  0535  1903               	goto	u377_21
 12663  0536  2D38               	goto	u377_20
 12664  0537  2D39               u377_21:
 12665  0538                     	goto	i1l830
 12666  0538  2D6F               u377_20:
 12667  0539                     	line	204
 12668                           	
 12669                           i1l2920:	
 12670  0539                     	movlw	01h
 12671  0539  3001               	addwf	(i1___fladd@b),f
 12672  053A  07A0               	movlw	0
 12673  053B  3000               	skipnc
 12674  053C  1803               movlw 1
 12675  053D  3001               	addwf	(i1___fladd@b+1),f
 12676  053E  07A1               	movlw	0
 12677  053F  3000               	skipnc
 12678  0540  1803               movlw 1
 12679  0541  3001               	addwf	(i1___fladd@b+2),f
 12680  0542  07A2               	movlw	0
 12681  0543  3000               	skipnc
 12682  0544  1803               movlw 1
 12683  0545  3001               	addwf	(i1___fladd@b+3),f
 12684  0546  07A3               	line	205
 12685                           	
 12686                           i1l2922:	
 12687  0547                     	btfss	(i1___fladd@b+3),(24)&7
 12688  0547  1C23               	goto	u378_21
 12689  0548  2D4A               	goto	u378_20
 12690  0549  2D4B               u378_21:
 12691  054A                     	goto	i1l830
 12692  054A  2D6F               u378_20:
 12693  054B                     	line	206
 12694                           	
 12695                           i1l2924:	
 12696  054B                     	movf	(i1___fladd@b),w
 12697  054B  0820               	movwf	(??i1___fladd+0)+0
 12698  054C  00A8               	movf	(i1___fladd@b+1),w
 12699  054D  0821               	movwf	((??i1___fladd+0)+0+1)
 12700  054E  00A9               	movf	(i1___fladd@b+2),w
 12701  054F  0822               	movwf	((??i1___fladd+0)+0+2)
 12702  0550  00AA               	movf	(i1___fladd@b+3),w
 12703  0551  0823               	movwf	((??i1___fladd+0)+0+3)
 12704  0552  00AB               	movlw	01h
 12705  0553  3001               	movwf	(??i1___fladd+4)+0
 12706  0554  00AC               u379_25:
 12707  0555                     	rlf	(??i1___fladd+0)+3,w
 12708  0555  0D2B               	rrf	(??i1___fladd+0)+3,f
 12709  0556  0CAB               	rrf	(??i1___fladd+0)+2,f
 12710  0557  0CAA               	rrf	(??i1___fladd+0)+1,f
 12711  0558  0CA9               	rrf	(??i1___fladd+0)+0,f
 12712  0559  0CA8               u379_20:
 12713  055A                     	decfsz	(??i1___fladd+4)+0,f
 12714  055A  0BAC               	goto	u379_25
 12715  055B  2D55               	movf	3+(??i1___fladd+0)+0,w
 12716  055C  082B               	movwf	(i1___fladd@b+3)
 12717  055D  00A3               	movf	2+(??i1___fladd+0)+0,w
 12718  055E  082A               	movwf	(i1___fladd@b+2)
 12719  055F  00A2               	movf	1+(??i1___fladd+0)+0,w
 12720  0560  0829               	movwf	(i1___fladd@b+1)
 12721  0561  00A1               	movf	0+(??i1___fladd+0)+0,w
 12722  0562  0828               	movwf	(i1___fladd@b)
 12723  0563  00A0               
 12724                           	line	207
 12725                           		incf	((i1___fladd@bexp)),w
 12726  0564  0A36               	btfsc	status,2
 12727  0565  1903               	goto	u380_21
 12728  0566  2D68               	goto	u380_20
 12729  0567  2D69               u380_21:
 12730  0568                     	goto	i1l830
 12731  0568  2D6F               u380_20:
 12732  0569                     	line	208
 12733                           	
 12734                           i1l2926:	
 12735  0569                     	movlw	low(01h)
 12736  0569  3001               	movwf	(??i1___fladd+0)+0
 12737  056A  00A8               	movf	(??i1___fladd+0)+0,w
 12738  056B  0828               	addwf	(i1___fladd@bexp),f
 12739  056C  07B6               	goto	i1l830
 12740  056D  2D6F               	line	209
 12741                           	
 12742                           i1l832:	
 12743  056E                     	goto	i1l830
 12744  056E  2D6F               	line	210
 12745                           	
 12746                           i1l831:	
 12747  056F                     	line	211
 12748                           	
 12749                           i1l830:	
 12750  056F                     	line	215
 12751                           		incf	((i1___fladd@bexp)),w
 12752  056F  0A36               	btfsc	status,2
 12753  0570  1903               	goto	u381_21
 12754  0571  2D73               	goto	u381_20
 12755  0572  2D74               u381_21:
 12756  0573                     	goto	i1l2930
 12757  0573  2D7A               u381_20:
 12758  0574                     	
 12759                           i1l2928:	
 12760  0574                     	movf	((i1___fladd@bexp)),w
 12761  0574  0836               	btfss	status,2
 12762  0575  1D03               	goto	u382_21
 12763  0576  2D78               	goto	u382_20
 12764  0577  2D79               u382_21:
 12765  0578                     	goto	i1l2936
 12766  0578  2D8A               u382_20:
 12767  0579                     	goto	i1l2930
 12768  0579  2D7A               	
 12769                           i1l835:	
 12770  057A                     	line	216
 12771                           	
 12772                           i1l2930:	
 12773  057A                     	movlw	high highword(0)
 12774  057A  3000               	movwf	(i1___fladd@b+3)
 12775  057B  00A3               	movlw	low highword(0)
 12776  057C  3000               	movwf	(i1___fladd@b+2)
 12777  057D  00A2               	movlw	high(0)
 12778  057E  3000               	movwf	(i1___fladd@b+1)
 12779  057F  00A1               	movlw	low(0)
 12780  0580  3000               	movwf	(i1___fladd@b)
 12781  0581  00A0               
 12782                           	line	218
 12783                           	
 12784                           i1l2932:	
 12785  0582                     	movf	((i1___fladd@bexp)),w
 12786  0582  0836               	btfss	status,2
 12787  0583  1D03               	goto	u383_21
 12788  0584  2D86               	goto	u383_20
 12789  0585  2D87               u383_21:
 12790  0586                     	goto	i1l2936
 12791  0586  2D8A               u383_20:
 12792  0587                     	line	219
 12793                           	
 12794                           i1l2934:	
 12795  0587                     	clrf	(i1___fladd@signs)
 12796  0587  01B4               	goto	i1l2936
 12797  0588  2D8A               	line	220
 12798                           	
 12799                           i1l836:	
 12800  0589                     	goto	i1l2936
 12801  0589  2D8A               	line	221
 12802                           	
 12803                           i1l833:	
 12804  058A                     	line	225
 12805                           	
 12806                           i1l2936:	
 12807  058A                     	btfss	(i1___fladd@bexp),(0)&7
 12808  058A  1C36               	goto	u384_21
 12809  058B  2D8D               	goto	u384_20
 12810  058C  2D8E               u384_21:
 12811  058D                     	goto	i1l2940
 12812  058D  2D90               u384_20:
 12813  058E                     	line	226
 12814                           	
 12815                           i1l2938:	
 12816  058E                     	bsf	0+(i1___fladd@b)+02h+(7/8),(7)&7
 12817  058E  17A2               	line	227
 12818                           	goto	i1l838
 12819  058F  2D94               	line	229
 12820                           	
 12821                           i1l837:	
 12822  0590                     	line	230
 12823                           	
 12824                           i1l2940:	
 12825  0590                     	movlw	low(07Fh)
 12826  0590  307F               	movwf	(??i1___fladd+0)+0
 12827  0591  00A8               	movf	(??i1___fladd+0)+0,w
 12828  0592  0828               	andwf	0+(i1___fladd@b)+02h,f
 12829  0593  05A2               	line	231
 12830                           	
 12831                           i1l838:	
 12832  0594                     	line	232
 12833                           	movf	(i1___fladd@bexp),w
 12834  0594  0836               	movwf	(??i1___fladd+0)+0
 12835  0595  00A8               	clrc
 12836  0596  1003               	rrf	(??i1___fladd+0)+0,w
 12837  0597  0C28               	movwf	(??i1___fladd+1)+0
 12838  0598  00A9               	movf	(??i1___fladd+1)+0,w
 12839  0599  0829               	movwf	0+(i1___fladd@b)+03h
 12840  059A  00A3               	line	233
 12841                           	
 12842                           i1l2942:	
 12843  059B                     	btfss	(i1___fladd@signs),(7)&7
 12844  059B  1FB4               	goto	u385_21
 12845  059C  2D9E               	goto	u385_20
 12846  059D  2D9F               u385_21:
 12847  059E                     	goto	i1l839
 12848  059E  2DA0               u385_20:
 12849  059F                     	line	234
 12850                           	
 12851                           i1l2944:	
 12852  059F                     	bsf	0+(i1___fladd@b)+03h+(7/8),(7)&7
 12853  059F  17A3               	line	235
 12854                           	
 12855                           i1l839:	
 12856  05A0                     	line	236
 12857                           	line	237
 12858                           	
 12859                           i1l809:	
 12860  05A0                     	return
 12861  05A0  0008               	opt stack 0
 12862                           GLOBAL	__end_ofi1___fladd
 12863                           	__end_ofi1___fladd:
 12864  05A1                     	signat	i1___fladd,92
 12865                           	global	i1___lwdiv
 12866                           
 12867 ;; *************** function i1___lwdiv *****************
 12868 ;; Defined at:
 12869 ;;		line 5 in file "/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
 12870 ;; Parameters:    Size  Location     Type
 12871 ;;  divisor         2    0[COMMON] unsigned int 
 12872 ;;  dividend        2    2[COMMON] unsigned int 
 12873 ;; Auto vars:     Size  Location     Type
 12874 ;;  __lwdiv         2    5[COMMON] unsigned int 
 12875 ;;  __lwdiv         1    7[COMMON] unsigned char 
 12876 ;; Return value:  Size  Location     Type
 12877 ;;                  2    0[COMMON] unsigned int 
 12878 ;; Registers used:
 12879 ;;		wreg, status,2, status,0
 12880 ;; Tracked objects:
 12881 ;;		On entry : 0/0
 12882 ;;		On exit  : 0/0
 12883 ;;		Unchanged: 0/0
 12884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12885 ;;      Params:         4       0       0       0       0
 12886 ;;      Locals:         3       0       0       0       0
 12887 ;;      Temps:          1       0       0       0       0
 12888 ;;      Totals:         8       0       0       0       0
 12889 ;;Total ram usage:        8 bytes
 12890 ;; Hardware stack levels used:    1
 12891 ;; This function calls:
 12892 ;;		Nothing
 12893 ;; This function is called by:
 12894 ;;		i1_get_volume
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
 12898                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
 12899                           	line	5
 12900                           global __ptext36
 12901                           __ptext36:	;psect for function i1___lwdiv
 12902  152F                     psect	text36
 12903                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c90/common/lwdiv.c"
 12904                           	line	5
 12905                           	global	__size_ofi1___lwdiv
 12906                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
 12907  004B                     	
 12908                           i1___lwdiv:	
 12909  152F                     ;incstack = 0
 12910 ;; hardware stack exceeded
 12911                           	opt	stack 0
 12912                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 12913                           	line	13
 12914                           	
 12915                           i1l3096:	
 12916  152F                     	clrf	(i1___lwdiv@quotient)
 12917  152F  01F5               	clrf	(i1___lwdiv@quotient+1)
 12918  1530  01F6               	line	14
 12919                           	
 12920                           i1l3098:	
 12921  1531                     	movf	((i1___lwdiv@divisor)),w
 12922  1531  0870               iorwf	((i1___lwdiv@divisor+1)),w
 12923  1532  0471               	btfsc	status,2
 12924  1533  1903               	goto	u413_21
 12925  1534  2D36               	goto	u413_20
 12926  1535  2D37               u413_21:
 12927  1536                     	goto	i1l3118
 12928  1536  2D74               u413_20:
 12929  1537                     	line	15
 12930                           	
 12931                           i1l3100:	
 12932  1537                     	clrf	(i1___lwdiv@counter)
 12933  1537  01F7               	incf	(i1___lwdiv@counter),f
 12934  1538  0AF7               	line	16
 12935                           	goto	i1l3106
 12936  1539  2D46               	
 12937                           i1l770:	
 12938  153A                     	line	17
 12939                           	
 12940                           i1l3102:	
 12941  153A                     	movlw	01h
 12942  153A  3001               	
 12943                           u414_25:
 12944  153B                     	clrc
 12945  153B  1003               	rlf	(i1___lwdiv@divisor),f
 12946  153C  0DF0               	rlf	(i1___lwdiv@divisor+1),f
 12947  153D  0DF1               	addlw	-1
 12948  153E  3EFF               	skipz
 12949  153F  1D03               	goto	u414_25
 12950  1540  2D3B               	line	18
 12951                           	
 12952                           i1l3104:	
 12953  1541                     	movlw	low(01h)
 12954  1541  3001               	movwf	(??i1___lwdiv+0)+0
 12955  1542  00F4               	movf	(??i1___lwdiv+0)+0,w
 12956  1543  0874               	addwf	(i1___lwdiv@counter),f
 12957  1544  07F7               	goto	i1l3106
 12958  1545  2D46               	line	19
 12959                           	
 12960                           i1l769:	
 12961  1546                     	line	16
 12962                           	
 12963                           i1l3106:	
 12964  1546                     	btfss	(i1___lwdiv@divisor+1),(15)&7
 12965  1546  1FF1               	goto	u415_21
 12966  1547  2D49               	goto	u415_20
 12967  1548  2D4A               u415_21:
 12968  1549                     	goto	i1l3102
 12969  1549  2D3A               u415_20:
 12970  154A                     	goto	i1l3108
 12971  154A  2D4C               	
 12972                           i1l771:	
 12973  154B                     	goto	i1l3108
 12974  154B  2D4C               	line	20
 12975                           	
 12976                           i1l772:	
 12977  154C                     	line	21
 12978                           	
 12979                           i1l3108:	
 12980  154C                     	movlw	01h
 12981  154C  3001               	
 12982                           u416_25:
 12983  154D                     	clrc
 12984  154D  1003               	rlf	(i1___lwdiv@quotient),f
 12985  154E  0DF5               	rlf	(i1___lwdiv@quotient+1),f
 12986  154F  0DF6               	addlw	-1
 12987  1550  3EFF               	skipz
 12988  1551  1D03               	goto	u416_25
 12989  1552  2D4D               	line	22
 12990                           	movf	(i1___lwdiv@divisor+1),w
 12991  1553  0871               	subwf	(i1___lwdiv@dividend+1),w
 12992  1554  0273               	skipz
 12993  1555  1D03               	goto	u417_25
 12994  1556  2D59               	movf	(i1___lwdiv@divisor),w
 12995  1557  0870               	subwf	(i1___lwdiv@dividend),w
 12996  1558  0272               u417_25:
 12997  1559                     	skipc
 12998  1559  1C03               	goto	u417_21
 12999  155A  2D5C               	goto	u417_20
 13000  155B  2D5D               u417_21:
 13001  155C                     	goto	i1l3114
 13002  155C  2D65               u417_20:
 13003  155D                     	line	23
 13004                           	
 13005                           i1l3110:	
 13006  155D                     	movf	(i1___lwdiv@divisor),w
 13007  155D  0870               	subwf	(i1___lwdiv@dividend),f
 13008  155E  02F2               	movf	(i1___lwdiv@divisor+1),w
 13009  155F  0871               	skipc
 13010  1560  1C03               	decf	(i1___lwdiv@dividend+1),f
 13011  1561  03F3               	subwf	(i1___lwdiv@dividend+1),f
 13012  1562  02F3               	line	24
 13013                           	
 13014                           i1l3112:	
 13015  1563                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
 13016  1563  1475               	goto	i1l3114
 13017  1564  2D65               	line	25
 13018                           	
 13019                           i1l773:	
 13020  1565                     	line	26
 13021                           	
 13022                           i1l3114:	
 13023  1565                     	movlw	01h
 13024  1565  3001               	
 13025                           u418_25:
 13026  1566                     	clrc
 13027  1566  1003               	rrf	(i1___lwdiv@divisor+1),f
 13028  1567  0CF1               	rrf	(i1___lwdiv@divisor),f
 13029  1568  0CF0               	addlw	-1
 13030  1569  3EFF               	skipz
 13031  156A  1D03               	goto	u418_25
 13032  156B  2D66               	line	27
 13033                           	
 13034                           i1l3116:	
 13035  156C                     	movlw	01h
 13036  156C  3001               	subwf	(i1___lwdiv@counter),f
 13037  156D  02F7               	btfss	status,2
 13038  156E  1D03               	goto	u419_21
 13039  156F  2D71               	goto	u419_20
 13040  1570  2D72               u419_21:
 13041  1571                     	goto	i1l3108
 13042  1571  2D4C               u419_20:
 13043  1572                     	goto	i1l3118
 13044  1572  2D74               	
 13045                           i1l774:	
 13046  1573                     	goto	i1l3118
 13047  1573  2D74               	line	28
 13048                           	
 13049                           i1l768:	
 13050  1574                     	line	29
 13051                           	
 13052                           i1l3118:	
 13053  1574                     	movf	(i1___lwdiv@quotient+1),w
 13054  1574  0876               	movwf	(?i1___lwdiv+1)
 13055  1575  00F1               	movf	(i1___lwdiv@quotient),w
 13056  1576  0875               	movwf	(?i1___lwdiv)
 13057  1577  00F0               	goto	i1l775
 13058  1578  2D79               	
 13059                           i1l3120:	
 13060  1579                     	line	30
 13061                           	
 13062                           i1l775:	
 13063  1579                     	return
 13064  1579  0008               	opt stack 0
 13065                           GLOBAL	__end_ofi1___lwdiv
 13066                           	__end_ofi1___lwdiv:
 13067  157A                     	signat	i1___lwdiv,90
 13068                           global	___latbits
 13069                           ___latbits	equ	2
 13070  0002                     	global	btemp
 13071                           	btemp set 07Eh
 13072  007E                     
 13073                           	DABS	1,126,2	;btemp
 13074                           	global	wtemp0
 13075                           	wtemp0 set btemp+0
 13076  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      78
    BANK1            80     75      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _start_receive->_handle_remote
    i1_is_deadzone->i1___xxtofl
    i1___fltol->i1___xxtofl
    i1___fladd->i1___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->i1_get_volume
    i1_get_volume->i1_is_deadzone
    i1_is_deadzone->i1___fltol
    i1___fltol->i1___fladd

Critical Paths under _main in BANK1

    _main->_update_vol_motor
    _update_volume->_write_int
    _update_vol_motor->_get_volume
    _get_volume->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd
    ___fladd->___xxtofl
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   15886
                                             73 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                       _update_input
                   _update_vol_motor
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5526
                                             33 BANK1      2     2      0
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_vol_motor                                     5     5      0    4836
                                             68 BANK1      5     5      0
                         _get_volume
 ---------------------------------------------------------------------------------
 (2) _get_volume                                           6     4      2    4723
                                             62 BANK1      6     4      2
                            ___lwdiv
                        _is_deadzone
 ---------------------------------------------------------------------------------
 (3) _is_deadzone                                         13     9      4    3998
                                             49 BANK1     13     9      4
                            ___fladd
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     474
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     381
                                             38 BANK1     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             24    16      8    2414
                                             14 BANK1     24    16      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5502
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    3937
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1299
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0    1003
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     736
                                              6 BANK1     10     8      2
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1363
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    3792
                                             58 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _start_receive
 ---------------------------------------------------------------------------------
 (8) _start_receive                                       10    10      0      53
                                              1 COMMON    10    10      0
                      _handle_remote
 ---------------------------------------------------------------------------------
 (9) _handle_remote                                        1     1      0       7
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      4     4      0    3605
                                             54 BANK0      4     4      0
                       i1_get_volume
 ---------------------------------------------------------------------------------
 (9) i1_get_volume                                         6     4      2    3493
                                             48 BANK0      6     4      2
                          i1___lwdiv
                      i1_is_deadzone
 ---------------------------------------------------------------------------------
 (10) i1_is_deadzone                                      13     9      4    3120
                                             35 BANK0     13     9      4
                          i1___fladd
                          i1___fltol
                           i1___wmul
                         i1___xxtofl
 ---------------------------------------------------------------------------------
 (11) i1___xxtofl                                         14    10      4     374
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (11) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) i1___fltol                                          11     7      4     281
                                             24 BANK0     11     7      4
                          i1___fladd (ARG)
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (11) i1___fladd                                          24    16      8    2088
                                              0 BANK0     24    16      8
                         i1___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) i1___lwdiv                                           8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
   _update_input
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite
   _update_vol_motor
     _get_volume
       ___lwdiv
       _is_deadzone
         ___fladd
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___wmul
         ___xxtofl
   _update_volume
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     i1_get_volume
       i1___lwdiv
       i1_is_deadzone
         i1___fladd
           i1___xxtofl (ARG)
         i1___fltol
           i1___fladd (ARG)
             i1___xxtofl (ARG)
           i1___xxtofl (ARG)
         i1___wmul
         i1___xxtofl
   _handle_rotary
   _start_receive
     _handle_remote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4B      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jan 28 12:11:00 2019

                  _update_input 05A1          __size_of_start_receive 006C                               pc 0002  
                   i1___fladd@a 0024                     i1___fladd@b 0020                     __CFG_CP$OFF 0000  
                   _SSPSTATbits 0094                              l60 1407                              l61 1407  
                            l57 13DF                              l58 13E7                              l59 1406  
                            fsr 0004             ___wmul@multiplicand 00A2                i1___wmul@product 0074  
                  spiWrite@data 00A0                   _update_volume 1797                      i1___xxtofl 0BB2  
                           l200 1482                             l201 14B1                             l202 149A  
                           l130 05F4                             l203 1485                             l204 14AF  
                           l140 1592                             l205 1489                             l141 15AE  
                           l133 17AB                             l206 148D                             l126 1662  
                           l142 15C5                             l134 17FF                             l207 1491  
                           l143 15C5                             l135 17D8                             l208 1495  
                           l160 07FB                             l152 1424                             l320 0895  
                           l161 07FC                             l153 143F                             l129 05B5  
                           l321 08FE                             l170 1342                             l162 07FE  
                           l146 14D6                             l138 15B6                             l322 08EB  
                           l330 08E9                             l171 1345                             l147 14B9  
                           l139 157F                             l331 08F8                             l323 089D  
                           l180 1355                             l156 07BD                             l148 14EB  
                           l324 08A1                             l181 1355                             l317 081F  
                           l165 1676                             l157 07FE                             l149 14EB  
                           l325 08A1                             l174 1333                             l502 1383  
                           l166 16C4                             l158 07DC                             l326 08A6  
                           l175 1336                             l503 138D                             l167 16C4  
                           l159 07FD                             l335 0EBF                             l327 08C1  
                           l504 13A2                             l336 0EC9                             l344 092F  
                           l328 08D4                             l505 13A7                             l329 08EA  
                           l178 134E                             l346 092A                             l179 134E  
                           l347 0977                             l276 1796                             l348 0972  
                           l349 0971                             l480 0FD8                             l800 0145  
                           l481 0ED2                             l801 013C                             l490 0F30  
                           l482 0EE4                             l810 0197                             l802 0118  
                           l491 0F3A                             l483 0EEB                             l811 0180  
                           l803 0125                             l492 0F6E                             l484 0EE6  
                           l820 023A                             l812 0183                             l804 0128  
                           l485 0FFA                             l493 0F63                             l821 0248  
                           l813 0189                             l805 012E                             l494 0F80  
                           l486 0EE7                             l830 02B3                             l814 0261  
                           l822 024F                             l806 0145                             l910 0C90  
                           l495 0FCD                             l487 0EE8                             l831 02B3  
                           l823 0252                             l815 0214                             l807 0198  
                           l911 0C98                             l496 0F85                             l488 0F16  
                           l832 02B2                             l824 025A                             l816 0213  
                           l808 0158                             l920 0CF4                             l912 0CAA  
                           l497 0FD7                             l489 0EE9                             l833 02CE  
                           l825 0260                             l817 0222                             l809 02E4  
                           l921 0CE8                             l913 0D37                             l770 15D3  
                           l498 0FF9                             l826 0278                             l818 0239  
                           l690 0B7E                             l914 0CBD                             l771 15E4  
                           l499 0FFF                             l835 02BE                             l827 026F  
                           l819 025B                             l691 0B6A                             l923 0CFF  
                           l915 0CAF                             l772 15E5                             l780 14F7  
                           l836 02CD                             l828 0277                             l692 0B6B  
                           l924 0CFF                             l916 0CC4                             l773 15FE  
                           l781 1508                             l837 02D4                             l829 0276  
                           l693 0B7D                             l925 0D0B                             l917 0CE0  
                           l774 160C                             l782 1509                             l838 02D8  
                           l790 004F                             l694 0BA1                             l926 0D2E  
                           l918 0CC5                             l775 1612                             l783 151A  
                           l839 02E4                             l791 005B                             l695 0B8E  
                           l919 0CE7                             l768 160D                             l784 1528  
                           l792 0068                             l696 0B9A                             l688 0B35  
                           l769 15DF                             l785 152E                             l793 0074  
                           l697 0B8F                             l689 0BB1                             l778 1529  
                           l794 008A                             l698 0BA0                             l779 1503  
                           l795 0087                             l699 0BB1                             l796 0092  
                           l788 003C                             l797 00DE                             l789 0052  
                           l798 00A1                             l799 0117                             _GIE 005F  
                           _RC0 0038                             _RC1 0039                   ?_display_init 0070  
                  __CFG_CPD$OFF 0000           get_volume@currentStep 00E2                             _isr 13A8  
                           fsr0 0004                             indf 0000                    i1___fltol@f1 0038  
                 i1___fladd@grs 0037                   write_char@pos 00B0                    __CFG_LVP$OFF 0000  
                  ___fltol@exp1 00D0                            l3000 0ED2                            l3010 0EEB  
                          l3002 0ED8                            l3020 0F2A                            l3012 0F16  
                          l3004 0EDF                            l3030 0F62                            l3022 0F30  
                          l3014 0F1E                            l3006 0EE4                            l3040 0F80  
                          l3032 0F63                            l3024 0F32                            l3016 0F22  
                          l3008 0EEA                            l3200 1598                            l2400 0B69  
                          l3130 1620                            l3122 1613                            l3042 0F85  
                          l3026 0F39                            l3034 0F6E                            l3018 0F26  
                          l3050 0FD8                            l2330 137E                            l3210 1423  
                          l3202 15A0                            l2410 0B8F                            l2402 0B6B  
                          l3140 1625                            l3132 1621                            l3124 161B  
                          l3220 0813                            l2420 15D0                            l3044 0FC1  
                          l3036 0F74                            l3028 0F3A                            l3052 0FFA  
                          l2340 13A2                            l2332 1383                            l3212 1424  
                          l3204 15AE                            l2500 007E                            l2412 0BA1  
                          l2404 0B7E                            l3060 0DFE                            l3150 1636  
                          l3142 162B                            l3134 1622                            l3126 161C  
                          l3222 0816                            l3214 1328                            l2430 15F6  
                          l2422 15D3                            l3054 0FFF                            l3046 0FC8  
                          l3038 0F7B                            l2342 13A7                            l2334 1387  
                          l2350 1676                            l3206 140A                            l2510 009C  
                          l2502 0087                            l2414 0BA6                            l2406 0B84  
                          l3070 0EAA                            l3062 0E25                            l3230 0907  
                          l2328 1349                            l3160 163D                            l3152 1639  
                          l3144 162E                            l3136 1623                            l3128 161D  
                          l3224 0819                            l3216 132F                            l2440 1612  
                          l2432 15FC                            l2424 15DA                            l2416 15C6  
                          l3048 0FCD                            l2336 1394                            l2352 16AE  
                          l2344 1663                            l2360 07AC                            l3208 1419  
                          l2600 022F                            l2520 00B1                            l2512 00A1  
                          l2504 0088                            l2408 0B8D                            l3072 0EBA  
                          l3064 0E60                            l3240 096B                            l3232 092A  
                          l3400 17D8                            l3170 1649                            l3162 163E  
                          l3154 163A                            l3146 162F                            l3138 1624  
                          l3226 081C                            l3218 0809                            l3330 1736  
                          l2434 15FE                            l2426 15DF                            l2418 15CA  
                          l2450 1503                            l2442 14EC                            l2338 139B  
                          l2354 16B6                            l2346 1667                            l2370 07D2  
                          l2362 07B3                            l3410 05B4                            l2610 024C  
                          l2602 0238                            l2530 00C5                            l2522 00B5  
                          l2514 00A5                            l2506 008A                            l3074 0EBF  
                          l3066 0E9B                            l3242 0970                            l3234 092D  
                          l3402 17E3                            l3180 1655                            l3172 164A  
                          l3164 163F                            l3156 163B                            l3148 1630  
                          l3340 1740                            l3332 1737                            l3324 172E  
                          l2436 1605                            l2428 15E5                            l2452 1509  
                          l2444 14F4                            l2460 1529                            l2348 1675  
                          l2372 07DC                            l2364 07BD                            l2356 07A0  
                          l3420 05E3                            l3412 05B9                            l2612 024F  
                          l2604 023A                            l2620 0261                            l2540 00D9  
                          l2532 00C9                            l2524 00B9                            l2516 00A9  
                          l2508 0098                            l2380 0B16                            l2700 0D37  
                          l3076 0EC9                            l3068 0E9C                            l3244 0972  
                          l3236 092E                            l3228 08FF                            l3404 17EE  
                          l3430 1485                            l3182 1658                            l3174 164B  
                          l3166 1640                            l3158 163C                            l3350 174B  
                          l3342 1741                            l3334 1738                            l3326 1734  
                          l2438 160D                            l2462 152E                            l2454 1513  
                          l2446 14F7                            l2374 07E4                            l2366 07C5  
                          l2358 07A6                            l3190 157A                            l3422 05E8  
                          l3414 05BE                            l2630 0278                            l2622 0262  
                          l2614 0252                            l2606 0243                            l2550 0125  
                          l2534 00CD                            l2526 00BD                            l2518 00AD  
                          l2542 00DE                            l2470 003A                            l2390 0B4B  
                          l2382 0B2B                            l3246 0977                            l3238 092F  
                          l3406 17F3                            l3440 1499                            l3432 1489  
                          l3424 1479                            l3184 165E                            l3176 1651  
                          l3168 1646                            l3360 1758                            l3352 174E  
                          l3344 1744                            l3336 1739                            l3328 1735  
                          l2456 151A                            l2448 14FE                            l2376 07EA  
                          l2368 07CB                            l3192 157F                            l3416 05C9  
                          l3408 05A1                            l2640 02B8                            l2632 027D  
                          l2624 0266                            l2616 0257                            l2608 0247  
                          l2552 0128                            l2560 013C                            l2544 00DF  
                          l2536 00D1                            l2528 00C1                            l2480 0050  
                          l2472 003C                            l2464 0029                            l2392 0B53  
                          l2384 0B34                            l3434 148D                            l3442 149A  
                          l3426 1481                            l3178 1654                            l3370 1767  
                          l3362 175D                            l3354 1751                            l3346 1745  
                          l3338 173D                            l3186 1337                            l2458 1521  
                          l2378 07F1                            l3194 1583                            l3418 05D4  
                          l2650 02D2                            l2642 02BE                            l2634 028B  
                          l2626 026C                            l2618 025B                            l2570 016F  
                          l2562 0149                            l2554 012C                            l2546 00FB  
                          l2538 00D5                            l2490 0068                            l2474 0041  
                          l2482 0052                            l2466 0030                            l2394 0B55  
                          l2386 0B35                            l3450 088C                            l3436 1491  
                          l3444 14AF                            l3428 1482                            l3380 1772  
                          l3372 1768                            l3364 1762                            l3356 1754  
                          l3348 1748                            l3188 133E                            l3196 1591  
                          l2652 02D4                            l2644 02C6                            l2636 028F  
                          l2628 0273                            l2580 0187                            l2572 0173  
                          l2564 014E                            l2556 012E                            l2548 011C  
                          l2492 006E                            l2484 005B                            l2476 0046  
                          l2468 0036                            l2396 0B59                            l2388 0B4A  
                          l2660 0C7C                            l3460 08BB                            l3452 0894  
                          l3540 13E5                            l3438 1495                            l3382 1784  
                          l3374 1769                            l3366 1765                            l3358 1755  
                          l3198 1592                            l2654 02DF                            l2646 02CB  
                          l2638 02AD                            l2590 01FD                            l2582 0189  
                          l2574 0177                            l2566 0157                            l2558 0137  
                          l2494 0072                            l2486 0060                            l2478 004F  
                          l2398 0B60                            l2670 0CAA                            l2662 0C80  
                          l3470 08E4                            l3462 08C0                            l3454 0896  
                          l3390 17AE                            l3542 13E7                            l3376 176A  
                          l3368 1766                            l2656 02E3                            l2648 02CE  
                          l2592 01FF                            l2584 0192                            l2576 0180  
                          l2568 0158                            l2496 0074                            l2488 0066  
                          l2680 0CD7                            l2672 0CAF                            l2664 0C90  
                          l3464 08C1                            l3456 08A6                            l3472 08EB  
                          l3392 17B3                            l3384 1797                            l3544 13F1  
                          l3536 13D9                            l3378 176E                            l2594 0204  
                          l2578 0183                            l2586 0198                            l2498 0079  
                          l2690 0D0D                            l2682 0CE8                            l2674 0CBD  
                          l2666 0CA0                            l2658 0C77                            l3474 08F8  
                          l3466 08CF                            l3458 08AC                            l3394 17BE  
                          l3386 17AA                            l3546 13F6                            l3538 13DF  
                          l2588 01AE                            l2596 0214                            l2692 0D23  
                          l2684 0CF4                            l2676 0CC5                            l2668 0CA9  
                          l3476 08FB                            l3468 08D4                            l3396 17C4  
                          l3388 17AB                            l3548 13FB                            l2598 022A  
                          l2694 0D28                            l2686 0CF8                            l2678 0CC9  
                          l3478 08FD                            l3398 17D1                            l2696 0D2C  
                          l2688 0D03                            l3666 0F0B                            l2698 0D2E  
                          l3668 14A1                            l2990 14B2                            l2992 14B9  
                          l2994 14CF                            l2996 14D6                            l2998 0ECD  
                          ?_isr 0070                            STR_1 0790                            STR_2 0796  
                          STR_3 079A                            u3000 0266                            u3001 0265  
                          u3010 026C                            u3011 026B                            u2300 1354  
                          u3100 02D2                            u3020 0273                            u2301 1353  
                          u3101 02D1                            u3021 0272                            u2310 1387  
                          u3110 02E3                            u3030 027D                            u2311 1386  
                          u3111 02E2                            u3031 027C                            u2400 07CB  
                          u4000 14EA                            u3040 028F                            u3200 0CF8  
                          u3120 0C7C                            u2401 07CA                            u4001 14E9  
                          u3041 028E                            u3201 0CF7                            u3121 0C7B  
                          u4010 0ED8                            u2410 07E4                            u3050 029E  
                          u3210 0CFE                            u3130 0C80                            u4011 0ED7  
                          u2411 07E3                            u3211 0CFD                            u3131 0C7F  
                          u4020 0F26                            u2340 13A1                            u2420 07EA  
                          u3060 02AD                            u3220 0D03                            u3140 0CA0  
                          u4100 0EBA                            u4021 0F25                            u2341 13A0  
                          u2325 138E                            u2421 07E9                            u3061 02AC  
                          u3221 0D02                            u3141 0C9F                            u4101 0EB9  
                          u4030 0F38                            u2350 1674                            u3070 02B8  
                          u2510 0B9F                            u2430 0B2B                            u3230 0D18  
                          u4031 0F37                            u2335 1395                            u2351 1673  
                          u3071 02B7                            u3055 0299                            u2511 0B9E  
                          u2431 0B2A                            u4200 133E                            u2600 14F4  
                          u4040 0F61                            u2360 16C3                            u3080 02BD  
                          u2520 0BA6                            u2440 0B43                            u3240 0D28  
                          u3160 0CC3                            u4201 133D                            u2601 14F3  
                          u4041 0F60                            u2361 16C2                            u3081 02BC  
                          u2521 0BA5                            u2505 0B91                            u3241 0D27  
                          u3161 0CC2                            u4105 0EB6                            u2530 15D0  
                          u4050 0F6D                            u2370 07A6                            u4210 1590  
                          u3090 02CB                            u2450 0B59                            u3250 0D2C  
                          u2531 15CF                            u4051 0F6C                            u2355 1670  
                          u2371 07A5                            u4211 158F                            u3091 02CA  
                          u2451 0B58                            u3251 0D2B                            u3235 0D13  
                          u3155 0CB4                            u2620 1507                            u4060 0F74  
                          u2380 07AC                            u4220 15AD                            u2700 0072  
                          u2460 0B60                            u3180 0CE6                            u2621 1506  
                          u4061 0F73                            u4045 0F5D                            u2365 16BF  
                          u2381 07AB                            u4221 15AC                            u2701 0071  
                          u2461 0B5F                            u2445 0B3E                            u3181 0CE5  
                          u2550 15E3                            u2630 1513                            u4070 0FD6  
                          u2390 07C5                            u4230 15C4                            u2710 0079  
                          u2551 15E2                            u2631 1512                            u2615 14F8  
                          u4071 0FD5                            u2391 07C4                            u4231 15C3  
                          u4215 158C                            u2711 0078                            u3175 0CD8  
                          u4080 0FF8                            u4240 1419                            u2720 007E  
                          u2480 0B7C                            u4400 08E4                            u4320 17A9  
                          u2545 15D4                            u4081 0FF7                            u4241 1418  
                          u4225 15A9                            u2721 007D                            u2481 0B7B  
                          u4401 08E3                            u4321 17A8                            u4250 132F  
                          u2570 15F6                            u2650 1527                            u2810 0144  
                          u2730 0098                            u2490 0B84                            u4090 0EAA  
                          u4410 08F7                            u4330 17D1                            u4251 132E  
                          u2571 15F5                            u2651 1526                            u2635 150F  
                          u4235 15C0                            u2811 0143                            u2731 0097  
                          u2491 0B83                            u2475 0B6C                            u3195 0CEC  
                          u4091 0EA9                            u4411 08F6                            u4331 17D0  
                          u4340 05B3                            u2900 01D4                            u2820 0149  
                          u2740 009C                            u2660 003A                            u4260 0907  
                          u2565 15E6                            u2645 151B                            u4245 1415  
                          u4341 05B2                            u2901 01D5                            u2821 0148  
                          u2805 0130                            u2741 009B                            u2661 0039  
                          u4261 0906                            u4405 08E0                            u4325 17A5  
                          u4350 1480                            u2590 160B                            u2910 01E6  
                          u2902 01DA                            u2830 014E                            u2750 00FB  
                          u2670 0041                            u4270 0929                            u4351 147F  
                          u2591 160A                            u2575 15F2                            u2911 01E7  
                          u2903 01DB                            u2831 014D                            u2751 00FA  
                          u2671 0040                            u4095 0EA6                            u4271 0928  
                          u4415 08F3                            u4335 17CD                            u2920 0204  
                          u2912 01EC                            u2760 0106                            u2680 0046  
                          u4280 096B                            u4360 0893                            u2585 15FF  
                          u4345 05AF                            u2921 0203                            u2913 01ED  
                          u2841 0161                            u2761 0104                            u2681 0045  
                          u4281 096A                            u4361 0892                            u2930 022A  
                          u2850 0173                            u2842 0168                            u2770 0107  
                          u2690 0066                            u4370 08A5                            u2931 0229  
                          u2851 0172                            u2843 016F                            u2755 00F7  
                          u2691 0065                            u4275 0925                            u4371 08A4  
                          u2940 022F                            u2860 0177                            u2780 011C  
                          u4380 08BF                            u2941 022E                            u2861 0176  
                          u2781 011B                            u4381 08BE                            u2870 0187  
                          u2790 012C                            u4390 08CF                            u4550 13E5  
                          u2871 0186                            u2791 012B                            u4391 08CE  
                          u4551 13E4                            u2960 0247                            u2961 0246  
                          u2970 024C                            u2890 01AE                            u2971 024B  
                          u2955 023C                            u2891 01AD                            u4395 08CB  
                          u2980 0257                            u2981 0256                            u2893 01AA  
                          u2885 018B                            u2990 025F                            u2991 025E  
                          i1l66 13BF                            i1l67 13BD                            i1l68 13CE  
                          i1l69 13CE                            u4597 1401                    __CFG_WRT$OFF 0000  
                          _main 13D9                            _font 0612          is_deadzone@deadzoneLow 00D7  
                          btemp 007E  update_vol_motor@curPotmeterVol 00E7                   __CFG_BOREN$ON 0000  
        i1is_deadzone@turnPoint 004E                  i1___fladd@aexp 0035                  i1___fladd@bexp 0036  
                          start 0012                   __CFG_IESO$OFF 0000                    ?_is_deadzone 00D1  
                         ??_isr 005A                  ?_update_volume 0070                   ___fltol@sign1 00CF  
                ??_display_init 00A1                 __end_of___fladd 02E5                           ?_main 0070  
                 __CFG_WDTE$OFF 0000                 __end_of___fltol 0BB2                 __end_of___lwdiv 1613  
                         i1l211 09BD                           i1l212 09BC                           i1l213 09B8  
                         i1l214 09BB                           i1l215 09ED                           i1l216 09ED  
                         i1l217 09E7                           i1l218 09EC                           i1l219 09F8  
                         i1l340 1478                           i1l341 1473                           i1l502 1359  
                         i1l503 1363                           i1l335 0DF3                           i1l504 1378  
                         i1l336 0DFD                           i1l344 16ED                           i1l505 137D  
               __end_of___lwmod 152F                           i1l346 16E8                           i1l347 172D  
                         i1l339 1456                           i1l348 1728                           i1l349 1727  
                         i1l381 0A4C                           i1l382 09FB                           i1l383 0A71  
                         i1l800 0401                           i1l384 0A06                           i1l376 0840  
                         i1l801 03F8                           i1l385 0A13                           i1l377 0886  
                         i1l810 0453                           i1l802 03D4                           i1l386 0A20  
                         i1l378 088B                           i1l811 043C                           i1l803 03E1  
                         i1l387 0A2D                           i1l820 04F6                           i1l812 043F  
                         i1l804 03E4                           i1l388 0A3C                           i1l821 0504  
                         i1l813 0445                           i1l805 03EA                           i1l389 0A79  
                         i1l830 056F                           i1l814 051D                           i1l822 050B  
                         i1l806 0401                           i1l910 0BCC                           i1l831 056F  
                         i1l823 050E                           i1l815 04D0                           i1l807 0454  
                         i1l911 0BD4                           i1l832 056E                           i1l824 0516  
                         i1l816 04CF                           i1l808 0414                           i1l920 0C30  
                         i1l912 0BE6                           i1l833 058A                           i1l825 051C  
                         i1l817 04DE                           i1l809 05A0                           i1l921 0C24  
                         i1l913 0C73                           i1l770 153A                           i1l826 0534  
                         i1l818 04F5                           i1l690 0AE2                           i1l914 0BF9  
                         i1l771 154B                           i1l835 057A                           i1l827 052B  
                         i1l819 0517                           i1l691 0ACE                           i1l923 0C3B  
                         i1l915 0BEB                           i1l772 154C                           i1l836 0589  
                         i1l828 0533                           i1l692 0ACF                           i1l924 0C3B  
                         i1l916 0C00                           i1l773 1565                           i1l837 0590  
                         i1l829 0532                           i1l693 0AE1                           i1l925 0C47  
                         i1l917 0C1C                           i1l774 1573                           i1l838 0594  
                         i1l790 030B                           i1l694 0B05                           i1l926 0C6A  
                         i1l918 0C01                           i1l775 1579                           i1l839 05A0  
                         i1l791 0317                           i1l695 0AF2                           i1l919 0C23  
                         i1l768 1574                           i1l792 0324                           i1l696 0AFE  
                         i1l688 0A99                           i1l769 1546                           i1l793 0330  
                         i1l697 0AF3                           i1l689 0B15                           i1l794 0346  
                         i1l698 0B04                           i1l795 0343                           i1l699 0B15  
                         i1l796 034E                           i1l788 02F8                           i1l797 039A  
                         i1l789 030E                           i1l798 035D                           i1l799 03D3  
                         _PORTA 0005                           _PORTC 0007           __size_ofi1_get_volume 0069  
                         _TRISC 0087                           _TRISD 0088           _activateSelectedRelay 1479  
                __CFG_FCMEN$OFF 0000                     _write_space 157A                 __end_of_dpowers 078E  
                 _start_receive 0820         is_deadzone@deadzoneHigh 00D9                           pclath 000A  
              __end_ofi1___wmul 137E                  i1___fltol@exp1 0042                           status 0003  
           i1___wmul@multiplier 0070                           wtemp0 007E                 __end_of_sprintf 1000  
            __size_ofi1___fladd 02BC                 i1___fladd@signs 0034              __size_ofi1___fltol 009C  
            __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 00DC       i1is_deadzone@deadzoneHigh 004B  
                __CFG_MCLRE$OFF 0000                 __initialization 0015                    __end_of_main 140A  
                  __end_of_font 0784                _update_vol_motor 088C                    i1_get_volume 16C5  
            handle_rotary@portA 0073              handle_rotary@portB 0075             _display_write_start 1337  
                        ??_main 00E9                     ?i1___xxtofl 0070                 _handle_potmeter 1440  
                write_text@text 00B3                  ?_start_receive 0070                          _ADRESH 001E  
                        _ADRESL 009E            ?_display_write_start 0070                          i1l3100 1537  
                        i1l3110 155D                          i1l3102 153A                          i1l3120 1579  
                        i1l3112 1563                          i1l3104 1541                          i1l3114 1565  
                        i1l3106 1546                          i1l3116 156C                          i1l3108 154C  
                        i1l3118 1574                          i1l3310 16EB                          i1l3080 0D59  
                        i1l3320 1728                          i1l3312 16EC                          i1l3304 16C5  
                        i1l3090 0DEE                          i1l3082 0D94                          i1l3322 172D  
                        i1l3314 16ED                          i1l3306 16CD                          i1l3250 09FB  
                        i1l3092 0DF3                          i1l3084 0DCF                          i1l3316 1721  
                        i1l3308 16E8                          i1l3500 09D8                          i1l3260 0A10  
                        i1l3252 09FF                          i1l2710 1371                          i1l2702 1356  
                        i1l3094 0DFD                          i1l3086 0DD0                          i1l3078 0D38  
                        i1l3318 1726                          i1l3502 09E0                          i1l3270 0A26  
                        i1l3262 0A13                          i1l3254 0A03                          i1l3510 082F  
                        i1l3096 152F                          i1l2800 035D                          i1l2720 0A98  
                        i1l2712 1378                          i1l2704 1359                          i1l3088 0DDE  
                        i1l3504 09E7                          i1l3280 0A3C                          i1l3272 0A2A  
                        i1l3264 0A19                          i1l3256 0A06                          i1l3248 09F9  
                        i1l3520 0872                          i1l3512 0831                          i1l3098 1531  
                        i1l2810 0371                          i1l2802 0361                          i1l2730 0AB9  
                        i1l2722 0A99                          i1l2714 137D                          i1l2706 135D  
                        i1l3530 1456                          i1l3506 09F6                          i1l3282 0A44  
                        i1l3274 0A2D                          i1l3266 0A1D                          i1l3258 0A0C  
                        i1l3290 0A71                          i1l3522 0878                          i1l3514 083F  
                        i1l2900 050B                          i1l2820 0385                          i1l2812 0375  
                        i1l2804 0365                          i1l2732 0ABD                          i1l2740 0AE2  
                        i1l2724 0AAE                          i1l2716 0A7A                          i1l2708 136A  
                        i1l3532 1465                          i1l3284 0A46                          i1l3276 0A35  
                        i1l3268 0A20                          i1l3524 0886                          i1l3516 0840  
                        i1l3508 0820                          i1l2910 051E                          i1l2902 050E  
                        i1l2822 0389                          i1l2814 0379                          i1l2806 0369  
                        i1l2830 039A                          i1l2750 0B0A                          i1l2742 0AE8  
                        i1l2734 0AC4                          i1l2726 0AAF                          i1l2718 0A8F  
                        i1l3534 1469                          i1l3526 1440                          i1l3286 0A4B  
                        i1l3278 0A37                          i1l3518 086D                          i1l3550 13A8  
                        i1l2920 0539                          i1l2912 0522                          i1l2904 0513  
                        i1l2840 03E4                          i1l2832 039B                          i1l2824 038D  
                        i1l2816 037D                          i1l2808 036D                          i1l2760 02F8  
                        i1l2752 02E5                          i1l2744 0AF1                          i1l2736 0ACD  
                        i1l2728 0AB7                          i1l3528 1455                          i1l3480 0978  
                        i1l3288 0A4C                          i1l3552 13AC                          i1l3560 13BF  
                        i1l2930 057A                          i1l2922 0547                          i1l2914 0528  
                        i1l2906 0517                          i1l2850 0405                          i1l2842 03E8  
                        i1l2834 03B7                          i1l2826 0391                          i1l2818 0381  
                        i1l2762 02FD                          i1l2770 030E                          i1l2754 02EC  
                        i1l2746 0AF3                          i1l2738 0ACF                          i1l3490 09B1  
                        i1l3482 098C                          i1l3562 13C5                          i1l3554 13B1  
                        i1l2940 0590                          i1l2932 0582                          i1l2924 054B  
                        i1l2916 052F                          i1l2860 042F                          i1l2908 051D  
                        i1l2852 040A                          i1l2844 03EA                          i1l2836 03D8  
                        i1l2828 0395                          i1l2780 032A                          i1l2772 0317  
                        i1l2764 0302                          i1l2756 02F2                          i1l2748 0B05  
                        i1l3492 09B8                          i1l3484 0996                          i1l3564 13CA  
                        i1l3556 13B7                          i1l2942 059B                          i1l2934 0587  
                        i1l2926 0569                          i1l2918 0534                          i1l2870 0445  
                        i1l2862 0433                          i1l2854 0413                          i1l2846 03F3  
                        i1l2838 03E1                          i1l2790 0343                          i1l2782 032E  
                        i1l2774 031C                          i1l2766 030B                          i1l2758 02F6  
                        i1l2950 0BBC                          i1l3486 09A0                          i1l3494 09BD  
                        i1l3670 0A53                          i1l3558 13BD                          i1l2944 059F  
                        i1l2936 058A                          i1l2928 0574                          i1l2880 04BB  
                        i1l2872 044E                          i1l2864 043C                          i1l2856 0414  
                        i1l2848 03F8                          i1l2792 0344                          i1l2784 0330  
                        i1l2776 0322                          i1l2768 030C                          i1l2960 0BEB  
                        i1l2952 0BCC                          i1l3496 09C8                          i1l3488 09A6  
                        i1l3672 0A6C                          i1l2938 058E                          i1l2890 04F4  
                        i1l2882 04C0                          i1l2866 043F                          i1l2858 042B  
                        i1l2874 0454                          i1l2786 0335                          i1l2794 0346  
                        i1l2778 0324                          i1l2970 0C24                          i1l2962 0BF9  
                        i1l2954 0BDC                          i1l2946 0BB3                          i1l3498 09D2  
                        i1l3674 0A58                          i1l2892 04F6                          i1l2876 046A  
                        i1l2884 04D0                          i1l2868 0443                          i1l2796 0354  
                        i1l2788 033A                          i1l2980 0C5F                          i1l2972 0C30  
                        i1l2964 0C01                          i1l2956 0BE5                          i1l2948 0BB8  
                        i1l2894 04FF                          i1l2886 04E6                          i1l2878 04B9  
                        i1l2798 0358                          i1l2982 0C64                          i1l2974 0C34  
                        i1l2966 0C05                          i1l2958 0BE6                          i1l2896 0503  
                        i1l2888 04EB                          i1l2984 0C68                          i1l2976 0C3F  
                        i1l2968 0C13                          i1l2898 0508                          i1l2986 0C6A  
                        i1l2978 0C49                          i1l2988 0C73                          u330_20 0A8F  
                        u330_21 0A8E                          u331_20 0AA7                          u411_20 0DDE  
                        u411_21 0DDD                          u331_25 0AA2                          u411_25 0DDA  
                        u340_20 02F6                          u332_20 0ABD                          u412_20 0DEE  
                        u340_21 02F5                          u332_21 0ABC                          u412_21 0DED  
                        u412_25 0DEA                          u413_20 1537                          u341_20 02FD  
                        u333_20 0AC4                          u413_21 1536                          u341_21 02FC  
                        u333_21 0AC3                          u350_20 03C2                          u342_20 0302  
                        u326_20 135D                          u430_20 16E7                          u350_21 03C0  
                        u342_21 0301                          u326_21 135C                          u430_21 16E6  
                        u414_25 153B                          u334_25 0AD0                          u430_25 16E3  
                        u415_20 154A                          u351_20 03C3                          u343_20 0322  
                        u335_20 0AE0                          u431_20 1721                          u415_21 1549  
                        u343_21 0321                          u335_21 0ADF                          u431_21 1720  
                        u327_25 1364                          u360_20 0433                          u352_20 03D8  
                        u344_20 032E                          u336_20 0AE8                          u360_21 0432  
                        u352_21 03D7                          u344_21 032D                          u336_21 0AE7  
                        u416_25 154D                          u328_25 136B                          u417_20 155D  
                        u361_20 0443                          u353_20 03E8                          u345_20 0335  
                        u329_20 1377                          u417_21 155C                          u361_21 0442  
                        u353_21 03E7                          u345_21 0334                          u329_21 1376  
                        u417_25 1559                          u337_25 0AF5                          u370_20 0503  
                        u346_20 033A                          u338_20 0B03                          u442_20 0996  
                        u450_20 083E                          u370_21 0502                          u346_21 0339  
                        u338_21 0B02                          u442_21 0995                          u450_21 083D  
                        u418_25 1566                          u362_25 0447                          u354_25 03EC  
                        u442_25 0992                          u450_25 083A                          u419_20 1572  
                        u371_20 0508                          u363_20 046A                          u355_20 0400  
                        u347_20 0354                          u339_20 0B0A                          u443_20 09A0  
                        u451_20 085A                          u419_21 1571                          u371_21 0507  
                        u363_21 0469                          u355_21 03FF                          u347_21 0353  
                        u339_21 0B09                          u443_21 099F                          u363_23 0466  
                        u443_25 099C                          u451_25 0855                          u380_20 0569  
                        u372_20 0513                          u364_20 0490                          u356_20 0405  
                        u348_20 0358                          u444_20 09A6                          u452_20 0885  
                        u380_21 0568                          u372_21 0512                          u364_21 0491  
                        u356_21 0404                          u348_21 0357                          u444_21 09A5  
                        u452_21 0884                          u364_22 0496                          u364_23 0497  
                        u452_25 0881                          u460_27 082C                          u381_20 0574  
                        u373_20 051B                          u365_20 04A2                          u357_20 040A  
                        u349_20 03B7                          u429_20 16CD                          u453_20 1454  
                        u445_20 09B1                          u381_21 0573                          u373_21 051A  
                        u365_21 04A3                          u357_21 0409                          u349_21 03B6  
                        u429_21 16CC                          u453_21 1453                          u445_21 09B0  
                        u365_22 04A8                          u365_23 04A9                          u349_25 03B3  
                        u453_25 1450                          u461_27 086F                          u382_20 0579  
                        u374_20 0522                          u366_20 04C0                          u390_20 0BFF  
                        u454_20 1469                          u446_20 09C8                          u382_21 0578  
                        u374_21 0521                          u366_21 04BF                          u358_21 041D  
                        u390_21 0BFE                          u454_21 1468                          u446_21 09C7  
                        u358_22 0424                          u358_23 042B                          u446_25 09C4  
                        u383_20 0587                          u375_20 0528                          u367_20 04E6  
                        u359_20 042F                          u447_20 09D2                          u383_21 0586  
                        u375_21 0527                          u367_21 04E5                          u359_21 042E  
                        u447_21 09D1                          u391_25 0C14                          u447_25 09CE  
                        u384_20 058E                          u376_20 052F                          u368_20 04EB  
                        u392_20 0C22                          u448_20 09D8                          u456_20 13AC  
                        u384_21 058D                          u376_21 052E                          u368_21 04EA  
                        u392_21 0C21                          u448_21 09D7                          u456_21 13AB  
                        u385_20 059F                          u377_20 0539                          u449_20 09E0  
                        u457_20 13B7                          u385_21 059E                          u377_21 0538  
                        u449_21 09DF                          u457_21 13B6                          u369_25 04F8  
                        u393_25 0C28                          u378_20 054B                          u394_20 0C34  
                        u386_20 0BB8                          u458_20 13C5                          u378_21 054A  
                        u394_21 0C33                          u386_21 0BB7                          u458_21 13C4  
                        u379_20 055A                          u395_20 0C3A                          u387_20 0BBC  
                        u395_21 0C39                          u387_21 0BBB                          u379_25 0555  
                        u396_20 0C3F                          u388_20 0BDC                          u396_21 0C3E  
                        u388_21 0BDB                          u397_20 0C54                          u397_25 0C4F  
                        u389_25 0BF0                          u398_20 0C64                          u398_21 0C63  
                        u399_20 0C68                          u399_21 0C67                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 0D38                  __CFG_PWRTE$OFF 0000  
                     ??___fladd 00B6                          ___wmul 137E                          __lastA 006A  
                        __lastB 0068                 ??_update_volume 00C1                       ??___fltol 00CA  
                     ??___lwdiv 00A4                       ??___lwmod 00AC                          _config 172E  
              __end_of_init_adc 0820                          _volume 00EB                 write_int@number 00BD  
             __end_ofi1___fladd 05A1          ?_activateSelectedRelay 0070               __end_ofi1___fltol 0B16  
             __end_ofi1___lwdiv 157A                          saved_w 007E                __end_of_spiWrite 1356  
               i1___fltol@sign1 0041          __size_ofi1_is_deadzone 00C6                       ??_sprintf 00B2  
         ??_display_write_start 00A0                    ___xxtofl@arg 00AA                    ___xxtofl@exp 00A9  
                  ___xxtofl@val 00A0         __end_of__initialization 0025          is_deadzone@currentStep 00D1  
          __end_of_display_init 1663             __size_ofi1___xxtofl 00C2                      ___fltol@f1 00C6  
                __pcstackCOMMON 0070            __size_of_is_deadzone 00CC         __end_of_handle_potmeter 1479  
                     ?i1___wmul 0070                 ??_start_receive 0071               i1_is_deadzone$899 004D  
                    __pbssBANK0 005E                      __pbssBANK1 00EB           __end_of_handle_remote 0A7A  
         __end_of_handle_rotary 09F9                  i1___xxtofl@arg 007A                  i1___xxtofl@exp 0079  
                i1___xxtofl@val 0070                   i1_is_deadzone 0D38                      __pmaintext 13D9  
                       ?___wmul 00A0                      __pintentry 0004                         ?_config 0070  
                    ??i1___wmul 0074                  __selectedInput 00ED                       ?___xxtofl 00A0  
                  ?_write_space 00A1        __end_of_update_vol_motor 08FF                      _get_volume 08FF  
                       _SSPSTAT 0094                      __stringtab 0600                       ?_init_adc 0070  
            __size_of_write_int 0036                  ?i1_is_deadzone 0043                      _lastVolume 0066  
                     ?_spiWrite 0070                         ___fladd 0029                ?_handle_potmeter 0070  
                       ___fltol 0B16           i1get_volume@ad_result 0050                 __size_of___wmul 002A  
                       ___lwdiv 15C6                         ___lwmod 14EC                 __size_of_config 0069  
                     _ANSELbits 0188                    ??i1___xxtofl 0074                         __ptext1 1797  
                       __ptext2 088C                         __ptext3 08FF                         __ptext4 0DFE  
                       __ptext5 0C74                         __ptext6 0B16                         __ptext7 0029  
                       __ptext8 05A1                         __ptext9 157A                __selectedDisplay 00EF  
                       _dpowers 0784               i1___lwdiv@divisor 0070                    __size_of_isr 0031  
             i1___lwdiv@counter 0077                      ??___xxtofl 00A4                         _sprintf 0ECA  
                       clrloop0 05F6           __size_of_display_init 0050            end_of_initialization 0025  
                    ??_init_adc 00A0              __end_ofi1___xxtofl 0C74                      ??_spiWrite 00A0  
                  __pstringtext 0600               __end_of_step_size 0790           i1___wmul@multiplicand 0072  
       ??_activateSelectedRelay 00A0                       _PORTBbits 0006                       _PORTCbits 0007  
                     _PORTDbits 0008            __inputUpdateRequired 006D                    _display_init 1613  
                   ___fladd@grs 00C5               __end_of_write_int 1440                   ___xxtofl@sign 00A8  
                     _TRISAbits 0085                       _TRISBbits 0086                       _TRISCbits 0087  
                     _TRISEbits 0089                       i1___fladd 02E5                       i1___fltol 0A7A  
                     i1___lwdiv 152F                     ?_get_volume 00DE                 ??i1_is_deadzone 0047  
                  write_int@num 00BF                    write_space@i 00A4                    write_space@x 00A6  
                 ?_update_input 0070                  __end_of___wmul 13A8           __end_of_update_volume 1800  
                    _write_char 079D                      _write_font 1663                  __end_of_config 1797  
                    _write_text 14B2     __end_of_display_write_start 1346             start_initialization 0015  
             __size_ofi1___wmul 0028                      ?i1___fladd 0020                     __end_of_isr 13D9  
                    ?i1___fltol 0038                      ?i1___lwdiv 0070            __size_of_write_space 004C  
              write_space@count 00A1                   ??_is_deadzone 00D5                  ??_update_input 00C1  
                      ??___wmul 00A4                        ??_config 00A1             __size_of_get_volume 0079  
           update_volume@spaces 00C1                       ___fladd@a 00B2                       ___fladd@b 00AE  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
         __end_of_start_receive 088C               __size_of___xxtofl 00C4               ?_update_vol_motor 0070  
        __CFG_FOSC$INTRC_CLKOUT 0000                 i1___xxtofl@sign 0078              ??_update_vol_motor 00E4  
                   sprintf@flag 00B7                     sprintf@prec 00B8       update_vol_motor@ad_result 00E5  
             __size_of_init_adc 0017                ___lwdiv@dividend 00A2                        ?___fladd 00AE  
                 ?i1_get_volume 0050                        ?___fltol 00C6                        ?___lwdiv 00A0  
                      ?___lwmod 00A8             __end_of_is_deadzone 0ECA                     ?_write_char 0070  
             __size_of_spiWrite 0010                     ?_write_font 00A6                     ?_write_text 00B3  
        __size_of_handle_remote 0081          __size_of_handle_rotary 0081                       _lastInput 0064  
                   ??i1___fladd 0028                     ??i1___fltol 003C                ___lwdiv@quotient 00A5  
                   ??i1___lwdiv 0074                        ?_sprintf 00AE                 _is_deadzone$899 00DB  
             interrupt_function 0004                  ___wmul@product 00A4                        _IOCBbits 0096  
                     clear_ram0 05F5                        _PIE1bits 008C                        _PIR1bits 000C  
                ??i1_get_volume 0052  __size_of_activateSelectedRelay 0039                      _ADCON0bits 001F  
                   __stringbase 0612                      _ADCON1bits 009F               ___wmul@multiplier 00A0  
 __end_of_activateSelectedRelay 14B2                        i1___wmul 1356                       _step_size 078E  
                   write_char@c 00B2        __size_of_handle_potmeter 0039                       _vol_motor 006C  
                   write_font@x 00AE                     write_text@c 00B5            __end_of_update_input 05F5  
      i1is_deadzone@deadzoneLow 0049                    ??_get_volume 00E0                       _write_int 140A  
             _display_write_end 1328             __size_of_write_char 0062                   _handle_remote 09F9  
           __size_of_write_font 0062             __size_of_write_text 003A                   _handle_rotary 0978  
            ?_display_write_end 0070                     _is_deadzone 0DFE             ??_display_write_end 00A0  
              __size_of___fladd 02BC                  __lastAdcResult 0062                __size_of___fltol 009C  
              __size_of___lwdiv 004D                __size_of___lwmod 0043              __end_of_get_volume 0978  
            __end_of__stringtab 0612                      _ANSELHbits 0189                      sprintf@val 00B9  
                      ___xxtofl 0C74                 ___lwdiv@divisor 00A0                 ___lwdiv@counter 00A7  
                      __ptext10 140A                        __ptext11 14B2                        __ptext20 172E  
                      __ptext12 079D                        __ptext21 0809                        __ptext13 1663  
                      __ptext30 16C5                        __ptext22 1613                        __ptext14 137E  
                      __ptext31 0D38                        __ptext23 1346                        __ptext15 0ECA  
                      __ptext32 0BB2                        __ptext24 1479                        __ptext16 14EC  
                      __ptext33 1356                        __ptext25 13A8                        __ptext17 15C6  
                      __ptext34 0A7A                        __ptext26 0820                        __ptext18 1337  
                      __ptext35 02E5                        __ptext27 09F9                        __ptext19 1328  
                      __ptext36 152F                        __ptext28 0978                        __ptext29 1440  
             __CFG_BOR4V$BOR21V 0000                      ?_write_int 00BD       __end_of_display_write_end 1337  
              __size_of_sprintf 0136              i1___lwdiv@dividend 0072                  ?_handle_remote 0070  
                      _ir_input 005E                  ?_handle_rotary 0070                        _init_adc 0809  
                 __size_of_main 0031               write_font@fontPos 00A6           __end_ofi1_is_deadzone 0DFE  
         handle_potmeter@newVol 0056        handle_potmeter@ad_result 0058                        _spiWrite 1346  
       i1get_volume@currentStep 0054              i1___lwdiv@quotient 0075                      _INTCONbits 000B  
                 ??_write_space 00A3            __end_ofi1_get_volume 172E               ??_handle_potmeter 007E  
                      intlevel1 0000                       sprintf@ap 00B6    __size_of_display_write_start 000F  
                     sprintf@sp 00BB          i1is_deadzone@adcResult 0045                ___lwmod@dividend 00AA  
        __size_of_update_volume 0069                       stringcode 060A                      _OSCCONbits 008F  
     __size_of_update_vol_motor 0073             get_volume@ad_result 00DE                    ??_write_char 00B0  
                  ??_write_font 00A8                    ??_write_text 00B5              handle_remote@found 0070  
                      sprintf@c 00BC                        sprintf@f 00AE           __size_of_update_input 0054  
                start_receive@i 0079                 ___lwmod@divisor 00A8                 ___lwmod@counter 00AD  
                      stringtab 0600        i1is_deadzone@currentStep 0043                     ??_write_int 00BF  
                 ___fladd@signs 00C2                 ??_handle_remote 0070      __size_of_display_write_end 000F  
               ??_handle_rotary 0070             __end_of_write_space 15C6                    ___fladd@aexp 00C3  
                  ___fladd@bexp 00C4            is_deadzone@adcResult 00D3              __end_of_write_char 07FF  
            __end_of_write_font 16C5              __end_of_write_text 14EC  
