

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Jan 28 09:43:18 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     	FNCALL	_main,_activateSelectedRelay
  1180                           	FNCALL	_main,_config
  1181                           	FNCALL	_main,_update_input
  1182                           	FNCALL	_main,_update_volume
  1183                           	FNCALL	_update_volume,_display_write_end
  1184                           	FNCALL	_update_volume,_display_write_start
  1185                           	FNCALL	_update_volume,_write_int
  1186                           	FNCALL	_update_volume,_write_space
  1187                           	FNCALL	_update_volume,_write_text
  1188                           	FNCALL	_update_input,_display_write_end
  1189                           	FNCALL	_update_input,_display_write_start
  1190                           	FNCALL	_update_input,_write_int
  1191                           	FNCALL	_update_input,_write_space
  1192                           	FNCALL	_update_input,_write_text
  1193                           	FNCALL	_write_space,_spiWrite
  1194                           	FNCALL	_write_int,_sprintf
  1195                           	FNCALL	_write_int,_write_char
  1196                           	FNCALL	_write_int,_write_text
  1197                           	FNCALL	_write_text,_write_char
  1198                           	FNCALL	_write_char,_write_font
  1199                           	FNCALL	_write_font,___wmul
  1200                           	FNCALL	_write_font,_spiWrite
  1201                           	FNCALL	_sprintf,___lwdiv
  1202                           	FNCALL	_sprintf,___lwmod
  1203                           	FNCALL	_config,_display_init
  1204                           	FNCALL	_config,_init_adc
  1205                           	FNCALL	_display_init,_spiWrite
  1206                           	FNROOT	_main
  1207                           	FNCALL	_isr,_handle_potmeter
  1208                           	FNCALL	_isr,_handle_rotary
  1209                           	FNCALL	_isr,_start_receive
  1210                           	FNCALL	_start_receive,_handle_remote
  1211                           	FNCALL	_handle_potmeter,_is_deadzone
  1212                           	FNCALL	_handle_potmeter,i1___lwdiv
  1213                           	FNCALL	_is_deadzone,___fladd
  1214                           	FNCALL	_is_deadzone,___fltol
  1215                           	FNCALL	_is_deadzone,___xxtofl
  1216                           	FNCALL	_is_deadzone,i1___wmul
  1217                           	FNCALL	intlevel1,_isr
  1218                           	global	intlevel1
  1219                           	FNROOT	intlevel1
  1220                           	global	_font
  1221                           psect	stringtext,class=STRCODE,delta=2,reloc=256,noexec
  1222                           global __pstringtext
  1223                           __pstringtext:
  1224  0300                     stringtab:
  1225  0300                     	global    __stringtab
  1226                           __stringtab:
  1227  0300                     ;	String table - string pointers are 2 bytes each
  1228                           	btfsc	(btemp+1),7
  1229  0300  1BFF               	ljmp	stringcode
  1230  0301  2B0A               	bcf	status,7
  1231  0302  1383               	btfsc	(btemp+1),0
  1232  0303  187F               	bsf	status,7
  1233  0304  1783               	movf	indf,w
  1234  0305  0800               	incf fsr
  1235  0306  0A84               skipnz
  1236  0307  1903               incf btemp+1
  1237  0308  0AFF               	return
  1238  0309  0008               stringcode:
  1239  030A                     	movf btemp+1,w
  1240  030A  087F               andlw 7Fh
  1241  030B  397F               movwf	pclath
  1242  030C  008A               	movf	fsr,w
  1243  030D  0804               incf fsr
  1244  030E  0A84               skipnz
  1245  030F  1903               incf btemp+1
  1246  0310  0AFF               	movwf pc
  1247  0311  0082               	global __stringbase
  1248                           __stringbase:
  1249  0312                     	global    __end_of__stringtab
  1250                           __end_of__stringtab:
  1251  0312                     	file	"./Font.h"
  1252                           	line	4
  1253                           _font:
  1254  0312                     	retlw	03Eh
  1255  0312  343E               	retlw	0
  1256  0313  3400               
  1257                           	retlw	051h
  1258  0314  3451               	retlw	0
  1259  0315  3400               
  1260                           	retlw	049h
  1261  0316  3449               	retlw	0
  1262  0317  3400               
  1263                           	retlw	045h
  1264  0318  3445               	retlw	0
  1265  0319  3400               
  1266                           	retlw	03Eh
  1267  031A  343E               	retlw	0
  1268  031B  3400               
  1269                           	retlw	low(0)
  1270  031C  3400               	retlw	high(0)
  1271  031D  3400               
  1272                           	retlw	042h
  1273  031E  3442               	retlw	0
  1274  031F  3400               
  1275                           	retlw	07Fh
  1276  0320  347F               	retlw	0
  1277  0321  3400               
  1278                           	retlw	040h
  1279  0322  3440               	retlw	0
  1280  0323  3400               
  1281                           	retlw	low(0)
  1282  0324  3400               	retlw	high(0)
  1283  0325  3400               
  1284                           	retlw	042h
  1285  0326  3442               	retlw	0
  1286  0327  3400               
  1287                           	retlw	061h
  1288  0328  3461               	retlw	0
  1289  0329  3400               
  1290                           	retlw	051h
  1291  032A  3451               	retlw	0
  1292  032B  3400               
  1293                           	retlw	049h
  1294  032C  3449               	retlw	0
  1295  032D  3400               
  1296                           	retlw	046h
  1297  032E  3446               	retlw	0
  1298  032F  3400               
  1299                           	retlw	021h
  1300  0330  3421               	retlw	0
  1301  0331  3400               
  1302                           	retlw	041h
  1303  0332  3441               	retlw	0
  1304  0333  3400               
  1305                           	retlw	045h
  1306  0334  3445               	retlw	0
  1307  0335  3400               
  1308                           	retlw	04Bh
  1309  0336  344B               	retlw	0
  1310  0337  3400               
  1311                           	retlw	031h
  1312  0338  3431               	retlw	0
  1313  0339  3400               
  1314                           	retlw	018h
  1315  033A  3418               	retlw	0
  1316  033B  3400               
  1317                           	retlw	014h
  1318  033C  3414               	retlw	0
  1319  033D  3400               
  1320                           	retlw	012h
  1321  033E  3412               	retlw	0
  1322  033F  3400               
  1323                           	retlw	07Fh
  1324  0340  347F               	retlw	0
  1325  0341  3400               
  1326                           	retlw	010h
  1327  0342  3410               	retlw	0
  1328  0343  3400               
  1329                           	retlw	027h
  1330  0344  3427               	retlw	0
  1331  0345  3400               
  1332                           	retlw	045h
  1333  0346  3445               	retlw	0
  1334  0347  3400               
  1335                           	retlw	045h
  1336  0348  3445               	retlw	0
  1337  0349  3400               
  1338                           	retlw	045h
  1339  034A  3445               	retlw	0
  1340  034B  3400               
  1341                           	retlw	039h
  1342  034C  3439               	retlw	0
  1343  034D  3400               
  1344                           	retlw	03Ch
  1345  034E  343C               	retlw	0
  1346  034F  3400               
  1347                           	retlw	04Ah
  1348  0350  344A               	retlw	0
  1349  0351  3400               
  1350                           	retlw	049h
  1351  0352  3449               	retlw	0
  1352  0353  3400               
  1353                           	retlw	049h
  1354  0354  3449               	retlw	0
  1355  0355  3400               
  1356                           	retlw	030h
  1357  0356  3430               	retlw	0
  1358  0357  3400               
  1359                           	retlw	01h
  1360  0358  3401               	retlw	0
  1361  0359  3400               
  1362                           	retlw	071h
  1363  035A  3471               	retlw	0
  1364  035B  3400               
  1365                           	retlw	09h
  1366  035C  3409               	retlw	0
  1367  035D  3400               
  1368                           	retlw	05h
  1369  035E  3405               	retlw	0
  1370  035F  3400               
  1371                           	retlw	03h
  1372  0360  3403               	retlw	0
  1373  0361  3400               
  1374                           	retlw	036h
  1375  0362  3436               	retlw	0
  1376  0363  3400               
  1377                           	retlw	049h
  1378  0364  3449               	retlw	0
  1379  0365  3400               
  1380                           	retlw	049h
  1381  0366  3449               	retlw	0
  1382  0367  3400               
  1383                           	retlw	049h
  1384  0368  3449               	retlw	0
  1385  0369  3400               
  1386                           	retlw	036h
  1387  036A  3436               	retlw	0
  1388  036B  3400               
  1389                           	retlw	06h
  1390  036C  3406               	retlw	0
  1391  036D  3400               
  1392                           	retlw	049h
  1393  036E  3449               	retlw	0
  1394  036F  3400               
  1395                           	retlw	049h
  1396  0370  3449               	retlw	0
  1397  0371  3400               
  1398                           	retlw	029h
  1399  0372  3429               	retlw	0
  1400  0373  3400               
  1401                           	retlw	01Eh
  1402  0374  341E               	retlw	0
  1403  0375  3400               
  1404                           	retlw	07Eh
  1405  0376  347E               	retlw	0
  1406  0377  3400               
  1407                           	retlw	011h
  1408  0378  3411               	retlw	0
  1409  0379  3400               
  1410                           	retlw	011h
  1411  037A  3411               	retlw	0
  1412  037B  3400               
  1413                           	retlw	011h
  1414  037C  3411               	retlw	0
  1415  037D  3400               
  1416                           	retlw	07Eh
  1417  037E  347E               	retlw	0
  1418  037F  3400               
  1419                           	retlw	07Fh
  1420  0380  347F               	retlw	0
  1421  0381  3400               
  1422                           	retlw	049h
  1423  0382  3449               	retlw	0
  1424  0383  3400               
  1425                           	retlw	049h
  1426  0384  3449               	retlw	0
  1427  0385  3400               
  1428                           	retlw	049h
  1429  0386  3449               	retlw	0
  1430  0387  3400               
  1431                           	retlw	036h
  1432  0388  3436               	retlw	0
  1433  0389  3400               
  1434                           	retlw	03Eh
  1435  038A  343E               	retlw	0
  1436  038B  3400               
  1437                           	retlw	041h
  1438  038C  3441               	retlw	0
  1439  038D  3400               
  1440                           	retlw	041h
  1441  038E  3441               	retlw	0
  1442  038F  3400               
  1443                           	retlw	041h
  1444  0390  3441               	retlw	0
  1445  0391  3400               
  1446                           	retlw	022h
  1447  0392  3422               	retlw	0
  1448  0393  3400               
  1449                           	retlw	07Fh
  1450  0394  347F               	retlw	0
  1451  0395  3400               
  1452                           	retlw	041h
  1453  0396  3441               	retlw	0
  1454  0397  3400               
  1455                           	retlw	041h
  1456  0398  3441               	retlw	0
  1457  0399  3400               
  1458                           	retlw	022h
  1459  039A  3422               	retlw	0
  1460  039B  3400               
  1461                           	retlw	01Ch
  1462  039C  341C               	retlw	0
  1463  039D  3400               
  1464                           	retlw	07Fh
  1465  039E  347F               	retlw	0
  1466  039F  3400               
  1467                           	retlw	049h
  1468  03A0  3449               	retlw	0
  1469  03A1  3400               
  1470                           	retlw	049h
  1471  03A2  3449               	retlw	0
  1472  03A3  3400               
  1473                           	retlw	049h
  1474  03A4  3449               	retlw	0
  1475  03A5  3400               
  1476                           	retlw	041h
  1477  03A6  3441               	retlw	0
  1478  03A7  3400               
  1479                           	retlw	07Fh
  1480  03A8  347F               	retlw	0
  1481  03A9  3400               
  1482                           	retlw	09h
  1483  03AA  3409               	retlw	0
  1484  03AB  3400               
  1485                           	retlw	09h
  1486  03AC  3409               	retlw	0
  1487  03AD  3400               
  1488                           	retlw	01h
  1489  03AE  3401               	retlw	0
  1490  03AF  3400               
  1491                           	retlw	01h
  1492  03B0  3401               	retlw	0
  1493  03B1  3400               
  1494                           	retlw	03Eh
  1495  03B2  343E               	retlw	0
  1496  03B3  3400               
  1497                           	retlw	041h
  1498  03B4  3441               	retlw	0
  1499  03B5  3400               
  1500                           	retlw	041h
  1501  03B6  3441               	retlw	0
  1502  03B7  3400               
  1503                           	retlw	051h
  1504  03B8  3451               	retlw	0
  1505  03B9  3400               
  1506                           	retlw	032h
  1507  03BA  3432               	retlw	0
  1508  03BB  3400               
  1509                           	retlw	07Fh
  1510  03BC  347F               	retlw	0
  1511  03BD  3400               
  1512                           	retlw	08h
  1513  03BE  3408               	retlw	0
  1514  03BF  3400               
  1515                           	retlw	08h
  1516  03C0  3408               	retlw	0
  1517  03C1  3400               
  1518                           	retlw	08h
  1519  03C2  3408               	retlw	0
  1520  03C3  3400               
  1521                           	retlw	07Fh
  1522  03C4  347F               	retlw	0
  1523  03C5  3400               
  1524                           	retlw	low(0)
  1525  03C6  3400               	retlw	high(0)
  1526  03C7  3400               
  1527                           	retlw	041h
  1528  03C8  3441               	retlw	0
  1529  03C9  3400               
  1530                           	retlw	07Fh
  1531  03CA  347F               	retlw	0
  1532  03CB  3400               
  1533                           	retlw	041h
  1534  03CC  3441               	retlw	0
  1535  03CD  3400               
  1536                           	retlw	low(0)
  1537  03CE  3400               	retlw	high(0)
  1538  03CF  3400               
  1539                           	retlw	020h
  1540  03D0  3420               	retlw	0
  1541  03D1  3400               
  1542                           	retlw	040h
  1543  03D2  3440               	retlw	0
  1544  03D3  3400               
  1545                           	retlw	041h
  1546  03D4  3441               	retlw	0
  1547  03D5  3400               
  1548                           	retlw	03Fh
  1549  03D6  343F               	retlw	0
  1550  03D7  3400               
  1551                           	retlw	01h
  1552  03D8  3401               	retlw	0
  1553  03D9  3400               
  1554                           	retlw	07Fh
  1555  03DA  347F               	retlw	0
  1556  03DB  3400               
  1557                           	retlw	08h
  1558  03DC  3408               	retlw	0
  1559  03DD  3400               
  1560                           	retlw	014h
  1561  03DE  3414               	retlw	0
  1562  03DF  3400               
  1563                           	retlw	022h
  1564  03E0  3422               	retlw	0
  1565  03E1  3400               
  1566                           	retlw	041h
  1567  03E2  3441               	retlw	0
  1568  03E3  3400               
  1569                           	retlw	07Fh
  1570  03E4  347F               	retlw	0
  1571  03E5  3400               
  1572                           	retlw	040h
  1573  03E6  3440               	retlw	0
  1574  03E7  3400               
  1575                           	retlw	040h
  1576  03E8  3440               	retlw	0
  1577  03E9  3400               
  1578                           	retlw	040h
  1579  03EA  3440               	retlw	0
  1580  03EB  3400               
  1581                           	retlw	040h
  1582  03EC  3440               	retlw	0
  1583  03ED  3400               
  1584                           	retlw	07Fh
  1585  03EE  347F               	retlw	0
  1586  03EF  3400               
  1587                           	retlw	02h
  1588  03F0  3402               	retlw	0
  1589  03F1  3400               
  1590                           	retlw	04h
  1591  03F2  3404               	retlw	0
  1592  03F3  3400               
  1593                           	retlw	02h
  1594  03F4  3402               	retlw	0
  1595  03F5  3400               
  1596                           	retlw	07Fh
  1597  03F6  347F               	retlw	0
  1598  03F7  3400               
  1599                           	retlw	07Fh
  1600  03F8  347F               	retlw	0
  1601  03F9  3400               
  1602                           	retlw	04h
  1603  03FA  3404               	retlw	0
  1604  03FB  3400               
  1605                           	retlw	08h
  1606  03FC  3408               	retlw	0
  1607  03FD  3400               
  1608                           	retlw	010h
  1609  03FE  3410               	retlw	0
  1610  03FF  3400               
  1611                           	retlw	07Fh
  1612  0400  347F               	retlw	0
  1613  0401  3400               
  1614                           	retlw	03Eh
  1615  0402  343E               	retlw	0
  1616  0403  3400               
  1617                           	retlw	041h
  1618  0404  3441               	retlw	0
  1619  0405  3400               
  1620                           	retlw	041h
  1621  0406  3441               	retlw	0
  1622  0407  3400               
  1623                           	retlw	041h
  1624  0408  3441               	retlw	0
  1625  0409  3400               
  1626                           	retlw	03Eh
  1627  040A  343E               	retlw	0
  1628  040B  3400               
  1629                           	retlw	07Fh
  1630  040C  347F               	retlw	0
  1631  040D  3400               
  1632                           	retlw	09h
  1633  040E  3409               	retlw	0
  1634  040F  3400               
  1635                           	retlw	09h
  1636  0410  3409               	retlw	0
  1637  0411  3400               
  1638                           	retlw	09h
  1639  0412  3409               	retlw	0
  1640  0413  3400               
  1641                           	retlw	06h
  1642  0414  3406               	retlw	0
  1643  0415  3400               
  1644                           	retlw	03Eh
  1645  0416  343E               	retlw	0
  1646  0417  3400               
  1647                           	retlw	041h
  1648  0418  3441               	retlw	0
  1649  0419  3400               
  1650                           	retlw	051h
  1651  041A  3451               	retlw	0
  1652  041B  3400               
  1653                           	retlw	021h
  1654  041C  3421               	retlw	0
  1655  041D  3400               
  1656                           	retlw	05Eh
  1657  041E  345E               	retlw	0
  1658  041F  3400               
  1659                           	retlw	07Fh
  1660  0420  347F               	retlw	0
  1661  0421  3400               
  1662                           	retlw	09h
  1663  0422  3409               	retlw	0
  1664  0423  3400               
  1665                           	retlw	019h
  1666  0424  3419               	retlw	0
  1667  0425  3400               
  1668                           	retlw	029h
  1669  0426  3429               	retlw	0
  1670  0427  3400               
  1671                           	retlw	046h
  1672  0428  3446               	retlw	0
  1673  0429  3400               
  1674                           	retlw	046h
  1675  042A  3446               	retlw	0
  1676  042B  3400               
  1677                           	retlw	049h
  1678  042C  3449               	retlw	0
  1679  042D  3400               
  1680                           	retlw	049h
  1681  042E  3449               	retlw	0
  1682  042F  3400               
  1683                           	retlw	049h
  1684  0430  3449               	retlw	0
  1685  0431  3400               
  1686                           	retlw	031h
  1687  0432  3431               	retlw	0
  1688  0433  3400               
  1689                           	retlw	01h
  1690  0434  3401               	retlw	0
  1691  0435  3400               
  1692                           	retlw	01h
  1693  0436  3401               	retlw	0
  1694  0437  3400               
  1695                           	retlw	07Fh
  1696  0438  347F               	retlw	0
  1697  0439  3400               
  1698                           	retlw	01h
  1699  043A  3401               	retlw	0
  1700  043B  3400               
  1701                           	retlw	01h
  1702  043C  3401               	retlw	0
  1703  043D  3400               
  1704                           	retlw	03Fh
  1705  043E  343F               	retlw	0
  1706  043F  3400               
  1707                           	retlw	040h
  1708  0440  3440               	retlw	0
  1709  0441  3400               
  1710                           	retlw	040h
  1711  0442  3440               	retlw	0
  1712  0443  3400               
  1713                           	retlw	040h
  1714  0444  3440               	retlw	0
  1715  0445  3400               
  1716                           	retlw	03Fh
  1717  0446  343F               	retlw	0
  1718  0447  3400               
  1719                           	retlw	01Fh
  1720  0448  341F               	retlw	0
  1721  0449  3400               
  1722                           	retlw	020h
  1723  044A  3420               	retlw	0
  1724  044B  3400               
  1725                           	retlw	040h
  1726  044C  3440               	retlw	0
  1727  044D  3400               
  1728                           	retlw	020h
  1729  044E  3420               	retlw	0
  1730  044F  3400               
  1731                           	retlw	01Fh
  1732  0450  341F               	retlw	0
  1733  0451  3400               
  1734                           	retlw	07Fh
  1735  0452  347F               	retlw	0
  1736  0453  3400               
  1737                           	retlw	020h
  1738  0454  3420               	retlw	0
  1739  0455  3400               
  1740                           	retlw	018h
  1741  0456  3418               	retlw	0
  1742  0457  3400               
  1743                           	retlw	020h
  1744  0458  3420               	retlw	0
  1745  0459  3400               
  1746                           	retlw	07Fh
  1747  045A  347F               	retlw	0
  1748  045B  3400               
  1749                           	retlw	063h
  1750  045C  3463               	retlw	0
  1751  045D  3400               
  1752                           	retlw	014h
  1753  045E  3414               	retlw	0
  1754  045F  3400               
  1755                           	retlw	08h
  1756  0460  3408               	retlw	0
  1757  0461  3400               
  1758                           	retlw	014h
  1759  0462  3414               	retlw	0
  1760  0463  3400               
  1761                           	retlw	063h
  1762  0464  3463               	retlw	0
  1763  0465  3400               
  1764                           	retlw	03h
  1765  0466  3403               	retlw	0
  1766  0467  3400               
  1767                           	retlw	04h
  1768  0468  3404               	retlw	0
  1769  0469  3400               
  1770                           	retlw	078h
  1771  046A  3478               	retlw	0
  1772  046B  3400               
  1773                           	retlw	04h
  1774  046C  3404               	retlw	0
  1775  046D  3400               
  1776                           	retlw	03h
  1777  046E  3403               	retlw	0
  1778  046F  3400               
  1779                           	retlw	061h
  1780  0470  3461               	retlw	0
  1781  0471  3400               
  1782                           	retlw	051h
  1783  0472  3451               	retlw	0
  1784  0473  3400               
  1785                           	retlw	049h
  1786  0474  3449               	retlw	0
  1787  0475  3400               
  1788                           	retlw	045h
  1789  0476  3445               	retlw	0
  1790  0477  3400               
  1791                           	retlw	043h
  1792  0478  3443               	retlw	0
  1793  0479  3400               
  1794                           	retlw	low(0)
  1795  047A  3400               	retlw	high(0)
  1796  047B  3400               
  1797                           	retlw	low(0)
  1798  047C  3400               	retlw	high(0)
  1799  047D  3400               
  1800                           	retlw	low(0)
  1801  047E  3400               	retlw	high(0)
  1802  047F  3400               
  1803                           	retlw	low(0)
  1804  0480  3400               	retlw	high(0)
  1805  0481  3400               
  1806                           	retlw	low(0)
  1807  0482  3400               	retlw	high(0)
  1808  0483  3400               
  1809                           	global __end_of_font
  1810                           __end_of_font:
  1811  0484                     	global	_dpowers
  1812                           psect	stringtext
  1813                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1814                           	line	358
  1815                           _dpowers:
  1816  0484                     	retlw	01h
  1817  0484  3401               	retlw	0
  1818  0485  3400               
  1819                           	retlw	0Ah
  1820  0486  340A               	retlw	0
  1821  0487  3400               
  1822                           	retlw	064h
  1823  0488  3464               	retlw	0
  1824  0489  3400               
  1825                           	retlw	0E8h
  1826  048A  34E8               	retlw	03h
  1827  048B  3403               
  1828                           	retlw	010h
  1829  048C  3410               	retlw	027h
  1830  048D  3427               
  1831                           	global __end_of_dpowers
  1832                           __end_of_dpowers:
  1833  048E                     	global	_step_size
  1834                           psect	stringtext
  1835                           	file	"./Volume.h"
  1836                           	line	5
  1837                           _step_size:
  1838  048E                     	retlw	019h
  1839  048E  3419               	retlw	0
  1840  048F  3400               
  1841                           	global __end_of_step_size
  1842                           __end_of_step_size:
  1843  0490                     	global	_font
  1844                           	global	_dpowers
  1845                           	global	_step_size
  1846                           	global	_ir_input
  1847                           	global	__lastAdcResult
  1848                           	global	__lastB
  1849                           	global	__lastA
  1850                           	global	__inputUpdateRequired
  1851                           	global	_lastInput
  1852                           	global	_lastVolume
  1853                           	global	_volume
  1854                           	global	__selectedInput
  1855                           	global	__selectedDisplay
  1856                           	global	_ADRESH
  1857                           _ADRESH	set	0x1E
  1858  001E                     	global	_PORTC
  1859                           _PORTC	set	0x7
  1860  0007                     	global	_PORTA
  1861                           _PORTA	set	0x5
  1862  0005                     	global	_SSPBUF
  1863                           _SSPBUF	set	0x13
  1864  0013                     	global	_PORTCbits
  1865                           _PORTCbits	set	0x7
  1866  0007                     	global	_PORTDbits
  1867                           _PORTDbits	set	0x8
  1868  0008                     	global	_SSPCON
  1869                           _SSPCON	set	0x14
  1870  0014                     	global	_PIR1bits
  1871                           _PIR1bits	set	0xC
  1872  000C                     	global	_PORTBbits
  1873                           _PORTBbits	set	0x6
  1874  0006                     	global	_INTCONbits
  1875                           _INTCONbits	set	0xB
  1876  000B                     	global	_ADCON0bits
  1877                           _ADCON0bits	set	0x1F
  1878  001F                     	global	_ADRESL
  1879                           _ADRESL	set	0x9E
  1880  009E                     	global	_PIE1bits
  1881                           _PIE1bits	set	0x8C
  1882  008C                     	global	_ADCON1bits
  1883                           _ADCON1bits	set	0x9F
  1884  009F                     	global	_IOCBbits
  1885                           _IOCBbits	set	0x96
  1886  0096                     	global	_TRISCbits
  1887                           _TRISCbits	set	0x87
  1888  0087                     	global	_TRISEbits
  1889                           _TRISEbits	set	0x89
  1890  0089                     	global	_TRISBbits
  1891                           _TRISBbits	set	0x86
  1892  0086                     	global	_TRISAbits
  1893                           _TRISAbits	set	0x85
  1894  0085                     	global	_OSCCONbits
  1895                           _OSCCONbits	set	0x8F
  1896  008F                     	global	_SSPSTATbits
  1897                           _SSPSTATbits	set	0x94
  1898  0094                     	global	_TRISC
  1899                           _TRISC	set	0x87
  1900  0087                     	global	_TRISD
  1901                           _TRISD	set	0x88
  1902  0088                     	global	_SSPSTAT
  1903                           _SSPSTAT	set	0x94
  1904  0094                     	global	_ANSELbits
  1905                           _ANSELbits	set	0x188
  1906  0188                     	global	_ANSELHbits
  1907                           _ANSELHbits	set	0x189
  1908  0189                     	
  1909                           STR_1:	
  1910  0490                     	retlw	73	;'I'
  1911  0490  3449               	retlw	78	;'N'
  1912  0491  344E               	retlw	80	;'P'
  1913  0492  3450               	retlw	85	;'U'
  1914  0493  3455               	retlw	84	;'T'
  1915  0494  3454               	retlw	0
  1916  0495  3400               psect	stringtext
  1917                           	
  1918                           STR_2:	
  1919  0496                     	retlw	86	;'V'
  1920  0496  3456               	retlw	79	;'O'
  1921  0497  344F               	retlw	76	;'L'
  1922  0498  344C               	retlw	0
  1923  0499  3400               psect	stringtext
  1924                           	
  1925                           STR_3:	
  1926  049A                     	retlw	37	;'%'
  1927  049A  3425               	retlw	100	;'d'
  1928  049B  3464               	retlw	0
  1929  049C  3400               psect	stringtext
  1930                           ; #config settings
  1931                           global __CFG_FOSC$INTRC_CLKOUT
  1932                           __CFG_FOSC$INTRC_CLKOUT equ 0x0
  1933  0000                     global __CFG_WDTE$OFF
  1934                           __CFG_WDTE$OFF equ 0x0
  1935  0000                     global __CFG_PWRTE$OFF
  1936                           __CFG_PWRTE$OFF equ 0x0
  1937  0000                     global __CFG_MCLRE$OFF
  1938                           __CFG_MCLRE$OFF equ 0x0
  1939  0000                     global __CFG_CP$OFF
  1940                           __CFG_CP$OFF equ 0x0
  1941  0000                     global __CFG_CPD$OFF
  1942                           __CFG_CPD$OFF equ 0x0
  1943  0000                     global __CFG_BOREN$ON
  1944                           __CFG_BOREN$ON equ 0x0
  1945  0000                     global __CFG_IESO$OFF
  1946                           __CFG_IESO$OFF equ 0x0
  1947  0000                     global __CFG_FCMEN$OFF
  1948                           __CFG_FCMEN$OFF equ 0x0
  1949  0000                     global __CFG_LVP$OFF
  1950                           __CFG_LVP$OFF equ 0x0
  1951  0000                     global __CFG_BOR4V$BOR21V
  1952                           __CFG_BOR4V$BOR21V equ 0x0
  1953  0000                     global __CFG_WRT$OFF
  1954                           __CFG_WRT$OFF equ 0x0
  1955  0000                     	file	"C:\Users\Rens\AppData\Local\Temp\sbb8."
  1956                           	line	#
  1957                           psect cinit,class=CODE,delta=2
  1958                           global start_initialization
  1959                           start_initialization:
  1960  0015                     
  1961                           global __initialization
  1962                           __initialization:
  1963  0015                     psect	bssBANK0,class=BANK0,space=1,noexec
  1964                           global __pbssBANK0
  1965                           __pbssBANK0:
  1966  005A                     _ir_input:
  1967  005A                            ds      4
  1968  005A                     
  1969                           __lastAdcResult:
  1970  005E                            ds      2
  1971  005E                     
  1972                           __lastB:
  1973  0060                            ds      2
  1974  0060                     
  1975                           __lastA:
  1976  0062                            ds      2
  1977  0062                     
  1978                           __inputUpdateRequired:
  1979  0064                            ds      1
  1980  0064                     
  1981                           psect	bssBANK1,class=BANK1,space=1,noexec
  1982                           global __pbssBANK1
  1983                           __pbssBANK1:
  1984  00C5                     _lastInput:
  1985  00C5                            ds      2
  1986  00C5                     
  1987                           _lastVolume:
  1988  00C7                            ds      2
  1989  00C7                     
  1990                           _volume:
  1991  00C9                            ds      2
  1992  00C9                     
  1993                           __selectedInput:
  1994  00CB                            ds      2
  1995  00CB                     
  1996                           __selectedDisplay:
  1997  00CD                            ds      1
  1998  00CD                     
  1999                           	file	"C:\Users\Rens\AppData\Local\Temp\sbb8."
  2000                           	line	#
  2001                           ; Clear objects allocated to BANK0
  2002                           psect cinit,class=CODE,delta=2,merge=1
  2003                           	bcf	status, 5	;RP0=0, select bank0
  2004  0015  1283               	bcf	status, 6	;RP1=0, select bank0
  2005  0016  1303               	clrf	((__pbssBANK0)+0)&07Fh
  2006  0017  01DA               	clrf	((__pbssBANK0)+1)&07Fh
  2007  0018  01DB               	clrf	((__pbssBANK0)+2)&07Fh
  2008  0019  01DC               	clrf	((__pbssBANK0)+3)&07Fh
  2009  001A  01DD               	clrf	((__pbssBANK0)+4)&07Fh
  2010  001B  01DE               	clrf	((__pbssBANK0)+5)&07Fh
  2011  001C  01DF               	clrf	((__pbssBANK0)+6)&07Fh
  2012  001D  01E0               	clrf	((__pbssBANK0)+7)&07Fh
  2013  001E  01E1               	clrf	((__pbssBANK0)+8)&07Fh
  2014  001F  01E2               	clrf	((__pbssBANK0)+9)&07Fh
  2015  0020  01E3               	clrf	((__pbssBANK0)+10)&07Fh
  2016  0021  01E4               ; Clear objects allocated to BANK1
  2017                           psect cinit,class=CODE,delta=2,merge=1
  2018                           	bsf	status, 5	;RP0=1, select bank1
  2019  0022  1683               	bcf	status, 6	;RP1=0, select bank1
  2020  0023  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2021  0024  01C5               	clrf	((__pbssBANK1)+1)&07Fh
  2022  0025  01C6               	clrf	((__pbssBANK1)+2)&07Fh
  2023  0026  01C7               	clrf	((__pbssBANK1)+3)&07Fh
  2024  0027  01C8               	clrf	((__pbssBANK1)+4)&07Fh
  2025  0028  01C9               	clrf	((__pbssBANK1)+5)&07Fh
  2026  0029  01CA               	clrf	((__pbssBANK1)+6)&07Fh
  2027  002A  01CB               	clrf	((__pbssBANK1)+7)&07Fh
  2028  002B  01CC               	clrf	((__pbssBANK1)+8)&07Fh
  2029  002C  01CD               psect cinit,class=CODE,delta=2,merge=1
  2030                           global end_of_initialization,__end_of__initialization
  2031                           
  2032                           ;End of C runtime variable initialization code
  2033                           
  2034                           end_of_initialization:
  2035  002D                     __end_of__initialization:
  2036  002D                     clrf status
  2037  002D  0183               ljmp _main	;jump to C main() function
  2038  002E  120A  158A  29C1   psect	cstackBANK1,class=BANK1,space=1,noexec
  2039                           global __pcstackBANK1
  2040                           __pcstackBANK1:
  2041  00A0                     ??_activateSelectedRelay:	; 1 bytes @ 0x0
  2042  00A0                     ??_spiWrite:	; 1 bytes @ 0x0
  2043  00A0                     ??_display_write_start:	; 1 bytes @ 0x0
  2044  00A0                     ??_display_write_end:	; 1 bytes @ 0x0
  2045  00A0                     ??_init_adc:	; 1 bytes @ 0x0
  2046  00A0                     	global	?___wmul
  2047                           ?___wmul:	; 2 bytes @ 0x0
  2048  00A0                     	global	?___lwdiv
  2049                           ?___lwdiv:	; 2 bytes @ 0x0
  2050  00A0                     	global	spiWrite@data
  2051                           spiWrite@data:	; 1 bytes @ 0x0
  2052  00A0                     	global	___wmul@multiplier
  2053                           ___wmul@multiplier:	; 2 bytes @ 0x0
  2054  00A0                     	global	___lwdiv@divisor
  2055                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  2056  00A0                     	ds	1
  2057  00A0                     ??_config:	; 1 bytes @ 0x1
  2058  00A1                     ?_write_space:	; 1 bytes @ 0x1
  2059  00A1                     ??_display_init:	; 1 bytes @ 0x1
  2060  00A1                     	global	write_space@count
  2061                           write_space@count:	; 2 bytes @ 0x1
  2062  00A1                     	ds	1
  2063  00A1                     	global	___wmul@multiplicand
  2064                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  2065  00A2                     	global	___lwdiv@dividend
  2066                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  2067  00A2                     	ds	1
  2068  00A2                     ??_write_space:	; 1 bytes @ 0x3
  2069  00A3                     	ds	1
  2070  00A3                     ??___wmul:	; 1 bytes @ 0x4
  2071  00A4                     ??___lwdiv:	; 1 bytes @ 0x4
  2072  00A4                     	global	write_space@i
  2073                           write_space@i:	; 2 bytes @ 0x4
  2074  00A4                     	global	___wmul@product
  2075                           ___wmul@product:	; 2 bytes @ 0x4
  2076  00A4                     	ds	1
  2077  00A4                     	global	___lwdiv@quotient
  2078                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  2079  00A5                     	ds	1
  2080  00A5                     ?_write_font:	; 1 bytes @ 0x6
  2081  00A6                     	global	write_space@x
  2082                           write_space@x:	; 2 bytes @ 0x6
  2083  00A6                     	global	write_font@fontPos
  2084                           write_font@fontPos:	; 2 bytes @ 0x6
  2085  00A6                     	ds	1
  2086  00A6                     	global	___lwdiv@counter
  2087                           ___lwdiv@counter:	; 1 bytes @ 0x7
  2088  00A7                     	ds	1
  2089  00A7                     ??_write_font:	; 1 bytes @ 0x8
  2090  00A8                     	global	?___lwmod
  2091                           ?___lwmod:	; 2 bytes @ 0x8
  2092  00A8                     	global	___lwmod@divisor
  2093                           ___lwmod@divisor:	; 2 bytes @ 0x8
  2094  00A8                     	ds	2
  2095  00A8                     	global	___lwmod@dividend
  2096                           ___lwmod@dividend:	; 2 bytes @ 0xA
  2097  00AA                     	ds	2
  2098  00AA                     ??___lwmod:	; 1 bytes @ 0xC
  2099  00AC                     	ds	1
  2100  00AC                     	global	___lwmod@counter
  2101                           ___lwmod@counter:	; 1 bytes @ 0xD
  2102  00AD                     	ds	1
  2103  00AD                     	global	?_sprintf
  2104                           ?_sprintf:	; 2 bytes @ 0xE
  2105  00AE                     	global	write_font@x
  2106                           write_font@x:	; 2 bytes @ 0xE
  2107  00AE                     	global	sprintf@f
  2108                           sprintf@f:	; 2 bytes @ 0xE
  2109  00AE                     	ds	2
  2110  00AE                     ??_write_char:	; 1 bytes @ 0x10
  2111  00B0                     	global	write_char@pos
  2112                           write_char@pos:	; 2 bytes @ 0x10
  2113  00B0                     	ds	2
  2114  00B0                     ??_sprintf:	; 1 bytes @ 0x12
  2115  00B2                     	global	write_char@c
  2116                           write_char@c:	; 1 bytes @ 0x12
  2117  00B2                     	ds	1
  2118  00B2                     ?_write_text:	; 1 bytes @ 0x13
  2119  00B3                     	global	write_text@text
  2120                           write_text@text:	; 2 bytes @ 0x13
  2121  00B3                     	ds	2
  2122  00B3                     ??_write_text:	; 1 bytes @ 0x15
  2123  00B5                     	global	write_text@c
  2124                           write_text@c:	; 2 bytes @ 0x15
  2125  00B5                     	ds	1
  2126  00B5                     	global	sprintf@ap
  2127                           sprintf@ap:	; 1 bytes @ 0x16
  2128  00B6                     	ds	1
  2129  00B6                     	global	sprintf@flag
  2130                           sprintf@flag:	; 1 bytes @ 0x17
  2131  00B7                     	ds	1
  2132  00B7                     	global	sprintf@prec
  2133                           sprintf@prec:	; 1 bytes @ 0x18
  2134  00B8                     	ds	1
  2135  00B8                     	global	sprintf@val
  2136                           sprintf@val:	; 2 bytes @ 0x19
  2137  00B9                     	ds	2
  2138  00B9                     	global	sprintf@sp
  2139                           sprintf@sp:	; 1 bytes @ 0x1B
  2140  00BB                     	ds	1
  2141  00BB                     	global	sprintf@c
  2142                           sprintf@c:	; 1 bytes @ 0x1C
  2143  00BC                     	ds	1
  2144  00BC                     ?_write_int:	; 1 bytes @ 0x1D
  2145  00BD                     	global	write_int@number
  2146                           write_int@number:	; 2 bytes @ 0x1D
  2147  00BD                     	ds	2
  2148  00BD                     ??_write_int:	; 1 bytes @ 0x1F
  2149  00BF                     	global	write_int@num
  2150                           write_int@num:	; 2 bytes @ 0x1F
  2151  00BF                     	ds	2
  2152  00BF                     ??_update_volume:	; 1 bytes @ 0x21
  2153  00C1                     ??_update_input:	; 1 bytes @ 0x21
  2154  00C1                     	global	update_volume@spaces
  2155                           update_volume@spaces:	; 2 bytes @ 0x21
  2156  00C1                     	ds	2
  2157  00C1                     ??_main:	; 1 bytes @ 0x23
  2158  00C3                     	ds	2
  2159  00C3                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2160                           global __pcstackCOMMON
  2161                           __pcstackCOMMON:
  2162  0070                     ?_config:	; 1 bytes @ 0x0
  2163  0070                     ?_update_volume:	; 1 bytes @ 0x0
  2164  0070                     ?_update_input:	; 1 bytes @ 0x0
  2165  0070                     ?_activateSelectedRelay:	; 1 bytes @ 0x0
  2166  0070                     ?_handle_rotary:	; 1 bytes @ 0x0
  2167  0070                     ??_handle_rotary:	; 1 bytes @ 0x0
  2168  0070                     ?_start_receive:	; 1 bytes @ 0x0
  2169  0070                     ?_handle_potmeter:	; 1 bytes @ 0x0
  2170  0070                     ?_spiWrite:	; 1 bytes @ 0x0
  2171  0070                     ?_display_write_start:	; 1 bytes @ 0x0
  2172  0070                     ?_display_write_end:	; 1 bytes @ 0x0
  2173  0070                     ?_write_char:	; 1 bytes @ 0x0
  2174  0070                     ?_init_adc:	; 1 bytes @ 0x0
  2175  0070                     ?_handle_remote:	; 1 bytes @ 0x0
  2176  0070                     ??_handle_remote:	; 1 bytes @ 0x0
  2177  0070                     ?_main:	; 1 bytes @ 0x0
  2178  0070                     ?_isr:	; 1 bytes @ 0x0
  2179  0070                     ?_display_init:	; 1 bytes @ 0x0
  2180  0070                     	global	?i1___wmul
  2181                           ?i1___wmul:	; 2 bytes @ 0x0
  2182  0070                     	global	?i1___lwdiv
  2183                           ?i1___lwdiv:	; 2 bytes @ 0x0
  2184  0070                     	global	?___xxtofl
  2185                           ?___xxtofl:	; 4 bytes @ 0x0
  2186  0070                     	global	handle_remote@mask
  2187                           handle_remote@mask:	; 2 bytes @ 0x0
  2188  0070                     	global	i1___wmul@multiplier
  2189                           i1___wmul@multiplier:	; 2 bytes @ 0x0
  2190  0070                     	global	i1___lwdiv@divisor
  2191                           i1___lwdiv@divisor:	; 2 bytes @ 0x0
  2192  0070                     	global	___xxtofl@val
  2193                           ___xxtofl@val:	; 4 bytes @ 0x0
  2194  0070                     	ds	2
  2195  0070                     	global	handle_remote@data
  2196                           handle_remote@data:	; 2 bytes @ 0x2
  2197  0072                     	global	i1___wmul@multiplicand
  2198                           i1___wmul@multiplicand:	; 2 bytes @ 0x2
  2199  0072                     	global	i1___lwdiv@dividend
  2200                           i1___lwdiv@dividend:	; 2 bytes @ 0x2
  2201  0072                     	ds	1
  2202  0072                     	global	handle_rotary@portA
  2203                           handle_rotary@portA:	; 2 bytes @ 0x3
  2204  0073                     	ds	1
  2205  0073                     ??___xxtofl:	; 1 bytes @ 0x4
  2206  0074                     ??i1___wmul:	; 1 bytes @ 0x4
  2207  0074                     ??i1___lwdiv:	; 1 bytes @ 0x4
  2208  0074                     	global	handle_remote@found
  2209                           handle_remote@found:	; 1 bytes @ 0x4
  2210  0074                     	global	i1___wmul@product
  2211                           i1___wmul@product:	; 2 bytes @ 0x4
  2212  0074                     	ds	1
  2213  0074                     ??_start_receive:	; 1 bytes @ 0x5
  2214  0075                     	global	handle_rotary@portB
  2215                           handle_rotary@portB:	; 2 bytes @ 0x5
  2216  0075                     	global	i1___lwdiv@quotient
  2217                           i1___lwdiv@quotient:	; 2 bytes @ 0x5
  2218  0075                     	ds	2
  2219  0075                     	global	i1___lwdiv@counter
  2220                           i1___lwdiv@counter:	; 1 bytes @ 0x7
  2221  0077                     	ds	1
  2222  0077                     	global	___xxtofl@sign
  2223                           ___xxtofl@sign:	; 1 bytes @ 0x8
  2224  0078                     	ds	1
  2225  0078                     	global	___xxtofl@exp
  2226                           ___xxtofl@exp:	; 1 bytes @ 0x9
  2227  0079                     	ds	1
  2228  0079                     	global	___xxtofl@arg
  2229                           ___xxtofl@arg:	; 4 bytes @ 0xA
  2230  007A                     	ds	4
  2231  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2232                           global __pcstackBANK0
  2233                           __pcstackBANK0:
  2234  0020                     	global	?___fladd
  2235                           ?___fladd:	; 4 bytes @ 0x0
  2236  0020                     	global	start_receive@i
  2237                           start_receive@i:	; 2 bytes @ 0x0
  2238  0020                     	global	___fladd@b
  2239                           ___fladd@b:	; 4 bytes @ 0x0
  2240  0020                     	ds	4
  2241  0020                     	global	___fladd@a
  2242                           ___fladd@a:	; 4 bytes @ 0x4
  2243  0024                     	ds	4
  2244  0024                     ??___fladd:	; 1 bytes @ 0x8
  2245  0028                     	ds	12
  2246  0028                     	global	___fladd@signs
  2247                           ___fladd@signs:	; 1 bytes @ 0x14
  2248  0034                     	ds	1
  2249  0034                     	global	___fladd@aexp
  2250                           ___fladd@aexp:	; 1 bytes @ 0x15
  2251  0035                     	ds	1
  2252  0035                     	global	___fladd@bexp
  2253                           ___fladd@bexp:	; 1 bytes @ 0x16
  2254  0036                     	ds	1
  2255  0036                     	global	___fladd@grs
  2256                           ___fladd@grs:	; 1 bytes @ 0x17
  2257  0037                     	ds	1
  2258  0037                     	global	?___fltol
  2259                           ?___fltol:	; 4 bytes @ 0x18
  2260  0038                     	global	___fltol@f1
  2261                           ___fltol@f1:	; 4 bytes @ 0x18
  2262  0038                     	ds	4
  2263  0038                     ??___fltol:	; 1 bytes @ 0x1C
  2264  003C                     	ds	5
  2265  003C                     	global	___fltol@sign1
  2266                           ___fltol@sign1:	; 1 bytes @ 0x21
  2267  0041                     	ds	1
  2268  0041                     	global	___fltol@exp1
  2269                           ___fltol@exp1:	; 1 bytes @ 0x22
  2270  0042                     	ds	1
  2271  0042                     	global	?_is_deadzone
  2272                           ?_is_deadzone:	; 2 bytes @ 0x23
  2273  0043                     	global	is_deadzone@currentStep
  2274                           is_deadzone@currentStep:	; 2 bytes @ 0x23
  2275  0043                     	ds	2
  2276  0043                     	global	is_deadzone@adcResult
  2277                           is_deadzone@adcResult:	; 2 bytes @ 0x25
  2278  0045                     	ds	2
  2279  0045                     ??_is_deadzone:	; 1 bytes @ 0x27
  2280  0047                     	ds	2
  2281  0047                     	global	is_deadzone@deadzoneLow
  2282                           is_deadzone@deadzoneLow:	; 2 bytes @ 0x29
  2283  0049                     	ds	2
  2284  0049                     	global	is_deadzone@deadzoneHigh
  2285                           is_deadzone@deadzoneHigh:	; 2 bytes @ 0x2B
  2286  004B                     	ds	2
  2287  004B                     	global	_is_deadzone$867
  2288                           _is_deadzone$867:	; 1 bytes @ 0x2D
  2289  004D                     	ds	1
  2290  004D                     	global	is_deadzone@turnPoint
  2291                           is_deadzone@turnPoint:	; 2 bytes @ 0x2E
  2292  004E                     	ds	2
  2293  004E                     ??_handle_potmeter:	; 1 bytes @ 0x30
  2294  0050                     	ds	2
  2295  0050                     	global	handle_potmeter@currentStep
  2296                           handle_potmeter@currentStep:	; 2 bytes @ 0x32
  2297  0052                     	ds	2
  2298  0052                     	global	handle_potmeter@ad_result
  2299                           handle_potmeter@ad_result:	; 2 bytes @ 0x34
  2300  0054                     	ds	2
  2301  0054                     ??_isr:	; 1 bytes @ 0x36
  2302  0056                     	ds	4
  2303  0056                     ;!
  2304                           ;!Data Sizes:
  2305                           ;!    Strings     13
  2306                           ;!    Constant    382
  2307                           ;!    Data        0
  2308                           ;!    BSS         20
  2309                           ;!    Persistent  0
  2310                           ;!    Stack       0
  2311                           ;!
  2312                           ;!Auto Spaces:
  2313                           ;!    Space          Size  Autos    Used
  2314                           ;!    COMMON           14     14      14
  2315                           ;!    BANK0            80     58      69
  2316                           ;!    BANK1            80     37      46
  2317                           ;!    BANK3            96      0       0
  2318                           ;!    BANK2            96      0       0
  2319                           
  2320                           ;!
  2321                           ;!Pointer List with Targets:
  2322                           ;!
  2323                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
  2324                           ;!		 -> STR_3(CODE[3]), 
  2325                           ;!
  2326                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
  2327                           ;!		 -> write_int@num(BANK1[2]), 
  2328                           ;!
  2329                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  2330                           ;!		 -> ?_sprintf(BANK1[2]), 
  2331                           ;!
  2332                           ;!    write_text@text	PTR unsigned char  size(2) Largest target is 6
  2333                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2334                           ;!
  2335                           ;!    write_text@c	PTR unsigned char  size(2) Largest target is 6
  2336                           ;!		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 
  2337                           ;!
  2338                           
  2339                           
  2340                           ;!
  2341                           ;!Critical Paths under _main in COMMON
  2342                           ;!
  2343                           ;!    None.
  2344                           ;!
  2345                           ;!Critical Paths under _isr in COMMON
  2346                           ;!
  2347                           ;!    _start_receive->_handle_remote
  2348                           ;!    _is_deadzone->___xxtofl
  2349                           ;!    ___fltol->___xxtofl
  2350                           ;!    ___fladd->___xxtofl
  2351                           ;!
  2352                           ;!Critical Paths under _main in BANK0
  2353                           ;!
  2354                           ;!    None.
  2355                           ;!
  2356                           ;!Critical Paths under _isr in BANK0
  2357                           ;!
  2358                           ;!    _isr->_handle_potmeter
  2359                           ;!    _handle_potmeter->_is_deadzone
  2360                           ;!    _is_deadzone->___fltol
  2361                           ;!    ___fltol->___fladd
  2362                           ;!
  2363                           ;!Critical Paths under _main in BANK1
  2364                           ;!
  2365                           ;!    _main->_update_volume
  2366                           ;!    _update_volume->_write_int
  2367                           ;!    _update_input->_write_int
  2368                           ;!    _write_space->_spiWrite
  2369                           ;!    _write_int->_sprintf
  2370                           ;!    _write_text->_write_char
  2371                           ;!    _write_char->_write_font
  2372                           ;!    _write_font->___wmul
  2373                           ;!    _sprintf->___lwmod
  2374                           ;!    ___lwmod->___lwdiv
  2375                           ;!    _display_init->_spiWrite
  2376                           ;!
  2377                           ;!Critical Paths under _isr in BANK1
  2378                           ;!
  2379                           ;!    None.
  2380                           ;!
  2381                           ;!Critical Paths under _main in BANK3
  2382                           ;!
  2383                           ;!    None.
  2384                           ;!
  2385                           ;!Critical Paths under _isr in BANK3
  2386                           ;!
  2387                           ;!    None.
  2388                           ;!
  2389                           ;!Critical Paths under _main in BANK2
  2390                           ;!
  2391                           ;!    None.
  2392                           ;!
  2393                           ;!Critical Paths under _isr in BANK2
  2394                           ;!
  2395                           ;!    None.
  2396                           
  2397 ;;
  2398 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2399 ;;
  2400                           
  2401                           ;!
  2402                           ;!Call Graph Tables:
  2403                           ;!
  2404                           ;! ---------------------------------------------------------------------------------
  2405                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2406                           ;! ---------------------------------------------------------------------------------
  2407                           ;! (0) _main                                                 2     2      0   10634
  2408                           ;!                                             35 BANK1      2     2      0
  2409                           ;!              _activateSelectedRelay
  2410                           ;!                             _config
  2411                           ;!                       _update_input
  2412                           ;!                      _update_volume
  2413                           ;! ---------------------------------------------------------------------------------
  2414                           ;! (1) _update_volume                                        2     2      0    5318
  2415                           ;!                                             33 BANK1      2     2      0
  2416                           ;!                  _display_write_end
  2417                           ;!                _display_write_start
  2418                           ;!                          _write_int
  2419                           ;!                        _write_space
  2420                           ;!                         _write_text
  2421                           ;! ---------------------------------------------------------------------------------
  2422                           ;! (1) _update_input                                         0     0      0    5294
  2423                           ;!                  _display_write_end
  2424                           ;!                _display_write_start
  2425                           ;!                          _write_int
  2426                           ;!                        _write_space
  2427                           ;!                         _write_text
  2428                           ;! ---------------------------------------------------------------------------------
  2429                           ;! (2) _write_space                                          7     5      2     266
  2430                           ;!                                              1 BANK1      7     5      2
  2431                           ;!                           _spiWrite
  2432                           ;! ---------------------------------------------------------------------------------
  2433                           ;! (2) _write_int                                            4     2      2    3781
  2434                           ;!                                             29 BANK1      4     2      2
  2435                           ;!                            _sprintf
  2436                           ;!                         _write_char
  2437                           ;!                         _write_text
  2438                           ;! ---------------------------------------------------------------------------------
  2439                           ;! (2) _write_text                                           4     2      2    1247
  2440                           ;!                                             19 BANK1      4     2      2
  2441                           ;!                         _write_char
  2442                           ;! ---------------------------------------------------------------------------------
  2443                           ;! (3) _write_char                                           3     3      0     951
  2444                           ;!                                             16 BANK1      3     3      0
  2445                           ;!                         _write_font
  2446                           ;! ---------------------------------------------------------------------------------
  2447                           ;! (4) _write_font                                          10     8      2     684
  2448                           ;!                                              6 BANK1     10     8      2
  2449                           ;!                             ___wmul
  2450                           ;!                           _spiWrite
  2451                           ;! ---------------------------------------------------------------------------------
  2452                           ;! (5) ___wmul                                               6     2      4     344
  2453                           ;!                                              0 BANK1      6     2      4
  2454                           ;! ---------------------------------------------------------------------------------
  2455                           ;! (3) _sprintf                                             23    19      4    1311
  2456                           ;!                                             14 BANK1     15    11      4
  2457                           ;!                            ___lwdiv
  2458                           ;!                            ___lwmod
  2459                           ;! ---------------------------------------------------------------------------------
  2460                           ;! (4) ___lwmod                                              6     2      4     311
  2461                           ;!                                              8 BANK1      6     2      4
  2462                           ;!                            ___lwdiv (ARG)
  2463                           ;! ---------------------------------------------------------------------------------
  2464                           ;! (4) ___lwdiv                                              8     4      4     414
  2465                           ;!                                              0 BANK1      8     4      4
  2466                           ;! ---------------------------------------------------------------------------------
  2467                           ;! (2) _display_write_start                                  0     0      0       0
  2468                           ;! ---------------------------------------------------------------------------------
  2469                           ;! (2) _display_write_end                                    0     0      0       0
  2470                           ;! ---------------------------------------------------------------------------------
  2471                           ;! (1) _config                                               3     3      0      22
  2472                           ;!                                              1 BANK1      3     3      0
  2473                           ;!                       _display_init
  2474                           ;!                           _init_adc
  2475                           ;! ---------------------------------------------------------------------------------
  2476                           ;! (2) _init_adc                                             0     0      0       0
  2477                           ;! ---------------------------------------------------------------------------------
  2478                           ;! (2) _display_init                                         0     0      0      22
  2479                           ;!                           _spiWrite
  2480                           ;! ---------------------------------------------------------------------------------
  2481                           ;! (5) _spiWrite                                             1     1      0      22
  2482                           ;!                                              0 BANK1      1     1      0
  2483                           ;! ---------------------------------------------------------------------------------
  2484                           ;! (1) _activateSelectedRelay                                0     0      0       0
  2485                           ;! ---------------------------------------------------------------------------------
  2486                           ;! Estimated maximum stack depth 5
  2487                           ;! ---------------------------------------------------------------------------------
  2488                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2489                           ;! ---------------------------------------------------------------------------------
  2490                           ;! (7) _isr                                                  4     4      0    4371
  2491                           ;!                                             54 BANK0      4     4      0
  2492                           ;!                    _handle_potmeter
  2493                           ;!                      _handle_rotary
  2494                           ;!                      _start_receive
  2495                           ;! ---------------------------------------------------------------------------------
  2496                           ;! (8) _start_receive                                       10    10      0      99
  2497                           ;!                                              5 COMMON     8     8      0
  2498                           ;!                                              0 BANK0      2     2      0
  2499                           ;!                      _handle_remote
  2500                           ;! ---------------------------------------------------------------------------------
  2501                           ;! (9) _handle_remote                                        5     5      0      53
  2502                           ;!                                              0 COMMON     5     5      0
  2503                           ;! ---------------------------------------------------------------------------------
  2504                           ;! (8) _handle_rotary                                        7     7      0     134
  2505                           ;!                                              0 COMMON     7     7      0
  2506                           ;! ---------------------------------------------------------------------------------
  2507                           ;! (8) _handle_potmeter                                      6     6      0    4138
  2508                           ;!                                             48 BANK0      6     6      0
  2509                           ;!                        _is_deadzone
  2510                           ;!                          i1___lwdiv
  2511                           ;! ---------------------------------------------------------------------------------
  2512                           ;! (9) i1___lwdiv                                            8     4      4     214
  2513                           ;!                                              0 COMMON     8     4      4
  2514                           ;! ---------------------------------------------------------------------------------
  2515                           ;! (9) _is_deadzone                                         13     9      4    3746
  2516                           ;!                                             35 BANK0     13     9      4
  2517                           ;!                            ___fladd
  2518                           ;!                            ___fltol
  2519                           ;!                           ___xxtofl
  2520                           ;!                           i1___wmul
  2521                           ;! ---------------------------------------------------------------------------------
  2522                           ;! (10) i1___wmul                                            6     2      4     144
  2523                           ;!                                              0 COMMON     6     2      4
  2524                           ;! ---------------------------------------------------------------------------------
  2525                           ;! (10) ___xxtofl                                           14    10      4     474
  2526                           ;!                                              0 COMMON    14    10      4
  2527                           ;! ---------------------------------------------------------------------------------
  2528                           ;! (10) ___fltol                                            11     7      4     381
  2529                           ;!                                             24 BANK0     11     7      4
  2530                           ;!                            ___fladd (ARG)
  2531                           ;!                           ___xxtofl (ARG)
  2532                           ;! ---------------------------------------------------------------------------------
  2533                           ;! (10) ___fladd                                            24    16      8    2414
  2534                           ;!                                              0 BANK0     24    16      8
  2535                           ;!                           ___xxtofl (ARG)
  2536                           ;! ---------------------------------------------------------------------------------
  2537                           ;! Estimated maximum stack depth 10
  2538                           ;! ---------------------------------------------------------------------------------
  2539                           ;!
  2540                           ;! Call Graph Graphs:
  2541                           ;!
  2542                           ;! _main (ROOT)
  2543                           ;!   _activateSelectedRelay
  2544                           ;!   _config
  2545                           ;!     _display_init
  2546                           ;!       _spiWrite
  2547                           ;!     _init_adc
  2548                           ;!   _update_input
  2549                           ;!     _display_write_end
  2550                           ;!     _display_write_start
  2551                           ;!     _write_int
  2552                           ;!       _sprintf
  2553                           ;!         ___lwdiv
  2554                           ;!         ___lwmod
  2555                           ;!           ___lwdiv (ARG)
  2556                           ;!       _write_char
  2557                           ;!         _write_font
  2558                           ;!           ___wmul
  2559                           ;!           _spiWrite
  2560                           ;!       _write_text
  2561                           ;!         _write_char
  2562                           ;!           _write_font
  2563                           ;!             ___wmul
  2564                           ;!             _spiWrite
  2565                           ;!     _write_space
  2566                           ;!       _spiWrite
  2567                           ;!     _write_text
  2568                           ;!       _write_char
  2569                           ;!         _write_font
  2570                           ;!           ___wmul
  2571                           ;!           _spiWrite
  2572                           ;!   _update_volume
  2573                           ;!     _display_write_end
  2574                           ;!     _display_write_start
  2575                           ;!     _write_int
  2576                           ;!       _sprintf
  2577                           ;!         ___lwdiv
  2578                           ;!         ___lwmod
  2579                           ;!           ___lwdiv (ARG)
  2580                           ;!       _write_char
  2581                           ;!         _write_font
  2582                           ;!           ___wmul
  2583                           ;!           _spiWrite
  2584                           ;!       _write_text
  2585                           ;!         _write_char
  2586                           ;!           _write_font
  2587                           ;!             ___wmul
  2588                           ;!             _spiWrite
  2589                           ;!     _write_space
  2590                           ;!       _spiWrite
  2591                           ;!     _write_text
  2592                           ;!       _write_char
  2593                           ;!         _write_font
  2594                           ;!           ___wmul
  2595                           ;!           _spiWrite
  2596                           ;!
  2597                           ;! _isr (ROOT)
  2598                           ;!   _handle_potmeter
  2599                           ;!     _is_deadzone
  2600                           ;!       ___fladd
  2601                           ;!         ___xxtofl (ARG)
  2602                           ;!       ___fltol
  2603                           ;!         ___fladd (ARG)
  2604                           ;!           ___xxtofl (ARG)
  2605                           ;!         ___xxtofl (ARG)
  2606                           ;!       ___xxtofl
  2607                           ;!       i1___wmul
  2608                           ;!     i1___lwdiv
  2609                           ;!   _handle_rotary
  2610                           ;!   _start_receive
  2611                           ;!     _handle_remote
  2612                           ;!
  2613                           
  2614                           ;! Address spaces:
  2615                           
  2616                           ;!Name               Size   Autos  Total    Cost      Usage
  2617                           ;!BITCOMMON            E      0       0       0        0.0%
  2618                           ;!EEDATA             100      0       0       0        0.0%
  2619                           ;!NULL                 0      0       0       0        0.0%
  2620                           ;!CODE                 0      0       0       0        0.0%
  2621                           ;!COMMON               E      E       E       1      100.0%
  2622                           ;!BITSFR0              0      0       0       1        0.0%
  2623                           ;!SFR0                 0      0       0       1        0.0%
  2624                           ;!BITSFR1              0      0       0       2        0.0%
  2625                           ;!SFR1                 0      0       0       2        0.0%
  2626                           ;!STACK                0      0       0       2        0.0%
  2627                           ;!ABS                  0      0      81       3        0.0%
  2628                           ;!BITBANK0            50      0       0       4        0.0%
  2629                           ;!BITSFR3              0      0       0       4        0.0%
  2630                           ;!SFR3                 0      0       0       4        0.0%
  2631                           ;!BANK0               50     3A      45       5       86.3%
  2632                           ;!BITSFR2              0      0       0       5        0.0%
  2633                           ;!SFR2                 0      0       0       5        0.0%
  2634                           ;!BITBANK1            50      0       0       6        0.0%
  2635                           ;!BANK1               50     25      2E       7       57.5%
  2636                           ;!BITBANK3            60      0       0       8        0.0%
  2637                           ;!BANK3               60      0       0       9        0.0%
  2638                           ;!BITBANK2            60      0       0      10        0.0%
  2639                           ;!BANK2               60      0       0      11        0.0%
  2640                           ;!DATA                 0      0      81      12        0.0%
  2641                           
  2642                           	global	_main
  2643                           
  2644 ;; *************** function _main *****************
  2645 ;; Defined at:
  2646 ;;		line 26 in file "main.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : B00/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       0       2       0       0
  2663 ;;      Totals:         0       0       2       0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels required when called:   10
  2666 ;; This function calls:
  2667 ;;		_activateSelectedRelay
  2668 ;;		_config
  2669 ;;		_update_input
  2670 ;;		_update_volume
  2671 ;; This function is called by:
  2672 ;;		Startup code after reset
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2676                           	file	"main.c"
  2677                           	line	26
  2678                           global __pmaintext
  2679                           __pmaintext:	;psect for function _main
  2680  09C1                     psect	maintext
  2681                           	file	"main.c"
  2682                           	line	26
  2683                           	global	__size_of_main
  2684                           	__size_of_main	equ	__end_of_main-_main
  2685  002C                     	
  2686                           _main:	
  2687  09C1                     ;incstack = 0
  2688 ;; hardware stack exceeded
  2689                           	opt	stack 0
  2690                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2691                           	line	28
  2692                           	
  2693                           l2744:	
  2694  09C1                     ;main.c: 28:     config();
  2695                           	fcall	_config
  2696  09C1  120A  158A  25A1  120A  158A  	goto	l2746
  2697  09C6  29C7               	line	30
  2698                           ;main.c: 30:     while(1)
  2699                           	
  2700                           l53:	
  2701  09C7                     	line	32
  2702                           	
  2703                           l2746:	
  2704  09C7                     ;main.c: 31:     {;main.c: 32:         if (!ADCON0bits.GO)
  2705                           	bcf	status, 5	;RP0=0, select bank0
  2706  09C7  1283               	bcf	status, 6	;RP1=0, select bank0
  2707  09C8  1303               	btfsc	(31),1	;volatile
  2708  09C9  189F               	goto	u2911
  2709  09CA  29CC               	goto	u2910
  2710  09CB  29CD               u2911:
  2711  09CC                     	goto	l2750
  2712  09CC  29CF               u2910:
  2713  09CD                     	line	33
  2714                           	
  2715                           l2748:	
  2716  09CD                     ;main.c: 33:             ADCON0bits.GO = 1;
  2717                           	bsf	(31),1	;volatile
  2718  09CD  149F               	goto	l2750
  2719  09CE  29CF               	
  2720                           l54:	
  2721  09CF                     	line	35
  2722                           	
  2723                           l2750:	
  2724  09CF                     ;main.c: 35:         update_volume();
  2725                           	fcall	_update_volume
  2726  09CF  120A  158A  2482  120A  158A  	line	36
  2727                           ;main.c: 36:         update_input();
  2728                           	fcall	_update_input
  2729  09D4  120A  158A  230A  120A  158A  	line	37
  2730                           	
  2731                           l2752:	
  2732  09D9                     ;main.c: 37:         activateSelectedRelay();
  2733                           	fcall	_activateSelectedRelay
  2734  09D9  120A  158A  2254  120A  158A  	line	39
  2735                           	
  2736                           l2754:	
  2737  09DE                     ;main.c: 39:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2738                           	opt asmopt_push
  2739                           opt asmopt_off
  2740                           movlw	13
  2741  09DE  300D               	bsf	status, 5	;RP0=1, select bank1
  2742  09DF  1683               	bcf	status, 6	;RP1=0, select bank1
  2743  09E0  1303               movwf	((??_main+0)^080h+0+1),f
  2744  09E1  00C4               	movlw	251
  2745  09E2  30FB               movwf	((??_main+0)^080h+0),f
  2746  09E3  00C3               	u2957:
  2747  09E4                     decfsz	((??_main+0)^080h+0),f
  2748  09E4  0BC3               	goto	u2957
  2749  09E5  29E4               	decfsz	((??_main+0)^080h+0+1),f
  2750  09E6  0BC4               	goto	u2957
  2751  09E7  29E4               opt asmopt_pop
  2752                           
  2753                           	goto	l2746
  2754  09E8  29C7               	line	40
  2755                           ;main.c: 40:     }
  2756                           	
  2757                           l55:	
  2758  09E9                     	goto	l2746
  2759  09E9  29C7               	
  2760                           l56:	
  2761  09EA                     	line	42
  2762                           	
  2763                           l57:	
  2764  09EA                     	global	start
  2765                           	ljmp	start
  2766  09EA  120A  118A  2812   	opt stack 0
  2767                           GLOBAL	__end_of_main
  2768                           	__end_of_main:
  2769  09ED                     	signat	_main,89
  2770                           	global	_update_volume
  2771                           
  2772 ;; *************** function _update_volume *****************
  2773 ;; Defined at:
  2774 ;;		line 83 in file "Display.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  spaces          2   33[BANK1 ] int 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         0       0       0       0       0
  2789 ;;      Locals:         0       0       2       0       0
  2790 ;;      Temps:          0       0       0       0       0
  2791 ;;      Totals:         0       0       2       0       0
  2792 ;;Total ram usage:        2 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    9
  2795 ;; This function calls:
  2796 ;;		_display_write_end
  2797 ;;		_display_write_start
  2798 ;;		_write_int
  2799 ;;		_write_space
  2800 ;;		_write_text
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2806                           	file	"Display.c"
  2807                           	line	83
  2808                           global __ptext1
  2809                           __ptext1:	;psect for function _update_volume
  2810  0C82                     psect	text1
  2811                           	file	"Display.c"
  2812                           	line	83
  2813                           	global	__size_of_update_volume
  2814                           	__size_of_update_volume	equ	__end_of_update_volume-_update_volume
  2815  005B                     	
  2816                           _update_volume:	
  2817  0C82                     ;incstack = 0
  2818 ;; hardware stack exceeded
  2819                           	opt	stack 0
  2820                           ; Regs used in _update_volume: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2821                           	line	85
  2822                           	
  2823                           l2618:	
  2824  0C82                     ;Display.c: 85:     if (lastVolume == volume) return;
  2825                           	bsf	status, 5	;RP0=1, select bank1
  2826  0C82  1683               	bcf	status, 6	;RP1=0, select bank1
  2827  0C83  1303               	movf	(_volume+1)^080h,w
  2828  0C84  084A               	xorwf	(_lastVolume+1)^080h,w
  2829  0C85  0648               	skipz
  2830  0C86  1D03               	goto	u2725
  2831  0C87  2C8A               	movf	(_volume)^080h,w
  2832  0C88  0849               	xorwf	(_lastVolume)^080h,w
  2833  0C89  0647               u2725:
  2834  0C8A                     
  2835                           	skipz
  2836  0C8A  1D03               	goto	u2721
  2837  0C8B  2C8D               	goto	u2720
  2838  0C8C  2C8E               u2721:
  2839  0C8D                     	goto	l2622
  2840  0C8D  2C90               u2720:
  2841  0C8E                     	goto	l128
  2842  0C8E  2CDC               	
  2843                           l2620:	
  2844  0C8F                     	goto	l128
  2845  0C8F  2CDC               	
  2846                           l127:	
  2847  0C90                     	line	87
  2848                           	
  2849                           l2622:	
  2850  0C90                     ;Display.c: 87:     _selectedDisplay = 0;
  2851                           	clrf	(__selectedDisplay)^080h
  2852  0C90  01CD               	line	88
  2853                           	
  2854                           l2624:	
  2855  0C91                     ;Display.c: 88:     display_write_start();
  2856                           	fcall	_display_write_start
  2857  0C91  120A  158A  2149  120A  158A  	line	90
  2858                           	
  2859                           l2626:	
  2860  0C96                     ;Display.c: 90:     write_text("VOL");
  2861                           	movlw	low(((STR_2)|8000h))
  2862  0C96  3096               	bsf	status, 5	;RP0=1, select bank1
  2863  0C97  1683               	bcf	status, 6	;RP1=0, select bank1
  2864  0C98  1303               	movwf	(write_text@text)^080h
  2865  0C99  00B3               	movlw	high(((STR_2)|8000h))
  2866  0C9A  3084               	movwf	((write_text@text)^080h)+1
  2867  0C9B  00B4               	fcall	_write_text
  2868  0C9C  120A  158A  228D  120A  158A  	line	93
  2869                           	
  2870                           l2628:	
  2871  0CA1                     ;Display.c: 93:     int spaces = 3;
  2872                           	movlw	03h
  2873  0CA1  3003               	bsf	status, 5	;RP0=1, select bank1
  2874  0CA2  1683               	bcf	status, 6	;RP1=0, select bank1
  2875  0CA3  1303               	movwf	(update_volume@spaces)^080h
  2876  0CA4  00C1               	movlw	0
  2877  0CA5  3000               	movwf	((update_volume@spaces)^080h)+1
  2878  0CA6  00C2               	line	94
  2879                           	
  2880                           l2630:	
  2881  0CA7                     ;Display.c: 94:     if (volume < 10)
  2882                           	movf	(_volume+1)^080h,w
  2883  0CA7  084A               	xorlw	80h
  2884  0CA8  3A80               	movwf	btemp+1
  2885  0CA9  00FF               	movlw	(0)^80h
  2886  0CAA  3080               	subwf	btemp+1,w
  2887  0CAB  027F               	skipz
  2888  0CAC  1D03               	goto	u2735
  2889  0CAD  2CB0               	movlw	0Ah
  2890  0CAE  300A               	subwf	(_volume)^080h,w
  2891  0CAF  0249               u2735:
  2892  0CB0                     
  2893                           	skipnc
  2894  0CB0  1803               	goto	u2731
  2895  0CB1  2CB3               	goto	u2730
  2896  0CB2  2CB4               u2731:
  2897  0CB3                     	goto	l2634
  2898  0CB3  2CBB               u2730:
  2899  0CB4                     	line	95
  2900                           	
  2901                           l2632:	
  2902  0CB4                     ;Display.c: 95:         spaces = 4;
  2903                           	movlw	04h
  2904  0CB4  3004               	bsf	status, 5	;RP0=1, select bank1
  2905  0CB5  1683               	bcf	status, 6	;RP1=0, select bank1
  2906  0CB6  1303               	movwf	(update_volume@spaces)^080h
  2907  0CB7  00C1               	movlw	0
  2908  0CB8  3000               	movwf	((update_volume@spaces)^080h)+1
  2909  0CB9  00C2               	goto	l2634
  2910  0CBA  2CBB               	
  2911                           l129:	
  2912  0CBB                     	line	98
  2913                           	
  2914                           l2634:	
  2915  0CBB                     ;Display.c: 98:     write_space(spaces);
  2916                           	bsf	status, 5	;RP0=1, select bank1
  2917  0CBB  1683               	bcf	status, 6	;RP1=0, select bank1
  2918  0CBC  1303               	movf	(update_volume@spaces+1)^080h,w
  2919  0CBD  0842               	movwf	(write_space@count+1)^080h
  2920  0CBE  00A2               	movf	(update_volume@spaces)^080h,w
  2921  0CBF  0841               	movwf	(write_space@count)^080h
  2922  0CC0  00A1               	fcall	_write_space
  2923  0CC1  120A  158A  239B  120A  158A  	line	100
  2924                           	
  2925                           l2636:	
  2926  0CC6                     ;Display.c: 100:     write_int(volume);
  2927                           	bsf	status, 5	;RP0=1, select bank1
  2928  0CC6  1683               	bcf	status, 6	;RP1=0, select bank1
  2929  0CC7  1303               	movf	(_volume+1)^080h,w
  2930  0CC8  084A               	movwf	(write_int@number+1)^080h
  2931  0CC9  00BE               	movf	(_volume)^080h,w
  2932  0CCA  0849               	movwf	(write_int@number)^080h
  2933  0CCB  00BD               	fcall	_write_int
  2934  0CCC  120A  158A  221E  120A  158A  	line	101
  2935                           	
  2936                           l2638:	
  2937  0CD1                     ;Display.c: 101:     display_write_end();
  2938                           	fcall	_display_write_end
  2939  0CD1  120A  158A  213A  120A  158A  	line	103
  2940                           	
  2941                           l2640:	
  2942  0CD6                     ;Display.c: 103:     lastVolume = volume;
  2943                           	bsf	status, 5	;RP0=1, select bank1
  2944  0CD6  1683               	bcf	status, 6	;RP1=0, select bank1
  2945  0CD7  1303               	movf	(_volume+1)^080h,w
  2946  0CD8  084A               	movwf	(_lastVolume+1)^080h
  2947  0CD9  00C8               	movf	(_volume)^080h,w
  2948  0CDA  0849               	movwf	(_lastVolume)^080h
  2949  0CDB  00C7               	line	105
  2950                           	
  2951                           l128:	
  2952  0CDC                     	return
  2953  0CDC  0008               	opt stack 0
  2954                           GLOBAL	__end_of_update_volume
  2955                           	__end_of_update_volume:
  2956  0CDD                     	signat	_update_volume,89
  2957                           	global	_update_input
  2958                           
  2959 ;; *************** function _update_input *****************
  2960 ;; Defined at:
  2961 ;;		line 65 in file "Display.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2975 ;;      Params:         0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:    9
  2982 ;; This function calls:
  2983 ;;		_display_write_end
  2984 ;;		_display_write_start
  2985 ;;		_write_int
  2986 ;;		_write_space
  2987 ;;		_write_text
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2993                           	line	65
  2994                           global __ptext2
  2995                           __ptext2:	;psect for function _update_input
  2996  0B0A                     psect	text2
  2997                           	file	"Display.c"
  2998                           	line	65
  2999                           	global	__size_of_update_input
  3000                           	__size_of_update_input	equ	__end_of_update_input-_update_input
  3001  0046                     	
  3002                           _update_input:	
  3003  0B0A                     ;incstack = 0
  3004 ;; hardware stack exceeded
  3005                           	opt	stack 0
  3006                           ; Regs used in _update_input: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3007                           	line	67
  3008                           	
  3009                           l2642:	
  3010  0B0A                     ;Display.c: 67:     if (lastInput == _selectedInput) return;
  3011                           	bsf	status, 5	;RP0=1, select bank1
  3012  0B0A  1683               	bcf	status, 6	;RP1=0, select bank1
  3013  0B0B  1303               	movf	(__selectedInput+1)^080h,w
  3014  0B0C  084C               	xorwf	(_lastInput+1)^080h,w
  3015  0B0D  0646               	skipz
  3016  0B0E  1D03               	goto	u2745
  3017  0B0F  2B12               	movf	(__selectedInput)^080h,w
  3018  0B10  084B               	xorwf	(_lastInput)^080h,w
  3019  0B11  0645               u2745:
  3020  0B12                     
  3021                           	skipz
  3022  0B12  1D03               	goto	u2741
  3023  0B13  2B15               	goto	u2740
  3024  0B14  2B16               u2741:
  3025  0B15                     	goto	l123
  3026  0B15  2B18               u2740:
  3027  0B16                     	goto	l124
  3028  0B16  2B4F               	
  3029                           l2644:	
  3030  0B17                     	goto	l124
  3031  0B17  2B4F               	
  3032                           l123:	
  3033  0B18                     	line	69
  3034                           ;Display.c: 69:     _selectedDisplay = 1;
  3035                           	clrf	(__selectedDisplay)^080h
  3036  0B18  01CD               	incf	(__selectedDisplay)^080h,f
  3037  0B19  0ACD               	line	70
  3038                           	
  3039                           l2646:	
  3040  0B1A                     ;Display.c: 70:     display_write_start();
  3041                           	fcall	_display_write_start
  3042  0B1A  120A  158A  2149  120A  158A  	line	72
  3043                           	
  3044                           l2648:	
  3045  0B1F                     ;Display.c: 72:     write_text("INPUT");
  3046                           	movlw	low(((STR_1)|8000h))
  3047  0B1F  3090               	bsf	status, 5	;RP0=1, select bank1
  3048  0B20  1683               	bcf	status, 6	;RP1=0, select bank1
  3049  0B21  1303               	movwf	(write_text@text)^080h
  3050  0B22  00B3               	movlw	high(((STR_1)|8000h))
  3051  0B23  3084               	movwf	((write_text@text)^080h)+1
  3052  0B24  00B4               	fcall	_write_text
  3053  0B25  120A  158A  228D  120A  158A  	line	74
  3054                           	
  3055                           l2650:	
  3056  0B2A                     ;Display.c: 74:     write_space(2);
  3057                           	movlw	02h
  3058  0B2A  3002               	bsf	status, 5	;RP0=1, select bank1
  3059  0B2B  1683               	bcf	status, 6	;RP1=0, select bank1
  3060  0B2C  1303               	movwf	(write_space@count)^080h
  3061  0B2D  00A1               	movlw	0
  3062  0B2E  3000               	movwf	((write_space@count)^080h)+1
  3063  0B2F  00A2               	fcall	_write_space
  3064  0B30  120A  158A  239B  120A  158A  	line	76
  3065                           	
  3066                           l2652:	
  3067  0B35                     ;Display.c: 76:     write_int(_selectedInput+1);
  3068                           	bsf	status, 5	;RP0=1, select bank1
  3069  0B35  1683               	bcf	status, 6	;RP1=0, select bank1
  3070  0B36  1303               	movf	(__selectedInput)^080h,w
  3071  0B37  084B               	addlw	low(01h)
  3072  0B38  3E01               	movwf	(write_int@number)^080h
  3073  0B39  00BD               	movf	(__selectedInput+1)^080h,w
  3074  0B3A  084C               	skipnc
  3075  0B3B  1803               	addlw	1
  3076  0B3C  3E01               	addlw	high(01h)
  3077  0B3D  3E00               	movwf	1+(write_int@number)^080h
  3078  0B3E  00BE               	fcall	_write_int
  3079  0B3F  120A  158A  221E  120A  158A  	line	77
  3080                           	
  3081                           l2654:	
  3082  0B44                     ;Display.c: 77:     display_write_end();
  3083                           	fcall	_display_write_end
  3084  0B44  120A  158A  213A  120A  158A  	line	79
  3085                           	
  3086                           l2656:	
  3087  0B49                     ;Display.c: 79:     lastInput = _selectedInput;
  3088                           	bsf	status, 5	;RP0=1, select bank1
  3089  0B49  1683               	bcf	status, 6	;RP1=0, select bank1
  3090  0B4A  1303               	movf	(__selectedInput+1)^080h,w
  3091  0B4B  084C               	movwf	(_lastInput+1)^080h
  3092  0B4C  00C6               	movf	(__selectedInput)^080h,w
  3093  0B4D  084B               	movwf	(_lastInput)^080h
  3094  0B4E  00C5               	line	81
  3095                           	
  3096                           l124:	
  3097  0B4F                     	return
  3098  0B4F  0008               	opt stack 0
  3099                           GLOBAL	__end_of_update_input
  3100                           	__end_of_update_input:
  3101  0B50                     	signat	_update_input,89
  3102                           	global	_write_space
  3103                           
  3104 ;; *************** function _write_space *****************
  3105 ;; Defined at:
  3106 ;;		line 107 in file "Display.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  count           2    1[BANK1 ] int 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  x               2    6[BANK1 ] int 
  3111 ;;  i               2    4[BANK1 ] int 
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 0/0
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3121 ;;      Params:         0       0       2       0       0
  3122 ;;      Locals:         0       0       4       0       0
  3123 ;;      Temps:          0       0       1       0       0
  3124 ;;      Totals:         0       0       7       0       0
  3125 ;;Total ram usage:        7 bytes
  3126 ;; Hardware stack levels used:    1
  3127 ;; Hardware stack levels required when called:    5
  3128 ;; This function calls:
  3129 ;;		_spiWrite
  3130 ;; This function is called by:
  3131 ;;		_update_input
  3132 ;;		_update_volume
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  3136                           	line	107
  3137                           global __ptext3
  3138                           __ptext3:	;psect for function _write_space
  3139  0B9B                     psect	text3
  3140                           	file	"Display.c"
  3141                           	line	107
  3142                           	global	__size_of_write_space
  3143                           	__size_of_write_space	equ	__end_of_write_space-_write_space
  3144  004C                     	
  3145                           _write_space:	
  3146  0B9B                     ;incstack = 0
  3147                           	opt	stack 1
  3148                           ; Regs used in _write_space: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3149                           	line	109
  3150                           	
  3151                           l2424:	
  3152  0B9B                     ;Display.c: 107: void write_space(int count);Display.c: 108: {;Display.c: 109:     for (
                                 int i = 0; i < count; i++) {
  3153                           	bsf	status, 5	;RP0=1, select bank1
  3154  0B9B  1683               	bcf	status, 6	;RP1=0, select bank1
  3155  0B9C  1303               	clrf	(write_space@i)^080h
  3156  0B9D  01A4               	clrf	(write_space@i+1)^080h
  3157  0B9E  01A5               	goto	l132
  3158  0B9F  2BD7               	
  3159                           l133:	
  3160  0BA0                     	line	111
  3161                           	
  3162                           l2426:	
  3163  0BA0                     ;Display.c: 111:         for (int x = 0; x < 5; x++) {
  3164                           	bsf	status, 5	;RP0=1, select bank1
  3165  0BA0  1683               	bcf	status, 6	;RP1=0, select bank1
  3166  0BA1  1303               	clrf	(write_space@x)^080h
  3167  0BA2  01A6               	clrf	(write_space@x+1)^080h
  3168  0BA3  01A7               	
  3169                           l2428:	
  3170  0BA4                     	movf	(write_space@x+1)^080h,w
  3171  0BA4  0827               	xorlw	80h
  3172  0BA5  3A80               	movwf	btemp+1
  3173  0BA6  00FF               	movlw	(0)^80h
  3174  0BA7  3080               	subwf	btemp+1,w
  3175  0BA8  027F               	skipz
  3176  0BA9  1D03               	goto	u2585
  3177  0BAA  2BAD               	movlw	05h
  3178  0BAB  3005               	subwf	(write_space@x)^080h,w
  3179  0BAC  0226               u2585:
  3180  0BAD                     
  3181                           	skipc
  3182  0BAD  1C03               	goto	u2581
  3183  0BAE  2BB0               	goto	u2580
  3184  0BAF  2BB1               u2581:
  3185  0BB0                     	goto	l2432
  3186  0BB0  2BB3               u2580:
  3187  0BB1                     	goto	l2438
  3188  0BB1  2BCF               	
  3189                           l2430:	
  3190  0BB2                     	goto	l2438
  3191  0BB2  2BCF               	
  3192                           l134:	
  3193  0BB3                     	line	113
  3194                           	
  3195                           l2432:	
  3196  0BB3                     ;Display.c: 113:             spiWrite(0x00);
  3197                           	movlw	low(0)
  3198  0BB3  3000               	fcall	_spiWrite
  3199  0BB4  120A  118A  22ED  120A  158A  	line	115
  3200                           	
  3201                           l2434:	
  3202  0BB9                     ;Display.c: 115:         }
  3203                           	movlw	01h
  3204  0BB9  3001               	bsf	status, 5	;RP0=1, select bank1
  3205  0BBA  1683               	bcf	status, 6	;RP1=0, select bank1
  3206  0BBB  1303               	addwf	(write_space@x)^080h,f
  3207  0BBC  07A6               	skipnc
  3208  0BBD  1803               	incf	(write_space@x+1)^080h,f
  3209  0BBE  0AA7               	movlw	0
  3210  0BBF  3000               	addwf	(write_space@x+1)^080h,f
  3211  0BC0  07A7               	
  3212                           l2436:	
  3213  0BC1                     	movf	(write_space@x+1)^080h,w
  3214  0BC1  0827               	xorlw	80h
  3215  0BC2  3A80               	movwf	btemp+1
  3216  0BC3  00FF               	movlw	(0)^80h
  3217  0BC4  3080               	subwf	btemp+1,w
  3218  0BC5  027F               	skipz
  3219  0BC6  1D03               	goto	u2595
  3220  0BC7  2BCA               	movlw	05h
  3221  0BC8  3005               	subwf	(write_space@x)^080h,w
  3222  0BC9  0226               u2595:
  3223  0BCA                     
  3224                           	skipc
  3225  0BCA  1C03               	goto	u2591
  3226  0BCB  2BCD               	goto	u2590
  3227  0BCC  2BCE               u2591:
  3228  0BCD                     	goto	l2432
  3229  0BCD  2BB3               u2590:
  3230  0BCE                     	goto	l2438
  3231  0BCE  2BCF               	
  3232                           l135:	
  3233  0BCF                     	line	116
  3234                           	
  3235                           l2438:	
  3236  0BCF                     ;Display.c: 116:     }
  3237                           	movlw	01h
  3238  0BCF  3001               	bsf	status, 5	;RP0=1, select bank1
  3239  0BD0  1683               	bcf	status, 6	;RP1=0, select bank1
  3240  0BD1  1303               	addwf	(write_space@i)^080h,f
  3241  0BD2  07A4               	skipnc
  3242  0BD3  1803               	incf	(write_space@i+1)^080h,f
  3243  0BD4  0AA5               	movlw	0
  3244  0BD5  3000               	addwf	(write_space@i+1)^080h,f
  3245  0BD6  07A5               	
  3246                           l132:	
  3247  0BD7                     	movf	(write_space@i+1)^080h,w
  3248  0BD7  0825               	xorlw	80h
  3249  0BD8  3A80               	movwf	(??_write_space+0)^080h+0
  3250  0BD9  00A3               	movf	(write_space@count+1)^080h,w
  3251  0BDA  0822               	xorlw	80h
  3252  0BDB  3A80               	subwf	(??_write_space+0)^080h+0,w
  3253  0BDC  0223               	skipz
  3254  0BDD  1D03               	goto	u2605
  3255  0BDE  2BE1               	movf	(write_space@count)^080h,w
  3256  0BDF  0821               	subwf	(write_space@i)^080h,w
  3257  0BE0  0224               u2605:
  3258  0BE1                     
  3259                           	skipc
  3260  0BE1  1C03               	goto	u2601
  3261  0BE2  2BE4               	goto	u2600
  3262  0BE3  2BE5               u2601:
  3263  0BE4                     	goto	l2426
  3264  0BE4  2BA0               u2600:
  3265  0BE5                     	goto	l137
  3266  0BE5  2BE6               	
  3267                           l136:	
  3268  0BE6                     	line	117
  3269                           	
  3270                           l137:	
  3271  0BE6                     	return
  3272  0BE6  0008               	opt stack 0
  3273                           GLOBAL	__end_of_write_space
  3274                           	__end_of_write_space:
  3275  0BE7                     	signat	_write_space,4217
  3276                           	global	_write_int
  3277                           
  3278 ;; *************** function _write_int *****************
  3279 ;; Defined at:
  3280 ;;		line 129 in file "Display.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  number          2   29[BANK1 ] int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  num             2   31[BANK1 ] unsigned char [2]
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3294 ;;      Params:         0       0       2       0       0
  3295 ;;      Locals:         0       0       2       0       0
  3296 ;;      Temps:          0       0       0       0       0
  3297 ;;      Totals:         0       0       4       0       0
  3298 ;;Total ram usage:        4 bytes
  3299 ;; Hardware stack levels used:    1
  3300 ;; Hardware stack levels required when called:    8
  3301 ;; This function calls:
  3302 ;;		_sprintf
  3303 ;;		_write_char
  3304 ;;		_write_text
  3305 ;; This function is called by:
  3306 ;;		_update_input
  3307 ;;		_update_volume
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  3311                           	line	129
  3312                           global __ptext4
  3313                           __ptext4:	;psect for function _write_int
  3314  0A1E                     psect	text4
  3315                           	file	"Display.c"
  3316                           	line	129
  3317                           	global	__size_of_write_int
  3318                           	__size_of_write_int	equ	__end_of_write_int-_write_int
  3319  0036                     	
  3320                           _write_int:	
  3321  0A1E                     ;incstack = 0
  3322 ;; hardware stack exceeded
  3323                           	opt	stack 0
  3324                           ; Regs used in _write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3325                           	line	131
  3326                           	
  3327                           l2440:	
  3328  0A1E                     ;Display.c: 129: void write_int(int number);Display.c: 130: {;Display.c: 131:     if (nu
                                 mber < 10) {
  3329                           	bsf	status, 5	;RP0=1, select bank1
  3330  0A1E  1683               	bcf	status, 6	;RP1=0, select bank1
  3331  0A1F  1303               	movf	(write_int@number+1)^080h,w
  3332  0A20  083E               	xorlw	80h
  3333  0A21  3A80               	movwf	btemp+1
  3334  0A22  00FF               	movlw	(0)^80h
  3335  0A23  3080               	subwf	btemp+1,w
  3336  0A24  027F               	skipz
  3337  0A25  1D03               	goto	u2615
  3338  0A26  2A29               	movlw	0Ah
  3339  0A27  300A               	subwf	(write_int@number)^080h,w
  3340  0A28  023D               u2615:
  3341  0A29                     
  3342                           	skipnc
  3343  0A29  1803               	goto	u2611
  3344  0A2A  2A2C               	goto	u2610
  3345  0A2B  2A2D               u2611:
  3346  0A2C                     	goto	l2446
  3347  0A2C  2A38               u2610:
  3348  0A2D                     	line	132
  3349                           	
  3350                           l2442:	
  3351  0A2D                     ;Display.c: 132:         write_char(number + 48);
  3352                           	bsf	status, 5	;RP0=1, select bank1
  3353  0A2D  1683               	bcf	status, 6	;RP1=0, select bank1
  3354  0A2E  1303               	movf	(write_int@number)^080h,w
  3355  0A2F  083D               	addlw	030h
  3356  0A30  3E30               	fcall	_write_char
  3357  0A31  120A  158A  253F  120A  158A  	goto	l147
  3358  0A36  2A53               	line	133
  3359                           	
  3360                           l2444:	
  3361  0A37                     ;Display.c: 133:         return;
  3362                           	goto	l147
  3363  0A37  2A53               	line	134
  3364                           ;Display.c: 134:     }
  3365                           	
  3366                           l146:	
  3367  0A38                     	line	137
  3368                           	
  3369                           l2446:	
  3370  0A38                     ;Display.c: 136:     char num[2];;Display.c: 137:     sprintf(num, "%d", number);
  3371                           	movlw	low(((STR_3)|8000h))
  3372  0A38  309A               	bsf	status, 5	;RP0=1, select bank1
  3373  0A39  1683               	bcf	status, 6	;RP1=0, select bank1
  3374  0A3A  1303               	movwf	(sprintf@f)^080h
  3375  0A3B  00AE               	movlw	high(((STR_3)|8000h))
  3376  0A3C  3084               	movwf	((sprintf@f)^080h)+1
  3377  0A3D  00AF               	movf	(write_int@number+1)^080h,w
  3378  0A3E  083E               	movwf	1+(?_sprintf)^080h+02h
  3379  0A3F  00B1               	movf	(write_int@number)^080h,w
  3380  0A40  083D               	movwf	0+(?_sprintf)^080h+02h
  3381  0A41  00B0               	movlw	(low(write_int@num|((0x0)<<8)))&0ffh
  3382  0A42  30BF               	fcall	_sprintf
  3383  0A43  120A  118A  249D  120A  158A  	line	139
  3384                           ;Display.c: 139:     write_text(num);
  3385                           	movlw	(low(write_int@num|((0x0)<<8))&0ffh)
  3386  0A48  30BF               	bsf	status, 5	;RP0=1, select bank1
  3387  0A49  1683               	bcf	status, 6	;RP1=0, select bank1
  3388  0A4A  1303               	movwf	(write_text@text)^080h
  3389  0A4B  00B3               	movlw	(0x0)
  3390  0A4C  3000               	movwf	(write_text@text+1)^080h
  3391  0A4D  00B4               	fcall	_write_text
  3392  0A4E  120A  158A  228D  120A  158A  	line	140
  3393                           	
  3394                           l147:	
  3395  0A53                     	return
  3396  0A53  0008               	opt stack 0
  3397                           GLOBAL	__end_of_write_int
  3398                           	__end_of_write_int:
  3399  0A54                     	signat	_write_int,4217
  3400                           	global	_write_text
  3401                           
  3402 ;; *************** function _write_text *****************
  3403 ;; Defined at:
  3404 ;;		line 119 in file "Display.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;  text            2   19[BANK1 ] PTR unsigned char 
  3407 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  c               2   21[BANK1 ] PTR unsigned char 
  3410 ;;		 -> write_int@num(2), STR_2(4), STR_1(6), 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  1    wreg      void 
  3413 ;; Registers used:
  3414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       0       2       0       0
  3421 ;;      Locals:         0       0       2       0       0
  3422 ;;      Temps:          0       0       0       0       0
  3423 ;;      Totals:         0       0       4       0       0
  3424 ;;Total ram usage:        4 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    7
  3427 ;; This function calls:
  3428 ;;		_write_char
  3429 ;; This function is called by:
  3430 ;;		_update_input
  3431 ;;		_update_volume
  3432 ;;		_write_int
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  3436                           	line	119
  3437                           global __ptext5
  3438                           __ptext5:	;psect for function _write_text
  3439  0A8D                     psect	text5
  3440                           	file	"Display.c"
  3441                           	line	119
  3442                           	global	__size_of_write_text
  3443                           	__size_of_write_text	equ	__end_of_write_text-_write_text
  3444  003A                     	
  3445                           _write_text:	
  3446  0A8D                     ;incstack = 0
  3447 ;; hardware stack exceeded
  3448                           	opt	stack 0
  3449                           ; Regs used in _write_text: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3450                           	line	123
  3451                           	
  3452                           l1998:	
  3453  0A8D                     ;Display.c: 119: void write_text(char* text);Display.c: 120: {;Display.c: 121:     char*
                                  c;;Display.c: 123:     for (c = text; *c != '\0'; c++) {
  3454                           	bsf	status, 5	;RP0=1, select bank1
  3455  0A8D  1683               	bcf	status, 6	;RP1=0, select bank1
  3456  0A8E  1303               		movf	(write_text@text)^080h,w
  3457  0A8F  0833               	movwf	(write_text@c)^080h
  3458  0A90  00B5               movf	(write_text@text+1)^080h,w
  3459  0A91  0834               movwf	(write_text@c+1)^080h
  3460  0A92  00B6               
  3461                           	goto	l2004
  3462  0A93  2AB1               	
  3463                           l141:	
  3464  0A94                     	line	124
  3465                           	
  3466                           l2000:	
  3467  0A94                     ;Display.c: 124:         write_char(*c);
  3468                           	bsf	status, 5	;RP0=1, select bank1
  3469  0A94  1683               	bcf	status, 6	;RP1=0, select bank1
  3470  0A95  1303               	movf	(write_text@c+1)^080h,w
  3471  0A96  0836               	bcf	status, 5	;RP0=0, select bank0
  3472  0A97  1283               	bcf	status, 6	;RP1=0, select bank0
  3473  0A98  1303               	movwf	btemp+1
  3474  0A99  00FF               	bsf	status, 5	;RP0=1, select bank1
  3475  0A9A  1683               	bcf	status, 6	;RP1=0, select bank1
  3476  0A9B  1303               	movf	(write_text@c)^080h,w
  3477  0A9C  0835               	movwf	fsr0
  3478  0A9D  0084               	bcf	status, 5	;RP0=0, select bank0
  3479  0A9E  1283               	bcf	status, 6	;RP1=0, select bank0
  3480  0A9F  1303               	fcall	stringtab
  3481  0AA0  120A  118A  2300  120A  158A  	fcall	_write_char
  3482  0AA5  120A  158A  253F  120A  158A  	line	125
  3483                           	
  3484                           l2002:	
  3485  0AAA                     ;Display.c: 125:     }
  3486                           	movlw	01h
  3487  0AAA  3001               	bsf	status, 5	;RP0=1, select bank1
  3488  0AAB  1683               	bcf	status, 6	;RP1=0, select bank1
  3489  0AAC  1303               	addwf	(write_text@c)^080h,f
  3490  0AAD  07B5               	skipnc
  3491  0AAE  1803               	incf	(write_text@c+1)^080h,f
  3492  0AAF  0AB6               	goto	l2004
  3493  0AB0  2AB1               	
  3494                           l140:	
  3495  0AB1                     	
  3496                           l2004:	
  3497  0AB1                     	movf	(write_text@c+1)^080h,w
  3498  0AB1  0836               	bcf	status, 5	;RP0=0, select bank0
  3499  0AB2  1283               	bcf	status, 6	;RP1=0, select bank0
  3500  0AB3  1303               	movwf	btemp+1
  3501  0AB4  00FF               	bsf	status, 5	;RP0=1, select bank1
  3502  0AB5  1683               	bcf	status, 6	;RP1=0, select bank1
  3503  0AB6  1303               	movf	(write_text@c)^080h,w
  3504  0AB7  0835               	movwf	fsr0
  3505  0AB8  0084               	bcf	status, 5	;RP0=0, select bank0
  3506  0AB9  1283               	bcf	status, 6	;RP1=0, select bank0
  3507  0ABA  1303               	fcall	stringtab
  3508  0ABB  120A  118A  2300  120A  158A  	xorlw	0
  3509  0AC0  3A00               	skipz
  3510  0AC1  1D03               	goto	u1741
  3511  0AC2  2AC4               	goto	u1740
  3512  0AC3  2AC5               u1741:
  3513  0AC4                     	goto	l2000
  3514  0AC4  2A94               u1740:
  3515  0AC5                     	goto	l143
  3516  0AC5  2AC6               	
  3517                           l142:	
  3518  0AC6                     	line	127
  3519                           	
  3520                           l143:	
  3521  0AC6                     	return
  3522  0AC6  0008               	opt stack 0
  3523                           GLOBAL	__end_of_write_text
  3524                           	__end_of_write_text:
  3525  0AC7                     	signat	_write_text,4217
  3526                           	global	_write_char
  3527                           
  3528 ;; *************** function _write_char *****************
  3529 ;; Defined at:
  3530 ;;		line 142 in file "Display.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  c               1    wreg     unsigned char 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  c               1   18[BANK1 ] unsigned char 
  3535 ;;  pos             2   16[BANK1 ] int 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         0       0       0       0       0
  3546 ;;      Locals:         0       0       3       0       0
  3547 ;;      Temps:          0       0       0       0       0
  3548 ;;      Totals:         0       0       3       0       0
  3549 ;;Total ram usage:        3 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:    6
  3552 ;; This function calls:
  3553 ;;		_write_font
  3554 ;; This function is called by:
  3555 ;;		_write_text
  3556 ;;		_write_int
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3560                           	line	142
  3561                           global __ptext6
  3562                           __ptext6:	;psect for function _write_char
  3563  0D3F                     psect	text6
  3564                           	file	"Display.c"
  3565                           	line	142
  3566                           	global	__size_of_write_char
  3567                           	__size_of_write_char	equ	__end_of_write_char-_write_char
  3568  0062                     	
  3569                           _write_char:	
  3570  0D3F                     ;incstack = 0
  3571 ;; hardware stack exceeded
  3572                           	opt	stack 0
  3573                           ; Regs used in _write_char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3574                           ;write_char@c stored from wreg
  3575                           	bsf	status, 5	;RP0=1, select bank1
  3576  0D3F  1683               	bcf	status, 6	;RP1=0, select bank1
  3577  0D40  1303               	movwf	(write_char@c)^080h
  3578  0D41  00B2               	line	147
  3579                           	
  3580                           l1926:	
  3581  0D42                     ;Display.c: 142: void write_char(char c);Display.c: 143: {;Display.c: 144:     int pos;;
                                 Display.c: 147:     if (c >= 48 && c <= 57) {
  3582                           	movlw	low(030h)
  3583  0D42  3030               	subwf	(write_char@c)^080h,w
  3584  0D43  0232               	skipc
  3585  0D44  1C03               	goto	u1551
  3586  0D45  2D47               	goto	u1550
  3587  0D46  2D48               u1551:
  3588  0D47                     	goto	l1934
  3589  0D47  2D5F               u1550:
  3590  0D48                     	
  3591                           l1928:	
  3592  0D48                     	movlw	low(03Ah)
  3593  0D48  303A               	subwf	(write_char@c)^080h,w
  3594  0D49  0232               	skipnc
  3595  0D4A  1803               	goto	u1561
  3596  0D4B  2D4D               	goto	u1560
  3597  0D4C  2D4E               u1561:
  3598  0D4D                     	goto	l1934
  3599  0D4D  2D5F               u1560:
  3600  0D4E                     	line	148
  3601                           	
  3602                           l1930:	
  3603  0D4E                     ;Display.c: 148:         pos = c - 48;
  3604                           	movf	(write_char@c)^080h,w
  3605  0D4E  0832               	addlw	low(-48)
  3606  0D4F  3ED0               	movwf	(write_char@pos)^080h
  3607  0D50  00B0               	movlw	high(-48)
  3608  0D51  30FF               	skipnc
  3609  0D52  1803               	movlw	(high(-48)+1)&0ffh
  3610  0D53  3000               	movwf	((write_char@pos)^080h)+1
  3611  0D54  00B1               	line	149
  3612                           	
  3613                           l1932:	
  3614  0D55                     ;Display.c: 149:         write_font(pos);
  3615                           	movf	(write_char@pos+1)^080h,w
  3616  0D55  0831               	movwf	(write_font@fontPos+1)^080h
  3617  0D56  00A7               	movf	(write_char@pos)^080h,w
  3618  0D57  0830               	movwf	(write_font@fontPos)^080h
  3619  0D58  00A6               	fcall	_write_font
  3620  0D59  120A  158A  24DD  120A  158A  	line	150
  3621                           ;Display.c: 150:     } else if (c >= 65 && c <= 90) {
  3622                           	goto	l156
  3623  0D5E  2DA0               	
  3624                           l150:	
  3625  0D5F                     	
  3626                           l1934:	
  3627  0D5F                     	movlw	low(041h)
  3628  0D5F  3041               	bsf	status, 5	;RP0=1, select bank1
  3629  0D60  1683               	bcf	status, 6	;RP1=0, select bank1
  3630  0D61  1303               	subwf	(write_char@c)^080h,w
  3631  0D62  0232               	skipc
  3632  0D63  1C03               	goto	u1571
  3633  0D64  2D66               	goto	u1570
  3634  0D65  2D67               u1571:
  3635  0D66                     	goto	l1942
  3636  0D66  2D7E               u1570:
  3637  0D67                     	
  3638                           l1936:	
  3639  0D67                     	movlw	low(05Bh)
  3640  0D67  305B               	subwf	(write_char@c)^080h,w
  3641  0D68  0232               	skipnc
  3642  0D69  1803               	goto	u1581
  3643  0D6A  2D6C               	goto	u1580
  3644  0D6B  2D6D               u1581:
  3645  0D6C                     	goto	l1942
  3646  0D6C  2D7E               u1580:
  3647  0D6D                     	line	151
  3648                           	
  3649                           l1938:	
  3650  0D6D                     ;Display.c: 151:         pos = (c - 65) + 10;
  3651                           	movf	(write_char@c)^080h,w
  3652  0D6D  0832               	addlw	low(-55)
  3653  0D6E  3EC9               	movwf	(write_char@pos)^080h
  3654  0D6F  00B0               	movlw	high(-55)
  3655  0D70  30FF               	skipnc
  3656  0D71  1803               	movlw	(high(-55)+1)&0ffh
  3657  0D72  3000               	movwf	((write_char@pos)^080h)+1
  3658  0D73  00B1               	line	152
  3659                           	
  3660                           l1940:	
  3661  0D74                     ;Display.c: 152:         write_font(pos);
  3662                           	movf	(write_char@pos+1)^080h,w
  3663  0D74  0831               	movwf	(write_font@fontPos+1)^080h
  3664  0D75  00A7               	movf	(write_char@pos)^080h,w
  3665  0D76  0830               	movwf	(write_font@fontPos)^080h
  3666  0D77  00A6               	fcall	_write_font
  3667  0D78  120A  158A  24DD  120A  158A  	line	153
  3668                           ;Display.c: 153:     } else if (c >= 97 && c <= 122) {
  3669                           	goto	l156
  3670  0D7D  2DA0               	
  3671                           l152:	
  3672  0D7E                     	
  3673                           l1942:	
  3674  0D7E                     	movlw	low(061h)
  3675  0D7E  3061               	bsf	status, 5	;RP0=1, select bank1
  3676  0D7F  1683               	bcf	status, 6	;RP1=0, select bank1
  3677  0D80  1303               	subwf	(write_char@c)^080h,w
  3678  0D81  0232               	skipc
  3679  0D82  1C03               	goto	u1591
  3680  0D83  2D85               	goto	u1590
  3681  0D84  2D86               u1591:
  3682  0D85                     	goto	l156
  3683  0D85  2DA0               u1590:
  3684  0D86                     	
  3685                           l1944:	
  3686  0D86                     	movlw	low(07Bh)
  3687  0D86  307B               	subwf	(write_char@c)^080h,w
  3688  0D87  0232               	skipnc
  3689  0D88  1803               	goto	u1601
  3690  0D89  2D8B               	goto	u1600
  3691  0D8A  2D8C               u1601:
  3692  0D8B                     	goto	l156
  3693  0D8B  2DA0               u1600:
  3694  0D8C                     	line	154
  3695                           	
  3696                           l1946:	
  3697  0D8C                     ;Display.c: 154:         pos = (c - 97) + 10;
  3698                           	movf	(write_char@c)^080h,w
  3699  0D8C  0832               	addlw	low(-87)
  3700  0D8D  3EA9               	movwf	(write_char@pos)^080h
  3701  0D8E  00B0               	movlw	high(-87)
  3702  0D8F  30FF               	skipnc
  3703  0D90  1803               	movlw	(high(-87)+1)&0ffh
  3704  0D91  3000               	movwf	((write_char@pos)^080h)+1
  3705  0D92  00B1               	line	155
  3706                           	
  3707                           l1948:	
  3708  0D93                     ;Display.c: 155:         write_font(pos);
  3709                           	movf	(write_char@pos+1)^080h,w
  3710  0D93  0831               	movwf	(write_font@fontPos+1)^080h
  3711  0D94  00A7               	movf	(write_char@pos)^080h,w
  3712  0D95  0830               	movwf	(write_font@fontPos)^080h
  3713  0D96  00A6               	fcall	_write_font
  3714  0D97  120A  158A  24DD  120A  158A  	line	156
  3715                           ;Display.c: 156:     } else {
  3716                           	goto	l156
  3717  0D9C  2DA0               	
  3718                           l154:	
  3719  0D9D                     	goto	l156
  3720  0D9D  2DA0               	line	159
  3721                           ;Display.c: 159:     }
  3722                           	
  3723                           l155:	
  3724  0D9E                     	goto	l156
  3725  0D9E  2DA0               	
  3726                           l153:	
  3727  0D9F                     	goto	l156
  3728  0D9F  2DA0               	
  3729                           l151:	
  3730  0DA0                     	line	160
  3731                           	
  3732                           l156:	
  3733  0DA0                     	return
  3734  0DA0  0008               	opt stack 0
  3735                           GLOBAL	__end_of_write_char
  3736                           	__end_of_write_char:
  3737  0DA1                     	signat	_write_char,4217
  3738                           	global	_write_font
  3739                           
  3740 ;; *************** function _write_font *****************
  3741 ;; Defined at:
  3742 ;;		line 162 in file "Display.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  fontPos         2    6[BANK1 ] int 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  x               2   14[BANK1 ] int 
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3756 ;;      Params:         0       0       2       0       0
  3757 ;;      Locals:         0       0       2       0       0
  3758 ;;      Temps:          0       0       6       0       0
  3759 ;;      Totals:         0       0      10       0       0
  3760 ;;Total ram usage:       10 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    5
  3763 ;; This function calls:
  3764 ;;		___wmul
  3765 ;;		_spiWrite
  3766 ;; This function is called by:
  3767 ;;		_write_char
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3771                           	line	162
  3772                           global __ptext7
  3773                           __ptext7:	;psect for function _write_font
  3774  0CDD                     psect	text7
  3775                           	file	"Display.c"
  3776                           	line	162
  3777                           	global	__size_of_write_font
  3778                           	__size_of_write_font	equ	__end_of_write_font-_write_font
  3779  0062                     	
  3780                           _write_font:	
  3781  0CDD                     ;incstack = 0
  3782 ;; hardware stack exceeded
  3783                           	opt	stack 0
  3784                           ; Regs used in _write_font: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3785                           	line	164
  3786                           	
  3787                           l1914:	
  3788  0CDD                     ;Display.c: 162: void write_font(int fontPos);Display.c: 163: {;Display.c: 164:     for(
                                 int x=0; x < 5; x++){
  3789                           	bsf	status, 5	;RP0=1, select bank1
  3790  0CDD  1683               	bcf	status, 6	;RP1=0, select bank1
  3791  0CDE  1303               	clrf	(write_font@x)^080h
  3792  0CDF  01AE               	clrf	(write_font@x+1)^080h
  3793  0CE0  01AF               	
  3794                           l1916:	
  3795  0CE1                     	movf	(write_font@x+1)^080h,w
  3796  0CE1  082F               	xorlw	80h
  3797  0CE2  3A80               	movwf	btemp+1
  3798  0CE3  00FF               	movlw	(0)^80h
  3799  0CE4  3080               	subwf	btemp+1,w
  3800  0CE5  027F               	skipz
  3801  0CE6  1D03               	goto	u1535
  3802  0CE7  2CEA               	movlw	05h
  3803  0CE8  3005               	subwf	(write_font@x)^080h,w
  3804  0CE9  022E               u1535:
  3805  0CEA                     
  3806                           	skipc
  3807  0CEA  1C03               	goto	u1531
  3808  0CEB  2CED               	goto	u1530
  3809  0CEC  2CEE               u1531:
  3810  0CED                     	goto	l1920
  3811  0CED  2CF0               u1530:
  3812  0CEE                     	goto	l161
  3813  0CEE  2D3E               	
  3814                           l1918:	
  3815  0CEF                     	goto	l161
  3816  0CEF  2D3E               	
  3817                           l159:	
  3818  0CF0                     	line	165
  3819                           	
  3820                           l1920:	
  3821  0CF0                     ;Display.c: 165:         spiWrite(font[fontPos][x]);
  3822                           	bsf	status, 5	;RP0=1, select bank1
  3823  0CF0  1683               	bcf	status, 6	;RP1=0, select bank1
  3824  0CF1  1303               	movf	(write_font@x+1)^080h,w
  3825  0CF2  082F               	movwf	(??_write_font+0)^080h+0+1
  3826  0CF3  00A9               	movf	(write_font@x)^080h,w
  3827  0CF4  082E               	movwf	(??_write_font+0)^080h+0
  3828  0CF5  00A8               	clrc
  3829  0CF6  1003               	rlf	(??_write_font+0)^080h+0,f
  3830  0CF7  0DA8               	rlf	(??_write_font+0)^080h+1,f
  3831  0CF8  0DA9               	movf	(write_font@fontPos+1)^080h,w
  3832  0CF9  0827               	movwf	(___wmul@multiplier+1)^080h
  3833  0CFA  00A1               	movf	(write_font@fontPos)^080h,w
  3834  0CFB  0826               	movwf	(___wmul@multiplier)^080h
  3835  0CFC  00A0               	movlw	0Ah
  3836  0CFD  300A               	movwf	(___wmul@multiplicand)^080h
  3837  0CFE  00A2               	movlw	0
  3838  0CFF  3000               	movwf	((___wmul@multiplicand)^080h)+1
  3839  0D00  00A3               	fcall	___wmul
  3840  0D01  120A  158A  2197  120A  158A  	movlw	low(((_font)|8000h))
  3841  0D06  3012               	bsf	status, 5	;RP0=1, select bank1
  3842  0D07  1683               	bcf	status, 6	;RP1=0, select bank1
  3843  0D08  1303               	movwf	(??_write_font+2)^080h+0
  3844  0D09  00AA               	movlw	high(((_font)|8000h))
  3845  0D0A  3083               	movwf	(??_write_font+2)^080h+0+1
  3846  0D0B  00AB               	movf	(0+(?___wmul))^080h,w
  3847  0D0C  0820               	addwf	0+(??_write_font+2)^080h+0,w
  3848  0D0D  072A               	movwf	(??_write_font+4)^080h+0
  3849  0D0E  00AC               	movf	(1+(?___wmul))^080h,w
  3850  0D0F  0821               	skipnc
  3851  0D10  1803               	incf	(1+(?___wmul))^080h,w
  3852  0D11  0A21               	addwf	1+(??_write_font+2)^080h+0,w
  3853  0D12  072B               	movwf	1+(??_write_font+4)^080h+0
  3854  0D13  00AD               	movf	0+(??_write_font+0)^080h+0,w
  3855  0D14  0828               	addwf	0+(??_write_font+4)^080h+0,w
  3856  0D15  072C               	movwf	fsr0
  3857  0D16  0084               	movf	1+(??_write_font+0)^080h+0,w
  3858  0D17  0829               	skipnc
  3859  0D18  1803               	incf	1+(??_write_font+0)^080h+0,w
  3860  0D19  0A29               	addwf	1+(??_write_font+4)^080h+0,w
  3861  0D1A  072D               	bcf	status, 5	;RP0=0, select bank0
  3862  0D1B  1283               	bcf	status, 6	;RP1=0, select bank0
  3863  0D1C  1303               	movwf	btemp+1
  3864  0D1D  00FF               	fcall	stringtab
  3865  0D1E  120A  118A  2300  120A  158A  	fcall	_spiWrite
  3866  0D23  120A  118A  22ED  120A  158A  	line	166
  3867                           	
  3868                           l1922:	
  3869  0D28                     ;Display.c: 166:     }
  3870                           	movlw	01h
  3871  0D28  3001               	bsf	status, 5	;RP0=1, select bank1
  3872  0D29  1683               	bcf	status, 6	;RP1=0, select bank1
  3873  0D2A  1303               	addwf	(write_font@x)^080h,f
  3874  0D2B  07AE               	skipnc
  3875  0D2C  1803               	incf	(write_font@x+1)^080h,f
  3876  0D2D  0AAF               	movlw	0
  3877  0D2E  3000               	addwf	(write_font@x+1)^080h,f
  3878  0D2F  07AF               	
  3879                           l1924:	
  3880  0D30                     	movf	(write_font@x+1)^080h,w
  3881  0D30  082F               	xorlw	80h
  3882  0D31  3A80               	movwf	btemp+1
  3883  0D32  00FF               	movlw	(0)^80h
  3884  0D33  3080               	subwf	btemp+1,w
  3885  0D34  027F               	skipz
  3886  0D35  1D03               	goto	u1545
  3887  0D36  2D39               	movlw	05h
  3888  0D37  3005               	subwf	(write_font@x)^080h,w
  3889  0D38  022E               u1545:
  3890  0D39                     
  3891                           	skipc
  3892  0D39  1C03               	goto	u1541
  3893  0D3A  2D3C               	goto	u1540
  3894  0D3B  2D3D               u1541:
  3895  0D3C                     	goto	l1920
  3896  0D3C  2CF0               u1540:
  3897  0D3D                     	goto	l161
  3898  0D3D  2D3E               	
  3899                           l160:	
  3900  0D3E                     	line	167
  3901                           	
  3902                           l161:	
  3903  0D3E                     	return
  3904  0D3E  0008               	opt stack 0
  3905                           GLOBAL	__end_of_write_font
  3906                           	__end_of_write_font:
  3907  0D3F                     	signat	_write_font,4217
  3908                           	global	___wmul
  3909                           
  3910 ;; *************** function ___wmul *****************
  3911 ;; Defined at:
  3912 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  multiplier      2    0[BANK1 ] unsigned int 
  3915 ;;  multiplicand    2    2[BANK1 ] unsigned int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  product         2    4[BANK1 ] unsigned int 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  2    0[BANK1 ] unsigned int 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       0       4       0       0
  3928 ;;      Locals:         0       0       2       0       0
  3929 ;;      Temps:          0       0       0       0       0
  3930 ;;      Totals:         0       0       6       0       0
  3931 ;;Total ram usage:        6 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    4
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_write_font
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3941                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3942                           	line	15
  3943                           global __ptext8
  3944                           __ptext8:	;psect for function ___wmul
  3945  0997                     psect	text8
  3946                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  3947                           	line	15
  3948                           	global	__size_of___wmul
  3949                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  3950  002A                     	
  3951                           ___wmul:	
  3952  0997                     ;incstack = 0
  3953 ;; hardware stack exceeded
  3954                           	opt	stack 0
  3955                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3956                           	line	43
  3957                           	
  3958                           l1900:	
  3959  0997                     	bsf	status, 5	;RP0=1, select bank1
  3960  0997  1683               	bcf	status, 6	;RP1=0, select bank1
  3961  0998  1303               	clrf	(___wmul@product)^080h
  3962  0999  01A4               	clrf	(___wmul@product+1)^080h
  3963  099A  01A5               	goto	l1902
  3964  099B  299C               	line	44
  3965                           	
  3966                           l456:	
  3967  099C                     	line	45
  3968                           	
  3969                           l1902:	
  3970  099C                     	btfss	(___wmul@multiplier)^080h,(0)&7
  3971  099C  1C20               	goto	u1491
  3972  099D  299F               	goto	u1490
  3973  099E  29A0               u1491:
  3974  099F                     	goto	l457
  3975  099F  29A6               u1490:
  3976  09A0                     	line	46
  3977                           	
  3978                           l1904:	
  3979  09A0                     	movf	(___wmul@multiplicand)^080h,w
  3980  09A0  0822               	addwf	(___wmul@product)^080h,f
  3981  09A1  07A4               	skipnc
  3982  09A2  1803               	incf	(___wmul@product+1)^080h,f
  3983  09A3  0AA5               	movf	(___wmul@multiplicand+1)^080h,w
  3984  09A4  0823               	addwf	(___wmul@product+1)^080h,f
  3985  09A5  07A5               	
  3986                           l457:	
  3987  09A6                     	line	47
  3988                           	movlw	01h
  3989  09A6  3001               	
  3990                           u1505:
  3991  09A7                     	clrc
  3992  09A7  1003               	rlf	(___wmul@multiplicand)^080h,f
  3993  09A8  0DA2               	rlf	(___wmul@multiplicand+1)^080h,f
  3994  09A9  0DA3               	addlw	-1
  3995  09AA  3EFF               	skipz
  3996  09AB  1D03               	goto	u1505
  3997  09AC  29A7               	line	48
  3998                           	
  3999                           l1906:	
  4000  09AD                     	movlw	01h
  4001  09AD  3001               	
  4002                           u1515:
  4003  09AE                     	clrc
  4004  09AE  1003               	rrf	(___wmul@multiplier+1)^080h,f
  4005  09AF  0CA1               	rrf	(___wmul@multiplier)^080h,f
  4006  09B0  0CA0               	addlw	-1
  4007  09B1  3EFF               	skipz
  4008  09B2  1D03               	goto	u1515
  4009  09B3  29AE               	line	49
  4010                           	
  4011                           l1908:	
  4012  09B4                     	movf	((___wmul@multiplier)^080h),w
  4013  09B4  0820               iorwf	((___wmul@multiplier+1)^080h),w
  4014  09B5  0421               	btfss	status,2
  4015  09B6  1D03               	goto	u1521
  4016  09B7  29B9               	goto	u1520
  4017  09B8  29BA               u1521:
  4018  09B9                     	goto	l1902
  4019  09B9  299C               u1520:
  4020  09BA                     	goto	l1910
  4021  09BA  29BB               	
  4022                           l458:	
  4023  09BB                     	line	52
  4024                           	
  4025                           l1910:	
  4026  09BB                     	movf	(___wmul@product+1)^080h,w
  4027  09BB  0825               	movwf	(?___wmul+1)^080h
  4028  09BC  00A1               	movf	(___wmul@product)^080h,w
  4029  09BD  0824               	movwf	(?___wmul)^080h
  4030  09BE  00A0               	goto	l459
  4031  09BF  29C0               	
  4032                           l1912:	
  4033  09C0                     	line	53
  4034                           	
  4035                           l459:	
  4036  09C0                     	return
  4037  09C0  0008               	opt stack 0
  4038                           GLOBAL	__end_of___wmul
  4039                           	__end_of___wmul:
  4040  09C1                     	signat	___wmul,8314
  4041                           	global	_sprintf
  4042                           
  4043 ;; *************** function _sprintf *****************
  4044 ;; Defined at:
  4045 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  sp              1    wreg     PTR unsigned char 
  4048 ;;		 -> write_int@num(2), 
  4049 ;;  f               2   14[BANK1 ] PTR const unsigned char 
  4050 ;;		 -> STR_3(3), 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  4053 ;;		 -> write_int@num(2), 
  4054 ;;  tmpval          4    0        struct .
  4055 ;;  val             2   25[BANK1 ] unsigned int 
  4056 ;;  cp              2    0        PTR const unsigned char 
  4057 ;;  len             2    0        unsigned int 
  4058 ;;  c               1   28[BANK1 ] unsigned char 
  4059 ;;  prec            1   24[BANK1 ] char 
  4060 ;;  flag            1   23[BANK1 ] unsigned char 
  4061 ;;  ap              1   22[BANK1 ] PTR void [1]
  4062 ;;		 -> ?_sprintf(2), 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  2   14[BANK1 ] int 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4072 ;;      Params:         0       0       4       0       0
  4073 ;;      Locals:         0       0       7       0       0
  4074 ;;      Temps:          0       0       4       0       0
  4075 ;;      Totals:         0       0      15       0       0
  4076 ;;Total ram usage:       15 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    5
  4079 ;; This function calls:
  4080 ;;		___lwdiv
  4081 ;;		___lwmod
  4082 ;; This function is called by:
  4083 ;;		_write_int
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4087                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4088                           	line	500
  4089                           global __ptext9
  4090                           __ptext9:	;psect for function _sprintf
  4091  049D                     psect	text9
  4092                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4093                           	line	500
  4094                           	global	__size_of_sprintf
  4095                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4096  0136                     	
  4097                           _sprintf:	
  4098  049D                     ;incstack = 0
  4099 ;; using string table level
  4100                           	opt	stack 1
  4101                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4102                           ;sprintf@sp stored from wreg
  4103                           	bsf	status, 5	;RP0=1, select bank1
  4104  049D  1683               	bcf	status, 6	;RP1=0, select bank1
  4105  049E  1303               	movwf	(sprintf@sp)^080h
  4106  049F  00BB               	line	545
  4107                           	
  4108                           l2006:	
  4109  04A0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  4110                           	movlw	(low(?_sprintf|((0x0)<<8)+02h))&0ffh
  4111  04A0  30B0               	movwf	(??_sprintf+0)^080h+0
  4112  04A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4113  04A2  0832               	movwf	(sprintf@ap)^080h
  4114  04A3  00B6               	line	548
  4115                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4116                           	goto	l2058
  4117  04A4  2DAB               	
  4118                           l435:	
  4119  04A5                     	line	550
  4120                           	
  4121                           l2008:	
  4122  04A5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  4123                           		movlw	37
  4124  04A5  3025               	xorwf	((sprintf@c)^080h),w
  4125  04A6  063C               	btfsc	status,2
  4126  04A7  1903               	goto	u1751
  4127  04A8  2CAA               	goto	u1750
  4128  04A9  2CAB               u1751:
  4129  04AA                     	goto	l2014
  4130  04AA  2CB7               u1750:
  4131  04AB                     	line	553
  4132                           	
  4133                           l2010:	
  4134  04AB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  4135                           	movf	(sprintf@c)^080h,w
  4136  04AB  083C               	movwf	(??_sprintf+0)^080h+0
  4137  04AC  00B2               	movf	(sprintf@sp)^080h,w
  4138  04AD  083B               	movwf	fsr0
  4139  04AE  0084               	movf	(??_sprintf+0)^080h+0,w
  4140  04AF  0832               	bcf	status, 7	;select IRP bank0
  4141  04B0  1383               	movwf	indf
  4142  04B1  0080               	
  4143                           l2012:	
  4144  04B2                     	movlw	low(01h)
  4145  04B2  3001               	movwf	(??_sprintf+0)^080h+0
  4146  04B3  00B2               	movf	(??_sprintf+0)^080h+0,w
  4147  04B4  0832               	addwf	(sprintf@sp)^080h,f
  4148  04B5  07BB               	line	554
  4149                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  4150                           	goto	l2058
  4151  04B6  2DAB               	line	555
  4152                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  4153                           	
  4154                           l436:	
  4155  04B7                     	line	560
  4156                           	
  4157                           l2014:	
  4158  04B7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  4159                           	clrf	(sprintf@flag)^080h
  4160  04B7  01B7               	line	654
  4161                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  4162                           	goto	l2018
  4163  04B8  2CBE               	line	656
  4164                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  4165                           	
  4166                           l438:	
  4167  04B9                     	line	657
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  4169                           	goto	l2060
  4170  04B9  2DCD               	line	716
  4171                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  4172                           	
  4173                           l440:	
  4174  04BA                     	goto	l2020
  4175  04BA  2CE9               	line	717
  4176                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  4177                           	
  4178                           l441:	
  4179  04BB                     	line	718
  4180                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  4181                           	goto	l2020
  4182  04BB  2CE9               	line	821
  4183                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  4184                           	
  4185                           l443:	
  4186  04BC                     	line	832
  4187                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  4188                           	goto	l2058
  4189  04BC  2DAB               	line	841
  4190                           	
  4191                           l2016:	
  4192  04BD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  4193                           	goto	l2020
  4194  04BD  2CE9               	
  4195                           l437:	
  4196  04BE                     	
  4197                           l2018:	
  4198  04BE                     	movf	(sprintf@f+1)^080h,w
  4199  04BE  082F               	movwf	(??_sprintf+0)^080h+0+1
  4200  04BF  00B3               	movf	(sprintf@f)^080h,w
  4201  04C0  082E               	movwf	(??_sprintf+0)^080h+0
  4202  04C1  00B2               	incf	(sprintf@f)^080h,f
  4203  04C2  0AAE               	skipnz
  4204  04C3  1903               	incf	(sprintf@f+1)^080h,f
  4205  04C4  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4206  04C5  0833               	bcf	status, 5	;RP0=0, select bank0
  4207  04C6  1283               	bcf	status, 6	;RP1=0, select bank0
  4208  04C7  1303               	movwf	btemp+1
  4209  04C8  00FF               	bsf	status, 5	;RP0=1, select bank1
  4210  04C9  1683               	bcf	status, 6	;RP1=0, select bank1
  4211  04CA  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4212  04CB  0832               	movwf	fsr0
  4213  04CC  0084               	bcf	status, 5	;RP0=0, select bank0
  4214  04CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4215  04CE  1303               	fcall	stringtab
  4216  04CF  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4217  04D4  1683               	bcf	status, 6	;RP1=0, select bank1
  4218  04D5  1303               	movwf	(sprintf@c)^080h
  4219  04D6  00BC               	movwf	(??_sprintf+2)^080h+0
  4220  04D7  00B4               	clrf	(??_sprintf+2)^080h+0+1
  4221  04D8  01B5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4222                           ; Switch size 1, requested type "space"
  4223                           ; Number of cases is 1, Range of values is 0 to 0
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte            4     3 (average)
  4227                           ; direct_byte           11     8 (fixed)
  4228                           ; jumptable            260     6 (fixed)
  4229                           ;	Chosen strategy is simple_byte
  4230                           
  4231                           	movf 1+(??_sprintf+2)^080h+0,w
  4232  04D9  0835               	opt asmopt_push
  4233                           	opt asmopt_off
  4234                           	xorlw	0^0	; case 0
  4235  04DA  3A00               	skipnz
  4236  04DB  1903               	goto	l2852
  4237  04DC  2CDE               	goto	l2058
  4238  04DD  2DAB               	opt asmopt_pop
  4239                           	
  4240                           l2852:	
  4241  04DE                     ; Switch size 1, requested type "space"
  4242                           ; Number of cases is 3, Range of values is 0 to 105
  4243                           ; switch strategies available:
  4244                           ; Name         Instructions Cycles
  4245                           ; simple_byte           10     6 (average)
  4246                           ; jumptable            260     6 (fixed)
  4247                           ;	Chosen strategy is simple_byte
  4248                           
  4249                           	movf 0+(??_sprintf+2)^080h+0,w
  4250  04DE  0834               	opt asmopt_push
  4251                           	opt asmopt_off
  4252                           	xorlw	0^0	; case 0
  4253  04DF  3A00               	skipnz
  4254  04E0  1903               	goto	l2060
  4255  04E1  2DCD               	xorlw	100^0	; case 100
  4256  04E2  3A64               	skipnz
  4257  04E3  1903               	goto	l2020
  4258  04E4  2CE9               	xorlw	105^100	; case 105
  4259  04E5  3A0D               	skipnz
  4260  04E6  1903               	goto	l2020
  4261  04E7  2CE9               	goto	l2058
  4262  04E8  2DAB               	opt asmopt_pop
  4263                           
  4264                           	
  4265                           l442:	
  4266  04E9                     	line	1278
  4267                           	
  4268                           l2020:	
  4269  04E9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4270                           	movf	(sprintf@ap)^080h,w
  4271  04E9  0836               	movwf	fsr0
  4272  04EA  0084               	bcf	status, 7	;select IRP bank0
  4273  04EB  1383               	movf	indf,w
  4274  04EC  0800               	movwf	(sprintf@val)^080h
  4275  04ED  00B9               	incf	fsr0,f
  4276  04EE  0A84               	movf	indf,w
  4277  04EF  0800               	movwf	(sprintf@val+1)^080h
  4278  04F0  00BA               	
  4279                           l2022:	
  4280  04F1                     	movlw	low(02h)
  4281  04F1  3002               	movwf	(??_sprintf+0)^080h+0
  4282  04F2  00B2               	movf	(??_sprintf+0)^080h+0,w
  4283  04F3  0832               	addwf	(sprintf@ap)^080h,f
  4284  04F4  07B6               	line	1280
  4285                           	
  4286                           l2024:	
  4287  04F5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  4288                           	btfss	(sprintf@val+1)^080h,7
  4289  04F5  1FBA               	goto	u1761
  4290  04F6  2CF8               	goto	u1760
  4291  04F7  2CF9               u1761:
  4292  04F8                     	goto	l2030
  4293  04F8  2D03               u1760:
  4294  04F9                     	line	1281
  4295                           	
  4296                           l2026:	
  4297  04F9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  4298                           	movlw	low(03h)
  4299  04F9  3003               	movwf	(??_sprintf+0)^080h+0
  4300  04FA  00B2               	movf	(??_sprintf+0)^080h+0,w
  4301  04FB  0832               	iorwf	(sprintf@flag)^080h,f
  4302  04FC  04B7               	line	1282
  4303                           	
  4304                           l2028:	
  4305  04FD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  4306                           	comf	(sprintf@val)^080h,f
  4307  04FD  09B9               	comf	(sprintf@val+1)^080h,f
  4308  04FE  09BA               	incf	(sprintf@val)^080h,f
  4309  04FF  0AB9               	skipnz
  4310  0500  1903               	incf	(sprintf@val+1)^080h,f
  4311  0501  0ABA               	goto	l2030
  4312  0502  2D03               	line	1283
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  4314                           	
  4315                           l444:	
  4316  0503                     	line	1324
  4317                           	
  4318                           l2030:	
  4319  0503                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4320                           	clrf	(sprintf@c)^080h
  4321  0503  01BC               	incf	(sprintf@c)^080h,f
  4322  0504  0ABC               	
  4323                           l2032:	
  4324  0505                     		movlw	5
  4325  0505  3005               	xorwf	((sprintf@c)^080h),w
  4326  0506  063C               	btfss	status,2
  4327  0507  1D03               	goto	u1771
  4328  0508  2D0A               	goto	u1770
  4329  0509  2D0B               u1771:
  4330  050A                     	goto	l2036
  4331  050A  2D0D               u1770:
  4332  050B                     	goto	l2042
  4333  050B  2D41               	
  4334                           l2034:	
  4335  050C                     	goto	l2042
  4336  050C  2D41               	
  4337                           l445:	
  4338  050D                     	line	1325
  4339                           	
  4340                           l2036:	
  4341  050D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  4342                           	movf	(sprintf@c)^080h,w
  4343  050D  083C               	movwf	(??_sprintf+0)^080h+0
  4344  050E  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4345  050F  0732               	addlw	low(((_dpowers)|8000h))
  4346  0510  3E84               	movwf	fsr0
  4347  0511  0084               	movlw	high(((_dpowers)|8000h))
  4348  0512  3084               	skipnc
  4349  0513  1803               	addlw	1
  4350  0514  3E01               	bcf	status, 5	;RP0=0, select bank0
  4351  0515  1283               	bcf	status, 6	;RP1=0, select bank0
  4352  0516  1303               	movwf	btemp+1
  4353  0517  00FF               	fcall	stringtab
  4354  0518  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4355  051D  1683               	bcf	status, 6	;RP1=0, select bank1
  4356  051E  1303               	movwf	(??_sprintf+1)^080h+0
  4357  051F  00B3               	bcf	status, 5	;RP0=0, select bank0
  4358  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  4359  0521  1303               	fcall	stringtab
  4360  0522  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4361  0527  1683               	bcf	status, 6	;RP1=0, select bank1
  4362  0528  1303               	movwf	(??_sprintf+1)^080h+0+1
  4363  0529  00B4               	movf	1+(??_sprintf+1)^080h+0,w
  4364  052A  0834               	subwf	(sprintf@val+1)^080h,w
  4365  052B  023A               	skipz
  4366  052C  1D03               	goto	u1785
  4367  052D  2D30               	movf	0+(??_sprintf+1)^080h+0,w
  4368  052E  0833               	subwf	(sprintf@val)^080h,w
  4369  052F  0239               u1785:
  4370  0530                     	skipnc
  4371  0530  1803               	goto	u1781
  4372  0531  2D33               	goto	u1780
  4373  0532  2D34               u1781:
  4374  0533                     	goto	l2040
  4375  0533  2D36               u1780:
  4376  0534                     	goto	l2042
  4377  0534  2D41               	line	1326
  4378                           	
  4379                           l2038:	
  4380  0535                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  4381                           	goto	l2042
  4382  0535  2D41               	
  4383                           l447:	
  4384  0536                     	
  4385                           l2040:	
  4386  0536                     	movlw	low(01h)
  4387  0536  3001               	movwf	(??_sprintf+0)^080h+0
  4388  0537  00B2               	movf	(??_sprintf+0)^080h+0,w
  4389  0538  0832               	addwf	(sprintf@c)^080h,f
  4390  0539  07BC               		movlw	5
  4391  053A  3005               	xorwf	((sprintf@c)^080h),w
  4392  053B  063C               	btfss	status,2
  4393  053C  1D03               	goto	u1791
  4394  053D  2D3F               	goto	u1790
  4395  053E  2D40               u1791:
  4396  053F                     	goto	l2036
  4397  053F  2D0D               u1790:
  4398  0540                     	goto	l2042
  4399  0540  2D41               	
  4400                           l446:	
  4401  0541                     	line	1457
  4402                           	
  4403                           l2042:	
  4404  0541                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  4405                           	movf	(sprintf@flag)^080h,w
  4406  0541  0837               	andlw	03h
  4407  0542  3903               	btfsc	status,2
  4408  0543  1903               	goto	u1801
  4409  0544  2D46               	goto	u1800
  4410  0545  2D47               u1801:
  4411  0546                     	goto	l2048
  4412  0546  2D53               u1800:
  4413  0547                     	line	1458
  4414                           	
  4415                           l2044:	
  4416  0547                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  4417                           	movlw	low(02Dh)
  4418  0547  302D               	movwf	(??_sprintf+0)^080h+0
  4419  0548  00B2               	movf	(sprintf@sp)^080h,w
  4420  0549  083B               	movwf	fsr0
  4421  054A  0084               	movf	(??_sprintf+0)^080h+0,w
  4422  054B  0832               	bcf	status, 7	;select IRP bank0
  4423  054C  1383               	movwf	indf
  4424  054D  0080               	
  4425                           l2046:	
  4426  054E                     	movlw	low(01h)
  4427  054E  3001               	movwf	(??_sprintf+0)^080h+0
  4428  054F  00B2               	movf	(??_sprintf+0)^080h+0,w
  4429  0550  0832               	addwf	(sprintf@sp)^080h,f
  4430  0551  07BB               	goto	l2048
  4431  0552  2D53               	
  4432                           l448:	
  4433  0553                     	line	1491
  4434                           	
  4435                           l2048:	
  4436  0553                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  4437                           	movf	(sprintf@c)^080h,w
  4438  0553  083C               	movwf	(??_sprintf+0)^080h+0
  4439  0554  00B2               	movf	(??_sprintf+0)^080h+0,w
  4440  0555  0832               	movwf	(sprintf@prec)^080h
  4441  0556  00B8               	line	1493
  4442                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4443                           	goto	l2056
  4444  0557  2DA0               	
  4445                           l450:	
  4446  0558                     	line	1508
  4447                           	
  4448                           l2050:	
  4449  0558                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  4450                           	movlw	0Ah
  4451  0558  300A               	movwf	(___lwmod@divisor)^080h
  4452  0559  00A8               	movlw	0
  4453  055A  3000               	movwf	((___lwmod@divisor)^080h)+1
  4454  055B  00A9               	movf	(sprintf@prec)^080h,w
  4455  055C  0838               	movwf	(??_sprintf+0)^080h+0
  4456  055D  00B2               	addwf	(??_sprintf+0)^080h+0,w
  4457  055E  0732               	addlw	low(((_dpowers)|8000h))
  4458  055F  3E84               	movwf	fsr0
  4459  0560  0084               	movlw	high(((_dpowers)|8000h))
  4460  0561  3084               	skipnc
  4461  0562  1803               	addlw	1
  4462  0563  3E01               	bcf	status, 5	;RP0=0, select bank0
  4463  0564  1283               	bcf	status, 6	;RP1=0, select bank0
  4464  0565  1303               	movwf	btemp+1
  4465  0566  00FF               	fcall	stringtab
  4466  0567  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4467  056C  1683               	bcf	status, 6	;RP1=0, select bank1
  4468  056D  1303               	movwf	(___lwdiv@divisor)^080h
  4469  056E  00A0               	bcf	status, 5	;RP0=0, select bank0
  4470  056F  1283               	bcf	status, 6	;RP1=0, select bank0
  4471  0570  1303               	fcall	stringtab
  4472  0571  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4473  0576  1683               	bcf	status, 6	;RP1=0, select bank1
  4474  0577  1303               	movwf	(___lwdiv@divisor+1)^080h
  4475  0578  00A1               	movf	(sprintf@val+1)^080h,w
  4476  0579  083A               	movwf	(___lwdiv@dividend+1)^080h
  4477  057A  00A3               	movf	(sprintf@val)^080h,w
  4478  057B  0839               	movwf	(___lwdiv@dividend)^080h
  4479  057C  00A2               	fcall	___lwdiv
  4480  057D  120A  158A  23E7  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4481  0582  1683               	bcf	status, 6	;RP1=0, select bank1
  4482  0583  1303               	movf	(1+(?___lwdiv))^080h,w
  4483  0584  0821               	movwf	(___lwmod@dividend+1)^080h
  4484  0585  00AB               	movf	(0+(?___lwdiv))^080h,w
  4485  0586  0820               	movwf	(___lwmod@dividend)^080h
  4486  0587  00AA               	fcall	___lwmod
  4487  0588  120A  158A  22C7  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4488  058D  1683               	bcf	status, 6	;RP1=0, select bank1
  4489  058E  1303               	movf	(0+(?___lwmod))^080h,w
  4490  058F  0828               	addlw	030h
  4491  0590  3E30               	movwf	(??_sprintf+1)^080h+0
  4492  0591  00B3               	movf	(??_sprintf+1)^080h+0,w
  4493  0592  0833               	movwf	(sprintf@c)^080h
  4494  0593  00BC               	line	1543
  4495                           	
  4496                           l2052:	
  4497  0594                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  4498                           	movf	(sprintf@c)^080h,w
  4499  0594  083C               	movwf	(??_sprintf+0)^080h+0
  4500  0595  00B2               	movf	(sprintf@sp)^080h,w
  4501  0596  083B               	movwf	fsr0
  4502  0597  0084               	movf	(??_sprintf+0)^080h+0,w
  4503  0598  0832               	bcf	status, 7	;select IRP bank0
  4504  0599  1383               	movwf	indf
  4505  059A  0080               	
  4506                           l2054:	
  4507  059B                     	movlw	low(01h)
  4508  059B  3001               	movwf	(??_sprintf+0)^080h+0
  4509  059C  00B2               	movf	(??_sprintf+0)^080h+0,w
  4510  059D  0832               	addwf	(sprintf@sp)^080h,f
  4511  059E  07BB               	goto	l2056
  4512  059F  2DA0               	line	1544
  4513                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  4514                           	
  4515                           l449:	
  4516  05A0                     	line	1493
  4517                           	
  4518                           l2056:	
  4519  05A0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4520                           	movlw	low(-1)
  4521  05A0  30FF               	movwf	(??_sprintf+0)^080h+0
  4522  05A1  00B2               	movf	(??_sprintf+0)^080h+0,w
  4523  05A2  0832               	addwf	(sprintf@prec)^080h,f
  4524  05A3  07B8               		incf	(((sprintf@prec)^080h)),w
  4525  05A4  0A38               	btfss	status,2
  4526  05A5  1D03               	goto	u1811
  4527  05A6  2DA8               	goto	u1810
  4528  05A7  2DA9               u1811:
  4529  05A8                     	goto	l2050
  4530  05A8  2D58               u1810:
  4531  05A9                     	goto	l2058
  4532  05A9  2DAB               	
  4533                           l451:	
  4534  05AA                     	goto	l2058
  4535  05AA  2DAB               	line	1552
  4536                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  4537                           	
  4538                           l434:	
  4539  05AB                     	line	548
  4540                           	
  4541                           l2058:	
  4542  05AB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4543                           	movf	(sprintf@f+1)^080h,w
  4544  05AB  082F               	movwf	(??_sprintf+0)^080h+0+1
  4545  05AC  00B3               	movf	(sprintf@f)^080h,w
  4546  05AD  082E               	movwf	(??_sprintf+0)^080h+0
  4547  05AE  00B2               	incf	(sprintf@f)^080h,f
  4548  05AF  0AAE               	skipnz
  4549  05B0  1903               	incf	(sprintf@f+1)^080h,f
  4550  05B1  0AAF               	movf	1+(??_sprintf+0)^080h+0,w
  4551  05B2  0833               	bcf	status, 5	;RP0=0, select bank0
  4552  05B3  1283               	bcf	status, 6	;RP1=0, select bank0
  4553  05B4  1303               	movwf	btemp+1
  4554  05B5  00FF               	bsf	status, 5	;RP0=1, select bank1
  4555  05B6  1683               	bcf	status, 6	;RP1=0, select bank1
  4556  05B7  1303               	movf	0+(??_sprintf+0)^080h+0,w
  4557  05B8  0832               	movwf	fsr0
  4558  05B9  0084               	bcf	status, 5	;RP0=0, select bank0
  4559  05BA  1283               	bcf	status, 6	;RP1=0, select bank0
  4560  05BB  1303               	fcall	stringtab
  4561  05BC  120A  118A  2300  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  4562  05C1  1683               	bcf	status, 6	;RP1=0, select bank1
  4563  05C2  1303               	movwf	(??_sprintf+2)^080h+0
  4564  05C3  00B4               	movf	(??_sprintf+2)^080h+0,w
  4565  05C4  0834               	movwf	(sprintf@c)^080h
  4566  05C5  00BC               	movf	(((sprintf@c)^080h)),w
  4567  05C6  083C               	btfss	status,2
  4568  05C7  1D03               	goto	u1821
  4569  05C8  2DCA               	goto	u1820
  4570  05C9  2DCB               u1821:
  4571  05CA                     	goto	l2008
  4572  05CA  2CA5               u1820:
  4573  05CB                     	goto	l2060
  4574  05CB  2DCD               	
  4575                           l452:	
  4576  05CC                     	goto	l2060
  4577  05CC  2DCD               	line	1554
  4578                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  4579                           	
  4580                           l439:	
  4581  05CD                     	line	1557
  4582                           	
  4583                           l2060:	
  4584  05CD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  4585                           	movf	(sprintf@sp)^080h,w
  4586  05CD  083B               	movwf	fsr0
  4587  05CE  0084               	bcf	status, 7	;select IRP bank0
  4588  05CF  1383               	clrf	indf
  4589  05D0  0180               	goto	l453
  4590  05D1  2DD2               	line	1559
  4591                           	
  4592                           l2062:	
  4593  05D2                     	line	1560
  4594                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  4595                           	
  4596                           l453:	
  4597  05D2                     	return
  4598  05D2  0008               	opt stack 0
  4599                           GLOBAL	__end_of_sprintf
  4600                           	__end_of_sprintf:
  4601  05D3                     	signat	_sprintf,4698
  4602                           	global	___lwmod
  4603                           
  4604 ;; *************** function ___lwmod *****************
  4605 ;; Defined at:
  4606 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  divisor         2    8[BANK1 ] unsigned int 
  4609 ;;  dividend        2   10[BANK1 ] unsigned int 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  counter         1   13[BANK1 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  2    8[BANK1 ] unsigned int 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4621 ;;      Params:         0       0       4       0       0
  4622 ;;      Locals:         0       0       1       0       0
  4623 ;;      Temps:          0       0       1       0       0
  4624 ;;      Totals:         0       0       6       0       0
  4625 ;;Total ram usage:        6 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    4
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_sprintf
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  4635                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4636                           	line	5
  4637                           global __ptext10
  4638                           __ptext10:	;psect for function ___lwmod
  4639  0AC7                     psect	text10
  4640                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4641                           	line	5
  4642                           	global	__size_of___lwmod
  4643                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4644  0043                     	
  4645                           ___lwmod:	
  4646  0AC7                     ;incstack = 0
  4647                           	opt	stack 0
  4648                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4649                           	line	12
  4650                           	
  4651                           l1976:	
  4652  0AC7                     	bsf	status, 5	;RP0=1, select bank1
  4653  0AC7  1683               	bcf	status, 6	;RP1=0, select bank1
  4654  0AC8  1303               	movf	((___lwmod@divisor)^080h),w
  4655  0AC9  0828               iorwf	((___lwmod@divisor+1)^080h),w
  4656  0ACA  0429               	btfsc	status,2
  4657  0ACB  1903               	goto	u1681
  4658  0ACC  2ACE               	goto	u1680
  4659  0ACD  2ACF               u1681:
  4660  0ACE                     	goto	l1994
  4661  0ACE  2B04               u1680:
  4662  0ACF                     	line	13
  4663                           	
  4664                           l1978:	
  4665  0ACF                     	clrf	(___lwmod@counter)^080h
  4666  0ACF  01AD               	incf	(___lwmod@counter)^080h,f
  4667  0AD0  0AAD               	line	14
  4668                           	goto	l1984
  4669  0AD1  2ADE               	
  4670                           l734:	
  4671  0AD2                     	line	15
  4672                           	
  4673                           l1980:	
  4674  0AD2                     	movlw	01h
  4675  0AD2  3001               	
  4676                           u1695:
  4677  0AD3                     	clrc
  4678  0AD3  1003               	rlf	(___lwmod@divisor)^080h,f
  4679  0AD4  0DA8               	rlf	(___lwmod@divisor+1)^080h,f
  4680  0AD5  0DA9               	addlw	-1
  4681  0AD6  3EFF               	skipz
  4682  0AD7  1D03               	goto	u1695
  4683  0AD8  2AD3               	line	16
  4684                           	
  4685                           l1982:	
  4686  0AD9                     	movlw	low(01h)
  4687  0AD9  3001               	movwf	(??___lwmod+0)^080h+0
  4688  0ADA  00AC               	movf	(??___lwmod+0)^080h+0,w
  4689  0ADB  082C               	addwf	(___lwmod@counter)^080h,f
  4690  0ADC  07AD               	goto	l1984
  4691  0ADD  2ADE               	line	17
  4692                           	
  4693                           l733:	
  4694  0ADE                     	line	14
  4695                           	
  4696                           l1984:	
  4697  0ADE                     	btfss	(___lwmod@divisor+1)^080h,(15)&7
  4698  0ADE  1FA9               	goto	u1701
  4699  0ADF  2AE1               	goto	u1700
  4700  0AE0  2AE2               u1701:
  4701  0AE1                     	goto	l1980
  4702  0AE1  2AD2               u1700:
  4703  0AE2                     	goto	l1986
  4704  0AE2  2AE4               	
  4705                           l735:	
  4706  0AE3                     	goto	l1986
  4707  0AE3  2AE4               	line	18
  4708                           	
  4709                           l736:	
  4710  0AE4                     	line	19
  4711                           	
  4712                           l1986:	
  4713  0AE4                     	movf	(___lwmod@divisor+1)^080h,w
  4714  0AE4  0829               	subwf	(___lwmod@dividend+1)^080h,w
  4715  0AE5  022B               	skipz
  4716  0AE6  1D03               	goto	u1715
  4717  0AE7  2AEA               	movf	(___lwmod@divisor)^080h,w
  4718  0AE8  0828               	subwf	(___lwmod@dividend)^080h,w
  4719  0AE9  022A               u1715:
  4720  0AEA                     	skipc
  4721  0AEA  1C03               	goto	u1711
  4722  0AEB  2AED               	goto	u1710
  4723  0AEC  2AEE               u1711:
  4724  0AED                     	goto	l1990
  4725  0AED  2AF5               u1710:
  4726  0AEE                     	line	20
  4727                           	
  4728                           l1988:	
  4729  0AEE                     	movf	(___lwmod@divisor)^080h,w
  4730  0AEE  0828               	subwf	(___lwmod@dividend)^080h,f
  4731  0AEF  02AA               	movf	(___lwmod@divisor+1)^080h,w
  4732  0AF0  0829               	skipc
  4733  0AF1  1C03               	decf	(___lwmod@dividend+1)^080h,f
  4734  0AF2  03AB               	subwf	(___lwmod@dividend+1)^080h,f
  4735  0AF3  02AB               	goto	l1990
  4736  0AF4  2AF5               	
  4737                           l737:	
  4738  0AF5                     	line	21
  4739                           	
  4740                           l1990:	
  4741  0AF5                     	movlw	01h
  4742  0AF5  3001               	
  4743                           u1725:
  4744  0AF6                     	clrc
  4745  0AF6  1003               	rrf	(___lwmod@divisor+1)^080h,f
  4746  0AF7  0CA9               	rrf	(___lwmod@divisor)^080h,f
  4747  0AF8  0CA8               	addlw	-1
  4748  0AF9  3EFF               	skipz
  4749  0AFA  1D03               	goto	u1725
  4750  0AFB  2AF6               	line	22
  4751                           	
  4752                           l1992:	
  4753  0AFC                     	movlw	01h
  4754  0AFC  3001               	subwf	(___lwmod@counter)^080h,f
  4755  0AFD  02AD               	btfss	status,2
  4756  0AFE  1D03               	goto	u1731
  4757  0AFF  2B01               	goto	u1730
  4758  0B00  2B02               u1731:
  4759  0B01                     	goto	l1986
  4760  0B01  2AE4               u1730:
  4761  0B02                     	goto	l1994
  4762  0B02  2B04               	
  4763                           l738:	
  4764  0B03                     	goto	l1994
  4765  0B03  2B04               	line	23
  4766                           	
  4767                           l732:	
  4768  0B04                     	line	24
  4769                           	
  4770                           l1994:	
  4771  0B04                     	movf	(___lwmod@dividend+1)^080h,w
  4772  0B04  082B               	movwf	(?___lwmod+1)^080h
  4773  0B05  00A9               	movf	(___lwmod@dividend)^080h,w
  4774  0B06  082A               	movwf	(?___lwmod)^080h
  4775  0B07  00A8               	goto	l739
  4776  0B08  2B09               	
  4777                           l1996:	
  4778  0B09                     	line	25
  4779                           	
  4780                           l739:	
  4781  0B09                     	return
  4782  0B09  0008               	opt stack 0
  4783                           GLOBAL	__end_of___lwmod
  4784                           	__end_of___lwmod:
  4785  0B0A                     	signat	___lwmod,8314
  4786                           	global	___lwdiv
  4787                           
  4788 ;; *************** function ___lwdiv *****************
  4789 ;; Defined at:
  4790 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  divisor         2    0[BANK1 ] unsigned int 
  4793 ;;  dividend        2    2[BANK1 ] unsigned int 
  4794 ;; Auto vars:     Size  Location     Type
  4795 ;;  quotient        2    5[BANK1 ] unsigned int 
  4796 ;;  counter         1    7[BANK1 ] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  2    0[BANK1 ] unsigned int 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       4       0       0
  4807 ;;      Locals:         0       0       3       0       0
  4808 ;;      Temps:          0       0       1       0       0
  4809 ;;      Totals:         0       0       8       0       0
  4810 ;;Total ram usage:        8 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    4
  4813 ;; This function calls:
  4814 ;;		Nothing
  4815 ;; This function is called by:
  4816 ;;		_sprintf
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  4820                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4821                           	line	5
  4822                           global __ptext11
  4823                           __ptext11:	;psect for function ___lwdiv
  4824  0BE7                     psect	text11
  4825                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4826                           	line	5
  4827                           	global	__size_of___lwdiv
  4828                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4829  004D                     	
  4830                           ___lwdiv:	
  4831  0BE7                     ;incstack = 0
  4832                           	opt	stack 0
  4833                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4834                           	line	13
  4835                           	
  4836                           l1950:	
  4837  0BE7                     	bsf	status, 5	;RP0=1, select bank1
  4838  0BE7  1683               	bcf	status, 6	;RP1=0, select bank1
  4839  0BE8  1303               	clrf	(___lwdiv@quotient)^080h
  4840  0BE9  01A5               	clrf	(___lwdiv@quotient+1)^080h
  4841  0BEA  01A6               	line	14
  4842                           	
  4843                           l1952:	
  4844  0BEB                     	movf	((___lwdiv@divisor)^080h),w
  4845  0BEB  0820               iorwf	((___lwdiv@divisor+1)^080h),w
  4846  0BEC  0421               	btfsc	status,2
  4847  0BED  1903               	goto	u1611
  4848  0BEE  2BF0               	goto	u1610
  4849  0BEF  2BF1               u1611:
  4850  0BF0                     	goto	l1972
  4851  0BF0  2C2E               u1610:
  4852  0BF1                     	line	15
  4853                           	
  4854                           l1954:	
  4855  0BF1                     	clrf	(___lwdiv@counter)^080h
  4856  0BF1  01A7               	incf	(___lwdiv@counter)^080h,f
  4857  0BF2  0AA7               	line	16
  4858                           	goto	l1960
  4859  0BF3  2C00               	
  4860                           l724:	
  4861  0BF4                     	line	17
  4862                           	
  4863                           l1956:	
  4864  0BF4                     	movlw	01h
  4865  0BF4  3001               	
  4866                           u1625:
  4867  0BF5                     	clrc
  4868  0BF5  1003               	rlf	(___lwdiv@divisor)^080h,f
  4869  0BF6  0DA0               	rlf	(___lwdiv@divisor+1)^080h,f
  4870  0BF7  0DA1               	addlw	-1
  4871  0BF8  3EFF               	skipz
  4872  0BF9  1D03               	goto	u1625
  4873  0BFA  2BF5               	line	18
  4874                           	
  4875                           l1958:	
  4876  0BFB                     	movlw	low(01h)
  4877  0BFB  3001               	movwf	(??___lwdiv+0)^080h+0
  4878  0BFC  00A4               	movf	(??___lwdiv+0)^080h+0,w
  4879  0BFD  0824               	addwf	(___lwdiv@counter)^080h,f
  4880  0BFE  07A7               	goto	l1960
  4881  0BFF  2C00               	line	19
  4882                           	
  4883                           l723:	
  4884  0C00                     	line	16
  4885                           	
  4886                           l1960:	
  4887  0C00                     	btfss	(___lwdiv@divisor+1)^080h,(15)&7
  4888  0C00  1FA1               	goto	u1631
  4889  0C01  2C03               	goto	u1630
  4890  0C02  2C04               u1631:
  4891  0C03                     	goto	l1956
  4892  0C03  2BF4               u1630:
  4893  0C04                     	goto	l1962
  4894  0C04  2C06               	
  4895                           l725:	
  4896  0C05                     	goto	l1962
  4897  0C05  2C06               	line	20
  4898                           	
  4899                           l726:	
  4900  0C06                     	line	21
  4901                           	
  4902                           l1962:	
  4903  0C06                     	movlw	01h
  4904  0C06  3001               	
  4905                           u1645:
  4906  0C07                     	clrc
  4907  0C07  1003               	rlf	(___lwdiv@quotient)^080h,f
  4908  0C08  0DA5               	rlf	(___lwdiv@quotient+1)^080h,f
  4909  0C09  0DA6               	addlw	-1
  4910  0C0A  3EFF               	skipz
  4911  0C0B  1D03               	goto	u1645
  4912  0C0C  2C07               	line	22
  4913                           	movf	(___lwdiv@divisor+1)^080h,w
  4914  0C0D  0821               	subwf	(___lwdiv@dividend+1)^080h,w
  4915  0C0E  0223               	skipz
  4916  0C0F  1D03               	goto	u1655
  4917  0C10  2C13               	movf	(___lwdiv@divisor)^080h,w
  4918  0C11  0820               	subwf	(___lwdiv@dividend)^080h,w
  4919  0C12  0222               u1655:
  4920  0C13                     	skipc
  4921  0C13  1C03               	goto	u1651
  4922  0C14  2C16               	goto	u1650
  4923  0C15  2C17               u1651:
  4924  0C16                     	goto	l1968
  4925  0C16  2C1F               u1650:
  4926  0C17                     	line	23
  4927                           	
  4928                           l1964:	
  4929  0C17                     	movf	(___lwdiv@divisor)^080h,w
  4930  0C17  0820               	subwf	(___lwdiv@dividend)^080h,f
  4931  0C18  02A2               	movf	(___lwdiv@divisor+1)^080h,w
  4932  0C19  0821               	skipc
  4933  0C1A  1C03               	decf	(___lwdiv@dividend+1)^080h,f
  4934  0C1B  03A3               	subwf	(___lwdiv@dividend+1)^080h,f
  4935  0C1C  02A3               	line	24
  4936                           	
  4937                           l1966:	
  4938  0C1D                     	bsf	(___lwdiv@quotient)^080h+(0/8),(0)&7
  4939  0C1D  1425               	goto	l1968
  4940  0C1E  2C1F               	line	25
  4941                           	
  4942                           l727:	
  4943  0C1F                     	line	26
  4944                           	
  4945                           l1968:	
  4946  0C1F                     	movlw	01h
  4947  0C1F  3001               	
  4948                           u1665:
  4949  0C20                     	clrc
  4950  0C20  1003               	rrf	(___lwdiv@divisor+1)^080h,f
  4951  0C21  0CA1               	rrf	(___lwdiv@divisor)^080h,f
  4952  0C22  0CA0               	addlw	-1
  4953  0C23  3EFF               	skipz
  4954  0C24  1D03               	goto	u1665
  4955  0C25  2C20               	line	27
  4956                           	
  4957                           l1970:	
  4958  0C26                     	movlw	01h
  4959  0C26  3001               	subwf	(___lwdiv@counter)^080h,f
  4960  0C27  02A7               	btfss	status,2
  4961  0C28  1D03               	goto	u1671
  4962  0C29  2C2B               	goto	u1670
  4963  0C2A  2C2C               u1671:
  4964  0C2B                     	goto	l1962
  4965  0C2B  2C06               u1670:
  4966  0C2C                     	goto	l1972
  4967  0C2C  2C2E               	
  4968                           l728:	
  4969  0C2D                     	goto	l1972
  4970  0C2D  2C2E               	line	28
  4971                           	
  4972                           l722:	
  4973  0C2E                     	line	29
  4974                           	
  4975                           l1972:	
  4976  0C2E                     	movf	(___lwdiv@quotient+1)^080h,w
  4977  0C2E  0826               	movwf	(?___lwdiv+1)^080h
  4978  0C2F  00A1               	movf	(___lwdiv@quotient)^080h,w
  4979  0C30  0825               	movwf	(?___lwdiv)^080h
  4980  0C31  00A0               	goto	l729
  4981  0C32  2C33               	
  4982                           l1974:	
  4983  0C33                     	line	30
  4984                           	
  4985                           l729:	
  4986  0C33                     	return
  4987  0C33  0008               	opt stack 0
  4988                           GLOBAL	__end_of___lwdiv
  4989                           	__end_of___lwdiv:
  4990  0C34                     	signat	___lwdiv,8314
  4991                           	global	_display_write_start
  4992                           
  4993 ;; *************** function _display_write_start *****************
  4994 ;; Defined at:
  4995 ;;		line 170 in file "Display.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2, status,0
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5009 ;;      Params:         0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0
  5012 ;;      Totals:         0       0       0       0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    4
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_update_input
  5020 ;;		_update_volume
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5024                           	file	"Display.c"
  5025                           	line	170
  5026                           global __ptext12
  5027                           __ptext12:	;psect for function _display_write_start
  5028  0949                     psect	text12
  5029                           	file	"Display.c"
  5030                           	line	170
  5031                           	global	__size_of_display_write_start
  5032                           	__size_of_display_write_start	equ	__end_of_display_write_start-_display_write_start
  5033  000F                     	
  5034                           _display_write_start:	
  5035  0949                     ;incstack = 0
  5036                           	opt	stack 2
  5037                           ; Regs used in _display_write_start: [wreg+status,2+status,0]
  5038                           	line	172
  5039                           	
  5040                           l2420:	
  5041  0949                     ;Display.c: 172:     if (_selectedDisplay == 0) {
  5042                           	bsf	status, 5	;RP0=1, select bank1
  5043  0949  1683               	bcf	status, 6	;RP1=0, select bank1
  5044  094A  1303               	movf	((__selectedDisplay)^080h),w
  5045  094B  084D               	btfss	status,2
  5046  094C  1D03               	goto	u2571
  5047  094D  294F               	goto	u2570
  5048  094E  2950               u2571:
  5049  094F                     	goto	l164
  5050  094F  2954               u2570:
  5051  0950                     	line	173
  5052                           	
  5053                           l2422:	
  5054  0950                     ;Display.c: 173:         PORTCbits.RC4 = 0;
  5055                           	bcf	status, 5	;RP0=0, select bank0
  5056  0950  1283               	bcf	status, 6	;RP1=0, select bank0
  5057  0951  1303               	bcf	(7),4	;volatile
  5058  0952  1207               	line	174
  5059                           ;Display.c: 174:         return;
  5060                           	goto	l165
  5061  0953  2957               	line	175
  5062                           ;Display.c: 175:     }
  5063                           	
  5064                           l164:	
  5065  0954                     	line	177
  5066                           ;Display.c: 177:     PORTDbits.RD4 = 0;
  5067                           	bcf	status, 5	;RP0=0, select bank0
  5068  0954  1283               	bcf	status, 6	;RP1=0, select bank0
  5069  0955  1303               	bcf	(8),4	;volatile
  5070  0956  1208               	line	178
  5071                           	
  5072                           l165:	
  5073  0957                     	return
  5074  0957  0008               	opt stack 0
  5075                           GLOBAL	__end_of_display_write_start
  5076                           	__end_of_display_write_start:
  5077  0958                     	signat	_display_write_start,89
  5078                           	global	_display_write_end
  5079                           
  5080 ;; *************** function _display_write_end *****************
  5081 ;; Defined at:
  5082 ;;		line 181 in file "Display.c"
  5083 ;; Parameters:    Size  Location     Type
  5084 ;;		None
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5096 ;;      Params:         0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0
  5098 ;;      Temps:          0       0       0       0       0
  5099 ;;      Totals:         0       0       0       0       0
  5100 ;;Total ram usage:        0 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    4
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_update_input
  5107 ;;		_update_volume
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5111                           	line	181
  5112                           global __ptext13
  5113                           __ptext13:	;psect for function _display_write_end
  5114  093A                     psect	text13
  5115                           	file	"Display.c"
  5116                           	line	181
  5117                           	global	__size_of_display_write_end
  5118                           	__size_of_display_write_end	equ	__end_of_display_write_end-_display_write_end
  5119  000F                     	
  5120                           _display_write_end:	
  5121  093A                     ;incstack = 0
  5122                           	opt	stack 2
  5123                           ; Regs used in _display_write_end: [wreg+status,2+status,0]
  5124                           	line	183
  5125                           	
  5126                           l2448:	
  5127  093A                     ;Display.c: 183:     if (_selectedDisplay == 0) {
  5128                           	bsf	status, 5	;RP0=1, select bank1
  5129  093A  1683               	bcf	status, 6	;RP1=0, select bank1
  5130  093B  1303               	movf	((__selectedDisplay)^080h),w
  5131  093C  084D               	btfss	status,2
  5132  093D  1D03               	goto	u2621
  5133  093E  2940               	goto	u2620
  5134  093F  2941               u2621:
  5135  0940                     	goto	l168
  5136  0940  2945               u2620:
  5137  0941                     	line	184
  5138                           	
  5139                           l2450:	
  5140  0941                     ;Display.c: 184:         PORTCbits.RC4 = 1;
  5141                           	bcf	status, 5	;RP0=0, select bank0
  5142  0941  1283               	bcf	status, 6	;RP1=0, select bank0
  5143  0942  1303               	bsf	(7),4	;volatile
  5144  0943  1607               	line	185
  5145                           ;Display.c: 185:         return;
  5146                           	goto	l169
  5147  0944  2948               	line	186
  5148                           ;Display.c: 186:     }
  5149                           	
  5150                           l168:	
  5151  0945                     	line	188
  5152                           ;Display.c: 188:     PORTDbits.RD4 = 1;
  5153                           	bcf	status, 5	;RP0=0, select bank0
  5154  0945  1283               	bcf	status, 6	;RP1=0, select bank0
  5155  0946  1303               	bsf	(8),4	;volatile
  5156  0947  1608               	line	189
  5157                           	
  5158                           l169:	
  5159  0948                     	return
  5160  0948  0008               	opt stack 0
  5161                           GLOBAL	__end_of_display_write_end
  5162                           	__end_of_display_write_end:
  5163  0949                     	signat	_display_write_end,89
  5164                           	global	_config
  5165                           
  5166 ;; *************** function _config *****************
  5167 ;; Defined at:
  5168 ;;		line 3 in file "Config.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  1    wreg      void 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0, pclath, cstack
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5182 ;;      Params:         0       0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0
  5184 ;;      Temps:          0       0       3       0       0
  5185 ;;      Totals:         0       0       3       0       0
  5186 ;;Total ram usage:        3 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; Hardware stack levels required when called:    6
  5189 ;; This function calls:
  5190 ;;		_display_init
  5191 ;;		_init_adc
  5192 ;; This function is called by:
  5193 ;;		_main
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5197                           	file	"Config.c"
  5198                           	line	3
  5199                           global __ptext14
  5200                           __ptext14:	;psect for function _config
  5201  0DA1                     psect	text14
  5202                           	file	"Config.c"
  5203                           	line	3
  5204                           	global	__size_of_config
  5205                           	__size_of_config	equ	__end_of_config-_config
  5206  0069                     	
  5207                           _config:	
  5208  0DA1                     ;incstack = 0
  5209                           	opt	stack 1
  5210                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
  5211                           	line	5
  5212                           	
  5213                           l2558:	
  5214  0DA1                     ;Config.c: 5:     OSCCONbits.IRCF = 0b110;
  5215                           	bsf	status, 5	;RP0=1, select bank1
  5216  0DA1  1683               	bcf	status, 6	;RP1=0, select bank1
  5217  0DA2  1303               	movf	(143)^080h,w	;volatile
  5218  0DA3  080F               	andlw	not (((1<<3)-1)<<4)
  5219  0DA4  398F               	iorlw	(06h & ((1<<3)-1))<<4
  5220  0DA5  3860               	movwf	(143)^080h	;volatile
  5221  0DA6  008F               	line	6
  5222                           	
  5223                           l2560:	
  5224  0DA7                     ;Config.c: 6:     OSCCONbits.OSTS = 0;
  5225                           	bcf	(143)^080h,3	;volatile
  5226  0DA7  118F               	line	13
  5227                           	
  5228                           l2562:	
  5229  0DA8                     ;Config.c: 13:     TRISAbits.TRISA0 = 0;
  5230                           	bcf	(133)^080h,0	;volatile
  5231  0DA8  1005               	line	14
  5232                           	
  5233                           l2564:	
  5234  0DA9                     ;Config.c: 14:     TRISAbits.TRISA1 = 0;
  5235                           	bcf	(133)^080h,1	;volatile
  5236  0DA9  1085               	line	15
  5237                           	
  5238                           l2566:	
  5239  0DAA                     ;Config.c: 15:     TRISAbits.TRISA2 = 0;
  5240                           	bcf	(133)^080h,2	;volatile
  5241  0DAA  1105               	line	16
  5242                           	
  5243                           l2568:	
  5244  0DAB                     ;Config.c: 16:     TRISAbits.TRISA3 = 0;
  5245                           	bcf	(133)^080h,3	;volatile
  5246  0DAB  1185               	line	18
  5247                           	
  5248                           l2570:	
  5249  0DAC                     ;Config.c: 18:     PORTA = 0x0F;
  5250                           	movlw	low(0Fh)
  5251  0DAC  300F               	bcf	status, 5	;RP0=0, select bank0
  5252  0DAD  1283               	bcf	status, 6	;RP1=0, select bank0
  5253  0DAE  1303               	movwf	(5)	;volatile
  5254  0DAF  0085               	line	25
  5255                           	
  5256                           l2572:	
  5257  0DB0                     ;Config.c: 25:     TRISBbits.TRISB4 = 1;
  5258                           	bsf	status, 5	;RP0=1, select bank1
  5259  0DB0  1683               	bcf	status, 6	;RP1=0, select bank1
  5260  0DB1  1303               	bsf	(134)^080h,4	;volatile
  5261  0DB2  1606               	line	26
  5262                           	
  5263                           l2574:	
  5264  0DB3                     ;Config.c: 26:     TRISBbits.TRISB5 = 1;
  5265                           	bsf	(134)^080h,5	;volatile
  5266  0DB3  1686               	line	28
  5267                           	
  5268                           l2576:	
  5269  0DB4                     ;Config.c: 28:     ANSELHbits.ANS11 = 0;
  5270                           	bsf	status, 5	;RP0=1, select bank3
  5271  0DB4  1683               	bsf	status, 6	;RP1=1, select bank3
  5272  0DB5  1703               	bcf	(393)^0180h,3	;volatile
  5273  0DB6  1189               	line	29
  5274                           	
  5275                           l2578:	
  5276  0DB7                     ;Config.c: 29:     ANSELHbits.ANS13 = 0;
  5277                           	bcf	(393)^0180h,5	;volatile
  5278  0DB7  1289               	line	35
  5279                           	
  5280                           l2580:	
  5281  0DB8                     ;Config.c: 35:     TRISEbits.TRISE2 = 1;
  5282                           	bsf	status, 5	;RP0=1, select bank1
  5283  0DB8  1683               	bcf	status, 6	;RP1=0, select bank1
  5284  0DB9  1303               	bsf	(137)^080h,2	;volatile
  5285  0DBA  1509               	line	36
  5286                           	
  5287                           l2582:	
  5288  0DBB                     ;Config.c: 36:     ANSELbits.ANS7 = 1;
  5289                           	bsf	status, 5	;RP0=1, select bank3
  5290  0DBB  1683               	bsf	status, 6	;RP1=1, select bank3
  5291  0DBC  1703               	bsf	(392)^0180h,7	;volatile
  5292  0DBD  1788               	line	41
  5293                           	
  5294                           l2584:	
  5295  0DBE                     ;Config.c: 41:     TRISBbits.TRISB0 = 1;
  5296                           	bsf	status, 5	;RP0=1, select bank1
  5297  0DBE  1683               	bcf	status, 6	;RP1=0, select bank1
  5298  0DBF  1303               	bsf	(134)^080h,0	;volatile
  5299  0DC0  1406               	line	42
  5300                           	
  5301                           l2586:	
  5302  0DC1                     ;Config.c: 42:     ANSELHbits.ANS12 = 0;
  5303                           	bsf	status, 5	;RP0=1, select bank3
  5304  0DC1  1683               	bsf	status, 6	;RP1=1, select bank3
  5305  0DC2  1703               	bcf	(393)^0180h,4	;volatile
  5306  0DC3  1209               	line	48
  5307                           	
  5308                           l2588:	
  5309  0DC4                     ;Config.c: 48:     TRISCbits.TRISC0 = 0;
  5310                           	bsf	status, 5	;RP0=1, select bank1
  5311  0DC4  1683               	bcf	status, 6	;RP1=0, select bank1
  5312  0DC5  1303               	bcf	(135)^080h,0	;volatile
  5313  0DC6  1007               	line	49
  5314                           	
  5315                           l2590:	
  5316  0DC7                     ;Config.c: 49:     TRISCbits.TRISC1 = 0;
  5317                           	bcf	(135)^080h,1	;volatile
  5318  0DC7  1087               	line	51
  5319                           	
  5320                           l2592:	
  5321  0DC8                     ;Config.c: 51:     PORTC = 0x00;
  5322                           	bcf	status, 5	;RP0=0, select bank0
  5323  0DC8  1283               	bcf	status, 6	;RP1=0, select bank0
  5324  0DC9  1303               	clrf	(7)	;volatile
  5325  0DCA  0187               	line	57
  5326                           	
  5327                           l2594:	
  5328  0DCB                     ;Config.c: 57:     display_init();
  5329                           	fcall	_display_init
  5330  0DCB  120A  158A  2434  120A  158A  	line	60
  5331                           	
  5332                           l2596:	
  5333  0DD0                     ;Config.c: 60:     init_adc();
  5334                           	fcall	_init_adc
  5335  0DD0  120A  158A  2158  120A  158A  	line	67
  5336                           	
  5337                           l2598:	
  5338  0DD5                     ;Config.c: 67:     IOCBbits.IOCB0 = 1;
  5339                           	bsf	status, 5	;RP0=1, select bank1
  5340  0DD5  1683               	bcf	status, 6	;RP1=0, select bank1
  5341  0DD6  1303               	bsf	(150)^080h,0	;volatile
  5342  0DD7  1416               	line	68
  5343                           	
  5344                           l2600:	
  5345  0DD8                     ;Config.c: 68:     IOCBbits.IOCB4 = 1;
  5346                           	bsf	(150)^080h,4	;volatile
  5347  0DD8  1616               	line	69
  5348                           	
  5349                           l2602:	
  5350  0DD9                     ;Config.c: 69:     IOCBbits.IOCB5 = 1;
  5351                           	bsf	(150)^080h,5	;volatile
  5352  0DD9  1696               	line	71
  5353                           	
  5354                           l2604:	
  5355  0DDA                     ;Config.c: 71:     INTCONbits.PEIE = 1;
  5356                           	bsf	(11),6	;volatile
  5357  0DDA  170B               	line	72
  5358                           	
  5359                           l2606:	
  5360  0DDB                     ;Config.c: 72:     INTCONbits.RBIE = 1;
  5361                           	bsf	(11),3	;volatile
  5362  0DDB  158B               	line	74
  5363                           	
  5364                           l2608:	
  5365  0DDC                     ;Config.c: 74:     INTCONbits.GIE = 1;
  5366                           	bsf	(11),7	;volatile
  5367  0DDC  178B               	line	83
  5368                           	
  5369                           l2610:	
  5370  0DDD                     ;Config.c: 83:     _inputUpdateRequired = 1;
  5371                           	bcf	status, 5	;RP0=0, select bank0
  5372  0DDD  1283               	bcf	status, 6	;RP1=0, select bank0
  5373  0DDE  1303               	clrf	(__inputUpdateRequired)
  5374  0DDF  01E4               	incf	(__inputUpdateRequired),f
  5375  0DE0  0AE4               	line	84
  5376                           	
  5377                           l2612:	
  5378  0DE1                     ;Config.c: 84:     _selectedInput = 0;
  5379                           	bsf	status, 5	;RP0=1, select bank1
  5380  0DE1  1683               	bcf	status, 6	;RP1=0, select bank1
  5381  0DE2  1303               	clrf	(__selectedInput)^080h
  5382  0DE3  01CB               	clrf	(__selectedInput+1)^080h
  5383  0DE4  01CC               	line	85
  5384                           	
  5385                           l2614:	
  5386  0DE5                     ;Config.c: 85:     _lastA = PORTBbits.RB4;
  5387                           	bcf	status, 5	;RP0=0, select bank0
  5388  0DE5  1283               	bcf	status, 6	;RP1=0, select bank0
  5389  0DE6  1303               	swapf	(6),w	;volatile
  5390  0DE7  0E06               	andlw	(1<<1)-1
  5391  0DE8  3901               	bsf	status, 5	;RP0=1, select bank1
  5392  0DE9  1683               	bcf	status, 6	;RP1=0, select bank1
  5393  0DEA  1303               	movwf	(??_config+0)^080h+0
  5394  0DEB  00A1               	clrf	(??_config+0)^080h+0+1
  5395  0DEC  01A2               	movf	0+(??_config+0)^080h+0,w
  5396  0DED  0821               	bcf	status, 5	;RP0=0, select bank0
  5397  0DEE  1283               	bcf	status, 6	;RP1=0, select bank0
  5398  0DEF  1303               	movwf	(__lastA)
  5399  0DF0  00E2               	bsf	status, 5	;RP0=1, select bank1
  5400  0DF1  1683               	bcf	status, 6	;RP1=0, select bank1
  5401  0DF2  1303               	movf	1+(??_config+0)^080h+0,w
  5402  0DF3  0822               	bcf	status, 5	;RP0=0, select bank0
  5403  0DF4  1283               	bcf	status, 6	;RP1=0, select bank0
  5404  0DF5  1303               	movwf	(__lastA+1)
  5405  0DF6  00E3               	line	86
  5406                           	
  5407                           l2616:	
  5408  0DF7                     ;Config.c: 86:     _lastB = PORTBbits.RB5;
  5409                           	swapf	(6),w	;volatile
  5410  0DF7  0E06               	bsf	status, 5	;RP0=1, select bank1
  5411  0DF8  1683               	bcf	status, 6	;RP1=0, select bank1
  5412  0DF9  1303               	movwf	(??_config+0)^080h+0
  5413  0DFA  00A1               	rrf	(??_config+0)^080h+0,w
  5414  0DFB  0C21               	andlw	(1<<1)-1
  5415  0DFC  3901               	movwf	(??_config+1)^080h+0
  5416  0DFD  00A2               	clrf	(??_config+1)^080h+0+1
  5417  0DFE  01A3               	movf	0+(??_config+1)^080h+0,w
  5418  0DFF  0822               	bcf	status, 5	;RP0=0, select bank0
  5419  0E00  1283               	bcf	status, 6	;RP1=0, select bank0
  5420  0E01  1303               	movwf	(__lastB)
  5421  0E02  00E0               	bsf	status, 5	;RP0=1, select bank1
  5422  0E03  1683               	bcf	status, 6	;RP1=0, select bank1
  5423  0E04  1303               	movf	1+(??_config+1)^080h+0,w
  5424  0E05  0823               	bcf	status, 5	;RP0=0, select bank0
  5425  0E06  1283               	bcf	status, 6	;RP1=0, select bank0
  5426  0E07  1303               	movwf	(__lastB+1)
  5427  0E08  00E1               	line	87
  5428                           	
  5429                           l266:	
  5430  0E09                     	return
  5431  0E09  0008               	opt stack 0
  5432                           GLOBAL	__end_of_config
  5433                           	__end_of_config:
  5434  0E0A                     	signat	_config,89
  5435                           	global	_init_adc
  5436                           
  5437 ;; *************** function _init_adc *****************
  5438 ;; Defined at:
  5439 ;;		line 3 in file "Volume.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5453 ;;      Params:         0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0
  5456 ;;      Totals:         0       0       0       0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    4
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_config
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5467                           	file	"Volume.c"
  5468                           	line	3
  5469                           global __ptext15
  5470                           __ptext15:	;psect for function _init_adc
  5471  0958                     psect	text15
  5472                           	file	"Volume.c"
  5473                           	line	3
  5474                           	global	__size_of_init_adc
  5475                           	__size_of_init_adc	equ	__end_of_init_adc-_init_adc
  5476  0017                     	
  5477                           _init_adc:	
  5478  0958                     ;incstack = 0
  5479                           	opt	stack 2
  5480                           ; Regs used in _init_adc: [wreg+status,2+status,0]
  5481                           	line	5
  5482                           	
  5483                           l2452:	
  5484  0958                     ;Volume.c: 5:     ADCON0bits.CHS = 0b0111;
  5485                           	bcf	status, 5	;RP0=0, select bank0
  5486  0958  1283               	bcf	status, 6	;RP1=0, select bank0
  5487  0959  1303               	movf	(31),w	;volatile
  5488  095A  081F               	andlw	not (((1<<4)-1)<<2)
  5489  095B  39C3               	iorlw	(07h & ((1<<4)-1))<<2
  5490  095C  381C               	movwf	(31)	;volatile
  5491  095D  009F               	line	6
  5492                           ;Volume.c: 6:     ADCON0bits.ADCS = 0b001;
  5493                           	movf	(31),w	;volatile
  5494  095E  081F               	andlw	not (((1<<2)-1)<<6)
  5495  095F  393F               	iorlw	(01h & ((1<<2)-1))<<6
  5496  0960  3840               	movwf	(31)	;volatile
  5497  0961  009F               	line	7
  5498                           	
  5499                           l2454:	
  5500  0962                     ;Volume.c: 7:     ADCON1bits.ADFM = 1;
  5501                           	bsf	status, 5	;RP0=1, select bank1
  5502  0962  1683               	bcf	status, 6	;RP1=0, select bank1
  5503  0963  1303               	bsf	(159)^080h,7	;volatile
  5504  0964  179F               	line	9
  5505                           	
  5506                           l2456:	
  5507  0965                     ;Volume.c: 9:     PIR1bits.ADIF = 0;
  5508                           	bcf	status, 5	;RP0=0, select bank0
  5509  0965  1283               	bcf	status, 6	;RP1=0, select bank0
  5510  0966  1303               	bcf	(12),6	;volatile
  5511  0967  130C               	line	10
  5512                           	
  5513                           l2458:	
  5514  0968                     ;Volume.c: 10:     PIE1bits.ADIE = 1;
  5515                           	bsf	status, 5	;RP0=1, select bank1
  5516  0968  1683               	bcf	status, 6	;RP1=0, select bank1
  5517  0969  1303               	bsf	(140)^080h,6	;volatile
  5518  096A  170C               	line	12
  5519                           	
  5520                           l2460:	
  5521  096B                     ;Volume.c: 12:     ADCON0bits.ADON = 1;
  5522                           	bcf	status, 5	;RP0=0, select bank0
  5523  096B  1283               	bcf	status, 6	;RP1=0, select bank0
  5524  096C  1303               	bsf	(31),0	;volatile
  5525  096D  141F               	line	13
  5526                           	
  5527                           l295:	
  5528  096E                     	return
  5529  096E  0008               	opt stack 0
  5530                           GLOBAL	__end_of_init_adc
  5531                           	__end_of_init_adc:
  5532  096F                     	signat	_init_adc,89
  5533                           	global	_display_init
  5534                           
  5535 ;; *************** function _display_init *****************
  5536 ;; Defined at:
  5537 ;;		line 3 in file "Display.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;		None
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;		None
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, status,2, status,0, pclath, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5551 ;;      Params:         0       0       0       0       0
  5552 ;;      Locals:         0       0       0       0       0
  5553 ;;      Temps:          0       0       0       0       0
  5554 ;;      Totals:         0       0       0       0       0
  5555 ;;Total ram usage:        0 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    5
  5558 ;; This function calls:
  5559 ;;		_spiWrite
  5560 ;; This function is called by:
  5561 ;;		_config
  5562 ;; This function uses a non-reentrant model
  5563 ;;
  5564                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5565                           	file	"Display.c"
  5566                           	line	3
  5567                           global __ptext16
  5568                           __ptext16:	;psect for function _display_init
  5569  0C34                     psect	text16
  5570                           	file	"Display.c"
  5571                           	line	3
  5572                           	global	__size_of_display_init
  5573                           	__size_of_display_init	equ	__end_of_display_init-_display_init
  5574  004E                     	
  5575                           _display_init:	
  5576  0C34                     ;incstack = 0
  5577                           	opt	stack 1
  5578                           ; Regs used in _display_init: [wreg+status,2+status,0+pclath+cstack]
  5579                           	line	7
  5580                           	
  5581                           l2356:	
  5582  0C34                     ;Display.c: 7:     SSPCON = 0b00100000;
  5583                           	movlw	low(020h)
  5584  0C34  3020               	bcf	status, 5	;RP0=0, select bank0
  5585  0C35  1283               	bcf	status, 6	;RP1=0, select bank0
  5586  0C36  1303               	movwf	(20)	;volatile
  5587  0C37  0094               	line	8
  5588                           ;Display.c: 8:     SSPSTAT = 0b01000000;
  5589                           	movlw	low(040h)
  5590  0C38  3040               	bsf	status, 5	;RP0=1, select bank1
  5591  0C39  1683               	bcf	status, 6	;RP1=0, select bank1
  5592  0C3A  1303               	movwf	(148)^080h	;volatile
  5593  0C3B  0094               	line	11
  5594                           	
  5595                           l2358:	
  5596  0C3C                     ;Display.c: 11:     TRISD = 0x00;
  5597                           	clrf	(136)^080h	;volatile
  5598  0C3C  0188               	line	12
  5599                           	
  5600                           l2360:	
  5601  0C3D                     ;Display.c: 12:     TRISC = 0x00;
  5602                           	clrf	(135)^080h	;volatile
  5603  0C3D  0187               	line	15
  5604                           	
  5605                           l2362:	
  5606  0C3E                     ;Display.c: 15:     PORTDbits.RD2 = 1;
  5607                           	bcf	status, 5	;RP0=0, select bank0
  5608  0C3E  1283               	bcf	status, 6	;RP1=0, select bank0
  5609  0C3F  1303               	bsf	(8),2	;volatile
  5610  0C40  1508               	line	16
  5611                           	
  5612                           l2364:	
  5613  0C41                     ;Display.c: 16:     PORTDbits.RD6 = 0;
  5614                           	bcf	(8),6	;volatile
  5615  0C41  1308               	line	17
  5616                           	
  5617                           l2366:	
  5618  0C42                     ;Display.c: 17:     PORTDbits.RD4 = 1;
  5619                           	bsf	(8),4	;volatile
  5620  0C42  1608               	line	18
  5621                           	
  5622                           l2368:	
  5623  0C43                     ;Display.c: 18:     PORTCbits.RC3 = 0;
  5624                           	bcf	(7),3	;volatile
  5625  0C43  1187               	line	21
  5626                           	
  5627                           l2370:	
  5628  0C44                     ;Display.c: 21:     PORTDbits.RD7 = 1;
  5629                           	bsf	(8),7	;volatile
  5630  0C44  1788               	line	22
  5631                           	
  5632                           l2372:	
  5633  0C45                     ;Display.c: 22:     PORTDbits.RD4 = 0;
  5634                           	bcf	(8),4	;volatile
  5635  0C45  1208               	line	23
  5636                           	
  5637                           l2374:	
  5638  0C46                     ;Display.c: 23:     spiWrite(0b01001111);
  5639                           	movlw	low(04Fh)
  5640  0C46  304F               	fcall	_spiWrite
  5641  0C47  120A  118A  22ED  120A  158A  	line	24
  5642                           	
  5643                           l2376:	
  5644  0C4C                     ;Display.c: 24:     PORTDbits.RD4 = 1;
  5645                           	bcf	status, 5	;RP0=0, select bank0
  5646  0C4C  1283               	bcf	status, 6	;RP1=0, select bank0
  5647  0C4D  1303               	bsf	(8),4	;volatile
  5648  0C4E  1608               	line	27
  5649                           	
  5650                           l2378:	
  5651  0C4F                     ;Display.c: 27:     PORTDbits.RD7 = 1;
  5652                           	bsf	(8),7	;volatile
  5653  0C4F  1788               	line	28
  5654                           	
  5655                           l2380:	
  5656  0C50                     ;Display.c: 28:     PORTDbits.RD4 = 0;
  5657                           	bcf	(8),4	;volatile
  5658  0C50  1208               	line	29
  5659                           	
  5660                           l2382:	
  5661  0C51                     ;Display.c: 29:     spiWrite(0b10000001);
  5662                           	movlw	low(081h)
  5663  0C51  3081               	fcall	_spiWrite
  5664  0C52  120A  118A  22ED  120A  158A  	line	30
  5665                           	
  5666                           l2384:	
  5667  0C57                     ;Display.c: 30:     PORTDbits.RD4 = 1;
  5668                           	bcf	status, 5	;RP0=0, select bank0
  5669  0C57  1283               	bcf	status, 6	;RP1=0, select bank0
  5670  0C58  1303               	bsf	(8),4	;volatile
  5671  0C59  1608               	line	34
  5672                           	
  5673                           l2386:	
  5674  0C5A                     ;Display.c: 34:     PORTDbits.RD7 = 0;
  5675                           	bcf	(8),7	;volatile
  5676  0C5A  1388               	line	38
  5677                           	
  5678                           l2388:	
  5679  0C5B                     ;Display.c: 38:     PORTCbits.RC2 = 1;
  5680                           	bsf	(7),2	;volatile
  5681  0C5B  1507               	line	39
  5682                           	
  5683                           l2390:	
  5684  0C5C                     ;Display.c: 39:     PORTCbits.RC6 = 0;
  5685                           	bcf	(7),6	;volatile
  5686  0C5C  1307               	line	40
  5687                           	
  5688                           l2392:	
  5689  0C5D                     ;Display.c: 40:     PORTCbits.RC4 = 1;
  5690                           	bsf	(7),4	;volatile
  5691  0C5D  1607               	line	41
  5692                           	
  5693                           l2394:	
  5694  0C5E                     ;Display.c: 41:     PORTCbits.RC3 = 0;
  5695                           	bcf	(7),3	;volatile
  5696  0C5E  1187               	line	43
  5697                           	
  5698                           l2396:	
  5699  0C5F                     ;Display.c: 43:     PORTCbits.RC7 = 1;
  5700                           	bsf	(7),7	;volatile
  5701  0C5F  1787               	line	44
  5702                           	
  5703                           l2398:	
  5704  0C60                     ;Display.c: 44:     PORTCbits.RC4 = 0;
  5705                           	bcf	(7),4	;volatile
  5706  0C60  1207               	line	45
  5707                           	
  5708                           l2400:	
  5709  0C61                     ;Display.c: 45:     spiWrite(0b01001111);
  5710                           	movlw	low(04Fh)
  5711  0C61  304F               	fcall	_spiWrite
  5712  0C62  120A  118A  22ED  120A  158A  	line	47
  5713                           	
  5714                           l2402:	
  5715  0C67                     ;Display.c: 47:     PORTCbits.RC4 = 1;
  5716                           	bcf	status, 5	;RP0=0, select bank0
  5717  0C67  1283               	bcf	status, 6	;RP1=0, select bank0
  5718  0C68  1303               	bsf	(7),4	;volatile
  5719  0C69  1607               	line	49
  5720                           	
  5721                           l2404:	
  5722  0C6A                     ;Display.c: 49:     PORTCbits.RC7 = 1;
  5723                           	bsf	(7),7	;volatile
  5724  0C6A  1787               	line	50
  5725                           	
  5726                           l2406:	
  5727  0C6B                     ;Display.c: 50:     PORTCbits.RC4 = 0;
  5728                           	bcf	(7),4	;volatile
  5729  0C6B  1207               	line	52
  5730                           	
  5731                           l2408:	
  5732  0C6C                     ;Display.c: 52:     spiWrite(0b10000001);
  5733                           	movlw	low(081h)
  5734  0C6C  3081               	fcall	_spiWrite
  5735  0C6D  120A  118A  22ED  120A  158A  	line	53
  5736                           	
  5737                           l2410:	
  5738  0C72                     ;Display.c: 53:     PORTCbits.RC4 = 1;
  5739                           	bcf	status, 5	;RP0=0, select bank0
  5740  0C72  1283               	bcf	status, 6	;RP1=0, select bank0
  5741  0C73  1303               	bsf	(7),4	;volatile
  5742  0C74  1607               	line	56
  5743                           	
  5744                           l2412:	
  5745  0C75                     ;Display.c: 56:     PORTCbits.RC7 = 0;
  5746                           	bcf	(7),7	;volatile
  5747  0C75  1387               	line	59
  5748                           	
  5749                           l2414:	
  5750  0C76                     ;Display.c: 59:     _selectedDisplay = 0;
  5751                           	bsf	status, 5	;RP0=1, select bank1
  5752  0C76  1683               	bcf	status, 6	;RP1=0, select bank1
  5753  0C77  1303               	clrf	(__selectedDisplay)^080h
  5754  0C78  01CD               	line	60
  5755                           	
  5756                           l2416:	
  5757  0C79                     ;Display.c: 60:     lastVolume = 99;
  5758                           	movlw	063h
  5759  0C79  3063               	movwf	(_lastVolume)^080h
  5760  0C7A  00C7               	movlw	0
  5761  0C7B  3000               	movwf	((_lastVolume)^080h)+1
  5762  0C7C  00C8               	line	61
  5763                           	
  5764                           l2418:	
  5765  0C7D                     ;Display.c: 61:     lastInput = 99;
  5766                           	movlw	063h
  5767  0C7D  3063               	movwf	(_lastInput)^080h
  5768  0C7E  00C5               	movlw	0
  5769  0C7F  3000               	movwf	((_lastInput)^080h)+1
  5770  0C80  00C6               	line	63
  5771                           	
  5772                           l120:	
  5773  0C81                     	return
  5774  0C81  0008               	opt stack 0
  5775                           GLOBAL	__end_of_display_init
  5776                           	__end_of_display_init:
  5777  0C82                     	signat	_display_init,89
  5778                           	global	_spiWrite
  5779                           
  5780 ;; *************** function _spiWrite *****************
  5781 ;; Defined at:
  5782 ;;		line 192 in file "Display.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  data            1    wreg     unsigned char 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  data            1    0[BANK1 ] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  1    wreg      void 
  5789 ;; Registers used:
  5790 ;;		wreg
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5796 ;;      Params:         0       0       0       0       0
  5797 ;;      Locals:         0       0       1       0       0
  5798 ;;      Temps:          0       0       0       0       0
  5799 ;;      Totals:         0       0       1       0       0
  5800 ;;Total ram usage:        1 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; Hardware stack levels required when called:    4
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_display_init
  5807 ;;		_write_space
  5808 ;;		_write_font
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5812                           	line	192
  5813                           global __ptext17
  5814                           __ptext17:	;psect for function _spiWrite
  5815  02ED                     psect	text17
  5816                           	file	"Display.c"
  5817                           	line	192
  5818                           	global	__size_of_spiWrite
  5819                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  5820  0010                     	
  5821                           _spiWrite:	
  5822  02ED                     ;incstack = 0
  5823 ;; hardware stack exceeded
  5824                           	opt	stack 0
  5825                           ; Regs used in _spiWrite: [wreg]
  5826                           ;spiWrite@data stored from wreg
  5827                           	bsf	status, 5	;RP0=1, select bank1
  5828  02ED  1683               	bcf	status, 6	;RP1=0, select bank1
  5829  02EE  1303               	movwf	(spiWrite@data)^080h
  5830  02EF  00A0               	line	194
  5831                           	
  5832                           l1898:	
  5833  02F0                     ;Display.c: 192: void spiWrite(char data);Display.c: 193: {;Display.c: 194:     SSPBUF =
                                  data;
  5834                           	movf	(spiWrite@data)^080h,w
  5835  02F0  0820               	bcf	status, 5	;RP0=0, select bank0
  5836  02F1  1283               	bcf	status, 6	;RP1=0, select bank0
  5837  02F2  1303               	movwf	(19)	;volatile
  5838  02F3  0093               	line	196
  5839                           ;Display.c: 196:     while(!SSPSTATbits.BF);
  5840                           	goto	l172
  5841  02F4  2AF5               	
  5842                           l173:	
  5843  02F5                     	
  5844                           l172:	
  5845  02F5                     	bsf	status, 5	;RP0=1, select bank1
  5846  02F5  1683               	bcf	status, 6	;RP1=0, select bank1
  5847  02F6  1303               	btfss	(148)^080h,0	;volatile
  5848  02F7  1C14               	goto	u1481
  5849  02F8  2AFA               	goto	u1480
  5850  02F9  2AFB               u1481:
  5851  02FA                     	goto	l172
  5852  02FA  2AF5               u1480:
  5853  02FB                     	goto	l175
  5854  02FB  2AFC               	
  5855                           l174:	
  5856  02FC                     	line	197
  5857                           	
  5858                           l175:	
  5859  02FC                     	return
  5860  02FC  0008               	opt stack 0
  5861                           GLOBAL	__end_of_spiWrite
  5862                           	__end_of_spiWrite:
  5863  02FD                     	signat	_spiWrite,4217
  5864                           	global	_activateSelectedRelay
  5865                           
  5866 ;; *************** function _activateSelectedRelay *****************
  5867 ;; Defined at:
  5868 ;;		line 3 in file "Input.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5882 ;;      Params:         0       0       0       0       0
  5883 ;;      Locals:         0       0       0       0       0
  5884 ;;      Temps:          0       0       0       0       0
  5885 ;;      Totals:         0       0       0       0       0
  5886 ;;Total ram usage:        0 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    4
  5889 ;; This function calls:
  5890 ;;		Nothing
  5891 ;; This function is called by:
  5892 ;;		_main
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5896                           	file	"Input.c"
  5897                           	line	3
  5898                           global __ptext18
  5899                           __ptext18:	;psect for function _activateSelectedRelay
  5900  0A54                     psect	text18
  5901                           	file	"Input.c"
  5902                           	line	3
  5903                           	global	__size_of_activateSelectedRelay
  5904                           	__size_of_activateSelectedRelay	equ	__end_of_activateSelectedRelay-_activateSelectedRel
                                 ay
  5905  0039                     	
  5906                           _activateSelectedRelay:	
  5907  0A54                     ;incstack = 0
  5908                           	opt	stack 3
  5909                           ; Regs used in _activateSelectedRelay: [wreg-fsr0h+status,2+status,0]
  5910                           	line	5
  5911                           	
  5912                           l2658:	
  5913  0A54                     ;Input.c: 5:     if (!_inputUpdateRequired) return;
  5914                           	bcf	status, 5	;RP0=0, select bank0
  5915  0A54  1283               	bcf	status, 6	;RP1=0, select bank0
  5916  0A55  1303               	movf	((__inputUpdateRequired)),w
  5917  0A56  0864               	btfss	status,2
  5918  0A57  1D03               	goto	u2751
  5919  0A58  2A5A               	goto	u2750
  5920  0A59  2A5B               u2751:
  5921  0A5A                     	goto	l2662
  5922  0A5A  2A5D               u2750:
  5923  0A5B                     	goto	l193
  5924  0A5B  2A8C               	
  5925                           l2660:	
  5926  0A5C                     	goto	l193
  5927  0A5C  2A8C               	
  5928                           l192:	
  5929  0A5D                     	line	7
  5930                           	
  5931                           l2662:	
  5932  0A5D                     ;Input.c: 7:     PORTA = 0x0F;
  5933                           	movlw	low(0Fh)
  5934  0A5D  300F               	movwf	(5)	;volatile
  5935  0A5E  0085               	line	9
  5936                           ;Input.c: 9:     switch (_selectedInput) {
  5937                           	goto	l2676
  5938  0A5F  2A75               	line	10
  5939                           ;Input.c: 10:         case 0:
  5940                           	
  5941                           l195:	
  5942  0A60                     	line	11
  5943                           	
  5944                           l2664:	
  5945  0A60                     ;Input.c: 11:             PORTA = ~0x01;
  5946                           	movlw	low(0FEh)
  5947  0A60  30FE               	bcf	status, 5	;RP0=0, select bank0
  5948  0A61  1283               	movwf	(5)	;volatile
  5949  0A62  0085               	line	12
  5950                           ;Input.c: 12:             break;
  5951                           	goto	l2678
  5952  0A63  2A8A               	line	13
  5953                           ;Input.c: 13:         case 1:
  5954                           	
  5955                           l197:	
  5956  0A64                     	line	14
  5957                           	
  5958                           l2666:	
  5959  0A64                     ;Input.c: 14:             PORTA = ~0x02;
  5960                           	movlw	low(0FDh)
  5961  0A64  30FD               	bcf	status, 5	;RP0=0, select bank0
  5962  0A65  1283               	movwf	(5)	;volatile
  5963  0A66  0085               	line	15
  5964                           ;Input.c: 15:             break;
  5965                           	goto	l2678
  5966  0A67  2A8A               	line	16
  5967                           ;Input.c: 16:         case 2:
  5968                           	
  5969                           l198:	
  5970  0A68                     	line	17
  5971                           	
  5972                           l2668:	
  5973  0A68                     ;Input.c: 17:             PORTA = ~0x04;
  5974                           	movlw	low(0FBh)
  5975  0A68  30FB               	bcf	status, 5	;RP0=0, select bank0
  5976  0A69  1283               	movwf	(5)	;volatile
  5977  0A6A  0085               	line	18
  5978                           ;Input.c: 18:             break;
  5979                           	goto	l2678
  5980  0A6B  2A8A               	line	19
  5981                           ;Input.c: 19:         case 3:
  5982                           	
  5983                           l199:	
  5984  0A6C                     	line	20
  5985                           	
  5986                           l2670:	
  5987  0A6C                     ;Input.c: 20:             PORTA = ~0x08;
  5988                           	movlw	low(0F7h)
  5989  0A6C  30F7               	bcf	status, 5	;RP0=0, select bank0
  5990  0A6D  1283               	movwf	(5)	;volatile
  5991  0A6E  0085               	line	21
  5992                           ;Input.c: 21:             break;
  5993                           	goto	l2678
  5994  0A6F  2A8A               	line	22
  5995                           ;Input.c: 22:         default:
  5996                           	
  5997                           l200:	
  5998  0A70                     	line	23
  5999                           	
  6000                           l2672:	
  6001  0A70                     ;Input.c: 23:             PORTA = ~0x01;
  6002                           	movlw	low(0FEh)
  6003  0A70  30FE               	bcf	status, 5	;RP0=0, select bank0
  6004  0A71  1283               	movwf	(5)	;volatile
  6005  0A72  0085               	line	24
  6006                           ;Input.c: 24:             break;
  6007                           	goto	l2678
  6008  0A73  2A8A               	line	25
  6009                           	
  6010                           l2674:	
  6011  0A74                     ;Input.c: 25:     }
  6012                           	goto	l2678
  6013  0A74  2A8A               	
  6014                           l194:	
  6015  0A75                     	
  6016                           l2676:	
  6017  0A75                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  6018                           ; Switch size 1, requested type "space"
  6019                           ; Number of cases is 1, Range of values is 0 to 0
  6020                           ; switch strategies available:
  6021                           ; Name         Instructions Cycles
  6022                           ; simple_byte            4     3 (average)
  6023                           ; direct_byte           11     8 (fixed)
  6024                           ; jumptable            260     6 (fixed)
  6025                           ;	Chosen strategy is simple_byte
  6026                           
  6027                           	bsf	status, 5	;RP0=1, select bank1
  6028  0A75  1683               	bcf	status, 6	;RP1=0, select bank1
  6029  0A76  1303               	movf (__selectedInput+1)^080h,w
  6030  0A77  084C               	opt asmopt_push
  6031                           	opt asmopt_off
  6032                           	xorlw	0^0	; case 0
  6033  0A78  3A00               	skipnz
  6034  0A79  1903               	goto	l2854
  6035  0A7A  2A7C               	goto	l2672
  6036  0A7B  2A70               	opt asmopt_pop
  6037                           	
  6038                           l2854:	
  6039  0A7C                     ; Switch size 1, requested type "space"
  6040                           ; Number of cases is 4, Range of values is 0 to 3
  6041                           ; switch strategies available:
  6042                           ; Name         Instructions Cycles
  6043                           ; simple_byte           13     7 (average)
  6044                           ; direct_byte           20     8 (fixed)
  6045                           ; jumptable            260     6 (fixed)
  6046                           ;	Chosen strategy is simple_byte
  6047                           
  6048                           	movf (__selectedInput)^080h,w
  6049  0A7C  084B               	opt asmopt_push
  6050                           	opt asmopt_off
  6051                           	xorlw	0^0	; case 0
  6052  0A7D  3A00               	skipnz
  6053  0A7E  1903               	goto	l2664
  6054  0A7F  2A60               	xorlw	1^0	; case 1
  6055  0A80  3A01               	skipnz
  6056  0A81  1903               	goto	l2666
  6057  0A82  2A64               	xorlw	2^1	; case 2
  6058  0A83  3A03               	skipnz
  6059  0A84  1903               	goto	l2668
  6060  0A85  2A68               	xorlw	3^2	; case 3
  6061  0A86  3A01               	skipnz
  6062  0A87  1903               	goto	l2670
  6063  0A88  2A6C               	goto	l2672
  6064  0A89  2A70               	opt asmopt_pop
  6065                           
  6066                           	
  6067                           l196:	
  6068  0A8A                     	line	27
  6069                           	
  6070                           l2678:	
  6071  0A8A                     ;Input.c: 27:     _inputUpdateRequired = 0;
  6072                           	bcf	status, 5	;RP0=0, select bank0
  6073  0A8A  1283               	clrf	(__inputUpdateRequired)
  6074  0A8B  01E4               	line	28
  6075                           	
  6076                           l193:	
  6077  0A8C                     	return
  6078  0A8C  0008               	opt stack 0
  6079                           GLOBAL	__end_of_activateSelectedRelay
  6080                           	__end_of_activateSelectedRelay:
  6081  0A8D                     	signat	_activateSelectedRelay,89
  6082                           	global	_isr
  6083                           
  6084 ;; *************** function _isr *****************
  6085 ;; Defined at:
  6086 ;;		line 44 in file "main.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6100 ;;      Params:         0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0
  6102 ;;      Temps:          0       4       0       0       0
  6103 ;;      Totals:         0       4       0       0       0
  6104 ;;Total ram usage:        4 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; Hardware stack levels required when called:    3
  6107 ;; This function calls:
  6108 ;;		_handle_potmeter
  6109 ;;		_handle_rotary
  6110 ;;		_start_receive
  6111 ;; This function is called by:
  6112 ;;		Interrupt level 1
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  6116                           	file	"main.c"
  6117                           	line	44
  6118                           global __ptext19
  6119                           __ptext19:	;psect for function _isr
  6120  09ED                     psect	text19
  6121                           	file	"main.c"
  6122                           	line	44
  6123                           	global	__size_of_isr
  6124                           	__size_of_isr	equ	__end_of_isr-_isr
  6125  0031                     	
  6126                           _isr:	
  6127  09ED                     ;incstack = 0
  6128 ;; hardware stack exceeded
  6129                           	opt	stack 0
  6130                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6131                           psect	intentry,class=CODE,delta=2
  6132                           global __pintentry
  6133                           __pintentry:
  6134  0004                     global interrupt_function
  6135                           interrupt_function:
  6136  0004                     	global saved_w
  6137                           	saved_w	set	btemp+0
  6138  007E                     	movwf	saved_w
  6139  0004  00FE               	swapf	status,w
  6140  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  6141  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  6142  0007  1303               	movwf	(??_isr+0)
  6143  0008  00D6               	movf	fsr0,w
  6144  0009  0804               	movwf	(??_isr+1)
  6145  000A  00D7               	movf	pclath,w
  6146  000B  080A               	movwf	(??_isr+2)
  6147  000C  00D8               	movf	btemp+1,w
  6148  000D  087F               	movwf	(??_isr+3)
  6149  000E  00D9               	ljmp	_isr
  6150  000F  120A  158A  29ED   psect	text19
  6151                           	line	46
  6152                           	
  6153                           i1l2756:	
  6154  09ED                     ;main.c: 46:     if (INTCONbits.RBIF) {
  6155                           	btfss	(11),0	;volatile
  6156  09ED  1C0B               	goto	u292_21
  6157  09EE  29F0               	goto	u292_20
  6158  09EF  29F1               u292_21:
  6159  09F0                     	goto	i1l2766
  6160  09F0  2A04               u292_20:
  6161  09F1                     	line	48
  6162                           	
  6163                           i1l2758:	
  6164  09F1                     ;main.c: 48:         handle_rotary();
  6165                           	fcall	_handle_rotary
  6166  09F1  120A  158A  26FD  120A  158A  	line	50
  6167                           	
  6168                           i1l2760:	
  6169  09F6                     ;main.c: 50:         if (PORTBbits.RB0 == 0) {
  6170                           	bcf	status, 5	;RP0=0, select bank0
  6171  09F6  1283               	bcf	status, 6	;RP1=0, select bank0
  6172  09F7  1303               	btfsc	(6),0	;volatile
  6173  09F8  1806               	goto	u293_21
  6174  09F9  29FB               	goto	u293_20
  6175  09FA  29FC               u293_21:
  6176  09FB                     	goto	i1l2764
  6177  09FB  2A02               u293_20:
  6178  09FC                     	line	51
  6179                           	
  6180                           i1l2762:	
  6181  09FC                     ;main.c: 51:             start_receive();
  6182                           	fcall	_start_receive
  6183  09FC  120A  158A  260A  120A  158A  	goto	i1l2764
  6184  0A01  2A02               	line	52
  6185                           ;main.c: 52:         }
  6186                           	
  6187                           i1l63:	
  6188  0A02                     	line	54
  6189                           	
  6190                           i1l2764:	
  6191  0A02                     ;main.c: 54:         INTCONbits.RBIF = 0;
  6192                           	bcf	(11),0	;volatile
  6193  0A02  100B               	goto	i1l2766
  6194  0A03  2A04               	line	55
  6195                           ;main.c: 55:     }
  6196                           	
  6197                           i1l62:	
  6198  0A04                     	line	57
  6199                           	
  6200                           i1l2766:	
  6201  0A04                     ;main.c: 57:     if (PIR1bits.ADIF) {
  6202                           	bcf	status, 5	;RP0=0, select bank0
  6203  0A04  1283               	bcf	status, 6	;RP1=0, select bank0
  6204  0A05  1303               	btfss	(12),6	;volatile
  6205  0A06  1F0C               	goto	u294_21
  6206  0A07  2A09               	goto	u294_20
  6207  0A08  2A0A               u294_21:
  6208  0A09                     	goto	i1l65
  6209  0A09  2A13               u294_20:
  6210  0A0A                     	line	59
  6211                           	
  6212                           i1l2768:	
  6213  0A0A                     ;main.c: 59:         handle_potmeter();
  6214                           	fcall	_handle_potmeter
  6215  0A0A  120A  158A  277E  120A  158A  	line	61
  6216                           	
  6217                           i1l2770:	
  6218  0A0F                     ;main.c: 61:         PIR1bits.ADIF = 0;
  6219                           	bcf	status, 5	;RP0=0, select bank0
  6220  0A0F  1283               	bcf	status, 6	;RP1=0, select bank0
  6221  0A10  1303               	bcf	(12),6	;volatile
  6222  0A11  130C               	goto	i1l65
  6223  0A12  2A13               	line	62
  6224                           ;main.c: 62:     }
  6225                           	
  6226                           i1l64:	
  6227  0A13                     	line	64
  6228                           	
  6229                           i1l65:	
  6230  0A13                     	movf	(??_isr+3),w
  6231  0A13  0859               	movwf	btemp+1
  6232  0A14  00FF               	movf	(??_isr+2),w
  6233  0A15  0858               	movwf	pclath
  6234  0A16  008A               	movf	(??_isr+1),w
  6235  0A17  0857               	movwf	fsr0
  6236  0A18  0084               	swapf	(??_isr+0)^00h,w
  6237  0A19  0E56               	movwf	status
  6238  0A1A  0083               	swapf	saved_w,f
  6239  0A1B  0EFE               	swapf	saved_w,w
  6240  0A1C  0E7E               	retfie
  6241  0A1D  0009               	opt stack 0
  6242                           GLOBAL	__end_of_isr
  6243                           	__end_of_isr:
  6244  0A1E                     	signat	_isr,89
  6245                           	global	_start_receive
  6246                           
  6247 ;; *************** function _start_receive *****************
  6248 ;; Defined at:
  6249 ;;		line 12 in file "Remote.c"
  6250 ;; Parameters:    Size  Location     Type
  6251 ;;		None
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  i               2    0[BANK0 ] int 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6263 ;;      Params:         0       0       0       0       0
  6264 ;;      Locals:         0       2       0       0       0
  6265 ;;      Temps:          8       0       0       0       0
  6266 ;;      Totals:         8       2       0       0       0
  6267 ;;Total ram usage:       10 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    1
  6270 ;; This function calls:
  6271 ;;		_handle_remote
  6272 ;; This function is called by:
  6273 ;;		_isr
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6277                           	file	"Remote.c"
  6278                           	line	12
  6279                           global __ptext20
  6280                           __ptext20:	;psect for function _start_receive
  6281  0E0A                     psect	text20
  6282                           	file	"Remote.c"
  6283                           	line	12
  6284                           	global	__size_of_start_receive
  6285                           	__size_of_start_receive	equ	__end_of_start_receive-_start_receive
  6286  0074                     	
  6287                           _start_receive:	
  6288  0E0A                     ;incstack = 0
  6289 ;; hardware stack exceeded
  6290                           	opt	stack 0
  6291                           ; Regs used in _start_receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6292                           	line	14
  6293                           	
  6294                           i1l2712:	
  6295  0E0A                     ;Remote.c: 14:     ir_input = 0;
  6296                           	movlw	high highword(0)
  6297  0E0A  3000               	bcf	status, 5	;RP0=0, select bank0
  6298  0E0B  1283               	bcf	status, 6	;RP1=0, select bank0
  6299  0E0C  1303               	movwf	(_ir_input+3)
  6300  0E0D  00DD               	movlw	low highword(0)
  6301  0E0E  3000               	movwf	(_ir_input+2)
  6302  0E0F  00DC               	movlw	high(0)
  6303  0E10  3000               	movwf	(_ir_input+1)
  6304  0E11  00DB               	movlw	low(0)
  6305  0E12  3000               	movwf	(_ir_input)
  6306  0E13  00DA               
  6307                           	line	17
  6308                           ;Remote.c: 17:     _delay((unsigned long)((844)*(4000000/4000000.0)));
  6309                           	opt asmopt_push
  6310                           opt asmopt_off
  6311                           	movlw	168
  6312  0E14  30A8               movwf	((??_start_receive+0)+0),f
  6313  0E15  00F5               	u296_27:
  6314  0E16                     	nop2
  6315  0E16  2E17               decfsz	(??_start_receive+0)+0,f
  6316  0E17  0BF5               	goto	u296_27
  6317  0E18  2E16               	nop2
  6318  0E19  2E1A               	nop
  6319  0E1A  0000               opt asmopt_pop
  6320                           
  6321                           	line	18
  6322                           	
  6323                           i1l2714:	
  6324  0E1B                     ;Remote.c: 18:     for (int i = 0; i < 12; i++) {
  6325                           	bcf	status, 5	;RP0=0, select bank0
  6326  0E1B  1283               	bcf	status, 6	;RP1=0, select bank0
  6327  0E1C  1303               	clrf	(start_receive@i)
  6328  0E1D  01A0               	clrf	(start_receive@i+1)
  6329  0E1E  01A1               	
  6330                           i1l2716:	
  6331  0E1F                     	movf	(start_receive@i+1),w
  6332  0E1F  0821               	xorlw	80h
  6333  0E20  3A80               	movwf	btemp+1
  6334  0E21  00FF               	movlw	(0)^80h
  6335  0E22  3080               	subwf	btemp+1,w
  6336  0E23  027F               	skipz
  6337  0E24  1D03               	goto	u284_25
  6338  0E25  2E28               	movlw	0Ch
  6339  0E26  300C               	subwf	(start_receive@i),w
  6340  0E27  0220               u284_25:
  6341  0E28                     
  6342                           	skipc
  6343  0E28  1C03               	goto	u284_21
  6344  0E29  2E2B               	goto	u284_20
  6345  0E2A  2E2C               u284_21:
  6346  0E2B                     	goto	i1l2720
  6347  0E2B  2E2E               u284_20:
  6348  0E2C                     	goto	i1l2728
  6349  0E2C  2E78               	
  6350                           i1l2718:	
  6351  0E2D                     	goto	i1l2728
  6352  0E2D  2E78               	
  6353                           i1l330:	
  6354  0E2E                     	line	19
  6355                           	
  6356                           i1l2720:	
  6357  0E2E                     ;Remote.c: 19:         ir_input = (ir_input << 1) | !PORTBbits.RB0;
  6358                           	clrc
  6359  0E2E  1003               	bcf	status, 5	;RP0=0, select bank0
  6360  0E2F  1283               	bcf	status, 6	;RP1=0, select bank0
  6361  0E30  1303               	btfss	(6),0	;volatile
  6362  0E31  1C06               	setc
  6363  0E32  1403               	movlw	0
  6364  0E33  3000               	skipnc
  6365  0E34  1803               	movlw	1
  6366  0E35  3001               
  6367                           	movwf	(??_start_receive+0)+0
  6368  0E36  00F5               	clrf	((??_start_receive+0)+0+1)
  6369  0E37  01F6               	clrf	((??_start_receive+0)+0+2)
  6370  0E38  01F7               	clrf	((??_start_receive+0)+0+3)
  6371  0E39  01F8               	movf	(_ir_input),w
  6372  0E3A  085A               	movwf	(??_start_receive+4)+0
  6373  0E3B  00F9               	movf	(_ir_input+1),w
  6374  0E3C  085B               	movwf	((??_start_receive+4)+0+1)
  6375  0E3D  00FA               	movf	(_ir_input+2),w
  6376  0E3E  085C               	movwf	((??_start_receive+4)+0+2)
  6377  0E3F  00FB               	movf	(_ir_input+3),w
  6378  0E40  085D               	movwf	((??_start_receive+4)+0+3)
  6379  0E41  00FC               	movlw	01h
  6380  0E42  3001               u285_25:
  6381  0E43                     	clrc
  6382  0E43  1003               	rlf	(??_start_receive+4)+0,f
  6383  0E44  0DF9               	rlf	(??_start_receive+4)+1,f
  6384  0E45  0DFA               	rlf	(??_start_receive+4)+2,f
  6385  0E46  0DFB               	rlf	(??_start_receive+4)+3,f
  6386  0E47  0DFC               u285_20:
  6387  0E48                     	addlw	-1
  6388  0E48  3EFF               	skipz
  6389  0E49  1D03               	goto	u285_25
  6390  0E4A  2E43               	movf	0+(??_start_receive+4)+0,w
  6391  0E4B  0879               	iorwf	(??_start_receive+0)+0,f
  6392  0E4C  04F5               	movf	1+(??_start_receive+4)+0,w
  6393  0E4D  087A               	iorwf	(??_start_receive+0)+1,f
  6394  0E4E  04F6               	movf	2+(??_start_receive+4)+0,w
  6395  0E4F  087B               	iorwf	(??_start_receive+0)+2,f
  6396  0E50  04F7               	movf	3+(??_start_receive+4)+0,w
  6397  0E51  087C               	iorwf	(??_start_receive+0)+3,f
  6398  0E52  04F8               	movf	3+(??_start_receive+0)+0,w
  6399  0E53  0878               	movwf	(_ir_input+3)
  6400  0E54  00DD               	movf	2+(??_start_receive+0)+0,w
  6401  0E55  0877               	movwf	(_ir_input+2)
  6402  0E56  00DC               	movf	1+(??_start_receive+0)+0,w
  6403  0E57  0876               	movwf	(_ir_input+1)
  6404  0E58  00DB               	movf	0+(??_start_receive+0)+0,w
  6405  0E59  0875               	movwf	(_ir_input)
  6406  0E5A  00DA               
  6407                           	line	21
  6408                           	
  6409                           i1l2722:	
  6410  0E5B                     ;Remote.c: 21:         _delay((unsigned long)((844)*(4000000/4000000.0)));
  6411                           	opt asmopt_push
  6412                           opt asmopt_off
  6413                           	movlw	168
  6414  0E5B  30A8               movwf	((??_start_receive+0)+0),f
  6415  0E5C  00F5               	u297_27:
  6416  0E5D                     	nop2
  6417  0E5D  2E5E               decfsz	(??_start_receive+0)+0,f
  6418  0E5E  0BF5               	goto	u297_27
  6419  0E5F  2E5D               	nop2
  6420  0E60  2E61               	nop
  6421  0E61  0000               opt asmopt_pop
  6422                           
  6423                           	line	22
  6424                           	
  6425                           i1l2724:	
  6426  0E62                     ;Remote.c: 22:     }
  6427                           	movlw	01h
  6428  0E62  3001               	bcf	status, 5	;RP0=0, select bank0
  6429  0E63  1283               	bcf	status, 6	;RP1=0, select bank0
  6430  0E64  1303               	addwf	(start_receive@i),f
  6431  0E65  07A0               	skipnc
  6432  0E66  1803               	incf	(start_receive@i+1),f
  6433  0E67  0AA1               	movlw	0
  6434  0E68  3000               	addwf	(start_receive@i+1),f
  6435  0E69  07A1               	
  6436                           i1l2726:	
  6437  0E6A                     	movf	(start_receive@i+1),w
  6438  0E6A  0821               	xorlw	80h
  6439  0E6B  3A80               	movwf	btemp+1
  6440  0E6C  00FF               	movlw	(0)^80h
  6441  0E6D  3080               	subwf	btemp+1,w
  6442  0E6E  027F               	skipz
  6443  0E6F  1D03               	goto	u286_25
  6444  0E70  2E73               	movlw	0Ch
  6445  0E71  300C               	subwf	(start_receive@i),w
  6446  0E72  0220               u286_25:
  6447  0E73                     
  6448                           	skipc
  6449  0E73  1C03               	goto	u286_21
  6450  0E74  2E76               	goto	u286_20
  6451  0E75  2E77               u286_21:
  6452  0E76                     	goto	i1l2720
  6453  0E76  2E2E               u286_20:
  6454  0E77                     	goto	i1l2728
  6455  0E77  2E78               	
  6456                           i1l331:	
  6457  0E78                     	line	24
  6458                           	
  6459                           i1l2728:	
  6460  0E78                     ;Remote.c: 24:     handle_remote();
  6461                           	fcall	_handle_remote
  6462  0E78  120A  158A  267E  120A  158A  	line	25
  6463                           	
  6464                           i1l332:	
  6465  0E7D                     	return
  6466  0E7D  0008               	opt stack 0
  6467                           GLOBAL	__end_of_start_receive
  6468                           	__end_of_start_receive:
  6469  0E7E                     	signat	_start_receive,89
  6470                           	global	_handle_remote
  6471                           
  6472 ;; *************** function _handle_remote *****************
  6473 ;; Defined at:
  6474 ;;		line 28 in file "Remote.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;  data            2    2[COMMON] unsigned int 
  6479 ;;  mask            2    0[COMMON] unsigned int 
  6480 ;;  found           1    4[COMMON] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6490 ;;      Params:         0       0       0       0       0
  6491 ;;      Locals:         5       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0
  6493 ;;      Totals:         5       0       0       0       0
  6494 ;;Total ram usage:        5 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_start_receive
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6503                           	line	28
  6504                           global __ptext21
  6505                           __ptext21:	;psect for function _handle_remote
  6506  0E7E                     psect	text21
  6507                           	file	"Remote.c"
  6508                           	line	28
  6509                           	global	__size_of_handle_remote
  6510                           	__size_of_handle_remote	equ	__end_of_handle_remote-_handle_remote
  6511  007F                     	
  6512                           _handle_remote:	
  6513  0E7E                     ;incstack = 0
  6514 ;; hardware stack exceeded
  6515                           	opt	stack 0
  6516                           ; Regs used in _handle_remote: [wreg-fsr0h+status,2+status,0]
  6517                           	line	30
  6518                           	
  6519                           i1l2480:	
  6520  0E7E                     ;Remote.c: 30:     char found = 0;
  6521                           	clrf	(handle_remote@found)
  6522  0E7E  01F4               	line	32
  6523                           	
  6524                           i1l2482:	
  6525  0E7F                     ;Remote.c: 32:     unsigned int mask = 0b0000000111111111;
  6526                           	movlw	0FFh
  6527  0E7F  30FF               	movwf	(handle_remote@mask)
  6528  0E80  00F0               	movlw	01h
  6529  0E81  3001               	movwf	((handle_remote@mask))+1
  6530  0E82  00F1               	line	34
  6531                           	
  6532                           i1l2484:	
  6533  0E83                     ;Remote.c: 34:     unsigned int data = ir_input & mask;
  6534                           	bcf	status, 5	;RP0=0, select bank0
  6535  0E83  1283               	bcf	status, 6	;RP1=0, select bank0
  6536  0E84  1303               	movf	(_ir_input),w
  6537  0E85  085A               	andwf	(handle_remote@mask),w
  6538  0E86  0570               	movwf	(handle_remote@data)
  6539  0E87  00F2               	movf	(_ir_input+1),w
  6540  0E88  085B               	andwf	(handle_remote@mask+1),w
  6541  0E89  0571               	movwf	1+(handle_remote@data)
  6542  0E8A  00F3               	line	36
  6543                           ;Remote.c: 36:     switch (data) {
  6544                           	goto	i1l2520
  6545  0E8B  2ED5               	line	37
  6546                           ;Remote.c: 37:         case 72:
  6547                           	
  6548                           i1l336:	
  6549  0E8C                     	line	38
  6550                           	
  6551                           i1l2486:	
  6552  0E8C                     ;Remote.c: 38:             _selectedInput = 0;
  6553                           	bsf	status, 5	;RP0=1, select bank1
  6554  0E8C  1683               	bcf	status, 6	;RP1=0, select bank1
  6555  0E8D  1303               	clrf	(__selectedInput)^080h
  6556  0E8E  01CB               	clrf	(__selectedInput+1)^080h
  6557  0E8F  01CC               	line	39
  6558                           	
  6559                           i1l2488:	
  6560  0E90                     ;Remote.c: 39:             _inputUpdateRequired = 1;
  6561                           	bcf	status, 5	;RP0=0, select bank0
  6562  0E90  1283               	bcf	status, 6	;RP1=0, select bank0
  6563  0E91  1303               	clrf	(__inputUpdateRequired)
  6564  0E92  01E4               	incf	(__inputUpdateRequired),f
  6565  0E93  0AE4               	line	40
  6566                           	
  6567                           i1l2490:	
  6568  0E94                     ;Remote.c: 40:             found = 1;
  6569                           	clrf	(handle_remote@found)
  6570  0E94  01F4               	incf	(handle_remote@found),f
  6571  0E95  0AF4               	line	41
  6572                           ;Remote.c: 41:             break;
  6573                           	goto	i1l2522
  6574  0E96  2EF3               	line	42
  6575                           ;Remote.c: 42:         case 264:
  6576                           	
  6577                           i1l338:	
  6578  0E97                     	line	43
  6579                           	
  6580                           i1l2492:	
  6581  0E97                     ;Remote.c: 43:             _selectedInput = 1;
  6582                           	movlw	01h
  6583  0E97  3001               	bsf	status, 5	;RP0=1, select bank1
  6584  0E98  1683               	bcf	status, 6	;RP1=0, select bank1
  6585  0E99  1303               	movwf	(__selectedInput)^080h
  6586  0E9A  00CB               	movlw	0
  6587  0E9B  3000               	movwf	((__selectedInput)^080h)+1
  6588  0E9C  00CC               	line	44
  6589                           	
  6590                           i1l2494:	
  6591  0E9D                     ;Remote.c: 44:             _inputUpdateRequired = 1;
  6592                           	bcf	status, 5	;RP0=0, select bank0
  6593  0E9D  1283               	bcf	status, 6	;RP1=0, select bank0
  6594  0E9E  1303               	clrf	(__inputUpdateRequired)
  6595  0E9F  01E4               	incf	(__inputUpdateRequired),f
  6596  0EA0  0AE4               	line	45
  6597                           	
  6598                           i1l2496:	
  6599  0EA1                     ;Remote.c: 45:             found = 1;
  6600                           	clrf	(handle_remote@found)
  6601  0EA1  01F4               	incf	(handle_remote@found),f
  6602  0EA2  0AF4               	line	46
  6603                           ;Remote.c: 46:             break;
  6604                           	goto	i1l2522
  6605  0EA3  2EF3               	line	47
  6606                           ;Remote.c: 47:         case 160:
  6607                           	
  6608                           i1l339:	
  6609  0EA4                     	line	48
  6610                           	
  6611                           i1l2498:	
  6612  0EA4                     ;Remote.c: 48:             _selectedInput = 2;
  6613                           	movlw	02h
  6614  0EA4  3002               	bsf	status, 5	;RP0=1, select bank1
  6615  0EA5  1683               	bcf	status, 6	;RP1=0, select bank1
  6616  0EA6  1303               	movwf	(__selectedInput)^080h
  6617  0EA7  00CB               	movlw	0
  6618  0EA8  3000               	movwf	((__selectedInput)^080h)+1
  6619  0EA9  00CC               	line	49
  6620                           	
  6621                           i1l2500:	
  6622  0EAA                     ;Remote.c: 49:             _inputUpdateRequired = 1;
  6623                           	bcf	status, 5	;RP0=0, select bank0
  6624  0EAA  1283               	bcf	status, 6	;RP1=0, select bank0
  6625  0EAB  1303               	clrf	(__inputUpdateRequired)
  6626  0EAC  01E4               	incf	(__inputUpdateRequired),f
  6627  0EAD  0AE4               	line	50
  6628                           	
  6629                           i1l2502:	
  6630  0EAE                     ;Remote.c: 50:             found = 1;
  6631                           	clrf	(handle_remote@found)
  6632  0EAE  01F4               	incf	(handle_remote@found),f
  6633  0EAF  0AF4               	line	51
  6634                           ;Remote.c: 51:             break;
  6635                           	goto	i1l2522
  6636  0EB0  2EF3               	line	52
  6637                           ;Remote.c: 52:         case 136:
  6638                           	
  6639                           i1l340:	
  6640  0EB1                     	line	53
  6641                           	
  6642                           i1l2504:	
  6643  0EB1                     ;Remote.c: 53:             _selectedInput = 3;
  6644                           	movlw	03h
  6645  0EB1  3003               	bsf	status, 5	;RP0=1, select bank1
  6646  0EB2  1683               	bcf	status, 6	;RP1=0, select bank1
  6647  0EB3  1303               	movwf	(__selectedInput)^080h
  6648  0EB4  00CB               	movlw	0
  6649  0EB5  3000               	movwf	((__selectedInput)^080h)+1
  6650  0EB6  00CC               	line	54
  6651                           	
  6652                           i1l2506:	
  6653  0EB7                     ;Remote.c: 54:             _inputUpdateRequired = 1;
  6654                           	bcf	status, 5	;RP0=0, select bank0
  6655  0EB7  1283               	bcf	status, 6	;RP1=0, select bank0
  6656  0EB8  1303               	clrf	(__inputUpdateRequired)
  6657  0EB9  01E4               	incf	(__inputUpdateRequired),f
  6658  0EBA  0AE4               	line	55
  6659                           	
  6660                           i1l2508:	
  6661  0EBB                     ;Remote.c: 55:             found = 1;
  6662                           	clrf	(handle_remote@found)
  6663  0EBB  01F4               	incf	(handle_remote@found),f
  6664  0EBC  0AF4               	line	56
  6665                           ;Remote.c: 56:             break;
  6666                           	goto	i1l2522
  6667  0EBD  2EF3               	line	57
  6668                           ;Remote.c: 57:         case 288:
  6669                           	
  6670                           i1l341:	
  6671  0EBE                     	line	58
  6672                           	
  6673                           i1l2510:	
  6674  0EBE                     ;Remote.c: 58:             volume++;
  6675                           	movlw	01h
  6676  0EBE  3001               	bsf	status, 5	;RP0=1, select bank1
  6677  0EBF  1683               	bcf	status, 6	;RP1=0, select bank1
  6678  0EC0  1303               	addwf	(_volume)^080h,f
  6679  0EC1  07C9               	skipnc
  6680  0EC2  1803               	incf	(_volume+1)^080h,f
  6681  0EC3  0ACA               	movlw	0
  6682  0EC4  3000               	addwf	(_volume+1)^080h,f
  6683  0EC5  07CA               	line	59
  6684                           	
  6685                           i1l2512:	
  6686  0EC6                     ;Remote.c: 59:             found = 1;
  6687                           	clrf	(handle_remote@found)
  6688  0EC6  01F4               	incf	(handle_remote@found),f
  6689  0EC7  0AF4               	line	60
  6690                           ;Remote.c: 60:             break;
  6691                           	goto	i1l2522
  6692  0EC8  2EF3               	line	61
  6693                           ;Remote.c: 61:         case 272:
  6694                           	
  6695                           i1l342:	
  6696  0EC9                     	line	62
  6697                           	
  6698                           i1l2514:	
  6699  0EC9                     ;Remote.c: 62:             volume--;
  6700                           	movlw	0FFh
  6701  0EC9  30FF               	bsf	status, 5	;RP0=1, select bank1
  6702  0ECA  1683               	bcf	status, 6	;RP1=0, select bank1
  6703  0ECB  1303               	addwf	(_volume)^080h,f
  6704  0ECC  07C9               	skipnc
  6705  0ECD  1803               	incf	(_volume+1)^080h,f
  6706  0ECE  0ACA               	movlw	0FFh
  6707  0ECF  30FF               	addwf	(_volume+1)^080h,f
  6708  0ED0  07CA               	line	63
  6709                           	
  6710                           i1l2516:	
  6711  0ED1                     ;Remote.c: 63:             found = 1;
  6712                           	clrf	(handle_remote@found)
  6713  0ED1  01F4               	incf	(handle_remote@found),f
  6714  0ED2  0AF4               	line	64
  6715                           ;Remote.c: 64:             break;
  6716                           	goto	i1l2522
  6717  0ED3  2EF3               	line	65
  6718                           	
  6719                           i1l2518:	
  6720  0ED4                     ;Remote.c: 65:     }
  6721                           	goto	i1l2522
  6722  0ED4  2EF3               	
  6723                           i1l335:	
  6724  0ED5                     	
  6725                           i1l2520:	
  6726  0ED5                     	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-s
                                 witches
  6727                           ; Switch size 1, requested type "space"
  6728                           ; Number of cases is 2, Range of values is 0 to 1
  6729                           ; switch strategies available:
  6730                           ; Name         Instructions Cycles
  6731                           ; simple_byte            7     4 (average)
  6732                           ; direct_byte           14     8 (fixed)
  6733                           ; jumptable            260     6 (fixed)
  6734                           ;	Chosen strategy is simple_byte
  6735                           
  6736                           	movf (handle_remote@data+1),w
  6737  0ED5  0873               	opt asmopt_push
  6738                           	opt asmopt_off
  6739                           	xorlw	0^0	; case 0
  6740  0ED6  3A00               	skipnz
  6741  0ED7  1903               	goto	i1l2856
  6742  0ED8  2EDD               	xorlw	1^0	; case 1
  6743  0ED9  3A01               	skipnz
  6744  0EDA  1903               	goto	i1l2858
  6745  0EDB  2EE8               	goto	i1l2522
  6746  0EDC  2EF3               	opt asmopt_pop
  6747                           	
  6748                           i1l2856:	
  6749  0EDD                     ; Switch size 1, requested type "space"
  6750                           ; Number of cases is 3, Range of values is 72 to 160
  6751                           ; switch strategies available:
  6752                           ; Name         Instructions Cycles
  6753                           ; simple_byte           10     6 (average)
  6754                           ; jumptable            263     9 (fixed)
  6755                           ;	Chosen strategy is simple_byte
  6756                           
  6757                           	movf (handle_remote@data),w
  6758  0EDD  0872               	opt asmopt_push
  6759                           	opt asmopt_off
  6760                           	xorlw	72^0	; case 72
  6761  0EDE  3A48               	skipnz
  6762  0EDF  1903               	goto	i1l2486
  6763  0EE0  2E8C               	xorlw	136^72	; case 136
  6764  0EE1  3AC0               	skipnz
  6765  0EE2  1903               	goto	i1l2504
  6766  0EE3  2EB1               	xorlw	160^136	; case 160
  6767  0EE4  3A28               	skipnz
  6768  0EE5  1903               	goto	i1l2498
  6769  0EE6  2EA4               	goto	i1l2522
  6770  0EE7  2EF3               	opt asmopt_pop
  6771                           	
  6772                           i1l2858:	
  6773  0EE8                     ; Switch size 1, requested type "space"
  6774                           ; Number of cases is 3, Range of values is 8 to 32
  6775                           ; switch strategies available:
  6776                           ; Name         Instructions Cycles
  6777                           ; simple_byte           10     6 (average)
  6778                           ; direct_byte           86    11 (fixed)
  6779                           ; jumptable            263     9 (fixed)
  6780                           ;	Chosen strategy is simple_byte
  6781                           
  6782                           	movf (handle_remote@data),w
  6783  0EE8  0872               	opt asmopt_push
  6784                           	opt asmopt_off
  6785                           	xorlw	8^0	; case 8
  6786  0EE9  3A08               	skipnz
  6787  0EEA  1903               	goto	i1l2492
  6788  0EEB  2E97               	xorlw	16^8	; case 16
  6789  0EEC  3A18               	skipnz
  6790  0EED  1903               	goto	i1l2514
  6791  0EEE  2EC9               	xorlw	32^16	; case 32
  6792  0EEF  3A30               	skipnz
  6793  0EF0  1903               	goto	i1l2510
  6794  0EF1  2EBE               	goto	i1l2522
  6795  0EF2  2EF3               	opt asmopt_pop
  6796                           
  6797                           	
  6798                           i1l337:	
  6799  0EF3                     	line	67
  6800                           	
  6801                           i1l2522:	
  6802  0EF3                     ;Remote.c: 67:     ir_input = 0;
  6803                           	movlw	high highword(0)
  6804  0EF3  3000               	bcf	status, 5	;RP0=0, select bank0
  6805  0EF4  1283               	movwf	(_ir_input+3)
  6806  0EF5  00DD               	movlw	low highword(0)
  6807  0EF6  3000               	movwf	(_ir_input+2)
  6808  0EF7  00DC               	movlw	high(0)
  6809  0EF8  3000               	movwf	(_ir_input+1)
  6810  0EF9  00DB               	movlw	low(0)
  6811  0EFA  3000               	movwf	(_ir_input)
  6812  0EFB  00DA               
  6813                           	line	69
  6814                           	
  6815                           i1l343:	
  6816  0EFC                     	return
  6817  0EFC  0008               	opt stack 0
  6818                           GLOBAL	__end_of_handle_remote
  6819                           	__end_of_handle_remote:
  6820  0EFD                     	signat	_handle_remote,89
  6821                           	global	_handle_rotary
  6822                           
  6823 ;; *************** function _handle_rotary *****************
  6824 ;; Defined at:
  6825 ;;		line 30 in file "Input.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;  portB           2    5[COMMON] int 
  6830 ;;  portA           2    3[COMMON] int 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      void 
  6833 ;; Registers used:
  6834 ;;		wreg, status,2, status,0
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6840 ;;      Params:         0       0       0       0       0
  6841 ;;      Locals:         4       0       0       0       0
  6842 ;;      Temps:          3       0       0       0       0
  6843 ;;      Totals:         7       0       0       0       0
  6844 ;;Total ram usage:        7 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; This function calls:
  6847 ;;		Nothing
  6848 ;; This function is called by:
  6849 ;;		_isr
  6850 ;; This function uses a non-reentrant model
  6851 ;;
  6852                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6853                           	file	"Input.c"
  6854                           	line	30
  6855                           global __ptext22
  6856                           __ptext22:	;psect for function _handle_rotary
  6857  0EFD                     psect	text22
  6858                           	file	"Input.c"
  6859                           	line	30
  6860                           	global	__size_of_handle_rotary
  6861                           	__size_of_handle_rotary	equ	__end_of_handle_rotary-_handle_rotary
  6862  0081                     	
  6863                           _handle_rotary:	
  6864  0EFD                     ;incstack = 0
  6865                           	opt	stack 0
  6866                           ; Regs used in _handle_rotary: [wreg+status,2+status,0]
  6867                           	line	32
  6868                           	
  6869                           i1l2684:	
  6870  0EFD                     ;Input.c: 32:         int portA = PORTBbits.RB4;
  6871                           	bcf	status, 5	;RP0=0, select bank0
  6872  0EFD  1283               	bcf	status, 6	;RP1=0, select bank0
  6873  0EFE  1303               	swapf	(6),w	;volatile
  6874  0EFF  0E06               	andlw	(1<<1)-1
  6875  0F00  3901               	movwf	(??_handle_rotary+0)+0
  6876  0F01  00F0               	clrf	(??_handle_rotary+0)+0+1
  6877  0F02  01F1               	movf	0+(??_handle_rotary+0)+0,w
  6878  0F03  0870               	movwf	(handle_rotary@portA)
  6879  0F04  00F3               	movf	1+(??_handle_rotary+0)+0,w
  6880  0F05  0871               	movwf	(handle_rotary@portA+1)
  6881  0F06  00F4               	line	33
  6882                           ;Input.c: 33:         int portB = PORTBbits.RB5;
  6883                           	swapf	(6),w	;volatile
  6884  0F07  0E06               	movwf	(??_handle_rotary+0)+0
  6885  0F08  00F0               	rrf	(??_handle_rotary+0)+0,w
  6886  0F09  0C70               	andlw	(1<<1)-1
  6887  0F0A  3901               	movwf	(??_handle_rotary+1)+0
  6888  0F0B  00F1               	clrf	(??_handle_rotary+1)+0+1
  6889  0F0C  01F2               	movf	0+(??_handle_rotary+1)+0,w
  6890  0F0D  0871               	movwf	(handle_rotary@portB)
  6891  0F0E  00F5               	movf	1+(??_handle_rotary+1)+0,w
  6892  0F0F  0872               	movwf	(handle_rotary@portB+1)
  6893  0F10  00F6               	line	35
  6894                           	
  6895                           i1l2686:	
  6896  0F11                     ;Input.c: 35:         if (_lastA != portA) {
  6897                           	movf	(__lastA+1),w
  6898  0F11  0863               	xorwf	(handle_rotary@portA+1),w
  6899  0F12  0674               	skipz
  6900  0F13  1D03               	goto	u276_25
  6901  0F14  2F17               	movf	(__lastA),w
  6902  0F15  0862               	xorwf	(handle_rotary@portA),w
  6903  0F16  0673               u276_25:
  6904  0F17                     
  6905                           	skipnz
  6906  0F17  1903               	goto	u276_21
  6907  0F18  2F1A               	goto	u276_20
  6908  0F19  2F1B               u276_21:
  6909  0F1A                     	goto	i1l2698
  6910  0F1A  2F42               u276_20:
  6911  0F1B                     	line	36
  6912                           	
  6913                           i1l2688:	
  6914  0F1B                     ;Input.c: 36:             if (_lastA == _lastB && portA) {
  6915                           	movf	(__lastB+1),w
  6916  0F1B  0861               	xorwf	(__lastA+1),w
  6917  0F1C  0663               	skipz
  6918  0F1D  1D03               	goto	u277_25
  6919  0F1E  2F21               	movf	(__lastB),w
  6920  0F1F  0860               	xorwf	(__lastA),w
  6921  0F20  0662               u277_25:
  6922  0F21                     
  6923                           	skipz
  6924  0F21  1D03               	goto	u277_21
  6925  0F22  2F24               	goto	u277_20
  6926  0F23  2F25               u277_21:
  6927  0F24                     	goto	i1l2698
  6928  0F24  2F42               u277_20:
  6929  0F25                     	
  6930                           i1l2690:	
  6931  0F25                     	movf	((handle_rotary@portA)),w
  6932  0F25  0873               iorwf	((handle_rotary@portA+1)),w
  6933  0F26  0474               	btfsc	status,2
  6934  0F27  1903               	goto	u278_21
  6935  0F28  2F2A               	goto	u278_20
  6936  0F29  2F2B               u278_21:
  6937  0F2A                     	goto	i1l2698
  6938  0F2A  2F42               u278_20:
  6939  0F2B                     	line	37
  6940                           	
  6941                           i1l2692:	
  6942  0F2B                     ;Input.c: 37:                 if (_selectedInput < 3) {
  6943                           	movlw	0
  6944  0F2B  3000               	bsf	status, 5	;RP0=1, select bank1
  6945  0F2C  1683               	bcf	status, 6	;RP1=0, select bank1
  6946  0F2D  1303               	subwf	(__selectedInput+1)^080h,w
  6947  0F2E  024C               	movlw	03h
  6948  0F2F  3003               	skipnz
  6949  0F30  1903               	subwf	(__selectedInput)^080h,w
  6950  0F31  024B               	skipnc
  6951  0F32  1803               	goto	u279_21
  6952  0F33  2F35               	goto	u279_20
  6953  0F34  2F36               u279_21:
  6954  0F35                     	goto	i1l2696
  6955  0F35  2F3D               u279_20:
  6956  0F36                     	line	38
  6957                           	
  6958                           i1l2694:	
  6959  0F36                     ;Input.c: 38:                     _selectedInput++;
  6960                           	movlw	01h
  6961  0F36  3001               	addwf	(__selectedInput)^080h,f
  6962  0F37  07CB               	skipnc
  6963  0F38  1803               	incf	(__selectedInput+1)^080h,f
  6964  0F39  0ACC               	movlw	0
  6965  0F3A  3000               	addwf	(__selectedInput+1)^080h,f
  6966  0F3B  07CC               	line	39
  6967                           ;Input.c: 39:                 } else {
  6968                           	goto	i1l2698
  6969  0F3C  2F42               	
  6970                           i1l205:	
  6971  0F3D                     	line	40
  6972                           	
  6973                           i1l2696:	
  6974  0F3D                     ;Input.c: 40:                     _selectedInput = 0;
  6975                           	clrf	(__selectedInput)^080h
  6976  0F3D  01CB               	clrf	(__selectedInput+1)^080h
  6977  0F3E  01CC               	goto	i1l2698
  6978  0F3F  2F42               	line	41
  6979                           ;Input.c: 41:                 }
  6980                           	
  6981                           i1l206:	
  6982  0F40                     	goto	i1l2698
  6983  0F40  2F42               	line	42
  6984                           ;Input.c: 42:             }
  6985                           	
  6986                           i1l204:	
  6987  0F41                     	goto	i1l2698
  6988  0F41  2F42               	line	43
  6989                           ;Input.c: 43:         }
  6990                           	
  6991                           i1l203:	
  6992  0F42                     	line	45
  6993                           	
  6994                           i1l2698:	
  6995  0F42                     ;Input.c: 45:         if (_lastB != portB) {
  6996                           	bcf	status, 5	;RP0=0, select bank0
  6997  0F42  1283               	movf	(__lastB+1),w
  6998  0F43  0861               	xorwf	(handle_rotary@portB+1),w
  6999  0F44  0676               	skipz
  7000  0F45  1D03               	goto	u280_25
  7001  0F46  2F49               	movf	(__lastB),w
  7002  0F47  0860               	xorwf	(handle_rotary@portB),w
  7003  0F48  0675               u280_25:
  7004  0F49                     
  7005                           	skipnz
  7006  0F49  1903               	goto	u280_21
  7007  0F4A  2F4C               	goto	u280_20
  7008  0F4B  2F4D               u280_21:
  7009  0F4C                     	goto	i1l207
  7010  0F4C  2F72               u280_20:
  7011  0F4D                     	line	46
  7012                           	
  7013                           i1l2700:	
  7014  0F4D                     ;Input.c: 46:             if (_lastA == _lastB && portB) {
  7015                           	movf	(__lastB+1),w
  7016  0F4D  0861               	xorwf	(__lastA+1),w
  7017  0F4E  0663               	skipz
  7018  0F4F  1D03               	goto	u281_25
  7019  0F50  2F53               	movf	(__lastB),w
  7020  0F51  0860               	xorwf	(__lastA),w
  7021  0F52  0662               u281_25:
  7022  0F53                     
  7023                           	skipz
  7024  0F53  1D03               	goto	u281_21
  7025  0F54  2F56               	goto	u281_20
  7026  0F55  2F57               u281_21:
  7027  0F56                     	goto	i1l207
  7028  0F56  2F72               u281_20:
  7029  0F57                     	
  7030                           i1l2702:	
  7031  0F57                     	movf	((handle_rotary@portB)),w
  7032  0F57  0875               iorwf	((handle_rotary@portB+1)),w
  7033  0F58  0476               	btfsc	status,2
  7034  0F59  1903               	goto	u282_21
  7035  0F5A  2F5C               	goto	u282_20
  7036  0F5B  2F5D               u282_21:
  7037  0F5C                     	goto	i1l207
  7038  0F5C  2F72               u282_20:
  7039  0F5D                     	line	47
  7040                           	
  7041                           i1l2704:	
  7042  0F5D                     ;Input.c: 47:                 if (_selectedInput > 0) {
  7043                           	bsf	status, 5	;RP0=1, select bank1
  7044  0F5D  1683               	bcf	status, 6	;RP1=0, select bank1
  7045  0F5E  1303               	movf	((__selectedInput)^080h),w
  7046  0F5F  084B               iorwf	((__selectedInput+1)^080h),w
  7047  0F60  044C               	btfsc	status,2
  7048  0F61  1903               	goto	u283_21
  7049  0F62  2F64               	goto	u283_20
  7050  0F63  2F65               u283_21:
  7051  0F64                     	goto	i1l2708
  7052  0F64  2F6C               u283_20:
  7053  0F65                     	line	48
  7054                           	
  7055                           i1l2706:	
  7056  0F65                     ;Input.c: 48:                     _selectedInput--;
  7057                           	movlw	01h
  7058  0F65  3001               	subwf	(__selectedInput)^080h,f
  7059  0F66  02CB               	movlw	0
  7060  0F67  3000               	skipc
  7061  0F68  1C03               	decf	(__selectedInput+1)^080h,f
  7062  0F69  03CC               	subwf	(__selectedInput+1)^080h,f
  7063  0F6A  02CC               	line	49
  7064                           ;Input.c: 49:                 } else {
  7065                           	goto	i1l207
  7066  0F6B  2F72               	
  7067                           i1l209:	
  7068  0F6C                     	line	50
  7069                           	
  7070                           i1l2708:	
  7071  0F6C                     ;Input.c: 50:                     _selectedInput = 3;
  7072                           	movlw	03h
  7073  0F6C  3003               	movwf	(__selectedInput)^080h
  7074  0F6D  00CB               	movlw	0
  7075  0F6E  3000               	movwf	((__selectedInput)^080h)+1
  7076  0F6F  00CC               	goto	i1l207
  7077  0F70  2F72               	line	51
  7078                           ;Input.c: 51:                 }
  7079                           	
  7080                           i1l210:	
  7081  0F71                     	goto	i1l207
  7082  0F71  2F72               	line	52
  7083                           ;Input.c: 52:             }
  7084                           	
  7085                           i1l208:	
  7086  0F72                     	line	53
  7087                           ;Input.c: 53:         }
  7088                           	
  7089                           i1l207:	
  7090  0F72                     	line	55
  7091                           ;Input.c: 55:         _lastA = portA;
  7092                           	movf	(handle_rotary@portA+1),w
  7093  0F72  0874               	bcf	status, 5	;RP0=0, select bank0
  7094  0F73  1283               	movwf	(__lastA+1)
  7095  0F74  00E3               	movf	(handle_rotary@portA),w
  7096  0F75  0873               	movwf	(__lastA)
  7097  0F76  00E2               	line	56
  7098                           ;Input.c: 56:         _lastB = portB;
  7099                           	movf	(handle_rotary@portB+1),w
  7100  0F77  0876               	movwf	(__lastB+1)
  7101  0F78  00E1               	movf	(handle_rotary@portB),w
  7102  0F79  0875               	movwf	(__lastB)
  7103  0F7A  00E0               	line	57
  7104                           	
  7105                           i1l2710:	
  7106  0F7B                     ;Input.c: 57:         _inputUpdateRequired = 1;
  7107                           	clrf	(__inputUpdateRequired)
  7108  0F7B  01E4               	incf	(__inputUpdateRequired),f
  7109  0F7C  0AE4               	line	58
  7110                           	
  7111                           i1l211:	
  7112  0F7D                     	return
  7113  0F7D  0008               	opt stack 0
  7114                           GLOBAL	__end_of_handle_rotary
  7115                           	__end_of_handle_rotary:
  7116  0F7E                     	signat	_handle_rotary,89
  7117                           	global	_handle_potmeter
  7118                           
  7119 ;; *************** function _handle_potmeter *****************
  7120 ;; Defined at:
  7121 ;;		line 28 in file "Volume.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;  currentStep     2   50[BANK0 ] unsigned int 
  7126 ;;  ad_result       2   52[BANK0 ] unsigned int 
  7127 ;; Return value:  Size  Location     Type
  7128 ;;                  1    wreg      void 
  7129 ;; Registers used:
  7130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7131 ;; Tracked objects:
  7132 ;;		On entry : 0/0
  7133 ;;		On exit  : 0/0
  7134 ;;		Unchanged: 0/0
  7135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7136 ;;      Params:         0       0       0       0       0
  7137 ;;      Locals:         0       4       0       0       0
  7138 ;;      Temps:          0       2       0       0       0
  7139 ;;      Totals:         0       6       0       0       0
  7140 ;;Total ram usage:        6 bytes
  7141 ;; Hardware stack levels used:    1
  7142 ;; Hardware stack levels required when called:    2
  7143 ;; This function calls:
  7144 ;;		_is_deadzone
  7145 ;;		i1___lwdiv
  7146 ;; This function is called by:
  7147 ;;		_isr
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7151                           	file	"Volume.c"
  7152                           	line	28
  7153                           global __ptext23
  7154                           __ptext23:	;psect for function _handle_potmeter
  7155  0F7E                     psect	text23
  7156                           	file	"Volume.c"
  7157                           	line	28
  7158                           	global	__size_of_handle_potmeter
  7159                           	__size_of_handle_potmeter	equ	__end_of_handle_potmeter-_handle_potmeter
  7160  0082                     	
  7161                           _handle_potmeter:	
  7162  0F7E                     ;incstack = 0
  7163 ;; hardware stack exceeded
  7164                           	opt	stack 0
  7165                           ; Regs used in _handle_potmeter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7166                           	line	30
  7167                           	
  7168                           i1l2730:	
  7169  0F7E                     ;Volume.c: 30:     unsigned int ad_result = (ADRESH << 8) + ADRESL;
  7170                           	bcf	status, 5	;RP0=0, select bank0
  7171  0F7E  1283               	bcf	status, 6	;RP1=0, select bank0
  7172  0F7F  1303               	movf	(30),w	;volatile
  7173  0F80  081E               	movwf	(handle_potmeter@ad_result+1)
  7174  0F81  00D5               	bsf	status, 5	;RP0=1, select bank1
  7175  0F82  1683               	bcf	status, 6	;RP1=0, select bank1
  7176  0F83  1303               	movf	(158)^080h,w	;volatile
  7177  0F84  081E               	bcf	status, 5	;RP0=0, select bank0
  7178  0F85  1283               	bcf	status, 6	;RP1=0, select bank0
  7179  0F86  1303               	movwf	(handle_potmeter@ad_result)
  7180  0F87  00D4               	line	32
  7181                           ;Volume.c: 32:     if (ad_result == _lastAdcResult)
  7182                           	movf	(__lastAdcResult+1),w
  7183  0F88  085F               	xorwf	(handle_potmeter@ad_result+1),w
  7184  0F89  0655               	skipz
  7185  0F8A  1D03               	goto	u287_25
  7186  0F8B  2F8E               	movf	(__lastAdcResult),w
  7187  0F8C  085E               	xorwf	(handle_potmeter@ad_result),w
  7188  0F8D  0654               u287_25:
  7189  0F8E                     
  7190                           	skipz
  7191  0F8E  1D03               	goto	u287_21
  7192  0F8F  2F91               	goto	u287_20
  7193  0F90  2F92               u287_21:
  7194  0F91                     	goto	i1l2734
  7195  0F91  2F94               u287_20:
  7196  0F92                     	goto	i1l304
  7197  0F92  2FFF               	line	33
  7198                           	
  7199                           i1l2732:	
  7200  0F93                     ;Volume.c: 33:         return;
  7201                           	goto	i1l304
  7202  0F93  2FFF               	
  7203                           i1l303:	
  7204  0F94                     	line	35
  7205                           	
  7206                           i1l2734:	
  7207  0F94                     ;Volume.c: 35:     if (ad_result == 0 || ad_result < step_size) {
  7208                           	movf	((handle_potmeter@ad_result)),w
  7209  0F94  0854               iorwf	((handle_potmeter@ad_result+1)),w
  7210  0F95  0455               	btfsc	status,2
  7211  0F96  1903               	goto	u288_21
  7212  0F97  2F99               	goto	u288_20
  7213  0F98  2F9A               u288_21:
  7214  0F99                     	goto	i1l2738
  7215  0F99  2FB5               u288_20:
  7216  0F9A                     	
  7217                           i1l2736:	
  7218  0F9A                     	movlw	low(_step_size|8000h)
  7219  0F9A  308E               	movwf	fsr0
  7220  0F9B  0084               	movlw	high(_step_size|8000h)
  7221  0F9C  3084               	movwf	btemp+1
  7222  0F9D  00FF               	fcall	stringtab
  7223  0F9E  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0
  7224  0FA3  00D0               	fcall	stringtab
  7225  0FA4  120A  118A  2300  120A  158A  	movwf	(??_handle_potmeter+0)+0+1
  7226  0FA9  00D1               	movf	1+(??_handle_potmeter+0)+0,w
  7227  0FAA  0851               	subwf	(handle_potmeter@ad_result+1),w
  7228  0FAB  0255               	skipz
  7229  0FAC  1D03               	goto	u289_25
  7230  0FAD  2FB0               	movf	0+(??_handle_potmeter+0)+0,w
  7231  0FAE  0850               	subwf	(handle_potmeter@ad_result),w
  7232  0FAF  0254               u289_25:
  7233  0FB0                     	skipnc
  7234  0FB0  1803               	goto	u289_21
  7235  0FB1  2FB3               	goto	u289_20
  7236  0FB2  2FB4               u289_21:
  7237  0FB3                     	goto	i1l2740
  7238  0FB3  2FBA               u289_20:
  7239  0FB4                     	goto	i1l2738
  7240  0FB4  2FB5               	
  7241                           i1l307:	
  7242  0FB5                     	line	36
  7243                           	
  7244                           i1l2738:	
  7245  0FB5                     ;Volume.c: 36:             volume = 0;
  7246                           	bsf	status, 5	;RP0=1, select bank1
  7247  0FB5  1683               	bcf	status, 6	;RP1=0, select bank1
  7248  0FB6  1303               	clrf	(_volume)^080h
  7249  0FB7  01C9               	clrf	(_volume+1)^080h
  7250  0FB8  01CA               	line	37
  7251                           ;Volume.c: 37:     } else {
  7252                           	goto	i1l308
  7253  0FB9  2FFA               	
  7254                           i1l305:	
  7255  0FBA                     	line	38
  7256                           	
  7257                           i1l2740:	
  7258  0FBA                     ;Volume.c: 38:         unsigned int currentStep = ad_result / step_size;
  7259                           	movlw	low(_step_size|8000h)
  7260  0FBA  308E               	movwf	fsr0
  7261  0FBB  0084               	movlw	high(_step_size|8000h)
  7262  0FBC  3084               	bcf	status, 5	;RP0=0, select bank0
  7263  0FBD  1283               	movwf	btemp+1
  7264  0FBE  00FF               	fcall	stringtab
  7265  0FBF  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor)
  7266  0FC4  00F0               	fcall	stringtab
  7267  0FC5  120A  118A  2300  120A  158A  	movwf	(i1___lwdiv@divisor+1)
  7268  0FCA  00F1               	movf	(handle_potmeter@ad_result+1),w
  7269  0FCB  0855               	movwf	(i1___lwdiv@dividend+1)
  7270  0FCC  00F3               	movf	(handle_potmeter@ad_result),w
  7271  0FCD  0854               	movwf	(i1___lwdiv@dividend)
  7272  0FCE  00F2               	fcall	i1___lwdiv
  7273  0FCF  120A  158A  2350  120A  158A  	movf	(1+(?i1___lwdiv)),w
  7274  0FD4  0871               	bcf	status, 5	;RP0=0, select bank0
  7275  0FD5  1283               	bcf	status, 6	;RP1=0, select bank0
  7276  0FD6  1303               	movwf	(handle_potmeter@currentStep+1)
  7277  0FD7  00D3               	movf	(0+(?i1___lwdiv)),w
  7278  0FD8  0870               	movwf	(handle_potmeter@currentStep)
  7279  0FD9  00D2               	line	40
  7280                           ;Volume.c: 40:         if (!is_deadzone(currentStep, ad_result))
  7281                           	movf	(handle_potmeter@currentStep+1),w
  7282  0FDA  0853               	movwf	(is_deadzone@currentStep+1)
  7283  0FDB  00C4               	movf	(handle_potmeter@currentStep),w
  7284  0FDC  0852               	movwf	(is_deadzone@currentStep)
  7285  0FDD  00C3               	movf	(handle_potmeter@ad_result+1),w
  7286  0FDE  0855               	movwf	(is_deadzone@adcResult+1)
  7287  0FDF  00C6               	movf	(handle_potmeter@ad_result),w
  7288  0FE0  0854               	movwf	(is_deadzone@adcResult)
  7289  0FE1  00C5               	fcall	_is_deadzone
  7290  0FE2  120A  118A  25D3  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  7291  0FE7  1283               	bcf	status, 6	;RP1=0, select bank0
  7292  0FE8  1303               	movf	((0+(?_is_deadzone))),w
  7293  0FE9  0843               iorwf	((1+(?_is_deadzone))),w
  7294  0FEA  0444               	btfss	status,2
  7295  0FEB  1D03               	goto	u290_21
  7296  0FEC  2FEE               	goto	u290_20
  7297  0FED  2FEF               u290_21:
  7298  0FEE                     	goto	i1l308
  7299  0FEE  2FFA               u290_20:
  7300  0FEF                     	line	41
  7301                           	
  7302                           i1l2742:	
  7303  0FEF                     ;Volume.c: 41:             volume = currentStep;
  7304                           	movf	(handle_potmeter@currentStep+1),w
  7305  0FEF  0853               	bsf	status, 5	;RP0=1, select bank1
  7306  0FF0  1683               	bcf	status, 6	;RP1=0, select bank1
  7307  0FF1  1303               	movwf	(_volume+1)^080h
  7308  0FF2  00CA               	bcf	status, 5	;RP0=0, select bank0
  7309  0FF3  1283               	bcf	status, 6	;RP1=0, select bank0
  7310  0FF4  1303               	movf	(handle_potmeter@currentStep),w
  7311  0FF5  0852               	bsf	status, 5	;RP0=1, select bank1
  7312  0FF6  1683               	bcf	status, 6	;RP1=0, select bank1
  7313  0FF7  1303               	movwf	(_volume)^080h
  7314  0FF8  00C9               	goto	i1l308
  7315  0FF9  2FFA               	
  7316                           i1l309:	
  7317  0FFA                     	line	42
  7318                           ;Volume.c: 42:     }
  7319                           	
  7320                           i1l308:	
  7321  0FFA                     	line	44
  7322                           ;Volume.c: 44:     _lastAdcResult = ad_result;
  7323                           	bcf	status, 5	;RP0=0, select bank0
  7324  0FFA  1283               	movf	(handle_potmeter@ad_result+1),w
  7325  0FFB  0855               	movwf	(__lastAdcResult+1)
  7326  0FFC  00DF               	movf	(handle_potmeter@ad_result),w
  7327  0FFD  0854               	movwf	(__lastAdcResult)
  7328  0FFE  00DE               	line	46
  7329                           	
  7330                           i1l304:	
  7331  0FFF                     	return
  7332  0FFF  0008               	opt stack 0
  7333                           GLOBAL	__end_of_handle_potmeter
  7334                           	__end_of_handle_potmeter:
  7335  1000                     	signat	_handle_potmeter,89
  7336                           	global	i1___lwdiv
  7337                           
  7338 ;; *************** function i1___lwdiv *****************
  7339 ;; Defined at:
  7340 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  divisor         2    0[COMMON] unsigned int 
  7343 ;;  dividend        2    2[COMMON] unsigned int 
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;  __lwdiv         2    5[COMMON] unsigned int 
  7346 ;;  __lwdiv         1    7[COMMON] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  2    0[COMMON] unsigned int 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, status,0
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7356 ;;      Params:         4       0       0       0       0
  7357 ;;      Locals:         3       0       0       0       0
  7358 ;;      Temps:          1       0       0       0       0
  7359 ;;      Totals:         8       0       0       0       0
  7360 ;;Total ram usage:        8 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_handle_potmeter
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  7369                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7370                           	line	5
  7371                           global __ptext24
  7372                           __ptext24:	;psect for function i1___lwdiv
  7373  0B50                     psect	text24
  7374                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  7375                           	line	5
  7376                           	global	__size_ofi1___lwdiv
  7377                           	__size_ofi1___lwdiv	equ	__end_ofi1___lwdiv-i1___lwdiv
  7378  004B                     	
  7379                           i1___lwdiv:	
  7380  0B50                     ;incstack = 0
  7381 ;; hardware stack exceeded
  7382                           	opt	stack 0
  7383                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  7384                           	line	13
  7385                           	
  7386                           i1l2532:	
  7387  0B50                     	clrf	(i1___lwdiv@quotient)
  7388  0B50  01F5               	clrf	(i1___lwdiv@quotient+1)
  7389  0B51  01F6               	line	14
  7390                           	
  7391                           i1l2534:	
  7392  0B52                     	movf	((i1___lwdiv@divisor)),w
  7393  0B52  0870               iorwf	((i1___lwdiv@divisor+1)),w
  7394  0B53  0471               	btfsc	status,2
  7395  0B54  1903               	goto	u265_21
  7396  0B55  2B57               	goto	u265_20
  7397  0B56  2B58               u265_21:
  7398  0B57                     	goto	i1l2554
  7399  0B57  2B95               u265_20:
  7400  0B58                     	line	15
  7401                           	
  7402                           i1l2536:	
  7403  0B58                     	clrf	(i1___lwdiv@counter)
  7404  0B58  01F7               	incf	(i1___lwdiv@counter),f
  7405  0B59  0AF7               	line	16
  7406                           	goto	i1l2542
  7407  0B5A  2B67               	
  7408                           i1l724:	
  7409  0B5B                     	line	17
  7410                           	
  7411                           i1l2538:	
  7412  0B5B                     	movlw	01h
  7413  0B5B  3001               	
  7414                           u266_25:
  7415  0B5C                     	clrc
  7416  0B5C  1003               	rlf	(i1___lwdiv@divisor),f
  7417  0B5D  0DF0               	rlf	(i1___lwdiv@divisor+1),f
  7418  0B5E  0DF1               	addlw	-1
  7419  0B5F  3EFF               	skipz
  7420  0B60  1D03               	goto	u266_25
  7421  0B61  2B5C               	line	18
  7422                           	
  7423                           i1l2540:	
  7424  0B62                     	movlw	low(01h)
  7425  0B62  3001               	movwf	(??i1___lwdiv+0)+0
  7426  0B63  00F4               	movf	(??i1___lwdiv+0)+0,w
  7427  0B64  0874               	addwf	(i1___lwdiv@counter),f
  7428  0B65  07F7               	goto	i1l2542
  7429  0B66  2B67               	line	19
  7430                           	
  7431                           i1l723:	
  7432  0B67                     	line	16
  7433                           	
  7434                           i1l2542:	
  7435  0B67                     	btfss	(i1___lwdiv@divisor+1),(15)&7
  7436  0B67  1FF1               	goto	u267_21
  7437  0B68  2B6A               	goto	u267_20
  7438  0B69  2B6B               u267_21:
  7439  0B6A                     	goto	i1l2538
  7440  0B6A  2B5B               u267_20:
  7441  0B6B                     	goto	i1l2544
  7442  0B6B  2B6D               	
  7443                           i1l725:	
  7444  0B6C                     	goto	i1l2544
  7445  0B6C  2B6D               	line	20
  7446                           	
  7447                           i1l726:	
  7448  0B6D                     	line	21
  7449                           	
  7450                           i1l2544:	
  7451  0B6D                     	movlw	01h
  7452  0B6D  3001               	
  7453                           u268_25:
  7454  0B6E                     	clrc
  7455  0B6E  1003               	rlf	(i1___lwdiv@quotient),f
  7456  0B6F  0DF5               	rlf	(i1___lwdiv@quotient+1),f
  7457  0B70  0DF6               	addlw	-1
  7458  0B71  3EFF               	skipz
  7459  0B72  1D03               	goto	u268_25
  7460  0B73  2B6E               	line	22
  7461                           	movf	(i1___lwdiv@divisor+1),w
  7462  0B74  0871               	subwf	(i1___lwdiv@dividend+1),w
  7463  0B75  0273               	skipz
  7464  0B76  1D03               	goto	u269_25
  7465  0B77  2B7A               	movf	(i1___lwdiv@divisor),w
  7466  0B78  0870               	subwf	(i1___lwdiv@dividend),w
  7467  0B79  0272               u269_25:
  7468  0B7A                     	skipc
  7469  0B7A  1C03               	goto	u269_21
  7470  0B7B  2B7D               	goto	u269_20
  7471  0B7C  2B7E               u269_21:
  7472  0B7D                     	goto	i1l2550
  7473  0B7D  2B86               u269_20:
  7474  0B7E                     	line	23
  7475                           	
  7476                           i1l2546:	
  7477  0B7E                     	movf	(i1___lwdiv@divisor),w
  7478  0B7E  0870               	subwf	(i1___lwdiv@dividend),f
  7479  0B7F  02F2               	movf	(i1___lwdiv@divisor+1),w
  7480  0B80  0871               	skipc
  7481  0B81  1C03               	decf	(i1___lwdiv@dividend+1),f
  7482  0B82  03F3               	subwf	(i1___lwdiv@dividend+1),f
  7483  0B83  02F3               	line	24
  7484                           	
  7485                           i1l2548:	
  7486  0B84                     	bsf	(i1___lwdiv@quotient)+(0/8),(0)&7
  7487  0B84  1475               	goto	i1l2550
  7488  0B85  2B86               	line	25
  7489                           	
  7490                           i1l727:	
  7491  0B86                     	line	26
  7492                           	
  7493                           i1l2550:	
  7494  0B86                     	movlw	01h
  7495  0B86  3001               	
  7496                           u270_25:
  7497  0B87                     	clrc
  7498  0B87  1003               	rrf	(i1___lwdiv@divisor+1),f
  7499  0B88  0CF1               	rrf	(i1___lwdiv@divisor),f
  7500  0B89  0CF0               	addlw	-1
  7501  0B8A  3EFF               	skipz
  7502  0B8B  1D03               	goto	u270_25
  7503  0B8C  2B87               	line	27
  7504                           	
  7505                           i1l2552:	
  7506  0B8D                     	movlw	01h
  7507  0B8D  3001               	subwf	(i1___lwdiv@counter),f
  7508  0B8E  02F7               	btfss	status,2
  7509  0B8F  1D03               	goto	u271_21
  7510  0B90  2B92               	goto	u271_20
  7511  0B91  2B93               u271_21:
  7512  0B92                     	goto	i1l2544
  7513  0B92  2B6D               u271_20:
  7514  0B93                     	goto	i1l2554
  7515  0B93  2B95               	
  7516                           i1l728:	
  7517  0B94                     	goto	i1l2554
  7518  0B94  2B95               	line	28
  7519                           	
  7520                           i1l722:	
  7521  0B95                     	line	29
  7522                           	
  7523                           i1l2554:	
  7524  0B95                     	movf	(i1___lwdiv@quotient+1),w
  7525  0B95  0876               	movwf	(?i1___lwdiv+1)
  7526  0B96  00F1               	movf	(i1___lwdiv@quotient),w
  7527  0B97  0875               	movwf	(?i1___lwdiv)
  7528  0B98  00F0               	goto	i1l729
  7529  0B99  2B9A               	
  7530                           i1l2556:	
  7531  0B9A                     	line	30
  7532                           	
  7533                           i1l729:	
  7534  0B9A                     	return
  7535  0B9A  0008               	opt stack 0
  7536                           GLOBAL	__end_ofi1___lwdiv
  7537                           	__end_ofi1___lwdiv:
  7538  0B9B                     	signat	i1___lwdiv,90
  7539                           	global	_is_deadzone
  7540                           
  7541 ;; *************** function _is_deadzone *****************
  7542 ;; Defined at:
  7543 ;;		line 18 in file "Volume.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;  currentStep     2   35[BANK0 ] int 
  7546 ;;  adcResult       2   37[BANK0 ] int 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  turnPoint       2   46[BANK0 ] int 
  7549 ;;  deadzoneHigh    2   43[BANK0 ] int 
  7550 ;;  deadzoneLow     2   41[BANK0 ] int 
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  2   35[BANK0 ] int 
  7553 ;; Registers used:
  7554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7560 ;;      Params:         0       4       0       0       0
  7561 ;;      Locals:         0       7       0       0       0
  7562 ;;      Temps:          0       2       0       0       0
  7563 ;;      Totals:         0      13       0       0       0
  7564 ;;Total ram usage:       13 bytes
  7565 ;; Hardware stack levels used:    1
  7566 ;; Hardware stack levels required when called:    1
  7567 ;; This function calls:
  7568 ;;		___fladd
  7569 ;;		___fltol
  7570 ;;		___xxtofl
  7571 ;;		i1___wmul
  7572 ;; This function is called by:
  7573 ;;		_handle_potmeter
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  7577                           	file	"Volume.c"
  7578                           	line	18
  7579                           global __ptext25
  7580                           __ptext25:	;psect for function _is_deadzone
  7581  05D3                     psect	text25
  7582                           	file	"Volume.c"
  7583                           	line	18
  7584                           	global	__size_of_is_deadzone
  7585                           	__size_of_is_deadzone	equ	__end_of_is_deadzone-_is_deadzone
  7586  00C6                     	
  7587                           _is_deadzone:	
  7588  05D3                     ;incstack = 0
  7589 ;; hardware stack exceeded
  7590                           	opt	stack 0
  7591                           ; Regs used in _is_deadzone: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7592                           	line	20
  7593                           	
  7594                           i1l2462:	
  7595  05D3                     ;Volume.c: 18: int is_deadzone(int currentStep, int adcResult);Volume.c: 19: {;Volume.c:
                                  20:     int turnPoint = step_size * currentStep;
  7596                           	movlw	low(_step_size|8000h)
  7597  05D3  308E               	movwf	fsr0
  7598  05D4  0084               	movlw	high(_step_size|8000h)
  7599  05D5  3084               	bcf	status, 5	;RP0=0, select bank0
  7600  05D6  1283               	bcf	status, 6	;RP1=0, select bank0
  7601  05D7  1303               	movwf	btemp+1
  7602  05D8  00FF               	fcall	stringtab
  7603  05D9  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier)
  7604  05DE  00F0               	fcall	stringtab
  7605  05DF  120A  118A  2300  120A  118A  	movwf	(i1___wmul@multiplier+1)
  7606  05E4  00F1               	movf	(is_deadzone@currentStep+1),w
  7607  05E5  0844               	movwf	(i1___wmul@multiplicand+1)
  7608  05E6  00F3               	movf	(is_deadzone@currentStep),w
  7609  05E7  0843               	movwf	(i1___wmul@multiplicand)
  7610  05E8  00F2               	fcall	i1___wmul
  7611  05E9  120A  158A  216F  120A  118A  	movf	(1+(?i1___wmul)),w
  7612  05EE  0871               	bcf	status, 5	;RP0=0, select bank0
  7613  05EF  1283               	bcf	status, 6	;RP1=0, select bank0
  7614  05F0  1303               	movwf	(is_deadzone@turnPoint+1)
  7615  05F1  00CF               	movf	(0+(?i1___wmul)),w
  7616  05F2  0870               	movwf	(is_deadzone@turnPoint)
  7617  05F3  00CE               	line	22
  7618                           	
  7619                           i1l2464:	
  7620  05F4                     ;Volume.c: 22:     int deadzoneLow = turnPoint - ((1023) * 0.01);
  7621                           	movf	(is_deadzone@turnPoint),w
  7622  05F4  084E               	movwf	(___xxtofl@val)
  7623  05F5  00F0               	movf	(is_deadzone@turnPoint+1),w
  7624  05F6  084F               	movwf	(___xxtofl@val+1)
  7625  05F7  00F1               	movlw	0
  7626  05F8  3000               	btfsc	(___xxtofl@val+1),7
  7627  05F9  1BF1               	movlw	255
  7628  05FA  30FF               	movwf	(___xxtofl@val+2)
  7629  05FB  00F2               	movwf	(___xxtofl@val+3)
  7630  05FC  00F3               	movlw	low(01h)
  7631  05FD  3001               	fcall	___xxtofl
  7632  05FE  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7633  0603  0873               	bcf	status, 5	;RP0=0, select bank0
  7634  0604  1283               	bcf	status, 6	;RP1=0, select bank0
  7635  0605  1303               	movwf	(___fladd@a+3)
  7636  0606  00A7               	movf	(2+(?___xxtofl)),w
  7637  0607  0872               	movwf	(___fladd@a+2)
  7638  0608  00A6               	movf	(1+(?___xxtofl)),w
  7639  0609  0871               	movwf	(___fladd@a+1)
  7640  060A  00A5               	movf	(0+(?___xxtofl)),w
  7641  060B  0870               	movwf	(___fladd@a)
  7642  060C  00A4               
  7643                           	movlw	0xc1
  7644  060D  30C1               	movwf	(___fladd@b+3)
  7645  060E  00A3               	movlw	0x23
  7646  060F  3023               	movwf	(___fladd@b+2)
  7647  0610  00A2               	movlw	0xae
  7648  0611  30AE               	movwf	(___fladd@b+1)
  7649  0612  00A1               	movlw	0x14
  7650  0613  3014               	movwf	(___fladd@b)
  7651  0614  00A0               
  7652                           	fcall	___fladd
  7653  0615  120A  118A  2031  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7654  061A  1283               	bcf	status, 6	;RP1=0, select bank0
  7655  061B  1303               	movf	(3+(?___fladd)),w
  7656  061C  0823               	movwf	(___fltol@f1+3)
  7657  061D  00BB               	movf	(2+(?___fladd)),w
  7658  061E  0822               	movwf	(___fltol@f1+2)
  7659  061F  00BA               	movf	(1+(?___fladd)),w
  7660  0620  0821               	movwf	(___fltol@f1+1)
  7661  0621  00B9               	movf	(0+(?___fladd)),w
  7662  0622  0820               	movwf	(___fltol@f1)
  7663  0623  00B8               
  7664                           	fcall	___fltol
  7665  0624  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7666  0629  1283               	bcf	status, 6	;RP1=0, select bank0
  7667  062A  1303               	movf	(1+(?___fltol)),w
  7668  062B  0839               	movwf	(is_deadzone@deadzoneLow+1)
  7669  062C  00CA               	movf	(0+(?___fltol)),w
  7670  062D  0838               	movwf	(is_deadzone@deadzoneLow)
  7671  062E  00C9               	line	23
  7672                           	
  7673                           i1l2466:	
  7674  062F                     ;Volume.c: 23:     int deadzoneHigh = turnPoint + ((1023) * 0.01);
  7675                           	movf	(is_deadzone@turnPoint),w
  7676  062F  084E               	movwf	(___xxtofl@val)
  7677  0630  00F0               	movf	(is_deadzone@turnPoint+1),w
  7678  0631  084F               	movwf	(___xxtofl@val+1)
  7679  0632  00F1               	movlw	0
  7680  0633  3000               	btfsc	(___xxtofl@val+1),7
  7681  0634  1BF1               	movlw	255
  7682  0635  30FF               	movwf	(___xxtofl@val+2)
  7683  0636  00F2               	movwf	(___xxtofl@val+3)
  7684  0637  00F3               	movlw	low(01h)
  7685  0638  3001               	fcall	___xxtofl
  7686  0639  120A  118A  2699  120A  118A  	movf	(3+(?___xxtofl)),w
  7687  063E  0873               	bcf	status, 5	;RP0=0, select bank0
  7688  063F  1283               	bcf	status, 6	;RP1=0, select bank0
  7689  0640  1303               	movwf	(___fladd@a+3)
  7690  0641  00A7               	movf	(2+(?___xxtofl)),w
  7691  0642  0872               	movwf	(___fladd@a+2)
  7692  0643  00A6               	movf	(1+(?___xxtofl)),w
  7693  0644  0871               	movwf	(___fladd@a+1)
  7694  0645  00A5               	movf	(0+(?___xxtofl)),w
  7695  0646  0870               	movwf	(___fladd@a)
  7696  0647  00A4               
  7697                           	movlw	0x41
  7698  0648  3041               	movwf	(___fladd@b+3)
  7699  0649  00A3               	movlw	0x23
  7700  064A  3023               	movwf	(___fladd@b+2)
  7701  064B  00A2               	movlw	0xae
  7702  064C  30AE               	movwf	(___fladd@b+1)
  7703  064D  00A1               	movlw	0x14
  7704  064E  3014               	movwf	(___fladd@b)
  7705  064F  00A0               
  7706                           	fcall	___fladd
  7707  0650  120A  118A  2031  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7708  0655  1283               	bcf	status, 6	;RP1=0, select bank0
  7709  0656  1303               	movf	(3+(?___fladd)),w
  7710  0657  0823               	movwf	(___fltol@f1+3)
  7711  0658  00BB               	movf	(2+(?___fladd)),w
  7712  0659  0822               	movwf	(___fltol@f1+2)
  7713  065A  00BA               	movf	(1+(?___fladd)),w
  7714  065B  0821               	movwf	(___fltol@f1+1)
  7715  065C  00B9               	movf	(0+(?___fladd)),w
  7716  065D  0820               	movwf	(___fltol@f1)
  7717  065E  00B8               
  7718                           	fcall	___fltol
  7719  065F  120A  118A  275B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  7720  0664  1283               	bcf	status, 6	;RP1=0, select bank0
  7721  0665  1303               	movf	(1+(?___fltol)),w
  7722  0666  0839               	movwf	(is_deadzone@deadzoneHigh+1)
  7723  0667  00CC               	movf	(0+(?___fltol)),w
  7724  0668  0838               	movwf	(is_deadzone@deadzoneHigh)
  7725  0669  00CB               	line	25
  7726                           	
  7727                           i1l2468:	
  7728  066A                     ;Volume.c: 25:     return adcResult > deadzoneLow && adcResult < deadzoneHigh;
  7729                           	clrf	(_is_deadzone$867)
  7730  066A  01CD               	
  7731                           i1l2470:	
  7732  066B                     	movf	(is_deadzone@deadzoneLow+1),w
  7733  066B  084A               	xorlw	80h
  7734  066C  3A80               	movwf	(??_is_deadzone+0)+0
  7735  066D  00C7               	movf	(is_deadzone@adcResult+1),w
  7736  066E  0846               	xorlw	80h
  7737  066F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7738  0670  0247               	skipz
  7739  0671  1D03               	goto	u263_25
  7740  0672  2E75               	movf	(is_deadzone@adcResult),w
  7741  0673  0845               	subwf	(is_deadzone@deadzoneLow),w
  7742  0674  0249               u263_25:
  7743  0675                     
  7744                           	skipnc
  7745  0675  1803               	goto	u263_21
  7746  0676  2E78               	goto	u263_20
  7747  0677  2E79               u263_21:
  7748  0678                     	goto	i1l2476
  7749  0678  2E8E               u263_20:
  7750  0679                     	
  7751                           i1l2472:	
  7752  0679                     	bcf	status, 5	;RP0=0, select bank0
  7753  0679  1283               	bcf	status, 6	;RP1=0, select bank0
  7754  067A  1303               	movf	(is_deadzone@adcResult+1),w
  7755  067B  0846               	xorlw	80h
  7756  067C  3A80               	movwf	(??_is_deadzone+0)+0
  7757  067D  00C7               	movf	(is_deadzone@deadzoneHigh+1),w
  7758  067E  084C               	xorlw	80h
  7759  067F  3A80               	subwf	(??_is_deadzone+0)+0,w
  7760  0680  0247               	skipz
  7761  0681  1D03               	goto	u264_25
  7762  0682  2E85               	movf	(is_deadzone@deadzoneHigh),w
  7763  0683  084B               	subwf	(is_deadzone@adcResult),w
  7764  0684  0245               u264_25:
  7765  0685                     
  7766                           	skipnc
  7767  0685  1803               	goto	u264_21
  7768  0686  2E88               	goto	u264_20
  7769  0687  2E89               u264_21:
  7770  0688                     	goto	i1l2476
  7771  0688  2E8E               u264_20:
  7772  0689                     	
  7773                           i1l2474:	
  7774  0689                     	bcf	status, 5	;RP0=0, select bank0
  7775  0689  1283               	bcf	status, 6	;RP1=0, select bank0
  7776  068A  1303               	clrf	(_is_deadzone$867)
  7777  068B  01CD               	incf	(_is_deadzone$867),f
  7778  068C  0ACD               	goto	i1l2476
  7779  068D  2E8E               	
  7780                           i1l299:	
  7781  068E                     	
  7782                           i1l2476:	
  7783  068E                     	bcf	status, 5	;RP0=0, select bank0
  7784  068E  1283               	bcf	status, 6	;RP1=0, select bank0
  7785  068F  1303               	movf	(_is_deadzone$867),w
  7786  0690  084D               	movwf	(??_is_deadzone+0)+0
  7787  0691  00C7               	clrf	(??_is_deadzone+0)+0+1
  7788  0692  01C8               	movf	0+(??_is_deadzone+0)+0,w
  7789  0693  0847               	movwf	(?_is_deadzone)
  7790  0694  00C3               	movf	1+(??_is_deadzone+0)+0,w
  7791  0695  0848               	movwf	(?_is_deadzone+1)
  7792  0696  00C4               	goto	i1l300
  7793  0697  2E98               	
  7794                           i1l2478:	
  7795  0698                     	line	26
  7796                           	
  7797                           i1l300:	
  7798  0698                     	return
  7799  0698  0008               	opt stack 0
  7800                           GLOBAL	__end_of_is_deadzone
  7801                           	__end_of_is_deadzone:
  7802  0699                     	signat	_is_deadzone,8314
  7803                           	global	i1___wmul
  7804                           
  7805 ;; *************** function i1___wmul *****************
  7806 ;; Defined at:
  7807 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  multiplier      2    0[COMMON] unsigned int 
  7810 ;;  multiplicand    2    2[COMMON] unsigned int 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  __wmul          2    4[COMMON] unsigned int 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  2    0[COMMON] unsigned int 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2, status,0
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7822 ;;      Params:         4       0       0       0       0
  7823 ;;      Locals:         2       0       0       0       0
  7824 ;;      Temps:          0       0       0       0       0
  7825 ;;      Totals:         6       0       0       0       0
  7826 ;;Total ram usage:        6 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		_is_deadzone
  7832 ;; This function uses a non-reentrant model
  7833 ;;
  7834                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  7835                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7836                           	line	15
  7837                           global __ptext26
  7838                           __ptext26:	;psect for function i1___wmul
  7839  096F                     psect	text26
  7840                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7841                           	line	15
  7842                           	global	__size_ofi1___wmul
  7843                           	__size_ofi1___wmul	equ	__end_ofi1___wmul-i1___wmul
  7844  0028                     	
  7845                           i1___wmul:	
  7846  096F                     ;incstack = 0
  7847 ;; hardware stack exceeded
  7848                           	opt	stack 0
  7849                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  7850                           	line	43
  7851                           	
  7852                           i1l2342:	
  7853  096F                     	clrf	(i1___wmul@product)
  7854  096F  01F4               	clrf	(i1___wmul@product+1)
  7855  0970  01F5               	goto	i1l2344
  7856  0971  2972               	line	44
  7857                           	
  7858                           i1l456:	
  7859  0972                     	line	45
  7860                           	
  7861                           i1l2344:	
  7862  0972                     	btfss	(i1___wmul@multiplier),(0)&7
  7863  0972  1C70               	goto	u253_21
  7864  0973  2975               	goto	u253_20
  7865  0974  2976               u253_21:
  7866  0975                     	goto	i1l457
  7867  0975  297C               u253_20:
  7868  0976                     	line	46
  7869                           	
  7870                           i1l2346:	
  7871  0976                     	movf	(i1___wmul@multiplicand),w
  7872  0976  0872               	addwf	(i1___wmul@product),f
  7873  0977  07F4               	skipnc
  7874  0978  1803               	incf	(i1___wmul@product+1),f
  7875  0979  0AF5               	movf	(i1___wmul@multiplicand+1),w
  7876  097A  0873               	addwf	(i1___wmul@product+1),f
  7877  097B  07F5               	
  7878                           i1l457:	
  7879  097C                     	line	47
  7880                           	movlw	01h
  7881  097C  3001               	
  7882                           u254_25:
  7883  097D                     	clrc
  7884  097D  1003               	rlf	(i1___wmul@multiplicand),f
  7885  097E  0DF2               	rlf	(i1___wmul@multiplicand+1),f
  7886  097F  0DF3               	addlw	-1
  7887  0980  3EFF               	skipz
  7888  0981  1D03               	goto	u254_25
  7889  0982  297D               	line	48
  7890                           	
  7891                           i1l2348:	
  7892  0983                     	movlw	01h
  7893  0983  3001               	
  7894                           u255_25:
  7895  0984                     	clrc
  7896  0984  1003               	rrf	(i1___wmul@multiplier+1),f
  7897  0985  0CF1               	rrf	(i1___wmul@multiplier),f
  7898  0986  0CF0               	addlw	-1
  7899  0987  3EFF               	skipz
  7900  0988  1D03               	goto	u255_25
  7901  0989  2984               	line	49
  7902                           	
  7903                           i1l2350:	
  7904  098A                     	movf	((i1___wmul@multiplier)),w
  7905  098A  0870               iorwf	((i1___wmul@multiplier+1)),w
  7906  098B  0471               	btfss	status,2
  7907  098C  1D03               	goto	u256_21
  7908  098D  298F               	goto	u256_20
  7909  098E  2990               u256_21:
  7910  098F                     	goto	i1l2344
  7911  098F  2972               u256_20:
  7912  0990                     	goto	i1l2352
  7913  0990  2991               	
  7914                           i1l458:	
  7915  0991                     	line	52
  7916                           	
  7917                           i1l2352:	
  7918  0991                     	movf	(i1___wmul@product+1),w
  7919  0991  0875               	movwf	(?i1___wmul+1)
  7920  0992  00F1               	movf	(i1___wmul@product),w
  7921  0993  0874               	movwf	(?i1___wmul)
  7922  0994  00F0               	goto	i1l459
  7923  0995  2996               	
  7924                           i1l2354:	
  7925  0996                     	line	53
  7926                           	
  7927                           i1l459:	
  7928  0996                     	return
  7929  0996  0008               	opt stack 0
  7930                           GLOBAL	__end_ofi1___wmul
  7931                           	__end_ofi1___wmul:
  7932  0997                     	signat	i1___wmul,90
  7933                           	global	___xxtofl
  7934                           
  7935 ;; *************** function ___xxtofl *****************
  7936 ;; Defined at:
  7937 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;  sign            1    wreg     unsigned char 
  7940 ;;  val             4    0[COMMON] long 
  7941 ;; Auto vars:     Size  Location     Type
  7942 ;;  sign            1    8[COMMON] unsigned char 
  7943 ;;  arg             4   10[COMMON] unsigned long 
  7944 ;;  exp             1    9[COMMON] unsigned char 
  7945 ;; Return value:  Size  Location     Type
  7946 ;;                  4    0[COMMON] unsigned char 
  7947 ;; Registers used:
  7948 ;;		wreg, status,2, status,0
  7949 ;; Tracked objects:
  7950 ;;		On entry : 0/0
  7951 ;;		On exit  : 0/0
  7952 ;;		Unchanged: 0/0
  7953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7954 ;;      Params:         4       0       0       0       0
  7955 ;;      Locals:         6       0       0       0       0
  7956 ;;      Temps:          4       0       0       0       0
  7957 ;;      Totals:        14       0       0       0       0
  7958 ;;Total ram usage:       14 bytes
  7959 ;; Hardware stack levels used:    1
  7960 ;; This function calls:
  7961 ;;		Nothing
  7962 ;; This function is called by:
  7963 ;;		_is_deadzone
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           psect	text27,local,class=CODE,delta=2,merge=1,group=1
  7967                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7968                           	line	10
  7969                           global __ptext27
  7970                           __ptext27:	;psect for function ___xxtofl
  7971  0699                     psect	text27
  7972                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  7973                           	line	10
  7974                           	global	__size_of___xxtofl
  7975                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  7976  00C2                     	
  7977                           ___xxtofl:	
  7978  0699                     ;incstack = 0
  7979 ;; hardware stack exceeded
  7980                           	opt	stack 0
  7981                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7982                           ;___xxtofl@sign stored from wreg
  7983                           	movwf	(___xxtofl@sign)
  7984  0699  00F8               	line	15
  7985                           	
  7986                           i1l2298:	
  7987  069A                     	movf	((___xxtofl@sign)),w
  7988  069A  0878               	btfsc	status,2
  7989  069B  1903               	goto	u239_21
  7990  069C  2E9E               	goto	u239_20
  7991  069D  2E9F               u239_21:
  7992  069E                     	goto	i1l2304
  7993  069E  2EB3               u239_20:
  7994  069F                     	
  7995                           i1l2300:	
  7996  069F                     	btfss	(___xxtofl@val+3),7
  7997  069F  1FF3               	goto	u240_21
  7998  06A0  2EA2               	goto	u240_20
  7999  06A1  2EA3               u240_21:
  8000  06A2                     	goto	i1l2304
  8001  06A2  2EB3               u240_20:
  8002  06A3                     	line	16
  8003                           	
  8004                           i1l2302:	
  8005  06A3                     	comf	(___xxtofl@val)+0,w
  8006  06A3  0970               	movwf	(___xxtofl@arg)
  8007  06A4  00FA               	comf	(___xxtofl@val)+1,w
  8008  06A5  0971               	movwf	(___xxtofl@arg+1)
  8009  06A6  00FB               	comf	(___xxtofl@val)+2,w
  8010  06A7  0972               	movwf	(___xxtofl@arg+2)
  8011  06A8  00FC               	comf	(___xxtofl@val)+3,w
  8012  06A9  0973               	movwf	(___xxtofl@arg+3)
  8013  06AA  00FD               	incf	(___xxtofl@arg),f
  8014  06AB  0AFA               	skipnz
  8015  06AC  1903               	incf	(___xxtofl@arg+1),f
  8016  06AD  0AFB               	skipnz
  8017  06AE  1903               	incf	(___xxtofl@arg+2),f
  8018  06AF  0AFC               	skipnz
  8019  06B0  1903               	incf	(___xxtofl@arg+3),f
  8020  06B1  0AFD               	line	17
  8021                           	goto	i1l865
  8022  06B2  2EBB               	line	18
  8023                           	
  8024                           i1l864:	
  8025  06B3                     	line	19
  8026                           	
  8027                           i1l2304:	
  8028  06B3                     	movf	(___xxtofl@val+3),w
  8029  06B3  0873               	movwf	(___xxtofl@arg+3)
  8030  06B4  00FD               	movf	(___xxtofl@val+2),w
  8031  06B5  0872               	movwf	(___xxtofl@arg+2)
  8032  06B6  00FC               	movf	(___xxtofl@val+1),w
  8033  06B7  0871               	movwf	(___xxtofl@arg+1)
  8034  06B8  00FB               	movf	(___xxtofl@val),w
  8035  06B9  0870               	movwf	(___xxtofl@arg)
  8036  06BA  00FA               
  8037                           	line	20
  8038                           	
  8039                           i1l865:	
  8040  06BB                     	line	21
  8041                           	movf	(___xxtofl@val+3),w
  8042  06BB  0873               	iorwf	(___xxtofl@val+2),w
  8043  06BC  0472               	iorwf	(___xxtofl@val+1),w
  8044  06BD  0471               	iorwf	(___xxtofl@val),w
  8045  06BE  0470               	skipz
  8046  06BF  1D03               	goto	u241_21
  8047  06C0  2EC2               	goto	u241_20
  8048  06C1  2EC3               u241_21:
  8049  06C2                     	goto	i1l2310
  8050  06C2  2ECD               u241_20:
  8051  06C3                     	line	22
  8052                           	
  8053                           i1l2306:	
  8054  06C3                     	movlw	0x0
  8055  06C3  3000               	movwf	(?___xxtofl+3)
  8056  06C4  00F3               	movlw	0x0
  8057  06C5  3000               	movwf	(?___xxtofl+2)
  8058  06C6  00F2               	movlw	0x0
  8059  06C7  3000               	movwf	(?___xxtofl+1)
  8060  06C8  00F1               	movlw	0x0
  8061  06C9  3000               	movwf	(?___xxtofl)
  8062  06CA  00F0               
  8063                           	goto	i1l867
  8064  06CB  2F5A               	
  8065                           i1l2308:	
  8066  06CC                     	goto	i1l867
  8067  06CC  2F5A               	
  8068                           i1l866:	
  8069  06CD                     	line	23
  8070                           	
  8071                           i1l2310:	
  8072  06CD                     	movlw	low(096h)
  8073  06CD  3096               	movwf	(??___xxtofl+0)+0
  8074  06CE  00F4               	movf	(??___xxtofl+0)+0,w
  8075  06CF  0874               	movwf	(___xxtofl@exp)
  8076  06D0  00F9               	line	24
  8077                           	goto	i1l2314
  8078  06D1  2EE0               	
  8079                           i1l869:	
  8080  06D2                     	line	25
  8081                           	
  8082                           i1l2312:	
  8083  06D2                     	movlw	low(01h)
  8084  06D2  3001               	movwf	(??___xxtofl+0)+0
  8085  06D3  00F4               	movf	(??___xxtofl+0)+0,w
  8086  06D4  0874               	addwf	(___xxtofl@exp),f
  8087  06D5  07F9               	line	26
  8088                           	movlw	01h
  8089  06D6  3001               u242_25:
  8090  06D7                     	clrc
  8091  06D7  1003               	rrf	(___xxtofl@arg+3),f
  8092  06D8  0CFD               	rrf	(___xxtofl@arg+2),f
  8093  06D9  0CFC               	rrf	(___xxtofl@arg+1),f
  8094  06DA  0CFB               	rrf	(___xxtofl@arg),f
  8095  06DB  0CFA               	addlw	-1
  8096  06DC  3EFF               	skipz
  8097  06DD  1D03               	goto	u242_25
  8098  06DE  2ED7               
  8099                           	goto	i1l2314
  8100  06DF  2EE0               	line	27
  8101                           	
  8102                           i1l868:	
  8103  06E0                     	line	24
  8104                           	
  8105                           i1l2314:	
  8106  06E0                     	movlw	high highword(0FE000000h)
  8107  06E0  30FE               	andwf	(___xxtofl@arg+3),w
  8108  06E1  057D               	btfss	status,2
  8109  06E2  1D03               	goto	u243_21
  8110  06E3  2EE5               	goto	u243_20
  8111  06E4  2EE6               u243_21:
  8112  06E5                     	goto	i1l2312
  8113  06E5  2ED2               u243_20:
  8114  06E6                     	goto	i1l871
  8115  06E6  2F03               	
  8116                           i1l870:	
  8117  06E7                     	line	28
  8118                           	goto	i1l871
  8119  06E7  2F03               	
  8120                           i1l872:	
  8121  06E8                     	line	29
  8122                           	
  8123                           i1l2316:	
  8124  06E8                     	movlw	low(01h)
  8125  06E8  3001               	movwf	(??___xxtofl+0)+0
  8126  06E9  00F4               	movf	(??___xxtofl+0)+0,w
  8127  06EA  0874               	addwf	(___xxtofl@exp),f
  8128  06EB  07F9               	line	30
  8129                           	
  8130                           i1l2318:	
  8131  06EC                     	movlw	01h
  8132  06EC  3001               	addwf	(___xxtofl@arg),f
  8133  06ED  07FA               	movlw	0
  8134  06EE  3000               	skipnc
  8135  06EF  1803               movlw 1
  8136  06F0  3001               	addwf	(___xxtofl@arg+1),f
  8137  06F1  07FB               	movlw	0
  8138  06F2  3000               	skipnc
  8139  06F3  1803               movlw 1
  8140  06F4  3001               	addwf	(___xxtofl@arg+2),f
  8141  06F5  07FC               	movlw	0
  8142  06F6  3000               	skipnc
  8143  06F7  1803               movlw 1
  8144  06F8  3001               	addwf	(___xxtofl@arg+3),f
  8145  06F9  07FD               	line	31
  8146                           	
  8147                           i1l2320:	
  8148  06FA                     	movlw	01h
  8149  06FA  3001               u244_25:
  8150  06FB                     	clrc
  8151  06FB  1003               	rrf	(___xxtofl@arg+3),f
  8152  06FC  0CFD               	rrf	(___xxtofl@arg+2),f
  8153  06FD  0CFC               	rrf	(___xxtofl@arg+1),f
  8154  06FE  0CFB               	rrf	(___xxtofl@arg),f
  8155  06FF  0CFA               	addlw	-1
  8156  0700  3EFF               	skipz
  8157  0701  1D03               	goto	u244_25
  8158  0702  2EFB               
  8159                           	line	32
  8160                           	
  8161                           i1l871:	
  8162  0703                     	line	28
  8163                           	movlw	high highword(0FF000000h)
  8164  0703  30FF               	andwf	(___xxtofl@arg+3),w
  8165  0704  057D               	btfss	status,2
  8166  0705  1D03               	goto	u245_21
  8167  0706  2F08               	goto	u245_20
  8168  0707  2F09               u245_21:
  8169  0708                     	goto	i1l2316
  8170  0708  2EE8               u245_20:
  8171  0709                     	goto	i1l2324
  8172  0709  2F17               	
  8173                           i1l873:	
  8174  070A                     	line	33
  8175                           	goto	i1l2324
  8176  070A  2F17               	
  8177                           i1l875:	
  8178  070B                     	line	34
  8179                           	
  8180                           i1l2322:	
  8181  070B                     	movlw	01h
  8182  070B  3001               	subwf	(___xxtofl@exp),f
  8183  070C  02F9               	line	35
  8184                           	movlw	01h
  8185  070D  3001               	movwf	(??___xxtofl+0)+0
  8186  070E  00F4               u246_25:
  8187  070F                     	clrc
  8188  070F  1003               	rlf	(___xxtofl@arg),f
  8189  0710  0DFA               	rlf	(___xxtofl@arg+1),f
  8190  0711  0DFB               	rlf	(___xxtofl@arg+2),f
  8191  0712  0DFC               	rlf	(___xxtofl@arg+3),f
  8192  0713  0DFD               	decfsz	(??___xxtofl+0)+0
  8193  0714  0BF4               	goto	u246_25
  8194  0715  2F0F               	goto	i1l2324
  8195  0716  2F17               	line	36
  8196                           	
  8197                           i1l874:	
  8198  0717                     	line	33
  8199                           	
  8200                           i1l2324:	
  8201  0717                     	btfsc	(___xxtofl@arg+2),(23)&7
  8202  0717  1BFC               	goto	u247_21
  8203  0718  2F1A               	goto	u247_20
  8204  0719  2F1B               u247_21:
  8205  071A                     	goto	i1l878
  8206  071A  2F22               u247_20:
  8207  071B                     	
  8208                           i1l2326:	
  8209  071B                     	movlw	low(02h)
  8210  071B  3002               	subwf	(___xxtofl@exp),w
  8211  071C  0279               	skipnc
  8212  071D  1803               	goto	u248_21
  8213  071E  2F20               	goto	u248_20
  8214  071F  2F21               u248_21:
  8215  0720                     	goto	i1l2322
  8216  0720  2F0B               u248_20:
  8217  0721                     	goto	i1l878
  8218  0721  2F22               	
  8219                           i1l877:	
  8220  0722                     	
  8221                           i1l878:	
  8222  0722                     	line	37
  8223                           	btfsc	(___xxtofl@exp),(0)&7
  8224  0722  1879               	goto	u249_21
  8225  0723  2F25               	goto	u249_20
  8226  0724  2F26               u249_21:
  8227  0725                     	goto	i1l879
  8228  0725  2F2E               u249_20:
  8229  0726                     	line	38
  8230                           	
  8231                           i1l2328:	
  8232  0726                     	movlw	0FFh
  8233  0726  30FF               	andwf	(___xxtofl@arg),f
  8234  0727  05FA               	movlw	0FFh
  8235  0728  30FF               	andwf	(___xxtofl@arg+1),f
  8236  0729  05FB               	movlw	07Fh
  8237  072A  307F               	andwf	(___xxtofl@arg+2),f
  8238  072B  05FC               	movlw	0FFh
  8239  072C  30FF               	andwf	(___xxtofl@arg+3),f
  8240  072D  05FD               	
  8241                           i1l879:	
  8242  072E                     	line	39
  8243                           	clrc
  8244  072E  1003               	rrf	(___xxtofl@exp),f
  8245  072F  0CF9               
  8246                           	line	40
  8247                           	
  8248                           i1l2330:	
  8249  0730                     	movf	(___xxtofl@exp),w
  8250  0730  0879               	movwf	(??___xxtofl+0)+0
  8251  0731  00F4               	clrf	(??___xxtofl+0)+0+1
  8252  0732  01F5               	clrf	(??___xxtofl+0)+0+2
  8253  0733  01F6               	clrf	(??___xxtofl+0)+0+3
  8254  0734  01F7               	movlw	018h
  8255  0735  3018               u250_25:
  8256  0736                     	clrc
  8257  0736  1003               	rlf	(??___xxtofl+0)+0,f
  8258  0737  0DF4               	rlf	(??___xxtofl+0)+1,f
  8259  0738  0DF5               	rlf	(??___xxtofl+0)+2,f
  8260  0739  0DF6               	rlf	(??___xxtofl+0)+3,f
  8261  073A  0DF7               u250_20:
  8262  073B                     	addlw	-1
  8263  073B  3EFF               	skipz
  8264  073C  1D03               	goto	u250_25
  8265  073D  2F36               	movf	0+(??___xxtofl+0)+0,w
  8266  073E  0874               	iorwf	(___xxtofl@arg),f
  8267  073F  04FA               	movf	1+(??___xxtofl+0)+0,w
  8268  0740  0875               	iorwf	(___xxtofl@arg+1),f
  8269  0741  04FB               	movf	2+(??___xxtofl+0)+0,w
  8270  0742  0876               	iorwf	(___xxtofl@arg+2),f
  8271  0743  04FC               	movf	3+(??___xxtofl+0)+0,w
  8272  0744  0877               	iorwf	(___xxtofl@arg+3),f
  8273  0745  04FD               	line	41
  8274                           	
  8275                           i1l2332:	
  8276  0746                     	movf	((___xxtofl@sign)),w
  8277  0746  0878               	btfsc	status,2
  8278  0747  1903               	goto	u251_21
  8279  0748  2F4A               	goto	u251_20
  8280  0749  2F4B               u251_21:
  8281  074A                     	goto	i1l2338
  8282  074A  2F51               u251_20:
  8283  074B                     	
  8284                           i1l2334:	
  8285  074B                     	btfss	(___xxtofl@val+3),7
  8286  074B  1FF3               	goto	u252_21
  8287  074C  2F4E               	goto	u252_20
  8288  074D  2F4F               u252_21:
  8289  074E                     	goto	i1l2338
  8290  074E  2F51               u252_20:
  8291  074F                     	line	42
  8292                           	
  8293                           i1l2336:	
  8294  074F                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  8295  074F  17FD               	goto	i1l2338
  8296  0750  2F51               	
  8297                           i1l880:	
  8298  0751                     	line	43
  8299                           	
  8300                           i1l2338:	
  8301  0751                     	movf	(___xxtofl@arg+3),w
  8302  0751  087D               	movwf	(?___xxtofl+3)
  8303  0752  00F3               	movf	(___xxtofl@arg+2),w
  8304  0753  087C               	movwf	(?___xxtofl+2)
  8305  0754  00F2               	movf	(___xxtofl@arg+1),w
  8306  0755  087B               	movwf	(?___xxtofl+1)
  8307  0756  00F1               	movf	(___xxtofl@arg),w
  8308  0757  087A               	movwf	(?___xxtofl)
  8309  0758  00F0               
  8310                           	goto	i1l867
  8311  0759  2F5A               	
  8312                           i1l2340:	
  8313  075A                     	line	44
  8314                           	
  8315                           i1l867:	
  8316  075A                     	return
  8317  075A  0008               	opt stack 0
  8318                           GLOBAL	__end_of___xxtofl
  8319                           	__end_of___xxtofl:
  8320  075B                     	signat	___xxtofl,8316
  8321                           	global	___fltol
  8322                           
  8323 ;; *************** function ___fltol *****************
  8324 ;; Defined at:
  8325 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  f1              4   24[BANK0 ] unsigned char 
  8328 ;; Auto vars:     Size  Location     Type
  8329 ;;  exp1            1   34[BANK0 ] unsigned char 
  8330 ;;  sign1           1   33[BANK0 ] unsigned char 
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  4   24[BANK0 ] long 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2, status,0
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8340 ;;      Params:         0       4       0       0       0
  8341 ;;      Locals:         0       2       0       0       0
  8342 ;;      Temps:          0       5       0       0       0
  8343 ;;      Totals:         0      11       0       0       0
  8344 ;;Total ram usage:       11 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; This function calls:
  8347 ;;		Nothing
  8348 ;; This function is called by:
  8349 ;;		_is_deadzone
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           psect	text28,local,class=CODE,delta=2,merge=1,group=1
  8353                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8354                           	line	43
  8355                           global __ptext28
  8356                           __ptext28:	;psect for function ___fltol
  8357  075B                     psect	text28
  8358                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  8359                           	line	43
  8360                           	global	__size_of___fltol
  8361                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  8362  009C                     	
  8363                           ___fltol:	
  8364  075B                     ;incstack = 0
  8365 ;; hardware stack exceeded
  8366                           	opt	stack 0
  8367                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8368                           	line	47
  8369                           	
  8370                           i1l2068:	
  8371  075B                     	bcf	status, 5	;RP0=0, select bank0
  8372  075B  1283               	bcf	status, 6	;RP1=0, select bank0
  8373  075C  1303               	movf	(___fltol@f1),w
  8374  075D  0838               	movwf	(??___fltol+0)+0
  8375  075E  00BC               	movf	(___fltol@f1+1),w
  8376  075F  0839               	movwf	((??___fltol+0)+0+1)
  8377  0760  00BD               	movf	(___fltol@f1+2),w
  8378  0761  083A               	movwf	((??___fltol+0)+0+2)
  8379  0762  00BE               	movf	(___fltol@f1+3),w
  8380  0763  083B               	movwf	((??___fltol+0)+0+3)
  8381  0764  00BF               	clrc
  8382  0765  1003               	rlf	(??___fltol+0)+2,w
  8383  0766  0D3E               	rlf	(??___fltol+0)+3,w
  8384  0767  0D3F               	movwf	(??___fltol+4)+0
  8385  0768  00C0               	movf	(??___fltol+4)+0,w
  8386  0769  0840               	movwf	(___fltol@exp1)
  8387  076A  00C2               	movf	(((___fltol@exp1))),w
  8388  076B  0842               	btfss	status,2
  8389  076C  1D03               	goto	u183_21
  8390  076D  2F6F               	goto	u183_20
  8391  076E  2F70               u183_21:
  8392  076F                     	goto	i1l2074
  8393  076F  2F7A               u183_20:
  8394  0770                     	line	48
  8395                           	
  8396                           i1l2070:	
  8397  0770                     	movlw	high highword(0)
  8398  0770  3000               	movwf	(?___fltol+3)
  8399  0771  00BB               	movlw	low highword(0)
  8400  0772  3000               	movwf	(?___fltol+2)
  8401  0773  00BA               	movlw	high(0)
  8402  0774  3000               	movwf	(?___fltol+1)
  8403  0775  00B9               	movlw	low(0)
  8404  0776  3000               	movwf	(?___fltol)
  8405  0777  00B8               
  8406                           	goto	i1l643
  8407  0778  2FF6               	
  8408                           i1l2072:	
  8409  0779                     	goto	i1l643
  8410  0779  2FF6               	
  8411                           i1l642:	
  8412  077A                     	line	49
  8413                           	
  8414                           i1l2074:	
  8415  077A                     	movf	(___fltol@f1),w
  8416  077A  0838               	movwf	(??___fltol+0)+0
  8417  077B  00BC               	movf	(___fltol@f1+1),w
  8418  077C  0839               	movwf	((??___fltol+0)+0+1)
  8419  077D  00BD               	movf	(___fltol@f1+2),w
  8420  077E  083A               	movwf	((??___fltol+0)+0+2)
  8421  077F  00BE               	movf	(___fltol@f1+3),w
  8422  0780  083B               	movwf	((??___fltol+0)+0+3)
  8423  0781  00BF               	movlw	01Fh
  8424  0782  301F               u184_25:
  8425  0783                     	clrc
  8426  0783  1003               	rrf	(??___fltol+0)+3,f
  8427  0784  0CBF               	rrf	(??___fltol+0)+2,f
  8428  0785  0CBE               	rrf	(??___fltol+0)+1,f
  8429  0786  0CBD               	rrf	(??___fltol+0)+0,f
  8430  0787  0CBC               u184_20:
  8431  0788                     	addlw	-1
  8432  0788  3EFF               	skipz
  8433  0789  1D03               	goto	u184_25
  8434  078A  2F83               	movf	0+(??___fltol+0)+0,w
  8435  078B  083C               	movwf	(??___fltol+4)+0
  8436  078C  00C0               	movf	(??___fltol+4)+0,w
  8437  078D  0840               	movwf	(___fltol@sign1)
  8438  078E  00C1               	line	50
  8439                           	
  8440                           i1l2076:	
  8441  078F                     	bsf	(___fltol@f1)+(23/8),(23)&7
  8442  078F  17BA               	line	51
  8443                           	
  8444                           i1l2078:	
  8445  0790                     	movlw	0FFh
  8446  0790  30FF               	andwf	(___fltol@f1),f
  8447  0791  05B8               	movlw	0FFh
  8448  0792  30FF               	andwf	(___fltol@f1+1),f
  8449  0793  05B9               	movlw	0FFh
  8450  0794  30FF               	andwf	(___fltol@f1+2),f
  8451  0795  05BA               	movlw	0
  8452  0796  3000               	andwf	(___fltol@f1+3),f
  8453  0797  05BB               	line	52
  8454                           	
  8455                           i1l2080:	
  8456  0798                     	movlw	096h
  8457  0798  3096               	subwf	(___fltol@exp1),f
  8458  0799  02C2               	line	53
  8459                           	
  8460                           i1l2082:	
  8461  079A                     	btfss	(___fltol@exp1),7
  8462  079A  1FC2               	goto	u185_21
  8463  079B  2F9D               	goto	u185_20
  8464  079C  2F9E               u185_21:
  8465  079D                     	goto	i1l2092
  8466  079D  2FC3               u185_20:
  8467  079E                     	line	54
  8468                           	
  8469                           i1l2084:	
  8470  079E                     	movf	(___fltol@exp1),w
  8471  079E  0842               	xorlw	80h
  8472  079F  3A80               	addlw	-((-23)^80h)
  8473  07A0  3E97               	skipnc
  8474  07A1  1803               	goto	u186_21
  8475  07A2  2FA4               	goto	u186_20
  8476  07A3  2FA5               u186_21:
  8477  07A4                     	goto	i1l2090
  8478  07A4  2FB0               u186_20:
  8479  07A5                     	line	55
  8480                           	
  8481                           i1l2086:	
  8482  07A5                     	movlw	high highword(0)
  8483  07A5  3000               	movwf	(?___fltol+3)
  8484  07A6  00BB               	movlw	low highword(0)
  8485  07A7  3000               	movwf	(?___fltol+2)
  8486  07A8  00BA               	movlw	high(0)
  8487  07A9  3000               	movwf	(?___fltol+1)
  8488  07AA  00B9               	movlw	low(0)
  8489  07AB  3000               	movwf	(?___fltol)
  8490  07AC  00B8               
  8491                           	goto	i1l643
  8492  07AD  2FF6               	
  8493                           i1l2088:	
  8494  07AE                     	goto	i1l643
  8495  07AE  2FF6               	
  8496                           i1l645:	
  8497  07AF                     	goto	i1l2090
  8498  07AF  2FB0               	line	56
  8499                           	
  8500                           i1l646:	
  8501  07B0                     	line	57
  8502                           	
  8503                           i1l2090:	
  8504  07B0                     	movlw	01h
  8505  07B0  3001               u187_25:
  8506  07B1                     	clrc
  8507  07B1  1003               	rrf	(___fltol@f1+3),f
  8508  07B2  0CBB               	rrf	(___fltol@f1+2),f
  8509  07B3  0CBA               	rrf	(___fltol@f1+1),f
  8510  07B4  0CB9               	rrf	(___fltol@f1),f
  8511  07B5  0CB8               	addlw	-1
  8512  07B6  3EFF               	skipz
  8513  07B7  1D03               	goto	u187_25
  8514  07B8  2FB1               
  8515                           	line	58
  8516                           	movlw	low(01h)
  8517  07B9  3001               	movwf	(??___fltol+0)+0
  8518  07BA  00BC               	movf	(??___fltol+0)+0,w
  8519  07BB  083C               	addwf	(___fltol@exp1),f
  8520  07BC  07C2               	btfss	status,2
  8521  07BD  1D03               	goto	u188_21
  8522  07BE  2FC0               	goto	u188_20
  8523  07BF  2FC1               u188_21:
  8524  07C0                     	goto	i1l2090
  8525  07C0  2FB0               u188_20:
  8526  07C1                     	goto	i1l2100
  8527  07C1  2FE6               	
  8528                           i1l647:	
  8529  07C2                     	line	59
  8530                           	goto	i1l2100
  8531  07C2  2FE6               	
  8532                           i1l644:	
  8533  07C3                     	line	60
  8534                           	
  8535                           i1l2092:	
  8536  07C3                     	movlw	low(020h)
  8537  07C3  3020               	subwf	(___fltol@exp1),w
  8538  07C4  0242               	skipc
  8539  07C5  1C03               	goto	u189_21
  8540  07C6  2FC8               	goto	u189_20
  8541  07C7  2FC9               u189_21:
  8542  07C8                     	goto	i1l650
  8543  07C8  2FDF               u189_20:
  8544  07C9                     	line	61
  8545                           	
  8546                           i1l2094:	
  8547  07C9                     	movlw	high highword(0)
  8548  07C9  3000               	movwf	(?___fltol+3)
  8549  07CA  00BB               	movlw	low highword(0)
  8550  07CB  3000               	movwf	(?___fltol+2)
  8551  07CC  00BA               	movlw	high(0)
  8552  07CD  3000               	movwf	(?___fltol+1)
  8553  07CE  00B9               	movlw	low(0)
  8554  07CF  3000               	movwf	(?___fltol)
  8555  07D0  00B8               
  8556                           	goto	i1l643
  8557  07D1  2FF6               	
  8558                           i1l2096:	
  8559  07D2                     	goto	i1l643
  8560  07D2  2FF6               	
  8561                           i1l649:	
  8562  07D3                     	line	62
  8563                           	goto	i1l650
  8564  07D3  2FDF               	
  8565                           i1l651:	
  8566  07D4                     	line	63
  8567                           	
  8568                           i1l2098:	
  8569  07D4                     	movlw	01h
  8570  07D4  3001               	movwf	(??___fltol+0)+0
  8571  07D5  00BC               u190_25:
  8572  07D6                     	clrc
  8573  07D6  1003               	rlf	(___fltol@f1),f
  8574  07D7  0DB8               	rlf	(___fltol@f1+1),f
  8575  07D8  0DB9               	rlf	(___fltol@f1+2),f
  8576  07D9  0DBA               	rlf	(___fltol@f1+3),f
  8577  07DA  0DBB               	decfsz	(??___fltol+0)+0
  8578  07DB  0BBC               	goto	u190_25
  8579  07DC  2FD6               	line	64
  8580                           	movlw	01h
  8581  07DD  3001               	subwf	(___fltol@exp1),f
  8582  07DE  02C2               	line	65
  8583                           	
  8584                           i1l650:	
  8585  07DF                     	line	62
  8586                           	movf	((___fltol@exp1)),w
  8587  07DF  0842               	btfss	status,2
  8588  07E0  1D03               	goto	u191_21
  8589  07E1  2FE3               	goto	u191_20
  8590  07E2  2FE4               u191_21:
  8591  07E3                     	goto	i1l2098
  8592  07E3  2FD4               u191_20:
  8593  07E4                     	goto	i1l2100
  8594  07E4  2FE6               	
  8595                           i1l652:	
  8596  07E5                     	goto	i1l2100
  8597  07E5  2FE6               	line	66
  8598                           	
  8599                           i1l648:	
  8600  07E6                     	line	67
  8601                           	
  8602                           i1l2100:	
  8603  07E6                     	movf	((___fltol@sign1)),w
  8604  07E6  0841               	btfsc	status,2
  8605  07E7  1903               	goto	u192_21
  8606  07E8  2FEA               	goto	u192_20
  8607  07E9  2FEB               u192_21:
  8608  07EA                     	goto	i1l653
  8609  07EA  2FF6               u192_20:
  8610  07EB                     	line	68
  8611                           	
  8612                           i1l2102:	
  8613  07EB                     	comf	(___fltol@f1),f
  8614  07EB  09B8               	comf	(___fltol@f1+1),f
  8615  07EC  09B9               	comf	(___fltol@f1+2),f
  8616  07ED  09BA               	comf	(___fltol@f1+3),f
  8617  07EE  09BB               	incf	(___fltol@f1),f
  8618  07EF  0AB8               	skipnz
  8619  07F0  1903               	incf	(___fltol@f1+1),f
  8620  07F1  0AB9               	skipnz
  8621  07F2  1903               	incf	(___fltol@f1+2),f
  8622  07F3  0ABA               	skipnz
  8623  07F4  1903               	incf	(___fltol@f1+3),f
  8624  07F5  0ABB               	
  8625                           i1l653:	
  8626  07F6                     	line	69
  8627                           	line	70
  8628                           	
  8629                           i1l643:	
  8630  07F6                     	return
  8631  07F6  0008               	opt stack 0
  8632                           GLOBAL	__end_of___fltol
  8633                           	__end_of___fltol:
  8634  07F7                     	signat	___fltol,4220
  8635                           	global	___fladd
  8636                           
  8637 ;; *************** function ___fladd *****************
  8638 ;; Defined at:
  8639 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;  b               4    0[BANK0 ] long 
  8642 ;;  a               4    4[BANK0 ] long 
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  grs             1   23[BANK0 ] unsigned char 
  8645 ;;  bexp            1   22[BANK0 ] unsigned char 
  8646 ;;  aexp            1   21[BANK0 ] unsigned char 
  8647 ;;  signs           1   20[BANK0 ] unsigned char 
  8648 ;; Return value:  Size  Location     Type
  8649 ;;                  4    0[BANK0 ] unsigned char 
  8650 ;; Registers used:
  8651 ;;		wreg, status,2, status,0, btemp+1
  8652 ;; Tracked objects:
  8653 ;;		On entry : 0/0
  8654 ;;		On exit  : 0/0
  8655 ;;		Unchanged: 0/0
  8656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8657 ;;      Params:         0       8       0       0       0
  8658 ;;      Locals:         0       4       0       0       0
  8659 ;;      Temps:          0      12       0       0       0
  8660 ;;      Totals:         0      24       0       0       0
  8661 ;;Total ram usage:       24 bytes
  8662 ;; Hardware stack levels used:    1
  8663 ;; This function calls:
  8664 ;;		Nothing
  8665 ;; This function is called by:
  8666 ;;		_is_deadzone
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           psect	text29,local,class=CODE,delta=2,merge=1,group=1
  8670                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8671                           	line	10
  8672                           global __ptext29
  8673                           __ptext29:	;psect for function ___fladd
  8674  0031                     psect	text29
  8675                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8676                           	line	10
  8677                           	global	__size_of___fladd
  8678                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8679  02BC                     	
  8680                           ___fladd:	
  8681  0031                     ;incstack = 0
  8682 ;; hardware stack exceeded
  8683                           	opt	stack 0
  8684                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8685                           	line	21
  8686                           	
  8687                           i1l2104:	
  8688  0031                     	bcf	status, 5	;RP0=0, select bank0
  8689  0031  1283               	bcf	status, 6	;RP1=0, select bank0
  8690  0032  1303               	movf	0+(___fladd@b)+03h,w
  8691  0033  0823               	andlw	080h
  8692  0034  3980               	movwf	(??___fladd+0)+0
  8693  0035  00A8               	movf	(??___fladd+0)+0,w
  8694  0036  0828               	movwf	(___fladd@signs)
  8695  0037  00B4               	line	22
  8696                           	
  8697                           i1l2106:	
  8698  0038                     	movf	0+(___fladd@b)+03h,w
  8699  0038  0823               	movwf	(??___fladd+0)+0
  8700  0039  00A8               	addwf	(??___fladd+0)+0,w
  8701  003A  0728               	movwf	(??___fladd+1)+0
  8702  003B  00A9               	movf	(??___fladd+1)+0,w
  8703  003C  0829               	movwf	(___fladd@bexp)
  8704  003D  00B6               	line	23
  8705                           	
  8706                           i1l2108:	
  8707  003E                     	btfss	0+(___fladd@b)+02h,(7)&7
  8708  003E  1FA2               	goto	u193_21
  8709  003F  2841               	goto	u193_20
  8710  0040  2842               u193_21:
  8711  0041                     	goto	i1l2112
  8712  0041  2844               u193_20:
  8713  0042                     	line	24
  8714                           	
  8715                           i1l2110:	
  8716  0042                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8717  0042  1436               	goto	i1l2112
  8718  0043  2844               	line	25
  8719                           	
  8720                           i1l742:	
  8721  0044                     	line	28
  8722                           	
  8723                           i1l2112:	
  8724  0044                     	movf	((___fladd@bexp)),w
  8725  0044  0836               	btfsc	status,2
  8726  0045  1903               	goto	u194_21
  8727  0046  2848               	goto	u194_20
  8728  0047  2849               u194_21:
  8729  0048                     	goto	i1l2122
  8730  0048  285A               u194_20:
  8731  0049                     	line	30
  8732                           	
  8733                           i1l2114:	
  8734  0049                     		incf	((___fladd@bexp)),w
  8735  0049  0A36               	btfss	status,2
  8736  004A  1D03               	goto	u195_21
  8737  004B  284D               	goto	u195_20
  8738  004C  284E               u195_21:
  8739  004D                     	goto	i1l2118
  8740  004D  2857               u195_20:
  8741  004E                     	line	32
  8742                           	
  8743                           i1l2116:	
  8744  004E                     	movlw	0x0
  8745  004E  3000               	movwf	(___fladd@b+3)
  8746  004F  00A3               	movlw	0x0
  8747  0050  3000               	movwf	(___fladd@b+2)
  8748  0051  00A2               	movlw	0x0
  8749  0052  3000               	movwf	(___fladd@b+1)
  8750  0053  00A1               	movlw	0x0
  8751  0054  3000               	movwf	(___fladd@b)
  8752  0055  00A0               
  8753                           	goto	i1l2118
  8754  0056  2857               	line	33
  8755                           	
  8756                           i1l744:	
  8757  0057                     	line	35
  8758                           	
  8759                           i1l2118:	
  8760  0057                     	bsf	(___fladd@b)+(23/8),(23)&7
  8761  0057  17A2               	line	37
  8762                           	
  8763                           i1l2120:	
  8764  0058                     	clrf	0+(___fladd@b)+03h
  8765  0058  01A3               	line	38
  8766                           	goto	i1l2124
  8767  0059  2863               	line	39
  8768                           	
  8769                           i1l743:	
  8770  005A                     	line	41
  8771                           	
  8772                           i1l2122:	
  8773  005A                     	movlw	0x0
  8774  005A  3000               	movwf	(___fladd@b+3)
  8775  005B  00A3               	movlw	0x0
  8776  005C  3000               	movwf	(___fladd@b+2)
  8777  005D  00A2               	movlw	0x0
  8778  005E  3000               	movwf	(___fladd@b+1)
  8779  005F  00A1               	movlw	0x0
  8780  0060  3000               	movwf	(___fladd@b)
  8781  0061  00A0               
  8782                           	goto	i1l2124
  8783  0062  2863               	line	42
  8784                           	
  8785                           i1l745:	
  8786  0063                     	line	44
  8787                           	
  8788                           i1l2124:	
  8789  0063                     	movf	0+(___fladd@a)+03h,w
  8790  0063  0827               	andlw	080h
  8791  0064  3980               	movwf	(??___fladd+0)+0
  8792  0065  00A8               	movf	(??___fladd+0)+0,w
  8793  0066  0828               	movwf	(___fladd@aexp)
  8794  0067  00B5               	line	46
  8795                           	
  8796                           i1l2126:	
  8797  0068                     	movf	(___fladd@aexp),w
  8798  0068  0835               	xorwf	(___fladd@signs),w
  8799  0069  0634               	skipnz
  8800  006A  1903               	goto	u196_21
  8801  006B  286D               	goto	u196_20
  8802  006C  286E               u196_21:
  8803  006D                     	goto	i1l2130
  8804  006D  2870               u196_20:
  8805  006E                     	line	47
  8806                           	
  8807                           i1l2128:	
  8808  006E                     	bsf	(___fladd@signs)+(6/8),(6)&7
  8809  006E  1734               	goto	i1l2130
  8810  006F  2870               	line	48
  8811                           	
  8812                           i1l746:	
  8813  0070                     	line	49
  8814                           	
  8815                           i1l2130:	
  8816  0070                     	movf	0+(___fladd@a)+03h,w
  8817  0070  0827               	movwf	(??___fladd+0)+0
  8818  0071  00A8               	addwf	(??___fladd+0)+0,w
  8819  0072  0728               	movwf	(??___fladd+1)+0
  8820  0073  00A9               	movf	(??___fladd+1)+0,w
  8821  0074  0829               	movwf	(___fladd@aexp)
  8822  0075  00B5               	line	50
  8823                           	
  8824                           i1l2132:	
  8825  0076                     	btfss	0+(___fladd@a)+02h,(7)&7
  8826  0076  1FA6               	goto	u197_21
  8827  0077  2879               	goto	u197_20
  8828  0078  287A               u197_21:
  8829  0079                     	goto	i1l2136
  8830  0079  287C               u197_20:
  8831  007A                     	line	51
  8832                           	
  8833                           i1l2134:	
  8834  007A                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  8835  007A  1435               	goto	i1l2136
  8836  007B  287C               	line	52
  8837                           	
  8838                           i1l747:	
  8839  007C                     	line	55
  8840                           	
  8841                           i1l2136:	
  8842  007C                     	movf	((___fladd@aexp)),w
  8843  007C  0835               	btfsc	status,2
  8844  007D  1903               	goto	u198_21
  8845  007E  2880               	goto	u198_20
  8846  007F  2881               u198_21:
  8847  0080                     	goto	i1l2146
  8848  0080  2892               u198_20:
  8849  0081                     	line	57
  8850                           	
  8851                           i1l2138:	
  8852  0081                     		incf	((___fladd@aexp)),w
  8853  0081  0A35               	btfss	status,2
  8854  0082  1D03               	goto	u199_21
  8855  0083  2885               	goto	u199_20
  8856  0084  2886               u199_21:
  8857  0085                     	goto	i1l2142
  8858  0085  288F               u199_20:
  8859  0086                     	line	59
  8860                           	
  8861                           i1l2140:	
  8862  0086                     	movlw	0x0
  8863  0086  3000               	movwf	(___fladd@a+3)
  8864  0087  00A7               	movlw	0x0
  8865  0088  3000               	movwf	(___fladd@a+2)
  8866  0089  00A6               	movlw	0x0
  8867  008A  3000               	movwf	(___fladd@a+1)
  8868  008B  00A5               	movlw	0x0
  8869  008C  3000               	movwf	(___fladd@a)
  8870  008D  00A4               
  8871                           	goto	i1l2142
  8872  008E  288F               	line	60
  8873                           	
  8874                           i1l749:	
  8875  008F                     	line	62
  8876                           	
  8877                           i1l2142:	
  8878  008F                     	bsf	(___fladd@a)+(23/8),(23)&7
  8879  008F  17A6               	line	64
  8880                           	
  8881                           i1l2144:	
  8882  0090                     	clrf	0+(___fladd@a)+03h
  8883  0090  01A7               	line	65
  8884                           	goto	i1l750
  8885  0091  289A               	line	66
  8886                           	
  8887                           i1l748:	
  8888  0092                     	line	68
  8889                           	
  8890                           i1l2146:	
  8891  0092                     	movlw	0x0
  8892  0092  3000               	movwf	(___fladd@a+3)
  8893  0093  00A7               	movlw	0x0
  8894  0094  3000               	movwf	(___fladd@a+2)
  8895  0095  00A6               	movlw	0x0
  8896  0096  3000               	movwf	(___fladd@a+1)
  8897  0097  00A5               	movlw	0x0
  8898  0098  3000               	movwf	(___fladd@a)
  8899  0099  00A4               
  8900                           	line	69
  8901                           	
  8902                           i1l750:	
  8903  009A                     	line	75
  8904                           	movf	(___fladd@bexp),w
  8905  009A  0836               	subwf	(___fladd@aexp),w
  8906  009B  0235               	skipnc
  8907  009C  1803               	goto	u200_21
  8908  009D  289F               	goto	u200_20
  8909  009E  28A0               u200_21:
  8910  009F                     	goto	i1l2182
  8911  009F  28E6               u200_20:
  8912  00A0                     	line	77
  8913                           	
  8914                           i1l2148:	
  8915  00A0                     	btfss	(___fladd@signs),(6)&7
  8916  00A0  1F34               	goto	u201_21
  8917  00A1  28A3               	goto	u201_20
  8918  00A2  28A4               u201_21:
  8919  00A3                     	goto	i1l2152
  8920  00A3  28A9               u201_20:
  8921  00A4                     	line	78
  8922                           	
  8923                           i1l2150:	
  8924  00A4                     	movlw	low(080h)
  8925  00A4  3080               	movwf	(??___fladd+0)+0
  8926  00A5  00A8               	movf	(??___fladd+0)+0,w
  8927  00A6  0828               	xorwf	(___fladd@signs),f
  8928  00A7  06B4               	goto	i1l2152
  8929  00A8  28A9               	line	79
  8930                           	
  8931                           i1l752:	
  8932  00A9                     	line	81
  8933                           	
  8934                           i1l2152:	
  8935  00A9                     	movf	(___fladd@bexp),w
  8936  00A9  0836               	movwf	(??___fladd+0)+0
  8937  00AA  00A8               	movf	(??___fladd+0)+0,w
  8938  00AB  0828               	movwf	(___fladd@grs)
  8939  00AC  00B7               	line	82
  8940                           	
  8941                           i1l2154:	
  8942  00AD                     	movf	(___fladd@aexp),w
  8943  00AD  0835               	movwf	(??___fladd+0)+0
  8944  00AE  00A8               	movf	(??___fladd+0)+0,w
  8945  00AF  0828               	movwf	(___fladd@bexp)
  8946  00B0  00B6               	line	83
  8947                           	
  8948                           i1l2156:	
  8949  00B1                     	movf	(___fladd@grs),w
  8950  00B1  0837               	movwf	(??___fladd+0)+0
  8951  00B2  00A8               	movf	(??___fladd+0)+0,w
  8952  00B3  0828               	movwf	(___fladd@aexp)
  8953  00B4  00B5               	line	84
  8954                           	
  8955                           i1l2158:	
  8956  00B5                     	movf	(___fladd@b),w
  8957  00B5  0820               	movwf	(??___fladd+0)+0
  8958  00B6  00A8               	movf	(??___fladd+0)+0,w
  8959  00B7  0828               	movwf	(___fladd@grs)
  8960  00B8  00B7               	line	85
  8961                           	
  8962                           i1l2160:	
  8963  00B9                     	movf	(___fladd@a),w
  8964  00B9  0824               	movwf	(??___fladd+0)+0
  8965  00BA  00A8               	movf	(??___fladd+0)+0,w
  8966  00BB  0828               	movwf	(___fladd@b)
  8967  00BC  00A0               	line	86
  8968                           	
  8969                           i1l2162:	
  8970  00BD                     	movf	(___fladd@grs),w
  8971  00BD  0837               	movwf	(??___fladd+0)+0
  8972  00BE  00A8               	movf	(??___fladd+0)+0,w
  8973  00BF  0828               	movwf	(___fladd@a)
  8974  00C0  00A4               	line	87
  8975                           	
  8976                           i1l2164:	
  8977  00C1                     	movf	0+(___fladd@b)+01h,w
  8978  00C1  0821               	movwf	(??___fladd+0)+0
  8979  00C2  00A8               	movf	(??___fladd+0)+0,w
  8980  00C3  0828               	movwf	(___fladd@grs)
  8981  00C4  00B7               	line	88
  8982                           	
  8983                           i1l2166:	
  8984  00C5                     	movf	0+(___fladd@a)+01h,w
  8985  00C5  0825               	movwf	(??___fladd+0)+0
  8986  00C6  00A8               	movf	(??___fladd+0)+0,w
  8987  00C7  0828               	movwf	0+(___fladd@b)+01h
  8988  00C8  00A1               	line	89
  8989                           	
  8990                           i1l2168:	
  8991  00C9                     	movf	(___fladd@grs),w
  8992  00C9  0837               	movwf	(??___fladd+0)+0
  8993  00CA  00A8               	movf	(??___fladd+0)+0,w
  8994  00CB  0828               	movwf	0+(___fladd@a)+01h
  8995  00CC  00A5               	line	90
  8996                           	
  8997                           i1l2170:	
  8998  00CD                     	movf	0+(___fladd@b)+02h,w
  8999  00CD  0822               	movwf	(??___fladd+0)+0
  9000  00CE  00A8               	movf	(??___fladd+0)+0,w
  9001  00CF  0828               	movwf	(___fladd@grs)
  9002  00D0  00B7               	line	91
  9003                           	
  9004                           i1l2172:	
  9005  00D1                     	movf	0+(___fladd@a)+02h,w
  9006  00D1  0826               	movwf	(??___fladd+0)+0
  9007  00D2  00A8               	movf	(??___fladd+0)+0,w
  9008  00D3  0828               	movwf	0+(___fladd@b)+02h
  9009  00D4  00A2               	line	92
  9010                           	
  9011                           i1l2174:	
  9012  00D5                     	movf	(___fladd@grs),w
  9013  00D5  0837               	movwf	(??___fladd+0)+0
  9014  00D6  00A8               	movf	(??___fladd+0)+0,w
  9015  00D7  0828               	movwf	0+(___fladd@a)+02h
  9016  00D8  00A6               	line	93
  9017                           	
  9018                           i1l2176:	
  9019  00D9                     	movf	0+(___fladd@b)+03h,w
  9020  00D9  0823               	movwf	(??___fladd+0)+0
  9021  00DA  00A8               	movf	(??___fladd+0)+0,w
  9022  00DB  0828               	movwf	(___fladd@grs)
  9023  00DC  00B7               	line	94
  9024                           	
  9025                           i1l2178:	
  9026  00DD                     	movf	0+(___fladd@a)+03h,w
  9027  00DD  0827               	movwf	(??___fladd+0)+0
  9028  00DE  00A8               	movf	(??___fladd+0)+0,w
  9029  00DF  0828               	movwf	0+(___fladd@b)+03h
  9030  00E0  00A3               	line	95
  9031                           	
  9032                           i1l2180:	
  9033  00E1                     	movf	(___fladd@grs),w
  9034  00E1  0837               	movwf	(??___fladd+0)+0
  9035  00E2  00A8               	movf	(??___fladd+0)+0,w
  9036  00E3  0828               	movwf	0+(___fladd@a)+03h
  9037  00E4  00A7               	goto	i1l2182
  9038  00E5  28E6               	line	96
  9039                           	
  9040                           i1l751:	
  9041  00E6                     	line	98
  9042                           	
  9043                           i1l2182:	
  9044  00E6                     	clrf	(___fladd@grs)
  9045  00E6  01B7               	line	100
  9046                           	
  9047                           i1l2184:	
  9048  00E7                     	movf	(___fladd@bexp),w
  9049  00E7  0836               	movwf	(??___fladd+0)+0
  9050  00E8  00A8               	clrf	(??___fladd+0)+0+1
  9051  00E9  01A9               	comf	(??___fladd+0)+0,f
  9052  00EA  09A8               	comf	(??___fladd+0)+1,f
  9053  00EB  09A9               	incf	(??___fladd+0)+0,f
  9054  00EC  0AA8               	skipnz
  9055  00ED  1903               	incf	(??___fladd+0)+1,f
  9056  00EE  0AA9               	movf	(___fladd@aexp),w
  9057  00EF  0835               	addwf	0+(??___fladd+0)+0,w
  9058  00F0  0728               	movwf	(??___fladd+2)+0
  9059  00F1  00AA               	movf	1+(??___fladd+0)+0,w
  9060  00F2  0829               	skipnc
  9061  00F3  1803               	incf	1+(??___fladd+0)+0,w
  9062  00F4  0A29               	movwf	((??___fladd+2)+0)+1
  9063  00F5  00AB               	movf	1+(??___fladd+2)+0,w
  9064  00F6  082B               	xorlw	80h
  9065  00F7  3A80               	movwf	btemp+1
  9066  00F8  00FF               	movlw	(0)^80h
  9067  00F9  3080               	subwf	btemp+1,w
  9068  00FA  027F               	skipz
  9069  00FB  1D03               	goto	u202_25
  9070  00FC  28FF               	movlw	01Ah
  9071  00FD  301A               	subwf	0+(??___fladd+2)+0,w
  9072  00FE  022A               u202_25:
  9073  00FF                     
  9074                           	skipc
  9075  00FF  1C03               	goto	u202_21
  9076  0100  2902               	goto	u202_20
  9077  0101  2903               u202_21:
  9078  0102                     	goto	i1l2200
  9079  0102  2944               u202_20:
  9080  0103                     	line	101
  9081                           	
  9082                           i1l2186:	
  9083  0103                     	bcf	status, 5	;RP0=0, select bank0
  9084  0103  1283               	bcf	status, 6	;RP1=0, select bank0
  9085  0104  1303               	movf	(___fladd@b+3),w
  9086  0105  0823               	iorwf	(___fladd@b+2),w
  9087  0106  0422               	iorwf	(___fladd@b+1),w
  9088  0107  0421               	iorwf	(___fladd@b),w
  9089  0108  0420               	skipz
  9090  0109  1D03               	goto	u203_21
  9091  010A  290C               	goto	u203_20
  9092  010B  290E               u203_21:
  9093  010C                     	movlw	1
  9094  010C  3001               	goto	u204_20
  9095  010D  290F               u203_20:
  9096  010E                     	movlw	0
  9097  010E  3000               u204_20:
  9098  010F                     	movwf	(??___fladd+0)+0
  9099  010F  00A8               	movf	(??___fladd+0)+0,w
  9100  0110  0828               	movwf	(___fladd@grs)
  9101  0111  00B7               	line	102
  9102                           	movlw	high highword(0)
  9103  0112  3000               	movwf	(___fladd@b+3)
  9104  0113  00A3               	movlw	low highword(0)
  9105  0114  3000               	movwf	(___fladd@b+2)
  9106  0115  00A2               	movlw	high(0)
  9107  0116  3000               	movwf	(___fladd@b+1)
  9108  0117  00A1               	movlw	low(0)
  9109  0118  3000               	movwf	(___fladd@b)
  9110  0119  00A0               
  9111                           	line	103
  9112                           	movf	(___fladd@aexp),w
  9113  011A  0835               	movwf	(??___fladd+0)+0
  9114  011B  00A8               	movf	(??___fladd+0)+0,w
  9115  011C  0828               	movwf	(___fladd@bexp)
  9116  011D  00B6               	line	104
  9117                           	goto	i1l754
  9118  011E  294D               	line	105
  9119                           	
  9120                           i1l753:	
  9121  011F                     	line	106
  9122                           	goto	i1l2200
  9123  011F  2944               	
  9124                           i1l756:	
  9125  0120                     	line	109
  9126                           	btfss	(___fladd@grs),(0)&7
  9127  0120  1C37               	goto	u205_21
  9128  0121  2923               	goto	u205_20
  9129  0122  2924               u205_21:
  9130  0123                     	goto	i1l2190
  9131  0123  292D               u205_20:
  9132  0124                     	line	110
  9133                           	
  9134                           i1l2188:	
  9135  0124                     	movf	(___fladd@grs),w
  9136  0124  0837               	movwf	(??___fladd+0)+0
  9137  0125  00A8               	clrc
  9138  0126  1003               	rrf	(??___fladd+0)+0,w
  9139  0127  0C28               	iorlw	01h
  9140  0128  3801               	movwf	(??___fladd+1)+0
  9141  0129  00A9               	movf	(??___fladd+1)+0,w
  9142  012A  0829               	movwf	(___fladd@grs)
  9143  012B  00B7               	line	111
  9144                           	goto	i1l2192
  9145  012C  2930               	line	112
  9146                           	
  9147                           i1l757:	
  9148  012D                     	line	113
  9149                           	
  9150                           i1l2190:	
  9151  012D                     	clrc
  9152  012D  1003               	rrf	(___fladd@grs),f
  9153  012E  0CB7               
  9154                           	goto	i1l2192
  9155  012F  2930               	line	114
  9156                           	
  9157                           i1l758:	
  9158  0130                     	line	115
  9159                           	
  9160                           i1l2192:	
  9161  0130                     	btfss	(___fladd@b),(0)&7
  9162  0130  1C20               	goto	u206_21
  9163  0131  2933               	goto	u206_20
  9164  0132  2934               u206_21:
  9165  0133                     	goto	i1l2196
  9166  0133  2936               u206_20:
  9167  0134                     	line	116
  9168                           	
  9169                           i1l2194:	
  9170  0134                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9171  0134  17B7               	goto	i1l2196
  9172  0135  2936               	line	117
  9173                           	
  9174                           i1l759:	
  9175  0136                     	line	118
  9176                           	
  9177                           i1l2196:	
  9178  0136                     	movlw	01h
  9179  0136  3001               	movwf	(??___fladd+0)+0
  9180  0137  00A8               u207_25:
  9181  0138                     	rlf	(___fladd@b+3),w
  9182  0138  0D23               	rrf	(___fladd@b+3),f
  9183  0139  0CA3               	rrf	(___fladd@b+2),f
  9184  013A  0CA2               	rrf	(___fladd@b+1),f
  9185  013B  0CA1               	rrf	(___fladd@b),f
  9186  013C  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  9187  013D  0BA8               	goto	u207_25
  9188  013E  2938               
  9189                           	line	119
  9190                           	
  9191                           i1l2198:	
  9192  013F                     	movlw	low(01h)
  9193  013F  3001               	movwf	(??___fladd+0)+0
  9194  0140  00A8               	movf	(??___fladd+0)+0,w
  9195  0141  0828               	addwf	(___fladd@bexp),f
  9196  0142  07B6               	goto	i1l2200
  9197  0143  2944               	line	120
  9198                           	
  9199                           i1l755:	
  9200  0144                     	line	106
  9201                           	
  9202                           i1l2200:	
  9203  0144                     	bcf	status, 5	;RP0=0, select bank0
  9204  0144  1283               	bcf	status, 6	;RP1=0, select bank0
  9205  0145  1303               	movf	(___fladd@aexp),w
  9206  0146  0835               	subwf	(___fladd@bexp),w
  9207  0147  0236               	skipc
  9208  0148  1C03               	goto	u208_21
  9209  0149  294B               	goto	u208_20
  9210  014A  294C               u208_21:
  9211  014B                     	goto	i1l756
  9212  014B  2920               u208_20:
  9213  014C                     	goto	i1l754
  9214  014C  294D               	
  9215                           i1l760:	
  9216  014D                     	line	121
  9217                           	
  9218                           i1l754:	
  9219  014D                     	line	124
  9220                           	btfsc	(___fladd@signs),(6)&7
  9221  014D  1B34               	goto	u209_21
  9222  014E  2950               	goto	u209_20
  9223  014F  2951               u209_21:
  9224  0150                     	goto	i1l2226
  9225  0150  29A0               u209_20:
  9226  0151                     	line	127
  9227                           	
  9228                           i1l2202:	
  9229  0151                     	movf	((___fladd@bexp)),w
  9230  0151  0836               	btfss	status,2
  9231  0152  1D03               	goto	u210_21
  9232  0153  2955               	goto	u210_20
  9233  0154  2956               u210_21:
  9234  0155                     	goto	i1l2208
  9235  0155  2960               u210_20:
  9236  0156                     	line	128
  9237                           	
  9238                           i1l2204:	
  9239  0156                     	movlw	0x0
  9240  0156  3000               	movwf	(?___fladd+3)
  9241  0157  00A3               	movlw	0x0
  9242  0158  3000               	movwf	(?___fladd+2)
  9243  0159  00A2               	movlw	0x0
  9244  015A  3000               	movwf	(?___fladd+1)
  9245  015B  00A1               	movlw	0x0
  9246  015C  3000               	movwf	(?___fladd)
  9247  015D  00A0               
  9248                           	goto	i1l763
  9249  015E  2AEC               	
  9250                           i1l2206:	
  9251  015F                     	goto	i1l763
  9252  015F  2AEC               	line	129
  9253                           	
  9254                           i1l762:	
  9255  0160                     	line	132
  9256                           	
  9257                           i1l2208:	
  9258  0160                     	movf	(___fladd@a),w
  9259  0160  0824               	addwf	(___fladd@b),f
  9260  0161  07A0               	movf	(___fladd@a+1),w
  9261  0162  0825               	clrz
  9262  0163  1103               	skipnc
  9263  0164  1803               	addlw	1
  9264  0165  3E01               	skipnz
  9265  0166  1903               	goto	u211_21
  9266  0167  2969               	addwf	(___fladd@b+1),f
  9267  0168  07A1               u211_21:
  9268  0169                     	movf	(___fladd@a+2),w
  9269  0169  0826               	clrz
  9270  016A  1103               	skipnc
  9271  016B  1803               	addlw	1
  9272  016C  3E01               	skipnz
  9273  016D  1903               	goto	u211_22
  9274  016E  2970               	addwf	(___fladd@b+2),f
  9275  016F  07A2               u211_22:
  9276  0170                     	movf	(___fladd@a+3),w
  9277  0170  0827               	clrz
  9278  0171  1103               	skipnc
  9279  0172  1803               	addlw	1
  9280  0173  3E01               	skipnz
  9281  0174  1903               	goto	u211_23
  9282  0175  2977               	addwf	(___fladd@b+3),f
  9283  0176  07A3               u211_23:
  9284  0177                     
  9285                           	line	134
  9286                           	
  9287                           i1l2210:	
  9288  0177                     	btfss	(___fladd@b+3),(24)&7
  9289  0177  1C23               	goto	u212_21
  9290  0178  297A               	goto	u212_20
  9291  0179  297B               u212_21:
  9292  017A                     	goto	i1l2260
  9293  017A  2A69               u212_20:
  9294  017B                     	line	135
  9295                           	
  9296                           i1l2212:	
  9297  017B                     	btfss	(___fladd@grs),(0)&7
  9298  017B  1C37               	goto	u213_21
  9299  017C  297E               	goto	u213_20
  9300  017D  297F               u213_21:
  9301  017E                     	goto	i1l2216
  9302  017E  2988               u213_20:
  9303  017F                     	line	136
  9304                           	
  9305                           i1l2214:	
  9306  017F                     	movf	(___fladd@grs),w
  9307  017F  0837               	movwf	(??___fladd+0)+0
  9308  0180  00A8               	clrc
  9309  0181  1003               	rrf	(??___fladd+0)+0,w
  9310  0182  0C28               	iorlw	01h
  9311  0183  3801               	movwf	(??___fladd+1)+0
  9312  0184  00A9               	movf	(??___fladd+1)+0,w
  9313  0185  0829               	movwf	(___fladd@grs)
  9314  0186  00B7               	line	137
  9315                           	goto	i1l2218
  9316  0187  298B               	line	138
  9317                           	
  9318                           i1l765:	
  9319  0188                     	line	139
  9320                           	
  9321                           i1l2216:	
  9322  0188                     	clrc
  9323  0188  1003               	rrf	(___fladd@grs),f
  9324  0189  0CB7               
  9325                           	goto	i1l2218
  9326  018A  298B               	line	140
  9327                           	
  9328                           i1l766:	
  9329  018B                     	line	141
  9330                           	
  9331                           i1l2218:	
  9332  018B                     	btfss	(___fladd@b),(0)&7
  9333  018B  1C20               	goto	u214_21
  9334  018C  298E               	goto	u214_20
  9335  018D  298F               u214_21:
  9336  018E                     	goto	i1l2222
  9337  018E  2991               u214_20:
  9338  018F                     	line	142
  9339                           	
  9340                           i1l2220:	
  9341  018F                     	bsf	(___fladd@grs)+(7/8),(7)&7
  9342  018F  17B7               	goto	i1l2222
  9343  0190  2991               	line	143
  9344                           	
  9345                           i1l767:	
  9346  0191                     	line	144
  9347                           	
  9348                           i1l2222:	
  9349  0191                     	movlw	01h
  9350  0191  3001               	movwf	(??___fladd+0)+0
  9351  0192  00A8               u215_25:
  9352  0193                     	rlf	(___fladd@b+3),w
  9353  0193  0D23               	rrf	(___fladd@b+3),f
  9354  0194  0CA3               	rrf	(___fladd@b+2),f
  9355  0195  0CA2               	rrf	(___fladd@b+1),f
  9356  0196  0CA1               	rrf	(___fladd@b),f
  9357  0197  0CA0               	decfsz	(??___fladd+0)+0&07fh,f
  9358  0198  0BA8               	goto	u215_25
  9359  0199  2993               
  9360                           	line	145
  9361                           	
  9362                           i1l2224:	
  9363  019A                     	movlw	low(01h)
  9364  019A  3001               	movwf	(??___fladd+0)+0
  9365  019B  00A8               	movf	(??___fladd+0)+0,w
  9366  019C  0828               	addwf	(___fladd@bexp),f
  9367  019D  07B6               	goto	i1l2260
  9368  019E  2A69               	line	146
  9369                           	
  9370                           i1l764:	
  9371  019F                     	line	148
  9372                           	goto	i1l2260
  9373  019F  2A69               	line	149
  9374                           	
  9375                           i1l761:	
  9376  01A0                     	line	153
  9377                           	
  9378                           i1l2226:	
  9379  01A0                     	movf	(___fladd@b+3),w
  9380  01A0  0823               	xorlw	80h
  9381  01A1  3A80               	movwf	btemp+1
  9382  01A2  00FF               	movf	(___fladd@a+3),w
  9383  01A3  0827               	xorlw	80h
  9384  01A4  3A80               	subwf	btemp+1,w
  9385  01A5  027F               	
  9386                           	skipz
  9387  01A6  1D03               	goto	u216_23
  9388  01A7  29B2               	movf	(___fladd@a+2),w
  9389  01A8  0826               	subwf	(___fladd@b+2),w
  9390  01A9  0222               	skipz
  9391  01AA  1D03               	goto	u216_23
  9392  01AB  29B2               	movf	(___fladd@a+1),w
  9393  01AC  0825               	subwf	(___fladd@b+1),w
  9394  01AD  0221               	skipz
  9395  01AE  1D03               	goto	u216_23
  9396  01AF  29B2               	movf	(___fladd@a),w
  9397  01B0  0824               	subwf	(___fladd@b),w
  9398  01B1  0220               u216_23:
  9399  01B2                     	skipnc
  9400  01B2  1803               	goto	u216_21
  9401  01B3  29B5               	goto	u216_20
  9402  01B4  29B6               u216_21:
  9403  01B5                     	goto	i1l2236
  9404  01B5  2A1C               u216_20:
  9405  01B6                     	line	154
  9406                           	
  9407                           i1l2228:	
  9408  01B6                     	movlw	0FFh
  9409  01B6  30FF               	movwf	((??___fladd+0)+0)
  9410  01B7  00A8               	movlw	0FFh
  9411  01B8  30FF               	movwf	((??___fladd+0)+0+1)
  9412  01B9  00A9               	movlw	0FFh
  9413  01BA  30FF               	movwf	((??___fladd+0)+0+2)
  9414  01BB  00AA               	movlw	0FFh
  9415  01BC  30FF               	movwf	((??___fladd+0)+0+3)
  9416  01BD  00AB               	movf	(___fladd@a),w
  9417  01BE  0824               	movwf	(??___fladd+4)+0
  9418  01BF  00AC               	movf	(___fladd@a+1),w
  9419  01C0  0825               	movwf	((??___fladd+4)+0+1)
  9420  01C1  00AD               	movf	(___fladd@a+2),w
  9421  01C2  0826               	movwf	((??___fladd+4)+0+2)
  9422  01C3  00AE               	movf	(___fladd@a+3),w
  9423  01C4  0827               	movwf	((??___fladd+4)+0+3)
  9424  01C5  00AF               	comf	(___fladd@b),w
  9425  01C6  0920               	movwf	(??___fladd+8)+0
  9426  01C7  00B0               	comf	(___fladd@b+1),w
  9427  01C8  0921               	movwf	((??___fladd+8)+0+1)
  9428  01C9  00B1               	comf	(___fladd@b+2),w
  9429  01CA  0922               	movwf	((??___fladd+8)+0+2)
  9430  01CB  00B2               	comf	(___fladd@b+3),w
  9431  01CC  0923               	movwf	((??___fladd+8)+0+3)
  9432  01CD  00B3               	incf	(??___fladd+8)+0,f
  9433  01CE  0AB0               	skipnz
  9434  01CF  1903               	incf	((??___fladd+8)+0+1),f
  9435  01D0  0AB1               	skipnz
  9436  01D1  1903               	incf	((??___fladd+8)+0+2),f
  9437  01D2  0AB2               	skipnz
  9438  01D3  1903               	incf	((??___fladd+8)+0+3),f
  9439  01D4  0AB3               	movf	0+(??___fladd+8)+0,w
  9440  01D5  0830               	addwf	(??___fladd+4)+0,f
  9441  01D6  07AC               	movf	1+(??___fladd+8)+0,w
  9442  01D7  0831               	skipnc
  9443  01D8  1803               	incfsz	1+(??___fladd+8)+0,w
  9444  01D9  0F31               	goto	u217_20
  9445  01DA  29DC               	goto	u217_21
  9446  01DB  29DD               u217_20:
  9447  01DC                     	addwf	(??___fladd+4)+1,f
  9448  01DC  07AD               u217_21:
  9449  01DD                     	movf	2+(??___fladd+8)+0,w
  9450  01DD  0832               	skipnc
  9451  01DE  1803               	incfsz	2+(??___fladd+8)+0,w
  9452  01DF  0F32               	goto	u217_22
  9453  01E0  29E2               	goto	u217_23
  9454  01E1  29E3               u217_22:
  9455  01E2                     	addwf	(??___fladd+4)+2,f
  9456  01E2  07AE               u217_23:
  9457  01E3                     	movf	3+(??___fladd+8)+0,w
  9458  01E3  0833               	skipnc
  9459  01E4  1803               	incf	3+(??___fladd+8)+0,w
  9460  01E5  0A33               	addwf	(??___fladd+4)+3,f
  9461  01E6  07AF               	movf	0+(??___fladd+4)+0,w
  9462  01E7  082C               	addwf	(??___fladd+0)+0,f
  9463  01E8  07A8               	movf	1+(??___fladd+4)+0,w
  9464  01E9  082D               	skipnc
  9465  01EA  1803               	incfsz	1+(??___fladd+4)+0,w
  9466  01EB  0F2D               	goto	u218_20
  9467  01EC  29EE               	goto	u218_21
  9468  01ED  29EF               u218_20:
  9469  01EE                     	addwf	(??___fladd+0)+1,f
  9470  01EE  07A9               u218_21:
  9471  01EF                     	movf	2+(??___fladd+4)+0,w
  9472  01EF  082E               	skipnc
  9473  01F0  1803               	incfsz	2+(??___fladd+4)+0,w
  9474  01F1  0F2E               	goto	u218_22
  9475  01F2  29F4               	goto	u218_23
  9476  01F3  29F5               u218_22:
  9477  01F4                     	addwf	(??___fladd+0)+2,f
  9478  01F4  07AA               u218_23:
  9479  01F5                     	movf	3+(??___fladd+4)+0,w
  9480  01F5  082F               	skipnc
  9481  01F6  1803               	incf	3+(??___fladd+4)+0,w
  9482  01F7  0A2F               	addwf	(??___fladd+0)+3,f
  9483  01F8  07AB               	movf	3+(??___fladd+0)+0,w
  9484  01F9  082B               	movwf	(___fladd@b+3)
  9485  01FA  00A3               	movf	2+(??___fladd+0)+0,w
  9486  01FB  082A               	movwf	(___fladd@b+2)
  9487  01FC  00A2               	movf	1+(??___fladd+0)+0,w
  9488  01FD  0829               	movwf	(___fladd@b+1)
  9489  01FE  00A1               	movf	0+(??___fladd+0)+0,w
  9490  01FF  0828               	movwf	(___fladd@b)
  9491  0200  00A0               
  9492                           	line	155
  9493                           	movlw	low(080h)
  9494  0201  3080               	movwf	(??___fladd+0)+0
  9495  0202  00A8               	movf	(??___fladd+0)+0,w
  9496  0203  0828               	xorwf	(___fladd@signs),f
  9497  0204  06B4               	line	156
  9498                           	
  9499                           i1l2230:	
  9500  0205                     	comf	(___fladd@grs),f
  9501  0205  09B7               	incf	(___fladd@grs),f
  9502  0206  0AB7               	line	157
  9503                           	
  9504                           i1l2232:	
  9505  0207                     	movf	((___fladd@grs)),w
  9506  0207  0837               	btfss	status,2
  9507  0208  1D03               	goto	u219_21
  9508  0209  2A0B               	goto	u219_20
  9509  020A  2A0C               u219_21:
  9510  020B                     	goto	i1l771
  9511  020B  2A2A               u219_20:
  9512  020C                     	line	158
  9513                           	
  9514                           i1l2234:	
  9515  020C                     	movlw	01h
  9516  020C  3001               	addwf	(___fladd@b),f
  9517  020D  07A0               	movlw	0
  9518  020E  3000               	skipnc
  9519  020F  1803               movlw 1
  9520  0210  3001               	addwf	(___fladd@b+1),f
  9521  0211  07A1               	movlw	0
  9522  0212  3000               	skipnc
  9523  0213  1803               movlw 1
  9524  0214  3001               	addwf	(___fladd@b+2),f
  9525  0215  07A2               	movlw	0
  9526  0216  3000               	skipnc
  9527  0217  1803               movlw 1
  9528  0218  3001               	addwf	(___fladd@b+3),f
  9529  0219  07A3               	goto	i1l771
  9530  021A  2A2A               	line	159
  9531                           	
  9532                           i1l770:	
  9533  021B                     	line	160
  9534                           	goto	i1l771
  9535  021B  2A2A               	line	161
  9536                           	
  9537                           i1l769:	
  9538  021C                     	line	162
  9539                           	
  9540                           i1l2236:	
  9541  021C                     	movf	(___fladd@a),w
  9542  021C  0824               	subwf	(___fladd@b),f
  9543  021D  02A0               	movf	(___fladd@a+1),w
  9544  021E  0825               	skipc
  9545  021F  1C03               	incfsz	(___fladd@a+1),w
  9546  0220  0F25               	subwf	(___fladd@b+1),f
  9547  0221  02A1               	movf	(___fladd@a+2),w
  9548  0222  0826               	skipc
  9549  0223  1C03               	incfsz	(___fladd@a+2),w
  9550  0224  0F26               	subwf	(___fladd@b+2),f
  9551  0225  02A2               	movf	(___fladd@a+3),w
  9552  0226  0827               	skipc
  9553  0227  1C03               	incfsz	(___fladd@a+3),w
  9554  0228  0F27               	subwf	(___fladd@b+3),f
  9555  0229  02A3               	line	163
  9556                           	
  9557                           i1l771:	
  9558  022A                     	line	166
  9559                           	movf	(___fladd@b+3),w
  9560  022A  0823               	iorwf	(___fladd@b+2),w
  9561  022B  0422               	iorwf	(___fladd@b+1),w
  9562  022C  0421               	iorwf	(___fladd@b),w
  9563  022D  0420               	skipz
  9564  022E  1D03               	goto	u220_21
  9565  022F  2A31               	goto	u220_20
  9566  0230  2A32               u220_21:
  9567  0231                     	goto	i1l2258
  9568  0231  2A63               u220_20:
  9569  0232                     	
  9570                           i1l2238:	
  9571  0232                     	movf	((___fladd@grs)),w
  9572  0232  0837               	btfss	status,2
  9573  0233  1D03               	goto	u221_21
  9574  0234  2A36               	goto	u221_20
  9575  0235  2A37               u221_21:
  9576  0236                     	goto	i1l2258
  9577  0236  2A63               u221_20:
  9578  0237                     	line	167
  9579                           	
  9580                           i1l2240:	
  9581  0237                     	movlw	0x0
  9582  0237  3000               	movwf	(?___fladd+3)
  9583  0238  00A3               	movlw	0x0
  9584  0239  3000               	movwf	(?___fladd+2)
  9585  023A  00A2               	movlw	0x0
  9586  023B  3000               	movwf	(?___fladd+1)
  9587  023C  00A1               	movlw	0x0
  9588  023D  3000               	movwf	(?___fladd)
  9589  023E  00A0               
  9590                           	goto	i1l763
  9591  023F  2AEC               	
  9592                           i1l2242:	
  9593  0240                     	goto	i1l763
  9594  0240  2AEC               	line	168
  9595                           	
  9596                           i1l772:	
  9597  0241                     	line	171
  9598                           	goto	i1l2258
  9599  0241  2A63               	
  9600                           i1l774:	
  9601  0242                     	line	172
  9602                           	
  9603                           i1l2244:	
  9604  0242                     	movlw	01h
  9605  0242  3001               	movwf	(??___fladd+0)+0
  9606  0243  00A8               u222_25:
  9607  0244                     	clrc
  9608  0244  1003               	rlf	(___fladd@b),f
  9609  0245  0DA0               	rlf	(___fladd@b+1),f
  9610  0246  0DA1               	rlf	(___fladd@b+2),f
  9611  0247  0DA2               	rlf	(___fladd@b+3),f
  9612  0248  0DA3               	decfsz	(??___fladd+0)+0
  9613  0249  0BA8               	goto	u222_25
  9614  024A  2A44               	line	173
  9615                           	
  9616                           i1l2246:	
  9617  024B                     	btfss	(___fladd@grs),(7)&7
  9618  024B  1FB7               	goto	u223_21
  9619  024C  2A4E               	goto	u223_20
  9620  024D  2A4F               u223_21:
  9621  024E                     	goto	i1l775
  9622  024E  2A50               u223_20:
  9623  024F                     	line	174
  9624                           	
  9625                           i1l2248:	
  9626  024F                     	bsf	(___fladd@b)+(0/8),(0)&7
  9627  024F  1420               	line	175
  9628                           	
  9629                           i1l775:	
  9630  0250                     	line	176
  9631                           	btfss	(___fladd@grs),(0)&7
  9632  0250  1C37               	goto	u224_21
  9633  0251  2A53               	goto	u224_20
  9634  0252  2A54               u224_21:
  9635  0253                     	goto	i1l2252
  9636  0253  2A57               u224_20:
  9637  0254                     	line	177
  9638                           	
  9639                           i1l2250:	
  9640  0254                     	setc
  9641  0254  1403               	rlf	(___fladd@grs),f
  9642  0255  0DB7               	line	178
  9643                           	goto	i1l2254
  9644  0256  2A5A               	line	179
  9645                           	
  9646                           i1l776:	
  9647  0257                     	line	180
  9648                           	
  9649                           i1l2252:	
  9650  0257                     	clrc
  9651  0257  1003               	rlf	(___fladd@grs),f
  9652  0258  0DB7               
  9653                           	goto	i1l2254
  9654  0259  2A5A               	line	181
  9655                           	
  9656                           i1l777:	
  9657  025A                     	line	182
  9658                           	
  9659                           i1l2254:	
  9660  025A                     	movf	((___fladd@bexp)),w
  9661  025A  0836               	btfsc	status,2
  9662  025B  1903               	goto	u225_21
  9663  025C  2A5E               	goto	u225_20
  9664  025D  2A5F               u225_21:
  9665  025E                     	goto	i1l2258
  9666  025E  2A63               u225_20:
  9667  025F                     	line	183
  9668                           	
  9669                           i1l2256:	
  9670  025F                     	movlw	01h
  9671  025F  3001               	subwf	(___fladd@bexp),f
  9672  0260  02B6               	goto	i1l2258
  9673  0261  2A63               	line	184
  9674                           	
  9675                           i1l778:	
  9676  0262                     	goto	i1l2258
  9677  0262  2A63               	line	185
  9678                           	
  9679                           i1l773:	
  9680  0263                     	line	171
  9681                           	
  9682                           i1l2258:	
  9683  0263                     	btfss	(___fladd@b+2),(23)&7
  9684  0263  1FA2               	goto	u226_21
  9685  0264  2A66               	goto	u226_20
  9686  0265  2A67               u226_21:
  9687  0266                     	goto	i1l2244
  9688  0266  2A42               u226_20:
  9689  0267                     	goto	i1l2260
  9690  0267  2A69               	
  9691                           i1l779:	
  9692  0268                     	goto	i1l2260
  9693  0268  2A69               	line	186
  9694                           	
  9695                           i1l768:	
  9696  0269                     	line	192
  9697                           	
  9698                           i1l2260:	
  9699  0269                     	clrf	(___fladd@aexp)
  9700  0269  01B5               	line	193
  9701                           	
  9702                           i1l2262:	
  9703  026A                     	btfss	(___fladd@grs),(7)&7
  9704  026A  1FB7               	goto	u227_21
  9705  026B  2A6D               	goto	u227_20
  9706  026C  2A6E               u227_21:
  9707  026D                     	goto	i1l2270
  9708  026D  2A80               u227_20:
  9709  026E                     	line	194
  9710                           	
  9711                           i1l2264:	
  9712  026E                     	movf	(___fladd@grs),w
  9713  026E  0837               	andlw	07Fh
  9714  026F  397F               	btfsc	status,2
  9715  0270  1903               	goto	u228_21
  9716  0271  2A73               	goto	u228_20
  9717  0272  2A74               u228_21:
  9718  0273                     	goto	i1l781
  9719  0273  2A77               u228_20:
  9720  0274                     	line	195
  9721                           	
  9722                           i1l2266:	
  9723  0274                     	clrf	(___fladd@aexp)
  9724  0274  01B5               	incf	(___fladd@aexp),f
  9725  0275  0AB5               	line	196
  9726                           	goto	i1l2270
  9727  0276  2A80               	line	197
  9728                           	
  9729                           i1l781:	
  9730  0277                     	line	198
  9731                           	btfss	(___fladd@b),(0)&7
  9732  0277  1C20               	goto	u229_21
  9733  0278  2A7A               	goto	u229_20
  9734  0279  2A7B               u229_21:
  9735  027A                     	goto	i1l2270
  9736  027A  2A80               u229_20:
  9737  027B                     	line	199
  9738                           	
  9739                           i1l2268:	
  9740  027B                     	clrf	(___fladd@aexp)
  9741  027B  01B5               	incf	(___fladd@aexp),f
  9742  027C  0AB5               	goto	i1l2270
  9743  027D  2A80               	line	200
  9744                           	
  9745                           i1l783:	
  9746  027E                     	goto	i1l2270
  9747  027E  2A80               	line	201
  9748                           	
  9749                           i1l782:	
  9750  027F                     	goto	i1l2270
  9751  027F  2A80               	line	202
  9752                           	
  9753                           i1l780:	
  9754  0280                     	line	203
  9755                           	
  9756                           i1l2270:	
  9757  0280                     	movf	((___fladd@aexp)),w
  9758  0280  0835               	btfsc	status,2
  9759  0281  1903               	goto	u230_21
  9760  0282  2A84               	goto	u230_20
  9761  0283  2A85               u230_21:
  9762  0284                     	goto	i1l784
  9763  0284  2ABB               u230_20:
  9764  0285                     	line	204
  9765                           	
  9766                           i1l2272:	
  9767  0285                     	movlw	01h
  9768  0285  3001               	addwf	(___fladd@b),f
  9769  0286  07A0               	movlw	0
  9770  0287  3000               	skipnc
  9771  0288  1803               movlw 1
  9772  0289  3001               	addwf	(___fladd@b+1),f
  9773  028A  07A1               	movlw	0
  9774  028B  3000               	skipnc
  9775  028C  1803               movlw 1
  9776  028D  3001               	addwf	(___fladd@b+2),f
  9777  028E  07A2               	movlw	0
  9778  028F  3000               	skipnc
  9779  0290  1803               movlw 1
  9780  0291  3001               	addwf	(___fladd@b+3),f
  9781  0292  07A3               	line	205
  9782                           	
  9783                           i1l2274:	
  9784  0293                     	btfss	(___fladd@b+3),(24)&7
  9785  0293  1C23               	goto	u231_21
  9786  0294  2A96               	goto	u231_20
  9787  0295  2A97               u231_21:
  9788  0296                     	goto	i1l784
  9789  0296  2ABB               u231_20:
  9790  0297                     	line	206
  9791                           	
  9792                           i1l2276:	
  9793  0297                     	movf	(___fladd@b),w
  9794  0297  0820               	movwf	(??___fladd+0)+0
  9795  0298  00A8               	movf	(___fladd@b+1),w
  9796  0299  0821               	movwf	((??___fladd+0)+0+1)
  9797  029A  00A9               	movf	(___fladd@b+2),w
  9798  029B  0822               	movwf	((??___fladd+0)+0+2)
  9799  029C  00AA               	movf	(___fladd@b+3),w
  9800  029D  0823               	movwf	((??___fladd+0)+0+3)
  9801  029E  00AB               	movlw	01h
  9802  029F  3001               	movwf	(??___fladd+4)+0
  9803  02A0  00AC               u232_25:
  9804  02A1                     	rlf	(??___fladd+0)+3,w
  9805  02A1  0D2B               	rrf	(??___fladd+0)+3,f
  9806  02A2  0CAB               	rrf	(??___fladd+0)+2,f
  9807  02A3  0CAA               	rrf	(??___fladd+0)+1,f
  9808  02A4  0CA9               	rrf	(??___fladd+0)+0,f
  9809  02A5  0CA8               u232_20:
  9810  02A6                     	decfsz	(??___fladd+4)+0,f
  9811  02A6  0BAC               	goto	u232_25
  9812  02A7  2AA1               	movf	3+(??___fladd+0)+0,w
  9813  02A8  082B               	movwf	(___fladd@b+3)
  9814  02A9  00A3               	movf	2+(??___fladd+0)+0,w
  9815  02AA  082A               	movwf	(___fladd@b+2)
  9816  02AB  00A2               	movf	1+(??___fladd+0)+0,w
  9817  02AC  0829               	movwf	(___fladd@b+1)
  9818  02AD  00A1               	movf	0+(??___fladd+0)+0,w
  9819  02AE  0828               	movwf	(___fladd@b)
  9820  02AF  00A0               
  9821                           	line	207
  9822                           		incf	((___fladd@bexp)),w
  9823  02B0  0A36               	btfsc	status,2
  9824  02B1  1903               	goto	u233_21
  9825  02B2  2AB4               	goto	u233_20
  9826  02B3  2AB5               u233_21:
  9827  02B4                     	goto	i1l784
  9828  02B4  2ABB               u233_20:
  9829  02B5                     	line	208
  9830                           	
  9831                           i1l2278:	
  9832  02B5                     	movlw	low(01h)
  9833  02B5  3001               	movwf	(??___fladd+0)+0
  9834  02B6  00A8               	movf	(??___fladd+0)+0,w
  9835  02B7  0828               	addwf	(___fladd@bexp),f
  9836  02B8  07B6               	goto	i1l784
  9837  02B9  2ABB               	line	209
  9838                           	
  9839                           i1l786:	
  9840  02BA                     	goto	i1l784
  9841  02BA  2ABB               	line	210
  9842                           	
  9843                           i1l785:	
  9844  02BB                     	line	211
  9845                           	
  9846                           i1l784:	
  9847  02BB                     	line	215
  9848                           		incf	((___fladd@bexp)),w
  9849  02BB  0A36               	btfsc	status,2
  9850  02BC  1903               	goto	u234_21
  9851  02BD  2ABF               	goto	u234_20
  9852  02BE  2AC0               u234_21:
  9853  02BF                     	goto	i1l2282
  9854  02BF  2AC6               u234_20:
  9855  02C0                     	
  9856                           i1l2280:	
  9857  02C0                     	movf	((___fladd@bexp)),w
  9858  02C0  0836               	btfss	status,2
  9859  02C1  1D03               	goto	u235_21
  9860  02C2  2AC4               	goto	u235_20
  9861  02C3  2AC5               u235_21:
  9862  02C4                     	goto	i1l2288
  9863  02C4  2AD6               u235_20:
  9864  02C5                     	goto	i1l2282
  9865  02C5  2AC6               	
  9866                           i1l789:	
  9867  02C6                     	line	216
  9868                           	
  9869                           i1l2282:	
  9870  02C6                     	movlw	high highword(0)
  9871  02C6  3000               	movwf	(___fladd@b+3)
  9872  02C7  00A3               	movlw	low highword(0)
  9873  02C8  3000               	movwf	(___fladd@b+2)
  9874  02C9  00A2               	movlw	high(0)
  9875  02CA  3000               	movwf	(___fladd@b+1)
  9876  02CB  00A1               	movlw	low(0)
  9877  02CC  3000               	movwf	(___fladd@b)
  9878  02CD  00A0               
  9879                           	line	218
  9880                           	
  9881                           i1l2284:	
  9882  02CE                     	movf	((___fladd@bexp)),w
  9883  02CE  0836               	btfss	status,2
  9884  02CF  1D03               	goto	u236_21
  9885  02D0  2AD2               	goto	u236_20
  9886  02D1  2AD3               u236_21:
  9887  02D2                     	goto	i1l2288
  9888  02D2  2AD6               u236_20:
  9889  02D3                     	line	219
  9890                           	
  9891                           i1l2286:	
  9892  02D3                     	clrf	(___fladd@signs)
  9893  02D3  01B4               	goto	i1l2288
  9894  02D4  2AD6               	line	220
  9895                           	
  9896                           i1l790:	
  9897  02D5                     	goto	i1l2288
  9898  02D5  2AD6               	line	221
  9899                           	
  9900                           i1l787:	
  9901  02D6                     	line	225
  9902                           	
  9903                           i1l2288:	
  9904  02D6                     	btfss	(___fladd@bexp),(0)&7
  9905  02D6  1C36               	goto	u237_21
  9906  02D7  2AD9               	goto	u237_20
  9907  02D8  2ADA               u237_21:
  9908  02D9                     	goto	i1l2292
  9909  02D9  2ADC               u237_20:
  9910  02DA                     	line	226
  9911                           	
  9912                           i1l2290:	
  9913  02DA                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  9914  02DA  17A2               	line	227
  9915                           	goto	i1l792
  9916  02DB  2AE0               	line	229
  9917                           	
  9918                           i1l791:	
  9919  02DC                     	line	230
  9920                           	
  9921                           i1l2292:	
  9922  02DC                     	movlw	low(07Fh)
  9923  02DC  307F               	movwf	(??___fladd+0)+0
  9924  02DD  00A8               	movf	(??___fladd+0)+0,w
  9925  02DE  0828               	andwf	0+(___fladd@b)+02h,f
  9926  02DF  05A2               	line	231
  9927                           	
  9928                           i1l792:	
  9929  02E0                     	line	232
  9930                           	movf	(___fladd@bexp),w
  9931  02E0  0836               	movwf	(??___fladd+0)+0
  9932  02E1  00A8               	clrc
  9933  02E2  1003               	rrf	(??___fladd+0)+0,w
  9934  02E3  0C28               	movwf	(??___fladd+1)+0
  9935  02E4  00A9               	movf	(??___fladd+1)+0,w
  9936  02E5  0829               	movwf	0+(___fladd@b)+03h
  9937  02E6  00A3               	line	233
  9938                           	
  9939                           i1l2294:	
  9940  02E7                     	btfss	(___fladd@signs),(7)&7
  9941  02E7  1FB4               	goto	u238_21
  9942  02E8  2AEA               	goto	u238_20
  9943  02E9  2AEB               u238_21:
  9944  02EA                     	goto	i1l793
  9945  02EA  2AEC               u238_20:
  9946  02EB                     	line	234
  9947                           	
  9948                           i1l2296:	
  9949  02EB                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  9950  02EB  17A3               	line	235
  9951                           	
  9952                           i1l793:	
  9953  02EC                     	line	236
  9954                           	line	237
  9955                           	
  9956                           i1l763:	
  9957  02EC                     	return
  9958  02EC  0008               	opt stack 0
  9959                           GLOBAL	__end_of___fladd
  9960                           	__end_of___fladd:
  9961  02ED                     	signat	___fladd,8316
  9962                           global	___latbits
  9963                           ___latbits	equ	2
  9964  0002                     	global	btemp
  9965                           	btemp set 07Eh
  9966  007E                     
  9967                           	DABS	1,126,2	;btemp
  9968                           	global	wtemp0
  9969                           	wtemp0 set btemp+0
  9970  007E                     	end


Data Sizes:
    Strings     13
    Constant    382
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      69
    BANK1            80     37      46
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 2
		 -> write_int@num(BANK1[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write_text@text	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 

    write_text@c	PTR unsigned char  size(2) Largest target is 6
		 -> write_int@num(BANK1[2]), STR_2(CODE[4]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _start_receive->_handle_remote
    _is_deadzone->___xxtofl
    ___fltol->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_handle_potmeter
    _handle_potmeter->_is_deadzone
    _is_deadzone->___fltol
    ___fltol->___fladd

Critical Paths under _main in BANK1

    _main->_update_volume
    _update_volume->_write_int
    _update_input->_write_int
    _write_space->_spiWrite
    _write_int->_sprintf
    _write_text->_write_char
    _write_char->_write_font
    _write_font->___wmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _display_init->_spiWrite

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   10634
                                             35 BANK1      2     2      0
              _activateSelectedRelay
                             _config
                       _update_input
                      _update_volume
 ---------------------------------------------------------------------------------
 (1) _update_volume                                        2     2      0    5318
                                             33 BANK1      2     2      0
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (1) _update_input                                         0     0      0    5294
                  _display_write_end
                _display_write_start
                          _write_int
                        _write_space
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_space                                          7     5      2     266
                                              1 BANK1      7     5      2
                           _spiWrite
 ---------------------------------------------------------------------------------
 (2) _write_int                                            4     2      2    3781
                                             29 BANK1      4     2      2
                            _sprintf
                         _write_char
                         _write_text
 ---------------------------------------------------------------------------------
 (2) _write_text                                           4     2      2    1247
                                             19 BANK1      4     2      2
                         _write_char
 ---------------------------------------------------------------------------------
 (3) _write_char                                           3     3      0     951
                                             16 BANK1      3     3      0
                         _write_font
 ---------------------------------------------------------------------------------
 (4) _write_font                                          10     8      2     684
                                              6 BANK1     10     8      2
                             ___wmul
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     344
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             23    19      4    1311
                                             14 BANK1     15    11      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     414
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) _display_write_start                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_write_end                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               3     3      0      22
                                              1 BANK1      3     3      0
                       _display_init
                           _init_adc
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0      22
                           _spiWrite
 ---------------------------------------------------------------------------------
 (5) _spiWrite                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _activateSelectedRelay                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  4     4      0    4371
                                             54 BANK0      4     4      0
                    _handle_potmeter
                      _handle_rotary
                      _start_receive
 ---------------------------------------------------------------------------------
 (8) _start_receive                                       10    10      0      99
                                              5 COMMON     8     8      0
                                              0 BANK0      2     2      0
                      _handle_remote
 ---------------------------------------------------------------------------------
 (9) _handle_remote                                        5     5      0      53
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (8) _handle_rotary                                        7     7      0     134
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (8) _handle_potmeter                                      6     6      0    4138
                                             48 BANK0      6     6      0
                        _is_deadzone
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     214
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) _is_deadzone                                         13     9      4    3746
                                             35 BANK0     13     9      4
                            ___fladd
                            ___fltol
                           ___xxtofl
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___xxtofl                                           14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (10) ___fltol                                            11     7      4     381
                                             24 BANK0     11     7      4
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            24    16      8    2414
                                              0 BANK0     24    16      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateSelectedRelay
   _config
     _display_init
       _spiWrite
     _init_adc
   _update_input
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite
   _update_volume
     _display_write_end
     _display_write_start
     _write_int
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _write_char
         _write_font
           ___wmul
           _spiWrite
       _write_text
         _write_char
           _write_font
             ___wmul
             _spiWrite
     _write_space
       _spiWrite
     _write_text
       _write_char
         _write_font
           ___wmul
           _spiWrite

 _isr (ROOT)
   _handle_potmeter
     _is_deadzone
       ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
       i1___wmul
     i1___lwdiv
   _handle_rotary
   _start_receive
     _handle_remote

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      81       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      45       5       86.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     25      2E       7       57.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      81      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Jan 28 09:43:18 2019

                  _update_input 0B0A          __size_of_start_receive 0074                               pc 0002  
                   __CFG_CP$OFF 0000                     _SSPSTATbits 0094                              l53 09C7  
                            l54 09CF                              l55 09E9                              l56 09EA  
                            l57 09EA                              fsr 0004             ___wmul@multiplicand 00A2  
              i1___wmul@product 0074                    spiWrite@data 00A0                   _update_volume 0C82  
                           l200 0A70                             l120 0C81                             l123 0B18  
                           l140 0AB1                             l132 0BD7                             l124 0B4F  
                           l141 0A94                             l133 0BA0                             l150 0D5F  
                           l142 0AC6                             l134 0BB3                             l151 0DA0  
                           l143 0AC6                             l135 0BCF                             l127 0C90  
                           l160 0D3E                             l152 0D7E                             l136 0BE6  
                           l128 0CDC                             l161 0D3E                             l153 0D9F  
                           l137 0BE6                             l129 0CBB                             l154 0D9D  
                           l146 0A38                             l155 0D9E                             l147 0A53  
                           l172 02F5                             l164 0954                             l156 0DA0  
                           l173 02F5                             l165 0957                             l174 02FC  
                           l175 02FC                             l159 0CF0                             l192 0A5D  
                           l168 0945                             l440 04BA                             l193 0A8C  
                           l169 0948                             l441 04BB                             l194 0A75  
                           l266 0E09                             l434 05AB                             l450 0558  
                           l442 04E9                             l195 0A60                             l451 05AA  
                           l443 04BC                             l435 04A5                             l196 0A8A  
                           l452 05CC                             l444 0503                             l436 04B7  
                           l197 0A64                             l453 05D2                             l445 050D  
                           l437 04BE                             l198 0A68                             l446 0541  
                           l438 04B9                             l199 0A6C                             l295 096E  
                           l439 05CD                             l447 0536                             l448 0553  
                           l456 099C                             l449 05A0                             l457 09A6  
                           l722 0C2E                             l458 09BB                             l723 0C00  
                           l459 09C0                             l724 0BF4                             l732 0B04  
                           l725 0C05                             l733 0ADE                             l726 0C06  
                           l734 0AD2                             l727 0C1F                             l735 0AE3  
                           l728 0C2D                             l736 0AE4                             l729 0C33  
                           l737 0AF5                             l738 0B03                             l739 0B09  
                 ?_display_init 0070                    __CFG_CPD$OFF 0000                             _isr 09ED  
                           fsr0 0004                             indf 0000                   write_char@pos 00B0  
                  __CFG_LVP$OFF 0000                    ___fltol@exp1 0042                            l2000 0A94  
                          l2010 04AB                            l2002 0AAA                            l2020 04E9  
                          l2012 04B2                            l2004 0AB1                            l2030 0503  
                          l2022 04F1                            l2014 04B7                            l2006 04A0  
                          l2040 0536                            l2032 0505                            l2024 04F5  
                          l2016 04BD                            l2008 04A5                            l2050 0558  
                          l2034 050C                            l2042 0541                            l2026 04F9  
                          l2018 04BE                            l2052 0594                            l2044 0547  
                          l2036 050D                            l2028 04FD                            l2060 05CD  
                          l2062 05D2                            l2054 059B                            l2046 054E  
                          l2038 0535                            l2400 0C61                            l2056 05A0  
                          l2048 0553                            l2410 0C72                            l2402 0C67  
                          l2058 05AB                            l2412 0C75                            l2404 0C6A  
                          l2420 0949                            l2414 0C76                            l2406 0C6B  
                          l2422 0950                            l2430 0BB2                            l2416 0C79  
                          l2408 0C6C                            l2360 0C3D                            l2600 0DD8  
                          l2440 0A1E                            l2432 0BB3                            l2424 0B9B  
                          l2418 0C7D                            l2370 0C44                            l2362 0C3E  
                          l2610 0DDD                            l2602 0DD9                            l2450 0941  
                          l2442 0A2D                            l2434 0BB9                            l2426 0BA0  
                          l2380 0C50                            l2372 0C45                            l2364 0C41  
                          l2356 0C34                            l2460 096B                            l2452 0958  
                          l2612 0DE1                            l2604 0DDA                            l1900 0997  
                          l2444 0A37                            l2436 0BC1                            l2428 0BA4  
                          l2620 0C8F                            l2390 0C5C                            l2382 0C51  
                          l2374 0C46                            l2366 0C42                            l2358 0C3C  
                          l2454 0962                            l2614 0DE5                            l2606 0DDB  
                          l1910 09BB                            l1902 099C                            l2446 0A38  
                          l2438 0BCF                            l2630 0CA7                            l2622 0C90  
                          l2392 0C5D                            l2384 0C57                            l2376 0C4C  
                          l2368 0C43                            l2456 0965                            l2616 0DF7  
                          l2608 0DDC                            l2560 0DA7                            l2448 093A  
                          l1912 09C0                            l1904 09A0                            l1920 0CF0  
                          l2640 0CD6                            l2632 0CB4                            l2624 0C91  
                          l2394 0C5E                            l2386 0C5A                            l2378 0C4F  
                          l2458 0968                            l2570 0DAC                            l2562 0DA8  
                          l1906 09AD                            l1922 0D28                            l1914 0CDD  
                          l1930 0D4E                            l2650 0B2A                            l2642 0B0A  
                          l2634 0CBB                            l2626 0C96                            l2618 0C82  
                          l2660 0A5C                            l2396 0C5F                            l2388 0C5B  
                          l2580 0DB8                            l2572 0DB0                            l2564 0DA9  
                          l1908 09B4                            l1924 0D30                            l1916 0CE1  
                          l1940 0D74                            l1932 0D55                            l2652 0B35  
                          l2644 0B17                            l2636 0CC6                            l2628 0CA1  
                          l2670 0A6C                            l2662 0A5D                            l2398 0C60  
                          l2590 0DC7                            l2582 0DBB                            l2574 0DB3  
                          l2566 0DAA                            l2558 0DA1                            l1950 0BE7  
                          l1918 0CEF                            l1942 0D7E                            l1934 0D5F  
                          l1926 0D42                            l2654 0B44                            l2646 0B1A  
                          l2638 0CD1                            l2750 09CF                            l2672 0A70  
                          l2664 0A60                            l2592 0DC8                            l2584 0DBE  
                          l2576 0DB4                            l2568 0DAB                            l1960 0C00  
                          l1952 0BEB                            l1944 0D86                            l1936 0D67  
                          l1928 0D48                            l2656 0B49                            l2648 0B1F  
                          l2752 09D9                            l2744 09C1                            l2674 0A74  
                          l2666 0A64                            l2658 0A54                            l2594 0DCB  
                          l2586 0DC1                            l2578 0DB7                            l1970 0C26  
                          l1962 0C06                            l1954 0BF1                            l1946 0D8C  
                          l1938 0D6D                            l2754 09DE                            l2746 09C7  
                          l2668 0A68                            l2676 0A75                            l2596 0DD0  
                          l2588 0DC4                            l1964 0C17                            l1956 0BF4  
                          l1972 0C2E                            l1980 0AD2                            l2852 04DE  
                          l1948 0D93                            l2748 09CD                            l2854 0A7C  
                          l2678 0A8A                            l2598 0DD5                            l1974 0C33  
                          l1966 0C1D                            l1958 0BFB                            l1990 0AF5  
                          l1982 0AD9                            l1968 0C1F                            l1992 0AFC  
                          l1984 0ADE                            l1976 0AC7                            l1898 02F0  
                          l1986 0AE4                            l1978 0ACF                            l1994 0B04  
                          l1996 0B09                            l1988 0AEE                            l1998 0A8D  
                          ?_isr 0070                            STR_1 0490                            STR_2 0496  
                          STR_3 049A                            u1520 09BA                            u1600 0D8C  
                          u1521 09B9                            u1505 09A7                            u1601 0D8B  
                          u1610 0BF1                            u1530 0CEE                            u1611 0BF0  
                          u1515 09AE                            u1531 0CED                            u1700 0AE2  
                          u1540 0D3D                            u1701 0AE1                            u1541 0D3C  
                          u1630 0C04                            u1710 0AEE                            u1550 0D48  
                          u1631 0C03                            u1711 0AED                            u1535 0CEA  
                          u1551 0D47                            u1480 02FB                            u1800 0547  
                          u1560 0D4E                            u2600 0BE5                            u1481 02FA  
                          u1625 0BF5                            u1801 0546                            u1545 0D39  
                          u1561 0D4D                            u2601 0BE4                            u1650 0C17  
                          u1730 0B02                            u1810 05A9                            u1490 09A0  
                          u1570 0D67                            u2610 0A2D                            u1651 0C16  
                          u1731 0B01                            u1715 0AEA                            u1811 05A8  
                          u1491 099F                            u1571 0D66                            u2611 0A2C  
                          u2620 0941                            u1820 05CB                            u1580 0D6D  
                          u1740 0AC5                            u2621 0940                            u1645 0C07  
                          u1725 0AF6                            u1821 05CA                            u1581 0D6C  
                          u1741 0AC4                            u2605 0BE1                            u1670 0C2C  
                          u1750 04AB                            u1590 0D86                            u1671 0C2B  
                          u1655 0C13                            u1751 04AA                            u1591 0D85  
                          u2615 0A29                            u1680 0ACF                            u1760 04F9  
                          u2720 0C8E                            u1665 0C20                            u1681 0ACE  
                          u1761 04F8                            u2721 0C8D                            u2570 0950  
                          u1770 050B                            u2730 0CB4                            u2571 094F  
                          u1771 050A                            u2731 0CB3                            u1780 0534  
                          u2580 0BB1                            u2740 0B16                            u1781 0533  
                          u2581 0BB0                            u2741 0B15                            u2725 0C8A  
                          u2750 0A5B                            u1790 0540                            u2590 0BCE  
                          u2910 09CD                            u2751 0A5A                            u1695 0AD3  
                          u1791 053F                            u2591 0BCD                            u2735 0CB0  
                          u2911 09CC                            u1785 0530                            u2585 0BAD  
                          u2745 0B12                            u2595 0BCA                            u2957 09E4  
                          i1l62 0A04                            i1l63 0A02                            i1l64 0A13  
                          i1l65 0A13                    __CFG_WRT$OFF 0000                            _main 09C1  
                          _font 0312          is_deadzone@deadzoneLow 0049                            btemp 007E  
                 __CFG_BOREN$ON 0000                            start 0012                   __CFG_IESO$OFF 0000  
                  ?_is_deadzone 0043                           ??_isr 0056                  ?_update_volume 0070  
                 ___fltol@sign1 0041                  ??_display_init 00A1                 __end_of___fladd 02ED  
                         ?_main 0070                   __CFG_WDTE$OFF 0000                 __end_of___fltol 07F7  
               __end_of___lwdiv 0C34                           i1l210 0F71                           i1l211 0F7D  
                         i1l203 0F42                           i1l300 0698                           i1l204 0F41  
                         i1l205 0F3D                           i1l206 0F40                           i1l303 0F94  
                         i1l207 0F72                           i1l304 0FFF                           i1l208 0F72  
                         i1l305 0FBA                           i1l209 0F6C                           i1l330 0E2E  
                         i1l307 0FB5                           i1l331 0E78                           i1l308 0FFA  
                         i1l340 0EB1                           i1l332 0E7D                           i1l309 0FFA  
                         i1l341 0EBE                           i1l342 0EC9                           i1l343 0EFC  
                         i1l335 0ED5                           i1l336 0E8C                           i1l337 0EF3  
               __end_of___lwmod 0B0A                           i1l338 0E97                           i1l339 0EA4  
                         i1l456 0972                           i1l457 097C                           i1l650 07DF  
                         i1l642 077A                           i1l458 0991                           i1l722 0B95  
                         i1l651 07D4                           i1l643 07F6                           i1l459 0996  
                         i1l299 068E                           i1l723 0B67                           i1l652 07E5  
                         i1l644 07C3                           i1l724 0B5B                           i1l653 07F6  
                         i1l645 07AF                           i1l725 0B6C                           i1l750 009A  
                         i1l742 0044                           i1l646 07B0                           i1l726 0B6D  
                         i1l751 00E6                           i1l743 005A                           i1l647 07C2  
                         i1l727 0B86                           i1l760 014D                           i1l752 00A9  
                         i1l744 0057                           i1l648 07E6                           i1l728 0B94  
                         i1l761 01A0                           i1l753 011F                           i1l745 0063  
                         i1l649 07D3                           i1l729 0B9A                           i1l770 021B  
                         i1l762 0160                           i1l754 014D                           i1l746 0070  
                         i1l771 022A                           i1l763 02EC                           i1l755 0144  
                         i1l747 007C                           i1l780 0280                           i1l772 0241  
                         i1l764 019F                           i1l756 0120                           i1l748 0092  
                         i1l781 0277                           i1l773 0263                           i1l765 0188  
                         i1l757 012D                           i1l749 008F                           i1l790 02D5  
                         i1l782 027F                           i1l774 0242                           i1l766 018B  
                         i1l758 0130                           i1l870 06E7                           i1l791 02DC  
                         i1l783 027E                           i1l775 0250                           i1l767 0191  
                         i1l759 0136                           i1l871 0703                           i1l792 02E0  
                         i1l784 02BB                           i1l768 0269                           i1l776 0257  
                         i1l880 0751                           i1l872 06E8                           i1l864 06B3  
                         i1l793 02EC                           i1l785 02BB                           i1l777 025A  
                         i1l769 021C                           i1l873 070A                           i1l865 06BB  
                         i1l786 02BA                           i1l778 0262                           i1l874 0717  
                         i1l866 06CD                           i1l787 02D6                           i1l779 0268  
                         i1l875 070B                           i1l867 075A                           i1l868 06E0  
                         i1l789 02C6                           i1l877 0722                           i1l869 06D2  
                         i1l878 0722                           i1l879 072E                           _PORTA 0005  
                         _PORTC 0007                           _TRISC 0087                           _TRISD 0088  
         _activateSelectedRelay 0A54                  __CFG_FCMEN$OFF 0000                     _write_space 0B9B  
               __end_of_dpowers 048E                   _start_receive 0E0A         is_deadzone@deadzoneHigh 004B  
                         pclath 000A                __end_ofi1___wmul 0997                           status 0003  
           i1___wmul@multiplier 0070                           wtemp0 007E                 __end_of_sprintf 05D3  
            __size_ofi1___lwdiv 004B            is_deadzone@turnPoint 004E                  __CFG_MCLRE$OFF 0000  
               __initialization 0015                    __end_of_main 09ED                    __end_of_font 0484  
            handle_rotary@portA 0073              handle_rotary@portB 0075             _display_write_start 0949  
                        ??_main 00C3                 _handle_potmeter 0F7E                  write_text@text 00B3  
                ?_start_receive 0070                          _ADRESH 001E                          _ADRESL 009E  
          ?_display_write_start 0070                          i1l2100 07E6                          i1l2110 0042  
                        i1l2102 07EB                          i1l2200 0144                          i1l2120 0058  
                        i1l2112 0044                          i1l2104 0031                          i1l2210 0177  
                        i1l2202 0151                          i1l2130 0070                          i1l2114 0049  
                        i1l2122 005A                          i1l2106 0038                          i1l2220 018F  
                        i1l2212 017B                          i1l2204 0156                          i1l2140 0086  
                        i1l2132 0076                          i1l2124 0063                          i1l2116 004E  
                        i1l2108 003E                          i1l2300 069F                          i1l2230 0205  
                        i1l2222 0191                          i1l2214 017F                          i1l2206 015F  
                        i1l2150 00A4                          i1l2142 008F                          i1l2134 007A  
                        i1l2126 0068                          i1l2118 0057                          i1l2070 0770  
                        i1l2310 06CD                          i1l2302 06A3                          i1l2240 0237  
                        i1l2232 0207                          i1l2224 019A                          i1l2216 0188  
                        i1l2208 0160                          i1l2160 00B9                          i1l2152 00A9  
                        u200_20 00A0                          i1l2144 0090                          i1l2136 007C  
                        i1l2128 006E                          i1l2080 0798                          i1l2072 0779  
                        i1l2320 06FA                          i1l2312 06D2                          i1l2304 06B3  
                        u200_21 009F                          i1l2250 0254                          i1l2242 0240  
                        i1l2234 020C                          i1l2218 018B                          i1l2226 01A0  
                        i1l2170 00CD                          i1l2162 00BD                          i1l2154 00AD  
                        i1l2138 0081                          i1l2146 0092                          i1l2090 07B0  
                        i1l2082 079A                          i1l2074 077A                          i1l2330 0730  
                        i1l2322 070B                          i1l2314 06E0                          i1l2306 06C3  
                        i1l2252 0257                          i1l2244 0242                          i1l2228 01B6  
                        i1l2236 021C                          i1l2260 0269                          i1l2180 00E1  
                        i1l2172 00D1                          i1l2164 00C1                          i1l2156 00B1  
                        i1l2148 00A0                          i1l2084 079E                          i1l2092 07C3  
                        i1l2076 078F                          i1l2068 075B                          i1l2340 075A  
                        i1l2332 0746                          i1l2324 0717                          i1l2316 06E8  
                        i1l2308 06CC                          i1l2500 0EAA                          i1l2270 0280  
                        i1l2262 026A                          i1l2254 025A                          i1l2246 024B  
                        i1l2238 0232                          i1l2190 012D                          i1l2174 00D5  
                        i1l2166 00C5                          i1l2158 00B5                          i1l2182 00E6  
                        i1l2094 07C9                          i1l2086 07A5                          i1l2078 0790  
                        i1l2334 074B                          i1l2326 071B                          i1l2318 06EC  
                        i1l2350 098A                          i1l2342 096F                          i1l2510 0EBE  
                        i1l2502 0EAE                          i1l2280 02C0                          i1l2272 0285  
                        i1l2264 026E                          i1l2256 025F                          i1l2248 024F  
                        i1l2192 0130                          i1l2184 00E7                          i1l2176 00D9  
                        i1l2168 00C9                          u201_20 00A4                          i1l2096 07D2  
                        i1l2088 07AE                          i1l2336 074F                          i1l2328 0726  
                        i1l2352 0991                          i1l2344 0972                          i1l2512 0EC6  
                        i1l2504 0EB1                          i1l2520 0ED5                          u201_21 00A3  
                        i1l2290 02DA                          i1l2282 02C6                          i1l2274 0293  
                        i1l2266 0274                          i1l2258 0263                          i1l2194 0134  
                        i1l2186 0103                          i1l2178 00DD                          i1l2098 07D4  
                        i1l2338 0751                          i1l2354 0996                          i1l2346 0976  
                        i1l2514 0EC9                          i1l2506 0EB7                          i1l2522 0EF3  
                        i1l2292 02DC                          i1l2284 02CE                          i1l2276 0297  
                        i1l2268 027B                          i1l2196 0136                          i1l2188 0124  
                        i1l2348 0983                          i1l2540 0B62                          i1l2532 0B50  
                        i1l2700 0F4D                          i1l2516 0ED1                          i1l2508 0EBB  
                        i1l2294 02E7                          i1l2286 02D3                          i1l2278 02B5  
                        i1l2198 013F                          i1l2470 066B                          i1l2462 05D3  
                        i1l2550 0B86                          i1l2542 0B67                          i1l2534 0B52  
                        i1l2710 0F7B                          i1l2702 0F57                          i1l2518 0ED4  
                        i1l2296 02EB                          i1l2288 02D6                          u210_20 0156  
                        u202_20 0103                          i1l2472 0679                          i1l2464 05F4  
                        i1l2552 0B8D                          i1l2544 0B6D                          i1l2536 0B58  
                        i1l2704 0F5D                          i1l2480 0E7E                          i1l2720 0E2E  
                        i1l2712 0E0A                          u210_21 0155                          u202_21 0102  
                        i1l2298 069A                          i1l2474 0689                          i1l2466 062F  
                        i1l2546 0B7E                          i1l2538 0B5B                          i1l2554 0B95  
                        i1l2730 0F7E                          i1l2706 0F65                          i1l2490 0E94  
                        i1l2482 0E7F                          i1l2722 0E5B                          i1l2714 0E1B  
                        i1l2476 068E                          i1l2468 066A                          i1l2556 0B9A  
                        i1l2548 0B84                          i1l2740 0FBA                          i1l2732 0F93  
                        i1l2708 0F6C                          i1l2492 0E97                          i1l2484 0E83  
                        i1l2724 0E62                          i1l2716 0E1F                          u202_25 00FF  
                        i1l2478 0698                          i1l2742 0FEF                          i1l2734 0F94  
                        i1l2494 0E9D                          i1l2486 0E8C                          i1l2726 0E6A  
                        i1l2718 0E2D                          u203_20 010E                          i1l2736 0F9A  
                        i1l2496 0EA1                          i1l2488 0E90                          i1l2728 0E78  
                        i1l2760 09F6                          u211_21 0169                          u203_21 010C  
                        u211_22 0170                          i1l2738 0FB5                          i1l2690 0F25  
                        i1l2498 0EA4                          i1l2770 0A0F                          i1l2762 09FC  
                        u211_23 0177                          i1l2692 0F2B                          i1l2684 0EFD  
                        i1l2764 0A02                          i1l2756 09ED                          i1l2694 0F36  
                        i1l2686 0F11                          i1l2758 09F1                          i1l2766 0A04  
                        u220_20 0232                          u212_20 017B                          u204_20 010F  
                        i1l2696 0F3D                          i1l2688 0F1B                          i1l2856 0EDD  
                        i1l2768 0A0A                          u220_21 0231                          u212_21 017A  
                        i1l2698 0F42                          i1l2858 0EE8                          u221_20 0237  
                        u213_20 017F                          u205_20 0124                          u221_21 0236  
                        u213_21 017E                          u205_21 0123                          u230_20 0285  
                        u214_20 018F                          u206_20 0134                          u230_21 0284  
                        u214_21 018E                          u206_21 0133                          u222_25 0244  
                        u231_20 0297                          u223_20 024F                          u231_21 0296  
                        u223_21 024E                          u215_25 0193                          u207_25 0138  
                        u232_20 02A6                          u224_20 0254                          u216_20 01B6  
                        u208_20 014C                          u240_20 06A3                          u224_21 0253  
                        u216_21 01B5                          u208_21 014B                          u240_21 06A2  
                        u216_23 01B2                          u232_25 02A1                          u233_20 02B5  
                        u225_20 025F                          u217_20 01DC                          u209_20 0151  
                        u241_20 06C3                          u233_21 02B4                          u225_21 025E  
                        u217_21 01DD                          u209_21 0150                          u241_21 06C2  
                        u217_22 01E2                          u217_23 01E3                          u234_20 02C0  
                        u226_20 0267                          u218_20 01EE                          u250_20 073B  
                        u234_21 02BF                          u226_21 0266                          u218_21 01EF  
                        u218_22 01F4                          u218_23 01F5                          u250_25 0736  
                        u242_25 06D7                          u235_20 02C5                          u227_20 026E  
                        u219_20 020C                          u251_20 074B                          u243_20 06E6  
                        u235_21 02C4                          u227_21 026D                          u219_21 020B  
                        u251_21 074A                          u243_21 06E5                          u236_20 02D3  
                        u228_20 0274                          u252_20 074F                          u236_21 02D2  
                        u228_21 0273                          u252_21 074E                          u244_25 06FB  
                        u237_20 02DA                          u229_20 027B                          u245_20 0709  
                        u253_20 0976                          u237_21 02D9                          u229_21 027A  
                        u245_21 0708                          u253_21 0975                          u238_20 02EB  
                        u238_21 02EA                          u190_25 07D6                          u246_25 070F  
                        u254_25 097D                          u270_25 0B87                          u191_20 07E4  
                        u183_20 0770                          u247_20 071B                          u239_20 069F  
                        u263_20 0679                          u271_20 0B93                          u191_21 07E3  
                        u183_21 076F                          u247_21 071A                          u239_21 069E  
                        u263_21 0678                          u271_21 0B92                          u255_25 0984  
                        u263_25 0675                          u192_20 07EB                          u184_20 0788  
                        u248_20 0721                          u256_20 0990                          u264_20 0689  
                        u280_20 0F4D                          u192_21 07EA                          u248_21 0720  
                        u256_21 098F                          u264_21 0688                          u280_21 0F4C  
                        u184_25 0783                          u264_25 0685                          u280_25 0F49  
                        u193_20 0042                          u185_20 079E                          u249_20 0726  
                        u265_20 0B58                          u281_20 0F57                          u193_21 0041  
                        u185_21 079D                          u249_21 0725                          u265_21 0B57  
                        u281_21 0F56                          u281_25 0F53                          u194_20 0049  
                        u186_20 07A5                          u290_20 0FEF                          u282_20 0F5D  
                        u194_21 0048                          u186_21 07A4                          u290_21 0FEE  
                        u282_21 0F5C                          u266_25 0B5C                          u195_20 004E  
                        u267_20 0B6B                          u283_20 0F65                          u195_21 004D  
                        u267_21 0B6A                          u283_21 0F64                          u187_25 07B1  
                        u196_20 006E                          u188_20 07C1                          u276_20 0F1B  
                        u284_20 0E2C                          u292_20 09F1                          u196_21 006D  
                        u188_21 07C0                          u276_21 0F1A                          u284_21 0E2B  
                        u292_21 09F0                          u268_25 0B6E                          u276_25 0F17  
                        u284_25 0E28                          u197_20 007A                          u189_20 07C9  
                        u269_20 0B7E                          u277_20 0F25                          u285_20 0E48  
                        u293_20 09FC                          u197_21 0079                          u189_21 07C8  
                        u269_21 0B7D                          u277_21 0F24                          u293_21 09FB  
                        u269_25 0B7A                          u277_25 0F21                          u285_25 0E43  
                        u198_20 0081                          u278_20 0F2B                          u286_20 0E77  
                        u294_20 0A0A                          u198_21 0080                          u278_21 0F2A  
                        u286_21 0E76                          u294_21 0A09                          u286_25 0E73  
                        u199_20 0086                          u287_20 0F92                          u279_20 0F36  
                        u199_21 0085                          u287_21 0F91                          u279_21 0F35  
                        u287_25 0F8E                          u288_20 0F9A                          u288_21 0F99  
                        u296_27 0E16                          u289_20 0FB4                          u289_21 0FB3  
                        u289_25 0FB0                          u297_27 0E5D                          _SSPCON 0014  
                        _SSPBUF 0013                __end_of___xxtofl 075B                  __CFG_PWRTE$OFF 0000  
                     ??___fladd 0028                          ___wmul 0997                          __lastA 0062  
                        __lastB 0060                 ??_update_volume 00C1                       ??___fltol 003C  
                     ??___lwdiv 00A4                       ??___lwmod 00AC                          _config 0DA1  
              __end_of_init_adc 096F                          _volume 00C9                 write_int@number 00BD  
        ?_activateSelectedRelay 0070               __end_ofi1___lwdiv 0B9B                          saved_w 007E  
              __end_of_spiWrite 02FD                       ??_sprintf 00B2           ??_display_write_start 00A0  
                  ___xxtofl@arg 007A                    ___xxtofl@exp 0079                    ___xxtofl@val 0070  
       __end_of__initialization 002D          is_deadzone@currentStep 0043            __end_of_display_init 0C82  
                    ___fltol@f1 0038                  __pcstackCOMMON 0070            __size_of_is_deadzone 00C6  
       __end_of_handle_potmeter 1000                       ?i1___wmul 0070                 ??_start_receive 0075  
                    __pbssBANK0 005A                      __pbssBANK1 00C5           __end_of_handle_remote 0EFD  
         __end_of_handle_rotary 0F7E                      __pmaintext 09C1                         ?___wmul 00A0  
                    __pintentry 0004                         ?_config 0070                      ??i1___wmul 0074  
                __selectedInput 00CB                       ?___xxtofl 0070                    ?_write_space 00A1  
                       _SSPSTAT 0094                      __stringtab 0300                       ?_init_adc 0070  
            __size_of_write_int 0036                      _lastVolume 00C7                       ?_spiWrite 0070  
                       ___fladd 0031                ?_handle_potmeter 0070                         ___fltol 075B  
               __size_of___wmul 002A                         ___lwdiv 0BE7                         ___lwmod 0AC7  
               __size_of_config 0069                       _ANSELbits 0188                         __ptext1 0C82  
                       __ptext2 0B0A                         __ptext3 0B9B                         __ptext4 0A1E  
                       __ptext5 0A8D                         __ptext6 0D3F                         __ptext7 0CDD  
                       __ptext8 0997                         __ptext9 049D                __selectedDisplay 00CD  
                       _dpowers 0484               i1___lwdiv@divisor 0070                    __size_of_isr 0031  
             i1___lwdiv@counter 0077                      ??___xxtofl 0074                         _sprintf 049D  
         __size_of_display_init 004E            end_of_initialization 002D                      ??_init_adc 00A0  
                    ??_spiWrite 00A0                    __pstringtext 0300               handle_remote@data 0072  
             __end_of_step_size 0490               handle_remote@mask 0070           i1___wmul@multiplicand 0072  
       ??_activateSelectedRelay 00A0                       _PORTBbits 0006                       _PORTCbits 0007  
                     _PORTDbits 0008            __inputUpdateRequired 0064      handle_potmeter@currentStep 0052  
                  _display_init 0C34                     ___fladd@grs 0037               __end_of_write_int 0A54  
                 ___xxtofl@sign 0078                       _TRISAbits 0085                       _TRISBbits 0086  
                     _TRISCbits 0087                       _TRISEbits 0089                       i1___lwdiv 0B50  
                  write_int@num 00BF                    write_space@i 00A4                    write_space@x 00A6  
                 ?_update_input 0070                  __end_of___wmul 09C1           __end_of_update_volume 0CDD  
                    _write_char 0D3F                      _write_font 0CDD                  __end_of_config 0E0A  
                    _write_text 0A8D     __end_of_display_write_start 0958             start_initialization 0015  
             __size_ofi1___wmul 0028                     __end_of_isr 0A1E                      ?i1___lwdiv 0070  
          __size_of_write_space 004C                write_space@count 00A1                   ??_is_deadzone 0047  
                ??_update_input 00C1                        ??___wmul 00A4                        ??_config 00A1  
           update_volume@spaces 00C1                       ___fladd@a 0024                       ___fladd@b 0020  
                     ___latbits 0002                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
         __end_of_start_receive 0E7E               __size_of___xxtofl 00C2          __CFG_FOSC$INTRC_CLKOUT 0000  
                   sprintf@flag 00B7                     sprintf@prec 00B8               __size_of_init_adc 0017  
              ___lwdiv@dividend 00A2                        ?___fladd 0020                        ?___fltol 0038  
                      ?___lwdiv 00A0                        ?___lwmod 00A8             __end_of_is_deadzone 0699  
                   ?_write_char 0070               __size_of_spiWrite 0010                     ?_write_font 00A6  
                   ?_write_text 00B3          __size_of_handle_remote 007F          __size_of_handle_rotary 0081  
                     _lastInput 00C5                ___lwdiv@quotient 00A5                     ??i1___lwdiv 0074  
                      ?_sprintf 00AE                 _is_deadzone$867 004D               interrupt_function 0004  
                ___wmul@product 00A4                        _IOCBbits 0096                        _PIE1bits 008C  
                      _PIR1bits 000C  __size_of_activateSelectedRelay 0039                      _ADCON0bits 001F  
                   __stringbase 0312                      _ADCON1bits 009F               ___wmul@multiplier 00A0  
 __end_of_activateSelectedRelay 0A8D                        i1___wmul 096F                       _step_size 048E  
                   write_char@c 00B2        __size_of_handle_potmeter 0082                     write_font@x 00AE  
                   write_text@c 00B5            __end_of_update_input 0B50                       _write_int 0A1E  
             _display_write_end 093A             __size_of_write_char 0062                   _handle_remote 0E7E  
           __size_of_write_font 0062             __size_of_write_text 003A                   _handle_rotary 0EFD  
            ?_display_write_end 0070                     _is_deadzone 05D3             ??_display_write_end 00A0  
              __size_of___fladd 02BC                  __lastAdcResult 005E                __size_of___fltol 009C  
              __size_of___lwdiv 004D                __size_of___lwmod 0043              __end_of__stringtab 0312  
                    _ANSELHbits 0189                      sprintf@val 00B9                        ___xxtofl 0699  
               ___lwdiv@divisor 00A0                 ___lwdiv@counter 00A7                        __ptext10 0AC7  
                      __ptext11 0BE7                        __ptext20 0E0A                        __ptext12 0949  
                      __ptext21 0E7E                        __ptext13 093A                        __ptext22 0EFD  
                      __ptext14 0DA1                        __ptext23 0F7E                        __ptext15 0958  
                      __ptext24 0B50                        __ptext16 0C34                        __ptext25 05D3  
                      __ptext17 02ED                        __ptext26 096F                        __ptext18 0A54  
                      __ptext27 0699                        __ptext19 09ED                        __ptext28 075B  
                      __ptext29 0031               __CFG_BOR4V$BOR21V 0000                      ?_write_int 00BD  
     __end_of_display_write_end 0949                __size_of_sprintf 0136              i1___lwdiv@dividend 0072  
                ?_handle_remote 0070                        _ir_input 005A                  ?_handle_rotary 0070  
                      _init_adc 0958                   __size_of_main 002C               write_font@fontPos 00A6  
      handle_potmeter@ad_result 0054                        _spiWrite 02ED              i1___lwdiv@quotient 0075  
                    _INTCONbits 000B                   ??_write_space 00A3               ??_handle_potmeter 0050  
                      intlevel1 0000                       sprintf@ap 00B6    __size_of_display_write_start 000F  
                     sprintf@sp 00BB                ___lwmod@dividend 00AA          __size_of_update_volume 005B  
                     stringcode 030A                      _OSCCONbits 008F                    ??_write_char 00B0  
                  ??_write_font 00A8                    ??_write_text 00B5              handle_remote@found 0074  
                      sprintf@c 00BC                        sprintf@f 00AE           __size_of_update_input 0046  
                start_receive@i 0020                 ___lwmod@divisor 00A8                 ___lwmod@counter 00AD  
                      stringtab 0300                     ??_write_int 00BF                   ___fladd@signs 0034  
               ??_handle_remote 0070      __size_of_display_write_end 000F                 ??_handle_rotary 0070  
           __end_of_write_space 0BE7                    ___fladd@aexp 0035                    ___fladd@bexp 0036  
          is_deadzone@adcResult 0045              __end_of_write_char 0DA1              __end_of_write_font 0D3F  
            __end_of_write_text 0AC7  
